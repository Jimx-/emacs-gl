defconsti(env, "GL-UNSIGNED-BYTE-3-3-2", (GLenum) GL_UNSIGNED_BYTE_3_3_2, "GL_UNSIGNED_BYTE_3_3_2");
defconsti(env, "GL-UNSIGNED-SHORT-4-4-4-4", (GLenum) GL_UNSIGNED_SHORT_4_4_4_4, "GL_UNSIGNED_SHORT_4_4_4_4");
defconsti(env, "GL-UNSIGNED-SHORT-5-5-5-1", (GLenum) GL_UNSIGNED_SHORT_5_5_5_1, "GL_UNSIGNED_SHORT_5_5_5_1");
defconsti(env, "GL-UNSIGNED-INT-8-8-8-8", (GLenum) GL_UNSIGNED_INT_8_8_8_8, "GL_UNSIGNED_INT_8_8_8_8");
defconsti(env, "GL-UNSIGNED-INT-10-10-10-2", (GLenum) GL_UNSIGNED_INT_10_10_10_2, "GL_UNSIGNED_INT_10_10_10_2");
defconsti(env, "GL-TEXTURE-BINDING-3D", (GLenum) GL_TEXTURE_BINDING_3D, "GL_TEXTURE_BINDING_3D");
defconsti(env, "GL-PACK-SKIP-IMAGES", (GLenum) GL_PACK_SKIP_IMAGES, "GL_PACK_SKIP_IMAGES");
defconsti(env, "GL-PACK-IMAGE-HEIGHT", (GLenum) GL_PACK_IMAGE_HEIGHT, "GL_PACK_IMAGE_HEIGHT");
defconsti(env, "GL-UNPACK-SKIP-IMAGES", (GLenum) GL_UNPACK_SKIP_IMAGES, "GL_UNPACK_SKIP_IMAGES");
defconsti(env, "GL-UNPACK-IMAGE-HEIGHT", (GLenum) GL_UNPACK_IMAGE_HEIGHT, "GL_UNPACK_IMAGE_HEIGHT");
defconsti(env, "GL-TEXTURE-3D", (GLenum) GL_TEXTURE_3D, "GL_TEXTURE_3D");
defconsti(env, "GL-PROXY-TEXTURE-3D", (GLenum) GL_PROXY_TEXTURE_3D, "GL_PROXY_TEXTURE_3D");
defconsti(env, "GL-TEXTURE-DEPTH", (GLenum) GL_TEXTURE_DEPTH, "GL_TEXTURE_DEPTH");
defconsti(env, "GL-TEXTURE-WRAP-R", (GLenum) GL_TEXTURE_WRAP_R, "GL_TEXTURE_WRAP_R");
defconsti(env, "GL-MAX-3D-TEXTURE-SIZE", (GLenum) GL_MAX_3D_TEXTURE_SIZE, "GL_MAX_3D_TEXTURE_SIZE");
defconsti(env, "GL-UNSIGNED-BYTE-2-3-3-REV", (GLenum) GL_UNSIGNED_BYTE_2_3_3_REV, "GL_UNSIGNED_BYTE_2_3_3_REV");
defconsti(env, "GL-UNSIGNED-SHORT-5-6-5", (GLenum) GL_UNSIGNED_SHORT_5_6_5, "GL_UNSIGNED_SHORT_5_6_5");
defconsti(env, "GL-UNSIGNED-SHORT-5-6-5-REV", (GLenum) GL_UNSIGNED_SHORT_5_6_5_REV, "GL_UNSIGNED_SHORT_5_6_5_REV");
defconsti(env, "GL-UNSIGNED-SHORT-4-4-4-4-REV", (GLenum) GL_UNSIGNED_SHORT_4_4_4_4_REV, "GL_UNSIGNED_SHORT_4_4_4_4_REV");
defconsti(env, "GL-UNSIGNED-SHORT-1-5-5-5-REV", (GLenum) GL_UNSIGNED_SHORT_1_5_5_5_REV, "GL_UNSIGNED_SHORT_1_5_5_5_REV");
defconsti(env, "GL-UNSIGNED-INT-8-8-8-8-REV", (GLenum) GL_UNSIGNED_INT_8_8_8_8_REV, "GL_UNSIGNED_INT_8_8_8_8_REV");
defconsti(env, "GL-UNSIGNED-INT-2-10-10-10-REV", (GLenum) GL_UNSIGNED_INT_2_10_10_10_REV, "GL_UNSIGNED_INT_2_10_10_10_REV");
defconsti(env, "GL-BGR", (GLenum) GL_BGR, "GL_BGR");
defconsti(env, "GL-BGRA", (GLenum) GL_BGRA, "GL_BGRA");
defconsti(env, "GL-MAX-ELEMENTS-VERTICES", (GLenum) GL_MAX_ELEMENTS_VERTICES, "GL_MAX_ELEMENTS_VERTICES");
defconsti(env, "GL-MAX-ELEMENTS-INDICES", (GLenum) GL_MAX_ELEMENTS_INDICES, "GL_MAX_ELEMENTS_INDICES");
defconsti(env, "GL-CLAMP-TO-EDGE", (GLenum) GL_CLAMP_TO_EDGE, "GL_CLAMP_TO_EDGE");
defconsti(env, "GL-TEXTURE-MIN-LOD", (GLenum) GL_TEXTURE_MIN_LOD, "GL_TEXTURE_MIN_LOD");
defconsti(env, "GL-TEXTURE-MAX-LOD", (GLenum) GL_TEXTURE_MAX_LOD, "GL_TEXTURE_MAX_LOD");
defconsti(env, "GL-TEXTURE-BASE-LEVEL", (GLenum) GL_TEXTURE_BASE_LEVEL, "GL_TEXTURE_BASE_LEVEL");
defconsti(env, "GL-TEXTURE-MAX-LEVEL", (GLenum) GL_TEXTURE_MAX_LEVEL, "GL_TEXTURE_MAX_LEVEL");
defconsti(env, "GL-SMOOTH-POINT-SIZE-RANGE", (GLenum) GL_SMOOTH_POINT_SIZE_RANGE, "GL_SMOOTH_POINT_SIZE_RANGE");
defconsti(env, "GL-SMOOTH-POINT-SIZE-GRANULARITY", (GLenum) GL_SMOOTH_POINT_SIZE_GRANULARITY, "GL_SMOOTH_POINT_SIZE_GRANULARITY");
defconsti(env, "GL-SMOOTH-LINE-WIDTH-RANGE", (GLenum) GL_SMOOTH_LINE_WIDTH_RANGE, "GL_SMOOTH_LINE_WIDTH_RANGE");
defconsti(env, "GL-SMOOTH-LINE-WIDTH-GRANULARITY", (GLenum) GL_SMOOTH_LINE_WIDTH_GRANULARITY, "GL_SMOOTH_LINE_WIDTH_GRANULARITY");
defconsti(env, "GL-ALIASED-LINE-WIDTH-RANGE", (GLenum) GL_ALIASED_LINE_WIDTH_RANGE, "GL_ALIASED_LINE_WIDTH_RANGE");
defconsti(env, "GL-RESCALE-NORMAL", (GLenum) GL_RESCALE_NORMAL, "GL_RESCALE_NORMAL");
defconsti(env, "GL-LIGHT-MODEL-COLOR-CONTROL", (GLenum) GL_LIGHT_MODEL_COLOR_CONTROL, "GL_LIGHT_MODEL_COLOR_CONTROL");
defconsti(env, "GL-SINGLE-COLOR", (GLenum) GL_SINGLE_COLOR, "GL_SINGLE_COLOR");
defconsti(env, "GL-SEPARATE-SPECULAR-COLOR", (GLenum) GL_SEPARATE_SPECULAR_COLOR, "GL_SEPARATE_SPECULAR_COLOR");
defconsti(env, "GL-ALIASED-POINT-SIZE-RANGE", (GLenum) GL_ALIASED_POINT_SIZE_RANGE, "GL_ALIASED_POINT_SIZE_RANGE");
