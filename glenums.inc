#if defined(GL_FILL_NV)
defconsti(env, "GL-FILL-NV", (GLenum) GL_FILL_NV, "GL_FILL_NV");
#endif
#if defined(GL_FRAGMENT_PROGRAM_ARB)
defconsti(env, "GL-FRAGMENT-PROGRAM-ARB", (GLenum) GL_FRAGMENT_PROGRAM_ARB, "GL_FRAGMENT_PROGRAM_ARB");
#endif
#if defined(GL_VERTEX_PROGRAM_ARB)
defconsti(env, "GL-VERTEX-PROGRAM-ARB", (GLenum) GL_VERTEX_PROGRAM_ARB, "GL_VERTEX_PROGRAM_ARB");
#endif
#if defined(GL_TEXT_FRAGMENT_SHADER_ATI)
defconsti(env, "GL-TEXT-FRAGMENT-SHADER-ATI", (GLenum) GL_TEXT_FRAGMENT_SHADER_ATI, "GL_TEXT_FRAGMENT_SHADER_ATI");
#endif
#if defined(GL_COMPUTE_PROGRAM_NV)
defconsti(env, "GL-COMPUTE-PROGRAM-NV", (GLenum) GL_COMPUTE_PROGRAM_NV, "GL_COMPUTE_PROGRAM_NV");
#endif
#if defined(GL_GEOMETRY_PROGRAM_NV)
defconsti(env, "GL-GEOMETRY-PROGRAM-NV", (GLenum) GL_GEOMETRY_PROGRAM_NV, "GL_GEOMETRY_PROGRAM_NV");
#endif
#if defined(GL_TESS_CONTROL_PROGRAM_NV)
defconsti(env, "GL-TESS-CONTROL-PROGRAM-NV", (GLenum) GL_TESS_CONTROL_PROGRAM_NV, "GL_TESS_CONTROL_PROGRAM_NV");
#endif
#if defined(GL_TESS_EVALUATION_PROGRAM_NV)
defconsti(env, "GL-TESS-EVALUATION-PROGRAM-NV", (GLenum) GL_TESS_EVALUATION_PROGRAM_NV, "GL_TESS_EVALUATION_PROGRAM_NV");
#endif
#if defined(GL_COMBINER0_NV)
defconsti(env, "GL-COMBINER0-NV", (GLenum) GL_COMBINER0_NV, "GL_COMBINER0_NV");
#endif
#if defined(GL_COMBINER1_NV)
defconsti(env, "GL-COMBINER1-NV", (GLenum) GL_COMBINER1_NV, "GL_COMBINER1_NV");
#endif
#if defined(GL_COMBINER2_NV)
defconsti(env, "GL-COMBINER2-NV", (GLenum) GL_COMBINER2_NV, "GL_COMBINER2_NV");
#endif
#if defined(GL_COMBINER3_NV)
defconsti(env, "GL-COMBINER3-NV", (GLenum) GL_COMBINER3_NV, "GL_COMBINER3_NV");
#endif
#if defined(GL_COMBINER4_NV)
defconsti(env, "GL-COMBINER4-NV", (GLenum) GL_COMBINER4_NV, "GL_COMBINER4_NV");
#endif
#if defined(GL_COMBINER5_NV)
defconsti(env, "GL-COMBINER5-NV", (GLenum) GL_COMBINER5_NV, "GL_COMBINER5_NV");
#endif
#if defined(GL_COMBINER6_NV)
defconsti(env, "GL-COMBINER6-NV", (GLenum) GL_COMBINER6_NV, "GL_COMBINER6_NV");
#endif
#if defined(GL_COMBINER7_NV)
defconsti(env, "GL-COMBINER7-NV", (GLenum) GL_COMBINER7_NV, "GL_COMBINER7_NV");
#endif
#if defined(GL_RGB)
defconsti(env, "GL-RGB", (GLenum) GL_RGB, "GL_RGB");
#endif
#if defined(GL_ALPHA)
defconsti(env, "GL-ALPHA", (GLenum) GL_ALPHA, "GL_ALPHA");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_DOUBLE)
defconsti(env, "GL-DOUBLE", (GLenum) GL_DOUBLE, "GL_DOUBLE");
#endif
#if defined(GL_UNSIGNED_BYTE)
defconsti(env, "GL-UNSIGNED-BYTE", (GLenum) GL_UNSIGNED_BYTE, "GL_UNSIGNED_BYTE");
#endif
#if defined(GL_UNSIGNED_SHORT)
defconsti(env, "GL-UNSIGNED-SHORT", (GLenum) GL_UNSIGNED_SHORT, "GL_UNSIGNED_SHORT");
#endif
#if defined(GL_UNSIGNED_INT)
defconsti(env, "GL-UNSIGNED-INT", (GLenum) GL_UNSIGNED_INT, "GL_UNSIGNED_INT");
#endif
#if defined(GL_CURRENT_TEXTURE_COORDS)
defconsti(env, "GL-CURRENT-TEXTURE-COORDS", (GLenum) GL_CURRENT_TEXTURE_COORDS, "GL_CURRENT_TEXTURE_COORDS");
#endif
#if defined(GL_TEXTURE_MATRIX)
defconsti(env, "GL-TEXTURE-MATRIX", (GLenum) GL_TEXTURE_MATRIX, "GL_TEXTURE_MATRIX");
#endif
#if defined(GL_PROGRAM_STRING_ARB)
defconsti(env, "GL-PROGRAM-STRING-ARB", (GLenum) GL_PROGRAM_STRING_ARB, "GL_PROGRAM_STRING_ARB");
#endif
#if defined(GL_PROGRAM_FORMAT_ASCII_ARB)
defconsti(env, "GL-PROGRAM-FORMAT-ASCII-ARB", (GLenum) GL_PROGRAM_FORMAT_ASCII_ARB, "GL_PROGRAM_FORMAT_ASCII_ARB");
#endif
#if defined(GL_NONE)
defconsti(env, "GL-NONE", (GLenum) GL_NONE, "GL_NONE");
#endif
#if defined(GL_LUMINANCE)
defconsti(env, "GL-LUMINANCE", (GLenum) GL_LUMINANCE, "GL_LUMINANCE");
#endif
#if defined(GL_ALPHA)
defconsti(env, "GL-ALPHA", (GLenum) GL_ALPHA, "GL_ALPHA");
#endif
#if defined(GL_INTENSITY)
defconsti(env, "GL-INTENSITY", (GLenum) GL_INTENSITY, "GL_INTENSITY");
#endif
#if defined(GL_LUMINANCE_ALPHA)
defconsti(env, "GL-LUMINANCE-ALPHA", (GLenum) GL_LUMINANCE_ALPHA, "GL_LUMINANCE_ALPHA");
#endif
#if defined(GL_RGB)
defconsti(env, "GL-RGB", (GLenum) GL_RGB, "GL_RGB");
#endif
#if defined(GL_RGBA)
defconsti(env, "GL-RGBA", (GLenum) GL_RGBA, "GL_RGBA");
#endif
#if defined(GL_UNSIGNED_BYTE)
defconsti(env, "GL-UNSIGNED-BYTE", (GLenum) GL_UNSIGNED_BYTE, "GL_UNSIGNED_BYTE");
#endif
#if defined(GL_UNSIGNED_SHORT)
defconsti(env, "GL-UNSIGNED-SHORT", (GLenum) GL_UNSIGNED_SHORT, "GL_UNSIGNED_SHORT");
#endif
#if defined(GL_UNSIGNED_INT)
defconsti(env, "GL-UNSIGNED-INT", (GLenum) GL_UNSIGNED_INT, "GL_UNSIGNED_INT");
#endif
#if defined(GL_SHORT)
defconsti(env, "GL-SHORT", (GLenum) GL_SHORT, "GL_SHORT");
#endif
#if defined(GL_INT)
defconsti(env, "GL-INT", (GLenum) GL_INT, "GL_INT");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_DOUBLE)
defconsti(env, "GL-DOUBLE", (GLenum) GL_DOUBLE, "GL_DOUBLE");
#endif
#if defined(GL_FRAGMENT_LIGHT0_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT0-SGIX", (GLenum) GL_FRAGMENT_LIGHT0_SGIX, "GL_FRAGMENT_LIGHT0_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT1_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT1-SGIX", (GLenum) GL_FRAGMENT_LIGHT1_SGIX, "GL_FRAGMENT_LIGHT1_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT2_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT2-SGIX", (GLenum) GL_FRAGMENT_LIGHT2_SGIX, "GL_FRAGMENT_LIGHT2_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT3_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT3-SGIX", (GLenum) GL_FRAGMENT_LIGHT3_SGIX, "GL_FRAGMENT_LIGHT3_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT4_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT4-SGIX", (GLenum) GL_FRAGMENT_LIGHT4_SGIX, "GL_FRAGMENT_LIGHT4_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT5_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT5-SGIX", (GLenum) GL_FRAGMENT_LIGHT5_SGIX, "GL_FRAGMENT_LIGHT5_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT6_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT6-SGIX", (GLenum) GL_FRAGMENT_LIGHT6_SGIX, "GL_FRAGMENT_LIGHT6_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT7_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT7-SGIX", (GLenum) GL_FRAGMENT_LIGHT7_SGIX, "GL_FRAGMENT_LIGHT7_SGIX");
#endif
#if defined(GL_SPOT_EXPONENT)
defconsti(env, "GL-SPOT-EXPONENT", (GLenum) GL_SPOT_EXPONENT, "GL_SPOT_EXPONENT");
#endif
#if defined(GL_SPOT_CUTOFF)
defconsti(env, "GL-SPOT-CUTOFF", (GLenum) GL_SPOT_CUTOFF, "GL_SPOT_CUTOFF");
#endif
#if defined(GL_CONSTANT_ATTENUATION)
defconsti(env, "GL-CONSTANT-ATTENUATION", (GLenum) GL_CONSTANT_ATTENUATION, "GL_CONSTANT_ATTENUATION");
#endif
#if defined(GL_LINEAR_ATTENUATION)
defconsti(env, "GL-LINEAR-ATTENUATION", (GLenum) GL_LINEAR_ATTENUATION, "GL_LINEAR_ATTENUATION");
#endif
#if defined(GL_QUADRATIC_ATTENUATION)
defconsti(env, "GL-QUADRATIC-ATTENUATION", (GLenum) GL_QUADRATIC_ATTENUATION, "GL_QUADRATIC_ATTENUATION");
#endif
#if defined(GL_AMBIENT)
defconsti(env, "GL-AMBIENT", (GLenum) GL_AMBIENT, "GL_AMBIENT");
#endif
#if defined(GL_DIFFUSE)
defconsti(env, "GL-DIFFUSE", (GLenum) GL_DIFFUSE, "GL_DIFFUSE");
#endif
#if defined(GL_SPECULAR)
defconsti(env, "GL-SPECULAR", (GLenum) GL_SPECULAR, "GL_SPECULAR");
#endif
#if defined(GL_POSITION)
defconsti(env, "GL-POSITION", (GLenum) GL_POSITION, "GL_POSITION");
#endif
#if defined(GL_SPOT_DIRECTION)
defconsti(env, "GL-SPOT-DIRECTION", (GLenum) GL_SPOT_DIRECTION, "GL_SPOT_DIRECTION");
#endif
#if defined(GL_UNSIGNED_BYTE)
defconsti(env, "GL-UNSIGNED-BYTE", (GLenum) GL_UNSIGNED_BYTE, "GL_UNSIGNED_BYTE");
#endif
#if defined(GL_UNSIGNED_SHORT)
defconsti(env, "GL-UNSIGNED-SHORT", (GLenum) GL_UNSIGNED_SHORT, "GL_UNSIGNED_SHORT");
#endif
#if defined(GL_UNSIGNED_INT)
defconsti(env, "GL-UNSIGNED-INT", (GLenum) GL_UNSIGNED_INT, "GL_UNSIGNED_INT");
#endif
#if defined(GL_UNSIGNED_BYTE)
defconsti(env, "GL-UNSIGNED-BYTE", (GLenum) GL_UNSIGNED_BYTE, "GL_UNSIGNED_BYTE");
#endif
#if defined(GL_UNSIGNED_SHORT)
defconsti(env, "GL-UNSIGNED-SHORT", (GLenum) GL_UNSIGNED_SHORT, "GL_UNSIGNED_SHORT");
#endif
#if defined(GL_UNSIGNED_INT)
defconsti(env, "GL-UNSIGNED-INT", (GLenum) GL_UNSIGNED_INT, "GL_UNSIGNED_INT");
#endif
#if defined(GL_BYTE)
defconsti(env, "GL-BYTE", (GLenum) GL_BYTE, "GL_BYTE");
#endif
#if defined(GL_UNSIGNED_BYTE)
defconsti(env, "GL-UNSIGNED-BYTE", (GLenum) GL_UNSIGNED_BYTE, "GL_UNSIGNED_BYTE");
#endif
#if defined(GL_SHORT)
defconsti(env, "GL-SHORT", (GLenum) GL_SHORT, "GL_SHORT");
#endif
#if defined(GL_UNSIGNED_SHORT)
defconsti(env, "GL-UNSIGNED-SHORT", (GLenum) GL_UNSIGNED_SHORT, "GL_UNSIGNED_SHORT");
#endif
#if defined(GL_INT)
defconsti(env, "GL-INT", (GLenum) GL_INT, "GL_INT");
#endif
#if defined(GL_UNSIGNED_INT)
defconsti(env, "GL-UNSIGNED-INT", (GLenum) GL_UNSIGNED_INT, "GL_UNSIGNED_INT");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_DOUBLE)
defconsti(env, "GL-DOUBLE", (GLenum) GL_DOUBLE, "GL_DOUBLE");
#endif
#if defined(GL_CULL_VERTEX_EYE_POSITION_EXT)
defconsti(env, "GL-CULL-VERTEX-EYE-POSITION-EXT", (GLenum) GL_CULL_VERTEX_EYE_POSITION_EXT, "GL_CULL_VERTEX_EYE_POSITION_EXT");
#endif
#if defined(GL_CULL_VERTEX_OBJECT_POSITION_EXT)
defconsti(env, "GL-CULL-VERTEX-OBJECT-POSITION-EXT", (GLenum) GL_CULL_VERTEX_OBJECT_POSITION_EXT, "GL_CULL_VERTEX_OBJECT_POSITION_EXT");
#endif
#if defined(GL_SCALAR_EXT)
defconsti(env, "GL-SCALAR-EXT", (GLenum) GL_SCALAR_EXT, "GL_SCALAR_EXT");
#endif
#if defined(GL_VECTOR_EXT)
defconsti(env, "GL-VECTOR-EXT", (GLenum) GL_VECTOR_EXT, "GL_VECTOR_EXT");
#endif
#if defined(GL_MATRIX_EXT)
defconsti(env, "GL-MATRIX-EXT", (GLenum) GL_MATRIX_EXT, "GL_MATRIX_EXT");
#endif
#if defined(GL_NORMALIZED_RANGE_EXT)
defconsti(env, "GL-NORMALIZED-RANGE-EXT", (GLenum) GL_NORMALIZED_RANGE_EXT, "GL_NORMALIZED_RANGE_EXT");
#endif
#if defined(GL_FULL_RANGE_EXT)
defconsti(env, "GL-FULL-RANGE-EXT", (GLenum) GL_FULL_RANGE_EXT, "GL_FULL_RANGE_EXT");
#endif
#if defined(GL_VARIANT_VALUE_EXT)
defconsti(env, "GL-VARIANT-VALUE-EXT", (GLenum) GL_VARIANT_VALUE_EXT, "GL_VARIANT_VALUE_EXT");
#endif
#if defined(GL_VARIANT_DATATYPE_EXT)
defconsti(env, "GL-VARIANT-DATATYPE-EXT", (GLenum) GL_VARIANT_DATATYPE_EXT, "GL_VARIANT_DATATYPE_EXT");
#endif
#if defined(GL_VARIANT_ARRAY_STRIDE_EXT)
defconsti(env, "GL-VARIANT-ARRAY-STRIDE-EXT", (GLenum) GL_VARIANT_ARRAY_STRIDE_EXT, "GL_VARIANT_ARRAY_STRIDE_EXT");
#endif
#if defined(GL_VARIANT_ARRAY_TYPE_EXT)
defconsti(env, "GL-VARIANT-ARRAY-TYPE-EXT", (GLenum) GL_VARIANT_ARRAY_TYPE_EXT, "GL_VARIANT_ARRAY_TYPE_EXT");
#endif
#if defined(GL_NEVER)
defconsti(env, "GL-NEVER", (GLenum) GL_NEVER, "GL_NEVER");
#endif
#if defined(GL_ALWAYS)
defconsti(env, "GL-ALWAYS", (GLenum) GL_ALWAYS, "GL_ALWAYS");
#endif
#if defined(GL_LESS)
defconsti(env, "GL-LESS", (GLenum) GL_LESS, "GL_LESS");
#endif
#if defined(GL_LEQUAL)
defconsti(env, "GL-LEQUAL", (GLenum) GL_LEQUAL, "GL_LEQUAL");
#endif
#if defined(GL_EQUAL)
defconsti(env, "GL-EQUAL", (GLenum) GL_EQUAL, "GL_EQUAL");
#endif
#if defined(GL_GEQUAL)
defconsti(env, "GL-GEQUAL", (GLenum) GL_GEQUAL, "GL_GEQUAL");
#endif
#if defined(GL_GREATER)
defconsti(env, "GL-GREATER", (GLenum) GL_GREATER, "GL_GREATER");
#endif
#if defined(GL_NOTEQUAL)
defconsti(env, "GL-NOTEQUAL", (GLenum) GL_NOTEQUAL, "GL_NOTEQUAL");
#endif
#if defined(GL_INDEX_OFFSET)
defconsti(env, "GL-INDEX-OFFSET", (GLenum) GL_INDEX_OFFSET, "GL_INDEX_OFFSET");
#endif
#if defined(GL_VARIANT_ARRAY_EXT)
defconsti(env, "GL-VARIANT-ARRAY-EXT", (GLenum) GL_VARIANT_ARRAY_EXT, "GL_VARIANT_ARRAY_EXT");
#endif
#if defined(GL_PIXEL_TRANSFORM_2D_EXT)
defconsti(env, "GL-PIXEL-TRANSFORM-2D-EXT", (GLenum) GL_PIXEL_TRANSFORM_2D_EXT, "GL_PIXEL_TRANSFORM_2D_EXT");
#endif
#if defined(GL_PIXEL_MAG_FILTER_EXT)
defconsti(env, "GL-PIXEL-MAG-FILTER-EXT", (GLenum) GL_PIXEL_MAG_FILTER_EXT, "GL_PIXEL_MAG_FILTER_EXT");
#endif
#if defined(GL_PIXEL_MIN_FILTER_EXT)
defconsti(env, "GL-PIXEL-MIN-FILTER-EXT", (GLenum) GL_PIXEL_MIN_FILTER_EXT, "GL_PIXEL_MIN_FILTER_EXT");
#endif
#if defined(GL_PIXEL_CUBIC_WEIGHT_EXT)
defconsti(env, "GL-PIXEL-CUBIC-WEIGHT-EXT", (GLenum) GL_PIXEL_CUBIC_WEIGHT_EXT, "GL_PIXEL_CUBIC_WEIGHT_EXT");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_TRUE)
defconsti(env, "GL-TRUE", (GLenum) GL_TRUE, "GL_TRUE");
#endif
#if defined(GL_FALSE)
defconsti(env, "GL-FALSE", (GLenum) GL_FALSE, "GL_FALSE");
#endif
#if defined(GL_RGB)
defconsti(env, "GL-RGB", (GLenum) GL_RGB, "GL_RGB");
#endif
#if defined(GL_ALPHA)
defconsti(env, "GL-ALPHA", (GLenum) GL_ALPHA, "GL_ALPHA");
#endif
#if defined(GL_BLUE)
defconsti(env, "GL-BLUE", (GLenum) GL_BLUE, "GL_BLUE");
#endif
#if defined(GL_BYTE)
defconsti(env, "GL-BYTE", (GLenum) GL_BYTE, "GL_BYTE");
#endif
#if defined(GL_SHORT)
defconsti(env, "GL-SHORT", (GLenum) GL_SHORT, "GL_SHORT");
#endif
#if defined(GL_INT)
defconsti(env, "GL-INT", (GLenum) GL_INT, "GL_INT");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_DOUBLE)
defconsti(env, "GL-DOUBLE", (GLenum) GL_DOUBLE, "GL_DOUBLE");
#endif
#if defined(GL_DOUBLE_EXT)
defconsti(env, "GL-DOUBLE-EXT", (GLenum) GL_DOUBLE_EXT, "GL_DOUBLE_EXT");
#endif
#if defined(GL_BYTE)
defconsti(env, "GL-BYTE", (GLenum) GL_BYTE, "GL_BYTE");
#endif
#if defined(GL_SHORT)
defconsti(env, "GL-SHORT", (GLenum) GL_SHORT, "GL_SHORT");
#endif
#if defined(GL_INT)
defconsti(env, "GL-INT", (GLenum) GL_INT, "GL_INT");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_DOUBLE)
defconsti(env, "GL-DOUBLE", (GLenum) GL_DOUBLE, "GL_DOUBLE");
#endif
#if defined(GL_DOUBLE_EXT)
defconsti(env, "GL-DOUBLE-EXT", (GLenum) GL_DOUBLE_EXT, "GL_DOUBLE_EXT");
#endif
#if defined(GL_PERTURB_EXT)
defconsti(env, "GL-PERTURB-EXT", (GLenum) GL_PERTURB_EXT, "GL_PERTURB_EXT");
#endif
#if defined(GL_ATTENUATION_EXT)
defconsti(env, "GL-ATTENUATION-EXT", (GLenum) GL_ATTENUATION_EXT, "GL_ATTENUATION_EXT");
#endif
#if defined(GL_SHADOW_ATTENUATION_EXT)
defconsti(env, "GL-SHADOW-ATTENUATION-EXT", (GLenum) GL_SHADOW_ATTENUATION_EXT, "GL_SHADOW_ATTENUATION_EXT");
#endif
#if defined(GL_X_EXT)
defconsti(env, "GL-X-EXT", (GLenum) GL_X_EXT, "GL_X_EXT");
#endif
#if defined(GL_Y_EXT)
defconsti(env, "GL-Y-EXT", (GLenum) GL_Y_EXT, "GL_Y_EXT");
#endif
#if defined(GL_Z_EXT)
defconsti(env, "GL-Z-EXT", (GLenum) GL_Z_EXT, "GL_Z_EXT");
#endif
#if defined(GL_W_EXT)
defconsti(env, "GL-W-EXT", (GLenum) GL_W_EXT, "GL_W_EXT");
#endif
#if defined(GL_NEGATIVE_X_EXT)
defconsti(env, "GL-NEGATIVE-X-EXT", (GLenum) GL_NEGATIVE_X_EXT, "GL_NEGATIVE_X_EXT");
#endif
#if defined(GL_NEGATIVE_Y_EXT)
defconsti(env, "GL-NEGATIVE-Y-EXT", (GLenum) GL_NEGATIVE_Y_EXT, "GL_NEGATIVE_Y_EXT");
#endif
#if defined(GL_NEGATIVE_Z_EXT)
defconsti(env, "GL-NEGATIVE-Z-EXT", (GLenum) GL_NEGATIVE_Z_EXT, "GL_NEGATIVE_Z_EXT");
#endif
#if defined(GL_NEGATIVE_W_EXT)
defconsti(env, "GL-NEGATIVE-W-EXT", (GLenum) GL_NEGATIVE_W_EXT, "GL_NEGATIVE_W_EXT");
#endif
#if defined(GL_ZERO_EXT)
defconsti(env, "GL-ZERO-EXT", (GLenum) GL_ZERO_EXT, "GL_ZERO_EXT");
#endif
#if defined(GL_ONE_EXT)
defconsti(env, "GL-ONE-EXT", (GLenum) GL_ONE_EXT, "GL_ONE_EXT");
#endif
#if defined(GL_NEGATIVE_ONE_EXT)
defconsti(env, "GL-NEGATIVE-ONE-EXT", (GLenum) GL_NEGATIVE_ONE_EXT, "GL_NEGATIVE_ONE_EXT");
#endif
#if defined(GL_1PASS_EXT)
defconsti(env, "GL-1PASS-EXT", (GLenum) GL_1PASS_EXT, "GL_1PASS_EXT");
#endif
#if defined(GL_2PASS_0_EXT)
defconsti(env, "GL-2PASS-0-EXT", (GLenum) GL_2PASS_0_EXT, "GL_2PASS_0_EXT");
#endif
#if defined(GL_2PASS_1_EXT)
defconsti(env, "GL-2PASS-1-EXT", (GLenum) GL_2PASS_1_EXT, "GL_2PASS_1_EXT");
#endif
#if defined(GL_4PASS_0_EXT)
defconsti(env, "GL-4PASS-0-EXT", (GLenum) GL_4PASS_0_EXT, "GL_4PASS_0_EXT");
#endif
#if defined(GL_4PASS_1_EXT)
defconsti(env, "GL-4PASS-1-EXT", (GLenum) GL_4PASS_1_EXT, "GL_4PASS_1_EXT");
#endif
#if defined(GL_4PASS_2_EXT)
defconsti(env, "GL-4PASS-2-EXT", (GLenum) GL_4PASS_2_EXT, "GL_4PASS_2_EXT");
#endif
#if defined(GL_4PASS_3_EXT)
defconsti(env, "GL-4PASS-3-EXT", (GLenum) GL_4PASS_3_EXT, "GL_4PASS_3_EXT");
#endif
#if defined(GL_VARIANT_EXT)
defconsti(env, "GL-VARIANT-EXT", (GLenum) GL_VARIANT_EXT, "GL_VARIANT_EXT");
#endif
#if defined(GL_INVARIANT_EXT)
defconsti(env, "GL-INVARIANT-EXT", (GLenum) GL_INVARIANT_EXT, "GL_INVARIANT_EXT");
#endif
#if defined(GL_LOCAL_CONSTANT_EXT)
defconsti(env, "GL-LOCAL-CONSTANT-EXT", (GLenum) GL_LOCAL_CONSTANT_EXT, "GL_LOCAL_CONSTANT_EXT");
#endif
#if defined(GL_LOCAL_EXT)
defconsti(env, "GL-LOCAL-EXT", (GLenum) GL_LOCAL_EXT, "GL_LOCAL_EXT");
#endif
#if defined(GL_CURRENT_VERTEX_EXT)
defconsti(env, "GL-CURRENT-VERTEX-EXT", (GLenum) GL_CURRENT_VERTEX_EXT, "GL_CURRENT_VERTEX_EXT");
#endif
#if defined(GL_MVP_MATRIX_EXT)
defconsti(env, "GL-MVP-MATRIX-EXT", (GLenum) GL_MVP_MATRIX_EXT, "GL_MVP_MATRIX_EXT");
#endif
#if defined(GL_FRAGMENT_MATERIAL_EXT)
defconsti(env, "GL-FRAGMENT-MATERIAL-EXT", (GLenum) GL_FRAGMENT_MATERIAL_EXT, "GL_FRAGMENT_MATERIAL_EXT");
#endif
#if defined(GL_FRAGMENT_NORMAL_EXT)
defconsti(env, "GL-FRAGMENT-NORMAL-EXT", (GLenum) GL_FRAGMENT_NORMAL_EXT, "GL_FRAGMENT_NORMAL_EXT");
#endif
#if defined(GL_FRAGMENT_DEPTH_EXT)
defconsti(env, "GL-FRAGMENT-DEPTH-EXT", (GLenum) GL_FRAGMENT_DEPTH_EXT, "GL_FRAGMENT_DEPTH_EXT");
#endif
#if defined(GL_FRAGMENT_COLOR_EXT)
defconsti(env, "GL-FRAGMENT-COLOR-EXT", (GLenum) GL_FRAGMENT_COLOR_EXT, "GL_FRAGMENT_COLOR_EXT");
#endif
#if defined(GL_OP_INDEX_EXT)
defconsti(env, "GL-OP-INDEX-EXT", (GLenum) GL_OP_INDEX_EXT, "GL_OP_INDEX_EXT");
#endif
#if defined(GL_OP_NEGATE_EXT)
defconsti(env, "GL-OP-NEGATE-EXT", (GLenum) GL_OP_NEGATE_EXT, "GL_OP_NEGATE_EXT");
#endif
#if defined(GL_OP_DOT3_EXT)
defconsti(env, "GL-OP-DOT3-EXT", (GLenum) GL_OP_DOT3_EXT, "GL_OP_DOT3_EXT");
#endif
#if defined(GL_OP_DOT4_EXT)
defconsti(env, "GL-OP-DOT4-EXT", (GLenum) GL_OP_DOT4_EXT, "GL_OP_DOT4_EXT");
#endif
#if defined(GL_OP_MUL_EXT)
defconsti(env, "GL-OP-MUL-EXT", (GLenum) GL_OP_MUL_EXT, "GL_OP_MUL_EXT");
#endif
#if defined(GL_OP_ADD_EXT)
defconsti(env, "GL-OP-ADD-EXT", (GLenum) GL_OP_ADD_EXT, "GL_OP_ADD_EXT");
#endif
#if defined(GL_OP_MADD_EXT)
defconsti(env, "GL-OP-MADD-EXT", (GLenum) GL_OP_MADD_EXT, "GL_OP_MADD_EXT");
#endif
#if defined(GL_OP_FRAC_EXT)
defconsti(env, "GL-OP-FRAC-EXT", (GLenum) GL_OP_FRAC_EXT, "GL_OP_FRAC_EXT");
#endif
#if defined(GL_OP_MAX_EXT)
defconsti(env, "GL-OP-MAX-EXT", (GLenum) GL_OP_MAX_EXT, "GL_OP_MAX_EXT");
#endif
#if defined(GL_OP_MIN_EXT)
defconsti(env, "GL-OP-MIN-EXT", (GLenum) GL_OP_MIN_EXT, "GL_OP_MIN_EXT");
#endif
#if defined(GL_OP_SET_GE_EXT)
defconsti(env, "GL-OP-SET-GE-EXT", (GLenum) GL_OP_SET_GE_EXT, "GL_OP_SET_GE_EXT");
#endif
#if defined(GL_OP_SET_LT_EXT)
defconsti(env, "GL-OP-SET-LT-EXT", (GLenum) GL_OP_SET_LT_EXT, "GL_OP_SET_LT_EXT");
#endif
#if defined(GL_OP_CLAMP_EXT)
defconsti(env, "GL-OP-CLAMP-EXT", (GLenum) GL_OP_CLAMP_EXT, "GL_OP_CLAMP_EXT");
#endif
#if defined(GL_OP_FLOOR_EXT)
defconsti(env, "GL-OP-FLOOR-EXT", (GLenum) GL_OP_FLOOR_EXT, "GL_OP_FLOOR_EXT");
#endif
#if defined(GL_OP_ROUND_EXT)
defconsti(env, "GL-OP-ROUND-EXT", (GLenum) GL_OP_ROUND_EXT, "GL_OP_ROUND_EXT");
#endif
#if defined(GL_OP_EXP_BASE_2_EXT)
defconsti(env, "GL-OP-EXP-BASE-2-EXT", (GLenum) GL_OP_EXP_BASE_2_EXT, "GL_OP_EXP_BASE_2_EXT");
#endif
#if defined(GL_OP_LOG_BASE_2_EXT)
defconsti(env, "GL-OP-LOG-BASE-2-EXT", (GLenum) GL_OP_LOG_BASE_2_EXT, "GL_OP_LOG_BASE_2_EXT");
#endif
#if defined(GL_OP_POWER_EXT)
defconsti(env, "GL-OP-POWER-EXT", (GLenum) GL_OP_POWER_EXT, "GL_OP_POWER_EXT");
#endif
#if defined(GL_OP_RECIP_EXT)
defconsti(env, "GL-OP-RECIP-EXT", (GLenum) GL_OP_RECIP_EXT, "GL_OP_RECIP_EXT");
#endif
#if defined(GL_OP_RECIP_SQRT_EXT)
defconsti(env, "GL-OP-RECIP-SQRT-EXT", (GLenum) GL_OP_RECIP_SQRT_EXT, "GL_OP_RECIP_SQRT_EXT");
#endif
#if defined(GL_OP_SUB_EXT)
defconsti(env, "GL-OP-SUB-EXT", (GLenum) GL_OP_SUB_EXT, "GL_OP_SUB_EXT");
#endif
#if defined(GL_OP_CROSS_PRODUCT_EXT)
defconsti(env, "GL-OP-CROSS-PRODUCT-EXT", (GLenum) GL_OP_CROSS_PRODUCT_EXT, "GL_OP_CROSS_PRODUCT_EXT");
#endif
#if defined(GL_OP_MULTIPLY_MATRIX_EXT)
defconsti(env, "GL-OP-MULTIPLY-MATRIX-EXT", (GLenum) GL_OP_MULTIPLY_MATRIX_EXT, "GL_OP_MULTIPLY_MATRIX_EXT");
#endif
#if defined(GL_OP_MOV_EXT)
defconsti(env, "GL-OP-MOV-EXT", (GLenum) GL_OP_MOV_EXT, "GL_OP_MOV_EXT");
#endif
#if defined(GL_POINT_SIZE_MIN_EXT)
defconsti(env, "GL-POINT-SIZE-MIN-EXT", (GLenum) GL_POINT_SIZE_MIN_EXT, "GL_POINT_SIZE_MIN_EXT");
#endif
#if defined(GL_POINT_SIZE_MAX_EXT)
defconsti(env, "GL-POINT-SIZE-MAX-EXT", (GLenum) GL_POINT_SIZE_MAX_EXT, "GL_POINT_SIZE_MAX_EXT");
#endif
#if defined(GL_POINT_FADE_THRESHOLD_SIZE_EXT)
defconsti(env, "GL-POINT-FADE-THRESHOLD-SIZE-EXT", (GLenum) GL_POINT_FADE_THRESHOLD_SIZE_EXT, "GL_POINT_FADE_THRESHOLD_SIZE_EXT");
#endif
#if defined(GL_POINT_FADE_THRESHOLD_SIZE)
defconsti(env, "GL-POINT-FADE-THRESHOLD-SIZE", (GLenum) GL_POINT_FADE_THRESHOLD_SIZE, "GL_POINT_FADE_THRESHOLD_SIZE");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-BUFFER-BINDING", (GLenum) GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, "GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_ENABLED)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-ENABLED", (GLenum) GL_VERTEX_ATTRIB_ARRAY_ENABLED, "GL_VERTEX_ATTRIB_ARRAY_ENABLED");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_SIZE)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-SIZE", (GLenum) GL_VERTEX_ATTRIB_ARRAY_SIZE, "GL_VERTEX_ATTRIB_ARRAY_SIZE");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_STRIDE)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-STRIDE", (GLenum) GL_VERTEX_ATTRIB_ARRAY_STRIDE, "GL_VERTEX_ATTRIB_ARRAY_STRIDE");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_TYPE)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-TYPE", (GLenum) GL_VERTEX_ATTRIB_ARRAY_TYPE, "GL_VERTEX_ATTRIB_ARRAY_TYPE");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_NORMALIZED)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-NORMALIZED", (GLenum) GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, "GL_VERTEX_ATTRIB_ARRAY_NORMALIZED");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_INTEGER)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-INTEGER", (GLenum) GL_VERTEX_ATTRIB_ARRAY_INTEGER, "GL_VERTEX_ATTRIB_ARRAY_INTEGER");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_LONG)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-LONG", (GLenum) GL_VERTEX_ATTRIB_ARRAY_LONG, "GL_VERTEX_ATTRIB_ARRAY_LONG");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_DIVISOR)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-DIVISOR", (GLenum) GL_VERTEX_ATTRIB_ARRAY_DIVISOR, "GL_VERTEX_ATTRIB_ARRAY_DIVISOR");
#endif
#if defined(GL_VERTEX_ATTRIB_BINDING)
defconsti(env, "GL-VERTEX-ATTRIB-BINDING", (GLenum) GL_VERTEX_ATTRIB_BINDING, "GL_VERTEX_ATTRIB_BINDING");
#endif
#if defined(GL_VERTEX_ATTRIB_RELATIVE_OFFSET)
defconsti(env, "GL-VERTEX-ATTRIB-RELATIVE-OFFSET", (GLenum) GL_VERTEX_ATTRIB_RELATIVE_OFFSET, "GL_VERTEX_ATTRIB_RELATIVE_OFFSET");
#endif
#if defined(GL_CURRENT_VERTEX_ATTRIB)
defconsti(env, "GL-CURRENT-VERTEX-ATTRIB", (GLenum) GL_CURRENT_VERTEX_ATTRIB, "GL_CURRENT_VERTEX_ATTRIB");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-INTEGER-EXT", (GLenum) GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT, "GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-POINTER-ARB", (GLenum) GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB, "GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_POINTER)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-POINTER", (GLenum) GL_VERTEX_ATTRIB_ARRAY_POINTER, "GL_VERTEX_ATTRIB_ARRAY_POINTER");
#endif
#if defined(GL_BUFFER_MAP_POINTER_ARB)
defconsti(env, "GL-BUFFER-MAP-POINTER-ARB", (GLenum) GL_BUFFER_MAP_POINTER_ARB, "GL_BUFFER_MAP_POINTER_ARB");
#endif
#if defined(GL_BUFFER_MAP_POINTER)
defconsti(env, "GL-BUFFER-MAP-POINTER", (GLenum) GL_BUFFER_MAP_POINTER, "GL_BUFFER_MAP_POINTER");
#endif
#if defined(GL_BUFFER_SIZE_ARB)
defconsti(env, "GL-BUFFER-SIZE-ARB", (GLenum) GL_BUFFER_SIZE_ARB, "GL_BUFFER_SIZE_ARB");
#endif
#if defined(GL_BUFFER_USAGE_ARB)
defconsti(env, "GL-BUFFER-USAGE-ARB", (GLenum) GL_BUFFER_USAGE_ARB, "GL_BUFFER_USAGE_ARB");
#endif
#if defined(GL_BUFFER_ACCESS_ARB)
defconsti(env, "GL-BUFFER-ACCESS-ARB", (GLenum) GL_BUFFER_ACCESS_ARB, "GL_BUFFER_ACCESS_ARB");
#endif
#if defined(GL_BUFFER_MAPPED_ARB)
defconsti(env, "GL-BUFFER-MAPPED-ARB", (GLenum) GL_BUFFER_MAPPED_ARB, "GL_BUFFER_MAPPED_ARB");
#endif
#if defined(GL_BUFFER_SIZE)
defconsti(env, "GL-BUFFER-SIZE", (GLenum) GL_BUFFER_SIZE, "GL_BUFFER_SIZE");
#endif
#if defined(GL_BUFFER_USAGE)
defconsti(env, "GL-BUFFER-USAGE", (GLenum) GL_BUFFER_USAGE, "GL_BUFFER_USAGE");
#endif
#if defined(GL_BUFFER_ACCESS)
defconsti(env, "GL-BUFFER-ACCESS", (GLenum) GL_BUFFER_ACCESS, "GL_BUFFER_ACCESS");
#endif
#if defined(GL_BUFFER_ACCESS_FLAGS)
defconsti(env, "GL-BUFFER-ACCESS-FLAGS", (GLenum) GL_BUFFER_ACCESS_FLAGS, "GL_BUFFER_ACCESS_FLAGS");
#endif
#if defined(GL_BUFFER_IMMUTABLE_STORAGE)
defconsti(env, "GL-BUFFER-IMMUTABLE-STORAGE", (GLenum) GL_BUFFER_IMMUTABLE_STORAGE, "GL_BUFFER_IMMUTABLE_STORAGE");
#endif
#if defined(GL_BUFFER_MAPPED)
defconsti(env, "GL-BUFFER-MAPPED", (GLenum) GL_BUFFER_MAPPED, "GL_BUFFER_MAPPED");
#endif
#if defined(GL_BUFFER_MAP_OFFSET)
defconsti(env, "GL-BUFFER-MAP-OFFSET", (GLenum) GL_BUFFER_MAP_OFFSET, "GL_BUFFER_MAP_OFFSET");
#endif
#if defined(GL_BUFFER_MAP_LENGTH)
defconsti(env, "GL-BUFFER-MAP-LENGTH", (GLenum) GL_BUFFER_MAP_LENGTH, "GL_BUFFER_MAP_LENGTH");
#endif
#if defined(GL_BUFFER_STORAGE_FLAGS)
defconsti(env, "GL-BUFFER-STORAGE-FLAGS", (GLenum) GL_BUFFER_STORAGE_FLAGS, "GL_BUFFER_STORAGE_FLAGS");
#endif
#if defined(GL_FIXED_ONLY_ARB)
defconsti(env, "GL-FIXED-ONLY-ARB", (GLenum) GL_FIXED_ONLY_ARB, "GL_FIXED_ONLY_ARB");
#endif
#if defined(GL_FALSE)
defconsti(env, "GL-FALSE", (GLenum) GL_FALSE, "GL_FALSE");
#endif
#if defined(GL_TRUE)
defconsti(env, "GL-TRUE", (GLenum) GL_TRUE, "GL_TRUE");
#endif
#if defined(GL_TRUE)
defconsti(env, "GL-TRUE", (GLenum) GL_TRUE, "GL_TRUE");
#endif
#if defined(GL_FALSE)
defconsti(env, "GL-FALSE", (GLenum) GL_FALSE, "GL_FALSE");
#endif
#if defined(GL_FIXED_ONLY)
defconsti(env, "GL-FIXED-ONLY", (GLenum) GL_FIXED_ONLY, "GL_FIXED_ONLY");
#endif
#if defined(GL_CLAMP_VERTEX_COLOR_ARB)
defconsti(env, "GL-CLAMP-VERTEX-COLOR-ARB", (GLenum) GL_CLAMP_VERTEX_COLOR_ARB, "GL_CLAMP_VERTEX_COLOR_ARB");
#endif
#if defined(GL_CLAMP_FRAGMENT_COLOR_ARB)
defconsti(env, "GL-CLAMP-FRAGMENT-COLOR-ARB", (GLenum) GL_CLAMP_FRAGMENT_COLOR_ARB, "GL_CLAMP_FRAGMENT_COLOR_ARB");
#endif
#if defined(GL_CLAMP_READ_COLOR_ARB)
defconsti(env, "GL-CLAMP-READ-COLOR-ARB", (GLenum) GL_CLAMP_READ_COLOR_ARB, "GL_CLAMP_READ_COLOR_ARB");
#endif
#if defined(GL_CLAMP_READ_COLOR)
defconsti(env, "GL-CLAMP-READ-COLOR", (GLenum) GL_CLAMP_READ_COLOR, "GL_CLAMP_READ_COLOR");
#endif
#if defined(GL_STORAGE_CLIENT_APPLE)
defconsti(env, "GL-STORAGE-CLIENT-APPLE", (GLenum) GL_STORAGE_CLIENT_APPLE, "GL_STORAGE_CLIENT_APPLE");
#endif
#if defined(GL_STORAGE_CACHED_APPLE)
defconsti(env, "GL-STORAGE-CACHED-APPLE", (GLenum) GL_STORAGE_CACHED_APPLE, "GL_STORAGE_CACHED_APPLE");
#endif
#if defined(GL_STORAGE_SHARED_APPLE)
defconsti(env, "GL-STORAGE-SHARED-APPLE", (GLenum) GL_STORAGE_SHARED_APPLE, "GL_STORAGE_SHARED_APPLE");
#endif
#if defined(GL_DRAW_PIXELS_APPLE)
defconsti(env, "GL-DRAW-PIXELS-APPLE", (GLenum) GL_DRAW_PIXELS_APPLE, "GL_DRAW_PIXELS_APPLE");
#endif
#if defined(GL_FENCE_APPLE)
defconsti(env, "GL-FENCE-APPLE", (GLenum) GL_FENCE_APPLE, "GL_FENCE_APPLE");
#endif
#if defined(GL_PRESERVE_ATI)
defconsti(env, "GL-PRESERVE-ATI", (GLenum) GL_PRESERVE_ATI, "GL_PRESERVE_ATI");
#endif
#if defined(GL_DISCARD_ATI)
defconsti(env, "GL-DISCARD-ATI", (GLenum) GL_DISCARD_ATI, "GL_DISCARD_ATI");
#endif
#if defined(GL_BUMP_ROT_MATRIX_ATI)
defconsti(env, "GL-BUMP-ROT-MATRIX-ATI", (GLenum) GL_BUMP_ROT_MATRIX_ATI, "GL_BUMP_ROT_MATRIX_ATI");
#endif
#if defined(GL_SWIZZLE_STR_ATI)
defconsti(env, "GL-SWIZZLE-STR-ATI", (GLenum) GL_SWIZZLE_STR_ATI, "GL_SWIZZLE_STR_ATI");
#endif
#if defined(GL_SWIZZLE_STQ_ATI)
defconsti(env, "GL-SWIZZLE-STQ-ATI", (GLenum) GL_SWIZZLE_STQ_ATI, "GL_SWIZZLE_STQ_ATI");
#endif
#if defined(GL_SWIZZLE_STR_DR_ATI)
defconsti(env, "GL-SWIZZLE-STR-DR-ATI", (GLenum) GL_SWIZZLE_STR_DR_ATI, "GL_SWIZZLE_STR_DR_ATI");
#endif
#if defined(GL_SWIZZLE_STQ_DQ_ATI)
defconsti(env, "GL-SWIZZLE-STQ-DQ-ATI", (GLenum) GL_SWIZZLE_STQ_DQ_ATI, "GL_SWIZZLE_STQ_DQ_ATI");
#endif
#if defined(GL_PN_TRIANGLES_POINT_MODE_ATI)
defconsti(env, "GL-PN-TRIANGLES-POINT-MODE-ATI", (GLenum) GL_PN_TRIANGLES_POINT_MODE_ATI, "GL_PN_TRIANGLES_POINT_MODE_ATI");
#endif
#if defined(GL_PN_TRIANGLES_NORMAL_MODE_ATI)
defconsti(env, "GL-PN-TRIANGLES-NORMAL-MODE-ATI", (GLenum) GL_PN_TRIANGLES_NORMAL_MODE_ATI, "GL_PN_TRIANGLES_NORMAL_MODE_ATI");
#endif
#if defined(GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI)
defconsti(env, "GL-PN-TRIANGLES-TESSELATION-LEVEL-ATI", (GLenum) GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI, "GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI");
#endif
#if defined(GL_STATIC_ATI)
defconsti(env, "GL-STATIC-ATI", (GLenum) GL_STATIC_ATI, "GL_STATIC_ATI");
#endif
#if defined(GL_DYNAMIC_ATI)
defconsti(env, "GL-DYNAMIC-ATI", (GLenum) GL_DYNAMIC_ATI, "GL_DYNAMIC_ATI");
#endif
#if defined(GL_BUMP_ROT_MATRIX_ATI)
defconsti(env, "GL-BUMP-ROT-MATRIX-ATI", (GLenum) GL_BUMP_ROT_MATRIX_ATI, "GL_BUMP_ROT_MATRIX_ATI");
#endif
#if defined(GL_BUMP_ROT_MATRIX_SIZE_ATI)
defconsti(env, "GL-BUMP-ROT-MATRIX-SIZE-ATI", (GLenum) GL_BUMP_ROT_MATRIX_SIZE_ATI, "GL_BUMP_ROT_MATRIX_SIZE_ATI");
#endif
#if defined(GL_BUMP_NUM_TEX_UNITS_ATI)
defconsti(env, "GL-BUMP-NUM-TEX-UNITS-ATI", (GLenum) GL_BUMP_NUM_TEX_UNITS_ATI, "GL_BUMP_NUM_TEX_UNITS_ATI");
#endif
#if defined(GL_BUMP_TEX_UNITS_ATI)
defconsti(env, "GL-BUMP-TEX-UNITS-ATI", (GLenum) GL_BUMP_TEX_UNITS_ATI, "GL_BUMP_TEX_UNITS_ATI");
#endif
#if defined(GL_OBJECT_BUFFER_SIZE_ATI)
defconsti(env, "GL-OBJECT-BUFFER-SIZE-ATI", (GLenum) GL_OBJECT_BUFFER_SIZE_ATI, "GL_OBJECT_BUFFER_SIZE_ATI");
#endif
#if defined(GL_OBJECT_BUFFER_USAGE_ATI)
defconsti(env, "GL-OBJECT-BUFFER-USAGE-ATI", (GLenum) GL_OBJECT_BUFFER_USAGE_ATI, "GL_OBJECT_BUFFER_USAGE_ATI");
#endif
#if defined(GL_COLOR_ATTACHMENT0_NV)
defconsti(env, "GL-COLOR-ATTACHMENT0-NV", (GLenum) GL_COLOR_ATTACHMENT0_NV, "GL_COLOR_ATTACHMENT0_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT1_NV)
defconsti(env, "GL-COLOR-ATTACHMENT1-NV", (GLenum) GL_COLOR_ATTACHMENT1_NV, "GL_COLOR_ATTACHMENT1_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT2_NV)
defconsti(env, "GL-COLOR-ATTACHMENT2-NV", (GLenum) GL_COLOR_ATTACHMENT2_NV, "GL_COLOR_ATTACHMENT2_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT3_NV)
defconsti(env, "GL-COLOR-ATTACHMENT3-NV", (GLenum) GL_COLOR_ATTACHMENT3_NV, "GL_COLOR_ATTACHMENT3_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT4_NV)
defconsti(env, "GL-COLOR-ATTACHMENT4-NV", (GLenum) GL_COLOR_ATTACHMENT4_NV, "GL_COLOR_ATTACHMENT4_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT5_NV)
defconsti(env, "GL-COLOR-ATTACHMENT5-NV", (GLenum) GL_COLOR_ATTACHMENT5_NV, "GL_COLOR_ATTACHMENT5_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT6_NV)
defconsti(env, "GL-COLOR-ATTACHMENT6-NV", (GLenum) GL_COLOR_ATTACHMENT6_NV, "GL_COLOR_ATTACHMENT6_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT7_NV)
defconsti(env, "GL-COLOR-ATTACHMENT7-NV", (GLenum) GL_COLOR_ATTACHMENT7_NV, "GL_COLOR_ATTACHMENT7_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT8_NV)
defconsti(env, "GL-COLOR-ATTACHMENT8-NV", (GLenum) GL_COLOR_ATTACHMENT8_NV, "GL_COLOR_ATTACHMENT8_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT9_NV)
defconsti(env, "GL-COLOR-ATTACHMENT9-NV", (GLenum) GL_COLOR_ATTACHMENT9_NV, "GL_COLOR_ATTACHMENT9_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT10_NV)
defconsti(env, "GL-COLOR-ATTACHMENT10-NV", (GLenum) GL_COLOR_ATTACHMENT10_NV, "GL_COLOR_ATTACHMENT10_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT11_NV)
defconsti(env, "GL-COLOR-ATTACHMENT11-NV", (GLenum) GL_COLOR_ATTACHMENT11_NV, "GL_COLOR_ATTACHMENT11_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT12_NV)
defconsti(env, "GL-COLOR-ATTACHMENT12-NV", (GLenum) GL_COLOR_ATTACHMENT12_NV, "GL_COLOR_ATTACHMENT12_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT13_NV)
defconsti(env, "GL-COLOR-ATTACHMENT13-NV", (GLenum) GL_COLOR_ATTACHMENT13_NV, "GL_COLOR_ATTACHMENT13_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT14_NV)
defconsti(env, "GL-COLOR-ATTACHMENT14-NV", (GLenum) GL_COLOR_ATTACHMENT14_NV, "GL_COLOR_ATTACHMENT14_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT15_NV)
defconsti(env, "GL-COLOR-ATTACHMENT15-NV", (GLenum) GL_COLOR_ATTACHMENT15_NV, "GL_COLOR_ATTACHMENT15_NV");
#endif
#if defined(GL_VERTEX_STREAM0_ATI)
defconsti(env, "GL-VERTEX-STREAM0-ATI", (GLenum) GL_VERTEX_STREAM0_ATI, "GL_VERTEX_STREAM0_ATI");
#endif
#if defined(GL_VERTEX_STREAM1_ATI)
defconsti(env, "GL-VERTEX-STREAM1-ATI", (GLenum) GL_VERTEX_STREAM1_ATI, "GL_VERTEX_STREAM1_ATI");
#endif
#if defined(GL_VERTEX_STREAM2_ATI)
defconsti(env, "GL-VERTEX-STREAM2-ATI", (GLenum) GL_VERTEX_STREAM2_ATI, "GL_VERTEX_STREAM2_ATI");
#endif
#if defined(GL_VERTEX_STREAM3_ATI)
defconsti(env, "GL-VERTEX-STREAM3-ATI", (GLenum) GL_VERTEX_STREAM3_ATI, "GL_VERTEX_STREAM3_ATI");
#endif
#if defined(GL_VERTEX_STREAM4_ATI)
defconsti(env, "GL-VERTEX-STREAM4-ATI", (GLenum) GL_VERTEX_STREAM4_ATI, "GL_VERTEX_STREAM4_ATI");
#endif
#if defined(GL_VERTEX_STREAM5_ATI)
defconsti(env, "GL-VERTEX-STREAM5-ATI", (GLenum) GL_VERTEX_STREAM5_ATI, "GL_VERTEX_STREAM5_ATI");
#endif
#if defined(GL_VERTEX_STREAM6_ATI)
defconsti(env, "GL-VERTEX-STREAM6-ATI", (GLenum) GL_VERTEX_STREAM6_ATI, "GL_VERTEX_STREAM6_ATI");
#endif
#if defined(GL_VERTEX_STREAM7_ATI)
defconsti(env, "GL-VERTEX-STREAM7-ATI", (GLenum) GL_VERTEX_STREAM7_ATI, "GL_VERTEX_STREAM7_ATI");
#endif
#if defined(GL_SPRITE_MODE_SGIX)
defconsti(env, "GL-SPRITE-MODE-SGIX", (GLenum) GL_SPRITE_MODE_SGIX, "GL_SPRITE_MODE_SGIX");
#endif
#if defined(GL_PIXEL_TEX_GEN_Q_CEILING_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-Q-CEILING-SGIX", (GLenum) GL_PIXEL_TEX_GEN_Q_CEILING_SGIX, "GL_PIXEL_TEX_GEN_Q_CEILING_SGIX");
#endif
#if defined(GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-Q-FLOOR-SGIX", (GLenum) GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX, "GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX");
#endif
#if defined(GL_PIXEL_TEX_GEN_Q_ROUND_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-Q-ROUND-SGIX", (GLenum) GL_PIXEL_TEX_GEN_Q_ROUND_SGIX, "GL_PIXEL_TEX_GEN_Q_ROUND_SGIX");
#endif
#if defined(GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-ALPHA-LS-SGIX", (GLenum) GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX, "GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX");
#endif
#if defined(GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-ALPHA-MS-SGIX", (GLenum) GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX, "GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX");
#endif
#if defined(GL_VERTEX_DATA_HINT_PGI)
defconsti(env, "GL-VERTEX-DATA-HINT-PGI", (GLenum) GL_VERTEX_DATA_HINT_PGI, "GL_VERTEX_DATA_HINT_PGI");
#endif
#if defined(GL_VERTEX_CONSISTENT_HINT_PGI)
defconsti(env, "GL-VERTEX-CONSISTENT-HINT-PGI", (GLenum) GL_VERTEX_CONSISTENT_HINT_PGI, "GL_VERTEX_CONSISTENT_HINT_PGI");
#endif
#if defined(GL_MATERIAL_SIDE_HINT_PGI)
defconsti(env, "GL-MATERIAL-SIDE-HINT-PGI", (GLenum) GL_MATERIAL_SIDE_HINT_PGI, "GL_MATERIAL_SIDE_HINT_PGI");
#endif
#if defined(GL_MAX_VERTEX_HINT_PGI)
defconsti(env, "GL-MAX-VERTEX-HINT-PGI", (GLenum) GL_MAX_VERTEX_HINT_PGI, "GL_MAX_VERTEX_HINT_PGI");
#endif
#if defined(GL_IMAGE_SCALE_X_HP)
defconsti(env, "GL-IMAGE-SCALE-X-HP", (GLenum) GL_IMAGE_SCALE_X_HP, "GL_IMAGE_SCALE_X_HP");
#endif
#if defined(GL_IMAGE_SCALE_Y_HP)
defconsti(env, "GL-IMAGE-SCALE-Y-HP", (GLenum) GL_IMAGE_SCALE_Y_HP, "GL_IMAGE_SCALE_Y_HP");
#endif
#if defined(GL_IMAGE_TRANSLATE_X_HP)
defconsti(env, "GL-IMAGE-TRANSLATE-X-HP", (GLenum) GL_IMAGE_TRANSLATE_X_HP, "GL_IMAGE_TRANSLATE_X_HP");
#endif
#if defined(GL_IMAGE_TRANSLATE_Y_HP)
defconsti(env, "GL-IMAGE-TRANSLATE-Y-HP", (GLenum) GL_IMAGE_TRANSLATE_Y_HP, "GL_IMAGE_TRANSLATE_Y_HP");
#endif
#if defined(GL_IMAGE_ROTATE_ANGLE_HP)
defconsti(env, "GL-IMAGE-ROTATE-ANGLE-HP", (GLenum) GL_IMAGE_ROTATE_ANGLE_HP, "GL_IMAGE_ROTATE_ANGLE_HP");
#endif
#if defined(GL_IMAGE_ROTATE_ORIGIN_X_HP)
defconsti(env, "GL-IMAGE-ROTATE-ORIGIN-X-HP", (GLenum) GL_IMAGE_ROTATE_ORIGIN_X_HP, "GL_IMAGE_ROTATE_ORIGIN_X_HP");
#endif
#if defined(GL_IMAGE_ROTATE_ORIGIN_Y_HP)
defconsti(env, "GL-IMAGE-ROTATE-ORIGIN-Y-HP", (GLenum) GL_IMAGE_ROTATE_ORIGIN_Y_HP, "GL_IMAGE_ROTATE_ORIGIN_Y_HP");
#endif
#if defined(GL_IMAGE_MAG_FILTER_HP)
defconsti(env, "GL-IMAGE-MAG-FILTER-HP", (GLenum) GL_IMAGE_MAG_FILTER_HP, "GL_IMAGE_MAG_FILTER_HP");
#endif
#if defined(GL_IMAGE_MIN_FILTER_HP)
defconsti(env, "GL-IMAGE-MIN-FILTER-HP", (GLenum) GL_IMAGE_MIN_FILTER_HP, "GL_IMAGE_MIN_FILTER_HP");
#endif
#if defined(GL_IMAGE_CUBIC_WEIGHT_HP)
defconsti(env, "GL-IMAGE-CUBIC-WEIGHT-HP", (GLenum) GL_IMAGE_CUBIC_WEIGHT_HP, "GL_IMAGE_CUBIC_WEIGHT_HP");
#endif
#if defined(GL_IMAGE_TRANSFORM_2D_HP)
defconsti(env, "GL-IMAGE-TRANSFORM-2D-HP", (GLenum) GL_IMAGE_TRANSFORM_2D_HP, "GL_IMAGE_TRANSFORM_2D_HP");
#endif
#if defined(GL_FILTER4_SGIS)
defconsti(env, "GL-FILTER4-SGIS", (GLenum) GL_FILTER4_SGIS, "GL_FILTER4_SGIS");
#endif
#if defined(GL_PIXEL_COUNT_NV)
defconsti(env, "GL-PIXEL-COUNT-NV", (GLenum) GL_PIXEL_COUNT_NV, "GL_PIXEL_COUNT_NV");
#endif
#if defined(GL_PIXEL_COUNT_AVAILABLE_NV)
defconsti(env, "GL-PIXEL-COUNT-AVAILABLE-NV", (GLenum) GL_PIXEL_COUNT_AVAILABLE_NV, "GL_PIXEL_COUNT_AVAILABLE_NV");
#endif
#if defined(GL_SAMPLE_POSITION)
defconsti(env, "GL-SAMPLE-POSITION", (GLenum) GL_SAMPLE_POSITION, "GL_SAMPLE_POSITION");
#endif
#if defined(GL_SAMPLE_LOCATION_ARB)
defconsti(env, "GL-SAMPLE-LOCATION-ARB", (GLenum) GL_SAMPLE_LOCATION_ARB, "GL_SAMPLE_LOCATION_ARB");
#endif
#if defined(GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB)
defconsti(env, "GL-PROGRAMMABLE-SAMPLE-LOCATION-ARB", (GLenum) GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB, "GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB");
#endif
#if defined(GL_MAP_TESSELLATION_NV)
defconsti(env, "GL-MAP-TESSELLATION-NV", (GLenum) GL_MAP_TESSELLATION_NV, "GL_MAP_TESSELLATION_NV");
#endif
#if defined(GL_MAP_ATTRIB_U_ORDER_NV)
defconsti(env, "GL-MAP-ATTRIB-U-ORDER-NV", (GLenum) GL_MAP_ATTRIB_U_ORDER_NV, "GL_MAP_ATTRIB_U_ORDER_NV");
#endif
#if defined(GL_MAP_ATTRIB_V_ORDER_NV)
defconsti(env, "GL-MAP-ATTRIB-V-ORDER-NV", (GLenum) GL_MAP_ATTRIB_V_ORDER_NV, "GL_MAP_ATTRIB_V_ORDER_NV");
#endif
#if defined(GL_FENCE_STATUS_NV)
defconsti(env, "GL-FENCE-STATUS-NV", (GLenum) GL_FENCE_STATUS_NV, "GL_FENCE_STATUS_NV");
#endif
#if defined(GL_FENCE_CONDITION_NV)
defconsti(env, "GL-FENCE-CONDITION-NV", (GLenum) GL_FENCE_CONDITION_NV, "GL_FENCE_CONDITION_NV");
#endif
#if defined(GL_COMBINER_INPUT_NV)
defconsti(env, "GL-COMBINER-INPUT-NV", (GLenum) GL_COMBINER_INPUT_NV, "GL_COMBINER_INPUT_NV");
#endif
#if defined(GL_COMBINER_MAPPING_NV)
defconsti(env, "GL-COMBINER-MAPPING-NV", (GLenum) GL_COMBINER_MAPPING_NV, "GL_COMBINER_MAPPING_NV");
#endif
#if defined(GL_COMBINER_COMPONENT_USAGE_NV)
defconsti(env, "GL-COMBINER-COMPONENT-USAGE-NV", (GLenum) GL_COMBINER_COMPONENT_USAGE_NV, "GL_COMBINER_COMPONENT_USAGE_NV");
#endif
#if defined(GL_NONE)
defconsti(env, "GL-NONE", (GLenum) GL_NONE, "GL_NONE");
#endif
#if defined(GL_BIAS_BY_NEGATIVE_ONE_HALF_NV)
defconsti(env, "GL-BIAS-BY-NEGATIVE-ONE-HALF-NV", (GLenum) GL_BIAS_BY_NEGATIVE_ONE_HALF_NV, "GL_BIAS_BY_NEGATIVE_ONE_HALF_NV");
#endif
#if defined(GL_NONE)
defconsti(env, "GL-NONE", (GLenum) GL_NONE, "GL_NONE");
#endif
#if defined(GL_SCALE_BY_TWO_NV)
defconsti(env, "GL-SCALE-BY-TWO-NV", (GLenum) GL_SCALE_BY_TWO_NV, "GL_SCALE_BY_TWO_NV");
#endif
#if defined(GL_SCALE_BY_FOUR_NV)
defconsti(env, "GL-SCALE-BY-FOUR-NV", (GLenum) GL_SCALE_BY_FOUR_NV, "GL_SCALE_BY_FOUR_NV");
#endif
#if defined(GL_SCALE_BY_ONE_HALF_NV)
defconsti(env, "GL-SCALE-BY-ONE-HALF-NV", (GLenum) GL_SCALE_BY_ONE_HALF_NV, "GL_SCALE_BY_ONE_HALF_NV");
#endif
#if defined(GL_UNSIGNED_IDENTITY_NV)
defconsti(env, "GL-UNSIGNED-IDENTITY-NV", (GLenum) GL_UNSIGNED_IDENTITY_NV, "GL_UNSIGNED_IDENTITY_NV");
#endif
#if defined(GL_UNSIGNED_INVERT_NV)
defconsti(env, "GL-UNSIGNED-INVERT-NV", (GLenum) GL_UNSIGNED_INVERT_NV, "GL_UNSIGNED_INVERT_NV");
#endif
#if defined(GL_EXPAND_NORMAL_NV)
defconsti(env, "GL-EXPAND-NORMAL-NV", (GLenum) GL_EXPAND_NORMAL_NV, "GL_EXPAND_NORMAL_NV");
#endif
#if defined(GL_EXPAND_NEGATE_NV)
defconsti(env, "GL-EXPAND-NEGATE-NV", (GLenum) GL_EXPAND_NEGATE_NV, "GL_EXPAND_NEGATE_NV");
#endif
#if defined(GL_HALF_BIAS_NORMAL_NV)
defconsti(env, "GL-HALF-BIAS-NORMAL-NV", (GLenum) GL_HALF_BIAS_NORMAL_NV, "GL_HALF_BIAS_NORMAL_NV");
#endif
#if defined(GL_HALF_BIAS_NEGATE_NV)
defconsti(env, "GL-HALF-BIAS-NEGATE-NV", (GLenum) GL_HALF_BIAS_NEGATE_NV, "GL_HALF_BIAS_NEGATE_NV");
#endif
#if defined(GL_SIGNED_IDENTITY_NV)
defconsti(env, "GL-SIGNED-IDENTITY-NV", (GLenum) GL_SIGNED_IDENTITY_NV, "GL_SIGNED_IDENTITY_NV");
#endif
#if defined(GL_SIGNED_NEGATE_NV)
defconsti(env, "GL-SIGNED-NEGATE-NV", (GLenum) GL_SIGNED_NEGATE_NV, "GL_SIGNED_NEGATE_NV");
#endif
#if defined(GL_DISCARD_NV)
defconsti(env, "GL-DISCARD-NV", (GLenum) GL_DISCARD_NV, "GL_DISCARD_NV");
#endif
#if defined(GL_PRIMARY_COLOR_NV)
defconsti(env, "GL-PRIMARY-COLOR-NV", (GLenum) GL_PRIMARY_COLOR_NV, "GL_PRIMARY_COLOR_NV");
#endif
#if defined(GL_SECONDARY_COLOR_NV)
defconsti(env, "GL-SECONDARY-COLOR-NV", (GLenum) GL_SECONDARY_COLOR_NV, "GL_SECONDARY_COLOR_NV");
#endif
#if defined(GL_SPARE0_NV)
defconsti(env, "GL-SPARE0-NV", (GLenum) GL_SPARE0_NV, "GL_SPARE0_NV");
#endif
#if defined(GL_SPARE1_NV)
defconsti(env, "GL-SPARE1-NV", (GLenum) GL_SPARE1_NV, "GL_SPARE1_NV");
#endif
#if defined(GL_TEXTURE0_ARB)
defconsti(env, "GL-TEXTURE0-ARB", (GLenum) GL_TEXTURE0_ARB, "GL_TEXTURE0_ARB");
#endif
#if defined(GL_TEXTURE1_ARB)
defconsti(env, "GL-TEXTURE1-ARB", (GLenum) GL_TEXTURE1_ARB, "GL_TEXTURE1_ARB");
#endif
#if defined(GL_VARIABLE_A_NV)
defconsti(env, "GL-VARIABLE-A-NV", (GLenum) GL_VARIABLE_A_NV, "GL_VARIABLE_A_NV");
#endif
#if defined(GL_VARIABLE_B_NV)
defconsti(env, "GL-VARIABLE-B-NV", (GLenum) GL_VARIABLE_B_NV, "GL_VARIABLE_B_NV");
#endif
#if defined(GL_VARIABLE_C_NV)
defconsti(env, "GL-VARIABLE-C-NV", (GLenum) GL_VARIABLE_C_NV, "GL_VARIABLE_C_NV");
#endif
#if defined(GL_VARIABLE_D_NV)
defconsti(env, "GL-VARIABLE-D-NV", (GLenum) GL_VARIABLE_D_NV, "GL_VARIABLE_D_NV");
#endif
#if defined(GL_VARIABLE_E_NV)
defconsti(env, "GL-VARIABLE-E-NV", (GLenum) GL_VARIABLE_E_NV, "GL_VARIABLE_E_NV");
#endif
#if defined(GL_VARIABLE_F_NV)
defconsti(env, "GL-VARIABLE-F-NV", (GLenum) GL_VARIABLE_F_NV, "GL_VARIABLE_F_NV");
#endif
#if defined(GL_VARIABLE_G_NV)
defconsti(env, "GL-VARIABLE-G-NV", (GLenum) GL_VARIABLE_G_NV, "GL_VARIABLE_G_NV");
#endif
#if defined(GL_WRITE_PIXEL_DATA_RANGE_NV)
defconsti(env, "GL-WRITE-PIXEL-DATA-RANGE-NV", (GLenum) GL_WRITE_PIXEL_DATA_RANGE_NV, "GL_WRITE_PIXEL_DATA_RANGE_NV");
#endif
#if defined(GL_READ_PIXEL_DATA_RANGE_NV)
defconsti(env, "GL-READ-PIXEL-DATA-RANGE-NV", (GLenum) GL_READ_PIXEL_DATA_RANGE_NV, "GL_READ_PIXEL_DATA_RANGE_NV");
#endif
#if defined(GL_EVAL_2D_NV)
defconsti(env, "GL-EVAL-2D-NV", (GLenum) GL_EVAL_2D_NV, "GL_EVAL_2D_NV");
#endif
#if defined(GL_EVAL_TRIANGULAR_2D_NV)
defconsti(env, "GL-EVAL-TRIANGULAR-2D-NV", (GLenum) GL_EVAL_TRIANGULAR_2D_NV, "GL_EVAL_TRIANGULAR_2D_NV");
#endif
#if defined(GL_PROGRAM_PARAMETER_NV)
defconsti(env, "GL-PROGRAM-PARAMETER-NV", (GLenum) GL_PROGRAM_PARAMETER_NV, "GL_PROGRAM_PARAMETER_NV");
#endif
#if defined(GL_ALL_COMPLETED_NV)
defconsti(env, "GL-ALL-COMPLETED-NV", (GLenum) GL_ALL_COMPLETED_NV, "GL_ALL_COMPLETED_NV");
#endif
#if defined(GL_CLOSE_PATH_NV)
defconsti(env, "GL-CLOSE-PATH-NV", (GLenum) GL_CLOSE_PATH_NV, "GL_CLOSE_PATH_NV");
#endif
#if defined(GL_MOVE_TO_NV)
defconsti(env, "GL-MOVE-TO-NV", (GLenum) GL_MOVE_TO_NV, "GL_MOVE_TO_NV");
#endif
#if defined(GL_RELATIVE_MOVE_TO_NV)
defconsti(env, "GL-RELATIVE-MOVE-TO-NV", (GLenum) GL_RELATIVE_MOVE_TO_NV, "GL_RELATIVE_MOVE_TO_NV");
#endif
#if defined(GL_LINE_TO_NV)
defconsti(env, "GL-LINE-TO-NV", (GLenum) GL_LINE_TO_NV, "GL_LINE_TO_NV");
#endif
#if defined(GL_RELATIVE_LINE_TO_NV)
defconsti(env, "GL-RELATIVE-LINE-TO-NV", (GLenum) GL_RELATIVE_LINE_TO_NV, "GL_RELATIVE_LINE_TO_NV");
#endif
#if defined(GL_HORIZONTAL_LINE_TO_NV)
defconsti(env, "GL-HORIZONTAL-LINE-TO-NV", (GLenum) GL_HORIZONTAL_LINE_TO_NV, "GL_HORIZONTAL_LINE_TO_NV");
#endif
#if defined(GL_RELATIVE_HORIZONTAL_LINE_TO_NV)
defconsti(env, "GL-RELATIVE-HORIZONTAL-LINE-TO-NV", (GLenum) GL_RELATIVE_HORIZONTAL_LINE_TO_NV, "GL_RELATIVE_HORIZONTAL_LINE_TO_NV");
#endif
#if defined(GL_VERTICAL_LINE_TO_NV)
defconsti(env, "GL-VERTICAL-LINE-TO-NV", (GLenum) GL_VERTICAL_LINE_TO_NV, "GL_VERTICAL_LINE_TO_NV");
#endif
#if defined(GL_RELATIVE_VERTICAL_LINE_TO_NV)
defconsti(env, "GL-RELATIVE-VERTICAL-LINE-TO-NV", (GLenum) GL_RELATIVE_VERTICAL_LINE_TO_NV, "GL_RELATIVE_VERTICAL_LINE_TO_NV");
#endif
#if defined(GL_QUADRATIC_CURVE_TO_NV)
defconsti(env, "GL-QUADRATIC-CURVE-TO-NV", (GLenum) GL_QUADRATIC_CURVE_TO_NV, "GL_QUADRATIC_CURVE_TO_NV");
#endif
#if defined(GL_RELATIVE_QUADRATIC_CURVE_TO_NV)
defconsti(env, "GL-RELATIVE-QUADRATIC-CURVE-TO-NV", (GLenum) GL_RELATIVE_QUADRATIC_CURVE_TO_NV, "GL_RELATIVE_QUADRATIC_CURVE_TO_NV");
#endif
#if defined(GL_CUBIC_CURVE_TO_NV)
defconsti(env, "GL-CUBIC-CURVE-TO-NV", (GLenum) GL_CUBIC_CURVE_TO_NV, "GL_CUBIC_CURVE_TO_NV");
#endif
#if defined(GL_RELATIVE_CUBIC_CURVE_TO_NV)
defconsti(env, "GL-RELATIVE-CUBIC-CURVE-TO-NV", (GLenum) GL_RELATIVE_CUBIC_CURVE_TO_NV, "GL_RELATIVE_CUBIC_CURVE_TO_NV");
#endif
#if defined(GL_SMOOTH_QUADRATIC_CURVE_TO_NV)
defconsti(env, "GL-SMOOTH-QUADRATIC-CURVE-TO-NV", (GLenum) GL_SMOOTH_QUADRATIC_CURVE_TO_NV, "GL_SMOOTH_QUADRATIC_CURVE_TO_NV");
#endif
#if defined(GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV)
defconsti(env, "GL-RELATIVE-SMOOTH-QUADRATIC-CURVE-TO-NV", (GLenum) GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV, "GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV");
#endif
#if defined(GL_SMOOTH_CUBIC_CURVE_TO_NV)
defconsti(env, "GL-SMOOTH-CUBIC-CURVE-TO-NV", (GLenum) GL_SMOOTH_CUBIC_CURVE_TO_NV, "GL_SMOOTH_CUBIC_CURVE_TO_NV");
#endif
#if defined(GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV)
defconsti(env, "GL-RELATIVE-SMOOTH-CUBIC-CURVE-TO-NV", (GLenum) GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV, "GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV");
#endif
#if defined(GL_SMALL_CCW_ARC_TO_NV)
defconsti(env, "GL-SMALL-CCW-ARC-TO-NV", (GLenum) GL_SMALL_CCW_ARC_TO_NV, "GL_SMALL_CCW_ARC_TO_NV");
#endif
#if defined(GL_RELATIVE_SMALL_CCW_ARC_TO_NV)
defconsti(env, "GL-RELATIVE-SMALL-CCW-ARC-TO-NV", (GLenum) GL_RELATIVE_SMALL_CCW_ARC_TO_NV, "GL_RELATIVE_SMALL_CCW_ARC_TO_NV");
#endif
#if defined(GL_SMALL_CW_ARC_TO_NV)
defconsti(env, "GL-SMALL-CW-ARC-TO-NV", (GLenum) GL_SMALL_CW_ARC_TO_NV, "GL_SMALL_CW_ARC_TO_NV");
#endif
#if defined(GL_RELATIVE_SMALL_CW_ARC_TO_NV)
defconsti(env, "GL-RELATIVE-SMALL-CW-ARC-TO-NV", (GLenum) GL_RELATIVE_SMALL_CW_ARC_TO_NV, "GL_RELATIVE_SMALL_CW_ARC_TO_NV");
#endif
#if defined(GL_LARGE_CCW_ARC_TO_NV)
defconsti(env, "GL-LARGE-CCW-ARC-TO-NV", (GLenum) GL_LARGE_CCW_ARC_TO_NV, "GL_LARGE_CCW_ARC_TO_NV");
#endif
#if defined(GL_RELATIVE_LARGE_CCW_ARC_TO_NV)
defconsti(env, "GL-RELATIVE-LARGE-CCW-ARC-TO-NV", (GLenum) GL_RELATIVE_LARGE_CCW_ARC_TO_NV, "GL_RELATIVE_LARGE_CCW_ARC_TO_NV");
#endif
#if defined(GL_LARGE_CW_ARC_TO_NV)
defconsti(env, "GL-LARGE-CW-ARC-TO-NV", (GLenum) GL_LARGE_CW_ARC_TO_NV, "GL_LARGE_CW_ARC_TO_NV");
#endif
#if defined(GL_RELATIVE_LARGE_CW_ARC_TO_NV)
defconsti(env, "GL-RELATIVE-LARGE-CW-ARC-TO-NV", (GLenum) GL_RELATIVE_LARGE_CW_ARC_TO_NV, "GL_RELATIVE_LARGE_CW_ARC_TO_NV");
#endif
#if defined(GL_CONIC_CURVE_TO_NV)
defconsti(env, "GL-CONIC-CURVE-TO-NV", (GLenum) GL_CONIC_CURVE_TO_NV, "GL_CONIC_CURVE_TO_NV");
#endif
#if defined(GL_RELATIVE_CONIC_CURVE_TO_NV)
defconsti(env, "GL-RELATIVE-CONIC-CURVE-TO-NV", (GLenum) GL_RELATIVE_CONIC_CURVE_TO_NV, "GL_RELATIVE_CONIC_CURVE_TO_NV");
#endif
#if defined(GL_ROUNDED_RECT_NV)
defconsti(env, "GL-ROUNDED-RECT-NV", (GLenum) GL_ROUNDED_RECT_NV, "GL_ROUNDED_RECT_NV");
#endif
#if defined(GL_RELATIVE_ROUNDED_RECT_NV)
defconsti(env, "GL-RELATIVE-ROUNDED-RECT-NV", (GLenum) GL_RELATIVE_ROUNDED_RECT_NV, "GL_RELATIVE_ROUNDED_RECT_NV");
#endif
#if defined(GL_ROUNDED_RECT2_NV)
defconsti(env, "GL-ROUNDED-RECT2-NV", (GLenum) GL_ROUNDED_RECT2_NV, "GL_ROUNDED_RECT2_NV");
#endif
#if defined(GL_RELATIVE_ROUNDED_RECT2_NV)
defconsti(env, "GL-RELATIVE-ROUNDED-RECT2-NV", (GLenum) GL_RELATIVE_ROUNDED_RECT2_NV, "GL_RELATIVE_ROUNDED_RECT2_NV");
#endif
#if defined(GL_ROUNDED_RECT4_NV)
defconsti(env, "GL-ROUNDED-RECT4-NV", (GLenum) GL_ROUNDED_RECT4_NV, "GL_ROUNDED_RECT4_NV");
#endif
#if defined(GL_RELATIVE_ROUNDED_RECT4_NV)
defconsti(env, "GL-RELATIVE-ROUNDED-RECT4-NV", (GLenum) GL_RELATIVE_ROUNDED_RECT4_NV, "GL_RELATIVE_ROUNDED_RECT4_NV");
#endif
#if defined(GL_ROUNDED_RECT8_NV)
defconsti(env, "GL-ROUNDED-RECT8-NV", (GLenum) GL_ROUNDED_RECT8_NV, "GL_ROUNDED_RECT8_NV");
#endif
#if defined(GL_RELATIVE_ROUNDED_RECT8_NV)
defconsti(env, "GL-RELATIVE-ROUNDED-RECT8-NV", (GLenum) GL_RELATIVE_ROUNDED_RECT8_NV, "GL_RELATIVE_ROUNDED_RECT8_NV");
#endif
#if defined(GL_RESTART_PATH_NV)
defconsti(env, "GL-RESTART-PATH-NV", (GLenum) GL_RESTART_PATH_NV, "GL_RESTART_PATH_NV");
#endif
#if defined(GL_DUP_FIRST_CUBIC_CURVE_TO_NV)
defconsti(env, "GL-DUP-FIRST-CUBIC-CURVE-TO-NV", (GLenum) GL_DUP_FIRST_CUBIC_CURVE_TO_NV, "GL_DUP_FIRST_CUBIC_CURVE_TO_NV");
#endif
#if defined(GL_DUP_LAST_CUBIC_CURVE_TO_NV)
defconsti(env, "GL-DUP-LAST-CUBIC-CURVE-TO-NV", (GLenum) GL_DUP_LAST_CUBIC_CURVE_TO_NV, "GL_DUP_LAST_CUBIC_CURVE_TO_NV");
#endif
#if defined(GL_RECT_NV)
defconsti(env, "GL-RECT-NV", (GLenum) GL_RECT_NV, "GL_RECT_NV");
#endif
#if defined(GL_RELATIVE_RECT_NV)
defconsti(env, "GL-RELATIVE-RECT-NV", (GLenum) GL_RELATIVE_RECT_NV, "GL_RELATIVE_RECT_NV");
#endif
#if defined(GL_CIRCULAR_CCW_ARC_TO_NV)
defconsti(env, "GL-CIRCULAR-CCW-ARC-TO-NV", (GLenum) GL_CIRCULAR_CCW_ARC_TO_NV, "GL_CIRCULAR_CCW_ARC_TO_NV");
#endif
#if defined(GL_CIRCULAR_CW_ARC_TO_NV)
defconsti(env, "GL-CIRCULAR-CW-ARC-TO-NV", (GLenum) GL_CIRCULAR_CW_ARC_TO_NV, "GL_CIRCULAR_CW_ARC_TO_NV");
#endif
#if defined(GL_CIRCULAR_TANGENT_ARC_TO_NV)
defconsti(env, "GL-CIRCULAR-TANGENT-ARC-TO-NV", (GLenum) GL_CIRCULAR_TANGENT_ARC_TO_NV, "GL_CIRCULAR_TANGENT_ARC_TO_NV");
#endif
#if defined(GL_ARC_TO_NV)
defconsti(env, "GL-ARC-TO-NV", (GLenum) GL_ARC_TO_NV, "GL_ARC_TO_NV");
#endif
#if defined(GL_RELATIVE_ARC_TO_NV)
defconsti(env, "GL-RELATIVE-ARC-TO-NV", (GLenum) GL_RELATIVE_ARC_TO_NV, "GL_RELATIVE_ARC_TO_NV");
#endif
#if defined(GL_ACCUM)
defconsti(env, "GL-ACCUM", (GLenum) GL_ACCUM, "GL_ACCUM");
#endif
#if defined(GL_LOAD)
defconsti(env, "GL-LOAD", (GLenum) GL_LOAD, "GL_LOAD");
#endif
#if defined(GL_RETURN)
defconsti(env, "GL-RETURN", (GLenum) GL_RETURN, "GL_RETURN");
#endif
#if defined(GL_MULT)
defconsti(env, "GL-MULT", (GLenum) GL_MULT, "GL_MULT");
#endif
#if defined(GL_ADD)
defconsti(env, "GL-ADD", (GLenum) GL_ADD, "GL_ADD");
#endif
#if defined(GL_ACCUM_BUFFER_BIT)
defconsti(env, "GL-ACCUM-BUFFER-BIT", (GLenum) GL_ACCUM_BUFFER_BIT, "GL_ACCUM_BUFFER_BIT");
#endif
#if defined(GL_ALL_ATTRIB_BITS)
defconsti(env, "GL-ALL-ATTRIB-BITS", (GLenum) GL_ALL_ATTRIB_BITS, "GL_ALL_ATTRIB_BITS");
#endif
#if defined(GL_COLOR_BUFFER_BIT)
defconsti(env, "GL-COLOR-BUFFER-BIT", (GLenum) GL_COLOR_BUFFER_BIT, "GL_COLOR_BUFFER_BIT");
#endif
#if defined(GL_CURRENT_BIT)
defconsti(env, "GL-CURRENT-BIT", (GLenum) GL_CURRENT_BIT, "GL_CURRENT_BIT");
#endif
#if defined(GL_DEPTH_BUFFER_BIT)
defconsti(env, "GL-DEPTH-BUFFER-BIT", (GLenum) GL_DEPTH_BUFFER_BIT, "GL_DEPTH_BUFFER_BIT");
#endif
#if defined(GL_ENABLE_BIT)
defconsti(env, "GL-ENABLE-BIT", (GLenum) GL_ENABLE_BIT, "GL_ENABLE_BIT");
#endif
#if defined(GL_EVAL_BIT)
defconsti(env, "GL-EVAL-BIT", (GLenum) GL_EVAL_BIT, "GL_EVAL_BIT");
#endif
#if defined(GL_FOG_BIT)
defconsti(env, "GL-FOG-BIT", (GLenum) GL_FOG_BIT, "GL_FOG_BIT");
#endif
#if defined(GL_HINT_BIT)
defconsti(env, "GL-HINT-BIT", (GLenum) GL_HINT_BIT, "GL_HINT_BIT");
#endif
#if defined(GL_LIGHTING_BIT)
defconsti(env, "GL-LIGHTING-BIT", (GLenum) GL_LIGHTING_BIT, "GL_LIGHTING_BIT");
#endif
#if defined(GL_LINE_BIT)
defconsti(env, "GL-LINE-BIT", (GLenum) GL_LINE_BIT, "GL_LINE_BIT");
#endif
#if defined(GL_LIST_BIT)
defconsti(env, "GL-LIST-BIT", (GLenum) GL_LIST_BIT, "GL_LIST_BIT");
#endif
#if defined(GL_MULTISAMPLE_BIT)
defconsti(env, "GL-MULTISAMPLE-BIT", (GLenum) GL_MULTISAMPLE_BIT, "GL_MULTISAMPLE_BIT");
#endif
#if defined(GL_MULTISAMPLE_BIT_3DFX)
defconsti(env, "GL-MULTISAMPLE-BIT-3DFX", (GLenum) GL_MULTISAMPLE_BIT_3DFX, "GL_MULTISAMPLE_BIT_3DFX");
#endif
#if defined(GL_MULTISAMPLE_BIT_ARB)
defconsti(env, "GL-MULTISAMPLE-BIT-ARB", (GLenum) GL_MULTISAMPLE_BIT_ARB, "GL_MULTISAMPLE_BIT_ARB");
#endif
#if defined(GL_MULTISAMPLE_BIT_EXT)
defconsti(env, "GL-MULTISAMPLE-BIT-EXT", (GLenum) GL_MULTISAMPLE_BIT_EXT, "GL_MULTISAMPLE_BIT_EXT");
#endif
#if defined(GL_PIXEL_MODE_BIT)
defconsti(env, "GL-PIXEL-MODE-BIT", (GLenum) GL_PIXEL_MODE_BIT, "GL_PIXEL_MODE_BIT");
#endif
#if defined(GL_POINT_BIT)
defconsti(env, "GL-POINT-BIT", (GLenum) GL_POINT_BIT, "GL_POINT_BIT");
#endif
#if defined(GL_POLYGON_BIT)
defconsti(env, "GL-POLYGON-BIT", (GLenum) GL_POLYGON_BIT, "GL_POLYGON_BIT");
#endif
#if defined(GL_POLYGON_STIPPLE_BIT)
defconsti(env, "GL-POLYGON-STIPPLE-BIT", (GLenum) GL_POLYGON_STIPPLE_BIT, "GL_POLYGON_STIPPLE_BIT");
#endif
#if defined(GL_SCISSOR_BIT)
defconsti(env, "GL-SCISSOR-BIT", (GLenum) GL_SCISSOR_BIT, "GL_SCISSOR_BIT");
#endif
#if defined(GL_STENCIL_BUFFER_BIT)
defconsti(env, "GL-STENCIL-BUFFER-BIT", (GLenum) GL_STENCIL_BUFFER_BIT, "GL_STENCIL_BUFFER_BIT");
#endif
#if defined(GL_TEXTURE_BIT)
defconsti(env, "GL-TEXTURE-BIT", (GLenum) GL_TEXTURE_BIT, "GL_TEXTURE_BIT");
#endif
#if defined(GL_TRANSFORM_BIT)
defconsti(env, "GL-TRANSFORM-BIT", (GLenum) GL_TRANSFORM_BIT, "GL_TRANSFORM_BIT");
#endif
#if defined(GL_VIEWPORT_BIT)
defconsti(env, "GL-VIEWPORT-BIT", (GLenum) GL_VIEWPORT_BIT, "GL_VIEWPORT_BIT");
#endif
#if defined(GL_ALWAYS)
defconsti(env, "GL-ALWAYS", (GLenum) GL_ALWAYS, "GL_ALWAYS");
#endif
#if defined(GL_EQUAL)
defconsti(env, "GL-EQUAL", (GLenum) GL_EQUAL, "GL_EQUAL");
#endif
#if defined(GL_GEQUAL)
defconsti(env, "GL-GEQUAL", (GLenum) GL_GEQUAL, "GL_GEQUAL");
#endif
#if defined(GL_GREATER)
defconsti(env, "GL-GREATER", (GLenum) GL_GREATER, "GL_GREATER");
#endif
#if defined(GL_LEQUAL)
defconsti(env, "GL-LEQUAL", (GLenum) GL_LEQUAL, "GL_LEQUAL");
#endif
#if defined(GL_LESS)
defconsti(env, "GL-LESS", (GLenum) GL_LESS, "GL_LESS");
#endif
#if defined(GL_NEVER)
defconsti(env, "GL-NEVER", (GLenum) GL_NEVER, "GL_NEVER");
#endif
#if defined(GL_NOTEQUAL)
defconsti(env, "GL-NOTEQUAL", (GLenum) GL_NOTEQUAL, "GL_NOTEQUAL");
#endif
#if defined(GL_ALPHA_MAX_SGIX)
defconsti(env, "GL-ALPHA-MAX-SGIX", (GLenum) GL_ALPHA_MAX_SGIX, "GL_ALPHA_MAX_SGIX");
#endif
#if defined(GL_ALPHA_MIN_SGIX)
defconsti(env, "GL-ALPHA-MIN-SGIX", (GLenum) GL_ALPHA_MIN_SGIX, "GL_ALPHA_MIN_SGIX");
#endif
#if defined(GL_FUNC_ADD)
defconsti(env, "GL-FUNC-ADD", (GLenum) GL_FUNC_ADD, "GL_FUNC_ADD");
#endif
#if defined(GL_FUNC_ADD_EXT)
defconsti(env, "GL-FUNC-ADD-EXT", (GLenum) GL_FUNC_ADD_EXT, "GL_FUNC_ADD_EXT");
#endif
#if defined(GL_FUNC_REVERSE_SUBTRACT)
defconsti(env, "GL-FUNC-REVERSE-SUBTRACT", (GLenum) GL_FUNC_REVERSE_SUBTRACT, "GL_FUNC_REVERSE_SUBTRACT");
#endif
#if defined(GL_FUNC_REVERSE_SUBTRACT_EXT)
defconsti(env, "GL-FUNC-REVERSE-SUBTRACT-EXT", (GLenum) GL_FUNC_REVERSE_SUBTRACT_EXT, "GL_FUNC_REVERSE_SUBTRACT_EXT");
#endif
#if defined(GL_FUNC_SUBTRACT)
defconsti(env, "GL-FUNC-SUBTRACT", (GLenum) GL_FUNC_SUBTRACT, "GL_FUNC_SUBTRACT");
#endif
#if defined(GL_FUNC_SUBTRACT_EXT)
defconsti(env, "GL-FUNC-SUBTRACT-EXT", (GLenum) GL_FUNC_SUBTRACT_EXT, "GL_FUNC_SUBTRACT_EXT");
#endif
#if defined(GL_MAX)
defconsti(env, "GL-MAX", (GLenum) GL_MAX, "GL_MAX");
#endif
#if defined(GL_MAX_EXT)
defconsti(env, "GL-MAX-EXT", (GLenum) GL_MAX_EXT, "GL_MAX_EXT");
#endif
#if defined(GL_MIN)
defconsti(env, "GL-MIN", (GLenum) GL_MIN, "GL_MIN");
#endif
#if defined(GL_MIN_EXT)
defconsti(env, "GL-MIN-EXT", (GLenum) GL_MIN_EXT, "GL_MIN_EXT");
#endif
#if defined(GL_FALSE)
defconsti(env, "GL-FALSE", (GLenum) GL_FALSE, "GL_FALSE");
#endif
#if defined(GL_TRUE)
defconsti(env, "GL-TRUE", (GLenum) GL_TRUE, "GL_TRUE");
#endif
#if defined(GL_MULTISAMPLE_BUFFER_BIT7_QCOM)
defconsti(env, "GL-MULTISAMPLE-BUFFER-BIT7-QCOM", (GLenum) GL_MULTISAMPLE_BUFFER_BIT7_QCOM, "GL_MULTISAMPLE_BUFFER_BIT7_QCOM");
#endif
#if defined(GL_MULTISAMPLE_BUFFER_BIT6_QCOM)
defconsti(env, "GL-MULTISAMPLE-BUFFER-BIT6-QCOM", (GLenum) GL_MULTISAMPLE_BUFFER_BIT6_QCOM, "GL_MULTISAMPLE_BUFFER_BIT6_QCOM");
#endif
#if defined(GL_MULTISAMPLE_BUFFER_BIT5_QCOM)
defconsti(env, "GL-MULTISAMPLE-BUFFER-BIT5-QCOM", (GLenum) GL_MULTISAMPLE_BUFFER_BIT5_QCOM, "GL_MULTISAMPLE_BUFFER_BIT5_QCOM");
#endif
#if defined(GL_MULTISAMPLE_BUFFER_BIT4_QCOM)
defconsti(env, "GL-MULTISAMPLE-BUFFER-BIT4-QCOM", (GLenum) GL_MULTISAMPLE_BUFFER_BIT4_QCOM, "GL_MULTISAMPLE_BUFFER_BIT4_QCOM");
#endif
#if defined(GL_MULTISAMPLE_BUFFER_BIT3_QCOM)
defconsti(env, "GL-MULTISAMPLE-BUFFER-BIT3-QCOM", (GLenum) GL_MULTISAMPLE_BUFFER_BIT3_QCOM, "GL_MULTISAMPLE_BUFFER_BIT3_QCOM");
#endif
#if defined(GL_MULTISAMPLE_BUFFER_BIT2_QCOM)
defconsti(env, "GL-MULTISAMPLE-BUFFER-BIT2-QCOM", (GLenum) GL_MULTISAMPLE_BUFFER_BIT2_QCOM, "GL_MULTISAMPLE_BUFFER_BIT2_QCOM");
#endif
#if defined(GL_MULTISAMPLE_BUFFER_BIT1_QCOM)
defconsti(env, "GL-MULTISAMPLE-BUFFER-BIT1-QCOM", (GLenum) GL_MULTISAMPLE_BUFFER_BIT1_QCOM, "GL_MULTISAMPLE_BUFFER_BIT1_QCOM");
#endif
#if defined(GL_MULTISAMPLE_BUFFER_BIT0_QCOM)
defconsti(env, "GL-MULTISAMPLE-BUFFER-BIT0-QCOM", (GLenum) GL_MULTISAMPLE_BUFFER_BIT0_QCOM, "GL_MULTISAMPLE_BUFFER_BIT0_QCOM");
#endif
#if defined(GL_STENCIL_BUFFER_BIT7_QCOM)
defconsti(env, "GL-STENCIL-BUFFER-BIT7-QCOM", (GLenum) GL_STENCIL_BUFFER_BIT7_QCOM, "GL_STENCIL_BUFFER_BIT7_QCOM");
#endif
#if defined(GL_STENCIL_BUFFER_BIT6_QCOM)
defconsti(env, "GL-STENCIL-BUFFER-BIT6-QCOM", (GLenum) GL_STENCIL_BUFFER_BIT6_QCOM, "GL_STENCIL_BUFFER_BIT6_QCOM");
#endif
#if defined(GL_STENCIL_BUFFER_BIT5_QCOM)
defconsti(env, "GL-STENCIL-BUFFER-BIT5-QCOM", (GLenum) GL_STENCIL_BUFFER_BIT5_QCOM, "GL_STENCIL_BUFFER_BIT5_QCOM");
#endif
#if defined(GL_STENCIL_BUFFER_BIT4_QCOM)
defconsti(env, "GL-STENCIL-BUFFER-BIT4-QCOM", (GLenum) GL_STENCIL_BUFFER_BIT4_QCOM, "GL_STENCIL_BUFFER_BIT4_QCOM");
#endif
#if defined(GL_STENCIL_BUFFER_BIT3_QCOM)
defconsti(env, "GL-STENCIL-BUFFER-BIT3-QCOM", (GLenum) GL_STENCIL_BUFFER_BIT3_QCOM, "GL_STENCIL_BUFFER_BIT3_QCOM");
#endif
#if defined(GL_STENCIL_BUFFER_BIT2_QCOM)
defconsti(env, "GL-STENCIL-BUFFER-BIT2-QCOM", (GLenum) GL_STENCIL_BUFFER_BIT2_QCOM, "GL_STENCIL_BUFFER_BIT2_QCOM");
#endif
#if defined(GL_STENCIL_BUFFER_BIT1_QCOM)
defconsti(env, "GL-STENCIL-BUFFER-BIT1-QCOM", (GLenum) GL_STENCIL_BUFFER_BIT1_QCOM, "GL_STENCIL_BUFFER_BIT1_QCOM");
#endif
#if defined(GL_STENCIL_BUFFER_BIT0_QCOM)
defconsti(env, "GL-STENCIL-BUFFER-BIT0-QCOM", (GLenum) GL_STENCIL_BUFFER_BIT0_QCOM, "GL_STENCIL_BUFFER_BIT0_QCOM");
#endif
#if defined(GL_DEPTH_BUFFER_BIT7_QCOM)
defconsti(env, "GL-DEPTH-BUFFER-BIT7-QCOM", (GLenum) GL_DEPTH_BUFFER_BIT7_QCOM, "GL_DEPTH_BUFFER_BIT7_QCOM");
#endif
#if defined(GL_DEPTH_BUFFER_BIT6_QCOM)
defconsti(env, "GL-DEPTH-BUFFER-BIT6-QCOM", (GLenum) GL_DEPTH_BUFFER_BIT6_QCOM, "GL_DEPTH_BUFFER_BIT6_QCOM");
#endif
#if defined(GL_DEPTH_BUFFER_BIT5_QCOM)
defconsti(env, "GL-DEPTH-BUFFER-BIT5-QCOM", (GLenum) GL_DEPTH_BUFFER_BIT5_QCOM, "GL_DEPTH_BUFFER_BIT5_QCOM");
#endif
#if defined(GL_DEPTH_BUFFER_BIT4_QCOM)
defconsti(env, "GL-DEPTH-BUFFER-BIT4-QCOM", (GLenum) GL_DEPTH_BUFFER_BIT4_QCOM, "GL_DEPTH_BUFFER_BIT4_QCOM");
#endif
#if defined(GL_DEPTH_BUFFER_BIT3_QCOM)
defconsti(env, "GL-DEPTH-BUFFER-BIT3-QCOM", (GLenum) GL_DEPTH_BUFFER_BIT3_QCOM, "GL_DEPTH_BUFFER_BIT3_QCOM");
#endif
#if defined(GL_DEPTH_BUFFER_BIT2_QCOM)
defconsti(env, "GL-DEPTH-BUFFER-BIT2-QCOM", (GLenum) GL_DEPTH_BUFFER_BIT2_QCOM, "GL_DEPTH_BUFFER_BIT2_QCOM");
#endif
#if defined(GL_DEPTH_BUFFER_BIT1_QCOM)
defconsti(env, "GL-DEPTH-BUFFER-BIT1-QCOM", (GLenum) GL_DEPTH_BUFFER_BIT1_QCOM, "GL_DEPTH_BUFFER_BIT1_QCOM");
#endif
#if defined(GL_DEPTH_BUFFER_BIT0_QCOM)
defconsti(env, "GL-DEPTH-BUFFER-BIT0-QCOM", (GLenum) GL_DEPTH_BUFFER_BIT0_QCOM, "GL_DEPTH_BUFFER_BIT0_QCOM");
#endif
#if defined(GL_COLOR_BUFFER_BIT7_QCOM)
defconsti(env, "GL-COLOR-BUFFER-BIT7-QCOM", (GLenum) GL_COLOR_BUFFER_BIT7_QCOM, "GL_COLOR_BUFFER_BIT7_QCOM");
#endif
#if defined(GL_COLOR_BUFFER_BIT6_QCOM)
defconsti(env, "GL-COLOR-BUFFER-BIT6-QCOM", (GLenum) GL_COLOR_BUFFER_BIT6_QCOM, "GL_COLOR_BUFFER_BIT6_QCOM");
#endif
#if defined(GL_COLOR_BUFFER_BIT5_QCOM)
defconsti(env, "GL-COLOR-BUFFER-BIT5-QCOM", (GLenum) GL_COLOR_BUFFER_BIT5_QCOM, "GL_COLOR_BUFFER_BIT5_QCOM");
#endif
#if defined(GL_COLOR_BUFFER_BIT4_QCOM)
defconsti(env, "GL-COLOR-BUFFER-BIT4-QCOM", (GLenum) GL_COLOR_BUFFER_BIT4_QCOM, "GL_COLOR_BUFFER_BIT4_QCOM");
#endif
#if defined(GL_COLOR_BUFFER_BIT3_QCOM)
defconsti(env, "GL-COLOR-BUFFER-BIT3-QCOM", (GLenum) GL_COLOR_BUFFER_BIT3_QCOM, "GL_COLOR_BUFFER_BIT3_QCOM");
#endif
#if defined(GL_COLOR_BUFFER_BIT2_QCOM)
defconsti(env, "GL-COLOR-BUFFER-BIT2-QCOM", (GLenum) GL_COLOR_BUFFER_BIT2_QCOM, "GL_COLOR_BUFFER_BIT2_QCOM");
#endif
#if defined(GL_COLOR_BUFFER_BIT1_QCOM)
defconsti(env, "GL-COLOR-BUFFER-BIT1-QCOM", (GLenum) GL_COLOR_BUFFER_BIT1_QCOM, "GL_COLOR_BUFFER_BIT1_QCOM");
#endif
#if defined(GL_COLOR_BUFFER_BIT0_QCOM)
defconsti(env, "GL-COLOR-BUFFER-BIT0-QCOM", (GLenum) GL_COLOR_BUFFER_BIT0_QCOM, "GL_COLOR_BUFFER_BIT0_QCOM");
#endif
#if defined(GL_ARRAY_BUFFER)
defconsti(env, "GL-ARRAY-BUFFER", (GLenum) GL_ARRAY_BUFFER, "GL_ARRAY_BUFFER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER", (GLenum) GL_ATOMIC_COUNTER_BUFFER, "GL_ATOMIC_COUNTER_BUFFER");
#endif
#if defined(GL_COPY_READ_BUFFER)
defconsti(env, "GL-COPY-READ-BUFFER", (GLenum) GL_COPY_READ_BUFFER, "GL_COPY_READ_BUFFER");
#endif
#if defined(GL_COPY_WRITE_BUFFER)
defconsti(env, "GL-COPY-WRITE-BUFFER", (GLenum) GL_COPY_WRITE_BUFFER, "GL_COPY_WRITE_BUFFER");
#endif
#if defined(GL_DISPATCH_INDIRECT_BUFFER)
defconsti(env, "GL-DISPATCH-INDIRECT-BUFFER", (GLenum) GL_DISPATCH_INDIRECT_BUFFER, "GL_DISPATCH_INDIRECT_BUFFER");
#endif
#if defined(GL_DRAW_INDIRECT_BUFFER)
defconsti(env, "GL-DRAW-INDIRECT-BUFFER", (GLenum) GL_DRAW_INDIRECT_BUFFER, "GL_DRAW_INDIRECT_BUFFER");
#endif
#if defined(GL_ELEMENT_ARRAY_BUFFER)
defconsti(env, "GL-ELEMENT-ARRAY-BUFFER", (GLenum) GL_ELEMENT_ARRAY_BUFFER, "GL_ELEMENT_ARRAY_BUFFER");
#endif
#if defined(GL_PIXEL_PACK_BUFFER)
defconsti(env, "GL-PIXEL-PACK-BUFFER", (GLenum) GL_PIXEL_PACK_BUFFER, "GL_PIXEL_PACK_BUFFER");
#endif
#if defined(GL_PIXEL_UNPACK_BUFFER)
defconsti(env, "GL-PIXEL-UNPACK-BUFFER", (GLenum) GL_PIXEL_UNPACK_BUFFER, "GL_PIXEL_UNPACK_BUFFER");
#endif
#if defined(GL_QUERY_BUFFER)
defconsti(env, "GL-QUERY-BUFFER", (GLenum) GL_QUERY_BUFFER, "GL_QUERY_BUFFER");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER)
defconsti(env, "GL-SHADER-STORAGE-BUFFER", (GLenum) GL_SHADER_STORAGE_BUFFER, "GL_SHADER_STORAGE_BUFFER");
#endif
#if defined(GL_TEXTURE_BUFFER)
defconsti(env, "GL-TEXTURE-BUFFER", (GLenum) GL_TEXTURE_BUFFER, "GL_TEXTURE_BUFFER");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER, "GL_TRANSFORM_FEEDBACK_BUFFER");
#endif
#if defined(GL_UNIFORM_BUFFER)
defconsti(env, "GL-UNIFORM-BUFFER", (GLenum) GL_UNIFORM_BUFFER, "GL_UNIFORM_BUFFER");
#endif
#if defined(GL_PARAMETER_BUFFER)
defconsti(env, "GL-PARAMETER-BUFFER", (GLenum) GL_PARAMETER_BUFFER, "GL_PARAMETER_BUFFER");
#endif
#if defined(GL_STREAM_DRAW)
defconsti(env, "GL-STREAM-DRAW", (GLenum) GL_STREAM_DRAW, "GL_STREAM_DRAW");
#endif
#if defined(GL_STREAM_READ)
defconsti(env, "GL-STREAM-READ", (GLenum) GL_STREAM_READ, "GL_STREAM_READ");
#endif
#if defined(GL_STREAM_COPY)
defconsti(env, "GL-STREAM-COPY", (GLenum) GL_STREAM_COPY, "GL_STREAM_COPY");
#endif
#if defined(GL_STATIC_DRAW)
defconsti(env, "GL-STATIC-DRAW", (GLenum) GL_STATIC_DRAW, "GL_STATIC_DRAW");
#endif
#if defined(GL_STATIC_READ)
defconsti(env, "GL-STATIC-READ", (GLenum) GL_STATIC_READ, "GL_STATIC_READ");
#endif
#if defined(GL_STATIC_COPY)
defconsti(env, "GL-STATIC-COPY", (GLenum) GL_STATIC_COPY, "GL_STATIC_COPY");
#endif
#if defined(GL_DYNAMIC_DRAW)
defconsti(env, "GL-DYNAMIC-DRAW", (GLenum) GL_DYNAMIC_DRAW, "GL_DYNAMIC_DRAW");
#endif
#if defined(GL_DYNAMIC_READ)
defconsti(env, "GL-DYNAMIC-READ", (GLenum) GL_DYNAMIC_READ, "GL_DYNAMIC_READ");
#endif
#if defined(GL_DYNAMIC_COPY)
defconsti(env, "GL-DYNAMIC-COPY", (GLenum) GL_DYNAMIC_COPY, "GL_DYNAMIC_COPY");
#endif
#if defined(GL_READ_ONLY)
defconsti(env, "GL-READ-ONLY", (GLenum) GL_READ_ONLY, "GL_READ_ONLY");
#endif
#if defined(GL_WRITE_ONLY)
defconsti(env, "GL-WRITE-ONLY", (GLenum) GL_WRITE_ONLY, "GL_WRITE_ONLY");
#endif
#if defined(GL_READ_WRITE)
defconsti(env, "GL-READ-WRITE", (GLenum) GL_READ_WRITE, "GL_READ_WRITE");
#endif
#if defined(GL_CLIENT_STORAGE_BIT)
defconsti(env, "GL-CLIENT-STORAGE-BIT", (GLenum) GL_CLIENT_STORAGE_BIT, "GL_CLIENT_STORAGE_BIT");
#endif
#if defined(GL_CLIENT_STORAGE_BIT_EXT)
defconsti(env, "GL-CLIENT-STORAGE-BIT-EXT", (GLenum) GL_CLIENT_STORAGE_BIT_EXT, "GL_CLIENT_STORAGE_BIT_EXT");
#endif
#if defined(GL_DYNAMIC_STORAGE_BIT)
defconsti(env, "GL-DYNAMIC-STORAGE-BIT", (GLenum) GL_DYNAMIC_STORAGE_BIT, "GL_DYNAMIC_STORAGE_BIT");
#endif
#if defined(GL_DYNAMIC_STORAGE_BIT_EXT)
defconsti(env, "GL-DYNAMIC-STORAGE-BIT-EXT", (GLenum) GL_DYNAMIC_STORAGE_BIT_EXT, "GL_DYNAMIC_STORAGE_BIT_EXT");
#endif
#if defined(GL_MAP_COHERENT_BIT)
defconsti(env, "GL-MAP-COHERENT-BIT", (GLenum) GL_MAP_COHERENT_BIT, "GL_MAP_COHERENT_BIT");
#endif
#if defined(GL_MAP_COHERENT_BIT_EXT)
defconsti(env, "GL-MAP-COHERENT-BIT-EXT", (GLenum) GL_MAP_COHERENT_BIT_EXT, "GL_MAP_COHERENT_BIT_EXT");
#endif
#if defined(GL_MAP_PERSISTENT_BIT)
defconsti(env, "GL-MAP-PERSISTENT-BIT", (GLenum) GL_MAP_PERSISTENT_BIT, "GL_MAP_PERSISTENT_BIT");
#endif
#if defined(GL_MAP_PERSISTENT_BIT_EXT)
defconsti(env, "GL-MAP-PERSISTENT-BIT-EXT", (GLenum) GL_MAP_PERSISTENT_BIT_EXT, "GL_MAP_PERSISTENT_BIT_EXT");
#endif
#if defined(GL_MAP_READ_BIT)
defconsti(env, "GL-MAP-READ-BIT", (GLenum) GL_MAP_READ_BIT, "GL_MAP_READ_BIT");
#endif
#if defined(GL_MAP_READ_BIT_EXT)
defconsti(env, "GL-MAP-READ-BIT-EXT", (GLenum) GL_MAP_READ_BIT_EXT, "GL_MAP_READ_BIT_EXT");
#endif
#if defined(GL_MAP_WRITE_BIT)
defconsti(env, "GL-MAP-WRITE-BIT", (GLenum) GL_MAP_WRITE_BIT, "GL_MAP_WRITE_BIT");
#endif
#if defined(GL_MAP_WRITE_BIT_EXT)
defconsti(env, "GL-MAP-WRITE-BIT-EXT", (GLenum) GL_MAP_WRITE_BIT_EXT, "GL_MAP_WRITE_BIT_EXT");
#endif
#if defined(GL_SPARSE_STORAGE_BIT_ARB)
defconsti(env, "GL-SPARSE-STORAGE-BIT-ARB", (GLenum) GL_SPARSE_STORAGE_BIT_ARB, "GL_SPARSE_STORAGE_BIT_ARB");
#endif
#if defined(GL_LGPU_SEPARATE_STORAGE_BIT_NVX)
defconsti(env, "GL-LGPU-SEPARATE-STORAGE-BIT-NVX", (GLenum) GL_LGPU_SEPARATE_STORAGE_BIT_NVX, "GL_LGPU_SEPARATE_STORAGE_BIT_NVX");
#endif
#if defined(GL_PER_GPU_STORAGE_BIT_NV)
defconsti(env, "GL-PER-GPU-STORAGE-BIT-NV", (GLenum) GL_PER_GPU_STORAGE_BIT_NV, "GL_PER_GPU_STORAGE_BIT_NV");
#endif
#if defined(GL_EXTERNAL_STORAGE_BIT_NVX)
defconsti(env, "GL-EXTERNAL-STORAGE-BIT-NVX", (GLenum) GL_EXTERNAL_STORAGE_BIT_NVX, "GL_EXTERNAL_STORAGE_BIT_NVX");
#endif
#if defined(GL_ACCUM_BUFFER_BIT)
defconsti(env, "GL-ACCUM-BUFFER-BIT", (GLenum) GL_ACCUM_BUFFER_BIT, "GL_ACCUM_BUFFER_BIT");
#endif
#if defined(GL_COLOR_BUFFER_BIT)
defconsti(env, "GL-COLOR-BUFFER-BIT", (GLenum) GL_COLOR_BUFFER_BIT, "GL_COLOR_BUFFER_BIT");
#endif
#if defined(GL_COVERAGE_BUFFER_BIT_NV)
defconsti(env, "GL-COVERAGE-BUFFER-BIT-NV", (GLenum) GL_COVERAGE_BUFFER_BIT_NV, "GL_COVERAGE_BUFFER_BIT_NV");
#endif
#if defined(GL_DEPTH_BUFFER_BIT)
defconsti(env, "GL-DEPTH-BUFFER-BIT", (GLenum) GL_DEPTH_BUFFER_BIT, "GL_DEPTH_BUFFER_BIT");
#endif
#if defined(GL_STENCIL_BUFFER_BIT)
defconsti(env, "GL-STENCIL-BUFFER-BIT", (GLenum) GL_STENCIL_BUFFER_BIT, "GL_STENCIL_BUFFER_BIT");
#endif
#if defined(GL_CLIENT_ALL_ATTRIB_BITS)
defconsti(env, "GL-CLIENT-ALL-ATTRIB-BITS", (GLenum) GL_CLIENT_ALL_ATTRIB_BITS, "GL_CLIENT_ALL_ATTRIB_BITS");
#endif
#if defined(GL_CLIENT_PIXEL_STORE_BIT)
defconsti(env, "GL-CLIENT-PIXEL-STORE-BIT", (GLenum) GL_CLIENT_PIXEL_STORE_BIT, "GL_CLIENT_PIXEL_STORE_BIT");
#endif
#if defined(GL_CLIENT_VERTEX_ARRAY_BIT)
defconsti(env, "GL-CLIENT-VERTEX-ARRAY-BIT", (GLenum) GL_CLIENT_VERTEX_ARRAY_BIT, "GL_CLIENT_VERTEX_ARRAY_BIT");
#endif
#if defined(GL_CLIP_DISTANCE0)
defconsti(env, "GL-CLIP-DISTANCE0", (GLenum) GL_CLIP_DISTANCE0, "GL_CLIP_DISTANCE0");
#endif
#if defined(GL_CLIP_DISTANCE1)
defconsti(env, "GL-CLIP-DISTANCE1", (GLenum) GL_CLIP_DISTANCE1, "GL_CLIP_DISTANCE1");
#endif
#if defined(GL_CLIP_DISTANCE2)
defconsti(env, "GL-CLIP-DISTANCE2", (GLenum) GL_CLIP_DISTANCE2, "GL_CLIP_DISTANCE2");
#endif
#if defined(GL_CLIP_DISTANCE3)
defconsti(env, "GL-CLIP-DISTANCE3", (GLenum) GL_CLIP_DISTANCE3, "GL_CLIP_DISTANCE3");
#endif
#if defined(GL_CLIP_DISTANCE4)
defconsti(env, "GL-CLIP-DISTANCE4", (GLenum) GL_CLIP_DISTANCE4, "GL_CLIP_DISTANCE4");
#endif
#if defined(GL_CLIP_DISTANCE5)
defconsti(env, "GL-CLIP-DISTANCE5", (GLenum) GL_CLIP_DISTANCE5, "GL_CLIP_DISTANCE5");
#endif
#if defined(GL_CLIP_DISTANCE6)
defconsti(env, "GL-CLIP-DISTANCE6", (GLenum) GL_CLIP_DISTANCE6, "GL_CLIP_DISTANCE6");
#endif
#if defined(GL_CLIP_DISTANCE7)
defconsti(env, "GL-CLIP-DISTANCE7", (GLenum) GL_CLIP_DISTANCE7, "GL_CLIP_DISTANCE7");
#endif
#if defined(GL_CLIP_PLANE0)
defconsti(env, "GL-CLIP-PLANE0", (GLenum) GL_CLIP_PLANE0, "GL_CLIP_PLANE0");
#endif
#if defined(GL_CLIP_PLANE1)
defconsti(env, "GL-CLIP-PLANE1", (GLenum) GL_CLIP_PLANE1, "GL_CLIP_PLANE1");
#endif
#if defined(GL_CLIP_PLANE2)
defconsti(env, "GL-CLIP-PLANE2", (GLenum) GL_CLIP_PLANE2, "GL_CLIP_PLANE2");
#endif
#if defined(GL_CLIP_PLANE3)
defconsti(env, "GL-CLIP-PLANE3", (GLenum) GL_CLIP_PLANE3, "GL_CLIP_PLANE3");
#endif
#if defined(GL_CLIP_PLANE4)
defconsti(env, "GL-CLIP-PLANE4", (GLenum) GL_CLIP_PLANE4, "GL_CLIP_PLANE4");
#endif
#if defined(GL_CLIP_PLANE5)
defconsti(env, "GL-CLIP-PLANE5", (GLenum) GL_CLIP_PLANE5, "GL_CLIP_PLANE5");
#endif
#if defined(GL_BACK)
defconsti(env, "GL-BACK", (GLenum) GL_BACK, "GL_BACK");
#endif
#if defined(GL_FRONT)
defconsti(env, "GL-FRONT", (GLenum) GL_FRONT, "GL_FRONT");
#endif
#if defined(GL_FRONT_AND_BACK)
defconsti(env, "GL-FRONT-AND-BACK", (GLenum) GL_FRONT_AND_BACK, "GL_FRONT_AND_BACK");
#endif
#if defined(GL_AMBIENT)
defconsti(env, "GL-AMBIENT", (GLenum) GL_AMBIENT, "GL_AMBIENT");
#endif
#if defined(GL_AMBIENT_AND_DIFFUSE)
defconsti(env, "GL-AMBIENT-AND-DIFFUSE", (GLenum) GL_AMBIENT_AND_DIFFUSE, "GL_AMBIENT_AND_DIFFUSE");
#endif
#if defined(GL_DIFFUSE)
defconsti(env, "GL-DIFFUSE", (GLenum) GL_DIFFUSE, "GL_DIFFUSE");
#endif
#if defined(GL_EMISSION)
defconsti(env, "GL-EMISSION", (GLenum) GL_EMISSION, "GL_EMISSION");
#endif
#if defined(GL_SPECULAR)
defconsti(env, "GL-SPECULAR", (GLenum) GL_SPECULAR, "GL_SPECULAR");
#endif
#if defined(GL_BYTE)
defconsti(env, "GL-BYTE", (GLenum) GL_BYTE, "GL_BYTE");
#endif
#if defined(GL_DOUBLE)
defconsti(env, "GL-DOUBLE", (GLenum) GL_DOUBLE, "GL_DOUBLE");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_INT)
defconsti(env, "GL-INT", (GLenum) GL_INT, "GL_INT");
#endif
#if defined(GL_SHORT)
defconsti(env, "GL-SHORT", (GLenum) GL_SHORT, "GL_SHORT");
#endif
#if defined(GL_UNSIGNED_BYTE)
defconsti(env, "GL-UNSIGNED-BYTE", (GLenum) GL_UNSIGNED_BYTE, "GL_UNSIGNED_BYTE");
#endif
#if defined(GL_UNSIGNED_INT)
defconsti(env, "GL-UNSIGNED-INT", (GLenum) GL_UNSIGNED_INT, "GL_UNSIGNED_INT");
#endif
#if defined(GL_UNSIGNED_SHORT)
defconsti(env, "GL-UNSIGNED-SHORT", (GLenum) GL_UNSIGNED_SHORT, "GL_UNSIGNED_SHORT");
#endif
#if defined(GL_COLOR_TABLE_BIAS)
defconsti(env, "GL-COLOR-TABLE-BIAS", (GLenum) GL_COLOR_TABLE_BIAS, "GL_COLOR_TABLE_BIAS");
#endif
#if defined(GL_COLOR_TABLE_BIAS_SGI)
defconsti(env, "GL-COLOR-TABLE-BIAS-SGI", (GLenum) GL_COLOR_TABLE_BIAS_SGI, "GL_COLOR_TABLE_BIAS_SGI");
#endif
#if defined(GL_COLOR_TABLE_SCALE)
defconsti(env, "GL-COLOR-TABLE-SCALE", (GLenum) GL_COLOR_TABLE_SCALE, "GL_COLOR_TABLE_SCALE");
#endif
#if defined(GL_COLOR_TABLE_SCALE_SGI)
defconsti(env, "GL-COLOR-TABLE-SCALE-SGI", (GLenum) GL_COLOR_TABLE_SCALE_SGI, "GL_COLOR_TABLE_SCALE_SGI");
#endif
#if defined(GL_COLOR_TABLE)
defconsti(env, "GL-COLOR-TABLE", (GLenum) GL_COLOR_TABLE, "GL_COLOR_TABLE");
#endif
#if defined(GL_COLOR_TABLE_SGI)
defconsti(env, "GL-COLOR-TABLE-SGI", (GLenum) GL_COLOR_TABLE_SGI, "GL_COLOR_TABLE_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_COLOR_TABLE)
defconsti(env, "GL-POST-COLOR-MATRIX-COLOR-TABLE", (GLenum) GL_POST_COLOR_MATRIX_COLOR_TABLE, "GL_POST_COLOR_MATRIX_COLOR_TABLE");
#endif
#if defined(GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-COLOR-TABLE-SGI", (GLenum) GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI, "GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI");
#endif
#if defined(GL_POST_CONVOLUTION_COLOR_TABLE)
defconsti(env, "GL-POST-CONVOLUTION-COLOR-TABLE", (GLenum) GL_POST_CONVOLUTION_COLOR_TABLE, "GL_POST_CONVOLUTION_COLOR_TABLE");
#endif
#if defined(GL_POST_CONVOLUTION_COLOR_TABLE_SGI)
defconsti(env, "GL-POST-CONVOLUTION-COLOR-TABLE-SGI", (GLenum) GL_POST_CONVOLUTION_COLOR_TABLE_SGI, "GL_POST_CONVOLUTION_COLOR_TABLE_SGI");
#endif
#if defined(GL_PROXY_COLOR_TABLE)
defconsti(env, "GL-PROXY-COLOR-TABLE", (GLenum) GL_PROXY_COLOR_TABLE, "GL_PROXY_COLOR_TABLE");
#endif
#if defined(GL_PROXY_COLOR_TABLE_SGI)
defconsti(env, "GL-PROXY-COLOR-TABLE-SGI", (GLenum) GL_PROXY_COLOR_TABLE_SGI, "GL_PROXY_COLOR_TABLE_SGI");
#endif
#if defined(GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE)
defconsti(env, "GL-PROXY-POST-COLOR-MATRIX-COLOR-TABLE", (GLenum) GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE, "GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE");
#endif
#if defined(GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI)
defconsti(env, "GL-PROXY-POST-COLOR-MATRIX-COLOR-TABLE-SGI", (GLenum) GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI, "GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI");
#endif
#if defined(GL_PROXY_POST_CONVOLUTION_COLOR_TABLE)
defconsti(env, "GL-PROXY-POST-CONVOLUTION-COLOR-TABLE", (GLenum) GL_PROXY_POST_CONVOLUTION_COLOR_TABLE, "GL_PROXY_POST_CONVOLUTION_COLOR_TABLE");
#endif
#if defined(GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI)
defconsti(env, "GL-PROXY-POST-CONVOLUTION-COLOR-TABLE-SGI", (GLenum) GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI, "GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI");
#endif
#if defined(GL_PROXY_TEXTURE_COLOR_TABLE_SGI)
defconsti(env, "GL-PROXY-TEXTURE-COLOR-TABLE-SGI", (GLenum) GL_PROXY_TEXTURE_COLOR_TABLE_SGI, "GL_PROXY_TEXTURE_COLOR_TABLE_SGI");
#endif
#if defined(GL_TEXTURE_COLOR_TABLE_SGI)
defconsti(env, "GL-TEXTURE-COLOR-TABLE-SGI", (GLenum) GL_TEXTURE_COLOR_TABLE_SGI, "GL_TEXTURE_COLOR_TABLE_SGI");
#endif
#if defined(GL_CONTEXT_FLAG_DEBUG_BIT)
defconsti(env, "GL-CONTEXT-FLAG-DEBUG-BIT", (GLenum) GL_CONTEXT_FLAG_DEBUG_BIT, "GL_CONTEXT_FLAG_DEBUG_BIT");
#endif
#if defined(GL_CONTEXT_FLAG_DEBUG_BIT_KHR)
defconsti(env, "GL-CONTEXT-FLAG-DEBUG-BIT-KHR", (GLenum) GL_CONTEXT_FLAG_DEBUG_BIT_KHR, "GL_CONTEXT_FLAG_DEBUG_BIT_KHR");
#endif
#if defined(GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT)
defconsti(env, "GL-CONTEXT-FLAG-FORWARD-COMPATIBLE-BIT", (GLenum) GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT, "GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT");
#endif
#if defined(GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT)
defconsti(env, "GL-CONTEXT-FLAG-ROBUST-ACCESS-BIT", (GLenum) GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT, "GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT");
#endif
#if defined(GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB)
defconsti(env, "GL-CONTEXT-FLAG-ROBUST-ACCESS-BIT-ARB", (GLenum) GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB, "GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB");
#endif
#if defined(GL_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT)
defconsti(env, "GL-CONTEXT-FLAG-PROTECTED-CONTENT-BIT-EXT", (GLenum) GL_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT, "GL_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT");
#endif
#if defined(GL_CONTEXT_FLAG_NO_ERROR_BIT)
defconsti(env, "GL-CONTEXT-FLAG-NO-ERROR-BIT", (GLenum) GL_CONTEXT_FLAG_NO_ERROR_BIT, "GL_CONTEXT_FLAG_NO_ERROR_BIT");
#endif
#if defined(GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR)
defconsti(env, "GL-CONTEXT-FLAG-NO-ERROR-BIT-KHR", (GLenum) GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR, "GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR");
#endif
#if defined(GL_CONTEXT_COMPATIBILITY_PROFILE_BIT)
defconsti(env, "GL-CONTEXT-COMPATIBILITY-PROFILE-BIT", (GLenum) GL_CONTEXT_COMPATIBILITY_PROFILE_BIT, "GL_CONTEXT_COMPATIBILITY_PROFILE_BIT");
#endif
#if defined(GL_CONTEXT_CORE_PROFILE_BIT)
defconsti(env, "GL-CONTEXT-CORE-PROFILE-BIT", (GLenum) GL_CONTEXT_CORE_PROFILE_BIT, "GL_CONTEXT_CORE_PROFILE_BIT");
#endif
#if defined(GL_REDUCE)
defconsti(env, "GL-REDUCE", (GLenum) GL_REDUCE, "GL_REDUCE");
#endif
#if defined(GL_REDUCE_EXT)
defconsti(env, "GL-REDUCE-EXT", (GLenum) GL_REDUCE_EXT, "GL_REDUCE_EXT");
#endif
#if defined(GL_CONVOLUTION_BORDER_MODE)
defconsti(env, "GL-CONVOLUTION-BORDER-MODE", (GLenum) GL_CONVOLUTION_BORDER_MODE, "GL_CONVOLUTION_BORDER_MODE");
#endif
#if defined(GL_CONVOLUTION_BORDER_MODE_EXT)
defconsti(env, "GL-CONVOLUTION-BORDER-MODE-EXT", (GLenum) GL_CONVOLUTION_BORDER_MODE_EXT, "GL_CONVOLUTION_BORDER_MODE_EXT");
#endif
#if defined(GL_CONVOLUTION_FILTER_BIAS)
defconsti(env, "GL-CONVOLUTION-FILTER-BIAS", (GLenum) GL_CONVOLUTION_FILTER_BIAS, "GL_CONVOLUTION_FILTER_BIAS");
#endif
#if defined(GL_CONVOLUTION_FILTER_BIAS_EXT)
defconsti(env, "GL-CONVOLUTION-FILTER-BIAS-EXT", (GLenum) GL_CONVOLUTION_FILTER_BIAS_EXT, "GL_CONVOLUTION_FILTER_BIAS_EXT");
#endif
#if defined(GL_CONVOLUTION_FILTER_SCALE)
defconsti(env, "GL-CONVOLUTION-FILTER-SCALE", (GLenum) GL_CONVOLUTION_FILTER_SCALE, "GL_CONVOLUTION_FILTER_SCALE");
#endif
#if defined(GL_CONVOLUTION_FILTER_SCALE_EXT)
defconsti(env, "GL-CONVOLUTION-FILTER-SCALE-EXT", (GLenum) GL_CONVOLUTION_FILTER_SCALE_EXT, "GL_CONVOLUTION_FILTER_SCALE_EXT");
#endif
#if defined(GL_CONVOLUTION_1D)
defconsti(env, "GL-CONVOLUTION-1D", (GLenum) GL_CONVOLUTION_1D, "GL_CONVOLUTION_1D");
#endif
#if defined(GL_CONVOLUTION_1D_EXT)
defconsti(env, "GL-CONVOLUTION-1D-EXT", (GLenum) GL_CONVOLUTION_1D_EXT, "GL_CONVOLUTION_1D_EXT");
#endif
#if defined(GL_CONVOLUTION_2D)
defconsti(env, "GL-CONVOLUTION-2D", (GLenum) GL_CONVOLUTION_2D, "GL_CONVOLUTION_2D");
#endif
#if defined(GL_CONVOLUTION_2D_EXT)
defconsti(env, "GL-CONVOLUTION-2D-EXT", (GLenum) GL_CONVOLUTION_2D_EXT, "GL_CONVOLUTION_2D_EXT");
#endif
#if defined(GL_BACK)
defconsti(env, "GL-BACK", (GLenum) GL_BACK, "GL_BACK");
#endif
#if defined(GL_FRONT)
defconsti(env, "GL-FRONT", (GLenum) GL_FRONT, "GL_FRONT");
#endif
#if defined(GL_FRONT_AND_BACK)
defconsti(env, "GL-FRONT-AND-BACK", (GLenum) GL_FRONT_AND_BACK, "GL_FRONT_AND_BACK");
#endif
#if defined(GL_ALWAYS)
defconsti(env, "GL-ALWAYS", (GLenum) GL_ALWAYS, "GL_ALWAYS");
#endif
#if defined(GL_EQUAL)
defconsti(env, "GL-EQUAL", (GLenum) GL_EQUAL, "GL_EQUAL");
#endif
#if defined(GL_GEQUAL)
defconsti(env, "GL-GEQUAL", (GLenum) GL_GEQUAL, "GL_GEQUAL");
#endif
#if defined(GL_GREATER)
defconsti(env, "GL-GREATER", (GLenum) GL_GREATER, "GL_GREATER");
#endif
#if defined(GL_LEQUAL)
defconsti(env, "GL-LEQUAL", (GLenum) GL_LEQUAL, "GL_LEQUAL");
#endif
#if defined(GL_LESS)
defconsti(env, "GL-LESS", (GLenum) GL_LESS, "GL_LESS");
#endif
#if defined(GL_NEVER)
defconsti(env, "GL-NEVER", (GLenum) GL_NEVER, "GL_NEVER");
#endif
#if defined(GL_NOTEQUAL)
defconsti(env, "GL-NOTEQUAL", (GLenum) GL_NOTEQUAL, "GL_NOTEQUAL");
#endif
#if defined(GL_AUX0)
defconsti(env, "GL-AUX0", (GLenum) GL_AUX0, "GL_AUX0");
#endif
#if defined(GL_AUX1)
defconsti(env, "GL-AUX1", (GLenum) GL_AUX1, "GL_AUX1");
#endif
#if defined(GL_AUX2)
defconsti(env, "GL-AUX2", (GLenum) GL_AUX2, "GL_AUX2");
#endif
#if defined(GL_AUX3)
defconsti(env, "GL-AUX3", (GLenum) GL_AUX3, "GL_AUX3");
#endif
#if defined(GL_BACK)
defconsti(env, "GL-BACK", (GLenum) GL_BACK, "GL_BACK");
#endif
#if defined(GL_BACK_LEFT)
defconsti(env, "GL-BACK-LEFT", (GLenum) GL_BACK_LEFT, "GL_BACK_LEFT");
#endif
#if defined(GL_BACK_RIGHT)
defconsti(env, "GL-BACK-RIGHT", (GLenum) GL_BACK_RIGHT, "GL_BACK_RIGHT");
#endif
#if defined(GL_FRONT)
defconsti(env, "GL-FRONT", (GLenum) GL_FRONT, "GL_FRONT");
#endif
#if defined(GL_FRONT_AND_BACK)
defconsti(env, "GL-FRONT-AND-BACK", (GLenum) GL_FRONT_AND_BACK, "GL_FRONT_AND_BACK");
#endif
#if defined(GL_FRONT_LEFT)
defconsti(env, "GL-FRONT-LEFT", (GLenum) GL_FRONT_LEFT, "GL_FRONT_LEFT");
#endif
#if defined(GL_FRONT_RIGHT)
defconsti(env, "GL-FRONT-RIGHT", (GLenum) GL_FRONT_RIGHT, "GL_FRONT_RIGHT");
#endif
#if defined(GL_LEFT)
defconsti(env, "GL-LEFT", (GLenum) GL_LEFT, "GL_LEFT");
#endif
#if defined(GL_NONE)
defconsti(env, "GL-NONE", (GLenum) GL_NONE, "GL_NONE");
#endif
#if defined(GL_NONE_OES)
defconsti(env, "GL-NONE-OES", (GLenum) GL_NONE_OES, "GL_NONE_OES");
#endif
#if defined(GL_RIGHT)
defconsti(env, "GL-RIGHT", (GLenum) GL_RIGHT, "GL_RIGHT");
#endif
#if defined(GL_COLOR_ATTACHMENT0)
defconsti(env, "GL-COLOR-ATTACHMENT0", (GLenum) GL_COLOR_ATTACHMENT0, "GL_COLOR_ATTACHMENT0");
#endif
#if defined(GL_COLOR_ATTACHMENT1)
defconsti(env, "GL-COLOR-ATTACHMENT1", (GLenum) GL_COLOR_ATTACHMENT1, "GL_COLOR_ATTACHMENT1");
#endif
#if defined(GL_COLOR_ATTACHMENT2)
defconsti(env, "GL-COLOR-ATTACHMENT2", (GLenum) GL_COLOR_ATTACHMENT2, "GL_COLOR_ATTACHMENT2");
#endif
#if defined(GL_COLOR_ATTACHMENT3)
defconsti(env, "GL-COLOR-ATTACHMENT3", (GLenum) GL_COLOR_ATTACHMENT3, "GL_COLOR_ATTACHMENT3");
#endif
#if defined(GL_COLOR_ATTACHMENT4)
defconsti(env, "GL-COLOR-ATTACHMENT4", (GLenum) GL_COLOR_ATTACHMENT4, "GL_COLOR_ATTACHMENT4");
#endif
#if defined(GL_COLOR_ATTACHMENT5)
defconsti(env, "GL-COLOR-ATTACHMENT5", (GLenum) GL_COLOR_ATTACHMENT5, "GL_COLOR_ATTACHMENT5");
#endif
#if defined(GL_COLOR_ATTACHMENT6)
defconsti(env, "GL-COLOR-ATTACHMENT6", (GLenum) GL_COLOR_ATTACHMENT6, "GL_COLOR_ATTACHMENT6");
#endif
#if defined(GL_COLOR_ATTACHMENT7)
defconsti(env, "GL-COLOR-ATTACHMENT7", (GLenum) GL_COLOR_ATTACHMENT7, "GL_COLOR_ATTACHMENT7");
#endif
#if defined(GL_COLOR_ATTACHMENT8)
defconsti(env, "GL-COLOR-ATTACHMENT8", (GLenum) GL_COLOR_ATTACHMENT8, "GL_COLOR_ATTACHMENT8");
#endif
#if defined(GL_COLOR_ATTACHMENT9)
defconsti(env, "GL-COLOR-ATTACHMENT9", (GLenum) GL_COLOR_ATTACHMENT9, "GL_COLOR_ATTACHMENT9");
#endif
#if defined(GL_COLOR_ATTACHMENT10)
defconsti(env, "GL-COLOR-ATTACHMENT10", (GLenum) GL_COLOR_ATTACHMENT10, "GL_COLOR_ATTACHMENT10");
#endif
#if defined(GL_COLOR_ATTACHMENT11)
defconsti(env, "GL-COLOR-ATTACHMENT11", (GLenum) GL_COLOR_ATTACHMENT11, "GL_COLOR_ATTACHMENT11");
#endif
#if defined(GL_COLOR_ATTACHMENT12)
defconsti(env, "GL-COLOR-ATTACHMENT12", (GLenum) GL_COLOR_ATTACHMENT12, "GL_COLOR_ATTACHMENT12");
#endif
#if defined(GL_COLOR_ATTACHMENT13)
defconsti(env, "GL-COLOR-ATTACHMENT13", (GLenum) GL_COLOR_ATTACHMENT13, "GL_COLOR_ATTACHMENT13");
#endif
#if defined(GL_COLOR_ATTACHMENT14)
defconsti(env, "GL-COLOR-ATTACHMENT14", (GLenum) GL_COLOR_ATTACHMENT14, "GL_COLOR_ATTACHMENT14");
#endif
#if defined(GL_COLOR_ATTACHMENT15)
defconsti(env, "GL-COLOR-ATTACHMENT15", (GLenum) GL_COLOR_ATTACHMENT15, "GL_COLOR_ATTACHMENT15");
#endif
#if defined(GL_COLOR_ATTACHMENT16)
defconsti(env, "GL-COLOR-ATTACHMENT16", (GLenum) GL_COLOR_ATTACHMENT16, "GL_COLOR_ATTACHMENT16");
#endif
#if defined(GL_COLOR_ATTACHMENT17)
defconsti(env, "GL-COLOR-ATTACHMENT17", (GLenum) GL_COLOR_ATTACHMENT17, "GL_COLOR_ATTACHMENT17");
#endif
#if defined(GL_COLOR_ATTACHMENT18)
defconsti(env, "GL-COLOR-ATTACHMENT18", (GLenum) GL_COLOR_ATTACHMENT18, "GL_COLOR_ATTACHMENT18");
#endif
#if defined(GL_COLOR_ATTACHMENT19)
defconsti(env, "GL-COLOR-ATTACHMENT19", (GLenum) GL_COLOR_ATTACHMENT19, "GL_COLOR_ATTACHMENT19");
#endif
#if defined(GL_COLOR_ATTACHMENT20)
defconsti(env, "GL-COLOR-ATTACHMENT20", (GLenum) GL_COLOR_ATTACHMENT20, "GL_COLOR_ATTACHMENT20");
#endif
#if defined(GL_COLOR_ATTACHMENT21)
defconsti(env, "GL-COLOR-ATTACHMENT21", (GLenum) GL_COLOR_ATTACHMENT21, "GL_COLOR_ATTACHMENT21");
#endif
#if defined(GL_COLOR_ATTACHMENT22)
defconsti(env, "GL-COLOR-ATTACHMENT22", (GLenum) GL_COLOR_ATTACHMENT22, "GL_COLOR_ATTACHMENT22");
#endif
#if defined(GL_COLOR_ATTACHMENT23)
defconsti(env, "GL-COLOR-ATTACHMENT23", (GLenum) GL_COLOR_ATTACHMENT23, "GL_COLOR_ATTACHMENT23");
#endif
#if defined(GL_COLOR_ATTACHMENT24)
defconsti(env, "GL-COLOR-ATTACHMENT24", (GLenum) GL_COLOR_ATTACHMENT24, "GL_COLOR_ATTACHMENT24");
#endif
#if defined(GL_COLOR_ATTACHMENT25)
defconsti(env, "GL-COLOR-ATTACHMENT25", (GLenum) GL_COLOR_ATTACHMENT25, "GL_COLOR_ATTACHMENT25");
#endif
#if defined(GL_COLOR_ATTACHMENT26)
defconsti(env, "GL-COLOR-ATTACHMENT26", (GLenum) GL_COLOR_ATTACHMENT26, "GL_COLOR_ATTACHMENT26");
#endif
#if defined(GL_COLOR_ATTACHMENT27)
defconsti(env, "GL-COLOR-ATTACHMENT27", (GLenum) GL_COLOR_ATTACHMENT27, "GL_COLOR_ATTACHMENT27");
#endif
#if defined(GL_COLOR_ATTACHMENT28)
defconsti(env, "GL-COLOR-ATTACHMENT28", (GLenum) GL_COLOR_ATTACHMENT28, "GL_COLOR_ATTACHMENT28");
#endif
#if defined(GL_COLOR_ATTACHMENT29)
defconsti(env, "GL-COLOR-ATTACHMENT29", (GLenum) GL_COLOR_ATTACHMENT29, "GL_COLOR_ATTACHMENT29");
#endif
#if defined(GL_COLOR_ATTACHMENT30)
defconsti(env, "GL-COLOR-ATTACHMENT30", (GLenum) GL_COLOR_ATTACHMENT30, "GL_COLOR_ATTACHMENT30");
#endif
#if defined(GL_COLOR_ATTACHMENT31)
defconsti(env, "GL-COLOR-ATTACHMENT31", (GLenum) GL_COLOR_ATTACHMENT31, "GL_COLOR_ATTACHMENT31");
#endif
#if defined(GL_UNSIGNED_BYTE)
defconsti(env, "GL-UNSIGNED-BYTE", (GLenum) GL_UNSIGNED_BYTE, "GL_UNSIGNED_BYTE");
#endif
#if defined(GL_UNSIGNED_SHORT)
defconsti(env, "GL-UNSIGNED-SHORT", (GLenum) GL_UNSIGNED_SHORT, "GL_UNSIGNED_SHORT");
#endif
#if defined(GL_UNSIGNED_INT)
defconsti(env, "GL-UNSIGNED-INT", (GLenum) GL_UNSIGNED_INT, "GL_UNSIGNED_INT");
#endif
#if defined(GL_ALPHA_TEST)
defconsti(env, "GL-ALPHA-TEST", (GLenum) GL_ALPHA_TEST, "GL_ALPHA_TEST");
#endif
#if defined(GL_ASYNC_DRAW_PIXELS_SGIX)
defconsti(env, "GL-ASYNC-DRAW-PIXELS-SGIX", (GLenum) GL_ASYNC_DRAW_PIXELS_SGIX, "GL_ASYNC_DRAW_PIXELS_SGIX");
#endif
#if defined(GL_ASYNC_HISTOGRAM_SGIX)
defconsti(env, "GL-ASYNC-HISTOGRAM-SGIX", (GLenum) GL_ASYNC_HISTOGRAM_SGIX, "GL_ASYNC_HISTOGRAM_SGIX");
#endif
#if defined(GL_ASYNC_READ_PIXELS_SGIX)
defconsti(env, "GL-ASYNC-READ-PIXELS-SGIX", (GLenum) GL_ASYNC_READ_PIXELS_SGIX, "GL_ASYNC_READ_PIXELS_SGIX");
#endif
#if defined(GL_ASYNC_TEX_IMAGE_SGIX)
defconsti(env, "GL-ASYNC-TEX-IMAGE-SGIX", (GLenum) GL_ASYNC_TEX_IMAGE_SGIX, "GL_ASYNC_TEX_IMAGE_SGIX");
#endif
#if defined(GL_AUTO_NORMAL)
defconsti(env, "GL-AUTO-NORMAL", (GLenum) GL_AUTO_NORMAL, "GL_AUTO_NORMAL");
#endif
#if defined(GL_BLEND)
defconsti(env, "GL-BLEND", (GLenum) GL_BLEND, "GL_BLEND");
#endif
#if defined(GL_CALLIGRAPHIC_FRAGMENT_SGIX)
defconsti(env, "GL-CALLIGRAPHIC-FRAGMENT-SGIX", (GLenum) GL_CALLIGRAPHIC_FRAGMENT_SGIX, "GL_CALLIGRAPHIC_FRAGMENT_SGIX");
#endif
#if defined(GL_CLIP_DISTANCE0)
defconsti(env, "GL-CLIP-DISTANCE0", (GLenum) GL_CLIP_DISTANCE0, "GL_CLIP_DISTANCE0");
#endif
#if defined(GL_CLIP_DISTANCE1)
defconsti(env, "GL-CLIP-DISTANCE1", (GLenum) GL_CLIP_DISTANCE1, "GL_CLIP_DISTANCE1");
#endif
#if defined(GL_CLIP_DISTANCE2)
defconsti(env, "GL-CLIP-DISTANCE2", (GLenum) GL_CLIP_DISTANCE2, "GL_CLIP_DISTANCE2");
#endif
#if defined(GL_CLIP_DISTANCE3)
defconsti(env, "GL-CLIP-DISTANCE3", (GLenum) GL_CLIP_DISTANCE3, "GL_CLIP_DISTANCE3");
#endif
#if defined(GL_CLIP_DISTANCE4)
defconsti(env, "GL-CLIP-DISTANCE4", (GLenum) GL_CLIP_DISTANCE4, "GL_CLIP_DISTANCE4");
#endif
#if defined(GL_CLIP_DISTANCE5)
defconsti(env, "GL-CLIP-DISTANCE5", (GLenum) GL_CLIP_DISTANCE5, "GL_CLIP_DISTANCE5");
#endif
#if defined(GL_CLIP_DISTANCE6)
defconsti(env, "GL-CLIP-DISTANCE6", (GLenum) GL_CLIP_DISTANCE6, "GL_CLIP_DISTANCE6");
#endif
#if defined(GL_CLIP_DISTANCE7)
defconsti(env, "GL-CLIP-DISTANCE7", (GLenum) GL_CLIP_DISTANCE7, "GL_CLIP_DISTANCE7");
#endif
#if defined(GL_CLIP_PLANE0)
defconsti(env, "GL-CLIP-PLANE0", (GLenum) GL_CLIP_PLANE0, "GL_CLIP_PLANE0");
#endif
#if defined(GL_CLIP_PLANE1)
defconsti(env, "GL-CLIP-PLANE1", (GLenum) GL_CLIP_PLANE1, "GL_CLIP_PLANE1");
#endif
#if defined(GL_CLIP_PLANE2)
defconsti(env, "GL-CLIP-PLANE2", (GLenum) GL_CLIP_PLANE2, "GL_CLIP_PLANE2");
#endif
#if defined(GL_CLIP_PLANE3)
defconsti(env, "GL-CLIP-PLANE3", (GLenum) GL_CLIP_PLANE3, "GL_CLIP_PLANE3");
#endif
#if defined(GL_CLIP_PLANE4)
defconsti(env, "GL-CLIP-PLANE4", (GLenum) GL_CLIP_PLANE4, "GL_CLIP_PLANE4");
#endif
#if defined(GL_CLIP_PLANE5)
defconsti(env, "GL-CLIP-PLANE5", (GLenum) GL_CLIP_PLANE5, "GL_CLIP_PLANE5");
#endif
#if defined(GL_COLOR_ARRAY)
defconsti(env, "GL-COLOR-ARRAY", (GLenum) GL_COLOR_ARRAY, "GL_COLOR_ARRAY");
#endif
#if defined(GL_COLOR_LOGIC_OP)
defconsti(env, "GL-COLOR-LOGIC-OP", (GLenum) GL_COLOR_LOGIC_OP, "GL_COLOR_LOGIC_OP");
#endif
#if defined(GL_COLOR_MATERIAL)
defconsti(env, "GL-COLOR-MATERIAL", (GLenum) GL_COLOR_MATERIAL, "GL_COLOR_MATERIAL");
#endif
#if defined(GL_COLOR_TABLE_SGI)
defconsti(env, "GL-COLOR-TABLE-SGI", (GLenum) GL_COLOR_TABLE_SGI, "GL_COLOR_TABLE_SGI");
#endif
#if defined(GL_CONVOLUTION_1D_EXT)
defconsti(env, "GL-CONVOLUTION-1D-EXT", (GLenum) GL_CONVOLUTION_1D_EXT, "GL_CONVOLUTION_1D_EXT");
#endif
#if defined(GL_CONVOLUTION_2D_EXT)
defconsti(env, "GL-CONVOLUTION-2D-EXT", (GLenum) GL_CONVOLUTION_2D_EXT, "GL_CONVOLUTION_2D_EXT");
#endif
#if defined(GL_CULL_FACE)
defconsti(env, "GL-CULL-FACE", (GLenum) GL_CULL_FACE, "GL_CULL_FACE");
#endif
#if defined(GL_DEBUG_OUTPUT)
defconsti(env, "GL-DEBUG-OUTPUT", (GLenum) GL_DEBUG_OUTPUT, "GL_DEBUG_OUTPUT");
#endif
#if defined(GL_DEBUG_OUTPUT_SYNCHRONOUS)
defconsti(env, "GL-DEBUG-OUTPUT-SYNCHRONOUS", (GLenum) GL_DEBUG_OUTPUT_SYNCHRONOUS, "GL_DEBUG_OUTPUT_SYNCHRONOUS");
#endif
#if defined(GL_DEPTH_CLAMP)
defconsti(env, "GL-DEPTH-CLAMP", (GLenum) GL_DEPTH_CLAMP, "GL_DEPTH_CLAMP");
#endif
#if defined(GL_DEPTH_TEST)
defconsti(env, "GL-DEPTH-TEST", (GLenum) GL_DEPTH_TEST, "GL_DEPTH_TEST");
#endif
#if defined(GL_DITHER)
defconsti(env, "GL-DITHER", (GLenum) GL_DITHER, "GL_DITHER");
#endif
#if defined(GL_EDGE_FLAG_ARRAY)
defconsti(env, "GL-EDGE-FLAG-ARRAY", (GLenum) GL_EDGE_FLAG_ARRAY, "GL_EDGE_FLAG_ARRAY");
#endif
#if defined(GL_FOG)
defconsti(env, "GL-FOG", (GLenum) GL_FOG, "GL_FOG");
#endif
#if defined(GL_FOG_OFFSET_SGIX)
defconsti(env, "GL-FOG-OFFSET-SGIX", (GLenum) GL_FOG_OFFSET_SGIX, "GL_FOG_OFFSET_SGIX");
#endif
#if defined(GL_FRAGMENT_COLOR_MATERIAL_SGIX)
defconsti(env, "GL-FRAGMENT-COLOR-MATERIAL-SGIX", (GLenum) GL_FRAGMENT_COLOR_MATERIAL_SGIX, "GL_FRAGMENT_COLOR_MATERIAL_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT0_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT0-SGIX", (GLenum) GL_FRAGMENT_LIGHT0_SGIX, "GL_FRAGMENT_LIGHT0_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT1_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT1-SGIX", (GLenum) GL_FRAGMENT_LIGHT1_SGIX, "GL_FRAGMENT_LIGHT1_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT2_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT2-SGIX", (GLenum) GL_FRAGMENT_LIGHT2_SGIX, "GL_FRAGMENT_LIGHT2_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT3_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT3-SGIX", (GLenum) GL_FRAGMENT_LIGHT3_SGIX, "GL_FRAGMENT_LIGHT3_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT4_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT4-SGIX", (GLenum) GL_FRAGMENT_LIGHT4_SGIX, "GL_FRAGMENT_LIGHT4_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT5_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT5-SGIX", (GLenum) GL_FRAGMENT_LIGHT5_SGIX, "GL_FRAGMENT_LIGHT5_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT6_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT6-SGIX", (GLenum) GL_FRAGMENT_LIGHT6_SGIX, "GL_FRAGMENT_LIGHT6_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT7_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT7-SGIX", (GLenum) GL_FRAGMENT_LIGHT7_SGIX, "GL_FRAGMENT_LIGHT7_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHTING_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHTING-SGIX", (GLenum) GL_FRAGMENT_LIGHTING_SGIX, "GL_FRAGMENT_LIGHTING_SGIX");
#endif
#if defined(GL_FRAMEBUFFER_SRGB)
defconsti(env, "GL-FRAMEBUFFER-SRGB", (GLenum) GL_FRAMEBUFFER_SRGB, "GL_FRAMEBUFFER_SRGB");
#endif
#if defined(GL_FRAMEZOOM_SGIX)
defconsti(env, "GL-FRAMEZOOM-SGIX", (GLenum) GL_FRAMEZOOM_SGIX, "GL_FRAMEZOOM_SGIX");
#endif
#if defined(GL_HISTOGRAM_EXT)
defconsti(env, "GL-HISTOGRAM-EXT", (GLenum) GL_HISTOGRAM_EXT, "GL_HISTOGRAM_EXT");
#endif
#if defined(GL_INDEX_ARRAY)
defconsti(env, "GL-INDEX-ARRAY", (GLenum) GL_INDEX_ARRAY, "GL_INDEX_ARRAY");
#endif
#if defined(GL_INDEX_LOGIC_OP)
defconsti(env, "GL-INDEX-LOGIC-OP", (GLenum) GL_INDEX_LOGIC_OP, "GL_INDEX_LOGIC_OP");
#endif
#if defined(GL_INTERLACE_SGIX)
defconsti(env, "GL-INTERLACE-SGIX", (GLenum) GL_INTERLACE_SGIX, "GL_INTERLACE_SGIX");
#endif
#if defined(GL_IR_INSTRUMENT1_SGIX)
defconsti(env, "GL-IR-INSTRUMENT1-SGIX", (GLenum) GL_IR_INSTRUMENT1_SGIX, "GL_IR_INSTRUMENT1_SGIX");
#endif
#if defined(GL_LIGHT0)
defconsti(env, "GL-LIGHT0", (GLenum) GL_LIGHT0, "GL_LIGHT0");
#endif
#if defined(GL_LIGHT1)
defconsti(env, "GL-LIGHT1", (GLenum) GL_LIGHT1, "GL_LIGHT1");
#endif
#if defined(GL_LIGHT2)
defconsti(env, "GL-LIGHT2", (GLenum) GL_LIGHT2, "GL_LIGHT2");
#endif
#if defined(GL_LIGHT3)
defconsti(env, "GL-LIGHT3", (GLenum) GL_LIGHT3, "GL_LIGHT3");
#endif
#if defined(GL_LIGHT4)
defconsti(env, "GL-LIGHT4", (GLenum) GL_LIGHT4, "GL_LIGHT4");
#endif
#if defined(GL_LIGHT5)
defconsti(env, "GL-LIGHT5", (GLenum) GL_LIGHT5, "GL_LIGHT5");
#endif
#if defined(GL_LIGHT6)
defconsti(env, "GL-LIGHT6", (GLenum) GL_LIGHT6, "GL_LIGHT6");
#endif
#if defined(GL_LIGHT7)
defconsti(env, "GL-LIGHT7", (GLenum) GL_LIGHT7, "GL_LIGHT7");
#endif
#if defined(GL_LIGHTING)
defconsti(env, "GL-LIGHTING", (GLenum) GL_LIGHTING, "GL_LIGHTING");
#endif
#if defined(GL_LINE_SMOOTH)
defconsti(env, "GL-LINE-SMOOTH", (GLenum) GL_LINE_SMOOTH, "GL_LINE_SMOOTH");
#endif
#if defined(GL_LINE_STIPPLE)
defconsti(env, "GL-LINE-STIPPLE", (GLenum) GL_LINE_STIPPLE, "GL_LINE_STIPPLE");
#endif
#if defined(GL_MAP1_COLOR_4)
defconsti(env, "GL-MAP1-COLOR-4", (GLenum) GL_MAP1_COLOR_4, "GL_MAP1_COLOR_4");
#endif
#if defined(GL_MAP1_INDEX)
defconsti(env, "GL-MAP1-INDEX", (GLenum) GL_MAP1_INDEX, "GL_MAP1_INDEX");
#endif
#if defined(GL_MAP1_NORMAL)
defconsti(env, "GL-MAP1-NORMAL", (GLenum) GL_MAP1_NORMAL, "GL_MAP1_NORMAL");
#endif
#if defined(GL_MAP1_TEXTURE_COORD_1)
defconsti(env, "GL-MAP1-TEXTURE-COORD-1", (GLenum) GL_MAP1_TEXTURE_COORD_1, "GL_MAP1_TEXTURE_COORD_1");
#endif
#if defined(GL_MAP1_TEXTURE_COORD_2)
defconsti(env, "GL-MAP1-TEXTURE-COORD-2", (GLenum) GL_MAP1_TEXTURE_COORD_2, "GL_MAP1_TEXTURE_COORD_2");
#endif
#if defined(GL_MAP1_TEXTURE_COORD_3)
defconsti(env, "GL-MAP1-TEXTURE-COORD-3", (GLenum) GL_MAP1_TEXTURE_COORD_3, "GL_MAP1_TEXTURE_COORD_3");
#endif
#if defined(GL_MAP1_TEXTURE_COORD_4)
defconsti(env, "GL-MAP1-TEXTURE-COORD-4", (GLenum) GL_MAP1_TEXTURE_COORD_4, "GL_MAP1_TEXTURE_COORD_4");
#endif
#if defined(GL_MAP1_VERTEX_3)
defconsti(env, "GL-MAP1-VERTEX-3", (GLenum) GL_MAP1_VERTEX_3, "GL_MAP1_VERTEX_3");
#endif
#if defined(GL_MAP1_VERTEX_4)
defconsti(env, "GL-MAP1-VERTEX-4", (GLenum) GL_MAP1_VERTEX_4, "GL_MAP1_VERTEX_4");
#endif
#if defined(GL_MAP2_COLOR_4)
defconsti(env, "GL-MAP2-COLOR-4", (GLenum) GL_MAP2_COLOR_4, "GL_MAP2_COLOR_4");
#endif
#if defined(GL_MAP2_INDEX)
defconsti(env, "GL-MAP2-INDEX", (GLenum) GL_MAP2_INDEX, "GL_MAP2_INDEX");
#endif
#if defined(GL_MAP2_NORMAL)
defconsti(env, "GL-MAP2-NORMAL", (GLenum) GL_MAP2_NORMAL, "GL_MAP2_NORMAL");
#endif
#if defined(GL_MAP2_TEXTURE_COORD_1)
defconsti(env, "GL-MAP2-TEXTURE-COORD-1", (GLenum) GL_MAP2_TEXTURE_COORD_1, "GL_MAP2_TEXTURE_COORD_1");
#endif
#if defined(GL_MAP2_TEXTURE_COORD_2)
defconsti(env, "GL-MAP2-TEXTURE-COORD-2", (GLenum) GL_MAP2_TEXTURE_COORD_2, "GL_MAP2_TEXTURE_COORD_2");
#endif
#if defined(GL_MAP2_TEXTURE_COORD_3)
defconsti(env, "GL-MAP2-TEXTURE-COORD-3", (GLenum) GL_MAP2_TEXTURE_COORD_3, "GL_MAP2_TEXTURE_COORD_3");
#endif
#if defined(GL_MAP2_TEXTURE_COORD_4)
defconsti(env, "GL-MAP2-TEXTURE-COORD-4", (GLenum) GL_MAP2_TEXTURE_COORD_4, "GL_MAP2_TEXTURE_COORD_4");
#endif
#if defined(GL_MAP2_VERTEX_3)
defconsti(env, "GL-MAP2-VERTEX-3", (GLenum) GL_MAP2_VERTEX_3, "GL_MAP2_VERTEX_3");
#endif
#if defined(GL_MAP2_VERTEX_4)
defconsti(env, "GL-MAP2-VERTEX-4", (GLenum) GL_MAP2_VERTEX_4, "GL_MAP2_VERTEX_4");
#endif
#if defined(GL_MINMAX_EXT)
defconsti(env, "GL-MINMAX-EXT", (GLenum) GL_MINMAX_EXT, "GL_MINMAX_EXT");
#endif
#if defined(GL_MULTISAMPLE)
defconsti(env, "GL-MULTISAMPLE", (GLenum) GL_MULTISAMPLE, "GL_MULTISAMPLE");
#endif
#if defined(GL_MULTISAMPLE_SGIS)
defconsti(env, "GL-MULTISAMPLE-SGIS", (GLenum) GL_MULTISAMPLE_SGIS, "GL_MULTISAMPLE_SGIS");
#endif
#if defined(GL_NORMALIZE)
defconsti(env, "GL-NORMALIZE", (GLenum) GL_NORMALIZE, "GL_NORMALIZE");
#endif
#if defined(GL_NORMAL_ARRAY)
defconsti(env, "GL-NORMAL-ARRAY", (GLenum) GL_NORMAL_ARRAY, "GL_NORMAL_ARRAY");
#endif
#if defined(GL_PIXEL_TEXTURE_SGIS)
defconsti(env, "GL-PIXEL-TEXTURE-SGIS", (GLenum) GL_PIXEL_TEXTURE_SGIS, "GL_PIXEL_TEXTURE_SGIS");
#endif
#if defined(GL_PIXEL_TEX_GEN_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-SGIX", (GLenum) GL_PIXEL_TEX_GEN_SGIX, "GL_PIXEL_TEX_GEN_SGIX");
#endif
#if defined(GL_POINT_SMOOTH)
defconsti(env, "GL-POINT-SMOOTH", (GLenum) GL_POINT_SMOOTH, "GL_POINT_SMOOTH");
#endif
#if defined(GL_POLYGON_OFFSET_FILL)
defconsti(env, "GL-POLYGON-OFFSET-FILL", (GLenum) GL_POLYGON_OFFSET_FILL, "GL_POLYGON_OFFSET_FILL");
#endif
#if defined(GL_POLYGON_OFFSET_LINE)
defconsti(env, "GL-POLYGON-OFFSET-LINE", (GLenum) GL_POLYGON_OFFSET_LINE, "GL_POLYGON_OFFSET_LINE");
#endif
#if defined(GL_POLYGON_OFFSET_POINT)
defconsti(env, "GL-POLYGON-OFFSET-POINT", (GLenum) GL_POLYGON_OFFSET_POINT, "GL_POLYGON_OFFSET_POINT");
#endif
#if defined(GL_POLYGON_SMOOTH)
defconsti(env, "GL-POLYGON-SMOOTH", (GLenum) GL_POLYGON_SMOOTH, "GL_POLYGON_SMOOTH");
#endif
#if defined(GL_POLYGON_STIPPLE)
defconsti(env, "GL-POLYGON-STIPPLE", (GLenum) GL_POLYGON_STIPPLE, "GL_POLYGON_STIPPLE");
#endif
#if defined(GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-COLOR-TABLE-SGI", (GLenum) GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI, "GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI");
#endif
#if defined(GL_POST_CONVOLUTION_COLOR_TABLE_SGI)
defconsti(env, "GL-POST-CONVOLUTION-COLOR-TABLE-SGI", (GLenum) GL_POST_CONVOLUTION_COLOR_TABLE_SGI, "GL_POST_CONVOLUTION_COLOR_TABLE_SGI");
#endif
#if defined(GL_PRIMITIVE_RESTART)
defconsti(env, "GL-PRIMITIVE-RESTART", (GLenum) GL_PRIMITIVE_RESTART, "GL_PRIMITIVE_RESTART");
#endif
#if defined(GL_PRIMITIVE_RESTART_FIXED_INDEX)
defconsti(env, "GL-PRIMITIVE-RESTART-FIXED-INDEX", (GLenum) GL_PRIMITIVE_RESTART_FIXED_INDEX, "GL_PRIMITIVE_RESTART_FIXED_INDEX");
#endif
#if defined(GL_PROGRAM_POINT_SIZE)
defconsti(env, "GL-PROGRAM-POINT-SIZE", (GLenum) GL_PROGRAM_POINT_SIZE, "GL_PROGRAM_POINT_SIZE");
#endif
#if defined(GL_RASTERIZER_DISCARD)
defconsti(env, "GL-RASTERIZER-DISCARD", (GLenum) GL_RASTERIZER_DISCARD, "GL_RASTERIZER_DISCARD");
#endif
#if defined(GL_REFERENCE_PLANE_SGIX)
defconsti(env, "GL-REFERENCE-PLANE-SGIX", (GLenum) GL_REFERENCE_PLANE_SGIX, "GL_REFERENCE_PLANE_SGIX");
#endif
#if defined(GL_RESCALE_NORMAL_EXT)
defconsti(env, "GL-RESCALE-NORMAL-EXT", (GLenum) GL_RESCALE_NORMAL_EXT, "GL_RESCALE_NORMAL_EXT");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_COVERAGE)
defconsti(env, "GL-SAMPLE-ALPHA-TO-COVERAGE", (GLenum) GL_SAMPLE_ALPHA_TO_COVERAGE, "GL_SAMPLE_ALPHA_TO_COVERAGE");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_MASK_SGIS)
defconsti(env, "GL-SAMPLE-ALPHA-TO-MASK-SGIS", (GLenum) GL_SAMPLE_ALPHA_TO_MASK_SGIS, "GL_SAMPLE_ALPHA_TO_MASK_SGIS");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_ONE)
defconsti(env, "GL-SAMPLE-ALPHA-TO-ONE", (GLenum) GL_SAMPLE_ALPHA_TO_ONE, "GL_SAMPLE_ALPHA_TO_ONE");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_ONE_SGIS)
defconsti(env, "GL-SAMPLE-ALPHA-TO-ONE-SGIS", (GLenum) GL_SAMPLE_ALPHA_TO_ONE_SGIS, "GL_SAMPLE_ALPHA_TO_ONE_SGIS");
#endif
#if defined(GL_SAMPLE_COVERAGE)
defconsti(env, "GL-SAMPLE-COVERAGE", (GLenum) GL_SAMPLE_COVERAGE, "GL_SAMPLE_COVERAGE");
#endif
#if defined(GL_SAMPLE_MASK)
defconsti(env, "GL-SAMPLE-MASK", (GLenum) GL_SAMPLE_MASK, "GL_SAMPLE_MASK");
#endif
#if defined(GL_SAMPLE_MASK_SGIS)
defconsti(env, "GL-SAMPLE-MASK-SGIS", (GLenum) GL_SAMPLE_MASK_SGIS, "GL_SAMPLE_MASK_SGIS");
#endif
#if defined(GL_SAMPLE_SHADING)
defconsti(env, "GL-SAMPLE-SHADING", (GLenum) GL_SAMPLE_SHADING, "GL_SAMPLE_SHADING");
#endif
#if defined(GL_SCISSOR_TEST)
defconsti(env, "GL-SCISSOR-TEST", (GLenum) GL_SCISSOR_TEST, "GL_SCISSOR_TEST");
#endif
#if defined(GL_SEPARABLE_2D_EXT)
defconsti(env, "GL-SEPARABLE-2D-EXT", (GLenum) GL_SEPARABLE_2D_EXT, "GL_SEPARABLE_2D_EXT");
#endif
#if defined(GL_SHARED_TEXTURE_PALETTE_EXT)
defconsti(env, "GL-SHARED-TEXTURE-PALETTE-EXT", (GLenum) GL_SHARED_TEXTURE_PALETTE_EXT, "GL_SHARED_TEXTURE_PALETTE_EXT");
#endif
#if defined(GL_SPRITE_SGIX)
defconsti(env, "GL-SPRITE-SGIX", (GLenum) GL_SPRITE_SGIX, "GL_SPRITE_SGIX");
#endif
#if defined(GL_STENCIL_TEST)
defconsti(env, "GL-STENCIL-TEST", (GLenum) GL_STENCIL_TEST, "GL_STENCIL_TEST");
#endif
#if defined(GL_TEXTURE_1D)
defconsti(env, "GL-TEXTURE-1D", (GLenum) GL_TEXTURE_1D, "GL_TEXTURE_1D");
#endif
#if defined(GL_TEXTURE_2D)
defconsti(env, "GL-TEXTURE-2D", (GLenum) GL_TEXTURE_2D, "GL_TEXTURE_2D");
#endif
#if defined(GL_TEXTURE_3D_EXT)
defconsti(env, "GL-TEXTURE-3D-EXT", (GLenum) GL_TEXTURE_3D_EXT, "GL_TEXTURE_3D_EXT");
#endif
#if defined(GL_TEXTURE_4D_SGIS)
defconsti(env, "GL-TEXTURE-4D-SGIS", (GLenum) GL_TEXTURE_4D_SGIS, "GL_TEXTURE_4D_SGIS");
#endif
#if defined(GL_TEXTURE_COLOR_TABLE_SGI)
defconsti(env, "GL-TEXTURE-COLOR-TABLE-SGI", (GLenum) GL_TEXTURE_COLOR_TABLE_SGI, "GL_TEXTURE_COLOR_TABLE_SGI");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY)
defconsti(env, "GL-TEXTURE-COORD-ARRAY", (GLenum) GL_TEXTURE_COORD_ARRAY, "GL_TEXTURE_COORD_ARRAY");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_SEAMLESS)
defconsti(env, "GL-TEXTURE-CUBE-MAP-SEAMLESS", (GLenum) GL_TEXTURE_CUBE_MAP_SEAMLESS, "GL_TEXTURE_CUBE_MAP_SEAMLESS");
#endif
#if defined(GL_TEXTURE_GEN_Q)
defconsti(env, "GL-TEXTURE-GEN-Q", (GLenum) GL_TEXTURE_GEN_Q, "GL_TEXTURE_GEN_Q");
#endif
#if defined(GL_TEXTURE_GEN_R)
defconsti(env, "GL-TEXTURE-GEN-R", (GLenum) GL_TEXTURE_GEN_R, "GL_TEXTURE_GEN_R");
#endif
#if defined(GL_TEXTURE_GEN_S)
defconsti(env, "GL-TEXTURE-GEN-S", (GLenum) GL_TEXTURE_GEN_S, "GL_TEXTURE_GEN_S");
#endif
#if defined(GL_TEXTURE_GEN_T)
defconsti(env, "GL-TEXTURE-GEN-T", (GLenum) GL_TEXTURE_GEN_T, "GL_TEXTURE_GEN_T");
#endif
#if defined(GL_VERTEX_ARRAY)
defconsti(env, "GL-VERTEX-ARRAY", (GLenum) GL_VERTEX_ARRAY, "GL_VERTEX_ARRAY");
#endif
#if defined(GL_INVALID_ENUM)
defconsti(env, "GL-INVALID-ENUM", (GLenum) GL_INVALID_ENUM, "GL_INVALID_ENUM");
#endif
#if defined(GL_INVALID_FRAMEBUFFER_OPERATION)
defconsti(env, "GL-INVALID-FRAMEBUFFER-OPERATION", (GLenum) GL_INVALID_FRAMEBUFFER_OPERATION, "GL_INVALID_FRAMEBUFFER_OPERATION");
#endif
#if defined(GL_INVALID_FRAMEBUFFER_OPERATION_EXT)
defconsti(env, "GL-INVALID-FRAMEBUFFER-OPERATION-EXT", (GLenum) GL_INVALID_FRAMEBUFFER_OPERATION_EXT, "GL_INVALID_FRAMEBUFFER_OPERATION_EXT");
#endif
#if defined(GL_INVALID_FRAMEBUFFER_OPERATION_OES)
defconsti(env, "GL-INVALID-FRAMEBUFFER-OPERATION-OES", (GLenum) GL_INVALID_FRAMEBUFFER_OPERATION_OES, "GL_INVALID_FRAMEBUFFER_OPERATION_OES");
#endif
#if defined(GL_INVALID_OPERATION)
defconsti(env, "GL-INVALID-OPERATION", (GLenum) GL_INVALID_OPERATION, "GL_INVALID_OPERATION");
#endif
#if defined(GL_INVALID_VALUE)
defconsti(env, "GL-INVALID-VALUE", (GLenum) GL_INVALID_VALUE, "GL_INVALID_VALUE");
#endif
#if defined(GL_NO_ERROR)
defconsti(env, "GL-NO-ERROR", (GLenum) GL_NO_ERROR, "GL_NO_ERROR");
#endif
#if defined(GL_OUT_OF_MEMORY)
defconsti(env, "GL-OUT-OF-MEMORY", (GLenum) GL_OUT_OF_MEMORY, "GL_OUT_OF_MEMORY");
#endif
#if defined(GL_STACK_OVERFLOW)
defconsti(env, "GL-STACK-OVERFLOW", (GLenum) GL_STACK_OVERFLOW, "GL_STACK_OVERFLOW");
#endif
#if defined(GL_STACK_UNDERFLOW)
defconsti(env, "GL-STACK-UNDERFLOW", (GLenum) GL_STACK_UNDERFLOW, "GL_STACK_UNDERFLOW");
#endif
#if defined(GL_TABLE_TOO_LARGE)
defconsti(env, "GL-TABLE-TOO-LARGE", (GLenum) GL_TABLE_TOO_LARGE, "GL_TABLE_TOO_LARGE");
#endif
#if defined(GL_TABLE_TOO_LARGE_EXT)
defconsti(env, "GL-TABLE-TOO-LARGE-EXT", (GLenum) GL_TABLE_TOO_LARGE_EXT, "GL_TABLE_TOO_LARGE_EXT");
#endif
#if defined(GL_TEXTURE_TOO_LARGE_EXT)
defconsti(env, "GL-TEXTURE-TOO-LARGE-EXT", (GLenum) GL_TEXTURE_TOO_LARGE_EXT, "GL_TEXTURE_TOO_LARGE_EXT");
#endif
#if defined(GL_HANDLE_TYPE_OPAQUE_FD_EXT)
defconsti(env, "GL-HANDLE-TYPE-OPAQUE-FD-EXT", (GLenum) GL_HANDLE_TYPE_OPAQUE_FD_EXT, "GL_HANDLE_TYPE_OPAQUE_FD_EXT");
#endif
#if defined(GL_HANDLE_TYPE_OPAQUE_WIN32_EXT)
defconsti(env, "GL-HANDLE-TYPE-OPAQUE-WIN32-EXT", (GLenum) GL_HANDLE_TYPE_OPAQUE_WIN32_EXT, "GL_HANDLE_TYPE_OPAQUE_WIN32_EXT");
#endif
#if defined(GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT)
defconsti(env, "GL-HANDLE-TYPE-OPAQUE-WIN32-KMT-EXT", (GLenum) GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT, "GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT");
#endif
#if defined(GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT)
defconsti(env, "GL-HANDLE-TYPE-D3D12-TILEPOOL-EXT", (GLenum) GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT, "GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT");
#endif
#if defined(GL_HANDLE_TYPE_D3D12_RESOURCE_EXT)
defconsti(env, "GL-HANDLE-TYPE-D3D12-RESOURCE-EXT", (GLenum) GL_HANDLE_TYPE_D3D12_RESOURCE_EXT, "GL_HANDLE_TYPE_D3D12_RESOURCE_EXT");
#endif
#if defined(GL_HANDLE_TYPE_D3D11_IMAGE_EXT)
defconsti(env, "GL-HANDLE-TYPE-D3D11-IMAGE-EXT", (GLenum) GL_HANDLE_TYPE_D3D11_IMAGE_EXT, "GL_HANDLE_TYPE_D3D11_IMAGE_EXT");
#endif
#if defined(GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT)
defconsti(env, "GL-HANDLE-TYPE-D3D11-IMAGE-KMT-EXT", (GLenum) GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT, "GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT");
#endif
#if defined(GL_HANDLE_TYPE_D3D12_FENCE_EXT)
defconsti(env, "GL-HANDLE-TYPE-D3D12-FENCE-EXT", (GLenum) GL_HANDLE_TYPE_D3D12_FENCE_EXT, "GL_HANDLE_TYPE_D3D12_FENCE_EXT");
#endif
#if defined(GL_2D)
defconsti(env, "GL-2D", (GLenum) GL_2D, "GL_2D");
#endif
#if defined(GL_3D)
defconsti(env, "GL-3D", (GLenum) GL_3D, "GL_3D");
#endif
#if defined(GL_3D_COLOR)
defconsti(env, "GL-3D-COLOR", (GLenum) GL_3D_COLOR, "GL_3D_COLOR");
#endif
#if defined(GL_3D_COLOR_TEXTURE)
defconsti(env, "GL-3D-COLOR-TEXTURE", (GLenum) GL_3D_COLOR_TEXTURE, "GL_3D_COLOR_TEXTURE");
#endif
#if defined(GL_4D_COLOR_TEXTURE)
defconsti(env, "GL-4D-COLOR-TEXTURE", (GLenum) GL_4D_COLOR_TEXTURE, "GL_4D_COLOR_TEXTURE");
#endif
#if defined(GL_BITMAP_TOKEN)
defconsti(env, "GL-BITMAP-TOKEN", (GLenum) GL_BITMAP_TOKEN, "GL_BITMAP_TOKEN");
#endif
#if defined(GL_COPY_PIXEL_TOKEN)
defconsti(env, "GL-COPY-PIXEL-TOKEN", (GLenum) GL_COPY_PIXEL_TOKEN, "GL_COPY_PIXEL_TOKEN");
#endif
#if defined(GL_DRAW_PIXEL_TOKEN)
defconsti(env, "GL-DRAW-PIXEL-TOKEN", (GLenum) GL_DRAW_PIXEL_TOKEN, "GL_DRAW_PIXEL_TOKEN");
#endif
#if defined(GL_LINE_RESET_TOKEN)
defconsti(env, "GL-LINE-RESET-TOKEN", (GLenum) GL_LINE_RESET_TOKEN, "GL_LINE_RESET_TOKEN");
#endif
#if defined(GL_LINE_TOKEN)
defconsti(env, "GL-LINE-TOKEN", (GLenum) GL_LINE_TOKEN, "GL_LINE_TOKEN");
#endif
#if defined(GL_PASS_THROUGH_TOKEN)
defconsti(env, "GL-PASS-THROUGH-TOKEN", (GLenum) GL_PASS_THROUGH_TOKEN, "GL_PASS_THROUGH_TOKEN");
#endif
#if defined(GL_POINT_TOKEN)
defconsti(env, "GL-POINT-TOKEN", (GLenum) GL_POINT_TOKEN, "GL_POINT_TOKEN");
#endif
#if defined(GL_POLYGON_TOKEN)
defconsti(env, "GL-POLYGON-TOKEN", (GLenum) GL_POLYGON_TOKEN, "GL_POLYGON_TOKEN");
#endif
#if defined(GL_GEOMETRY_DEFORMATION_SGIX)
defconsti(env, "GL-GEOMETRY-DEFORMATION-SGIX", (GLenum) GL_GEOMETRY_DEFORMATION_SGIX, "GL_GEOMETRY_DEFORMATION_SGIX");
#endif
#if defined(GL_TEXTURE_DEFORMATION_SGIX)
defconsti(env, "GL-TEXTURE-DEFORMATION-SGIX", (GLenum) GL_TEXTURE_DEFORMATION_SGIX, "GL_TEXTURE_DEFORMATION_SGIX");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_DOUBLE)
defconsti(env, "GL-DOUBLE", (GLenum) GL_DOUBLE, "GL_DOUBLE");
#endif
#if defined(GL_EXP)
defconsti(env, "GL-EXP", (GLenum) GL_EXP, "GL_EXP");
#endif
#if defined(GL_EXP2)
defconsti(env, "GL-EXP2", (GLenum) GL_EXP2, "GL_EXP2");
#endif
#if defined(GL_FOG_FUNC_SGIS)
defconsti(env, "GL-FOG-FUNC-SGIS", (GLenum) GL_FOG_FUNC_SGIS, "GL_FOG_FUNC_SGIS");
#endif
#if defined(GL_LINEAR)
defconsti(env, "GL-LINEAR", (GLenum) GL_LINEAR, "GL_LINEAR");
#endif
#if defined(GL_FOG_COLOR)
defconsti(env, "GL-FOG-COLOR", (GLenum) GL_FOG_COLOR, "GL_FOG_COLOR");
#endif
#if defined(GL_FOG_DENSITY)
defconsti(env, "GL-FOG-DENSITY", (GLenum) GL_FOG_DENSITY, "GL_FOG_DENSITY");
#endif
#if defined(GL_FOG_END)
defconsti(env, "GL-FOG-END", (GLenum) GL_FOG_END, "GL_FOG_END");
#endif
#if defined(GL_FOG_INDEX)
defconsti(env, "GL-FOG-INDEX", (GLenum) GL_FOG_INDEX, "GL_FOG_INDEX");
#endif
#if defined(GL_FOG_MODE)
defconsti(env, "GL-FOG-MODE", (GLenum) GL_FOG_MODE, "GL_FOG_MODE");
#endif
#if defined(GL_FOG_OFFSET_VALUE_SGIX)
defconsti(env, "GL-FOG-OFFSET-VALUE-SGIX", (GLenum) GL_FOG_OFFSET_VALUE_SGIX, "GL_FOG_OFFSET_VALUE_SGIX");
#endif
#if defined(GL_FOG_START)
defconsti(env, "GL-FOG-START", (GLenum) GL_FOG_START, "GL_FOG_START");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_DOUBLE)
defconsti(env, "GL-DOUBLE", (GLenum) GL_DOUBLE, "GL_DOUBLE");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_DOUBLE)
defconsti(env, "GL-DOUBLE", (GLenum) GL_DOUBLE, "GL_DOUBLE");
#endif
#if defined(GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT-MODEL-AMBIENT-SGIX", (GLenum) GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX, "GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT-MODEL-LOCAL-VIEWER-SGIX", (GLenum) GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX, "GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT-MODEL-NORMAL-INTERPOLATION-SGIX", (GLenum) GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX, "GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT-MODEL-TWO-SIDE-SGIX", (GLenum) GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX, "GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX");
#endif
#if defined(GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM)
defconsti(env, "GL-FRAMEBUFFER-FETCH-NONCOHERENT-QCOM", (GLenum) GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM, "GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM");
#endif
#if defined(GL_CCW)
defconsti(env, "GL-CCW", (GLenum) GL_CCW, "GL_CCW");
#endif
#if defined(GL_CW)
defconsti(env, "GL-CW", (GLenum) GL_CW, "GL_CW");
#endif
#if defined(GL_COLOR_TABLE_ALPHA_SIZE_SGI)
defconsti(env, "GL-COLOR-TABLE-ALPHA-SIZE-SGI", (GLenum) GL_COLOR_TABLE_ALPHA_SIZE_SGI, "GL_COLOR_TABLE_ALPHA_SIZE_SGI");
#endif
#if defined(GL_COLOR_TABLE_BIAS_SGI)
defconsti(env, "GL-COLOR-TABLE-BIAS-SGI", (GLenum) GL_COLOR_TABLE_BIAS_SGI, "GL_COLOR_TABLE_BIAS_SGI");
#endif
#if defined(GL_COLOR_TABLE_BLUE_SIZE_SGI)
defconsti(env, "GL-COLOR-TABLE-BLUE-SIZE-SGI", (GLenum) GL_COLOR_TABLE_BLUE_SIZE_SGI, "GL_COLOR_TABLE_BLUE_SIZE_SGI");
#endif
#if defined(GL_COLOR_TABLE_FORMAT_SGI)
defconsti(env, "GL-COLOR-TABLE-FORMAT-SGI", (GLenum) GL_COLOR_TABLE_FORMAT_SGI, "GL_COLOR_TABLE_FORMAT_SGI");
#endif
#if defined(GL_COLOR_TABLE_GREEN_SIZE_SGI)
defconsti(env, "GL-COLOR-TABLE-GREEN-SIZE-SGI", (GLenum) GL_COLOR_TABLE_GREEN_SIZE_SGI, "GL_COLOR_TABLE_GREEN_SIZE_SGI");
#endif
#if defined(GL_COLOR_TABLE_INTENSITY_SIZE_SGI)
defconsti(env, "GL-COLOR-TABLE-INTENSITY-SIZE-SGI", (GLenum) GL_COLOR_TABLE_INTENSITY_SIZE_SGI, "GL_COLOR_TABLE_INTENSITY_SIZE_SGI");
#endif
#if defined(GL_COLOR_TABLE_LUMINANCE_SIZE_SGI)
defconsti(env, "GL-COLOR-TABLE-LUMINANCE-SIZE-SGI", (GLenum) GL_COLOR_TABLE_LUMINANCE_SIZE_SGI, "GL_COLOR_TABLE_LUMINANCE_SIZE_SGI");
#endif
#if defined(GL_COLOR_TABLE_RED_SIZE_SGI)
defconsti(env, "GL-COLOR-TABLE-RED-SIZE-SGI", (GLenum) GL_COLOR_TABLE_RED_SIZE_SGI, "GL_COLOR_TABLE_RED_SIZE_SGI");
#endif
#if defined(GL_COLOR_TABLE_SCALE_SGI)
defconsti(env, "GL-COLOR-TABLE-SCALE-SGI", (GLenum) GL_COLOR_TABLE_SCALE_SGI, "GL_COLOR_TABLE_SCALE_SGI");
#endif
#if defined(GL_COLOR_TABLE_WIDTH_SGI)
defconsti(env, "GL-COLOR-TABLE-WIDTH-SGI", (GLenum) GL_COLOR_TABLE_WIDTH_SGI, "GL_COLOR_TABLE_WIDTH_SGI");
#endif
#if defined(GL_COLOR_TABLE_BIAS)
defconsti(env, "GL-COLOR-TABLE-BIAS", (GLenum) GL_COLOR_TABLE_BIAS, "GL_COLOR_TABLE_BIAS");
#endif
#if defined(GL_COLOR_TABLE_SCALE)
defconsti(env, "GL-COLOR-TABLE-SCALE", (GLenum) GL_COLOR_TABLE_SCALE, "GL_COLOR_TABLE_SCALE");
#endif
#if defined(GL_COLOR_TABLE_FORMAT)
defconsti(env, "GL-COLOR-TABLE-FORMAT", (GLenum) GL_COLOR_TABLE_FORMAT, "GL_COLOR_TABLE_FORMAT");
#endif
#if defined(GL_COLOR_TABLE_WIDTH)
defconsti(env, "GL-COLOR-TABLE-WIDTH", (GLenum) GL_COLOR_TABLE_WIDTH, "GL_COLOR_TABLE_WIDTH");
#endif
#if defined(GL_COLOR_TABLE_RED_SIZE)
defconsti(env, "GL-COLOR-TABLE-RED-SIZE", (GLenum) GL_COLOR_TABLE_RED_SIZE, "GL_COLOR_TABLE_RED_SIZE");
#endif
#if defined(GL_COLOR_TABLE_GREEN_SIZE)
defconsti(env, "GL-COLOR-TABLE-GREEN-SIZE", (GLenum) GL_COLOR_TABLE_GREEN_SIZE, "GL_COLOR_TABLE_GREEN_SIZE");
#endif
#if defined(GL_COLOR_TABLE_BLUE_SIZE)
defconsti(env, "GL-COLOR-TABLE-BLUE-SIZE", (GLenum) GL_COLOR_TABLE_BLUE_SIZE, "GL_COLOR_TABLE_BLUE_SIZE");
#endif
#if defined(GL_COLOR_TABLE_ALPHA_SIZE)
defconsti(env, "GL-COLOR-TABLE-ALPHA-SIZE", (GLenum) GL_COLOR_TABLE_ALPHA_SIZE, "GL_COLOR_TABLE_ALPHA_SIZE");
#endif
#if defined(GL_COLOR_TABLE_LUMINANCE_SIZE)
defconsti(env, "GL-COLOR-TABLE-LUMINANCE-SIZE", (GLenum) GL_COLOR_TABLE_LUMINANCE_SIZE, "GL_COLOR_TABLE_LUMINANCE_SIZE");
#endif
#if defined(GL_COLOR_TABLE_INTENSITY_SIZE)
defconsti(env, "GL-COLOR-TABLE-INTENSITY-SIZE", (GLenum) GL_COLOR_TABLE_INTENSITY_SIZE, "GL_COLOR_TABLE_INTENSITY_SIZE");
#endif
#if defined(GL_CONVOLUTION_BORDER_MODE_EXT)
defconsti(env, "GL-CONVOLUTION-BORDER-MODE-EXT", (GLenum) GL_CONVOLUTION_BORDER_MODE_EXT, "GL_CONVOLUTION_BORDER_MODE_EXT");
#endif
#if defined(GL_CONVOLUTION_FILTER_BIAS_EXT)
defconsti(env, "GL-CONVOLUTION-FILTER-BIAS-EXT", (GLenum) GL_CONVOLUTION_FILTER_BIAS_EXT, "GL_CONVOLUTION_FILTER_BIAS_EXT");
#endif
#if defined(GL_CONVOLUTION_FILTER_SCALE_EXT)
defconsti(env, "GL-CONVOLUTION-FILTER-SCALE-EXT", (GLenum) GL_CONVOLUTION_FILTER_SCALE_EXT, "GL_CONVOLUTION_FILTER_SCALE_EXT");
#endif
#if defined(GL_CONVOLUTION_FORMAT_EXT)
defconsti(env, "GL-CONVOLUTION-FORMAT-EXT", (GLenum) GL_CONVOLUTION_FORMAT_EXT, "GL_CONVOLUTION_FORMAT_EXT");
#endif
#if defined(GL_CONVOLUTION_HEIGHT_EXT)
defconsti(env, "GL-CONVOLUTION-HEIGHT-EXT", (GLenum) GL_CONVOLUTION_HEIGHT_EXT, "GL_CONVOLUTION_HEIGHT_EXT");
#endif
#if defined(GL_CONVOLUTION_WIDTH_EXT)
defconsti(env, "GL-CONVOLUTION-WIDTH-EXT", (GLenum) GL_CONVOLUTION_WIDTH_EXT, "GL_CONVOLUTION_WIDTH_EXT");
#endif
#if defined(GL_MAX_CONVOLUTION_HEIGHT_EXT)
defconsti(env, "GL-MAX-CONVOLUTION-HEIGHT-EXT", (GLenum) GL_MAX_CONVOLUTION_HEIGHT_EXT, "GL_MAX_CONVOLUTION_HEIGHT_EXT");
#endif
#if defined(GL_MAX_CONVOLUTION_WIDTH_EXT)
defconsti(env, "GL-MAX-CONVOLUTION-WIDTH-EXT", (GLenum) GL_MAX_CONVOLUTION_WIDTH_EXT, "GL_MAX_CONVOLUTION_WIDTH_EXT");
#endif
#if defined(GL_CONVOLUTION_BORDER_MODE)
defconsti(env, "GL-CONVOLUTION-BORDER-MODE", (GLenum) GL_CONVOLUTION_BORDER_MODE, "GL_CONVOLUTION_BORDER_MODE");
#endif
#if defined(GL_CONVOLUTION_BORDER_COLOR)
defconsti(env, "GL-CONVOLUTION-BORDER-COLOR", (GLenum) GL_CONVOLUTION_BORDER_COLOR, "GL_CONVOLUTION_BORDER_COLOR");
#endif
#if defined(GL_CONVOLUTION_FILTER_SCALE)
defconsti(env, "GL-CONVOLUTION-FILTER-SCALE", (GLenum) GL_CONVOLUTION_FILTER_SCALE, "GL_CONVOLUTION_FILTER_SCALE");
#endif
#if defined(GL_CONVOLUTION_FILTER_BIAS)
defconsti(env, "GL-CONVOLUTION-FILTER-BIAS", (GLenum) GL_CONVOLUTION_FILTER_BIAS, "GL_CONVOLUTION_FILTER_BIAS");
#endif
#if defined(GL_CONVOLUTION_FORMAT)
defconsti(env, "GL-CONVOLUTION-FORMAT", (GLenum) GL_CONVOLUTION_FORMAT, "GL_CONVOLUTION_FORMAT");
#endif
#if defined(GL_CONVOLUTION_WIDTH)
defconsti(env, "GL-CONVOLUTION-WIDTH", (GLenum) GL_CONVOLUTION_WIDTH, "GL_CONVOLUTION_WIDTH");
#endif
#if defined(GL_CONVOLUTION_HEIGHT)
defconsti(env, "GL-CONVOLUTION-HEIGHT", (GLenum) GL_CONVOLUTION_HEIGHT, "GL_CONVOLUTION_HEIGHT");
#endif
#if defined(GL_MAX_CONVOLUTION_WIDTH)
defconsti(env, "GL-MAX-CONVOLUTION-WIDTH", (GLenum) GL_MAX_CONVOLUTION_WIDTH, "GL_MAX_CONVOLUTION_WIDTH");
#endif
#if defined(GL_MAX_CONVOLUTION_HEIGHT)
defconsti(env, "GL-MAX-CONVOLUTION-HEIGHT", (GLenum) GL_MAX_CONVOLUTION_HEIGHT, "GL_MAX_CONVOLUTION_HEIGHT");
#endif
#if defined(GL_HISTOGRAM_ALPHA_SIZE_EXT)
defconsti(env, "GL-HISTOGRAM-ALPHA-SIZE-EXT", (GLenum) GL_HISTOGRAM_ALPHA_SIZE_EXT, "GL_HISTOGRAM_ALPHA_SIZE_EXT");
#endif
#if defined(GL_HISTOGRAM_BLUE_SIZE_EXT)
defconsti(env, "GL-HISTOGRAM-BLUE-SIZE-EXT", (GLenum) GL_HISTOGRAM_BLUE_SIZE_EXT, "GL_HISTOGRAM_BLUE_SIZE_EXT");
#endif
#if defined(GL_HISTOGRAM_FORMAT_EXT)
defconsti(env, "GL-HISTOGRAM-FORMAT-EXT", (GLenum) GL_HISTOGRAM_FORMAT_EXT, "GL_HISTOGRAM_FORMAT_EXT");
#endif
#if defined(GL_HISTOGRAM_GREEN_SIZE_EXT)
defconsti(env, "GL-HISTOGRAM-GREEN-SIZE-EXT", (GLenum) GL_HISTOGRAM_GREEN_SIZE_EXT, "GL_HISTOGRAM_GREEN_SIZE_EXT");
#endif
#if defined(GL_HISTOGRAM_LUMINANCE_SIZE_EXT)
defconsti(env, "GL-HISTOGRAM-LUMINANCE-SIZE-EXT", (GLenum) GL_HISTOGRAM_LUMINANCE_SIZE_EXT, "GL_HISTOGRAM_LUMINANCE_SIZE_EXT");
#endif
#if defined(GL_HISTOGRAM_RED_SIZE_EXT)
defconsti(env, "GL-HISTOGRAM-RED-SIZE-EXT", (GLenum) GL_HISTOGRAM_RED_SIZE_EXT, "GL_HISTOGRAM_RED_SIZE_EXT");
#endif
#if defined(GL_HISTOGRAM_SINK_EXT)
defconsti(env, "GL-HISTOGRAM-SINK-EXT", (GLenum) GL_HISTOGRAM_SINK_EXT, "GL_HISTOGRAM_SINK_EXT");
#endif
#if defined(GL_HISTOGRAM_WIDTH_EXT)
defconsti(env, "GL-HISTOGRAM-WIDTH-EXT", (GLenum) GL_HISTOGRAM_WIDTH_EXT, "GL_HISTOGRAM_WIDTH_EXT");
#endif
#if defined(GL_HISTOGRAM_WIDTH)
defconsti(env, "GL-HISTOGRAM-WIDTH", (GLenum) GL_HISTOGRAM_WIDTH, "GL_HISTOGRAM_WIDTH");
#endif
#if defined(GL_HISTOGRAM_FORMAT)
defconsti(env, "GL-HISTOGRAM-FORMAT", (GLenum) GL_HISTOGRAM_FORMAT, "GL_HISTOGRAM_FORMAT");
#endif
#if defined(GL_HISTOGRAM_RED_SIZE)
defconsti(env, "GL-HISTOGRAM-RED-SIZE", (GLenum) GL_HISTOGRAM_RED_SIZE, "GL_HISTOGRAM_RED_SIZE");
#endif
#if defined(GL_HISTOGRAM_GREEN_SIZE)
defconsti(env, "GL-HISTOGRAM-GREEN-SIZE", (GLenum) GL_HISTOGRAM_GREEN_SIZE, "GL_HISTOGRAM_GREEN_SIZE");
#endif
#if defined(GL_HISTOGRAM_BLUE_SIZE)
defconsti(env, "GL-HISTOGRAM-BLUE-SIZE", (GLenum) GL_HISTOGRAM_BLUE_SIZE, "GL_HISTOGRAM_BLUE_SIZE");
#endif
#if defined(GL_HISTOGRAM_ALPHA_SIZE)
defconsti(env, "GL-HISTOGRAM-ALPHA-SIZE", (GLenum) GL_HISTOGRAM_ALPHA_SIZE, "GL_HISTOGRAM_ALPHA_SIZE");
#endif
#if defined(GL_HISTOGRAM_LUMINANCE_SIZE)
defconsti(env, "GL-HISTOGRAM-LUMINANCE-SIZE", (GLenum) GL_HISTOGRAM_LUMINANCE_SIZE, "GL_HISTOGRAM_LUMINANCE_SIZE");
#endif
#if defined(GL_HISTOGRAM_SINK)
defconsti(env, "GL-HISTOGRAM-SINK", (GLenum) GL_HISTOGRAM_SINK, "GL_HISTOGRAM_SINK");
#endif
#if defined(GL_HISTOGRAM_ALPHA_SIZE_EXT)
defconsti(env, "GL-HISTOGRAM-ALPHA-SIZE-EXT", (GLenum) GL_HISTOGRAM_ALPHA_SIZE_EXT, "GL_HISTOGRAM_ALPHA_SIZE_EXT");
#endif
#if defined(GL_HISTOGRAM_BLUE_SIZE_EXT)
defconsti(env, "GL-HISTOGRAM-BLUE-SIZE-EXT", (GLenum) GL_HISTOGRAM_BLUE_SIZE_EXT, "GL_HISTOGRAM_BLUE_SIZE_EXT");
#endif
#if defined(GL_HISTOGRAM_FORMAT_EXT)
defconsti(env, "GL-HISTOGRAM-FORMAT-EXT", (GLenum) GL_HISTOGRAM_FORMAT_EXT, "GL_HISTOGRAM_FORMAT_EXT");
#endif
#if defined(GL_HISTOGRAM_GREEN_SIZE_EXT)
defconsti(env, "GL-HISTOGRAM-GREEN-SIZE-EXT", (GLenum) GL_HISTOGRAM_GREEN_SIZE_EXT, "GL_HISTOGRAM_GREEN_SIZE_EXT");
#endif
#if defined(GL_HISTOGRAM_LUMINANCE_SIZE_EXT)
defconsti(env, "GL-HISTOGRAM-LUMINANCE-SIZE-EXT", (GLenum) GL_HISTOGRAM_LUMINANCE_SIZE_EXT, "GL_HISTOGRAM_LUMINANCE_SIZE_EXT");
#endif
#if defined(GL_HISTOGRAM_RED_SIZE_EXT)
defconsti(env, "GL-HISTOGRAM-RED-SIZE-EXT", (GLenum) GL_HISTOGRAM_RED_SIZE_EXT, "GL_HISTOGRAM_RED_SIZE_EXT");
#endif
#if defined(GL_HISTOGRAM_SINK_EXT)
defconsti(env, "GL-HISTOGRAM-SINK-EXT", (GLenum) GL_HISTOGRAM_SINK_EXT, "GL_HISTOGRAM_SINK_EXT");
#endif
#if defined(GL_HISTOGRAM_WIDTH_EXT)
defconsti(env, "GL-HISTOGRAM-WIDTH-EXT", (GLenum) GL_HISTOGRAM_WIDTH_EXT, "GL_HISTOGRAM_WIDTH_EXT");
#endif
#if defined(GL_COEFF)
defconsti(env, "GL-COEFF", (GLenum) GL_COEFF, "GL_COEFF");
#endif
#if defined(GL_DOMAIN)
defconsti(env, "GL-DOMAIN", (GLenum) GL_DOMAIN, "GL_DOMAIN");
#endif
#if defined(GL_ORDER)
defconsti(env, "GL-ORDER", (GLenum) GL_ORDER, "GL_ORDER");
#endif
#if defined(GL_MINMAX_FORMAT)
defconsti(env, "GL-MINMAX-FORMAT", (GLenum) GL_MINMAX_FORMAT, "GL_MINMAX_FORMAT");
#endif
#if defined(GL_MINMAX_FORMAT_EXT)
defconsti(env, "GL-MINMAX-FORMAT-EXT", (GLenum) GL_MINMAX_FORMAT_EXT, "GL_MINMAX_FORMAT_EXT");
#endif
#if defined(GL_MINMAX_SINK)
defconsti(env, "GL-MINMAX-SINK", (GLenum) GL_MINMAX_SINK, "GL_MINMAX_SINK");
#endif
#if defined(GL_MINMAX_SINK_EXT)
defconsti(env, "GL-MINMAX-SINK-EXT", (GLenum) GL_MINMAX_SINK_EXT, "GL_MINMAX_SINK_EXT");
#endif
#if defined(GL_MINMAX_FORMAT)
defconsti(env, "GL-MINMAX-FORMAT", (GLenum) GL_MINMAX_FORMAT, "GL_MINMAX_FORMAT");
#endif
#if defined(GL_MINMAX_SINK)
defconsti(env, "GL-MINMAX-SINK", (GLenum) GL_MINMAX_SINK, "GL_MINMAX_SINK");
#endif
#if defined(GL_PIXEL_MAP_A_TO_A)
defconsti(env, "GL-PIXEL-MAP-A-TO-A", (GLenum) GL_PIXEL_MAP_A_TO_A, "GL_PIXEL_MAP_A_TO_A");
#endif
#if defined(GL_PIXEL_MAP_B_TO_B)
defconsti(env, "GL-PIXEL-MAP-B-TO-B", (GLenum) GL_PIXEL_MAP_B_TO_B, "GL_PIXEL_MAP_B_TO_B");
#endif
#if defined(GL_PIXEL_MAP_G_TO_G)
defconsti(env, "GL-PIXEL-MAP-G-TO-G", (GLenum) GL_PIXEL_MAP_G_TO_G, "GL_PIXEL_MAP_G_TO_G");
#endif
#if defined(GL_PIXEL_MAP_I_TO_A)
defconsti(env, "GL-PIXEL-MAP-I-TO-A", (GLenum) GL_PIXEL_MAP_I_TO_A, "GL_PIXEL_MAP_I_TO_A");
#endif
#if defined(GL_PIXEL_MAP_I_TO_B)
defconsti(env, "GL-PIXEL-MAP-I-TO-B", (GLenum) GL_PIXEL_MAP_I_TO_B, "GL_PIXEL_MAP_I_TO_B");
#endif
#if defined(GL_PIXEL_MAP_I_TO_G)
defconsti(env, "GL-PIXEL-MAP-I-TO-G", (GLenum) GL_PIXEL_MAP_I_TO_G, "GL_PIXEL_MAP_I_TO_G");
#endif
#if defined(GL_PIXEL_MAP_I_TO_I)
defconsti(env, "GL-PIXEL-MAP-I-TO-I", (GLenum) GL_PIXEL_MAP_I_TO_I, "GL_PIXEL_MAP_I_TO_I");
#endif
#if defined(GL_PIXEL_MAP_I_TO_R)
defconsti(env, "GL-PIXEL-MAP-I-TO-R", (GLenum) GL_PIXEL_MAP_I_TO_R, "GL_PIXEL_MAP_I_TO_R");
#endif
#if defined(GL_PIXEL_MAP_R_TO_R)
defconsti(env, "GL-PIXEL-MAP-R-TO-R", (GLenum) GL_PIXEL_MAP_R_TO_R, "GL_PIXEL_MAP_R_TO_R");
#endif
#if defined(GL_PIXEL_MAP_S_TO_S)
defconsti(env, "GL-PIXEL-MAP-S-TO-S", (GLenum) GL_PIXEL_MAP_S_TO_S, "GL_PIXEL_MAP_S_TO_S");
#endif
#if defined(GL_ACCUM_ALPHA_BITS)
defconsti(env, "GL-ACCUM-ALPHA-BITS", (GLenum) GL_ACCUM_ALPHA_BITS, "GL_ACCUM_ALPHA_BITS");
#endif
#if defined(GL_ACCUM_BLUE_BITS)
defconsti(env, "GL-ACCUM-BLUE-BITS", (GLenum) GL_ACCUM_BLUE_BITS, "GL_ACCUM_BLUE_BITS");
#endif
#if defined(GL_ACCUM_CLEAR_VALUE)
defconsti(env, "GL-ACCUM-CLEAR-VALUE", (GLenum) GL_ACCUM_CLEAR_VALUE, "GL_ACCUM_CLEAR_VALUE");
#endif
#if defined(GL_ACCUM_GREEN_BITS)
defconsti(env, "GL-ACCUM-GREEN-BITS", (GLenum) GL_ACCUM_GREEN_BITS, "GL_ACCUM_GREEN_BITS");
#endif
#if defined(GL_ACCUM_RED_BITS)
defconsti(env, "GL-ACCUM-RED-BITS", (GLenum) GL_ACCUM_RED_BITS, "GL_ACCUM_RED_BITS");
#endif
#if defined(GL_ACTIVE_TEXTURE)
defconsti(env, "GL-ACTIVE-TEXTURE", (GLenum) GL_ACTIVE_TEXTURE, "GL_ACTIVE_TEXTURE");
#endif
#if defined(GL_ALIASED_LINE_WIDTH_RANGE)
defconsti(env, "GL-ALIASED-LINE-WIDTH-RANGE", (GLenum) GL_ALIASED_LINE_WIDTH_RANGE, "GL_ALIASED_LINE_WIDTH_RANGE");
#endif
#if defined(GL_ALIASED_POINT_SIZE_RANGE)
defconsti(env, "GL-ALIASED-POINT-SIZE-RANGE", (GLenum) GL_ALIASED_POINT_SIZE_RANGE, "GL_ALIASED_POINT_SIZE_RANGE");
#endif
#if defined(GL_ALPHA_BIAS)
defconsti(env, "GL-ALPHA-BIAS", (GLenum) GL_ALPHA_BIAS, "GL_ALPHA_BIAS");
#endif
#if defined(GL_ALPHA_BITS)
defconsti(env, "GL-ALPHA-BITS", (GLenum) GL_ALPHA_BITS, "GL_ALPHA_BITS");
#endif
#if defined(GL_ALPHA_SCALE)
defconsti(env, "GL-ALPHA-SCALE", (GLenum) GL_ALPHA_SCALE, "GL_ALPHA_SCALE");
#endif
#if defined(GL_ALPHA_TEST)
defconsti(env, "GL-ALPHA-TEST", (GLenum) GL_ALPHA_TEST, "GL_ALPHA_TEST");
#endif
#if defined(GL_ALPHA_TEST_FUNC)
defconsti(env, "GL-ALPHA-TEST-FUNC", (GLenum) GL_ALPHA_TEST_FUNC, "GL_ALPHA_TEST_FUNC");
#endif
#if defined(GL_ALPHA_TEST_FUNC_QCOM)
defconsti(env, "GL-ALPHA-TEST-FUNC-QCOM", (GLenum) GL_ALPHA_TEST_FUNC_QCOM, "GL_ALPHA_TEST_FUNC_QCOM");
#endif
#if defined(GL_ALPHA_TEST_QCOM)
defconsti(env, "GL-ALPHA-TEST-QCOM", (GLenum) GL_ALPHA_TEST_QCOM, "GL_ALPHA_TEST_QCOM");
#endif
#if defined(GL_ALPHA_TEST_REF)
defconsti(env, "GL-ALPHA-TEST-REF", (GLenum) GL_ALPHA_TEST_REF, "GL_ALPHA_TEST_REF");
#endif
#if defined(GL_ALPHA_TEST_REF_QCOM)
defconsti(env, "GL-ALPHA-TEST-REF-QCOM", (GLenum) GL_ALPHA_TEST_REF_QCOM, "GL_ALPHA_TEST_REF_QCOM");
#endif
#if defined(GL_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-ARRAY-BUFFER-BINDING", (GLenum) GL_ARRAY_BUFFER_BINDING, "GL_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_ASYNC_DRAW_PIXELS_SGIX)
defconsti(env, "GL-ASYNC-DRAW-PIXELS-SGIX", (GLenum) GL_ASYNC_DRAW_PIXELS_SGIX, "GL_ASYNC_DRAW_PIXELS_SGIX");
#endif
#if defined(GL_ASYNC_HISTOGRAM_SGIX)
defconsti(env, "GL-ASYNC-HISTOGRAM-SGIX", (GLenum) GL_ASYNC_HISTOGRAM_SGIX, "GL_ASYNC_HISTOGRAM_SGIX");
#endif
#if defined(GL_ASYNC_MARKER_SGIX)
defconsti(env, "GL-ASYNC-MARKER-SGIX", (GLenum) GL_ASYNC_MARKER_SGIX, "GL_ASYNC_MARKER_SGIX");
#endif
#if defined(GL_ASYNC_READ_PIXELS_SGIX)
defconsti(env, "GL-ASYNC-READ-PIXELS-SGIX", (GLenum) GL_ASYNC_READ_PIXELS_SGIX, "GL_ASYNC_READ_PIXELS_SGIX");
#endif
#if defined(GL_ASYNC_TEX_IMAGE_SGIX)
defconsti(env, "GL-ASYNC-TEX-IMAGE-SGIX", (GLenum) GL_ASYNC_TEX_IMAGE_SGIX, "GL_ASYNC_TEX_IMAGE_SGIX");
#endif
#if defined(GL_ATTRIB_STACK_DEPTH)
defconsti(env, "GL-ATTRIB-STACK-DEPTH", (GLenum) GL_ATTRIB_STACK_DEPTH, "GL_ATTRIB_STACK_DEPTH");
#endif
#if defined(GL_AUTO_NORMAL)
defconsti(env, "GL-AUTO-NORMAL", (GLenum) GL_AUTO_NORMAL, "GL_AUTO_NORMAL");
#endif
#if defined(GL_AUX_BUFFERS)
defconsti(env, "GL-AUX-BUFFERS", (GLenum) GL_AUX_BUFFERS, "GL_AUX_BUFFERS");
#endif
#if defined(GL_BLEND)
defconsti(env, "GL-BLEND", (GLenum) GL_BLEND, "GL_BLEND");
#endif
#if defined(GL_BLEND_COLOR)
defconsti(env, "GL-BLEND-COLOR", (GLenum) GL_BLEND_COLOR, "GL_BLEND_COLOR");
#endif
#if defined(GL_BLEND_COLOR_EXT)
defconsti(env, "GL-BLEND-COLOR-EXT", (GLenum) GL_BLEND_COLOR_EXT, "GL_BLEND_COLOR_EXT");
#endif
#if defined(GL_BLEND_DST)
defconsti(env, "GL-BLEND-DST", (GLenum) GL_BLEND_DST, "GL_BLEND_DST");
#endif
#if defined(GL_BLEND_DST_ALPHA)
defconsti(env, "GL-BLEND-DST-ALPHA", (GLenum) GL_BLEND_DST_ALPHA, "GL_BLEND_DST_ALPHA");
#endif
#if defined(GL_BLEND_DST_RGB)
defconsti(env, "GL-BLEND-DST-RGB", (GLenum) GL_BLEND_DST_RGB, "GL_BLEND_DST_RGB");
#endif
#if defined(GL_BLEND_EQUATION_ALPHA)
defconsti(env, "GL-BLEND-EQUATION-ALPHA", (GLenum) GL_BLEND_EQUATION_ALPHA, "GL_BLEND_EQUATION_ALPHA");
#endif
#if defined(GL_BLEND_EQUATION_EXT)
defconsti(env, "GL-BLEND-EQUATION-EXT", (GLenum) GL_BLEND_EQUATION_EXT, "GL_BLEND_EQUATION_EXT");
#endif
#if defined(GL_BLEND_EQUATION_RGB)
defconsti(env, "GL-BLEND-EQUATION-RGB", (GLenum) GL_BLEND_EQUATION_RGB, "GL_BLEND_EQUATION_RGB");
#endif
#if defined(GL_BLEND_SRC)
defconsti(env, "GL-BLEND-SRC", (GLenum) GL_BLEND_SRC, "GL_BLEND_SRC");
#endif
#if defined(GL_BLEND_SRC_ALPHA)
defconsti(env, "GL-BLEND-SRC-ALPHA", (GLenum) GL_BLEND_SRC_ALPHA, "GL_BLEND_SRC_ALPHA");
#endif
#if defined(GL_BLEND_SRC_RGB)
defconsti(env, "GL-BLEND-SRC-RGB", (GLenum) GL_BLEND_SRC_RGB, "GL_BLEND_SRC_RGB");
#endif
#if defined(GL_BLUE_BIAS)
defconsti(env, "GL-BLUE-BIAS", (GLenum) GL_BLUE_BIAS, "GL_BLUE_BIAS");
#endif
#if defined(GL_BLUE_BITS)
defconsti(env, "GL-BLUE-BITS", (GLenum) GL_BLUE_BITS, "GL_BLUE_BITS");
#endif
#if defined(GL_BLUE_SCALE)
defconsti(env, "GL-BLUE-SCALE", (GLenum) GL_BLUE_SCALE, "GL_BLUE_SCALE");
#endif
#if defined(GL_CALLIGRAPHIC_FRAGMENT_SGIX)
defconsti(env, "GL-CALLIGRAPHIC-FRAGMENT-SGIX", (GLenum) GL_CALLIGRAPHIC_FRAGMENT_SGIX, "GL_CALLIGRAPHIC_FRAGMENT_SGIX");
#endif
#if defined(GL_CLIENT_ATTRIB_STACK_DEPTH)
defconsti(env, "GL-CLIENT-ATTRIB-STACK-DEPTH", (GLenum) GL_CLIENT_ATTRIB_STACK_DEPTH, "GL_CLIENT_ATTRIB_STACK_DEPTH");
#endif
#if defined(GL_CLIP_PLANE0)
defconsti(env, "GL-CLIP-PLANE0", (GLenum) GL_CLIP_PLANE0, "GL_CLIP_PLANE0");
#endif
#if defined(GL_CLIP_PLANE1)
defconsti(env, "GL-CLIP-PLANE1", (GLenum) GL_CLIP_PLANE1, "GL_CLIP_PLANE1");
#endif
#if defined(GL_CLIP_PLANE2)
defconsti(env, "GL-CLIP-PLANE2", (GLenum) GL_CLIP_PLANE2, "GL_CLIP_PLANE2");
#endif
#if defined(GL_CLIP_PLANE3)
defconsti(env, "GL-CLIP-PLANE3", (GLenum) GL_CLIP_PLANE3, "GL_CLIP_PLANE3");
#endif
#if defined(GL_CLIP_PLANE4)
defconsti(env, "GL-CLIP-PLANE4", (GLenum) GL_CLIP_PLANE4, "GL_CLIP_PLANE4");
#endif
#if defined(GL_CLIP_PLANE5)
defconsti(env, "GL-CLIP-PLANE5", (GLenum) GL_CLIP_PLANE5, "GL_CLIP_PLANE5");
#endif
#if defined(GL_COLOR_ARRAY)
defconsti(env, "GL-COLOR-ARRAY", (GLenum) GL_COLOR_ARRAY, "GL_COLOR_ARRAY");
#endif
#if defined(GL_COLOR_ARRAY_COUNT_EXT)
defconsti(env, "GL-COLOR-ARRAY-COUNT-EXT", (GLenum) GL_COLOR_ARRAY_COUNT_EXT, "GL_COLOR_ARRAY_COUNT_EXT");
#endif
#if defined(GL_COLOR_ARRAY_SIZE)
defconsti(env, "GL-COLOR-ARRAY-SIZE", (GLenum) GL_COLOR_ARRAY_SIZE, "GL_COLOR_ARRAY_SIZE");
#endif
#if defined(GL_COLOR_ARRAY_STRIDE)
defconsti(env, "GL-COLOR-ARRAY-STRIDE", (GLenum) GL_COLOR_ARRAY_STRIDE, "GL_COLOR_ARRAY_STRIDE");
#endif
#if defined(GL_COLOR_ARRAY_TYPE)
defconsti(env, "GL-COLOR-ARRAY-TYPE", (GLenum) GL_COLOR_ARRAY_TYPE, "GL_COLOR_ARRAY_TYPE");
#endif
#if defined(GL_COLOR_CLEAR_VALUE)
defconsti(env, "GL-COLOR-CLEAR-VALUE", (GLenum) GL_COLOR_CLEAR_VALUE, "GL_COLOR_CLEAR_VALUE");
#endif
#if defined(GL_COLOR_LOGIC_OP)
defconsti(env, "GL-COLOR-LOGIC-OP", (GLenum) GL_COLOR_LOGIC_OP, "GL_COLOR_LOGIC_OP");
#endif
#if defined(GL_COLOR_MATERIAL)
defconsti(env, "GL-COLOR-MATERIAL", (GLenum) GL_COLOR_MATERIAL, "GL_COLOR_MATERIAL");
#endif
#if defined(GL_COLOR_MATERIAL_FACE)
defconsti(env, "GL-COLOR-MATERIAL-FACE", (GLenum) GL_COLOR_MATERIAL_FACE, "GL_COLOR_MATERIAL_FACE");
#endif
#if defined(GL_COLOR_MATERIAL_PARAMETER)
defconsti(env, "GL-COLOR-MATERIAL-PARAMETER", (GLenum) GL_COLOR_MATERIAL_PARAMETER, "GL_COLOR_MATERIAL_PARAMETER");
#endif
#if defined(GL_COLOR_MATRIX_SGI)
defconsti(env, "GL-COLOR-MATRIX-SGI", (GLenum) GL_COLOR_MATRIX_SGI, "GL_COLOR_MATRIX_SGI");
#endif
#if defined(GL_COLOR_MATRIX_STACK_DEPTH_SGI)
defconsti(env, "GL-COLOR-MATRIX-STACK-DEPTH-SGI", (GLenum) GL_COLOR_MATRIX_STACK_DEPTH_SGI, "GL_COLOR_MATRIX_STACK_DEPTH_SGI");
#endif
#if defined(GL_COLOR_TABLE_SGI)
defconsti(env, "GL-COLOR-TABLE-SGI", (GLenum) GL_COLOR_TABLE_SGI, "GL_COLOR_TABLE_SGI");
#endif
#if defined(GL_COLOR_WRITEMASK)
defconsti(env, "GL-COLOR-WRITEMASK", (GLenum) GL_COLOR_WRITEMASK, "GL_COLOR_WRITEMASK");
#endif
#if defined(GL_COMPRESSED_TEXTURE_FORMATS)
defconsti(env, "GL-COMPRESSED-TEXTURE-FORMATS", (GLenum) GL_COMPRESSED_TEXTURE_FORMATS, "GL_COMPRESSED_TEXTURE_FORMATS");
#endif
#if defined(GL_CONTEXT_FLAGS)
defconsti(env, "GL-CONTEXT-FLAGS", (GLenum) GL_CONTEXT_FLAGS, "GL_CONTEXT_FLAGS");
#endif
#if defined(GL_CONVOLUTION_1D_EXT)
defconsti(env, "GL-CONVOLUTION-1D-EXT", (GLenum) GL_CONVOLUTION_1D_EXT, "GL_CONVOLUTION_1D_EXT");
#endif
#if defined(GL_CONVOLUTION_2D_EXT)
defconsti(env, "GL-CONVOLUTION-2D-EXT", (GLenum) GL_CONVOLUTION_2D_EXT, "GL_CONVOLUTION_2D_EXT");
#endif
#if defined(GL_CONVOLUTION_HINT_SGIX)
defconsti(env, "GL-CONVOLUTION-HINT-SGIX", (GLenum) GL_CONVOLUTION_HINT_SGIX, "GL_CONVOLUTION_HINT_SGIX");
#endif
#if defined(GL_CULL_FACE)
defconsti(env, "GL-CULL-FACE", (GLenum) GL_CULL_FACE, "GL_CULL_FACE");
#endif
#if defined(GL_CULL_FACE_MODE)
defconsti(env, "GL-CULL-FACE-MODE", (GLenum) GL_CULL_FACE_MODE, "GL_CULL_FACE_MODE");
#endif
#if defined(GL_CURRENT_COLOR)
defconsti(env, "GL-CURRENT-COLOR", (GLenum) GL_CURRENT_COLOR, "GL_CURRENT_COLOR");
#endif
#if defined(GL_CURRENT_INDEX)
defconsti(env, "GL-CURRENT-INDEX", (GLenum) GL_CURRENT_INDEX, "GL_CURRENT_INDEX");
#endif
#if defined(GL_CURRENT_NORMAL)
defconsti(env, "GL-CURRENT-NORMAL", (GLenum) GL_CURRENT_NORMAL, "GL_CURRENT_NORMAL");
#endif
#if defined(GL_CURRENT_PROGRAM)
defconsti(env, "GL-CURRENT-PROGRAM", (GLenum) GL_CURRENT_PROGRAM, "GL_CURRENT_PROGRAM");
#endif
#if defined(GL_CURRENT_RASTER_COLOR)
defconsti(env, "GL-CURRENT-RASTER-COLOR", (GLenum) GL_CURRENT_RASTER_COLOR, "GL_CURRENT_RASTER_COLOR");
#endif
#if defined(GL_CURRENT_RASTER_DISTANCE)
defconsti(env, "GL-CURRENT-RASTER-DISTANCE", (GLenum) GL_CURRENT_RASTER_DISTANCE, "GL_CURRENT_RASTER_DISTANCE");
#endif
#if defined(GL_CURRENT_RASTER_INDEX)
defconsti(env, "GL-CURRENT-RASTER-INDEX", (GLenum) GL_CURRENT_RASTER_INDEX, "GL_CURRENT_RASTER_INDEX");
#endif
#if defined(GL_CURRENT_RASTER_POSITION)
defconsti(env, "GL-CURRENT-RASTER-POSITION", (GLenum) GL_CURRENT_RASTER_POSITION, "GL_CURRENT_RASTER_POSITION");
#endif
#if defined(GL_CURRENT_RASTER_POSITION_VALID)
defconsti(env, "GL-CURRENT-RASTER-POSITION-VALID", (GLenum) GL_CURRENT_RASTER_POSITION_VALID, "GL_CURRENT_RASTER_POSITION_VALID");
#endif
#if defined(GL_CURRENT_RASTER_TEXTURE_COORDS)
defconsti(env, "GL-CURRENT-RASTER-TEXTURE-COORDS", (GLenum) GL_CURRENT_RASTER_TEXTURE_COORDS, "GL_CURRENT_RASTER_TEXTURE_COORDS");
#endif
#if defined(GL_CURRENT_TEXTURE_COORDS)
defconsti(env, "GL-CURRENT-TEXTURE-COORDS", (GLenum) GL_CURRENT_TEXTURE_COORDS, "GL_CURRENT_TEXTURE_COORDS");
#endif
#if defined(GL_DEBUG_GROUP_STACK_DEPTH)
defconsti(env, "GL-DEBUG-GROUP-STACK-DEPTH", (GLenum) GL_DEBUG_GROUP_STACK_DEPTH, "GL_DEBUG_GROUP_STACK_DEPTH");
#endif
#if defined(GL_DEFORMATIONS_MASK_SGIX)
defconsti(env, "GL-DEFORMATIONS-MASK-SGIX", (GLenum) GL_DEFORMATIONS_MASK_SGIX, "GL_DEFORMATIONS_MASK_SGIX");
#endif
#if defined(GL_DEPTH_BIAS)
defconsti(env, "GL-DEPTH-BIAS", (GLenum) GL_DEPTH_BIAS, "GL_DEPTH_BIAS");
#endif
#if defined(GL_DEPTH_BITS)
defconsti(env, "GL-DEPTH-BITS", (GLenum) GL_DEPTH_BITS, "GL_DEPTH_BITS");
#endif
#if defined(GL_DEPTH_CLEAR_VALUE)
defconsti(env, "GL-DEPTH-CLEAR-VALUE", (GLenum) GL_DEPTH_CLEAR_VALUE, "GL_DEPTH_CLEAR_VALUE");
#endif
#if defined(GL_DEPTH_FUNC)
defconsti(env, "GL-DEPTH-FUNC", (GLenum) GL_DEPTH_FUNC, "GL_DEPTH_FUNC");
#endif
#if defined(GL_DEPTH_RANGE)
defconsti(env, "GL-DEPTH-RANGE", (GLenum) GL_DEPTH_RANGE, "GL_DEPTH_RANGE");
#endif
#if defined(GL_DEPTH_SCALE)
defconsti(env, "GL-DEPTH-SCALE", (GLenum) GL_DEPTH_SCALE, "GL_DEPTH_SCALE");
#endif
#if defined(GL_DEPTH_TEST)
defconsti(env, "GL-DEPTH-TEST", (GLenum) GL_DEPTH_TEST, "GL_DEPTH_TEST");
#endif
#if defined(GL_DEPTH_WRITEMASK)
defconsti(env, "GL-DEPTH-WRITEMASK", (GLenum) GL_DEPTH_WRITEMASK, "GL_DEPTH_WRITEMASK");
#endif
#if defined(GL_DETAIL_TEXTURE_2D_BINDING_SGIS)
defconsti(env, "GL-DETAIL-TEXTURE-2D-BINDING-SGIS", (GLenum) GL_DETAIL_TEXTURE_2D_BINDING_SGIS, "GL_DETAIL_TEXTURE_2D_BINDING_SGIS");
#endif
#if defined(GL_DEVICE_LUID_EXT)
defconsti(env, "GL-DEVICE-LUID-EXT", (GLenum) GL_DEVICE_LUID_EXT, "GL_DEVICE_LUID_EXT");
#endif
#if defined(GL_DEVICE_NODE_MASK_EXT)
defconsti(env, "GL-DEVICE-NODE-MASK-EXT", (GLenum) GL_DEVICE_NODE_MASK_EXT, "GL_DEVICE_NODE_MASK_EXT");
#endif
#if defined(GL_DEVICE_UUID_EXT)
defconsti(env, "GL-DEVICE-UUID-EXT", (GLenum) GL_DEVICE_UUID_EXT, "GL_DEVICE_UUID_EXT");
#endif
#if defined(GL_DISPATCH_INDIRECT_BUFFER_BINDING)
defconsti(env, "GL-DISPATCH-INDIRECT-BUFFER-BINDING", (GLenum) GL_DISPATCH_INDIRECT_BUFFER_BINDING, "GL_DISPATCH_INDIRECT_BUFFER_BINDING");
#endif
#if defined(GL_DISTANCE_ATTENUATION_SGIS)
defconsti(env, "GL-DISTANCE-ATTENUATION-SGIS", (GLenum) GL_DISTANCE_ATTENUATION_SGIS, "GL_DISTANCE_ATTENUATION_SGIS");
#endif
#if defined(GL_DITHER)
defconsti(env, "GL-DITHER", (GLenum) GL_DITHER, "GL_DITHER");
#endif
#if defined(GL_DOUBLEBUFFER)
defconsti(env, "GL-DOUBLEBUFFER", (GLenum) GL_DOUBLEBUFFER, "GL_DOUBLEBUFFER");
#endif
#if defined(GL_DRAW_BUFFER)
defconsti(env, "GL-DRAW-BUFFER", (GLenum) GL_DRAW_BUFFER, "GL_DRAW_BUFFER");
#endif
#if defined(GL_DRAW_BUFFER_EXT)
defconsti(env, "GL-DRAW-BUFFER-EXT", (GLenum) GL_DRAW_BUFFER_EXT, "GL_DRAW_BUFFER_EXT");
#endif
#if defined(GL_DRAW_FRAMEBUFFER_BINDING)
defconsti(env, "GL-DRAW-FRAMEBUFFER-BINDING", (GLenum) GL_DRAW_FRAMEBUFFER_BINDING, "GL_DRAW_FRAMEBUFFER_BINDING");
#endif
#if defined(GL_DRIVER_UUID_EXT)
defconsti(env, "GL-DRIVER-UUID-EXT", (GLenum) GL_DRIVER_UUID_EXT, "GL_DRIVER_UUID_EXT");
#endif
#if defined(GL_EDGE_FLAG)
defconsti(env, "GL-EDGE-FLAG", (GLenum) GL_EDGE_FLAG, "GL_EDGE_FLAG");
#endif
#if defined(GL_EDGE_FLAG_ARRAY)
defconsti(env, "GL-EDGE-FLAG-ARRAY", (GLenum) GL_EDGE_FLAG_ARRAY, "GL_EDGE_FLAG_ARRAY");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_COUNT_EXT)
defconsti(env, "GL-EDGE-FLAG-ARRAY-COUNT-EXT", (GLenum) GL_EDGE_FLAG_ARRAY_COUNT_EXT, "GL_EDGE_FLAG_ARRAY_COUNT_EXT");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_STRIDE)
defconsti(env, "GL-EDGE-FLAG-ARRAY-STRIDE", (GLenum) GL_EDGE_FLAG_ARRAY_STRIDE, "GL_EDGE_FLAG_ARRAY_STRIDE");
#endif
#if defined(GL_ELEMENT_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-ELEMENT-ARRAY-BUFFER-BINDING", (GLenum) GL_ELEMENT_ARRAY_BUFFER_BINDING, "GL_ELEMENT_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_FEEDBACK_BUFFER_SIZE)
defconsti(env, "GL-FEEDBACK-BUFFER-SIZE", (GLenum) GL_FEEDBACK_BUFFER_SIZE, "GL_FEEDBACK_BUFFER_SIZE");
#endif
#if defined(GL_FEEDBACK_BUFFER_TYPE)
defconsti(env, "GL-FEEDBACK-BUFFER-TYPE", (GLenum) GL_FEEDBACK_BUFFER_TYPE, "GL_FEEDBACK_BUFFER_TYPE");
#endif
#if defined(GL_FOG)
defconsti(env, "GL-FOG", (GLenum) GL_FOG, "GL_FOG");
#endif
#if defined(GL_FOG_COLOR)
defconsti(env, "GL-FOG-COLOR", (GLenum) GL_FOG_COLOR, "GL_FOG_COLOR");
#endif
#if defined(GL_FOG_DENSITY)
defconsti(env, "GL-FOG-DENSITY", (GLenum) GL_FOG_DENSITY, "GL_FOG_DENSITY");
#endif
#if defined(GL_FOG_END)
defconsti(env, "GL-FOG-END", (GLenum) GL_FOG_END, "GL_FOG_END");
#endif
#if defined(GL_FOG_FUNC_POINTS_SGIS)
defconsti(env, "GL-FOG-FUNC-POINTS-SGIS", (GLenum) GL_FOG_FUNC_POINTS_SGIS, "GL_FOG_FUNC_POINTS_SGIS");
#endif
#if defined(GL_FOG_HINT)
defconsti(env, "GL-FOG-HINT", (GLenum) GL_FOG_HINT, "GL_FOG_HINT");
#endif
#if defined(GL_FOG_INDEX)
defconsti(env, "GL-FOG-INDEX", (GLenum) GL_FOG_INDEX, "GL_FOG_INDEX");
#endif
#if defined(GL_FOG_MODE)
defconsti(env, "GL-FOG-MODE", (GLenum) GL_FOG_MODE, "GL_FOG_MODE");
#endif
#if defined(GL_FOG_OFFSET_SGIX)
defconsti(env, "GL-FOG-OFFSET-SGIX", (GLenum) GL_FOG_OFFSET_SGIX, "GL_FOG_OFFSET_SGIX");
#endif
#if defined(GL_FOG_OFFSET_VALUE_SGIX)
defconsti(env, "GL-FOG-OFFSET-VALUE-SGIX", (GLenum) GL_FOG_OFFSET_VALUE_SGIX, "GL_FOG_OFFSET_VALUE_SGIX");
#endif
#if defined(GL_FOG_START)
defconsti(env, "GL-FOG-START", (GLenum) GL_FOG_START, "GL_FOG_START");
#endif
#if defined(GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX)
defconsti(env, "GL-FRAGMENT-COLOR-MATERIAL-FACE-SGIX", (GLenum) GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX, "GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX");
#endif
#if defined(GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX)
defconsti(env, "GL-FRAGMENT-COLOR-MATERIAL-PARAMETER-SGIX", (GLenum) GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX, "GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX");
#endif
#if defined(GL_FRAGMENT_COLOR_MATERIAL_SGIX)
defconsti(env, "GL-FRAGMENT-COLOR-MATERIAL-SGIX", (GLenum) GL_FRAGMENT_COLOR_MATERIAL_SGIX, "GL_FRAGMENT_COLOR_MATERIAL_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT0_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT0-SGIX", (GLenum) GL_FRAGMENT_LIGHT0_SGIX, "GL_FRAGMENT_LIGHT0_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHTING_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHTING-SGIX", (GLenum) GL_FRAGMENT_LIGHTING_SGIX, "GL_FRAGMENT_LIGHTING_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT-MODEL-AMBIENT-SGIX", (GLenum) GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX, "GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT-MODEL-LOCAL-VIEWER-SGIX", (GLenum) GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX, "GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT-MODEL-NORMAL-INTERPOLATION-SGIX", (GLenum) GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX, "GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT-MODEL-TWO-SIDE-SGIX", (GLenum) GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX, "GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX");
#endif
#if defined(GL_FRAGMENT_SHADER_DERIVATIVE_HINT)
defconsti(env, "GL-FRAGMENT-SHADER-DERIVATIVE-HINT", (GLenum) GL_FRAGMENT_SHADER_DERIVATIVE_HINT, "GL_FRAGMENT_SHADER_DERIVATIVE_HINT");
#endif
#if defined(GL_FRAMEZOOM_FACTOR_SGIX)
defconsti(env, "GL-FRAMEZOOM-FACTOR-SGIX", (GLenum) GL_FRAMEZOOM_FACTOR_SGIX, "GL_FRAMEZOOM_FACTOR_SGIX");
#endif
#if defined(GL_FRAMEZOOM_SGIX)
defconsti(env, "GL-FRAMEZOOM-SGIX", (GLenum) GL_FRAMEZOOM_SGIX, "GL_FRAMEZOOM_SGIX");
#endif
#if defined(GL_FRONT_FACE)
defconsti(env, "GL-FRONT-FACE", (GLenum) GL_FRONT_FACE, "GL_FRONT_FACE");
#endif
#if defined(GL_GENERATE_MIPMAP_HINT_SGIS)
defconsti(env, "GL-GENERATE-MIPMAP-HINT-SGIS", (GLenum) GL_GENERATE_MIPMAP_HINT_SGIS, "GL_GENERATE_MIPMAP_HINT_SGIS");
#endif
#if defined(GL_GREEN_BIAS)
defconsti(env, "GL-GREEN-BIAS", (GLenum) GL_GREEN_BIAS, "GL_GREEN_BIAS");
#endif
#if defined(GL_GREEN_BITS)
defconsti(env, "GL-GREEN-BITS", (GLenum) GL_GREEN_BITS, "GL_GREEN_BITS");
#endif
#if defined(GL_GREEN_SCALE)
defconsti(env, "GL-GREEN-SCALE", (GLenum) GL_GREEN_SCALE, "GL_GREEN_SCALE");
#endif
#if defined(GL_HISTOGRAM_EXT)
defconsti(env, "GL-HISTOGRAM-EXT", (GLenum) GL_HISTOGRAM_EXT, "GL_HISTOGRAM_EXT");
#endif
#if defined(GL_IMPLEMENTATION_COLOR_READ_FORMAT)
defconsti(env, "GL-IMPLEMENTATION-COLOR-READ-FORMAT", (GLenum) GL_IMPLEMENTATION_COLOR_READ_FORMAT, "GL_IMPLEMENTATION_COLOR_READ_FORMAT");
#endif
#if defined(GL_IMPLEMENTATION_COLOR_READ_TYPE)
defconsti(env, "GL-IMPLEMENTATION-COLOR-READ-TYPE", (GLenum) GL_IMPLEMENTATION_COLOR_READ_TYPE, "GL_IMPLEMENTATION_COLOR_READ_TYPE");
#endif
#if defined(GL_INDEX_ARRAY)
defconsti(env, "GL-INDEX-ARRAY", (GLenum) GL_INDEX_ARRAY, "GL_INDEX_ARRAY");
#endif
#if defined(GL_INDEX_ARRAY_COUNT_EXT)
defconsti(env, "GL-INDEX-ARRAY-COUNT-EXT", (GLenum) GL_INDEX_ARRAY_COUNT_EXT, "GL_INDEX_ARRAY_COUNT_EXT");
#endif
#if defined(GL_INDEX_ARRAY_STRIDE)
defconsti(env, "GL-INDEX-ARRAY-STRIDE", (GLenum) GL_INDEX_ARRAY_STRIDE, "GL_INDEX_ARRAY_STRIDE");
#endif
#if defined(GL_INDEX_ARRAY_TYPE)
defconsti(env, "GL-INDEX-ARRAY-TYPE", (GLenum) GL_INDEX_ARRAY_TYPE, "GL_INDEX_ARRAY_TYPE");
#endif
#if defined(GL_INDEX_BITS)
defconsti(env, "GL-INDEX-BITS", (GLenum) GL_INDEX_BITS, "GL_INDEX_BITS");
#endif
#if defined(GL_INDEX_CLEAR_VALUE)
defconsti(env, "GL-INDEX-CLEAR-VALUE", (GLenum) GL_INDEX_CLEAR_VALUE, "GL_INDEX_CLEAR_VALUE");
#endif
#if defined(GL_INDEX_LOGIC_OP)
defconsti(env, "GL-INDEX-LOGIC-OP", (GLenum) GL_INDEX_LOGIC_OP, "GL_INDEX_LOGIC_OP");
#endif
#if defined(GL_INDEX_MODE)
defconsti(env, "GL-INDEX-MODE", (GLenum) GL_INDEX_MODE, "GL_INDEX_MODE");
#endif
#if defined(GL_INDEX_OFFSET)
defconsti(env, "GL-INDEX-OFFSET", (GLenum) GL_INDEX_OFFSET, "GL_INDEX_OFFSET");
#endif
#if defined(GL_INDEX_SHIFT)
defconsti(env, "GL-INDEX-SHIFT", (GLenum) GL_INDEX_SHIFT, "GL_INDEX_SHIFT");
#endif
#if defined(GL_INDEX_WRITEMASK)
defconsti(env, "GL-INDEX-WRITEMASK", (GLenum) GL_INDEX_WRITEMASK, "GL_INDEX_WRITEMASK");
#endif
#if defined(GL_INSTRUMENT_MEASUREMENTS_SGIX)
defconsti(env, "GL-INSTRUMENT-MEASUREMENTS-SGIX", (GLenum) GL_INSTRUMENT_MEASUREMENTS_SGIX, "GL_INSTRUMENT_MEASUREMENTS_SGIX");
#endif
#if defined(GL_INTERLACE_SGIX)
defconsti(env, "GL-INTERLACE-SGIX", (GLenum) GL_INTERLACE_SGIX, "GL_INTERLACE_SGIX");
#endif
#if defined(GL_IR_INSTRUMENT1_SGIX)
defconsti(env, "GL-IR-INSTRUMENT1-SGIX", (GLenum) GL_IR_INSTRUMENT1_SGIX, "GL_IR_INSTRUMENT1_SGIX");
#endif
#if defined(GL_LAYER_PROVOKING_VERTEX)
defconsti(env, "GL-LAYER-PROVOKING-VERTEX", (GLenum) GL_LAYER_PROVOKING_VERTEX, "GL_LAYER_PROVOKING_VERTEX");
#endif
#if defined(GL_LIGHT0)
defconsti(env, "GL-LIGHT0", (GLenum) GL_LIGHT0, "GL_LIGHT0");
#endif
#if defined(GL_LIGHT1)
defconsti(env, "GL-LIGHT1", (GLenum) GL_LIGHT1, "GL_LIGHT1");
#endif
#if defined(GL_LIGHT2)
defconsti(env, "GL-LIGHT2", (GLenum) GL_LIGHT2, "GL_LIGHT2");
#endif
#if defined(GL_LIGHT3)
defconsti(env, "GL-LIGHT3", (GLenum) GL_LIGHT3, "GL_LIGHT3");
#endif
#if defined(GL_LIGHT4)
defconsti(env, "GL-LIGHT4", (GLenum) GL_LIGHT4, "GL_LIGHT4");
#endif
#if defined(GL_LIGHT5)
defconsti(env, "GL-LIGHT5", (GLenum) GL_LIGHT5, "GL_LIGHT5");
#endif
#if defined(GL_LIGHT6)
defconsti(env, "GL-LIGHT6", (GLenum) GL_LIGHT6, "GL_LIGHT6");
#endif
#if defined(GL_LIGHT7)
defconsti(env, "GL-LIGHT7", (GLenum) GL_LIGHT7, "GL_LIGHT7");
#endif
#if defined(GL_LIGHTING)
defconsti(env, "GL-LIGHTING", (GLenum) GL_LIGHTING, "GL_LIGHTING");
#endif
#if defined(GL_LIGHT_ENV_MODE_SGIX)
defconsti(env, "GL-LIGHT-ENV-MODE-SGIX", (GLenum) GL_LIGHT_ENV_MODE_SGIX, "GL_LIGHT_ENV_MODE_SGIX");
#endif
#if defined(GL_LIGHT_MODEL_AMBIENT)
defconsti(env, "GL-LIGHT-MODEL-AMBIENT", (GLenum) GL_LIGHT_MODEL_AMBIENT, "GL_LIGHT_MODEL_AMBIENT");
#endif
#if defined(GL_LIGHT_MODEL_COLOR_CONTROL)
defconsti(env, "GL-LIGHT-MODEL-COLOR-CONTROL", (GLenum) GL_LIGHT_MODEL_COLOR_CONTROL, "GL_LIGHT_MODEL_COLOR_CONTROL");
#endif
#if defined(GL_LIGHT_MODEL_LOCAL_VIEWER)
defconsti(env, "GL-LIGHT-MODEL-LOCAL-VIEWER", (GLenum) GL_LIGHT_MODEL_LOCAL_VIEWER, "GL_LIGHT_MODEL_LOCAL_VIEWER");
#endif
#if defined(GL_LIGHT_MODEL_TWO_SIDE)
defconsti(env, "GL-LIGHT-MODEL-TWO-SIDE", (GLenum) GL_LIGHT_MODEL_TWO_SIDE, "GL_LIGHT_MODEL_TWO_SIDE");
#endif
#if defined(GL_LINE_SMOOTH)
defconsti(env, "GL-LINE-SMOOTH", (GLenum) GL_LINE_SMOOTH, "GL_LINE_SMOOTH");
#endif
#if defined(GL_LINE_SMOOTH_HINT)
defconsti(env, "GL-LINE-SMOOTH-HINT", (GLenum) GL_LINE_SMOOTH_HINT, "GL_LINE_SMOOTH_HINT");
#endif
#if defined(GL_LINE_STIPPLE)
defconsti(env, "GL-LINE-STIPPLE", (GLenum) GL_LINE_STIPPLE, "GL_LINE_STIPPLE");
#endif
#if defined(GL_LINE_STIPPLE_PATTERN)
defconsti(env, "GL-LINE-STIPPLE-PATTERN", (GLenum) GL_LINE_STIPPLE_PATTERN, "GL_LINE_STIPPLE_PATTERN");
#endif
#if defined(GL_LINE_STIPPLE_REPEAT)
defconsti(env, "GL-LINE-STIPPLE-REPEAT", (GLenum) GL_LINE_STIPPLE_REPEAT, "GL_LINE_STIPPLE_REPEAT");
#endif
#if defined(GL_LINE_WIDTH)
defconsti(env, "GL-LINE-WIDTH", (GLenum) GL_LINE_WIDTH, "GL_LINE_WIDTH");
#endif
#if defined(GL_LINE_WIDTH_GRANULARITY)
defconsti(env, "GL-LINE-WIDTH-GRANULARITY", (GLenum) GL_LINE_WIDTH_GRANULARITY, "GL_LINE_WIDTH_GRANULARITY");
#endif
#if defined(GL_LINE_WIDTH_RANGE)
defconsti(env, "GL-LINE-WIDTH-RANGE", (GLenum) GL_LINE_WIDTH_RANGE, "GL_LINE_WIDTH_RANGE");
#endif
#if defined(GL_LIST_BASE)
defconsti(env, "GL-LIST-BASE", (GLenum) GL_LIST_BASE, "GL_LIST_BASE");
#endif
#if defined(GL_LIST_INDEX)
defconsti(env, "GL-LIST-INDEX", (GLenum) GL_LIST_INDEX, "GL_LIST_INDEX");
#endif
#if defined(GL_LIST_MODE)
defconsti(env, "GL-LIST-MODE", (GLenum) GL_LIST_MODE, "GL_LIST_MODE");
#endif
#if defined(GL_LOGIC_OP)
defconsti(env, "GL-LOGIC-OP", (GLenum) GL_LOGIC_OP, "GL_LOGIC_OP");
#endif
#if defined(GL_LOGIC_OP_MODE)
defconsti(env, "GL-LOGIC-OP-MODE", (GLenum) GL_LOGIC_OP_MODE, "GL_LOGIC_OP_MODE");
#endif
#if defined(GL_MAJOR_VERSION)
defconsti(env, "GL-MAJOR-VERSION", (GLenum) GL_MAJOR_VERSION, "GL_MAJOR_VERSION");
#endif
#if defined(GL_MAP1_COLOR_4)
defconsti(env, "GL-MAP1-COLOR-4", (GLenum) GL_MAP1_COLOR_4, "GL_MAP1_COLOR_4");
#endif
#if defined(GL_MAP1_GRID_DOMAIN)
defconsti(env, "GL-MAP1-GRID-DOMAIN", (GLenum) GL_MAP1_GRID_DOMAIN, "GL_MAP1_GRID_DOMAIN");
#endif
#if defined(GL_MAP1_GRID_SEGMENTS)
defconsti(env, "GL-MAP1-GRID-SEGMENTS", (GLenum) GL_MAP1_GRID_SEGMENTS, "GL_MAP1_GRID_SEGMENTS");
#endif
#if defined(GL_MAP1_INDEX)
defconsti(env, "GL-MAP1-INDEX", (GLenum) GL_MAP1_INDEX, "GL_MAP1_INDEX");
#endif
#if defined(GL_MAP1_NORMAL)
defconsti(env, "GL-MAP1-NORMAL", (GLenum) GL_MAP1_NORMAL, "GL_MAP1_NORMAL");
#endif
#if defined(GL_MAP1_TEXTURE_COORD_1)
defconsti(env, "GL-MAP1-TEXTURE-COORD-1", (GLenum) GL_MAP1_TEXTURE_COORD_1, "GL_MAP1_TEXTURE_COORD_1");
#endif
#if defined(GL_MAP1_TEXTURE_COORD_2)
defconsti(env, "GL-MAP1-TEXTURE-COORD-2", (GLenum) GL_MAP1_TEXTURE_COORD_2, "GL_MAP1_TEXTURE_COORD_2");
#endif
#if defined(GL_MAP1_TEXTURE_COORD_3)
defconsti(env, "GL-MAP1-TEXTURE-COORD-3", (GLenum) GL_MAP1_TEXTURE_COORD_3, "GL_MAP1_TEXTURE_COORD_3");
#endif
#if defined(GL_MAP1_TEXTURE_COORD_4)
defconsti(env, "GL-MAP1-TEXTURE-COORD-4", (GLenum) GL_MAP1_TEXTURE_COORD_4, "GL_MAP1_TEXTURE_COORD_4");
#endif
#if defined(GL_MAP1_VERTEX_3)
defconsti(env, "GL-MAP1-VERTEX-3", (GLenum) GL_MAP1_VERTEX_3, "GL_MAP1_VERTEX_3");
#endif
#if defined(GL_MAP1_VERTEX_4)
defconsti(env, "GL-MAP1-VERTEX-4", (GLenum) GL_MAP1_VERTEX_4, "GL_MAP1_VERTEX_4");
#endif
#if defined(GL_MAP2_COLOR_4)
defconsti(env, "GL-MAP2-COLOR-4", (GLenum) GL_MAP2_COLOR_4, "GL_MAP2_COLOR_4");
#endif
#if defined(GL_MAP2_GRID_DOMAIN)
defconsti(env, "GL-MAP2-GRID-DOMAIN", (GLenum) GL_MAP2_GRID_DOMAIN, "GL_MAP2_GRID_DOMAIN");
#endif
#if defined(GL_MAP2_GRID_SEGMENTS)
defconsti(env, "GL-MAP2-GRID-SEGMENTS", (GLenum) GL_MAP2_GRID_SEGMENTS, "GL_MAP2_GRID_SEGMENTS");
#endif
#if defined(GL_MAP2_INDEX)
defconsti(env, "GL-MAP2-INDEX", (GLenum) GL_MAP2_INDEX, "GL_MAP2_INDEX");
#endif
#if defined(GL_MAP2_NORMAL)
defconsti(env, "GL-MAP2-NORMAL", (GLenum) GL_MAP2_NORMAL, "GL_MAP2_NORMAL");
#endif
#if defined(GL_MAP2_TEXTURE_COORD_1)
defconsti(env, "GL-MAP2-TEXTURE-COORD-1", (GLenum) GL_MAP2_TEXTURE_COORD_1, "GL_MAP2_TEXTURE_COORD_1");
#endif
#if defined(GL_MAP2_TEXTURE_COORD_2)
defconsti(env, "GL-MAP2-TEXTURE-COORD-2", (GLenum) GL_MAP2_TEXTURE_COORD_2, "GL_MAP2_TEXTURE_COORD_2");
#endif
#if defined(GL_MAP2_TEXTURE_COORD_3)
defconsti(env, "GL-MAP2-TEXTURE-COORD-3", (GLenum) GL_MAP2_TEXTURE_COORD_3, "GL_MAP2_TEXTURE_COORD_3");
#endif
#if defined(GL_MAP2_TEXTURE_COORD_4)
defconsti(env, "GL-MAP2-TEXTURE-COORD-4", (GLenum) GL_MAP2_TEXTURE_COORD_4, "GL_MAP2_TEXTURE_COORD_4");
#endif
#if defined(GL_MAP2_VERTEX_3)
defconsti(env, "GL-MAP2-VERTEX-3", (GLenum) GL_MAP2_VERTEX_3, "GL_MAP2_VERTEX_3");
#endif
#if defined(GL_MAP2_VERTEX_4)
defconsti(env, "GL-MAP2-VERTEX-4", (GLenum) GL_MAP2_VERTEX_4, "GL_MAP2_VERTEX_4");
#endif
#if defined(GL_MAP_COLOR)
defconsti(env, "GL-MAP-COLOR", (GLenum) GL_MAP_COLOR, "GL_MAP_COLOR");
#endif
#if defined(GL_MAP_STENCIL)
defconsti(env, "GL-MAP-STENCIL", (GLenum) GL_MAP_STENCIL, "GL_MAP_STENCIL");
#endif
#if defined(GL_MATRIX_MODE)
defconsti(env, "GL-MATRIX-MODE", (GLenum) GL_MATRIX_MODE, "GL_MATRIX_MODE");
#endif
#if defined(GL_MAX_3D_TEXTURE_SIZE)
defconsti(env, "GL-MAX-3D-TEXTURE-SIZE", (GLenum) GL_MAX_3D_TEXTURE_SIZE, "GL_MAX_3D_TEXTURE_SIZE");
#endif
#if defined(GL_MAX_3D_TEXTURE_SIZE_EXT)
defconsti(env, "GL-MAX-3D-TEXTURE-SIZE-EXT", (GLenum) GL_MAX_3D_TEXTURE_SIZE_EXT, "GL_MAX_3D_TEXTURE_SIZE_EXT");
#endif
#if defined(GL_MAX_4D_TEXTURE_SIZE_SGIS)
defconsti(env, "GL-MAX-4D-TEXTURE-SIZE-SGIS", (GLenum) GL_MAX_4D_TEXTURE_SIZE_SGIS, "GL_MAX_4D_TEXTURE_SIZE_SGIS");
#endif
#if defined(GL_MAX_ACTIVE_LIGHTS_SGIX)
defconsti(env, "GL-MAX-ACTIVE-LIGHTS-SGIX", (GLenum) GL_MAX_ACTIVE_LIGHTS_SGIX, "GL_MAX_ACTIVE_LIGHTS_SGIX");
#endif
#if defined(GL_MAX_ARRAY_TEXTURE_LAYERS)
defconsti(env, "GL-MAX-ARRAY-TEXTURE-LAYERS", (GLenum) GL_MAX_ARRAY_TEXTURE_LAYERS, "GL_MAX_ARRAY_TEXTURE_LAYERS");
#endif
#if defined(GL_MAX_ASYNC_DRAW_PIXELS_SGIX)
defconsti(env, "GL-MAX-ASYNC-DRAW-PIXELS-SGIX", (GLenum) GL_MAX_ASYNC_DRAW_PIXELS_SGIX, "GL_MAX_ASYNC_DRAW_PIXELS_SGIX");
#endif
#if defined(GL_MAX_ASYNC_HISTOGRAM_SGIX)
defconsti(env, "GL-MAX-ASYNC-HISTOGRAM-SGIX", (GLenum) GL_MAX_ASYNC_HISTOGRAM_SGIX, "GL_MAX_ASYNC_HISTOGRAM_SGIX");
#endif
#if defined(GL_MAX_ASYNC_READ_PIXELS_SGIX)
defconsti(env, "GL-MAX-ASYNC-READ-PIXELS-SGIX", (GLenum) GL_MAX_ASYNC_READ_PIXELS_SGIX, "GL_MAX_ASYNC_READ_PIXELS_SGIX");
#endif
#if defined(GL_MAX_ASYNC_TEX_IMAGE_SGIX)
defconsti(env, "GL-MAX-ASYNC-TEX-IMAGE-SGIX", (GLenum) GL_MAX_ASYNC_TEX_IMAGE_SGIX, "GL_MAX_ASYNC_TEX_IMAGE_SGIX");
#endif
#if defined(GL_MAX_ATTRIB_STACK_DEPTH)
defconsti(env, "GL-MAX-ATTRIB-STACK-DEPTH", (GLenum) GL_MAX_ATTRIB_STACK_DEPTH, "GL_MAX_ATTRIB_STACK_DEPTH");
#endif
#if defined(GL_MAX_CLIENT_ATTRIB_STACK_DEPTH)
defconsti(env, "GL-MAX-CLIENT-ATTRIB-STACK-DEPTH", (GLenum) GL_MAX_CLIENT_ATTRIB_STACK_DEPTH, "GL_MAX_CLIENT_ATTRIB_STACK_DEPTH");
#endif
#if defined(GL_MAX_CLIPMAP_DEPTH_SGIX)
defconsti(env, "GL-MAX-CLIPMAP-DEPTH-SGIX", (GLenum) GL_MAX_CLIPMAP_DEPTH_SGIX, "GL_MAX_CLIPMAP_DEPTH_SGIX");
#endif
#if defined(GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX)
defconsti(env, "GL-MAX-CLIPMAP-VIRTUAL-DEPTH-SGIX", (GLenum) GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX, "GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX");
#endif
#if defined(GL_MAX_CLIP_DISTANCES)
defconsti(env, "GL-MAX-CLIP-DISTANCES", (GLenum) GL_MAX_CLIP_DISTANCES, "GL_MAX_CLIP_DISTANCES");
#endif
#if defined(GL_MAX_CLIP_PLANES)
defconsti(env, "GL-MAX-CLIP-PLANES", (GLenum) GL_MAX_CLIP_PLANES, "GL_MAX_CLIP_PLANES");
#endif
#if defined(GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI)
defconsti(env, "GL-MAX-COLOR-MATRIX-STACK-DEPTH-SGI", (GLenum) GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI, "GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI");
#endif
#if defined(GL_MAX_COLOR_TEXTURE_SAMPLES)
defconsti(env, "GL-MAX-COLOR-TEXTURE-SAMPLES", (GLenum) GL_MAX_COLOR_TEXTURE_SAMPLES, "GL_MAX_COLOR_TEXTURE_SAMPLES");
#endif
#if defined(GL_MAX_COMBINED_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-COMBINED-ATOMIC-COUNTERS", (GLenum) GL_MAX_COMBINED_ATOMIC_COUNTERS, "GL_MAX_COMBINED_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-COMPUTE-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-FRAGMENT-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-GEOMETRY-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-COMBINED-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS, "GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-COMBINED-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS, "GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_COMBINED_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-COMBINED-UNIFORM-BLOCKS", (GLenum) GL_MAX_COMBINED_UNIFORM_BLOCKS, "GL_MAX_COMBINED_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-VERTEX-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_COMPUTE_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-COMPUTE-ATOMIC-COUNTERS", (GLenum) GL_MAX_COMPUTE_ATOMIC_COUNTERS, "GL_MAX_COMPUTE_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-COMPUTE-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS, "GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-COMPUTE-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS, "GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-COMPUTE-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS, "GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_COMPUTE_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-COMPUTE-UNIFORM-BLOCKS", (GLenum) GL_MAX_COMPUTE_UNIFORM_BLOCKS, "GL_MAX_COMPUTE_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_COMPUTE_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMPUTE-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMPUTE_UNIFORM_COMPONENTS, "GL_MAX_COMPUTE_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_COMPUTE_WORK_GROUP_COUNT)
defconsti(env, "GL-MAX-COMPUTE-WORK-GROUP-COUNT", (GLenum) GL_MAX_COMPUTE_WORK_GROUP_COUNT, "GL_MAX_COMPUTE_WORK_GROUP_COUNT");
#endif
#if defined(GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS)
defconsti(env, "GL-MAX-COMPUTE-WORK-GROUP-INVOCATIONS", (GLenum) GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS, "GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS");
#endif
#if defined(GL_MAX_COMPUTE_WORK_GROUP_SIZE)
defconsti(env, "GL-MAX-COMPUTE-WORK-GROUP-SIZE", (GLenum) GL_MAX_COMPUTE_WORK_GROUP_SIZE, "GL_MAX_COMPUTE_WORK_GROUP_SIZE");
#endif
#if defined(GL_MAX_CUBE_MAP_TEXTURE_SIZE)
defconsti(env, "GL-MAX-CUBE-MAP-TEXTURE-SIZE", (GLenum) GL_MAX_CUBE_MAP_TEXTURE_SIZE, "GL_MAX_CUBE_MAP_TEXTURE_SIZE");
#endif
#if defined(GL_MAX_DEBUG_GROUP_STACK_DEPTH)
defconsti(env, "GL-MAX-DEBUG-GROUP-STACK-DEPTH", (GLenum) GL_MAX_DEBUG_GROUP_STACK_DEPTH, "GL_MAX_DEBUG_GROUP_STACK_DEPTH");
#endif
#if defined(GL_MAX_DEPTH_TEXTURE_SAMPLES)
defconsti(env, "GL-MAX-DEPTH-TEXTURE-SAMPLES", (GLenum) GL_MAX_DEPTH_TEXTURE_SAMPLES, "GL_MAX_DEPTH_TEXTURE_SAMPLES");
#endif
#if defined(GL_MAX_DRAW_BUFFERS)
defconsti(env, "GL-MAX-DRAW-BUFFERS", (GLenum) GL_MAX_DRAW_BUFFERS, "GL_MAX_DRAW_BUFFERS");
#endif
#if defined(GL_MAX_DUAL_SOURCE_DRAW_BUFFERS)
defconsti(env, "GL-MAX-DUAL-SOURCE-DRAW-BUFFERS", (GLenum) GL_MAX_DUAL_SOURCE_DRAW_BUFFERS, "GL_MAX_DUAL_SOURCE_DRAW_BUFFERS");
#endif
#if defined(GL_MAX_ELEMENTS_INDICES)
defconsti(env, "GL-MAX-ELEMENTS-INDICES", (GLenum) GL_MAX_ELEMENTS_INDICES, "GL_MAX_ELEMENTS_INDICES");
#endif
#if defined(GL_MAX_ELEMENTS_VERTICES)
defconsti(env, "GL-MAX-ELEMENTS-VERTICES", (GLenum) GL_MAX_ELEMENTS_VERTICES, "GL_MAX_ELEMENTS_VERTICES");
#endif
#if defined(GL_MAX_ELEMENT_INDEX)
defconsti(env, "GL-MAX-ELEMENT-INDEX", (GLenum) GL_MAX_ELEMENT_INDEX, "GL_MAX_ELEMENT_INDEX");
#endif
#if defined(GL_MAX_EVAL_ORDER)
defconsti(env, "GL-MAX-EVAL-ORDER", (GLenum) GL_MAX_EVAL_ORDER, "GL_MAX_EVAL_ORDER");
#endif
#if defined(GL_MAX_FOG_FUNC_POINTS_SGIS)
defconsti(env, "GL-MAX-FOG-FUNC-POINTS-SGIS", (GLenum) GL_MAX_FOG_FUNC_POINTS_SGIS, "GL_MAX_FOG_FUNC_POINTS_SGIS");
#endif
#if defined(GL_MAX_FRAGMENT_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-FRAGMENT-ATOMIC-COUNTERS", (GLenum) GL_MAX_FRAGMENT_ATOMIC_COUNTERS, "GL_MAX_FRAGMENT_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_FRAGMENT_INPUT_COMPONENTS)
defconsti(env, "GL-MAX-FRAGMENT-INPUT-COMPONENTS", (GLenum) GL_MAX_FRAGMENT_INPUT_COMPONENTS, "GL_MAX_FRAGMENT_INPUT_COMPONENTS");
#endif
#if defined(GL_MAX_FRAGMENT_LIGHTS_SGIX)
defconsti(env, "GL-MAX-FRAGMENT-LIGHTS-SGIX", (GLenum) GL_MAX_FRAGMENT_LIGHTS_SGIX, "GL_MAX_FRAGMENT_LIGHTS_SGIX");
#endif
#if defined(GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-FRAGMENT-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS, "GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_FRAGMENT_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-FRAGMENT-UNIFORM-BLOCKS", (GLenum) GL_MAX_FRAGMENT_UNIFORM_BLOCKS, "GL_MAX_FRAGMENT_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_FRAGMENT_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-FRAGMENT-UNIFORM-COMPONENTS", (GLenum) GL_MAX_FRAGMENT_UNIFORM_COMPONENTS, "GL_MAX_FRAGMENT_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_FRAGMENT_UNIFORM_VECTORS)
defconsti(env, "GL-MAX-FRAGMENT-UNIFORM-VECTORS", (GLenum) GL_MAX_FRAGMENT_UNIFORM_VECTORS, "GL_MAX_FRAGMENT_UNIFORM_VECTORS");
#endif
#if defined(GL_MAX_FRAMEBUFFER_HEIGHT)
defconsti(env, "GL-MAX-FRAMEBUFFER-HEIGHT", (GLenum) GL_MAX_FRAMEBUFFER_HEIGHT, "GL_MAX_FRAMEBUFFER_HEIGHT");
#endif
#if defined(GL_MAX_FRAMEBUFFER_LAYERS)
defconsti(env, "GL-MAX-FRAMEBUFFER-LAYERS", (GLenum) GL_MAX_FRAMEBUFFER_LAYERS, "GL_MAX_FRAMEBUFFER_LAYERS");
#endif
#if defined(GL_MAX_FRAMEBUFFER_SAMPLES)
defconsti(env, "GL-MAX-FRAMEBUFFER-SAMPLES", (GLenum) GL_MAX_FRAMEBUFFER_SAMPLES, "GL_MAX_FRAMEBUFFER_SAMPLES");
#endif
#if defined(GL_MAX_FRAMEBUFFER_WIDTH)
defconsti(env, "GL-MAX-FRAMEBUFFER-WIDTH", (GLenum) GL_MAX_FRAMEBUFFER_WIDTH, "GL_MAX_FRAMEBUFFER_WIDTH");
#endif
#if defined(GL_MAX_FRAMEZOOM_FACTOR_SGIX)
defconsti(env, "GL-MAX-FRAMEZOOM-FACTOR-SGIX", (GLenum) GL_MAX_FRAMEZOOM_FACTOR_SGIX, "GL_MAX_FRAMEZOOM_FACTOR_SGIX");
#endif
#if defined(GL_MAX_GEOMETRY_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-GEOMETRY-ATOMIC-COUNTERS", (GLenum) GL_MAX_GEOMETRY_ATOMIC_COUNTERS, "GL_MAX_GEOMETRY_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_GEOMETRY_INPUT_COMPONENTS)
defconsti(env, "GL-MAX-GEOMETRY-INPUT-COMPONENTS", (GLenum) GL_MAX_GEOMETRY_INPUT_COMPONENTS, "GL_MAX_GEOMETRY_INPUT_COMPONENTS");
#endif
#if defined(GL_MAX_GEOMETRY_OUTPUT_COMPONENTS)
defconsti(env, "GL-MAX-GEOMETRY-OUTPUT-COMPONENTS", (GLenum) GL_MAX_GEOMETRY_OUTPUT_COMPONENTS, "GL_MAX_GEOMETRY_OUTPUT_COMPONENTS");
#endif
#if defined(GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-GEOMETRY-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS, "GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-GEOMETRY-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS, "GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_GEOMETRY_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-GEOMETRY-UNIFORM-BLOCKS", (GLenum) GL_MAX_GEOMETRY_UNIFORM_BLOCKS, "GL_MAX_GEOMETRY_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_GEOMETRY_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-GEOMETRY-UNIFORM-COMPONENTS", (GLenum) GL_MAX_GEOMETRY_UNIFORM_COMPONENTS, "GL_MAX_GEOMETRY_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_INTEGER_SAMPLES)
defconsti(env, "GL-MAX-INTEGER-SAMPLES", (GLenum) GL_MAX_INTEGER_SAMPLES, "GL_MAX_INTEGER_SAMPLES");
#endif
#if defined(GL_MAX_LABEL_LENGTH)
defconsti(env, "GL-MAX-LABEL-LENGTH", (GLenum) GL_MAX_LABEL_LENGTH, "GL_MAX_LABEL_LENGTH");
#endif
#if defined(GL_MAX_LIGHTS)
defconsti(env, "GL-MAX-LIGHTS", (GLenum) GL_MAX_LIGHTS, "GL_MAX_LIGHTS");
#endif
#if defined(GL_MAX_LIST_NESTING)
defconsti(env, "GL-MAX-LIST-NESTING", (GLenum) GL_MAX_LIST_NESTING, "GL_MAX_LIST_NESTING");
#endif
#if defined(GL_MAX_MODELVIEW_STACK_DEPTH)
defconsti(env, "GL-MAX-MODELVIEW-STACK-DEPTH", (GLenum) GL_MAX_MODELVIEW_STACK_DEPTH, "GL_MAX_MODELVIEW_STACK_DEPTH");
#endif
#if defined(GL_MAX_NAME_STACK_DEPTH)
defconsti(env, "GL-MAX-NAME-STACK-DEPTH", (GLenum) GL_MAX_NAME_STACK_DEPTH, "GL_MAX_NAME_STACK_DEPTH");
#endif
#if defined(GL_MAX_PIXEL_MAP_TABLE)
defconsti(env, "GL-MAX-PIXEL-MAP-TABLE", (GLenum) GL_MAX_PIXEL_MAP_TABLE, "GL_MAX_PIXEL_MAP_TABLE");
#endif
#if defined(GL_MAX_PROGRAM_TEXEL_OFFSET)
defconsti(env, "GL-MAX-PROGRAM-TEXEL-OFFSET", (GLenum) GL_MAX_PROGRAM_TEXEL_OFFSET, "GL_MAX_PROGRAM_TEXEL_OFFSET");
#endif
#if defined(GL_MAX_PROJECTION_STACK_DEPTH)
defconsti(env, "GL-MAX-PROJECTION-STACK-DEPTH", (GLenum) GL_MAX_PROJECTION_STACK_DEPTH, "GL_MAX_PROJECTION_STACK_DEPTH");
#endif
#if defined(GL_MAX_RECTANGLE_TEXTURE_SIZE)
defconsti(env, "GL-MAX-RECTANGLE-TEXTURE-SIZE", (GLenum) GL_MAX_RECTANGLE_TEXTURE_SIZE, "GL_MAX_RECTANGLE_TEXTURE_SIZE");
#endif
#if defined(GL_MAX_RENDERBUFFER_SIZE)
defconsti(env, "GL-MAX-RENDERBUFFER-SIZE", (GLenum) GL_MAX_RENDERBUFFER_SIZE, "GL_MAX_RENDERBUFFER_SIZE");
#endif
#if defined(GL_MAX_SAMPLE_MASK_WORDS)
defconsti(env, "GL-MAX-SAMPLE-MASK-WORDS", (GLenum) GL_MAX_SAMPLE_MASK_WORDS, "GL_MAX_SAMPLE_MASK_WORDS");
#endif
#if defined(GL_MAX_SERVER_WAIT_TIMEOUT)
defconsti(env, "GL-MAX-SERVER-WAIT-TIMEOUT", (GLenum) GL_MAX_SERVER_WAIT_TIMEOUT, "GL_MAX_SERVER_WAIT_TIMEOUT");
#endif
#if defined(GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS)
defconsti(env, "GL-MAX-SHADER-STORAGE-BUFFER-BINDINGS", (GLenum) GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS, "GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS");
#endif
#if defined(GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-TESS-CONTROL-ATOMIC-COUNTERS", (GLenum) GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS, "GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-TESS-CONTROL-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS, "GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-TESS-EVALUATION-ATOMIC-COUNTERS", (GLenum) GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS, "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-TESS-EVALUATION-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS, "GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_TEXTURE_BUFFER_SIZE)
defconsti(env, "GL-MAX-TEXTURE-BUFFER-SIZE", (GLenum) GL_MAX_TEXTURE_BUFFER_SIZE, "GL_MAX_TEXTURE_BUFFER_SIZE");
#endif
#if defined(GL_MAX_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_TEXTURE_IMAGE_UNITS, "GL_MAX_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_TEXTURE_LOD_BIAS)
defconsti(env, "GL-MAX-TEXTURE-LOD-BIAS", (GLenum) GL_MAX_TEXTURE_LOD_BIAS, "GL_MAX_TEXTURE_LOD_BIAS");
#endif
#if defined(GL_MAX_TEXTURE_SIZE)
defconsti(env, "GL-MAX-TEXTURE-SIZE", (GLenum) GL_MAX_TEXTURE_SIZE, "GL_MAX_TEXTURE_SIZE");
#endif
#if defined(GL_MAX_TEXTURE_STACK_DEPTH)
defconsti(env, "GL-MAX-TEXTURE-STACK-DEPTH", (GLenum) GL_MAX_TEXTURE_STACK_DEPTH, "GL_MAX_TEXTURE_STACK_DEPTH");
#endif
#if defined(GL_MAX_UNIFORM_BLOCK_SIZE)
defconsti(env, "GL-MAX-UNIFORM-BLOCK-SIZE", (GLenum) GL_MAX_UNIFORM_BLOCK_SIZE, "GL_MAX_UNIFORM_BLOCK_SIZE");
#endif
#if defined(GL_MAX_UNIFORM_BUFFER_BINDINGS)
defconsti(env, "GL-MAX-UNIFORM-BUFFER-BINDINGS", (GLenum) GL_MAX_UNIFORM_BUFFER_BINDINGS, "GL_MAX_UNIFORM_BUFFER_BINDINGS");
#endif
#if defined(GL_MAX_UNIFORM_LOCATIONS)
defconsti(env, "GL-MAX-UNIFORM-LOCATIONS", (GLenum) GL_MAX_UNIFORM_LOCATIONS, "GL_MAX_UNIFORM_LOCATIONS");
#endif
#if defined(GL_MAX_VARYING_COMPONENTS)
defconsti(env, "GL-MAX-VARYING-COMPONENTS", (GLenum) GL_MAX_VARYING_COMPONENTS, "GL_MAX_VARYING_COMPONENTS");
#endif
#if defined(GL_MAX_VARYING_FLOATS)
defconsti(env, "GL-MAX-VARYING-FLOATS", (GLenum) GL_MAX_VARYING_FLOATS, "GL_MAX_VARYING_FLOATS");
#endif
#if defined(GL_MAX_VARYING_VECTORS)
defconsti(env, "GL-MAX-VARYING-VECTORS", (GLenum) GL_MAX_VARYING_VECTORS, "GL_MAX_VARYING_VECTORS");
#endif
#if defined(GL_MAX_VERTEX_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-VERTEX-ATOMIC-COUNTERS", (GLenum) GL_MAX_VERTEX_ATOMIC_COUNTERS, "GL_MAX_VERTEX_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_VERTEX_ATTRIBS)
defconsti(env, "GL-MAX-VERTEX-ATTRIBS", (GLenum) GL_MAX_VERTEX_ATTRIBS, "GL_MAX_VERTEX_ATTRIBS");
#endif
#if defined(GL_MAX_VERTEX_ATTRIB_BINDINGS)
defconsti(env, "GL-MAX-VERTEX-ATTRIB-BINDINGS", (GLenum) GL_MAX_VERTEX_ATTRIB_BINDINGS, "GL_MAX_VERTEX_ATTRIB_BINDINGS");
#endif
#if defined(GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET)
defconsti(env, "GL-MAX-VERTEX-ATTRIB-RELATIVE-OFFSET", (GLenum) GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET, "GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET");
#endif
#if defined(GL_MAX_VERTEX_OUTPUT_COMPONENTS)
defconsti(env, "GL-MAX-VERTEX-OUTPUT-COMPONENTS", (GLenum) GL_MAX_VERTEX_OUTPUT_COMPONENTS, "GL_MAX_VERTEX_OUTPUT_COMPONENTS");
#endif
#if defined(GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-VERTEX-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS, "GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-VERTEX-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS, "GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_VERTEX_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-VERTEX-UNIFORM-BLOCKS", (GLenum) GL_MAX_VERTEX_UNIFORM_BLOCKS, "GL_MAX_VERTEX_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_VERTEX_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-VERTEX-UNIFORM-COMPONENTS", (GLenum) GL_MAX_VERTEX_UNIFORM_COMPONENTS, "GL_MAX_VERTEX_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_VERTEX_UNIFORM_VECTORS)
defconsti(env, "GL-MAX-VERTEX-UNIFORM-VECTORS", (GLenum) GL_MAX_VERTEX_UNIFORM_VECTORS, "GL_MAX_VERTEX_UNIFORM_VECTORS");
#endif
#if defined(GL_MAX_VIEWPORTS)
defconsti(env, "GL-MAX-VIEWPORTS", (GLenum) GL_MAX_VIEWPORTS, "GL_MAX_VIEWPORTS");
#endif
#if defined(GL_MAX_VIEWPORT_DIMS)
defconsti(env, "GL-MAX-VIEWPORT-DIMS", (GLenum) GL_MAX_VIEWPORT_DIMS, "GL_MAX_VIEWPORT_DIMS");
#endif
#if defined(GL_MINMAX_EXT)
defconsti(env, "GL-MINMAX-EXT", (GLenum) GL_MINMAX_EXT, "GL_MINMAX_EXT");
#endif
#if defined(GL_MINOR_VERSION)
defconsti(env, "GL-MINOR-VERSION", (GLenum) GL_MINOR_VERSION, "GL_MINOR_VERSION");
#endif
#if defined(GL_MIN_MAP_BUFFER_ALIGNMENT)
defconsti(env, "GL-MIN-MAP-BUFFER-ALIGNMENT", (GLenum) GL_MIN_MAP_BUFFER_ALIGNMENT, "GL_MIN_MAP_BUFFER_ALIGNMENT");
#endif
#if defined(GL_MIN_PROGRAM_TEXEL_OFFSET)
defconsti(env, "GL-MIN-PROGRAM-TEXEL-OFFSET", (GLenum) GL_MIN_PROGRAM_TEXEL_OFFSET, "GL_MIN_PROGRAM_TEXEL_OFFSET");
#endif
#if defined(GL_MODELVIEW0_MATRIX_EXT)
defconsti(env, "GL-MODELVIEW0-MATRIX-EXT", (GLenum) GL_MODELVIEW0_MATRIX_EXT, "GL_MODELVIEW0_MATRIX_EXT");
#endif
#if defined(GL_MODELVIEW0_STACK_DEPTH_EXT)
defconsti(env, "GL-MODELVIEW0-STACK-DEPTH-EXT", (GLenum) GL_MODELVIEW0_STACK_DEPTH_EXT, "GL_MODELVIEW0_STACK_DEPTH_EXT");
#endif
#if defined(GL_MODELVIEW_MATRIX)
defconsti(env, "GL-MODELVIEW-MATRIX", (GLenum) GL_MODELVIEW_MATRIX, "GL_MODELVIEW_MATRIX");
#endif
#if defined(GL_MODELVIEW_STACK_DEPTH)
defconsti(env, "GL-MODELVIEW-STACK-DEPTH", (GLenum) GL_MODELVIEW_STACK_DEPTH, "GL_MODELVIEW_STACK_DEPTH");
#endif
#if defined(GL_MULTISAMPLE_SGIS)
defconsti(env, "GL-MULTISAMPLE-SGIS", (GLenum) GL_MULTISAMPLE_SGIS, "GL_MULTISAMPLE_SGIS");
#endif
#if defined(GL_NAME_STACK_DEPTH)
defconsti(env, "GL-NAME-STACK-DEPTH", (GLenum) GL_NAME_STACK_DEPTH, "GL_NAME_STACK_DEPTH");
#endif
#if defined(GL_NORMALIZE)
defconsti(env, "GL-NORMALIZE", (GLenum) GL_NORMALIZE, "GL_NORMALIZE");
#endif
#if defined(GL_NORMAL_ARRAY)
defconsti(env, "GL-NORMAL-ARRAY", (GLenum) GL_NORMAL_ARRAY, "GL_NORMAL_ARRAY");
#endif
#if defined(GL_NORMAL_ARRAY_COUNT_EXT)
defconsti(env, "GL-NORMAL-ARRAY-COUNT-EXT", (GLenum) GL_NORMAL_ARRAY_COUNT_EXT, "GL_NORMAL_ARRAY_COUNT_EXT");
#endif
#if defined(GL_NORMAL_ARRAY_STRIDE)
defconsti(env, "GL-NORMAL-ARRAY-STRIDE", (GLenum) GL_NORMAL_ARRAY_STRIDE, "GL_NORMAL_ARRAY_STRIDE");
#endif
#if defined(GL_NORMAL_ARRAY_TYPE)
defconsti(env, "GL-NORMAL-ARRAY-TYPE", (GLenum) GL_NORMAL_ARRAY_TYPE, "GL_NORMAL_ARRAY_TYPE");
#endif
#if defined(GL_NUM_COMPRESSED_TEXTURE_FORMATS)
defconsti(env, "GL-NUM-COMPRESSED-TEXTURE-FORMATS", (GLenum) GL_NUM_COMPRESSED_TEXTURE_FORMATS, "GL_NUM_COMPRESSED_TEXTURE_FORMATS");
#endif
#if defined(GL_NUM_DEVICE_UUIDS_EXT)
defconsti(env, "GL-NUM-DEVICE-UUIDS-EXT", (GLenum) GL_NUM_DEVICE_UUIDS_EXT, "GL_NUM_DEVICE_UUIDS_EXT");
#endif
#if defined(GL_NUM_EXTENSIONS)
defconsti(env, "GL-NUM-EXTENSIONS", (GLenum) GL_NUM_EXTENSIONS, "GL_NUM_EXTENSIONS");
#endif
#if defined(GL_NUM_PROGRAM_BINARY_FORMATS)
defconsti(env, "GL-NUM-PROGRAM-BINARY-FORMATS", (GLenum) GL_NUM_PROGRAM_BINARY_FORMATS, "GL_NUM_PROGRAM_BINARY_FORMATS");
#endif
#if defined(GL_NUM_SHADER_BINARY_FORMATS)
defconsti(env, "GL-NUM-SHADER-BINARY-FORMATS", (GLenum) GL_NUM_SHADER_BINARY_FORMATS, "GL_NUM_SHADER_BINARY_FORMATS");
#endif
#if defined(GL_PACK_ALIGNMENT)
defconsti(env, "GL-PACK-ALIGNMENT", (GLenum) GL_PACK_ALIGNMENT, "GL_PACK_ALIGNMENT");
#endif
#if defined(GL_PACK_CMYK_HINT_EXT)
defconsti(env, "GL-PACK-CMYK-HINT-EXT", (GLenum) GL_PACK_CMYK_HINT_EXT, "GL_PACK_CMYK_HINT_EXT");
#endif
#if defined(GL_PACK_IMAGE_DEPTH_SGIS)
defconsti(env, "GL-PACK-IMAGE-DEPTH-SGIS", (GLenum) GL_PACK_IMAGE_DEPTH_SGIS, "GL_PACK_IMAGE_DEPTH_SGIS");
#endif
#if defined(GL_PACK_IMAGE_HEIGHT)
defconsti(env, "GL-PACK-IMAGE-HEIGHT", (GLenum) GL_PACK_IMAGE_HEIGHT, "GL_PACK_IMAGE_HEIGHT");
#endif
#if defined(GL_PACK_IMAGE_HEIGHT_EXT)
defconsti(env, "GL-PACK-IMAGE-HEIGHT-EXT", (GLenum) GL_PACK_IMAGE_HEIGHT_EXT, "GL_PACK_IMAGE_HEIGHT_EXT");
#endif
#if defined(GL_PACK_LSB_FIRST)
defconsti(env, "GL-PACK-LSB-FIRST", (GLenum) GL_PACK_LSB_FIRST, "GL_PACK_LSB_FIRST");
#endif
#if defined(GL_PACK_RESAMPLE_SGIX)
defconsti(env, "GL-PACK-RESAMPLE-SGIX", (GLenum) GL_PACK_RESAMPLE_SGIX, "GL_PACK_RESAMPLE_SGIX");
#endif
#if defined(GL_PACK_ROW_LENGTH)
defconsti(env, "GL-PACK-ROW-LENGTH", (GLenum) GL_PACK_ROW_LENGTH, "GL_PACK_ROW_LENGTH");
#endif
#if defined(GL_PACK_SKIP_IMAGES)
defconsti(env, "GL-PACK-SKIP-IMAGES", (GLenum) GL_PACK_SKIP_IMAGES, "GL_PACK_SKIP_IMAGES");
#endif
#if defined(GL_PACK_SKIP_IMAGES_EXT)
defconsti(env, "GL-PACK-SKIP-IMAGES-EXT", (GLenum) GL_PACK_SKIP_IMAGES_EXT, "GL_PACK_SKIP_IMAGES_EXT");
#endif
#if defined(GL_PACK_SKIP_PIXELS)
defconsti(env, "GL-PACK-SKIP-PIXELS", (GLenum) GL_PACK_SKIP_PIXELS, "GL_PACK_SKIP_PIXELS");
#endif
#if defined(GL_PACK_SKIP_ROWS)
defconsti(env, "GL-PACK-SKIP-ROWS", (GLenum) GL_PACK_SKIP_ROWS, "GL_PACK_SKIP_ROWS");
#endif
#if defined(GL_PACK_SKIP_VOLUMES_SGIS)
defconsti(env, "GL-PACK-SKIP-VOLUMES-SGIS", (GLenum) GL_PACK_SKIP_VOLUMES_SGIS, "GL_PACK_SKIP_VOLUMES_SGIS");
#endif
#if defined(GL_PACK_SUBSAMPLE_RATE_SGIX)
defconsti(env, "GL-PACK-SUBSAMPLE-RATE-SGIX", (GLenum) GL_PACK_SUBSAMPLE_RATE_SGIX, "GL_PACK_SUBSAMPLE_RATE_SGIX");
#endif
#if defined(GL_PACK_SWAP_BYTES)
defconsti(env, "GL-PACK-SWAP-BYTES", (GLenum) GL_PACK_SWAP_BYTES, "GL_PACK_SWAP_BYTES");
#endif
#if defined(GL_PERSPECTIVE_CORRECTION_HINT)
defconsti(env, "GL-PERSPECTIVE-CORRECTION-HINT", (GLenum) GL_PERSPECTIVE_CORRECTION_HINT, "GL_PERSPECTIVE_CORRECTION_HINT");
#endif
#if defined(GL_PIXEL_MAP_A_TO_A_SIZE)
defconsti(env, "GL-PIXEL-MAP-A-TO-A-SIZE", (GLenum) GL_PIXEL_MAP_A_TO_A_SIZE, "GL_PIXEL_MAP_A_TO_A_SIZE");
#endif
#if defined(GL_PIXEL_MAP_B_TO_B_SIZE)
defconsti(env, "GL-PIXEL-MAP-B-TO-B-SIZE", (GLenum) GL_PIXEL_MAP_B_TO_B_SIZE, "GL_PIXEL_MAP_B_TO_B_SIZE");
#endif
#if defined(GL_PIXEL_MAP_G_TO_G_SIZE)
defconsti(env, "GL-PIXEL-MAP-G-TO-G-SIZE", (GLenum) GL_PIXEL_MAP_G_TO_G_SIZE, "GL_PIXEL_MAP_G_TO_G_SIZE");
#endif
#if defined(GL_PIXEL_MAP_I_TO_A_SIZE)
defconsti(env, "GL-PIXEL-MAP-I-TO-A-SIZE", (GLenum) GL_PIXEL_MAP_I_TO_A_SIZE, "GL_PIXEL_MAP_I_TO_A_SIZE");
#endif
#if defined(GL_PIXEL_MAP_I_TO_B_SIZE)
defconsti(env, "GL-PIXEL-MAP-I-TO-B-SIZE", (GLenum) GL_PIXEL_MAP_I_TO_B_SIZE, "GL_PIXEL_MAP_I_TO_B_SIZE");
#endif
#if defined(GL_PIXEL_MAP_I_TO_G_SIZE)
defconsti(env, "GL-PIXEL-MAP-I-TO-G-SIZE", (GLenum) GL_PIXEL_MAP_I_TO_G_SIZE, "GL_PIXEL_MAP_I_TO_G_SIZE");
#endif
#if defined(GL_PIXEL_MAP_I_TO_I_SIZE)
defconsti(env, "GL-PIXEL-MAP-I-TO-I-SIZE", (GLenum) GL_PIXEL_MAP_I_TO_I_SIZE, "GL_PIXEL_MAP_I_TO_I_SIZE");
#endif
#if defined(GL_PIXEL_MAP_I_TO_R_SIZE)
defconsti(env, "GL-PIXEL-MAP-I-TO-R-SIZE", (GLenum) GL_PIXEL_MAP_I_TO_R_SIZE, "GL_PIXEL_MAP_I_TO_R_SIZE");
#endif
#if defined(GL_PIXEL_MAP_R_TO_R_SIZE)
defconsti(env, "GL-PIXEL-MAP-R-TO-R-SIZE", (GLenum) GL_PIXEL_MAP_R_TO_R_SIZE, "GL_PIXEL_MAP_R_TO_R_SIZE");
#endif
#if defined(GL_PIXEL_MAP_S_TO_S_SIZE)
defconsti(env, "GL-PIXEL-MAP-S-TO-S-SIZE", (GLenum) GL_PIXEL_MAP_S_TO_S_SIZE, "GL_PIXEL_MAP_S_TO_S_SIZE");
#endif
#if defined(GL_PIXEL_PACK_BUFFER_BINDING)
defconsti(env, "GL-PIXEL-PACK-BUFFER-BINDING", (GLenum) GL_PIXEL_PACK_BUFFER_BINDING, "GL_PIXEL_PACK_BUFFER_BINDING");
#endif
#if defined(GL_PIXEL_TEXTURE_SGIS)
defconsti(env, "GL-PIXEL-TEXTURE-SGIS", (GLenum) GL_PIXEL_TEXTURE_SGIS, "GL_PIXEL_TEXTURE_SGIS");
#endif
#if defined(GL_PIXEL_TEX_GEN_MODE_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-MODE-SGIX", (GLenum) GL_PIXEL_TEX_GEN_MODE_SGIX, "GL_PIXEL_TEX_GEN_MODE_SGIX");
#endif
#if defined(GL_PIXEL_TEX_GEN_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-SGIX", (GLenum) GL_PIXEL_TEX_GEN_SGIX, "GL_PIXEL_TEX_GEN_SGIX");
#endif
#if defined(GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX)
defconsti(env, "GL-PIXEL-TILE-BEST-ALIGNMENT-SGIX", (GLenum) GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX, "GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX");
#endif
#if defined(GL_PIXEL_TILE_CACHE_INCREMENT_SGIX)
defconsti(env, "GL-PIXEL-TILE-CACHE-INCREMENT-SGIX", (GLenum) GL_PIXEL_TILE_CACHE_INCREMENT_SGIX, "GL_PIXEL_TILE_CACHE_INCREMENT_SGIX");
#endif
#if defined(GL_PIXEL_TILE_CACHE_SIZE_SGIX)
defconsti(env, "GL-PIXEL-TILE-CACHE-SIZE-SGIX", (GLenum) GL_PIXEL_TILE_CACHE_SIZE_SGIX, "GL_PIXEL_TILE_CACHE_SIZE_SGIX");
#endif
#if defined(GL_PIXEL_TILE_GRID_DEPTH_SGIX)
defconsti(env, "GL-PIXEL-TILE-GRID-DEPTH-SGIX", (GLenum) GL_PIXEL_TILE_GRID_DEPTH_SGIX, "GL_PIXEL_TILE_GRID_DEPTH_SGIX");
#endif
#if defined(GL_PIXEL_TILE_GRID_HEIGHT_SGIX)
defconsti(env, "GL-PIXEL-TILE-GRID-HEIGHT-SGIX", (GLenum) GL_PIXEL_TILE_GRID_HEIGHT_SGIX, "GL_PIXEL_TILE_GRID_HEIGHT_SGIX");
#endif
#if defined(GL_PIXEL_TILE_GRID_WIDTH_SGIX)
defconsti(env, "GL-PIXEL-TILE-GRID-WIDTH-SGIX", (GLenum) GL_PIXEL_TILE_GRID_WIDTH_SGIX, "GL_PIXEL_TILE_GRID_WIDTH_SGIX");
#endif
#if defined(GL_PIXEL_TILE_HEIGHT_SGIX)
defconsti(env, "GL-PIXEL-TILE-HEIGHT-SGIX", (GLenum) GL_PIXEL_TILE_HEIGHT_SGIX, "GL_PIXEL_TILE_HEIGHT_SGIX");
#endif
#if defined(GL_PIXEL_TILE_WIDTH_SGIX)
defconsti(env, "GL-PIXEL-TILE-WIDTH-SGIX", (GLenum) GL_PIXEL_TILE_WIDTH_SGIX, "GL_PIXEL_TILE_WIDTH_SGIX");
#endif
#if defined(GL_PIXEL_UNPACK_BUFFER_BINDING)
defconsti(env, "GL-PIXEL-UNPACK-BUFFER-BINDING", (GLenum) GL_PIXEL_UNPACK_BUFFER_BINDING, "GL_PIXEL_UNPACK_BUFFER_BINDING");
#endif
#if defined(GL_POINT_FADE_THRESHOLD_SIZE)
defconsti(env, "GL-POINT-FADE-THRESHOLD-SIZE", (GLenum) GL_POINT_FADE_THRESHOLD_SIZE, "GL_POINT_FADE_THRESHOLD_SIZE");
#endif
#if defined(GL_POINT_FADE_THRESHOLD_SIZE_SGIS)
defconsti(env, "GL-POINT-FADE-THRESHOLD-SIZE-SGIS", (GLenum) GL_POINT_FADE_THRESHOLD_SIZE_SGIS, "GL_POINT_FADE_THRESHOLD_SIZE_SGIS");
#endif
#if defined(GL_POINT_SIZE)
defconsti(env, "GL-POINT-SIZE", (GLenum) GL_POINT_SIZE, "GL_POINT_SIZE");
#endif
#if defined(GL_POINT_SIZE_GRANULARITY)
defconsti(env, "GL-POINT-SIZE-GRANULARITY", (GLenum) GL_POINT_SIZE_GRANULARITY, "GL_POINT_SIZE_GRANULARITY");
#endif
#if defined(GL_POINT_SIZE_MAX_SGIS)
defconsti(env, "GL-POINT-SIZE-MAX-SGIS", (GLenum) GL_POINT_SIZE_MAX_SGIS, "GL_POINT_SIZE_MAX_SGIS");
#endif
#if defined(GL_POINT_SIZE_MIN_SGIS)
defconsti(env, "GL-POINT-SIZE-MIN-SGIS", (GLenum) GL_POINT_SIZE_MIN_SGIS, "GL_POINT_SIZE_MIN_SGIS");
#endif
#if defined(GL_POINT_SIZE_RANGE)
defconsti(env, "GL-POINT-SIZE-RANGE", (GLenum) GL_POINT_SIZE_RANGE, "GL_POINT_SIZE_RANGE");
#endif
#if defined(GL_POINT_SMOOTH)
defconsti(env, "GL-POINT-SMOOTH", (GLenum) GL_POINT_SMOOTH, "GL_POINT_SMOOTH");
#endif
#if defined(GL_POINT_SMOOTH_HINT)
defconsti(env, "GL-POINT-SMOOTH-HINT", (GLenum) GL_POINT_SMOOTH_HINT, "GL_POINT_SMOOTH_HINT");
#endif
#if defined(GL_POLYGON_MODE)
defconsti(env, "GL-POLYGON-MODE", (GLenum) GL_POLYGON_MODE, "GL_POLYGON_MODE");
#endif
#if defined(GL_POLYGON_OFFSET_BIAS_EXT)
defconsti(env, "GL-POLYGON-OFFSET-BIAS-EXT", (GLenum) GL_POLYGON_OFFSET_BIAS_EXT, "GL_POLYGON_OFFSET_BIAS_EXT");
#endif
#if defined(GL_POLYGON_OFFSET_FACTOR)
defconsti(env, "GL-POLYGON-OFFSET-FACTOR", (GLenum) GL_POLYGON_OFFSET_FACTOR, "GL_POLYGON_OFFSET_FACTOR");
#endif
#if defined(GL_POLYGON_OFFSET_FILL)
defconsti(env, "GL-POLYGON-OFFSET-FILL", (GLenum) GL_POLYGON_OFFSET_FILL, "GL_POLYGON_OFFSET_FILL");
#endif
#if defined(GL_POLYGON_OFFSET_LINE)
defconsti(env, "GL-POLYGON-OFFSET-LINE", (GLenum) GL_POLYGON_OFFSET_LINE, "GL_POLYGON_OFFSET_LINE");
#endif
#if defined(GL_POLYGON_OFFSET_POINT)
defconsti(env, "GL-POLYGON-OFFSET-POINT", (GLenum) GL_POLYGON_OFFSET_POINT, "GL_POLYGON_OFFSET_POINT");
#endif
#if defined(GL_POLYGON_OFFSET_UNITS)
defconsti(env, "GL-POLYGON-OFFSET-UNITS", (GLenum) GL_POLYGON_OFFSET_UNITS, "GL_POLYGON_OFFSET_UNITS");
#endif
#if defined(GL_POLYGON_SMOOTH)
defconsti(env, "GL-POLYGON-SMOOTH", (GLenum) GL_POLYGON_SMOOTH, "GL_POLYGON_SMOOTH");
#endif
#if defined(GL_POLYGON_SMOOTH_HINT)
defconsti(env, "GL-POLYGON-SMOOTH-HINT", (GLenum) GL_POLYGON_SMOOTH_HINT, "GL_POLYGON_SMOOTH_HINT");
#endif
#if defined(GL_POLYGON_STIPPLE)
defconsti(env, "GL-POLYGON-STIPPLE", (GLenum) GL_POLYGON_STIPPLE, "GL_POLYGON_STIPPLE");
#endif
#if defined(GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-ALPHA-BIAS-SGI", (GLenum) GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI, "GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-ALPHA-SCALE-SGI", (GLenum) GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI, "GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-BLUE-BIAS-SGI", (GLenum) GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI, "GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-BLUE-SCALE-SGI", (GLenum) GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI, "GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-COLOR-TABLE-SGI", (GLenum) GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI, "GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-GREEN-BIAS-SGI", (GLenum) GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI, "GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-GREEN-SCALE-SGI", (GLenum) GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI, "GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_RED_BIAS_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-RED-BIAS-SGI", (GLenum) GL_POST_COLOR_MATRIX_RED_BIAS_SGI, "GL_POST_COLOR_MATRIX_RED_BIAS_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_RED_SCALE_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-RED-SCALE-SGI", (GLenum) GL_POST_COLOR_MATRIX_RED_SCALE_SGI, "GL_POST_COLOR_MATRIX_RED_SCALE_SGI");
#endif
#if defined(GL_POST_CONVOLUTION_ALPHA_BIAS_EXT)
defconsti(env, "GL-POST-CONVOLUTION-ALPHA-BIAS-EXT", (GLenum) GL_POST_CONVOLUTION_ALPHA_BIAS_EXT, "GL_POST_CONVOLUTION_ALPHA_BIAS_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_ALPHA_SCALE_EXT)
defconsti(env, "GL-POST-CONVOLUTION-ALPHA-SCALE-EXT", (GLenum) GL_POST_CONVOLUTION_ALPHA_SCALE_EXT, "GL_POST_CONVOLUTION_ALPHA_SCALE_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_BLUE_BIAS_EXT)
defconsti(env, "GL-POST-CONVOLUTION-BLUE-BIAS-EXT", (GLenum) GL_POST_CONVOLUTION_BLUE_BIAS_EXT, "GL_POST_CONVOLUTION_BLUE_BIAS_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_BLUE_SCALE_EXT)
defconsti(env, "GL-POST-CONVOLUTION-BLUE-SCALE-EXT", (GLenum) GL_POST_CONVOLUTION_BLUE_SCALE_EXT, "GL_POST_CONVOLUTION_BLUE_SCALE_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_COLOR_TABLE_SGI)
defconsti(env, "GL-POST-CONVOLUTION-COLOR-TABLE-SGI", (GLenum) GL_POST_CONVOLUTION_COLOR_TABLE_SGI, "GL_POST_CONVOLUTION_COLOR_TABLE_SGI");
#endif
#if defined(GL_POST_CONVOLUTION_GREEN_BIAS_EXT)
defconsti(env, "GL-POST-CONVOLUTION-GREEN-BIAS-EXT", (GLenum) GL_POST_CONVOLUTION_GREEN_BIAS_EXT, "GL_POST_CONVOLUTION_GREEN_BIAS_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_GREEN_SCALE_EXT)
defconsti(env, "GL-POST-CONVOLUTION-GREEN-SCALE-EXT", (GLenum) GL_POST_CONVOLUTION_GREEN_SCALE_EXT, "GL_POST_CONVOLUTION_GREEN_SCALE_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_RED_BIAS_EXT)
defconsti(env, "GL-POST-CONVOLUTION-RED-BIAS-EXT", (GLenum) GL_POST_CONVOLUTION_RED_BIAS_EXT, "GL_POST_CONVOLUTION_RED_BIAS_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_RED_SCALE_EXT)
defconsti(env, "GL-POST-CONVOLUTION-RED-SCALE-EXT", (GLenum) GL_POST_CONVOLUTION_RED_SCALE_EXT, "GL_POST_CONVOLUTION_RED_SCALE_EXT");
#endif
#if defined(GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX)
defconsti(env, "GL-POST-TEXTURE-FILTER-BIAS-RANGE-SGIX", (GLenum) GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX, "GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX");
#endif
#if defined(GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX)
defconsti(env, "GL-POST-TEXTURE-FILTER-SCALE-RANGE-SGIX", (GLenum) GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX, "GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX");
#endif
#if defined(GL_PRIMITIVE_RESTART_INDEX)
defconsti(env, "GL-PRIMITIVE-RESTART-INDEX", (GLenum) GL_PRIMITIVE_RESTART_INDEX, "GL_PRIMITIVE_RESTART_INDEX");
#endif
#if defined(GL_PROGRAM_BINARY_FORMATS)
defconsti(env, "GL-PROGRAM-BINARY-FORMATS", (GLenum) GL_PROGRAM_BINARY_FORMATS, "GL_PROGRAM_BINARY_FORMATS");
#endif
#if defined(GL_PROGRAM_PIPELINE_BINDING)
defconsti(env, "GL-PROGRAM-PIPELINE-BINDING", (GLenum) GL_PROGRAM_PIPELINE_BINDING, "GL_PROGRAM_PIPELINE_BINDING");
#endif
#if defined(GL_PROGRAM_POINT_SIZE)
defconsti(env, "GL-PROGRAM-POINT-SIZE", (GLenum) GL_PROGRAM_POINT_SIZE, "GL_PROGRAM_POINT_SIZE");
#endif
#if defined(GL_PROJECTION_MATRIX)
defconsti(env, "GL-PROJECTION-MATRIX", (GLenum) GL_PROJECTION_MATRIX, "GL_PROJECTION_MATRIX");
#endif
#if defined(GL_PROJECTION_STACK_DEPTH)
defconsti(env, "GL-PROJECTION-STACK-DEPTH", (GLenum) GL_PROJECTION_STACK_DEPTH, "GL_PROJECTION_STACK_DEPTH");
#endif
#if defined(GL_PROVOKING_VERTEX)
defconsti(env, "GL-PROVOKING-VERTEX", (GLenum) GL_PROVOKING_VERTEX, "GL_PROVOKING_VERTEX");
#endif
#if defined(GL_READ_BUFFER)
defconsti(env, "GL-READ-BUFFER", (GLenum) GL_READ_BUFFER, "GL_READ_BUFFER");
#endif
#if defined(GL_READ_BUFFER_EXT)
defconsti(env, "GL-READ-BUFFER-EXT", (GLenum) GL_READ_BUFFER_EXT, "GL_READ_BUFFER_EXT");
#endif
#if defined(GL_READ_BUFFER_NV)
defconsti(env, "GL-READ-BUFFER-NV", (GLenum) GL_READ_BUFFER_NV, "GL_READ_BUFFER_NV");
#endif
#if defined(GL_READ_FRAMEBUFFER_BINDING)
defconsti(env, "GL-READ-FRAMEBUFFER-BINDING", (GLenum) GL_READ_FRAMEBUFFER_BINDING, "GL_READ_FRAMEBUFFER_BINDING");
#endif
#if defined(GL_RED_BIAS)
defconsti(env, "GL-RED-BIAS", (GLenum) GL_RED_BIAS, "GL_RED_BIAS");
#endif
#if defined(GL_RED_BITS)
defconsti(env, "GL-RED-BITS", (GLenum) GL_RED_BITS, "GL_RED_BITS");
#endif
#if defined(GL_RED_SCALE)
defconsti(env, "GL-RED-SCALE", (GLenum) GL_RED_SCALE, "GL_RED_SCALE");
#endif
#if defined(GL_REFERENCE_PLANE_EQUATION_SGIX)
defconsti(env, "GL-REFERENCE-PLANE-EQUATION-SGIX", (GLenum) GL_REFERENCE_PLANE_EQUATION_SGIX, "GL_REFERENCE_PLANE_EQUATION_SGIX");
#endif
#if defined(GL_REFERENCE_PLANE_SGIX)
defconsti(env, "GL-REFERENCE-PLANE-SGIX", (GLenum) GL_REFERENCE_PLANE_SGIX, "GL_REFERENCE_PLANE_SGIX");
#endif
#if defined(GL_RENDERBUFFER_BINDING)
defconsti(env, "GL-RENDERBUFFER-BINDING", (GLenum) GL_RENDERBUFFER_BINDING, "GL_RENDERBUFFER_BINDING");
#endif
#if defined(GL_RENDER_MODE)
defconsti(env, "GL-RENDER-MODE", (GLenum) GL_RENDER_MODE, "GL_RENDER_MODE");
#endif
#if defined(GL_RESCALE_NORMAL_EXT)
defconsti(env, "GL-RESCALE-NORMAL-EXT", (GLenum) GL_RESCALE_NORMAL_EXT, "GL_RESCALE_NORMAL_EXT");
#endif
#if defined(GL_RGBA_MODE)
defconsti(env, "GL-RGBA-MODE", (GLenum) GL_RGBA_MODE, "GL_RGBA_MODE");
#endif
#if defined(GL_SAMPLER_BINDING)
defconsti(env, "GL-SAMPLER-BINDING", (GLenum) GL_SAMPLER_BINDING, "GL_SAMPLER_BINDING");
#endif
#if defined(GL_SAMPLES)
defconsti(env, "GL-SAMPLES", (GLenum) GL_SAMPLES, "GL_SAMPLES");
#endif
#if defined(GL_SAMPLES_SGIS)
defconsti(env, "GL-SAMPLES-SGIS", (GLenum) GL_SAMPLES_SGIS, "GL_SAMPLES_SGIS");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_MASK_SGIS)
defconsti(env, "GL-SAMPLE-ALPHA-TO-MASK-SGIS", (GLenum) GL_SAMPLE_ALPHA_TO_MASK_SGIS, "GL_SAMPLE_ALPHA_TO_MASK_SGIS");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_ONE_SGIS)
defconsti(env, "GL-SAMPLE-ALPHA-TO-ONE-SGIS", (GLenum) GL_SAMPLE_ALPHA_TO_ONE_SGIS, "GL_SAMPLE_ALPHA_TO_ONE_SGIS");
#endif
#if defined(GL_SAMPLE_BUFFERS)
defconsti(env, "GL-SAMPLE-BUFFERS", (GLenum) GL_SAMPLE_BUFFERS, "GL_SAMPLE_BUFFERS");
#endif
#if defined(GL_SAMPLE_BUFFERS_SGIS)
defconsti(env, "GL-SAMPLE-BUFFERS-SGIS", (GLenum) GL_SAMPLE_BUFFERS_SGIS, "GL_SAMPLE_BUFFERS_SGIS");
#endif
#if defined(GL_SAMPLE_COVERAGE_INVERT)
defconsti(env, "GL-SAMPLE-COVERAGE-INVERT", (GLenum) GL_SAMPLE_COVERAGE_INVERT, "GL_SAMPLE_COVERAGE_INVERT");
#endif
#if defined(GL_SAMPLE_COVERAGE_VALUE)
defconsti(env, "GL-SAMPLE-COVERAGE-VALUE", (GLenum) GL_SAMPLE_COVERAGE_VALUE, "GL_SAMPLE_COVERAGE_VALUE");
#endif
#if defined(GL_SAMPLE_MASK_INVERT_SGIS)
defconsti(env, "GL-SAMPLE-MASK-INVERT-SGIS", (GLenum) GL_SAMPLE_MASK_INVERT_SGIS, "GL_SAMPLE_MASK_INVERT_SGIS");
#endif
#if defined(GL_SAMPLE_MASK_SGIS)
defconsti(env, "GL-SAMPLE-MASK-SGIS", (GLenum) GL_SAMPLE_MASK_SGIS, "GL_SAMPLE_MASK_SGIS");
#endif
#if defined(GL_SAMPLE_MASK_VALUE_SGIS)
defconsti(env, "GL-SAMPLE-MASK-VALUE-SGIS", (GLenum) GL_SAMPLE_MASK_VALUE_SGIS, "GL_SAMPLE_MASK_VALUE_SGIS");
#endif
#if defined(GL_SAMPLE_PATTERN_SGIS)
defconsti(env, "GL-SAMPLE-PATTERN-SGIS", (GLenum) GL_SAMPLE_PATTERN_SGIS, "GL_SAMPLE_PATTERN_SGIS");
#endif
#if defined(GL_SCISSOR_BOX)
defconsti(env, "GL-SCISSOR-BOX", (GLenum) GL_SCISSOR_BOX, "GL_SCISSOR_BOX");
#endif
#if defined(GL_SCISSOR_TEST)
defconsti(env, "GL-SCISSOR-TEST", (GLenum) GL_SCISSOR_TEST, "GL_SCISSOR_TEST");
#endif
#if defined(GL_SELECTION_BUFFER_SIZE)
defconsti(env, "GL-SELECTION-BUFFER-SIZE", (GLenum) GL_SELECTION_BUFFER_SIZE, "GL_SELECTION_BUFFER_SIZE");
#endif
#if defined(GL_SEPARABLE_2D_EXT)
defconsti(env, "GL-SEPARABLE-2D-EXT", (GLenum) GL_SEPARABLE_2D_EXT, "GL_SEPARABLE_2D_EXT");
#endif
#if defined(GL_SHADER_COMPILER)
defconsti(env, "GL-SHADER-COMPILER", (GLenum) GL_SHADER_COMPILER, "GL_SHADER_COMPILER");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER_BINDING)
defconsti(env, "GL-SHADER-STORAGE-BUFFER-BINDING", (GLenum) GL_SHADER_STORAGE_BUFFER_BINDING, "GL_SHADER_STORAGE_BUFFER_BINDING");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT)
defconsti(env, "GL-SHADER-STORAGE-BUFFER-OFFSET-ALIGNMENT", (GLenum) GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT, "GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER_SIZE)
defconsti(env, "GL-SHADER-STORAGE-BUFFER-SIZE", (GLenum) GL_SHADER_STORAGE_BUFFER_SIZE, "GL_SHADER_STORAGE_BUFFER_SIZE");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER_START)
defconsti(env, "GL-SHADER-STORAGE-BUFFER-START", (GLenum) GL_SHADER_STORAGE_BUFFER_START, "GL_SHADER_STORAGE_BUFFER_START");
#endif
#if defined(GL_SHADE_MODEL)
defconsti(env, "GL-SHADE-MODEL", (GLenum) GL_SHADE_MODEL, "GL_SHADE_MODEL");
#endif
#if defined(GL_SHARED_TEXTURE_PALETTE_EXT)
defconsti(env, "GL-SHARED-TEXTURE-PALETTE-EXT", (GLenum) GL_SHARED_TEXTURE_PALETTE_EXT, "GL_SHARED_TEXTURE_PALETTE_EXT");
#endif
#if defined(GL_SMOOTH_LINE_WIDTH_GRANULARITY)
defconsti(env, "GL-SMOOTH-LINE-WIDTH-GRANULARITY", (GLenum) GL_SMOOTH_LINE_WIDTH_GRANULARITY, "GL_SMOOTH_LINE_WIDTH_GRANULARITY");
#endif
#if defined(GL_SMOOTH_LINE_WIDTH_RANGE)
defconsti(env, "GL-SMOOTH-LINE-WIDTH-RANGE", (GLenum) GL_SMOOTH_LINE_WIDTH_RANGE, "GL_SMOOTH_LINE_WIDTH_RANGE");
#endif
#if defined(GL_SMOOTH_POINT_SIZE_GRANULARITY)
defconsti(env, "GL-SMOOTH-POINT-SIZE-GRANULARITY", (GLenum) GL_SMOOTH_POINT_SIZE_GRANULARITY, "GL_SMOOTH_POINT_SIZE_GRANULARITY");
#endif
#if defined(GL_SMOOTH_POINT_SIZE_RANGE)
defconsti(env, "GL-SMOOTH-POINT-SIZE-RANGE", (GLenum) GL_SMOOTH_POINT_SIZE_RANGE, "GL_SMOOTH_POINT_SIZE_RANGE");
#endif
#if defined(GL_SPRITE_AXIS_SGIX)
defconsti(env, "GL-SPRITE-AXIS-SGIX", (GLenum) GL_SPRITE_AXIS_SGIX, "GL_SPRITE_AXIS_SGIX");
#endif
#if defined(GL_SPRITE_MODE_SGIX)
defconsti(env, "GL-SPRITE-MODE-SGIX", (GLenum) GL_SPRITE_MODE_SGIX, "GL_SPRITE_MODE_SGIX");
#endif
#if defined(GL_SPRITE_SGIX)
defconsti(env, "GL-SPRITE-SGIX", (GLenum) GL_SPRITE_SGIX, "GL_SPRITE_SGIX");
#endif
#if defined(GL_SPRITE_TRANSLATION_SGIX)
defconsti(env, "GL-SPRITE-TRANSLATION-SGIX", (GLenum) GL_SPRITE_TRANSLATION_SGIX, "GL_SPRITE_TRANSLATION_SGIX");
#endif
#if defined(GL_STENCIL_BACK_FAIL)
defconsti(env, "GL-STENCIL-BACK-FAIL", (GLenum) GL_STENCIL_BACK_FAIL, "GL_STENCIL_BACK_FAIL");
#endif
#if defined(GL_STENCIL_BACK_FUNC)
defconsti(env, "GL-STENCIL-BACK-FUNC", (GLenum) GL_STENCIL_BACK_FUNC, "GL_STENCIL_BACK_FUNC");
#endif
#if defined(GL_STENCIL_BACK_PASS_DEPTH_FAIL)
defconsti(env, "GL-STENCIL-BACK-PASS-DEPTH-FAIL", (GLenum) GL_STENCIL_BACK_PASS_DEPTH_FAIL, "GL_STENCIL_BACK_PASS_DEPTH_FAIL");
#endif
#if defined(GL_STENCIL_BACK_PASS_DEPTH_PASS)
defconsti(env, "GL-STENCIL-BACK-PASS-DEPTH-PASS", (GLenum) GL_STENCIL_BACK_PASS_DEPTH_PASS, "GL_STENCIL_BACK_PASS_DEPTH_PASS");
#endif
#if defined(GL_STENCIL_BACK_REF)
defconsti(env, "GL-STENCIL-BACK-REF", (GLenum) GL_STENCIL_BACK_REF, "GL_STENCIL_BACK_REF");
#endif
#if defined(GL_STENCIL_BACK_VALUE_MASK)
defconsti(env, "GL-STENCIL-BACK-VALUE-MASK", (GLenum) GL_STENCIL_BACK_VALUE_MASK, "GL_STENCIL_BACK_VALUE_MASK");
#endif
#if defined(GL_STENCIL_BACK_WRITEMASK)
defconsti(env, "GL-STENCIL-BACK-WRITEMASK", (GLenum) GL_STENCIL_BACK_WRITEMASK, "GL_STENCIL_BACK_WRITEMASK");
#endif
#if defined(GL_STENCIL_BITS)
defconsti(env, "GL-STENCIL-BITS", (GLenum) GL_STENCIL_BITS, "GL_STENCIL_BITS");
#endif
#if defined(GL_STENCIL_CLEAR_VALUE)
defconsti(env, "GL-STENCIL-CLEAR-VALUE", (GLenum) GL_STENCIL_CLEAR_VALUE, "GL_STENCIL_CLEAR_VALUE");
#endif
#if defined(GL_STENCIL_FAIL)
defconsti(env, "GL-STENCIL-FAIL", (GLenum) GL_STENCIL_FAIL, "GL_STENCIL_FAIL");
#endif
#if defined(GL_STENCIL_FUNC)
defconsti(env, "GL-STENCIL-FUNC", (GLenum) GL_STENCIL_FUNC, "GL_STENCIL_FUNC");
#endif
#if defined(GL_STENCIL_PASS_DEPTH_FAIL)
defconsti(env, "GL-STENCIL-PASS-DEPTH-FAIL", (GLenum) GL_STENCIL_PASS_DEPTH_FAIL, "GL_STENCIL_PASS_DEPTH_FAIL");
#endif
#if defined(GL_STENCIL_PASS_DEPTH_PASS)
defconsti(env, "GL-STENCIL-PASS-DEPTH-PASS", (GLenum) GL_STENCIL_PASS_DEPTH_PASS, "GL_STENCIL_PASS_DEPTH_PASS");
#endif
#if defined(GL_STENCIL_REF)
defconsti(env, "GL-STENCIL-REF", (GLenum) GL_STENCIL_REF, "GL_STENCIL_REF");
#endif
#if defined(GL_STENCIL_TEST)
defconsti(env, "GL-STENCIL-TEST", (GLenum) GL_STENCIL_TEST, "GL_STENCIL_TEST");
#endif
#if defined(GL_STENCIL_VALUE_MASK)
defconsti(env, "GL-STENCIL-VALUE-MASK", (GLenum) GL_STENCIL_VALUE_MASK, "GL_STENCIL_VALUE_MASK");
#endif
#if defined(GL_STENCIL_WRITEMASK)
defconsti(env, "GL-STENCIL-WRITEMASK", (GLenum) GL_STENCIL_WRITEMASK, "GL_STENCIL_WRITEMASK");
#endif
#if defined(GL_STEREO)
defconsti(env, "GL-STEREO", (GLenum) GL_STEREO, "GL_STEREO");
#endif
#if defined(GL_SUBPIXEL_BITS)
defconsti(env, "GL-SUBPIXEL-BITS", (GLenum) GL_SUBPIXEL_BITS, "GL_SUBPIXEL_BITS");
#endif
#if defined(GL_TEXTURE_1D)
defconsti(env, "GL-TEXTURE-1D", (GLenum) GL_TEXTURE_1D, "GL_TEXTURE_1D");
#endif
#if defined(GL_TEXTURE_2D)
defconsti(env, "GL-TEXTURE-2D", (GLenum) GL_TEXTURE_2D, "GL_TEXTURE_2D");
#endif
#if defined(GL_TEXTURE_3D_BINDING_EXT)
defconsti(env, "GL-TEXTURE-3D-BINDING-EXT", (GLenum) GL_TEXTURE_3D_BINDING_EXT, "GL_TEXTURE_3D_BINDING_EXT");
#endif
#if defined(GL_TEXTURE_3D_EXT)
defconsti(env, "GL-TEXTURE-3D-EXT", (GLenum) GL_TEXTURE_3D_EXT, "GL_TEXTURE_3D_EXT");
#endif
#if defined(GL_TEXTURE_4D_BINDING_SGIS)
defconsti(env, "GL-TEXTURE-4D-BINDING-SGIS", (GLenum) GL_TEXTURE_4D_BINDING_SGIS, "GL_TEXTURE_4D_BINDING_SGIS");
#endif
#if defined(GL_TEXTURE_4D_SGIS)
defconsti(env, "GL-TEXTURE-4D-SGIS", (GLenum) GL_TEXTURE_4D_SGIS, "GL_TEXTURE_4D_SGIS");
#endif
#if defined(GL_TEXTURE_BINDING_1D)
defconsti(env, "GL-TEXTURE-BINDING-1D", (GLenum) GL_TEXTURE_BINDING_1D, "GL_TEXTURE_BINDING_1D");
#endif
#if defined(GL_TEXTURE_BINDING_1D_ARRAY)
defconsti(env, "GL-TEXTURE-BINDING-1D-ARRAY", (GLenum) GL_TEXTURE_BINDING_1D_ARRAY, "GL_TEXTURE_BINDING_1D_ARRAY");
#endif
#if defined(GL_TEXTURE_BINDING_2D)
defconsti(env, "GL-TEXTURE-BINDING-2D", (GLenum) GL_TEXTURE_BINDING_2D, "GL_TEXTURE_BINDING_2D");
#endif
#if defined(GL_TEXTURE_BINDING_2D_ARRAY)
defconsti(env, "GL-TEXTURE-BINDING-2D-ARRAY", (GLenum) GL_TEXTURE_BINDING_2D_ARRAY, "GL_TEXTURE_BINDING_2D_ARRAY");
#endif
#if defined(GL_TEXTURE_BINDING_2D_MULTISAMPLE)
defconsti(env, "GL-TEXTURE-BINDING-2D-MULTISAMPLE", (GLenum) GL_TEXTURE_BINDING_2D_MULTISAMPLE, "GL_TEXTURE_BINDING_2D_MULTISAMPLE");
#endif
#if defined(GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-TEXTURE-BINDING-2D-MULTISAMPLE-ARRAY", (GLenum) GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY, "GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_TEXTURE_BINDING_3D)
defconsti(env, "GL-TEXTURE-BINDING-3D", (GLenum) GL_TEXTURE_BINDING_3D, "GL_TEXTURE_BINDING_3D");
#endif
#if defined(GL_TEXTURE_BINDING_BUFFER)
defconsti(env, "GL-TEXTURE-BINDING-BUFFER", (GLenum) GL_TEXTURE_BINDING_BUFFER, "GL_TEXTURE_BINDING_BUFFER");
#endif
#if defined(GL_TEXTURE_BINDING_CUBE_MAP)
defconsti(env, "GL-TEXTURE-BINDING-CUBE-MAP", (GLenum) GL_TEXTURE_BINDING_CUBE_MAP, "GL_TEXTURE_BINDING_CUBE_MAP");
#endif
#if defined(GL_TEXTURE_BINDING_RECTANGLE)
defconsti(env, "GL-TEXTURE-BINDING-RECTANGLE", (GLenum) GL_TEXTURE_BINDING_RECTANGLE, "GL_TEXTURE_BINDING_RECTANGLE");
#endif
#if defined(GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT)
defconsti(env, "GL-TEXTURE-BUFFER-OFFSET-ALIGNMENT", (GLenum) GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT, "GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT");
#endif
#if defined(GL_TEXTURE_COLOR_TABLE_SGI)
defconsti(env, "GL-TEXTURE-COLOR-TABLE-SGI", (GLenum) GL_TEXTURE_COLOR_TABLE_SGI, "GL_TEXTURE_COLOR_TABLE_SGI");
#endif
#if defined(GL_TEXTURE_COMPRESSION_HINT)
defconsti(env, "GL-TEXTURE-COMPRESSION-HINT", (GLenum) GL_TEXTURE_COMPRESSION_HINT, "GL_TEXTURE_COMPRESSION_HINT");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY)
defconsti(env, "GL-TEXTURE-COORD-ARRAY", (GLenum) GL_TEXTURE_COORD_ARRAY, "GL_TEXTURE_COORD_ARRAY");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_COUNT_EXT)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-COUNT-EXT", (GLenum) GL_TEXTURE_COORD_ARRAY_COUNT_EXT, "GL_TEXTURE_COORD_ARRAY_COUNT_EXT");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_SIZE)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-SIZE", (GLenum) GL_TEXTURE_COORD_ARRAY_SIZE, "GL_TEXTURE_COORD_ARRAY_SIZE");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_STRIDE)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-STRIDE", (GLenum) GL_TEXTURE_COORD_ARRAY_STRIDE, "GL_TEXTURE_COORD_ARRAY_STRIDE");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_TYPE)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-TYPE", (GLenum) GL_TEXTURE_COORD_ARRAY_TYPE, "GL_TEXTURE_COORD_ARRAY_TYPE");
#endif
#if defined(GL_TEXTURE_GEN_Q)
defconsti(env, "GL-TEXTURE-GEN-Q", (GLenum) GL_TEXTURE_GEN_Q, "GL_TEXTURE_GEN_Q");
#endif
#if defined(GL_TEXTURE_GEN_R)
defconsti(env, "GL-TEXTURE-GEN-R", (GLenum) GL_TEXTURE_GEN_R, "GL_TEXTURE_GEN_R");
#endif
#if defined(GL_TEXTURE_GEN_S)
defconsti(env, "GL-TEXTURE-GEN-S", (GLenum) GL_TEXTURE_GEN_S, "GL_TEXTURE_GEN_S");
#endif
#if defined(GL_TEXTURE_GEN_T)
defconsti(env, "GL-TEXTURE-GEN-T", (GLenum) GL_TEXTURE_GEN_T, "GL_TEXTURE_GEN_T");
#endif
#if defined(GL_TEXTURE_MATRIX)
defconsti(env, "GL-TEXTURE-MATRIX", (GLenum) GL_TEXTURE_MATRIX, "GL_TEXTURE_MATRIX");
#endif
#if defined(GL_TEXTURE_STACK_DEPTH)
defconsti(env, "GL-TEXTURE-STACK-DEPTH", (GLenum) GL_TEXTURE_STACK_DEPTH, "GL_TEXTURE_STACK_DEPTH");
#endif
#if defined(GL_TIMESTAMP)
defconsti(env, "GL-TIMESTAMP", (GLenum) GL_TIMESTAMP, "GL_TIMESTAMP");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_BINDING)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-BINDING", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_BINDING, "GL_TRANSFORM_FEEDBACK_BUFFER_BINDING");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_SIZE)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-SIZE", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_SIZE, "GL_TRANSFORM_FEEDBACK_BUFFER_SIZE");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_START)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-START", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_START, "GL_TRANSFORM_FEEDBACK_BUFFER_START");
#endif
#if defined(GL_UNIFORM_BUFFER_BINDING)
defconsti(env, "GL-UNIFORM-BUFFER-BINDING", (GLenum) GL_UNIFORM_BUFFER_BINDING, "GL_UNIFORM_BUFFER_BINDING");
#endif
#if defined(GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT)
defconsti(env, "GL-UNIFORM-BUFFER-OFFSET-ALIGNMENT", (GLenum) GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT, "GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT");
#endif
#if defined(GL_UNIFORM_BUFFER_SIZE)
defconsti(env, "GL-UNIFORM-BUFFER-SIZE", (GLenum) GL_UNIFORM_BUFFER_SIZE, "GL_UNIFORM_BUFFER_SIZE");
#endif
#if defined(GL_UNIFORM_BUFFER_START)
defconsti(env, "GL-UNIFORM-BUFFER-START", (GLenum) GL_UNIFORM_BUFFER_START, "GL_UNIFORM_BUFFER_START");
#endif
#if defined(GL_UNPACK_ALIGNMENT)
defconsti(env, "GL-UNPACK-ALIGNMENT", (GLenum) GL_UNPACK_ALIGNMENT, "GL_UNPACK_ALIGNMENT");
#endif
#if defined(GL_UNPACK_CMYK_HINT_EXT)
defconsti(env, "GL-UNPACK-CMYK-HINT-EXT", (GLenum) GL_UNPACK_CMYK_HINT_EXT, "GL_UNPACK_CMYK_HINT_EXT");
#endif
#if defined(GL_UNPACK_IMAGE_DEPTH_SGIS)
defconsti(env, "GL-UNPACK-IMAGE-DEPTH-SGIS", (GLenum) GL_UNPACK_IMAGE_DEPTH_SGIS, "GL_UNPACK_IMAGE_DEPTH_SGIS");
#endif
#if defined(GL_UNPACK_IMAGE_HEIGHT)
defconsti(env, "GL-UNPACK-IMAGE-HEIGHT", (GLenum) GL_UNPACK_IMAGE_HEIGHT, "GL_UNPACK_IMAGE_HEIGHT");
#endif
#if defined(GL_UNPACK_IMAGE_HEIGHT_EXT)
defconsti(env, "GL-UNPACK-IMAGE-HEIGHT-EXT", (GLenum) GL_UNPACK_IMAGE_HEIGHT_EXT, "GL_UNPACK_IMAGE_HEIGHT_EXT");
#endif
#if defined(GL_UNPACK_LSB_FIRST)
defconsti(env, "GL-UNPACK-LSB-FIRST", (GLenum) GL_UNPACK_LSB_FIRST, "GL_UNPACK_LSB_FIRST");
#endif
#if defined(GL_UNPACK_RESAMPLE_SGIX)
defconsti(env, "GL-UNPACK-RESAMPLE-SGIX", (GLenum) GL_UNPACK_RESAMPLE_SGIX, "GL_UNPACK_RESAMPLE_SGIX");
#endif
#if defined(GL_UNPACK_ROW_LENGTH)
defconsti(env, "GL-UNPACK-ROW-LENGTH", (GLenum) GL_UNPACK_ROW_LENGTH, "GL_UNPACK_ROW_LENGTH");
#endif
#if defined(GL_UNPACK_SKIP_IMAGES)
defconsti(env, "GL-UNPACK-SKIP-IMAGES", (GLenum) GL_UNPACK_SKIP_IMAGES, "GL_UNPACK_SKIP_IMAGES");
#endif
#if defined(GL_UNPACK_SKIP_IMAGES_EXT)
defconsti(env, "GL-UNPACK-SKIP-IMAGES-EXT", (GLenum) GL_UNPACK_SKIP_IMAGES_EXT, "GL_UNPACK_SKIP_IMAGES_EXT");
#endif
#if defined(GL_UNPACK_SKIP_PIXELS)
defconsti(env, "GL-UNPACK-SKIP-PIXELS", (GLenum) GL_UNPACK_SKIP_PIXELS, "GL_UNPACK_SKIP_PIXELS");
#endif
#if defined(GL_UNPACK_SKIP_ROWS)
defconsti(env, "GL-UNPACK-SKIP-ROWS", (GLenum) GL_UNPACK_SKIP_ROWS, "GL_UNPACK_SKIP_ROWS");
#endif
#if defined(GL_UNPACK_SKIP_VOLUMES_SGIS)
defconsti(env, "GL-UNPACK-SKIP-VOLUMES-SGIS", (GLenum) GL_UNPACK_SKIP_VOLUMES_SGIS, "GL_UNPACK_SKIP_VOLUMES_SGIS");
#endif
#if defined(GL_UNPACK_SUBSAMPLE_RATE_SGIX)
defconsti(env, "GL-UNPACK-SUBSAMPLE-RATE-SGIX", (GLenum) GL_UNPACK_SUBSAMPLE_RATE_SGIX, "GL_UNPACK_SUBSAMPLE_RATE_SGIX");
#endif
#if defined(GL_UNPACK_SWAP_BYTES)
defconsti(env, "GL-UNPACK-SWAP-BYTES", (GLenum) GL_UNPACK_SWAP_BYTES, "GL_UNPACK_SWAP_BYTES");
#endif
#if defined(GL_VERTEX_ARRAY)
defconsti(env, "GL-VERTEX-ARRAY", (GLenum) GL_VERTEX_ARRAY, "GL_VERTEX_ARRAY");
#endif
#if defined(GL_VERTEX_ARRAY_BINDING)
defconsti(env, "GL-VERTEX-ARRAY-BINDING", (GLenum) GL_VERTEX_ARRAY_BINDING, "GL_VERTEX_ARRAY_BINDING");
#endif
#if defined(GL_VERTEX_ARRAY_COUNT_EXT)
defconsti(env, "GL-VERTEX-ARRAY-COUNT-EXT", (GLenum) GL_VERTEX_ARRAY_COUNT_EXT, "GL_VERTEX_ARRAY_COUNT_EXT");
#endif
#if defined(GL_VERTEX_ARRAY_SIZE)
defconsti(env, "GL-VERTEX-ARRAY-SIZE", (GLenum) GL_VERTEX_ARRAY_SIZE, "GL_VERTEX_ARRAY_SIZE");
#endif
#if defined(GL_VERTEX_ARRAY_STRIDE)
defconsti(env, "GL-VERTEX-ARRAY-STRIDE", (GLenum) GL_VERTEX_ARRAY_STRIDE, "GL_VERTEX_ARRAY_STRIDE");
#endif
#if defined(GL_VERTEX_ARRAY_TYPE)
defconsti(env, "GL-VERTEX-ARRAY-TYPE", (GLenum) GL_VERTEX_ARRAY_TYPE, "GL_VERTEX_ARRAY_TYPE");
#endif
#if defined(GL_VERTEX_BINDING_DIVISOR)
defconsti(env, "GL-VERTEX-BINDING-DIVISOR", (GLenum) GL_VERTEX_BINDING_DIVISOR, "GL_VERTEX_BINDING_DIVISOR");
#endif
#if defined(GL_VERTEX_BINDING_OFFSET)
defconsti(env, "GL-VERTEX-BINDING-OFFSET", (GLenum) GL_VERTEX_BINDING_OFFSET, "GL_VERTEX_BINDING_OFFSET");
#endif
#if defined(GL_VERTEX_BINDING_STRIDE)
defconsti(env, "GL-VERTEX-BINDING-STRIDE", (GLenum) GL_VERTEX_BINDING_STRIDE, "GL_VERTEX_BINDING_STRIDE");
#endif
#if defined(GL_VERTEX_PRECLIP_HINT_SGIX)
defconsti(env, "GL-VERTEX-PRECLIP-HINT-SGIX", (GLenum) GL_VERTEX_PRECLIP_HINT_SGIX, "GL_VERTEX_PRECLIP_HINT_SGIX");
#endif
#if defined(GL_VERTEX_PRECLIP_SGIX)
defconsti(env, "GL-VERTEX-PRECLIP-SGIX", (GLenum) GL_VERTEX_PRECLIP_SGIX, "GL_VERTEX_PRECLIP_SGIX");
#endif
#if defined(GL_VIEWPORT)
defconsti(env, "GL-VIEWPORT", (GLenum) GL_VIEWPORT, "GL_VIEWPORT");
#endif
#if defined(GL_VIEWPORT_BOUNDS_RANGE)
defconsti(env, "GL-VIEWPORT-BOUNDS-RANGE", (GLenum) GL_VIEWPORT_BOUNDS_RANGE, "GL_VIEWPORT_BOUNDS_RANGE");
#endif
#if defined(GL_VIEWPORT_INDEX_PROVOKING_VERTEX)
defconsti(env, "GL-VIEWPORT-INDEX-PROVOKING-VERTEX", (GLenum) GL_VIEWPORT_INDEX_PROVOKING_VERTEX, "GL_VIEWPORT_INDEX_PROVOKING_VERTEX");
#endif
#if defined(GL_VIEWPORT_SUBPIXEL_BITS)
defconsti(env, "GL-VIEWPORT-SUBPIXEL-BITS", (GLenum) GL_VIEWPORT_SUBPIXEL_BITS, "GL_VIEWPORT_SUBPIXEL_BITS");
#endif
#if defined(GL_ZOOM_X)
defconsti(env, "GL-ZOOM-X", (GLenum) GL_ZOOM_X, "GL_ZOOM_X");
#endif
#if defined(GL_ZOOM_Y)
defconsti(env, "GL-ZOOM-Y", (GLenum) GL_ZOOM_Y, "GL_ZOOM_Y");
#endif
#if defined(GL_COLOR_ARRAY_POINTER)
defconsti(env, "GL-COLOR-ARRAY-POINTER", (GLenum) GL_COLOR_ARRAY_POINTER, "GL_COLOR_ARRAY_POINTER");
#endif
#if defined(GL_COLOR_ARRAY_POINTER_EXT)
defconsti(env, "GL-COLOR-ARRAY-POINTER-EXT", (GLenum) GL_COLOR_ARRAY_POINTER_EXT, "GL_COLOR_ARRAY_POINTER_EXT");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_POINTER)
defconsti(env, "GL-EDGE-FLAG-ARRAY-POINTER", (GLenum) GL_EDGE_FLAG_ARRAY_POINTER, "GL_EDGE_FLAG_ARRAY_POINTER");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_POINTER_EXT)
defconsti(env, "GL-EDGE-FLAG-ARRAY-POINTER-EXT", (GLenum) GL_EDGE_FLAG_ARRAY_POINTER_EXT, "GL_EDGE_FLAG_ARRAY_POINTER_EXT");
#endif
#if defined(GL_FEEDBACK_BUFFER_POINTER)
defconsti(env, "GL-FEEDBACK-BUFFER-POINTER", (GLenum) GL_FEEDBACK_BUFFER_POINTER, "GL_FEEDBACK_BUFFER_POINTER");
#endif
#if defined(GL_INDEX_ARRAY_POINTER)
defconsti(env, "GL-INDEX-ARRAY-POINTER", (GLenum) GL_INDEX_ARRAY_POINTER, "GL_INDEX_ARRAY_POINTER");
#endif
#if defined(GL_INDEX_ARRAY_POINTER_EXT)
defconsti(env, "GL-INDEX-ARRAY-POINTER-EXT", (GLenum) GL_INDEX_ARRAY_POINTER_EXT, "GL_INDEX_ARRAY_POINTER_EXT");
#endif
#if defined(GL_INSTRUMENT_BUFFER_POINTER_SGIX)
defconsti(env, "GL-INSTRUMENT-BUFFER-POINTER-SGIX", (GLenum) GL_INSTRUMENT_BUFFER_POINTER_SGIX, "GL_INSTRUMENT_BUFFER_POINTER_SGIX");
#endif
#if defined(GL_NORMAL_ARRAY_POINTER)
defconsti(env, "GL-NORMAL-ARRAY-POINTER", (GLenum) GL_NORMAL_ARRAY_POINTER, "GL_NORMAL_ARRAY_POINTER");
#endif
#if defined(GL_NORMAL_ARRAY_POINTER_EXT)
defconsti(env, "GL-NORMAL-ARRAY-POINTER-EXT", (GLenum) GL_NORMAL_ARRAY_POINTER_EXT, "GL_NORMAL_ARRAY_POINTER_EXT");
#endif
#if defined(GL_SELECTION_BUFFER_POINTER)
defconsti(env, "GL-SELECTION-BUFFER-POINTER", (GLenum) GL_SELECTION_BUFFER_POINTER, "GL_SELECTION_BUFFER_POINTER");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_POINTER)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-POINTER", (GLenum) GL_TEXTURE_COORD_ARRAY_POINTER, "GL_TEXTURE_COORD_ARRAY_POINTER");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_POINTER_EXT)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-POINTER-EXT", (GLenum) GL_TEXTURE_COORD_ARRAY_POINTER_EXT, "GL_TEXTURE_COORD_ARRAY_POINTER_EXT");
#endif
#if defined(GL_VERTEX_ARRAY_POINTER)
defconsti(env, "GL-VERTEX-ARRAY-POINTER", (GLenum) GL_VERTEX_ARRAY_POINTER, "GL_VERTEX_ARRAY_POINTER");
#endif
#if defined(GL_VERTEX_ARRAY_POINTER_EXT)
defconsti(env, "GL-VERTEX-ARRAY-POINTER-EXT", (GLenum) GL_VERTEX_ARRAY_POINTER_EXT, "GL_VERTEX_ARRAY_POINTER_EXT");
#endif
#if defined(GL_DEBUG_CALLBACK_FUNCTION)
defconsti(env, "GL-DEBUG-CALLBACK-FUNCTION", (GLenum) GL_DEBUG_CALLBACK_FUNCTION, "GL_DEBUG_CALLBACK_FUNCTION");
#endif
#if defined(GL_DEBUG_CALLBACK_USER_PARAM)
defconsti(env, "GL-DEBUG-CALLBACK-USER-PARAM", (GLenum) GL_DEBUG_CALLBACK_USER_PARAM, "GL_DEBUG_CALLBACK_USER_PARAM");
#endif
#if defined(GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS)
defconsti(env, "GL-DETAIL-TEXTURE-FUNC-POINTS-SGIS", (GLenum) GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS, "GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS");
#endif
#if defined(GL_DETAIL_TEXTURE_LEVEL_SGIS)
defconsti(env, "GL-DETAIL-TEXTURE-LEVEL-SGIS", (GLenum) GL_DETAIL_TEXTURE_LEVEL_SGIS, "GL_DETAIL_TEXTURE_LEVEL_SGIS");
#endif
#if defined(GL_DETAIL_TEXTURE_MODE_SGIS)
defconsti(env, "GL-DETAIL-TEXTURE-MODE-SGIS", (GLenum) GL_DETAIL_TEXTURE_MODE_SGIS, "GL_DETAIL_TEXTURE_MODE_SGIS");
#endif
#if defined(GL_DUAL_TEXTURE_SELECT_SGIS)
defconsti(env, "GL-DUAL-TEXTURE-SELECT-SGIS", (GLenum) GL_DUAL_TEXTURE_SELECT_SGIS, "GL_DUAL_TEXTURE_SELECT_SGIS");
#endif
#if defined(GL_GENERATE_MIPMAP_SGIS)
defconsti(env, "GL-GENERATE-MIPMAP-SGIS", (GLenum) GL_GENERATE_MIPMAP_SGIS, "GL_GENERATE_MIPMAP_SGIS");
#endif
#if defined(GL_POST_TEXTURE_FILTER_BIAS_SGIX)
defconsti(env, "GL-POST-TEXTURE-FILTER-BIAS-SGIX", (GLenum) GL_POST_TEXTURE_FILTER_BIAS_SGIX, "GL_POST_TEXTURE_FILTER_BIAS_SGIX");
#endif
#if defined(GL_POST_TEXTURE_FILTER_SCALE_SGIX)
defconsti(env, "GL-POST-TEXTURE-FILTER-SCALE-SGIX", (GLenum) GL_POST_TEXTURE_FILTER_SCALE_SGIX, "GL_POST_TEXTURE_FILTER_SCALE_SGIX");
#endif
#if defined(GL_QUAD_TEXTURE_SELECT_SGIS)
defconsti(env, "GL-QUAD-TEXTURE-SELECT-SGIS", (GLenum) GL_QUAD_TEXTURE_SELECT_SGIS, "GL_QUAD_TEXTURE_SELECT_SGIS");
#endif
#if defined(GL_SHADOW_AMBIENT_SGIX)
defconsti(env, "GL-SHADOW-AMBIENT-SGIX", (GLenum) GL_SHADOW_AMBIENT_SGIX, "GL_SHADOW_AMBIENT_SGIX");
#endif
#if defined(GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS)
defconsti(env, "GL-SHARPEN-TEXTURE-FUNC-POINTS-SGIS", (GLenum) GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS, "GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS");
#endif
#if defined(GL_TEXTURE_4DSIZE_SGIS)
defconsti(env, "GL-TEXTURE-4DSIZE-SGIS", (GLenum) GL_TEXTURE_4DSIZE_SGIS, "GL_TEXTURE_4DSIZE_SGIS");
#endif
#if defined(GL_TEXTURE_ALPHA_SIZE)
defconsti(env, "GL-TEXTURE-ALPHA-SIZE", (GLenum) GL_TEXTURE_ALPHA_SIZE, "GL_TEXTURE_ALPHA_SIZE");
#endif
#if defined(GL_TEXTURE_BASE_LEVEL_SGIS)
defconsti(env, "GL-TEXTURE-BASE-LEVEL-SGIS", (GLenum) GL_TEXTURE_BASE_LEVEL_SGIS, "GL_TEXTURE_BASE_LEVEL_SGIS");
#endif
#if defined(GL_TEXTURE_BLUE_SIZE)
defconsti(env, "GL-TEXTURE-BLUE-SIZE", (GLenum) GL_TEXTURE_BLUE_SIZE, "GL_TEXTURE_BLUE_SIZE");
#endif
#if defined(GL_TEXTURE_BORDER)
defconsti(env, "GL-TEXTURE-BORDER", (GLenum) GL_TEXTURE_BORDER, "GL_TEXTURE_BORDER");
#endif
#if defined(GL_TEXTURE_BORDER_COLOR)
defconsti(env, "GL-TEXTURE-BORDER-COLOR", (GLenum) GL_TEXTURE_BORDER_COLOR, "GL_TEXTURE_BORDER_COLOR");
#endif
#if defined(GL_TEXTURE_BORDER_COLOR_NV)
defconsti(env, "GL-TEXTURE-BORDER-COLOR-NV", (GLenum) GL_TEXTURE_BORDER_COLOR_NV, "GL_TEXTURE_BORDER_COLOR_NV");
#endif
#if defined(GL_TEXTURE_CLIPMAP_CENTER_SGIX)
defconsti(env, "GL-TEXTURE-CLIPMAP-CENTER-SGIX", (GLenum) GL_TEXTURE_CLIPMAP_CENTER_SGIX, "GL_TEXTURE_CLIPMAP_CENTER_SGIX");
#endif
#if defined(GL_TEXTURE_CLIPMAP_DEPTH_SGIX)
defconsti(env, "GL-TEXTURE-CLIPMAP-DEPTH-SGIX", (GLenum) GL_TEXTURE_CLIPMAP_DEPTH_SGIX, "GL_TEXTURE_CLIPMAP_DEPTH_SGIX");
#endif
#if defined(GL_TEXTURE_CLIPMAP_FRAME_SGIX)
defconsti(env, "GL-TEXTURE-CLIPMAP-FRAME-SGIX", (GLenum) GL_TEXTURE_CLIPMAP_FRAME_SGIX, "GL_TEXTURE_CLIPMAP_FRAME_SGIX");
#endif
#if defined(GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX)
defconsti(env, "GL-TEXTURE-CLIPMAP-LOD-OFFSET-SGIX", (GLenum) GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX, "GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX");
#endif
#if defined(GL_TEXTURE_CLIPMAP_OFFSET_SGIX)
defconsti(env, "GL-TEXTURE-CLIPMAP-OFFSET-SGIX", (GLenum) GL_TEXTURE_CLIPMAP_OFFSET_SGIX, "GL_TEXTURE_CLIPMAP_OFFSET_SGIX");
#endif
#if defined(GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX)
defconsti(env, "GL-TEXTURE-CLIPMAP-VIRTUAL-DEPTH-SGIX", (GLenum) GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX, "GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX");
#endif
#if defined(GL_TEXTURE_COMPARE_OPERATOR_SGIX)
defconsti(env, "GL-TEXTURE-COMPARE-OPERATOR-SGIX", (GLenum) GL_TEXTURE_COMPARE_OPERATOR_SGIX, "GL_TEXTURE_COMPARE_OPERATOR_SGIX");
#endif
#if defined(GL_TEXTURE_COMPARE_SGIX)
defconsti(env, "GL-TEXTURE-COMPARE-SGIX", (GLenum) GL_TEXTURE_COMPARE_SGIX, "GL_TEXTURE_COMPARE_SGIX");
#endif
#if defined(GL_TEXTURE_COMPONENTS)
defconsti(env, "GL-TEXTURE-COMPONENTS", (GLenum) GL_TEXTURE_COMPONENTS, "GL_TEXTURE_COMPONENTS");
#endif
#if defined(GL_TEXTURE_DEPTH_EXT)
defconsti(env, "GL-TEXTURE-DEPTH-EXT", (GLenum) GL_TEXTURE_DEPTH_EXT, "GL_TEXTURE_DEPTH_EXT");
#endif
#if defined(GL_TEXTURE_FILTER4_SIZE_SGIS)
defconsti(env, "GL-TEXTURE-FILTER4-SIZE-SGIS", (GLenum) GL_TEXTURE_FILTER4_SIZE_SGIS, "GL_TEXTURE_FILTER4_SIZE_SGIS");
#endif
#if defined(GL_TEXTURE_GEQUAL_R_SGIX)
defconsti(env, "GL-TEXTURE-GEQUAL-R-SGIX", (GLenum) GL_TEXTURE_GEQUAL_R_SGIX, "GL_TEXTURE_GEQUAL_R_SGIX");
#endif
#if defined(GL_TEXTURE_GREEN_SIZE)
defconsti(env, "GL-TEXTURE-GREEN-SIZE", (GLenum) GL_TEXTURE_GREEN_SIZE, "GL_TEXTURE_GREEN_SIZE");
#endif
#if defined(GL_TEXTURE_HEIGHT)
defconsti(env, "GL-TEXTURE-HEIGHT", (GLenum) GL_TEXTURE_HEIGHT, "GL_TEXTURE_HEIGHT");
#endif
#if defined(GL_TEXTURE_INTENSITY_SIZE)
defconsti(env, "GL-TEXTURE-INTENSITY-SIZE", (GLenum) GL_TEXTURE_INTENSITY_SIZE, "GL_TEXTURE_INTENSITY_SIZE");
#endif
#if defined(GL_TEXTURE_INTERNAL_FORMAT)
defconsti(env, "GL-TEXTURE-INTERNAL-FORMAT", (GLenum) GL_TEXTURE_INTERNAL_FORMAT, "GL_TEXTURE_INTERNAL_FORMAT");
#endif
#if defined(GL_TEXTURE_LEQUAL_R_SGIX)
defconsti(env, "GL-TEXTURE-LEQUAL-R-SGIX", (GLenum) GL_TEXTURE_LEQUAL_R_SGIX, "GL_TEXTURE_LEQUAL_R_SGIX");
#endif
#if defined(GL_TEXTURE_LOD_BIAS_R_SGIX)
defconsti(env, "GL-TEXTURE-LOD-BIAS-R-SGIX", (GLenum) GL_TEXTURE_LOD_BIAS_R_SGIX, "GL_TEXTURE_LOD_BIAS_R_SGIX");
#endif
#if defined(GL_TEXTURE_LOD_BIAS_S_SGIX)
defconsti(env, "GL-TEXTURE-LOD-BIAS-S-SGIX", (GLenum) GL_TEXTURE_LOD_BIAS_S_SGIX, "GL_TEXTURE_LOD_BIAS_S_SGIX");
#endif
#if defined(GL_TEXTURE_LOD_BIAS_T_SGIX)
defconsti(env, "GL-TEXTURE-LOD-BIAS-T-SGIX", (GLenum) GL_TEXTURE_LOD_BIAS_T_SGIX, "GL_TEXTURE_LOD_BIAS_T_SGIX");
#endif
#if defined(GL_TEXTURE_LUMINANCE_SIZE)
defconsti(env, "GL-TEXTURE-LUMINANCE-SIZE", (GLenum) GL_TEXTURE_LUMINANCE_SIZE, "GL_TEXTURE_LUMINANCE_SIZE");
#endif
#if defined(GL_TEXTURE_MAG_FILTER)
defconsti(env, "GL-TEXTURE-MAG-FILTER", (GLenum) GL_TEXTURE_MAG_FILTER, "GL_TEXTURE_MAG_FILTER");
#endif
#if defined(GL_TEXTURE_MAX_CLAMP_R_SGIX)
defconsti(env, "GL-TEXTURE-MAX-CLAMP-R-SGIX", (GLenum) GL_TEXTURE_MAX_CLAMP_R_SGIX, "GL_TEXTURE_MAX_CLAMP_R_SGIX");
#endif
#if defined(GL_TEXTURE_MAX_CLAMP_S_SGIX)
defconsti(env, "GL-TEXTURE-MAX-CLAMP-S-SGIX", (GLenum) GL_TEXTURE_MAX_CLAMP_S_SGIX, "GL_TEXTURE_MAX_CLAMP_S_SGIX");
#endif
#if defined(GL_TEXTURE_MAX_CLAMP_T_SGIX)
defconsti(env, "GL-TEXTURE-MAX-CLAMP-T-SGIX", (GLenum) GL_TEXTURE_MAX_CLAMP_T_SGIX, "GL_TEXTURE_MAX_CLAMP_T_SGIX");
#endif
#if defined(GL_TEXTURE_MAX_LEVEL_SGIS)
defconsti(env, "GL-TEXTURE-MAX-LEVEL-SGIS", (GLenum) GL_TEXTURE_MAX_LEVEL_SGIS, "GL_TEXTURE_MAX_LEVEL_SGIS");
#endif
#if defined(GL_TEXTURE_MAX_LOD_SGIS)
defconsti(env, "GL-TEXTURE-MAX-LOD-SGIS", (GLenum) GL_TEXTURE_MAX_LOD_SGIS, "GL_TEXTURE_MAX_LOD_SGIS");
#endif
#if defined(GL_TEXTURE_MIN_FILTER)
defconsti(env, "GL-TEXTURE-MIN-FILTER", (GLenum) GL_TEXTURE_MIN_FILTER, "GL_TEXTURE_MIN_FILTER");
#endif
#if defined(GL_TEXTURE_MIN_LOD_SGIS)
defconsti(env, "GL-TEXTURE-MIN-LOD-SGIS", (GLenum) GL_TEXTURE_MIN_LOD_SGIS, "GL_TEXTURE_MIN_LOD_SGIS");
#endif
#if defined(GL_TEXTURE_PRIORITY)
defconsti(env, "GL-TEXTURE-PRIORITY", (GLenum) GL_TEXTURE_PRIORITY, "GL_TEXTURE_PRIORITY");
#endif
#if defined(GL_TEXTURE_RED_SIZE)
defconsti(env, "GL-TEXTURE-RED-SIZE", (GLenum) GL_TEXTURE_RED_SIZE, "GL_TEXTURE_RED_SIZE");
#endif
#if defined(GL_TEXTURE_RESIDENT)
defconsti(env, "GL-TEXTURE-RESIDENT", (GLenum) GL_TEXTURE_RESIDENT, "GL_TEXTURE_RESIDENT");
#endif
#if defined(GL_TEXTURE_WIDTH)
defconsti(env, "GL-TEXTURE-WIDTH", (GLenum) GL_TEXTURE_WIDTH, "GL_TEXTURE_WIDTH");
#endif
#if defined(GL_TEXTURE_WRAP_Q_SGIS)
defconsti(env, "GL-TEXTURE-WRAP-Q-SGIS", (GLenum) GL_TEXTURE_WRAP_Q_SGIS, "GL_TEXTURE_WRAP_Q_SGIS");
#endif
#if defined(GL_TEXTURE_WRAP_R_EXT)
defconsti(env, "GL-TEXTURE-WRAP-R-EXT", (GLenum) GL_TEXTURE_WRAP_R_EXT, "GL_TEXTURE_WRAP_R_EXT");
#endif
#if defined(GL_TEXTURE_WRAP_S)
defconsti(env, "GL-TEXTURE-WRAP-S", (GLenum) GL_TEXTURE_WRAP_S, "GL_TEXTURE_WRAP_S");
#endif
#if defined(GL_TEXTURE_WRAP_T)
defconsti(env, "GL-TEXTURE-WRAP-T", (GLenum) GL_TEXTURE_WRAP_T, "GL_TEXTURE_WRAP_T");
#endif
#if defined(GL_DONT_CARE)
defconsti(env, "GL-DONT-CARE", (GLenum) GL_DONT_CARE, "GL_DONT_CARE");
#endif
#if defined(GL_FASTEST)
defconsti(env, "GL-FASTEST", (GLenum) GL_FASTEST, "GL_FASTEST");
#endif
#if defined(GL_NICEST)
defconsti(env, "GL-NICEST", (GLenum) GL_NICEST, "GL_NICEST");
#endif
#if defined(GL_ALLOW_DRAW_FRG_HINT_PGI)
defconsti(env, "GL-ALLOW-DRAW-FRG-HINT-PGI", (GLenum) GL_ALLOW_DRAW_FRG_HINT_PGI, "GL_ALLOW_DRAW_FRG_HINT_PGI");
#endif
#if defined(GL_ALLOW_DRAW_MEM_HINT_PGI)
defconsti(env, "GL-ALLOW-DRAW-MEM-HINT-PGI", (GLenum) GL_ALLOW_DRAW_MEM_HINT_PGI, "GL_ALLOW_DRAW_MEM_HINT_PGI");
#endif
#if defined(GL_ALLOW_DRAW_OBJ_HINT_PGI)
defconsti(env, "GL-ALLOW-DRAW-OBJ-HINT-PGI", (GLenum) GL_ALLOW_DRAW_OBJ_HINT_PGI, "GL_ALLOW_DRAW_OBJ_HINT_PGI");
#endif
#if defined(GL_ALLOW_DRAW_WIN_HINT_PGI)
defconsti(env, "GL-ALLOW-DRAW-WIN-HINT-PGI", (GLenum) GL_ALLOW_DRAW_WIN_HINT_PGI, "GL_ALLOW_DRAW_WIN_HINT_PGI");
#endif
#if defined(GL_ALWAYS_FAST_HINT_PGI)
defconsti(env, "GL-ALWAYS-FAST-HINT-PGI", (GLenum) GL_ALWAYS_FAST_HINT_PGI, "GL_ALWAYS_FAST_HINT_PGI");
#endif
#if defined(GL_ALWAYS_SOFT_HINT_PGI)
defconsti(env, "GL-ALWAYS-SOFT-HINT-PGI", (GLenum) GL_ALWAYS_SOFT_HINT_PGI, "GL_ALWAYS_SOFT_HINT_PGI");
#endif
#if defined(GL_BACK_NORMALS_HINT_PGI)
defconsti(env, "GL-BACK-NORMALS-HINT-PGI", (GLenum) GL_BACK_NORMALS_HINT_PGI, "GL_BACK_NORMALS_HINT_PGI");
#endif
#if defined(GL_BINNING_CONTROL_HINT_QCOM)
defconsti(env, "GL-BINNING-CONTROL-HINT-QCOM", (GLenum) GL_BINNING_CONTROL_HINT_QCOM, "GL_BINNING_CONTROL_HINT_QCOM");
#endif
#if defined(GL_CLIP_FAR_HINT_PGI)
defconsti(env, "GL-CLIP-FAR-HINT-PGI", (GLenum) GL_CLIP_FAR_HINT_PGI, "GL_CLIP_FAR_HINT_PGI");
#endif
#if defined(GL_CLIP_NEAR_HINT_PGI)
defconsti(env, "GL-CLIP-NEAR-HINT-PGI", (GLenum) GL_CLIP_NEAR_HINT_PGI, "GL_CLIP_NEAR_HINT_PGI");
#endif
#if defined(GL_CLIP_VOLUME_CLIPPING_HINT_EXT)
defconsti(env, "GL-CLIP-VOLUME-CLIPPING-HINT-EXT", (GLenum) GL_CLIP_VOLUME_CLIPPING_HINT_EXT, "GL_CLIP_VOLUME_CLIPPING_HINT_EXT");
#endif
#if defined(GL_CONSERVE_MEMORY_HINT_PGI)
defconsti(env, "GL-CONSERVE-MEMORY-HINT-PGI", (GLenum) GL_CONSERVE_MEMORY_HINT_PGI, "GL_CONSERVE_MEMORY_HINT_PGI");
#endif
#if defined(GL_CONVOLUTION_HINT_SGIX)
defconsti(env, "GL-CONVOLUTION-HINT-SGIX", (GLenum) GL_CONVOLUTION_HINT_SGIX, "GL_CONVOLUTION_HINT_SGIX");
#endif
#if defined(GL_FOG_HINT)
defconsti(env, "GL-FOG-HINT", (GLenum) GL_FOG_HINT, "GL_FOG_HINT");
#endif
#if defined(GL_FRAGMENT_SHADER_DERIVATIVE_HINT)
defconsti(env, "GL-FRAGMENT-SHADER-DERIVATIVE-HINT", (GLenum) GL_FRAGMENT_SHADER_DERIVATIVE_HINT, "GL_FRAGMENT_SHADER_DERIVATIVE_HINT");
#endif
#if defined(GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB)
defconsti(env, "GL-FRAGMENT-SHADER-DERIVATIVE-HINT-ARB", (GLenum) GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB, "GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB");
#endif
#if defined(GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES)
defconsti(env, "GL-FRAGMENT-SHADER-DERIVATIVE-HINT-OES", (GLenum) GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES, "GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES");
#endif
#if defined(GL_FULL_STIPPLE_HINT_PGI)
defconsti(env, "GL-FULL-STIPPLE-HINT-PGI", (GLenum) GL_FULL_STIPPLE_HINT_PGI, "GL_FULL_STIPPLE_HINT_PGI");
#endif
#if defined(GL_GENERATE_MIPMAP_HINT)
defconsti(env, "GL-GENERATE-MIPMAP-HINT", (GLenum) GL_GENERATE_MIPMAP_HINT, "GL_GENERATE_MIPMAP_HINT");
#endif
#if defined(GL_GENERATE_MIPMAP_HINT_SGIS)
defconsti(env, "GL-GENERATE-MIPMAP-HINT-SGIS", (GLenum) GL_GENERATE_MIPMAP_HINT_SGIS, "GL_GENERATE_MIPMAP_HINT_SGIS");
#endif
#if defined(GL_LINE_QUALITY_HINT_SGIX)
defconsti(env, "GL-LINE-QUALITY-HINT-SGIX", (GLenum) GL_LINE_QUALITY_HINT_SGIX, "GL_LINE_QUALITY_HINT_SGIX");
#endif
#if defined(GL_LINE_SMOOTH_HINT)
defconsti(env, "GL-LINE-SMOOTH-HINT", (GLenum) GL_LINE_SMOOTH_HINT, "GL_LINE_SMOOTH_HINT");
#endif
#if defined(GL_MATERIAL_SIDE_HINT_PGI)
defconsti(env, "GL-MATERIAL-SIDE-HINT-PGI", (GLenum) GL_MATERIAL_SIDE_HINT_PGI, "GL_MATERIAL_SIDE_HINT_PGI");
#endif
#if defined(GL_MAX_VERTEX_HINT_PGI)
defconsti(env, "GL-MAX-VERTEX-HINT-PGI", (GLenum) GL_MAX_VERTEX_HINT_PGI, "GL_MAX_VERTEX_HINT_PGI");
#endif
#if defined(GL_MULTISAMPLE_FILTER_HINT_NV)
defconsti(env, "GL-MULTISAMPLE-FILTER-HINT-NV", (GLenum) GL_MULTISAMPLE_FILTER_HINT_NV, "GL_MULTISAMPLE_FILTER_HINT_NV");
#endif
#if defined(GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI)
defconsti(env, "GL-NATIVE-GRAPHICS-BEGIN-HINT-PGI", (GLenum) GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI, "GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI");
#endif
#if defined(GL_NATIVE_GRAPHICS_END_HINT_PGI)
defconsti(env, "GL-NATIVE-GRAPHICS-END-HINT-PGI", (GLenum) GL_NATIVE_GRAPHICS_END_HINT_PGI, "GL_NATIVE_GRAPHICS_END_HINT_PGI");
#endif
#if defined(GL_PACK_CMYK_HINT_EXT)
defconsti(env, "GL-PACK-CMYK-HINT-EXT", (GLenum) GL_PACK_CMYK_HINT_EXT, "GL_PACK_CMYK_HINT_EXT");
#endif
#if defined(GL_PERSPECTIVE_CORRECTION_HINT)
defconsti(env, "GL-PERSPECTIVE-CORRECTION-HINT", (GLenum) GL_PERSPECTIVE_CORRECTION_HINT, "GL_PERSPECTIVE_CORRECTION_HINT");
#endif
#if defined(GL_PHONG_HINT_WIN)
defconsti(env, "GL-PHONG-HINT-WIN", (GLenum) GL_PHONG_HINT_WIN, "GL_PHONG_HINT_WIN");
#endif
#if defined(GL_POINT_SMOOTH_HINT)
defconsti(env, "GL-POINT-SMOOTH-HINT", (GLenum) GL_POINT_SMOOTH_HINT, "GL_POINT_SMOOTH_HINT");
#endif
#if defined(GL_POLYGON_SMOOTH_HINT)
defconsti(env, "GL-POLYGON-SMOOTH-HINT", (GLenum) GL_POLYGON_SMOOTH_HINT, "GL_POLYGON_SMOOTH_HINT");
#endif
#if defined(GL_PREFER_DOUBLEBUFFER_HINT_PGI)
defconsti(env, "GL-PREFER-DOUBLEBUFFER-HINT-PGI", (GLenum) GL_PREFER_DOUBLEBUFFER_HINT_PGI, "GL_PREFER_DOUBLEBUFFER_HINT_PGI");
#endif
#if defined(GL_PROGRAM_BINARY_RETRIEVABLE_HINT)
defconsti(env, "GL-PROGRAM-BINARY-RETRIEVABLE-HINT", (GLenum) GL_PROGRAM_BINARY_RETRIEVABLE_HINT, "GL_PROGRAM_BINARY_RETRIEVABLE_HINT");
#endif
#if defined(GL_RECLAIM_MEMORY_HINT_PGI)
defconsti(env, "GL-RECLAIM-MEMORY-HINT-PGI", (GLenum) GL_RECLAIM_MEMORY_HINT_PGI, "GL_RECLAIM_MEMORY_HINT_PGI");
#endif
#if defined(GL_SCALEBIAS_HINT_SGIX)
defconsti(env, "GL-SCALEBIAS-HINT-SGIX", (GLenum) GL_SCALEBIAS_HINT_SGIX, "GL_SCALEBIAS_HINT_SGIX");
#endif
#if defined(GL_STRICT_DEPTHFUNC_HINT_PGI)
defconsti(env, "GL-STRICT-DEPTHFUNC-HINT-PGI", (GLenum) GL_STRICT_DEPTHFUNC_HINT_PGI, "GL_STRICT_DEPTHFUNC_HINT_PGI");
#endif
#if defined(GL_STRICT_LIGHTING_HINT_PGI)
defconsti(env, "GL-STRICT-LIGHTING-HINT-PGI", (GLenum) GL_STRICT_LIGHTING_HINT_PGI, "GL_STRICT_LIGHTING_HINT_PGI");
#endif
#if defined(GL_STRICT_SCISSOR_HINT_PGI)
defconsti(env, "GL-STRICT-SCISSOR-HINT-PGI", (GLenum) GL_STRICT_SCISSOR_HINT_PGI, "GL_STRICT_SCISSOR_HINT_PGI");
#endif
#if defined(GL_TEXTURE_COMPRESSION_HINT)
defconsti(env, "GL-TEXTURE-COMPRESSION-HINT", (GLenum) GL_TEXTURE_COMPRESSION_HINT, "GL_TEXTURE_COMPRESSION_HINT");
#endif
#if defined(GL_TEXTURE_COMPRESSION_HINT_ARB)
defconsti(env, "GL-TEXTURE-COMPRESSION-HINT-ARB", (GLenum) GL_TEXTURE_COMPRESSION_HINT_ARB, "GL_TEXTURE_COMPRESSION_HINT_ARB");
#endif
#if defined(GL_TEXTURE_MULTI_BUFFER_HINT_SGIX)
defconsti(env, "GL-TEXTURE-MULTI-BUFFER-HINT-SGIX", (GLenum) GL_TEXTURE_MULTI_BUFFER_HINT_SGIX, "GL_TEXTURE_MULTI_BUFFER_HINT_SGIX");
#endif
#if defined(GL_TEXTURE_STORAGE_HINT_APPLE)
defconsti(env, "GL-TEXTURE-STORAGE-HINT-APPLE", (GLenum) GL_TEXTURE_STORAGE_HINT_APPLE, "GL_TEXTURE_STORAGE_HINT_APPLE");
#endif
#if defined(GL_TRANSFORM_HINT_APPLE)
defconsti(env, "GL-TRANSFORM-HINT-APPLE", (GLenum) GL_TRANSFORM_HINT_APPLE, "GL_TRANSFORM_HINT_APPLE");
#endif
#if defined(GL_UNPACK_CMYK_HINT_EXT)
defconsti(env, "GL-UNPACK-CMYK-HINT-EXT", (GLenum) GL_UNPACK_CMYK_HINT_EXT, "GL_UNPACK_CMYK_HINT_EXT");
#endif
#if defined(GL_VERTEX_ARRAY_STORAGE_HINT_APPLE)
defconsti(env, "GL-VERTEX-ARRAY-STORAGE-HINT-APPLE", (GLenum) GL_VERTEX_ARRAY_STORAGE_HINT_APPLE, "GL_VERTEX_ARRAY_STORAGE_HINT_APPLE");
#endif
#if defined(GL_VERTEX_CONSISTENT_HINT_PGI)
defconsti(env, "GL-VERTEX-CONSISTENT-HINT-PGI", (GLenum) GL_VERTEX_CONSISTENT_HINT_PGI, "GL_VERTEX_CONSISTENT_HINT_PGI");
#endif
#if defined(GL_VERTEX_DATA_HINT_PGI)
defconsti(env, "GL-VERTEX-DATA-HINT-PGI", (GLenum) GL_VERTEX_DATA_HINT_PGI, "GL_VERTEX_DATA_HINT_PGI");
#endif
#if defined(GL_VERTEX_PRECLIP_HINT_SGIX)
defconsti(env, "GL-VERTEX-PRECLIP-HINT-SGIX", (GLenum) GL_VERTEX_PRECLIP_HINT_SGIX, "GL_VERTEX_PRECLIP_HINT_SGIX");
#endif
#if defined(GL_VERTEX_PRECLIP_SGIX)
defconsti(env, "GL-VERTEX-PRECLIP-SGIX", (GLenum) GL_VERTEX_PRECLIP_SGIX, "GL_VERTEX_PRECLIP_SGIX");
#endif
#if defined(GL_WIDE_LINE_HINT_PGI)
defconsti(env, "GL-WIDE-LINE-HINT-PGI", (GLenum) GL_WIDE_LINE_HINT_PGI, "GL_WIDE_LINE_HINT_PGI");
#endif
#if defined(GL_HISTOGRAM)
defconsti(env, "GL-HISTOGRAM", (GLenum) GL_HISTOGRAM, "GL_HISTOGRAM");
#endif
#if defined(GL_HISTOGRAM_EXT)
defconsti(env, "GL-HISTOGRAM-EXT", (GLenum) GL_HISTOGRAM_EXT, "GL_HISTOGRAM_EXT");
#endif
#if defined(GL_PROXY_HISTOGRAM)
defconsti(env, "GL-PROXY-HISTOGRAM", (GLenum) GL_PROXY_HISTOGRAM, "GL_PROXY_HISTOGRAM");
#endif
#if defined(GL_PROXY_HISTOGRAM_EXT)
defconsti(env, "GL-PROXY-HISTOGRAM-EXT", (GLenum) GL_PROXY_HISTOGRAM_EXT, "GL_PROXY_HISTOGRAM_EXT");
#endif
#if defined(GL_DOUBLE)
defconsti(env, "GL-DOUBLE", (GLenum) GL_DOUBLE, "GL_DOUBLE");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_INT)
defconsti(env, "GL-INT", (GLenum) GL_INT, "GL_INT");
#endif
#if defined(GL_SHORT)
defconsti(env, "GL-SHORT", (GLenum) GL_SHORT, "GL_SHORT");
#endif
#if defined(GL_C3F_V3F)
defconsti(env, "GL-C3F-V3F", (GLenum) GL_C3F_V3F, "GL_C3F_V3F");
#endif
#if defined(GL_C4F_N3F_V3F)
defconsti(env, "GL-C4F-N3F-V3F", (GLenum) GL_C4F_N3F_V3F, "GL_C4F_N3F_V3F");
#endif
#if defined(GL_C4UB_V2F)
defconsti(env, "GL-C4UB-V2F", (GLenum) GL_C4UB_V2F, "GL_C4UB_V2F");
#endif
#if defined(GL_C4UB_V3F)
defconsti(env, "GL-C4UB-V3F", (GLenum) GL_C4UB_V3F, "GL_C4UB_V3F");
#endif
#if defined(GL_N3F_V3F)
defconsti(env, "GL-N3F-V3F", (GLenum) GL_N3F_V3F, "GL_N3F_V3F");
#endif
#if defined(GL_T2F_C3F_V3F)
defconsti(env, "GL-T2F-C3F-V3F", (GLenum) GL_T2F_C3F_V3F, "GL_T2F_C3F_V3F");
#endif
#if defined(GL_T2F_C4F_N3F_V3F)
defconsti(env, "GL-T2F-C4F-N3F-V3F", (GLenum) GL_T2F_C4F_N3F_V3F, "GL_T2F_C4F_N3F_V3F");
#endif
#if defined(GL_T2F_C4UB_V3F)
defconsti(env, "GL-T2F-C4UB-V3F", (GLenum) GL_T2F_C4UB_V3F, "GL_T2F_C4UB_V3F");
#endif
#if defined(GL_T2F_N3F_V3F)
defconsti(env, "GL-T2F-N3F-V3F", (GLenum) GL_T2F_N3F_V3F, "GL_T2F_N3F_V3F");
#endif
#if defined(GL_T2F_V3F)
defconsti(env, "GL-T2F-V3F", (GLenum) GL_T2F_V3F, "GL_T2F_V3F");
#endif
#if defined(GL_T4F_C4F_N3F_V4F)
defconsti(env, "GL-T4F-C4F-N3F-V4F", (GLenum) GL_T4F_C4F_N3F_V4F, "GL_T4F_C4F_N3F_V4F");
#endif
#if defined(GL_T4F_V4F)
defconsti(env, "GL-T4F-V4F", (GLenum) GL_T4F_V4F, "GL_T4F_V4F");
#endif
#if defined(GL_V2F)
defconsti(env, "GL-V2F", (GLenum) GL_V2F, "GL_V2F");
#endif
#if defined(GL_V3F)
defconsti(env, "GL-V3F", (GLenum) GL_V3F, "GL_V3F");
#endif
#if defined(GL_ADD)
defconsti(env, "GL-ADD", (GLenum) GL_ADD, "GL_ADD");
#endif
#if defined(GL_MODULATE)
defconsti(env, "GL-MODULATE", (GLenum) GL_MODULATE, "GL_MODULATE");
#endif
#if defined(GL_REPLACE)
defconsti(env, "GL-REPLACE", (GLenum) GL_REPLACE, "GL_REPLACE");
#endif
#if defined(GL_LIGHT_ENV_MODE_SGIX)
defconsti(env, "GL-LIGHT-ENV-MODE-SGIX", (GLenum) GL_LIGHT_ENV_MODE_SGIX, "GL_LIGHT_ENV_MODE_SGIX");
#endif
#if defined(GL_SEPARATE_SPECULAR_COLOR)
defconsti(env, "GL-SEPARATE-SPECULAR-COLOR", (GLenum) GL_SEPARATE_SPECULAR_COLOR, "GL_SEPARATE_SPECULAR_COLOR");
#endif
#if defined(GL_SEPARATE_SPECULAR_COLOR_EXT)
defconsti(env, "GL-SEPARATE-SPECULAR-COLOR-EXT", (GLenum) GL_SEPARATE_SPECULAR_COLOR_EXT, "GL_SEPARATE_SPECULAR_COLOR_EXT");
#endif
#if defined(GL_SINGLE_COLOR)
defconsti(env, "GL-SINGLE-COLOR", (GLenum) GL_SINGLE_COLOR, "GL_SINGLE_COLOR");
#endif
#if defined(GL_SINGLE_COLOR_EXT)
defconsti(env, "GL-SINGLE-COLOR-EXT", (GLenum) GL_SINGLE_COLOR_EXT, "GL_SINGLE_COLOR_EXT");
#endif
#if defined(GL_LIGHT_MODEL_AMBIENT)
defconsti(env, "GL-LIGHT-MODEL-AMBIENT", (GLenum) GL_LIGHT_MODEL_AMBIENT, "GL_LIGHT_MODEL_AMBIENT");
#endif
#if defined(GL_LIGHT_MODEL_COLOR_CONTROL)
defconsti(env, "GL-LIGHT-MODEL-COLOR-CONTROL", (GLenum) GL_LIGHT_MODEL_COLOR_CONTROL, "GL_LIGHT_MODEL_COLOR_CONTROL");
#endif
#if defined(GL_LIGHT_MODEL_COLOR_CONTROL_EXT)
defconsti(env, "GL-LIGHT-MODEL-COLOR-CONTROL-EXT", (GLenum) GL_LIGHT_MODEL_COLOR_CONTROL_EXT, "GL_LIGHT_MODEL_COLOR_CONTROL_EXT");
#endif
#if defined(GL_LIGHT_MODEL_LOCAL_VIEWER)
defconsti(env, "GL-LIGHT-MODEL-LOCAL-VIEWER", (GLenum) GL_LIGHT_MODEL_LOCAL_VIEWER, "GL_LIGHT_MODEL_LOCAL_VIEWER");
#endif
#if defined(GL_LIGHT_MODEL_TWO_SIDE)
defconsti(env, "GL-LIGHT-MODEL-TWO-SIDE", (GLenum) GL_LIGHT_MODEL_TWO_SIDE, "GL_LIGHT_MODEL_TWO_SIDE");
#endif
#if defined(GL_FRAGMENT_LIGHT0_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT0-SGIX", (GLenum) GL_FRAGMENT_LIGHT0_SGIX, "GL_FRAGMENT_LIGHT0_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT1_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT1-SGIX", (GLenum) GL_FRAGMENT_LIGHT1_SGIX, "GL_FRAGMENT_LIGHT1_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT2_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT2-SGIX", (GLenum) GL_FRAGMENT_LIGHT2_SGIX, "GL_FRAGMENT_LIGHT2_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT3_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT3-SGIX", (GLenum) GL_FRAGMENT_LIGHT3_SGIX, "GL_FRAGMENT_LIGHT3_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT4_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT4-SGIX", (GLenum) GL_FRAGMENT_LIGHT4_SGIX, "GL_FRAGMENT_LIGHT4_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT5_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT5-SGIX", (GLenum) GL_FRAGMENT_LIGHT5_SGIX, "GL_FRAGMENT_LIGHT5_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT6_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT6-SGIX", (GLenum) GL_FRAGMENT_LIGHT6_SGIX, "GL_FRAGMENT_LIGHT6_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT7_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT7-SGIX", (GLenum) GL_FRAGMENT_LIGHT7_SGIX, "GL_FRAGMENT_LIGHT7_SGIX");
#endif
#if defined(GL_LIGHT0)
defconsti(env, "GL-LIGHT0", (GLenum) GL_LIGHT0, "GL_LIGHT0");
#endif
#if defined(GL_LIGHT1)
defconsti(env, "GL-LIGHT1", (GLenum) GL_LIGHT1, "GL_LIGHT1");
#endif
#if defined(GL_LIGHT2)
defconsti(env, "GL-LIGHT2", (GLenum) GL_LIGHT2, "GL_LIGHT2");
#endif
#if defined(GL_LIGHT3)
defconsti(env, "GL-LIGHT3", (GLenum) GL_LIGHT3, "GL_LIGHT3");
#endif
#if defined(GL_LIGHT4)
defconsti(env, "GL-LIGHT4", (GLenum) GL_LIGHT4, "GL_LIGHT4");
#endif
#if defined(GL_LIGHT5)
defconsti(env, "GL-LIGHT5", (GLenum) GL_LIGHT5, "GL_LIGHT5");
#endif
#if defined(GL_LIGHT6)
defconsti(env, "GL-LIGHT6", (GLenum) GL_LIGHT6, "GL_LIGHT6");
#endif
#if defined(GL_LIGHT7)
defconsti(env, "GL-LIGHT7", (GLenum) GL_LIGHT7, "GL_LIGHT7");
#endif
#if defined(GL_AMBIENT)
defconsti(env, "GL-AMBIENT", (GLenum) GL_AMBIENT, "GL_AMBIENT");
#endif
#if defined(GL_CONSTANT_ATTENUATION)
defconsti(env, "GL-CONSTANT-ATTENUATION", (GLenum) GL_CONSTANT_ATTENUATION, "GL_CONSTANT_ATTENUATION");
#endif
#if defined(GL_DIFFUSE)
defconsti(env, "GL-DIFFUSE", (GLenum) GL_DIFFUSE, "GL_DIFFUSE");
#endif
#if defined(GL_LINEAR_ATTENUATION)
defconsti(env, "GL-LINEAR-ATTENUATION", (GLenum) GL_LINEAR_ATTENUATION, "GL_LINEAR_ATTENUATION");
#endif
#if defined(GL_POSITION)
defconsti(env, "GL-POSITION", (GLenum) GL_POSITION, "GL_POSITION");
#endif
#if defined(GL_QUADRATIC_ATTENUATION)
defconsti(env, "GL-QUADRATIC-ATTENUATION", (GLenum) GL_QUADRATIC_ATTENUATION, "GL_QUADRATIC_ATTENUATION");
#endif
#if defined(GL_SPECULAR)
defconsti(env, "GL-SPECULAR", (GLenum) GL_SPECULAR, "GL_SPECULAR");
#endif
#if defined(GL_SPOT_CUTOFF)
defconsti(env, "GL-SPOT-CUTOFF", (GLenum) GL_SPOT_CUTOFF, "GL_SPOT_CUTOFF");
#endif
#if defined(GL_SPOT_DIRECTION)
defconsti(env, "GL-SPOT-DIRECTION", (GLenum) GL_SPOT_DIRECTION, "GL_SPOT_DIRECTION");
#endif
#if defined(GL_SPOT_EXPONENT)
defconsti(env, "GL-SPOT-EXPONENT", (GLenum) GL_SPOT_EXPONENT, "GL_SPOT_EXPONENT");
#endif
#if defined(GL_COMPILE)
defconsti(env, "GL-COMPILE", (GLenum) GL_COMPILE, "GL_COMPILE");
#endif
#if defined(GL_COMPILE_AND_EXECUTE)
defconsti(env, "GL-COMPILE-AND-EXECUTE", (GLenum) GL_COMPILE_AND_EXECUTE, "GL_COMPILE_AND_EXECUTE");
#endif
#if defined(GL_2_BYTES)
defconsti(env, "GL-2-BYTES", (GLenum) GL_2_BYTES, "GL_2_BYTES");
#endif
#if defined(GL_3_BYTES)
defconsti(env, "GL-3-BYTES", (GLenum) GL_3_BYTES, "GL_3_BYTES");
#endif
#if defined(GL_4_BYTES)
defconsti(env, "GL-4-BYTES", (GLenum) GL_4_BYTES, "GL_4_BYTES");
#endif
#if defined(GL_BYTE)
defconsti(env, "GL-BYTE", (GLenum) GL_BYTE, "GL_BYTE");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_INT)
defconsti(env, "GL-INT", (GLenum) GL_INT, "GL_INT");
#endif
#if defined(GL_SHORT)
defconsti(env, "GL-SHORT", (GLenum) GL_SHORT, "GL_SHORT");
#endif
#if defined(GL_UNSIGNED_BYTE)
defconsti(env, "GL-UNSIGNED-BYTE", (GLenum) GL_UNSIGNED_BYTE, "GL_UNSIGNED_BYTE");
#endif
#if defined(GL_UNSIGNED_INT)
defconsti(env, "GL-UNSIGNED-INT", (GLenum) GL_UNSIGNED_INT, "GL_UNSIGNED_INT");
#endif
#if defined(GL_UNSIGNED_SHORT)
defconsti(env, "GL-UNSIGNED-SHORT", (GLenum) GL_UNSIGNED_SHORT, "GL_UNSIGNED_SHORT");
#endif
#if defined(GL_LIST_PRIORITY_SGIX)
defconsti(env, "GL-LIST-PRIORITY-SGIX", (GLenum) GL_LIST_PRIORITY_SGIX, "GL_LIST_PRIORITY_SGIX");
#endif
#if defined(GL_AND)
defconsti(env, "GL-AND", (GLenum) GL_AND, "GL_AND");
#endif
#if defined(GL_AND_INVERTED)
defconsti(env, "GL-AND-INVERTED", (GLenum) GL_AND_INVERTED, "GL_AND_INVERTED");
#endif
#if defined(GL_AND_REVERSE)
defconsti(env, "GL-AND-REVERSE", (GLenum) GL_AND_REVERSE, "GL_AND_REVERSE");
#endif
#if defined(GL_CLEAR)
defconsti(env, "GL-CLEAR", (GLenum) GL_CLEAR, "GL_CLEAR");
#endif
#if defined(GL_COPY)
defconsti(env, "GL-COPY", (GLenum) GL_COPY, "GL_COPY");
#endif
#if defined(GL_COPY_INVERTED)
defconsti(env, "GL-COPY-INVERTED", (GLenum) GL_COPY_INVERTED, "GL_COPY_INVERTED");
#endif
#if defined(GL_EQUIV)
defconsti(env, "GL-EQUIV", (GLenum) GL_EQUIV, "GL_EQUIV");
#endif
#if defined(GL_INVERT)
defconsti(env, "GL-INVERT", (GLenum) GL_INVERT, "GL_INVERT");
#endif
#if defined(GL_NAND)
defconsti(env, "GL-NAND", (GLenum) GL_NAND, "GL_NAND");
#endif
#if defined(GL_NOOP)
defconsti(env, "GL-NOOP", (GLenum) GL_NOOP, "GL_NOOP");
#endif
#if defined(GL_NOR)
defconsti(env, "GL-NOR", (GLenum) GL_NOR, "GL_NOR");
#endif
#if defined(GL_OR)
defconsti(env, "GL-OR", (GLenum) GL_OR, "GL_OR");
#endif
#if defined(GL_OR_INVERTED)
defconsti(env, "GL-OR-INVERTED", (GLenum) GL_OR_INVERTED, "GL_OR_INVERTED");
#endif
#if defined(GL_OR_REVERSE)
defconsti(env, "GL-OR-REVERSE", (GLenum) GL_OR_REVERSE, "GL_OR_REVERSE");
#endif
#if defined(GL_SET)
defconsti(env, "GL-SET", (GLenum) GL_SET, "GL_SET");
#endif
#if defined(GL_XOR)
defconsti(env, "GL-XOR", (GLenum) GL_XOR, "GL_XOR");
#endif
#if defined(GL_MAP_COHERENT_BIT)
defconsti(env, "GL-MAP-COHERENT-BIT", (GLenum) GL_MAP_COHERENT_BIT, "GL_MAP_COHERENT_BIT");
#endif
#if defined(GL_MAP_COHERENT_BIT_EXT)
defconsti(env, "GL-MAP-COHERENT-BIT-EXT", (GLenum) GL_MAP_COHERENT_BIT_EXT, "GL_MAP_COHERENT_BIT_EXT");
#endif
#if defined(GL_MAP_FLUSH_EXPLICIT_BIT)
defconsti(env, "GL-MAP-FLUSH-EXPLICIT-BIT", (GLenum) GL_MAP_FLUSH_EXPLICIT_BIT, "GL_MAP_FLUSH_EXPLICIT_BIT");
#endif
#if defined(GL_MAP_FLUSH_EXPLICIT_BIT_EXT)
defconsti(env, "GL-MAP-FLUSH-EXPLICIT-BIT-EXT", (GLenum) GL_MAP_FLUSH_EXPLICIT_BIT_EXT, "GL_MAP_FLUSH_EXPLICIT_BIT_EXT");
#endif
#if defined(GL_MAP_INVALIDATE_BUFFER_BIT)
defconsti(env, "GL-MAP-INVALIDATE-BUFFER-BIT", (GLenum) GL_MAP_INVALIDATE_BUFFER_BIT, "GL_MAP_INVALIDATE_BUFFER_BIT");
#endif
#if defined(GL_MAP_INVALIDATE_BUFFER_BIT_EXT)
defconsti(env, "GL-MAP-INVALIDATE-BUFFER-BIT-EXT", (GLenum) GL_MAP_INVALIDATE_BUFFER_BIT_EXT, "GL_MAP_INVALIDATE_BUFFER_BIT_EXT");
#endif
#if defined(GL_MAP_INVALIDATE_RANGE_BIT)
defconsti(env, "GL-MAP-INVALIDATE-RANGE-BIT", (GLenum) GL_MAP_INVALIDATE_RANGE_BIT, "GL_MAP_INVALIDATE_RANGE_BIT");
#endif
#if defined(GL_MAP_INVALIDATE_RANGE_BIT_EXT)
defconsti(env, "GL-MAP-INVALIDATE-RANGE-BIT-EXT", (GLenum) GL_MAP_INVALIDATE_RANGE_BIT_EXT, "GL_MAP_INVALIDATE_RANGE_BIT_EXT");
#endif
#if defined(GL_MAP_PERSISTENT_BIT)
defconsti(env, "GL-MAP-PERSISTENT-BIT", (GLenum) GL_MAP_PERSISTENT_BIT, "GL_MAP_PERSISTENT_BIT");
#endif
#if defined(GL_MAP_PERSISTENT_BIT_EXT)
defconsti(env, "GL-MAP-PERSISTENT-BIT-EXT", (GLenum) GL_MAP_PERSISTENT_BIT_EXT, "GL_MAP_PERSISTENT_BIT_EXT");
#endif
#if defined(GL_MAP_READ_BIT)
defconsti(env, "GL-MAP-READ-BIT", (GLenum) GL_MAP_READ_BIT, "GL_MAP_READ_BIT");
#endif
#if defined(GL_MAP_READ_BIT_EXT)
defconsti(env, "GL-MAP-READ-BIT-EXT", (GLenum) GL_MAP_READ_BIT_EXT, "GL_MAP_READ_BIT_EXT");
#endif
#if defined(GL_MAP_UNSYNCHRONIZED_BIT)
defconsti(env, "GL-MAP-UNSYNCHRONIZED-BIT", (GLenum) GL_MAP_UNSYNCHRONIZED_BIT, "GL_MAP_UNSYNCHRONIZED_BIT");
#endif
#if defined(GL_MAP_UNSYNCHRONIZED_BIT_EXT)
defconsti(env, "GL-MAP-UNSYNCHRONIZED-BIT-EXT", (GLenum) GL_MAP_UNSYNCHRONIZED_BIT_EXT, "GL_MAP_UNSYNCHRONIZED_BIT_EXT");
#endif
#if defined(GL_MAP_WRITE_BIT)
defconsti(env, "GL-MAP-WRITE-BIT", (GLenum) GL_MAP_WRITE_BIT, "GL_MAP_WRITE_BIT");
#endif
#if defined(GL_MAP_WRITE_BIT_EXT)
defconsti(env, "GL-MAP-WRITE-BIT-EXT", (GLenum) GL_MAP_WRITE_BIT_EXT, "GL_MAP_WRITE_BIT_EXT");
#endif
#if defined(GL_GEOMETRY_DEFORMATION_SGIX)
defconsti(env, "GL-GEOMETRY-DEFORMATION-SGIX", (GLenum) GL_GEOMETRY_DEFORMATION_SGIX, "GL_GEOMETRY_DEFORMATION_SGIX");
#endif
#if defined(GL_MAP1_COLOR_4)
defconsti(env, "GL-MAP1-COLOR-4", (GLenum) GL_MAP1_COLOR_4, "GL_MAP1_COLOR_4");
#endif
#if defined(GL_MAP1_INDEX)
defconsti(env, "GL-MAP1-INDEX", (GLenum) GL_MAP1_INDEX, "GL_MAP1_INDEX");
#endif
#if defined(GL_MAP1_NORMAL)
defconsti(env, "GL-MAP1-NORMAL", (GLenum) GL_MAP1_NORMAL, "GL_MAP1_NORMAL");
#endif
#if defined(GL_MAP1_TEXTURE_COORD_1)
defconsti(env, "GL-MAP1-TEXTURE-COORD-1", (GLenum) GL_MAP1_TEXTURE_COORD_1, "GL_MAP1_TEXTURE_COORD_1");
#endif
#if defined(GL_MAP1_TEXTURE_COORD_2)
defconsti(env, "GL-MAP1-TEXTURE-COORD-2", (GLenum) GL_MAP1_TEXTURE_COORD_2, "GL_MAP1_TEXTURE_COORD_2");
#endif
#if defined(GL_MAP1_TEXTURE_COORD_3)
defconsti(env, "GL-MAP1-TEXTURE-COORD-3", (GLenum) GL_MAP1_TEXTURE_COORD_3, "GL_MAP1_TEXTURE_COORD_3");
#endif
#if defined(GL_MAP1_TEXTURE_COORD_4)
defconsti(env, "GL-MAP1-TEXTURE-COORD-4", (GLenum) GL_MAP1_TEXTURE_COORD_4, "GL_MAP1_TEXTURE_COORD_4");
#endif
#if defined(GL_MAP1_VERTEX_3)
defconsti(env, "GL-MAP1-VERTEX-3", (GLenum) GL_MAP1_VERTEX_3, "GL_MAP1_VERTEX_3");
#endif
#if defined(GL_MAP1_VERTEX_4)
defconsti(env, "GL-MAP1-VERTEX-4", (GLenum) GL_MAP1_VERTEX_4, "GL_MAP1_VERTEX_4");
#endif
#if defined(GL_MAP2_COLOR_4)
defconsti(env, "GL-MAP2-COLOR-4", (GLenum) GL_MAP2_COLOR_4, "GL_MAP2_COLOR_4");
#endif
#if defined(GL_MAP2_INDEX)
defconsti(env, "GL-MAP2-INDEX", (GLenum) GL_MAP2_INDEX, "GL_MAP2_INDEX");
#endif
#if defined(GL_MAP2_NORMAL)
defconsti(env, "GL-MAP2-NORMAL", (GLenum) GL_MAP2_NORMAL, "GL_MAP2_NORMAL");
#endif
#if defined(GL_MAP2_TEXTURE_COORD_1)
defconsti(env, "GL-MAP2-TEXTURE-COORD-1", (GLenum) GL_MAP2_TEXTURE_COORD_1, "GL_MAP2_TEXTURE_COORD_1");
#endif
#if defined(GL_MAP2_TEXTURE_COORD_2)
defconsti(env, "GL-MAP2-TEXTURE-COORD-2", (GLenum) GL_MAP2_TEXTURE_COORD_2, "GL_MAP2_TEXTURE_COORD_2");
#endif
#if defined(GL_MAP2_TEXTURE_COORD_3)
defconsti(env, "GL-MAP2-TEXTURE-COORD-3", (GLenum) GL_MAP2_TEXTURE_COORD_3, "GL_MAP2_TEXTURE_COORD_3");
#endif
#if defined(GL_MAP2_TEXTURE_COORD_4)
defconsti(env, "GL-MAP2-TEXTURE-COORD-4", (GLenum) GL_MAP2_TEXTURE_COORD_4, "GL_MAP2_TEXTURE_COORD_4");
#endif
#if defined(GL_MAP2_VERTEX_3)
defconsti(env, "GL-MAP2-VERTEX-3", (GLenum) GL_MAP2_VERTEX_3, "GL_MAP2_VERTEX_3");
#endif
#if defined(GL_MAP2_VERTEX_4)
defconsti(env, "GL-MAP2-VERTEX-4", (GLenum) GL_MAP2_VERTEX_4, "GL_MAP2_VERTEX_4");
#endif
#if defined(GL_TEXTURE_DEFORMATION_SGIX)
defconsti(env, "GL-TEXTURE-DEFORMATION-SGIX", (GLenum) GL_TEXTURE_DEFORMATION_SGIX, "GL_TEXTURE_DEFORMATION_SGIX");
#endif
#if defined(GL_LAYOUT_DEFAULT_INTEL)
defconsti(env, "GL-LAYOUT-DEFAULT-INTEL", (GLenum) GL_LAYOUT_DEFAULT_INTEL, "GL_LAYOUT_DEFAULT_INTEL");
#endif
#if defined(GL_LAYOUT_LINEAR_CPU_CACHED_INTEL)
defconsti(env, "GL-LAYOUT-LINEAR-CPU-CACHED-INTEL", (GLenum) GL_LAYOUT_LINEAR_CPU_CACHED_INTEL, "GL_LAYOUT_LINEAR_CPU_CACHED_INTEL");
#endif
#if defined(GL_LAYOUT_LINEAR_INTEL)
defconsti(env, "GL-LAYOUT-LINEAR-INTEL", (GLenum) GL_LAYOUT_LINEAR_INTEL, "GL_LAYOUT_LINEAR_INTEL");
#endif
#if defined(GL_BACK)
defconsti(env, "GL-BACK", (GLenum) GL_BACK, "GL_BACK");
#endif
#if defined(GL_FRONT)
defconsti(env, "GL-FRONT", (GLenum) GL_FRONT, "GL_FRONT");
#endif
#if defined(GL_FRONT_AND_BACK)
defconsti(env, "GL-FRONT-AND-BACK", (GLenum) GL_FRONT_AND_BACK, "GL_FRONT_AND_BACK");
#endif
#if defined(GL_AMBIENT)
defconsti(env, "GL-AMBIENT", (GLenum) GL_AMBIENT, "GL_AMBIENT");
#endif
#if defined(GL_AMBIENT_AND_DIFFUSE)
defconsti(env, "GL-AMBIENT-AND-DIFFUSE", (GLenum) GL_AMBIENT_AND_DIFFUSE, "GL_AMBIENT_AND_DIFFUSE");
#endif
#if defined(GL_COLOR_INDEXES)
defconsti(env, "GL-COLOR-INDEXES", (GLenum) GL_COLOR_INDEXES, "GL_COLOR_INDEXES");
#endif
#if defined(GL_DIFFUSE)
defconsti(env, "GL-DIFFUSE", (GLenum) GL_DIFFUSE, "GL_DIFFUSE");
#endif
#if defined(GL_EMISSION)
defconsti(env, "GL-EMISSION", (GLenum) GL_EMISSION, "GL_EMISSION");
#endif
#if defined(GL_SHININESS)
defconsti(env, "GL-SHININESS", (GLenum) GL_SHININESS, "GL_SHININESS");
#endif
#if defined(GL_SPECULAR)
defconsti(env, "GL-SPECULAR", (GLenum) GL_SPECULAR, "GL_SPECULAR");
#endif
#if defined(GL_MODELVIEW)
defconsti(env, "GL-MODELVIEW", (GLenum) GL_MODELVIEW, "GL_MODELVIEW");
#endif
#if defined(GL_MODELVIEW0_EXT)
defconsti(env, "GL-MODELVIEW0-EXT", (GLenum) GL_MODELVIEW0_EXT, "GL_MODELVIEW0_EXT");
#endif
#if defined(GL_PROJECTION)
defconsti(env, "GL-PROJECTION", (GLenum) GL_PROJECTION, "GL_PROJECTION");
#endif
#if defined(GL_TEXTURE)
defconsti(env, "GL-TEXTURE", (GLenum) GL_TEXTURE, "GL_TEXTURE");
#endif
#if defined(GL_ALL_BARRIER_BITS)
defconsti(env, "GL-ALL-BARRIER-BITS", (GLenum) GL_ALL_BARRIER_BITS, "GL_ALL_BARRIER_BITS");
#endif
#if defined(GL_ALL_BARRIER_BITS_EXT)
defconsti(env, "GL-ALL-BARRIER-BITS-EXT", (GLenum) GL_ALL_BARRIER_BITS_EXT, "GL_ALL_BARRIER_BITS_EXT");
#endif
#if defined(GL_ATOMIC_COUNTER_BARRIER_BIT)
defconsti(env, "GL-ATOMIC-COUNTER-BARRIER-BIT", (GLenum) GL_ATOMIC_COUNTER_BARRIER_BIT, "GL_ATOMIC_COUNTER_BARRIER_BIT");
#endif
#if defined(GL_ATOMIC_COUNTER_BARRIER_BIT_EXT)
defconsti(env, "GL-ATOMIC-COUNTER-BARRIER-BIT-EXT", (GLenum) GL_ATOMIC_COUNTER_BARRIER_BIT_EXT, "GL_ATOMIC_COUNTER_BARRIER_BIT_EXT");
#endif
#if defined(GL_BUFFER_UPDATE_BARRIER_BIT)
defconsti(env, "GL-BUFFER-UPDATE-BARRIER-BIT", (GLenum) GL_BUFFER_UPDATE_BARRIER_BIT, "GL_BUFFER_UPDATE_BARRIER_BIT");
#endif
#if defined(GL_BUFFER_UPDATE_BARRIER_BIT_EXT)
defconsti(env, "GL-BUFFER-UPDATE-BARRIER-BIT-EXT", (GLenum) GL_BUFFER_UPDATE_BARRIER_BIT_EXT, "GL_BUFFER_UPDATE_BARRIER_BIT_EXT");
#endif
#if defined(GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT)
defconsti(env, "GL-CLIENT-MAPPED-BUFFER-BARRIER-BIT", (GLenum) GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT, "GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT");
#endif
#if defined(GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT)
defconsti(env, "GL-CLIENT-MAPPED-BUFFER-BARRIER-BIT-EXT", (GLenum) GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT, "GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT");
#endif
#if defined(GL_COMMAND_BARRIER_BIT)
defconsti(env, "GL-COMMAND-BARRIER-BIT", (GLenum) GL_COMMAND_BARRIER_BIT, "GL_COMMAND_BARRIER_BIT");
#endif
#if defined(GL_COMMAND_BARRIER_BIT_EXT)
defconsti(env, "GL-COMMAND-BARRIER-BIT-EXT", (GLenum) GL_COMMAND_BARRIER_BIT_EXT, "GL_COMMAND_BARRIER_BIT_EXT");
#endif
#if defined(GL_ELEMENT_ARRAY_BARRIER_BIT)
defconsti(env, "GL-ELEMENT-ARRAY-BARRIER-BIT", (GLenum) GL_ELEMENT_ARRAY_BARRIER_BIT, "GL_ELEMENT_ARRAY_BARRIER_BIT");
#endif
#if defined(GL_ELEMENT_ARRAY_BARRIER_BIT_EXT)
defconsti(env, "GL-ELEMENT-ARRAY-BARRIER-BIT-EXT", (GLenum) GL_ELEMENT_ARRAY_BARRIER_BIT_EXT, "GL_ELEMENT_ARRAY_BARRIER_BIT_EXT");
#endif
#if defined(GL_FRAMEBUFFER_BARRIER_BIT)
defconsti(env, "GL-FRAMEBUFFER-BARRIER-BIT", (GLenum) GL_FRAMEBUFFER_BARRIER_BIT, "GL_FRAMEBUFFER_BARRIER_BIT");
#endif
#if defined(GL_FRAMEBUFFER_BARRIER_BIT_EXT)
defconsti(env, "GL-FRAMEBUFFER-BARRIER-BIT-EXT", (GLenum) GL_FRAMEBUFFER_BARRIER_BIT_EXT, "GL_FRAMEBUFFER_BARRIER_BIT_EXT");
#endif
#if defined(GL_PIXEL_BUFFER_BARRIER_BIT)
defconsti(env, "GL-PIXEL-BUFFER-BARRIER-BIT", (GLenum) GL_PIXEL_BUFFER_BARRIER_BIT, "GL_PIXEL_BUFFER_BARRIER_BIT");
#endif
#if defined(GL_PIXEL_BUFFER_BARRIER_BIT_EXT)
defconsti(env, "GL-PIXEL-BUFFER-BARRIER-BIT-EXT", (GLenum) GL_PIXEL_BUFFER_BARRIER_BIT_EXT, "GL_PIXEL_BUFFER_BARRIER_BIT_EXT");
#endif
#if defined(GL_QUERY_BUFFER_BARRIER_BIT)
defconsti(env, "GL-QUERY-BUFFER-BARRIER-BIT", (GLenum) GL_QUERY_BUFFER_BARRIER_BIT, "GL_QUERY_BUFFER_BARRIER_BIT");
#endif
#if defined(GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV)
defconsti(env, "GL-SHADER-GLOBAL-ACCESS-BARRIER-BIT-NV", (GLenum) GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV, "GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV");
#endif
#if defined(GL_SHADER_IMAGE_ACCESS_BARRIER_BIT)
defconsti(env, "GL-SHADER-IMAGE-ACCESS-BARRIER-BIT", (GLenum) GL_SHADER_IMAGE_ACCESS_BARRIER_BIT, "GL_SHADER_IMAGE_ACCESS_BARRIER_BIT");
#endif
#if defined(GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT)
defconsti(env, "GL-SHADER-IMAGE-ACCESS-BARRIER-BIT-EXT", (GLenum) GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT, "GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT");
#endif
#if defined(GL_SHADER_STORAGE_BARRIER_BIT)
defconsti(env, "GL-SHADER-STORAGE-BARRIER-BIT", (GLenum) GL_SHADER_STORAGE_BARRIER_BIT, "GL_SHADER_STORAGE_BARRIER_BIT");
#endif
#if defined(GL_TEXTURE_FETCH_BARRIER_BIT)
defconsti(env, "GL-TEXTURE-FETCH-BARRIER-BIT", (GLenum) GL_TEXTURE_FETCH_BARRIER_BIT, "GL_TEXTURE_FETCH_BARRIER_BIT");
#endif
#if defined(GL_TEXTURE_FETCH_BARRIER_BIT_EXT)
defconsti(env, "GL-TEXTURE-FETCH-BARRIER-BIT-EXT", (GLenum) GL_TEXTURE_FETCH_BARRIER_BIT_EXT, "GL_TEXTURE_FETCH_BARRIER_BIT_EXT");
#endif
#if defined(GL_TEXTURE_UPDATE_BARRIER_BIT)
defconsti(env, "GL-TEXTURE-UPDATE-BARRIER-BIT", (GLenum) GL_TEXTURE_UPDATE_BARRIER_BIT, "GL_TEXTURE_UPDATE_BARRIER_BIT");
#endif
#if defined(GL_TEXTURE_UPDATE_BARRIER_BIT_EXT)
defconsti(env, "GL-TEXTURE-UPDATE-BARRIER-BIT-EXT", (GLenum) GL_TEXTURE_UPDATE_BARRIER_BIT_EXT, "GL_TEXTURE_UPDATE_BARRIER_BIT_EXT");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BARRIER_BIT)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BARRIER-BIT", (GLenum) GL_TRANSFORM_FEEDBACK_BARRIER_BIT, "GL_TRANSFORM_FEEDBACK_BARRIER_BIT");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BARRIER-BIT-EXT", (GLenum) GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT, "GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT");
#endif
#if defined(GL_UNIFORM_BARRIER_BIT)
defconsti(env, "GL-UNIFORM-BARRIER-BIT", (GLenum) GL_UNIFORM_BARRIER_BIT, "GL_UNIFORM_BARRIER_BIT");
#endif
#if defined(GL_UNIFORM_BARRIER_BIT_EXT)
defconsti(env, "GL-UNIFORM-BARRIER-BIT-EXT", (GLenum) GL_UNIFORM_BARRIER_BIT_EXT, "GL_UNIFORM_BARRIER_BIT_EXT");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-BARRIER-BIT", (GLenum) GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT, "GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-BARRIER-BIT-EXT", (GLenum) GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT, "GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT");
#endif
#if defined(GL_DEDICATED_MEMORY_OBJECT_EXT)
defconsti(env, "GL-DEDICATED-MEMORY-OBJECT-EXT", (GLenum) GL_DEDICATED_MEMORY_OBJECT_EXT, "GL_DEDICATED_MEMORY_OBJECT_EXT");
#endif
#if defined(GL_PROTECTED_MEMORY_OBJECT_EXT)
defconsti(env, "GL-PROTECTED-MEMORY-OBJECT-EXT", (GLenum) GL_PROTECTED_MEMORY_OBJECT_EXT, "GL_PROTECTED_MEMORY_OBJECT_EXT");
#endif
#if defined(GL_LINE)
defconsti(env, "GL-LINE", (GLenum) GL_LINE, "GL_LINE");
#endif
#if defined(GL_POINT)
defconsti(env, "GL-POINT", (GLenum) GL_POINT, "GL_POINT");
#endif
#if defined(GL_FILL)
defconsti(env, "GL-FILL", (GLenum) GL_FILL, "GL_FILL");
#endif
#if defined(GL_LINE)
defconsti(env, "GL-LINE", (GLenum) GL_LINE, "GL_LINE");
#endif
#if defined(GL_POINT)
defconsti(env, "GL-POINT", (GLenum) GL_POINT, "GL_POINT");
#endif
#if defined(GL_MINMAX)
defconsti(env, "GL-MINMAX", (GLenum) GL_MINMAX, "GL_MINMAX");
#endif
#if defined(GL_MINMAX_EXT)
defconsti(env, "GL-MINMAX-EXT", (GLenum) GL_MINMAX_EXT, "GL_MINMAX_EXT");
#endif
#if defined(GL_BYTE)
defconsti(env, "GL-BYTE", (GLenum) GL_BYTE, "GL_BYTE");
#endif
#if defined(GL_DOUBLE)
defconsti(env, "GL-DOUBLE", (GLenum) GL_DOUBLE, "GL_DOUBLE");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_INT)
defconsti(env, "GL-INT", (GLenum) GL_INT, "GL_INT");
#endif
#if defined(GL_SHORT)
defconsti(env, "GL-SHORT", (GLenum) GL_SHORT, "GL_SHORT");
#endif
#if defined(GL_COLOR)
defconsti(env, "GL-COLOR", (GLenum) GL_COLOR, "GL_COLOR");
#endif
#if defined(GL_COLOR_EXT)
defconsti(env, "GL-COLOR-EXT", (GLenum) GL_COLOR_EXT, "GL_COLOR_EXT");
#endif
#if defined(GL_DEPTH)
defconsti(env, "GL-DEPTH", (GLenum) GL_DEPTH, "GL_DEPTH");
#endif
#if defined(GL_DEPTH_EXT)
defconsti(env, "GL-DEPTH-EXT", (GLenum) GL_DEPTH_EXT, "GL_DEPTH_EXT");
#endif
#if defined(GL_STENCIL)
defconsti(env, "GL-STENCIL", (GLenum) GL_STENCIL, "GL_STENCIL");
#endif
#if defined(GL_STENCIL_EXT)
defconsti(env, "GL-STENCIL-EXT", (GLenum) GL_STENCIL_EXT, "GL_STENCIL_EXT");
#endif
#if defined(GL_ABGR_EXT)
defconsti(env, "GL-ABGR-EXT", (GLenum) GL_ABGR_EXT, "GL_ABGR_EXT");
#endif
#if defined(GL_ALPHA)
defconsti(env, "GL-ALPHA", (GLenum) GL_ALPHA, "GL_ALPHA");
#endif
#if defined(GL_BGR)
defconsti(env, "GL-BGR", (GLenum) GL_BGR, "GL_BGR");
#endif
#if defined(GL_BGR_INTEGER)
defconsti(env, "GL-BGR-INTEGER", (GLenum) GL_BGR_INTEGER, "GL_BGR_INTEGER");
#endif
#if defined(GL_BGRA)
defconsti(env, "GL-BGRA", (GLenum) GL_BGRA, "GL_BGRA");
#endif
#if defined(GL_BGRA_INTEGER)
defconsti(env, "GL-BGRA-INTEGER", (GLenum) GL_BGRA_INTEGER, "GL_BGRA_INTEGER");
#endif
#if defined(GL_BLUE)
defconsti(env, "GL-BLUE", (GLenum) GL_BLUE, "GL_BLUE");
#endif
#if defined(GL_BLUE_INTEGER)
defconsti(env, "GL-BLUE-INTEGER", (GLenum) GL_BLUE_INTEGER, "GL_BLUE_INTEGER");
#endif
#if defined(GL_CMYKA_EXT)
defconsti(env, "GL-CMYKA-EXT", (GLenum) GL_CMYKA_EXT, "GL_CMYKA_EXT");
#endif
#if defined(GL_CMYK_EXT)
defconsti(env, "GL-CMYK-EXT", (GLenum) GL_CMYK_EXT, "GL_CMYK_EXT");
#endif
#if defined(GL_COLOR_INDEX)
defconsti(env, "GL-COLOR-INDEX", (GLenum) GL_COLOR_INDEX, "GL_COLOR_INDEX");
#endif
#if defined(GL_DEPTH_COMPONENT)
defconsti(env, "GL-DEPTH-COMPONENT", (GLenum) GL_DEPTH_COMPONENT, "GL_DEPTH_COMPONENT");
#endif
#if defined(GL_DEPTH_STENCIL)
defconsti(env, "GL-DEPTH-STENCIL", (GLenum) GL_DEPTH_STENCIL, "GL_DEPTH_STENCIL");
#endif
#if defined(GL_GREEN)
defconsti(env, "GL-GREEN", (GLenum) GL_GREEN, "GL_GREEN");
#endif
#if defined(GL_GREEN_INTEGER)
defconsti(env, "GL-GREEN-INTEGER", (GLenum) GL_GREEN_INTEGER, "GL_GREEN_INTEGER");
#endif
#if defined(GL_LUMINANCE)
defconsti(env, "GL-LUMINANCE", (GLenum) GL_LUMINANCE, "GL_LUMINANCE");
#endif
#if defined(GL_LUMINANCE_ALPHA)
defconsti(env, "GL-LUMINANCE-ALPHA", (GLenum) GL_LUMINANCE_ALPHA, "GL_LUMINANCE_ALPHA");
#endif
#if defined(GL_RED)
defconsti(env, "GL-RED", (GLenum) GL_RED, "GL_RED");
#endif
#if defined(GL_RED_EXT)
defconsti(env, "GL-RED-EXT", (GLenum) GL_RED_EXT, "GL_RED_EXT");
#endif
#if defined(GL_RED_INTEGER)
defconsti(env, "GL-RED-INTEGER", (GLenum) GL_RED_INTEGER, "GL_RED_INTEGER");
#endif
#if defined(GL_RG)
defconsti(env, "GL-RG", (GLenum) GL_RG, "GL_RG");
#endif
#if defined(GL_RG_INTEGER)
defconsti(env, "GL-RG-INTEGER", (GLenum) GL_RG_INTEGER, "GL_RG_INTEGER");
#endif
#if defined(GL_RGB)
defconsti(env, "GL-RGB", (GLenum) GL_RGB, "GL_RGB");
#endif
#if defined(GL_RGB_INTEGER)
defconsti(env, "GL-RGB-INTEGER", (GLenum) GL_RGB_INTEGER, "GL_RGB_INTEGER");
#endif
#if defined(GL_RGBA)
defconsti(env, "GL-RGBA", (GLenum) GL_RGBA, "GL_RGBA");
#endif
#if defined(GL_RGBA_INTEGER)
defconsti(env, "GL-RGBA-INTEGER", (GLenum) GL_RGBA_INTEGER, "GL_RGBA_INTEGER");
#endif
#if defined(GL_STENCIL_INDEX)
defconsti(env, "GL-STENCIL-INDEX", (GLenum) GL_STENCIL_INDEX, "GL_STENCIL_INDEX");
#endif
#if defined(GL_UNSIGNED_INT)
defconsti(env, "GL-UNSIGNED-INT", (GLenum) GL_UNSIGNED_INT, "GL_UNSIGNED_INT");
#endif
#if defined(GL_UNSIGNED_SHORT)
defconsti(env, "GL-UNSIGNED-SHORT", (GLenum) GL_UNSIGNED_SHORT, "GL_UNSIGNED_SHORT");
#endif
#if defined(GL_YCRCB_422_SGIX)
defconsti(env, "GL-YCRCB-422-SGIX", (GLenum) GL_YCRCB_422_SGIX, "GL_YCRCB_422_SGIX");
#endif
#if defined(GL_YCRCB_444_SGIX)
defconsti(env, "GL-YCRCB-444-SGIX", (GLenum) GL_YCRCB_444_SGIX, "GL_YCRCB_444_SGIX");
#endif
#if defined(GL_ALPHA12)
defconsti(env, "GL-ALPHA12", (GLenum) GL_ALPHA12, "GL_ALPHA12");
#endif
#if defined(GL_ALPHA16)
defconsti(env, "GL-ALPHA16", (GLenum) GL_ALPHA16, "GL_ALPHA16");
#endif
#if defined(GL_ALPHA4)
defconsti(env, "GL-ALPHA4", (GLenum) GL_ALPHA4, "GL_ALPHA4");
#endif
#if defined(GL_ALPHA8)
defconsti(env, "GL-ALPHA8", (GLenum) GL_ALPHA8, "GL_ALPHA8");
#endif
#if defined(GL_DUAL_ALPHA12_SGIS)
defconsti(env, "GL-DUAL-ALPHA12-SGIS", (GLenum) GL_DUAL_ALPHA12_SGIS, "GL_DUAL_ALPHA12_SGIS");
#endif
#if defined(GL_DUAL_ALPHA16_SGIS)
defconsti(env, "GL-DUAL-ALPHA16-SGIS", (GLenum) GL_DUAL_ALPHA16_SGIS, "GL_DUAL_ALPHA16_SGIS");
#endif
#if defined(GL_DUAL_ALPHA4_SGIS)
defconsti(env, "GL-DUAL-ALPHA4-SGIS", (GLenum) GL_DUAL_ALPHA4_SGIS, "GL_DUAL_ALPHA4_SGIS");
#endif
#if defined(GL_DUAL_ALPHA8_SGIS)
defconsti(env, "GL-DUAL-ALPHA8-SGIS", (GLenum) GL_DUAL_ALPHA8_SGIS, "GL_DUAL_ALPHA8_SGIS");
#endif
#if defined(GL_DUAL_INTENSITY12_SGIS)
defconsti(env, "GL-DUAL-INTENSITY12-SGIS", (GLenum) GL_DUAL_INTENSITY12_SGIS, "GL_DUAL_INTENSITY12_SGIS");
#endif
#if defined(GL_DUAL_INTENSITY16_SGIS)
defconsti(env, "GL-DUAL-INTENSITY16-SGIS", (GLenum) GL_DUAL_INTENSITY16_SGIS, "GL_DUAL_INTENSITY16_SGIS");
#endif
#if defined(GL_DUAL_INTENSITY4_SGIS)
defconsti(env, "GL-DUAL-INTENSITY4-SGIS", (GLenum) GL_DUAL_INTENSITY4_SGIS, "GL_DUAL_INTENSITY4_SGIS");
#endif
#if defined(GL_DUAL_INTENSITY8_SGIS)
defconsti(env, "GL-DUAL-INTENSITY8-SGIS", (GLenum) GL_DUAL_INTENSITY8_SGIS, "GL_DUAL_INTENSITY8_SGIS");
#endif
#if defined(GL_DUAL_LUMINANCE12_SGIS)
defconsti(env, "GL-DUAL-LUMINANCE12-SGIS", (GLenum) GL_DUAL_LUMINANCE12_SGIS, "GL_DUAL_LUMINANCE12_SGIS");
#endif
#if defined(GL_DUAL_LUMINANCE16_SGIS)
defconsti(env, "GL-DUAL-LUMINANCE16-SGIS", (GLenum) GL_DUAL_LUMINANCE16_SGIS, "GL_DUAL_LUMINANCE16_SGIS");
#endif
#if defined(GL_DUAL_LUMINANCE4_SGIS)
defconsti(env, "GL-DUAL-LUMINANCE4-SGIS", (GLenum) GL_DUAL_LUMINANCE4_SGIS, "GL_DUAL_LUMINANCE4_SGIS");
#endif
#if defined(GL_DUAL_LUMINANCE8_SGIS)
defconsti(env, "GL-DUAL-LUMINANCE8-SGIS", (GLenum) GL_DUAL_LUMINANCE8_SGIS, "GL_DUAL_LUMINANCE8_SGIS");
#endif
#if defined(GL_DUAL_LUMINANCE_ALPHA4_SGIS)
defconsti(env, "GL-DUAL-LUMINANCE-ALPHA4-SGIS", (GLenum) GL_DUAL_LUMINANCE_ALPHA4_SGIS, "GL_DUAL_LUMINANCE_ALPHA4_SGIS");
#endif
#if defined(GL_DUAL_LUMINANCE_ALPHA8_SGIS)
defconsti(env, "GL-DUAL-LUMINANCE-ALPHA8-SGIS", (GLenum) GL_DUAL_LUMINANCE_ALPHA8_SGIS, "GL_DUAL_LUMINANCE_ALPHA8_SGIS");
#endif
#if defined(GL_INTENSITY)
defconsti(env, "GL-INTENSITY", (GLenum) GL_INTENSITY, "GL_INTENSITY");
#endif
#if defined(GL_INTENSITY12)
defconsti(env, "GL-INTENSITY12", (GLenum) GL_INTENSITY12, "GL_INTENSITY12");
#endif
#if defined(GL_INTENSITY16)
defconsti(env, "GL-INTENSITY16", (GLenum) GL_INTENSITY16, "GL_INTENSITY16");
#endif
#if defined(GL_INTENSITY4)
defconsti(env, "GL-INTENSITY4", (GLenum) GL_INTENSITY4, "GL_INTENSITY4");
#endif
#if defined(GL_INTENSITY8)
defconsti(env, "GL-INTENSITY8", (GLenum) GL_INTENSITY8, "GL_INTENSITY8");
#endif
#if defined(GL_LUMINANCE12)
defconsti(env, "GL-LUMINANCE12", (GLenum) GL_LUMINANCE12, "GL_LUMINANCE12");
#endif
#if defined(GL_LUMINANCE12_ALPHA12)
defconsti(env, "GL-LUMINANCE12-ALPHA12", (GLenum) GL_LUMINANCE12_ALPHA12, "GL_LUMINANCE12_ALPHA12");
#endif
#if defined(GL_LUMINANCE12_ALPHA4)
defconsti(env, "GL-LUMINANCE12-ALPHA4", (GLenum) GL_LUMINANCE12_ALPHA4, "GL_LUMINANCE12_ALPHA4");
#endif
#if defined(GL_LUMINANCE16)
defconsti(env, "GL-LUMINANCE16", (GLenum) GL_LUMINANCE16, "GL_LUMINANCE16");
#endif
#if defined(GL_LUMINANCE16_ALPHA16)
defconsti(env, "GL-LUMINANCE16-ALPHA16", (GLenum) GL_LUMINANCE16_ALPHA16, "GL_LUMINANCE16_ALPHA16");
#endif
#if defined(GL_LUMINANCE4)
defconsti(env, "GL-LUMINANCE4", (GLenum) GL_LUMINANCE4, "GL_LUMINANCE4");
#endif
#if defined(GL_LUMINANCE4_ALPHA4)
defconsti(env, "GL-LUMINANCE4-ALPHA4", (GLenum) GL_LUMINANCE4_ALPHA4, "GL_LUMINANCE4_ALPHA4");
#endif
#if defined(GL_LUMINANCE6_ALPHA2)
defconsti(env, "GL-LUMINANCE6-ALPHA2", (GLenum) GL_LUMINANCE6_ALPHA2, "GL_LUMINANCE6_ALPHA2");
#endif
#if defined(GL_LUMINANCE8)
defconsti(env, "GL-LUMINANCE8", (GLenum) GL_LUMINANCE8, "GL_LUMINANCE8");
#endif
#if defined(GL_LUMINANCE8_ALPHA8)
defconsti(env, "GL-LUMINANCE8-ALPHA8", (GLenum) GL_LUMINANCE8_ALPHA8, "GL_LUMINANCE8_ALPHA8");
#endif
#if defined(GL_QUAD_ALPHA4_SGIS)
defconsti(env, "GL-QUAD-ALPHA4-SGIS", (GLenum) GL_QUAD_ALPHA4_SGIS, "GL_QUAD_ALPHA4_SGIS");
#endif
#if defined(GL_QUAD_ALPHA8_SGIS)
defconsti(env, "GL-QUAD-ALPHA8-SGIS", (GLenum) GL_QUAD_ALPHA8_SGIS, "GL_QUAD_ALPHA8_SGIS");
#endif
#if defined(GL_QUAD_INTENSITY4_SGIS)
defconsti(env, "GL-QUAD-INTENSITY4-SGIS", (GLenum) GL_QUAD_INTENSITY4_SGIS, "GL_QUAD_INTENSITY4_SGIS");
#endif
#if defined(GL_QUAD_INTENSITY8_SGIS)
defconsti(env, "GL-QUAD-INTENSITY8-SGIS", (GLenum) GL_QUAD_INTENSITY8_SGIS, "GL_QUAD_INTENSITY8_SGIS");
#endif
#if defined(GL_QUAD_LUMINANCE4_SGIS)
defconsti(env, "GL-QUAD-LUMINANCE4-SGIS", (GLenum) GL_QUAD_LUMINANCE4_SGIS, "GL_QUAD_LUMINANCE4_SGIS");
#endif
#if defined(GL_QUAD_LUMINANCE8_SGIS)
defconsti(env, "GL-QUAD-LUMINANCE8-SGIS", (GLenum) GL_QUAD_LUMINANCE8_SGIS, "GL_QUAD_LUMINANCE8_SGIS");
#endif
#if defined(GL_RED)
defconsti(env, "GL-RED", (GLenum) GL_RED, "GL_RED");
#endif
#if defined(GL_RED_EXT)
defconsti(env, "GL-RED-EXT", (GLenum) GL_RED_EXT, "GL_RED_EXT");
#endif
#if defined(GL_R8)
defconsti(env, "GL-R8", (GLenum) GL_R8, "GL_R8");
#endif
#if defined(GL_R8_EXT)
defconsti(env, "GL-R8-EXT", (GLenum) GL_R8_EXT, "GL_R8_EXT");
#endif
#if defined(GL_R8_SNORM)
defconsti(env, "GL-R8-SNORM", (GLenum) GL_R8_SNORM, "GL_R8_SNORM");
#endif
#if defined(GL_R16)
defconsti(env, "GL-R16", (GLenum) GL_R16, "GL_R16");
#endif
#if defined(GL_R16_EXT)
defconsti(env, "GL-R16-EXT", (GLenum) GL_R16_EXT, "GL_R16_EXT");
#endif
#if defined(GL_R16_SNORM)
defconsti(env, "GL-R16-SNORM", (GLenum) GL_R16_SNORM, "GL_R16_SNORM");
#endif
#if defined(GL_R16_SNORM_EXT)
defconsti(env, "GL-R16-SNORM-EXT", (GLenum) GL_R16_SNORM_EXT, "GL_R16_SNORM_EXT");
#endif
#if defined(GL_R16F)
defconsti(env, "GL-R16F", (GLenum) GL_R16F, "GL_R16F");
#endif
#if defined(GL_R16F_EXT)
defconsti(env, "GL-R16F-EXT", (GLenum) GL_R16F_EXT, "GL_R16F_EXT");
#endif
#if defined(GL_R32F)
defconsti(env, "GL-R32F", (GLenum) GL_R32F, "GL_R32F");
#endif
#if defined(GL_R32F_EXT)
defconsti(env, "GL-R32F-EXT", (GLenum) GL_R32F_EXT, "GL_R32F_EXT");
#endif
#if defined(GL_R8I)
defconsti(env, "GL-R8I", (GLenum) GL_R8I, "GL_R8I");
#endif
#if defined(GL_R16I)
defconsti(env, "GL-R16I", (GLenum) GL_R16I, "GL_R16I");
#endif
#if defined(GL_R32I)
defconsti(env, "GL-R32I", (GLenum) GL_R32I, "GL_R32I");
#endif
#if defined(GL_R8UI)
defconsti(env, "GL-R8UI", (GLenum) GL_R8UI, "GL_R8UI");
#endif
#if defined(GL_R16UI)
defconsti(env, "GL-R16UI", (GLenum) GL_R16UI, "GL_R16UI");
#endif
#if defined(GL_R32UI)
defconsti(env, "GL-R32UI", (GLenum) GL_R32UI, "GL_R32UI");
#endif
#if defined(GL_RG)
defconsti(env, "GL-RG", (GLenum) GL_RG, "GL_RG");
#endif
#if defined(GL_RG8)
defconsti(env, "GL-RG8", (GLenum) GL_RG8, "GL_RG8");
#endif
#if defined(GL_RG8_EXT)
defconsti(env, "GL-RG8-EXT", (GLenum) GL_RG8_EXT, "GL_RG8_EXT");
#endif
#if defined(GL_RG8_SNORM)
defconsti(env, "GL-RG8-SNORM", (GLenum) GL_RG8_SNORM, "GL_RG8_SNORM");
#endif
#if defined(GL_RG16)
defconsti(env, "GL-RG16", (GLenum) GL_RG16, "GL_RG16");
#endif
#if defined(GL_RG16_EXT)
defconsti(env, "GL-RG16-EXT", (GLenum) GL_RG16_EXT, "GL_RG16_EXT");
#endif
#if defined(GL_RG16_SNORM)
defconsti(env, "GL-RG16-SNORM", (GLenum) GL_RG16_SNORM, "GL_RG16_SNORM");
#endif
#if defined(GL_RG16_SNORM_EXT)
defconsti(env, "GL-RG16-SNORM-EXT", (GLenum) GL_RG16_SNORM_EXT, "GL_RG16_SNORM_EXT");
#endif
#if defined(GL_RG16F)
defconsti(env, "GL-RG16F", (GLenum) GL_RG16F, "GL_RG16F");
#endif
#if defined(GL_RG16F_EXT)
defconsti(env, "GL-RG16F-EXT", (GLenum) GL_RG16F_EXT, "GL_RG16F_EXT");
#endif
#if defined(GL_RG32F)
defconsti(env, "GL-RG32F", (GLenum) GL_RG32F, "GL_RG32F");
#endif
#if defined(GL_RG32F_EXT)
defconsti(env, "GL-RG32F-EXT", (GLenum) GL_RG32F_EXT, "GL_RG32F_EXT");
#endif
#if defined(GL_RG8I)
defconsti(env, "GL-RG8I", (GLenum) GL_RG8I, "GL_RG8I");
#endif
#if defined(GL_RG16I)
defconsti(env, "GL-RG16I", (GLenum) GL_RG16I, "GL_RG16I");
#endif
#if defined(GL_RG32I)
defconsti(env, "GL-RG32I", (GLenum) GL_RG32I, "GL_RG32I");
#endif
#if defined(GL_RG8UI)
defconsti(env, "GL-RG8UI", (GLenum) GL_RG8UI, "GL_RG8UI");
#endif
#if defined(GL_RG16UI)
defconsti(env, "GL-RG16UI", (GLenum) GL_RG16UI, "GL_RG16UI");
#endif
#if defined(GL_RG32UI)
defconsti(env, "GL-RG32UI", (GLenum) GL_RG32UI, "GL_RG32UI");
#endif
#if defined(GL_RGB)
defconsti(env, "GL-RGB", (GLenum) GL_RGB, "GL_RGB");
#endif
#if defined(GL_RGB2_EXT)
defconsti(env, "GL-RGB2-EXT", (GLenum) GL_RGB2_EXT, "GL_RGB2_EXT");
#endif
#if defined(GL_RGB4)
defconsti(env, "GL-RGB4", (GLenum) GL_RGB4, "GL_RGB4");
#endif
#if defined(GL_RGB4_EXT)
defconsti(env, "GL-RGB4-EXT", (GLenum) GL_RGB4_EXT, "GL_RGB4_EXT");
#endif
#if defined(GL_RGB5)
defconsti(env, "GL-RGB5", (GLenum) GL_RGB5, "GL_RGB5");
#endif
#if defined(GL_RGB5_EXT)
defconsti(env, "GL-RGB5-EXT", (GLenum) GL_RGB5_EXT, "GL_RGB5_EXT");
#endif
#if defined(GL_RGB8)
defconsti(env, "GL-RGB8", (GLenum) GL_RGB8, "GL_RGB8");
#endif
#if defined(GL_RGB8_EXT)
defconsti(env, "GL-RGB8-EXT", (GLenum) GL_RGB8_EXT, "GL_RGB8_EXT");
#endif
#if defined(GL_RGB8_OES)
defconsti(env, "GL-RGB8-OES", (GLenum) GL_RGB8_OES, "GL_RGB8_OES");
#endif
#if defined(GL_RGB8_SNORM)
defconsti(env, "GL-RGB8-SNORM", (GLenum) GL_RGB8_SNORM, "GL_RGB8_SNORM");
#endif
#if defined(GL_RGB10)
defconsti(env, "GL-RGB10", (GLenum) GL_RGB10, "GL_RGB10");
#endif
#if defined(GL_RGB10_EXT)
defconsti(env, "GL-RGB10-EXT", (GLenum) GL_RGB10_EXT, "GL_RGB10_EXT");
#endif
#if defined(GL_RGB12)
defconsti(env, "GL-RGB12", (GLenum) GL_RGB12, "GL_RGB12");
#endif
#if defined(GL_RGB12_EXT)
defconsti(env, "GL-RGB12-EXT", (GLenum) GL_RGB12_EXT, "GL_RGB12_EXT");
#endif
#if defined(GL_RGB16)
defconsti(env, "GL-RGB16", (GLenum) GL_RGB16, "GL_RGB16");
#endif
#if defined(GL_RGB16_EXT)
defconsti(env, "GL-RGB16-EXT", (GLenum) GL_RGB16_EXT, "GL_RGB16_EXT");
#endif
#if defined(GL_RGB16F)
defconsti(env, "GL-RGB16F", (GLenum) GL_RGB16F, "GL_RGB16F");
#endif
#if defined(GL_RGB16F_ARB)
defconsti(env, "GL-RGB16F-ARB", (GLenum) GL_RGB16F_ARB, "GL_RGB16F_ARB");
#endif
#if defined(GL_RGB16F_EXT)
defconsti(env, "GL-RGB16F-EXT", (GLenum) GL_RGB16F_EXT, "GL_RGB16F_EXT");
#endif
#if defined(GL_RGB16_SNORM)
defconsti(env, "GL-RGB16-SNORM", (GLenum) GL_RGB16_SNORM, "GL_RGB16_SNORM");
#endif
#if defined(GL_RGB16_SNORM_EXT)
defconsti(env, "GL-RGB16-SNORM-EXT", (GLenum) GL_RGB16_SNORM_EXT, "GL_RGB16_SNORM_EXT");
#endif
#if defined(GL_RGB32F)
defconsti(env, "GL-RGB32F", (GLenum) GL_RGB32F, "GL_RGB32F");
#endif
#if defined(GL_RGB8I)
defconsti(env, "GL-RGB8I", (GLenum) GL_RGB8I, "GL_RGB8I");
#endif
#if defined(GL_RGB16I)
defconsti(env, "GL-RGB16I", (GLenum) GL_RGB16I, "GL_RGB16I");
#endif
#if defined(GL_RGB32I)
defconsti(env, "GL-RGB32I", (GLenum) GL_RGB32I, "GL_RGB32I");
#endif
#if defined(GL_RGB8UI)
defconsti(env, "GL-RGB8UI", (GLenum) GL_RGB8UI, "GL_RGB8UI");
#endif
#if defined(GL_RGB16UI)
defconsti(env, "GL-RGB16UI", (GLenum) GL_RGB16UI, "GL_RGB16UI");
#endif
#if defined(GL_RGB32UI)
defconsti(env, "GL-RGB32UI", (GLenum) GL_RGB32UI, "GL_RGB32UI");
#endif
#if defined(GL_SRGB)
defconsti(env, "GL-SRGB", (GLenum) GL_SRGB, "GL_SRGB");
#endif
#if defined(GL_SRGB_EXT)
defconsti(env, "GL-SRGB-EXT", (GLenum) GL_SRGB_EXT, "GL_SRGB_EXT");
#endif
#if defined(GL_SRGB_ALPHA)
defconsti(env, "GL-SRGB-ALPHA", (GLenum) GL_SRGB_ALPHA, "GL_SRGB_ALPHA");
#endif
#if defined(GL_SRGB_ALPHA_EXT)
defconsti(env, "GL-SRGB-ALPHA-EXT", (GLenum) GL_SRGB_ALPHA_EXT, "GL_SRGB_ALPHA_EXT");
#endif
#if defined(GL_SRGB8)
defconsti(env, "GL-SRGB8", (GLenum) GL_SRGB8, "GL_SRGB8");
#endif
#if defined(GL_SRGB8_EXT)
defconsti(env, "GL-SRGB8-EXT", (GLenum) GL_SRGB8_EXT, "GL_SRGB8_EXT");
#endif
#if defined(GL_SRGB8_NV)
defconsti(env, "GL-SRGB8-NV", (GLenum) GL_SRGB8_NV, "GL_SRGB8_NV");
#endif
#if defined(GL_SRGB8_ALPHA8)
defconsti(env, "GL-SRGB8-ALPHA8", (GLenum) GL_SRGB8_ALPHA8, "GL_SRGB8_ALPHA8");
#endif
#if defined(GL_SRGB8_ALPHA8_EXT)
defconsti(env, "GL-SRGB8-ALPHA8-EXT", (GLenum) GL_SRGB8_ALPHA8_EXT, "GL_SRGB8_ALPHA8_EXT");
#endif
#if defined(GL_R3_G3_B2)
defconsti(env, "GL-R3-G3-B2", (GLenum) GL_R3_G3_B2, "GL_R3_G3_B2");
#endif
#if defined(GL_R11F_G11F_B10F)
defconsti(env, "GL-R11F-G11F-B10F", (GLenum) GL_R11F_G11F_B10F, "GL_R11F_G11F_B10F");
#endif
#if defined(GL_R11F_G11F_B10F_APPLE)
defconsti(env, "GL-R11F-G11F-B10F-APPLE", (GLenum) GL_R11F_G11F_B10F_APPLE, "GL_R11F_G11F_B10F_APPLE");
#endif
#if defined(GL_R11F_G11F_B10F_EXT)
defconsti(env, "GL-R11F-G11F-B10F-EXT", (GLenum) GL_R11F_G11F_B10F_EXT, "GL_R11F_G11F_B10F_EXT");
#endif
#if defined(GL_RGB9_E5)
defconsti(env, "GL-RGB9-E5", (GLenum) GL_RGB9_E5, "GL_RGB9_E5");
#endif
#if defined(GL_RGB9_E5_APPLE)
defconsti(env, "GL-RGB9-E5-APPLE", (GLenum) GL_RGB9_E5_APPLE, "GL_RGB9_E5_APPLE");
#endif
#if defined(GL_RGB9_E5_EXT)
defconsti(env, "GL-RGB9-E5-EXT", (GLenum) GL_RGB9_E5_EXT, "GL_RGB9_E5_EXT");
#endif
#if defined(GL_RGBA)
defconsti(env, "GL-RGBA", (GLenum) GL_RGBA, "GL_RGBA");
#endif
#if defined(GL_RGBA4)
defconsti(env, "GL-RGBA4", (GLenum) GL_RGBA4, "GL_RGBA4");
#endif
#if defined(GL_RGBA4_EXT)
defconsti(env, "GL-RGBA4-EXT", (GLenum) GL_RGBA4_EXT, "GL_RGBA4_EXT");
#endif
#if defined(GL_RGBA4_OES)
defconsti(env, "GL-RGBA4-OES", (GLenum) GL_RGBA4_OES, "GL_RGBA4_OES");
#endif
#if defined(GL_RGB5_A1)
defconsti(env, "GL-RGB5-A1", (GLenum) GL_RGB5_A1, "GL_RGB5_A1");
#endif
#if defined(GL_RGB5_A1_EXT)
defconsti(env, "GL-RGB5-A1-EXT", (GLenum) GL_RGB5_A1_EXT, "GL_RGB5_A1_EXT");
#endif
#if defined(GL_RGB5_A1_OES)
defconsti(env, "GL-RGB5-A1-OES", (GLenum) GL_RGB5_A1_OES, "GL_RGB5_A1_OES");
#endif
#if defined(GL_RGBA8)
defconsti(env, "GL-RGBA8", (GLenum) GL_RGBA8, "GL_RGBA8");
#endif
#if defined(GL_RGBA8_EXT)
defconsti(env, "GL-RGBA8-EXT", (GLenum) GL_RGBA8_EXT, "GL_RGBA8_EXT");
#endif
#if defined(GL_RGBA8_OES)
defconsti(env, "GL-RGBA8-OES", (GLenum) GL_RGBA8_OES, "GL_RGBA8_OES");
#endif
#if defined(GL_RGBA8_SNORM)
defconsti(env, "GL-RGBA8-SNORM", (GLenum) GL_RGBA8_SNORM, "GL_RGBA8_SNORM");
#endif
#if defined(GL_RGB10_A2)
defconsti(env, "GL-RGB10-A2", (GLenum) GL_RGB10_A2, "GL_RGB10_A2");
#endif
#if defined(GL_RGB10_A2_EXT)
defconsti(env, "GL-RGB10-A2-EXT", (GLenum) GL_RGB10_A2_EXT, "GL_RGB10_A2_EXT");
#endif
#if defined(GL_RGBA12)
defconsti(env, "GL-RGBA12", (GLenum) GL_RGBA12, "GL_RGBA12");
#endif
#if defined(GL_RGBA12_EXT)
defconsti(env, "GL-RGBA12-EXT", (GLenum) GL_RGBA12_EXT, "GL_RGBA12_EXT");
#endif
#if defined(GL_RGBA16)
defconsti(env, "GL-RGBA16", (GLenum) GL_RGBA16, "GL_RGBA16");
#endif
#if defined(GL_RGBA16_EXT)
defconsti(env, "GL-RGBA16-EXT", (GLenum) GL_RGBA16_EXT, "GL_RGBA16_EXT");
#endif
#if defined(GL_RGBA16F)
defconsti(env, "GL-RGBA16F", (GLenum) GL_RGBA16F, "GL_RGBA16F");
#endif
#if defined(GL_RGBA16F_ARB)
defconsti(env, "GL-RGBA16F-ARB", (GLenum) GL_RGBA16F_ARB, "GL_RGBA16F_ARB");
#endif
#if defined(GL_RGBA16F_EXT)
defconsti(env, "GL-RGBA16F-EXT", (GLenum) GL_RGBA16F_EXT, "GL_RGBA16F_EXT");
#endif
#if defined(GL_RGBA32F)
defconsti(env, "GL-RGBA32F", (GLenum) GL_RGBA32F, "GL_RGBA32F");
#endif
#if defined(GL_RGBA32F_ARB)
defconsti(env, "GL-RGBA32F-ARB", (GLenum) GL_RGBA32F_ARB, "GL_RGBA32F_ARB");
#endif
#if defined(GL_RGBA32F_EXT)
defconsti(env, "GL-RGBA32F-EXT", (GLenum) GL_RGBA32F_EXT, "GL_RGBA32F_EXT");
#endif
#if defined(GL_RGBA8I)
defconsti(env, "GL-RGBA8I", (GLenum) GL_RGBA8I, "GL_RGBA8I");
#endif
#if defined(GL_RGBA16I)
defconsti(env, "GL-RGBA16I", (GLenum) GL_RGBA16I, "GL_RGBA16I");
#endif
#if defined(GL_RGBA32I)
defconsti(env, "GL-RGBA32I", (GLenum) GL_RGBA32I, "GL_RGBA32I");
#endif
#if defined(GL_RGBA8UI)
defconsti(env, "GL-RGBA8UI", (GLenum) GL_RGBA8UI, "GL_RGBA8UI");
#endif
#if defined(GL_RGBA16UI)
defconsti(env, "GL-RGBA16UI", (GLenum) GL_RGBA16UI, "GL_RGBA16UI");
#endif
#if defined(GL_RGBA32UI)
defconsti(env, "GL-RGBA32UI", (GLenum) GL_RGBA32UI, "GL_RGBA32UI");
#endif
#if defined(GL_RGB10_A2UI)
defconsti(env, "GL-RGB10-A2UI", (GLenum) GL_RGB10_A2UI, "GL_RGB10_A2UI");
#endif
#if defined(GL_DEPTH_COMPONENT)
defconsti(env, "GL-DEPTH-COMPONENT", (GLenum) GL_DEPTH_COMPONENT, "GL_DEPTH_COMPONENT");
#endif
#if defined(GL_DEPTH_COMPONENT16)
defconsti(env, "GL-DEPTH-COMPONENT16", (GLenum) GL_DEPTH_COMPONENT16, "GL_DEPTH_COMPONENT16");
#endif
#if defined(GL_DEPTH_COMPONENT16_ARB)
defconsti(env, "GL-DEPTH-COMPONENT16-ARB", (GLenum) GL_DEPTH_COMPONENT16_ARB, "GL_DEPTH_COMPONENT16_ARB");
#endif
#if defined(GL_DEPTH_COMPONENT16_OES)
defconsti(env, "GL-DEPTH-COMPONENT16-OES", (GLenum) GL_DEPTH_COMPONENT16_OES, "GL_DEPTH_COMPONENT16_OES");
#endif
#if defined(GL_DEPTH_COMPONENT16_SGIX)
defconsti(env, "GL-DEPTH-COMPONENT16-SGIX", (GLenum) GL_DEPTH_COMPONENT16_SGIX, "GL_DEPTH_COMPONENT16_SGIX");
#endif
#if defined(GL_DEPTH_COMPONENT24_ARB)
defconsti(env, "GL-DEPTH-COMPONENT24-ARB", (GLenum) GL_DEPTH_COMPONENT24_ARB, "GL_DEPTH_COMPONENT24_ARB");
#endif
#if defined(GL_DEPTH_COMPONENT24_OES)
defconsti(env, "GL-DEPTH-COMPONENT24-OES", (GLenum) GL_DEPTH_COMPONENT24_OES, "GL_DEPTH_COMPONENT24_OES");
#endif
#if defined(GL_DEPTH_COMPONENT24_SGIX)
defconsti(env, "GL-DEPTH-COMPONENT24-SGIX", (GLenum) GL_DEPTH_COMPONENT24_SGIX, "GL_DEPTH_COMPONENT24_SGIX");
#endif
#if defined(GL_DEPTH_COMPONENT32_ARB)
defconsti(env, "GL-DEPTH-COMPONENT32-ARB", (GLenum) GL_DEPTH_COMPONENT32_ARB, "GL_DEPTH_COMPONENT32_ARB");
#endif
#if defined(GL_DEPTH_COMPONENT32_OES)
defconsti(env, "GL-DEPTH-COMPONENT32-OES", (GLenum) GL_DEPTH_COMPONENT32_OES, "GL_DEPTH_COMPONENT32_OES");
#endif
#if defined(GL_DEPTH_COMPONENT32_SGIX)
defconsti(env, "GL-DEPTH-COMPONENT32-SGIX", (GLenum) GL_DEPTH_COMPONENT32_SGIX, "GL_DEPTH_COMPONENT32_SGIX");
#endif
#if defined(GL_DEPTH_COMPONENT32F)
defconsti(env, "GL-DEPTH-COMPONENT32F", (GLenum) GL_DEPTH_COMPONENT32F, "GL_DEPTH_COMPONENT32F");
#endif
#if defined(GL_DEPTH_COMPONENT32F_NV)
defconsti(env, "GL-DEPTH-COMPONENT32F-NV", (GLenum) GL_DEPTH_COMPONENT32F_NV, "GL_DEPTH_COMPONENT32F_NV");
#endif
#if defined(GL_DEPTH_STENCIL)
defconsti(env, "GL-DEPTH-STENCIL", (GLenum) GL_DEPTH_STENCIL, "GL_DEPTH_STENCIL");
#endif
#if defined(GL_DEPTH_STENCIL_EXT)
defconsti(env, "GL-DEPTH-STENCIL-EXT", (GLenum) GL_DEPTH_STENCIL_EXT, "GL_DEPTH_STENCIL_EXT");
#endif
#if defined(GL_DEPTH_STENCIL_MESA)
defconsti(env, "GL-DEPTH-STENCIL-MESA", (GLenum) GL_DEPTH_STENCIL_MESA, "GL_DEPTH_STENCIL_MESA");
#endif
#if defined(GL_DEPTH_STENCIL_NV)
defconsti(env, "GL-DEPTH-STENCIL-NV", (GLenum) GL_DEPTH_STENCIL_NV, "GL_DEPTH_STENCIL_NV");
#endif
#if defined(GL_DEPTH_STENCIL_OES)
defconsti(env, "GL-DEPTH-STENCIL-OES", (GLenum) GL_DEPTH_STENCIL_OES, "GL_DEPTH_STENCIL_OES");
#endif
#if defined(GL_DEPTH24_STENCIL8)
defconsti(env, "GL-DEPTH24-STENCIL8", (GLenum) GL_DEPTH24_STENCIL8, "GL_DEPTH24_STENCIL8");
#endif
#if defined(GL_DEPTH24_STENCIL8_EXT)
defconsti(env, "GL-DEPTH24-STENCIL8-EXT", (GLenum) GL_DEPTH24_STENCIL8_EXT, "GL_DEPTH24_STENCIL8_EXT");
#endif
#if defined(GL_DEPTH24_STENCIL8_OES)
defconsti(env, "GL-DEPTH24-STENCIL8-OES", (GLenum) GL_DEPTH24_STENCIL8_OES, "GL_DEPTH24_STENCIL8_OES");
#endif
#if defined(GL_DEPTH32F_STENCIL8)
defconsti(env, "GL-DEPTH32F-STENCIL8", (GLenum) GL_DEPTH32F_STENCIL8, "GL_DEPTH32F_STENCIL8");
#endif
#if defined(GL_DEPTH32F_STENCIL8_NV)
defconsti(env, "GL-DEPTH32F-STENCIL8-NV", (GLenum) GL_DEPTH32F_STENCIL8_NV, "GL_DEPTH32F_STENCIL8_NV");
#endif
#if defined(GL_STENCIL_INDEX)
defconsti(env, "GL-STENCIL-INDEX", (GLenum) GL_STENCIL_INDEX, "GL_STENCIL_INDEX");
#endif
#if defined(GL_STENCIL_INDEX_OES)
defconsti(env, "GL-STENCIL-INDEX-OES", (GLenum) GL_STENCIL_INDEX_OES, "GL_STENCIL_INDEX_OES");
#endif
#if defined(GL_STENCIL_INDEX1)
defconsti(env, "GL-STENCIL-INDEX1", (GLenum) GL_STENCIL_INDEX1, "GL_STENCIL_INDEX1");
#endif
#if defined(GL_STENCIL_INDEX1_OES)
defconsti(env, "GL-STENCIL-INDEX1-OES", (GLenum) GL_STENCIL_INDEX1_OES, "GL_STENCIL_INDEX1_OES");
#endif
#if defined(GL_STENCIL_INDEX1_EXT)
defconsti(env, "GL-STENCIL-INDEX1-EXT", (GLenum) GL_STENCIL_INDEX1_EXT, "GL_STENCIL_INDEX1_EXT");
#endif
#if defined(GL_STENCIL_INDEX4)
defconsti(env, "GL-STENCIL-INDEX4", (GLenum) GL_STENCIL_INDEX4, "GL_STENCIL_INDEX4");
#endif
#if defined(GL_STENCIL_INDEX4_OES)
defconsti(env, "GL-STENCIL-INDEX4-OES", (GLenum) GL_STENCIL_INDEX4_OES, "GL_STENCIL_INDEX4_OES");
#endif
#if defined(GL_STENCIL_INDEX4_EXT)
defconsti(env, "GL-STENCIL-INDEX4-EXT", (GLenum) GL_STENCIL_INDEX4_EXT, "GL_STENCIL_INDEX4_EXT");
#endif
#if defined(GL_STENCIL_INDEX8)
defconsti(env, "GL-STENCIL-INDEX8", (GLenum) GL_STENCIL_INDEX8, "GL_STENCIL_INDEX8");
#endif
#if defined(GL_STENCIL_INDEX8_OES)
defconsti(env, "GL-STENCIL-INDEX8-OES", (GLenum) GL_STENCIL_INDEX8_OES, "GL_STENCIL_INDEX8_OES");
#endif
#if defined(GL_STENCIL_INDEX8_EXT)
defconsti(env, "GL-STENCIL-INDEX8-EXT", (GLenum) GL_STENCIL_INDEX8_EXT, "GL_STENCIL_INDEX8_EXT");
#endif
#if defined(GL_STENCIL_INDEX16)
defconsti(env, "GL-STENCIL-INDEX16", (GLenum) GL_STENCIL_INDEX16, "GL_STENCIL_INDEX16");
#endif
#if defined(GL_STENCIL_INDEX16_EXT)
defconsti(env, "GL-STENCIL-INDEX16-EXT", (GLenum) GL_STENCIL_INDEX16_EXT, "GL_STENCIL_INDEX16_EXT");
#endif
#if defined(GL_COMPRESSED_RED)
defconsti(env, "GL-COMPRESSED-RED", (GLenum) GL_COMPRESSED_RED, "GL_COMPRESSED_RED");
#endif
#if defined(GL_COMPRESSED_RG)
defconsti(env, "GL-COMPRESSED-RG", (GLenum) GL_COMPRESSED_RG, "GL_COMPRESSED_RG");
#endif
#if defined(GL_COMPRESSED_RGB)
defconsti(env, "GL-COMPRESSED-RGB", (GLenum) GL_COMPRESSED_RGB, "GL_COMPRESSED_RGB");
#endif
#if defined(GL_COMPRESSED_RGBA)
defconsti(env, "GL-COMPRESSED-RGBA", (GLenum) GL_COMPRESSED_RGBA, "GL_COMPRESSED_RGBA");
#endif
#if defined(GL_COMPRESSED_SRGB)
defconsti(env, "GL-COMPRESSED-SRGB", (GLenum) GL_COMPRESSED_SRGB, "GL_COMPRESSED_SRGB");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA", (GLenum) GL_COMPRESSED_SRGB_ALPHA, "GL_COMPRESSED_SRGB_ALPHA");
#endif
#if defined(GL_COMPRESSED_RED_RGTC1)
defconsti(env, "GL-COMPRESSED-RED-RGTC1", (GLenum) GL_COMPRESSED_RED_RGTC1, "GL_COMPRESSED_RED_RGTC1");
#endif
#if defined(GL_COMPRESSED_RED_RGTC1_EXT)
defconsti(env, "GL-COMPRESSED-RED-RGTC1-EXT", (GLenum) GL_COMPRESSED_RED_RGTC1_EXT, "GL_COMPRESSED_RED_RGTC1_EXT");
#endif
#if defined(GL_COMPRESSED_SIGNED_RED_RGTC1)
defconsti(env, "GL-COMPRESSED-SIGNED-RED-RGTC1", (GLenum) GL_COMPRESSED_SIGNED_RED_RGTC1, "GL_COMPRESSED_SIGNED_RED_RGTC1");
#endif
#if defined(GL_COMPRESSED_SIGNED_RED_RGTC1_EXT)
defconsti(env, "GL-COMPRESSED-SIGNED-RED-RGTC1-EXT", (GLenum) GL_COMPRESSED_SIGNED_RED_RGTC1_EXT, "GL_COMPRESSED_SIGNED_RED_RGTC1_EXT");
#endif
#if defined(GL_COMPRESSED_R11_EAC)
defconsti(env, "GL-COMPRESSED-R11-EAC", (GLenum) GL_COMPRESSED_R11_EAC, "GL_COMPRESSED_R11_EAC");
#endif
#if defined(GL_COMPRESSED_SIGNED_R11_EAC)
defconsti(env, "GL-COMPRESSED-SIGNED-R11-EAC", (GLenum) GL_COMPRESSED_SIGNED_R11_EAC, "GL_COMPRESSED_SIGNED_R11_EAC");
#endif
#if defined(GL_COMPRESSED_RG_RGTC2)
defconsti(env, "GL-COMPRESSED-RG-RGTC2", (GLenum) GL_COMPRESSED_RG_RGTC2, "GL_COMPRESSED_RG_RGTC2");
#endif
#if defined(GL_COMPRESSED_SIGNED_RG_RGTC2)
defconsti(env, "GL-COMPRESSED-SIGNED-RG-RGTC2", (GLenum) GL_COMPRESSED_SIGNED_RG_RGTC2, "GL_COMPRESSED_SIGNED_RG_RGTC2");
#endif
#if defined(GL_COMPRESSED_RGBA_BPTC_UNORM)
defconsti(env, "GL-COMPRESSED-RGBA-BPTC-UNORM", (GLenum) GL_COMPRESSED_RGBA_BPTC_UNORM, "GL_COMPRESSED_RGBA_BPTC_UNORM");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-BPTC-UNORM", (GLenum) GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM, "GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM");
#endif
#if defined(GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT)
defconsti(env, "GL-COMPRESSED-RGB-BPTC-SIGNED-FLOAT", (GLenum) GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT, "GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT");
#endif
#if defined(GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT)
defconsti(env, "GL-COMPRESSED-RGB-BPTC-UNSIGNED-FLOAT", (GLenum) GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT, "GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT");
#endif
#if defined(GL_COMPRESSED_RGB8_ETC2)
defconsti(env, "GL-COMPRESSED-RGB8-ETC2", (GLenum) GL_COMPRESSED_RGB8_ETC2, "GL_COMPRESSED_RGB8_ETC2");
#endif
#if defined(GL_COMPRESSED_SRGB8_ETC2)
defconsti(env, "GL-COMPRESSED-SRGB8-ETC2", (GLenum) GL_COMPRESSED_SRGB8_ETC2, "GL_COMPRESSED_SRGB8_ETC2");
#endif
#if defined(GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2)
defconsti(env, "GL-COMPRESSED-RGB8-PUNCHTHROUGH-ALPHA1-ETC2", (GLenum) GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2, "GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2");
#endif
#if defined(GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2)
defconsti(env, "GL-COMPRESSED-SRGB8-PUNCHTHROUGH-ALPHA1-ETC2", (GLenum) GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2, "GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2");
#endif
#if defined(GL_COMPRESSED_RGBA8_ETC2_EAC)
defconsti(env, "GL-COMPRESSED-RGBA8-ETC2-EAC", (GLenum) GL_COMPRESSED_RGBA8_ETC2_EAC, "GL_COMPRESSED_RGBA8_ETC2_EAC");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ETC2-EAC", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC, "GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC");
#endif
#if defined(GL_COMPRESSED_RG11_EAC)
defconsti(env, "GL-COMPRESSED-RG11-EAC", (GLenum) GL_COMPRESSED_RG11_EAC, "GL_COMPRESSED_RG11_EAC");
#endif
#if defined(GL_COMPRESSED_SIGNED_RG11_EAC)
defconsti(env, "GL-COMPRESSED-SIGNED-RG11-EAC", (GLenum) GL_COMPRESSED_SIGNED_RG11_EAC, "GL_COMPRESSED_SIGNED_RG11_EAC");
#endif
#if defined(GL_COMPRESSED_RGB_S3TC_DXT1_EXT)
defconsti(env, "GL-COMPRESSED-RGB-S3TC-DXT1-EXT", (GLenum) GL_COMPRESSED_RGB_S3TC_DXT1_EXT, "GL_COMPRESSED_RGB_S3TC_DXT1_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_S3TC_DXT1_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-S3TC-DXT1-EXT", (GLenum) GL_COMPRESSED_SRGB_S3TC_DXT1_EXT, "GL_COMPRESSED_SRGB_S3TC_DXT1_EXT");
#endif
#if defined(GL_COMPRESSED_RGBA_S3TC_DXT1_EXT)
defconsti(env, "GL-COMPRESSED-RGBA-S3TC-DXT1-EXT", (GLenum) GL_COMPRESSED_RGBA_S3TC_DXT1_EXT, "GL_COMPRESSED_RGBA_S3TC_DXT1_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-S3TC-DXT1-EXT", (GLenum) GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT, "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT");
#endif
#if defined(GL_COMPRESSED_RGBA_S3TC_DXT3_EXT)
defconsti(env, "GL-COMPRESSED-RGBA-S3TC-DXT3-EXT", (GLenum) GL_COMPRESSED_RGBA_S3TC_DXT3_EXT, "GL_COMPRESSED_RGBA_S3TC_DXT3_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-S3TC-DXT3-EXT", (GLenum) GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT, "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT");
#endif
#if defined(GL_COMPRESSED_RGBA_S3TC_DXT5_EXT)
defconsti(env, "GL-COMPRESSED-RGBA-S3TC-DXT5-EXT", (GLenum) GL_COMPRESSED_RGBA_S3TC_DXT5_EXT, "GL_COMPRESSED_RGBA_S3TC_DXT5_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-S3TC-DXT5-EXT", (GLenum) GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT, "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_3x3x3_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-3x3x3-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_3x3x3_OES, "GL_COMPRESSED_RGBA_ASTC_3x3x3_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_4x3x3_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-4x3x3-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_4x3x3_OES, "GL_COMPRESSED_RGBA_ASTC_4x3x3_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_4x4)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-4x4", (GLenum) GL_COMPRESSED_RGBA_ASTC_4x4, "GL_COMPRESSED_RGBA_ASTC_4x4");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_4x4_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-4x4-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_4x4_KHR, "GL_COMPRESSED_RGBA_ASTC_4x4_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_4x4x3_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-4x4x3-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_4x4x3_OES, "GL_COMPRESSED_RGBA_ASTC_4x4x3_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_4x4x4_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-4x4x4-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_4x4x4_OES, "GL_COMPRESSED_RGBA_ASTC_4x4x4_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_5x4)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-5x4", (GLenum) GL_COMPRESSED_RGBA_ASTC_5x4, "GL_COMPRESSED_RGBA_ASTC_5x4");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_5x4_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-5x4-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_5x4_KHR, "GL_COMPRESSED_RGBA_ASTC_5x4_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_5x4x4_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-5x4x4-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_5x4x4_OES, "GL_COMPRESSED_RGBA_ASTC_5x4x4_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_5x5)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-5x5", (GLenum) GL_COMPRESSED_RGBA_ASTC_5x5, "GL_COMPRESSED_RGBA_ASTC_5x5");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_5x5_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-5x5-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_5x5_KHR, "GL_COMPRESSED_RGBA_ASTC_5x5_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_5x5x4_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-5x5x4-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_5x5x4_OES, "GL_COMPRESSED_RGBA_ASTC_5x5x4_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_5x5x5_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-5x5x5-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_5x5x5_OES, "GL_COMPRESSED_RGBA_ASTC_5x5x5_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_6x5)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-6x5", (GLenum) GL_COMPRESSED_RGBA_ASTC_6x5, "GL_COMPRESSED_RGBA_ASTC_6x5");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_6x5_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-6x5-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_6x5_KHR, "GL_COMPRESSED_RGBA_ASTC_6x5_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_6x5x5_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-6x5x5-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_6x5x5_OES, "GL_COMPRESSED_RGBA_ASTC_6x5x5_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_6x6)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-6x6", (GLenum) GL_COMPRESSED_RGBA_ASTC_6x6, "GL_COMPRESSED_RGBA_ASTC_6x6");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_6x6_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-6x6-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_6x6_KHR, "GL_COMPRESSED_RGBA_ASTC_6x6_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_6x6x5_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-6x6x5-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_6x6x5_OES, "GL_COMPRESSED_RGBA_ASTC_6x6x5_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_6x6x6_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-6x6x6-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_6x6x6_OES, "GL_COMPRESSED_RGBA_ASTC_6x6x6_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_8x5)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-8x5", (GLenum) GL_COMPRESSED_RGBA_ASTC_8x5, "GL_COMPRESSED_RGBA_ASTC_8x5");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_8x5_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-8x5-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_8x5_KHR, "GL_COMPRESSED_RGBA_ASTC_8x5_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_8x6)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-8x6", (GLenum) GL_COMPRESSED_RGBA_ASTC_8x6, "GL_COMPRESSED_RGBA_ASTC_8x6");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_8x6_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-8x6-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_8x6_KHR, "GL_COMPRESSED_RGBA_ASTC_8x6_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_8x8)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-8x8", (GLenum) GL_COMPRESSED_RGBA_ASTC_8x8, "GL_COMPRESSED_RGBA_ASTC_8x8");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_8x8_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-8x8-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_8x8_KHR, "GL_COMPRESSED_RGBA_ASTC_8x8_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x10)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x10", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x10, "GL_COMPRESSED_RGBA_ASTC_10x10");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x10_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x10-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x10_KHR, "GL_COMPRESSED_RGBA_ASTC_10x10_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x5)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x5", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x5, "GL_COMPRESSED_RGBA_ASTC_10x5");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x5_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x5-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x5_KHR, "GL_COMPRESSED_RGBA_ASTC_10x5_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x6)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x6", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x6, "GL_COMPRESSED_RGBA_ASTC_10x6");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x6_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x6-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x6_KHR, "GL_COMPRESSED_RGBA_ASTC_10x6_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x8)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x8", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x8, "GL_COMPRESSED_RGBA_ASTC_10x8");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x8_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x8-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x8_KHR, "GL_COMPRESSED_RGBA_ASTC_10x8_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_12x10)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-12x10", (GLenum) GL_COMPRESSED_RGBA_ASTC_12x10, "GL_COMPRESSED_RGBA_ASTC_12x10");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_12x10_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-12x10-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_12x10_KHR, "GL_COMPRESSED_RGBA_ASTC_12x10_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_12x12)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-12x12", (GLenum) GL_COMPRESSED_RGBA_ASTC_12x12, "GL_COMPRESSED_RGBA_ASTC_12x12");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_12x12_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-12x12-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_12x12_KHR, "GL_COMPRESSED_RGBA_ASTC_12x12_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-3x3x3-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-4x3x3-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-4x4", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-4x4-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-4x4x3-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-4x4x4-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-5x4", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-5x4-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-5x4x4-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-5x5", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-5x5-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-5x5x4-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-5x5x5-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-6x5", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-6x5-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-6x5x5-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-6x6", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-6x6-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-6x6x5-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-6x6x6-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-8x5", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-8x5-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-8x6", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-8x6-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-8x8", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-8x8-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x10", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x10-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x5", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x5-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x6", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x6-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x8", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x8-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-12x10", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-12x10-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-12x12", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-12x12-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR");
#endif
#if defined(GL_PIXEL_MAP_A_TO_A)
defconsti(env, "GL-PIXEL-MAP-A-TO-A", (GLenum) GL_PIXEL_MAP_A_TO_A, "GL_PIXEL_MAP_A_TO_A");
#endif
#if defined(GL_PIXEL_MAP_B_TO_B)
defconsti(env, "GL-PIXEL-MAP-B-TO-B", (GLenum) GL_PIXEL_MAP_B_TO_B, "GL_PIXEL_MAP_B_TO_B");
#endif
#if defined(GL_PIXEL_MAP_G_TO_G)
defconsti(env, "GL-PIXEL-MAP-G-TO-G", (GLenum) GL_PIXEL_MAP_G_TO_G, "GL_PIXEL_MAP_G_TO_G");
#endif
#if defined(GL_PIXEL_MAP_I_TO_A)
defconsti(env, "GL-PIXEL-MAP-I-TO-A", (GLenum) GL_PIXEL_MAP_I_TO_A, "GL_PIXEL_MAP_I_TO_A");
#endif
#if defined(GL_PIXEL_MAP_I_TO_B)
defconsti(env, "GL-PIXEL-MAP-I-TO-B", (GLenum) GL_PIXEL_MAP_I_TO_B, "GL_PIXEL_MAP_I_TO_B");
#endif
#if defined(GL_PIXEL_MAP_I_TO_G)
defconsti(env, "GL-PIXEL-MAP-I-TO-G", (GLenum) GL_PIXEL_MAP_I_TO_G, "GL_PIXEL_MAP_I_TO_G");
#endif
#if defined(GL_PIXEL_MAP_I_TO_I)
defconsti(env, "GL-PIXEL-MAP-I-TO-I", (GLenum) GL_PIXEL_MAP_I_TO_I, "GL_PIXEL_MAP_I_TO_I");
#endif
#if defined(GL_PIXEL_MAP_I_TO_R)
defconsti(env, "GL-PIXEL-MAP-I-TO-R", (GLenum) GL_PIXEL_MAP_I_TO_R, "GL_PIXEL_MAP_I_TO_R");
#endif
#if defined(GL_PIXEL_MAP_R_TO_R)
defconsti(env, "GL-PIXEL-MAP-R-TO-R", (GLenum) GL_PIXEL_MAP_R_TO_R, "GL_PIXEL_MAP_R_TO_R");
#endif
#if defined(GL_PIXEL_MAP_S_TO_S)
defconsti(env, "GL-PIXEL-MAP-S-TO-S", (GLenum) GL_PIXEL_MAP_S_TO_S, "GL_PIXEL_MAP_S_TO_S");
#endif
#if defined(GL_PACK_ALIGNMENT)
defconsti(env, "GL-PACK-ALIGNMENT", (GLenum) GL_PACK_ALIGNMENT, "GL_PACK_ALIGNMENT");
#endif
#if defined(GL_PACK_IMAGE_DEPTH_SGIS)
defconsti(env, "GL-PACK-IMAGE-DEPTH-SGIS", (GLenum) GL_PACK_IMAGE_DEPTH_SGIS, "GL_PACK_IMAGE_DEPTH_SGIS");
#endif
#if defined(GL_PACK_IMAGE_HEIGHT)
defconsti(env, "GL-PACK-IMAGE-HEIGHT", (GLenum) GL_PACK_IMAGE_HEIGHT, "GL_PACK_IMAGE_HEIGHT");
#endif
#if defined(GL_PACK_IMAGE_HEIGHT_EXT)
defconsti(env, "GL-PACK-IMAGE-HEIGHT-EXT", (GLenum) GL_PACK_IMAGE_HEIGHT_EXT, "GL_PACK_IMAGE_HEIGHT_EXT");
#endif
#if defined(GL_PACK_LSB_FIRST)
defconsti(env, "GL-PACK-LSB-FIRST", (GLenum) GL_PACK_LSB_FIRST, "GL_PACK_LSB_FIRST");
#endif
#if defined(GL_PACK_RESAMPLE_OML)
defconsti(env, "GL-PACK-RESAMPLE-OML", (GLenum) GL_PACK_RESAMPLE_OML, "GL_PACK_RESAMPLE_OML");
#endif
#if defined(GL_PACK_RESAMPLE_SGIX)
defconsti(env, "GL-PACK-RESAMPLE-SGIX", (GLenum) GL_PACK_RESAMPLE_SGIX, "GL_PACK_RESAMPLE_SGIX");
#endif
#if defined(GL_PACK_ROW_LENGTH)
defconsti(env, "GL-PACK-ROW-LENGTH", (GLenum) GL_PACK_ROW_LENGTH, "GL_PACK_ROW_LENGTH");
#endif
#if defined(GL_PACK_SKIP_IMAGES)
defconsti(env, "GL-PACK-SKIP-IMAGES", (GLenum) GL_PACK_SKIP_IMAGES, "GL_PACK_SKIP_IMAGES");
#endif
#if defined(GL_PACK_SKIP_IMAGES_EXT)
defconsti(env, "GL-PACK-SKIP-IMAGES-EXT", (GLenum) GL_PACK_SKIP_IMAGES_EXT, "GL_PACK_SKIP_IMAGES_EXT");
#endif
#if defined(GL_PACK_SKIP_PIXELS)
defconsti(env, "GL-PACK-SKIP-PIXELS", (GLenum) GL_PACK_SKIP_PIXELS, "GL_PACK_SKIP_PIXELS");
#endif
#if defined(GL_PACK_SKIP_ROWS)
defconsti(env, "GL-PACK-SKIP-ROWS", (GLenum) GL_PACK_SKIP_ROWS, "GL_PACK_SKIP_ROWS");
#endif
#if defined(GL_PACK_SKIP_VOLUMES_SGIS)
defconsti(env, "GL-PACK-SKIP-VOLUMES-SGIS", (GLenum) GL_PACK_SKIP_VOLUMES_SGIS, "GL_PACK_SKIP_VOLUMES_SGIS");
#endif
#if defined(GL_PACK_SUBSAMPLE_RATE_SGIX)
defconsti(env, "GL-PACK-SUBSAMPLE-RATE-SGIX", (GLenum) GL_PACK_SUBSAMPLE_RATE_SGIX, "GL_PACK_SUBSAMPLE_RATE_SGIX");
#endif
#if defined(GL_PACK_SWAP_BYTES)
defconsti(env, "GL-PACK-SWAP-BYTES", (GLenum) GL_PACK_SWAP_BYTES, "GL_PACK_SWAP_BYTES");
#endif
#if defined(GL_PIXEL_TILE_CACHE_SIZE_SGIX)
defconsti(env, "GL-PIXEL-TILE-CACHE-SIZE-SGIX", (GLenum) GL_PIXEL_TILE_CACHE_SIZE_SGIX, "GL_PIXEL_TILE_CACHE_SIZE_SGIX");
#endif
#if defined(GL_PIXEL_TILE_GRID_DEPTH_SGIX)
defconsti(env, "GL-PIXEL-TILE-GRID-DEPTH-SGIX", (GLenum) GL_PIXEL_TILE_GRID_DEPTH_SGIX, "GL_PIXEL_TILE_GRID_DEPTH_SGIX");
#endif
#if defined(GL_PIXEL_TILE_GRID_HEIGHT_SGIX)
defconsti(env, "GL-PIXEL-TILE-GRID-HEIGHT-SGIX", (GLenum) GL_PIXEL_TILE_GRID_HEIGHT_SGIX, "GL_PIXEL_TILE_GRID_HEIGHT_SGIX");
#endif
#if defined(GL_PIXEL_TILE_GRID_WIDTH_SGIX)
defconsti(env, "GL-PIXEL-TILE-GRID-WIDTH-SGIX", (GLenum) GL_PIXEL_TILE_GRID_WIDTH_SGIX, "GL_PIXEL_TILE_GRID_WIDTH_SGIX");
#endif
#if defined(GL_PIXEL_TILE_HEIGHT_SGIX)
defconsti(env, "GL-PIXEL-TILE-HEIGHT-SGIX", (GLenum) GL_PIXEL_TILE_HEIGHT_SGIX, "GL_PIXEL_TILE_HEIGHT_SGIX");
#endif
#if defined(GL_PIXEL_TILE_WIDTH_SGIX)
defconsti(env, "GL-PIXEL-TILE-WIDTH-SGIX", (GLenum) GL_PIXEL_TILE_WIDTH_SGIX, "GL_PIXEL_TILE_WIDTH_SGIX");
#endif
#if defined(GL_UNPACK_ALIGNMENT)
defconsti(env, "GL-UNPACK-ALIGNMENT", (GLenum) GL_UNPACK_ALIGNMENT, "GL_UNPACK_ALIGNMENT");
#endif
#if defined(GL_UNPACK_IMAGE_DEPTH_SGIS)
defconsti(env, "GL-UNPACK-IMAGE-DEPTH-SGIS", (GLenum) GL_UNPACK_IMAGE_DEPTH_SGIS, "GL_UNPACK_IMAGE_DEPTH_SGIS");
#endif
#if defined(GL_UNPACK_IMAGE_HEIGHT)
defconsti(env, "GL-UNPACK-IMAGE-HEIGHT", (GLenum) GL_UNPACK_IMAGE_HEIGHT, "GL_UNPACK_IMAGE_HEIGHT");
#endif
#if defined(GL_UNPACK_IMAGE_HEIGHT_EXT)
defconsti(env, "GL-UNPACK-IMAGE-HEIGHT-EXT", (GLenum) GL_UNPACK_IMAGE_HEIGHT_EXT, "GL_UNPACK_IMAGE_HEIGHT_EXT");
#endif
#if defined(GL_UNPACK_LSB_FIRST)
defconsti(env, "GL-UNPACK-LSB-FIRST", (GLenum) GL_UNPACK_LSB_FIRST, "GL_UNPACK_LSB_FIRST");
#endif
#if defined(GL_UNPACK_RESAMPLE_OML)
defconsti(env, "GL-UNPACK-RESAMPLE-OML", (GLenum) GL_UNPACK_RESAMPLE_OML, "GL_UNPACK_RESAMPLE_OML");
#endif
#if defined(GL_UNPACK_RESAMPLE_SGIX)
defconsti(env, "GL-UNPACK-RESAMPLE-SGIX", (GLenum) GL_UNPACK_RESAMPLE_SGIX, "GL_UNPACK_RESAMPLE_SGIX");
#endif
#if defined(GL_UNPACK_ROW_LENGTH)
defconsti(env, "GL-UNPACK-ROW-LENGTH", (GLenum) GL_UNPACK_ROW_LENGTH, "GL_UNPACK_ROW_LENGTH");
#endif
#if defined(GL_UNPACK_ROW_LENGTH_EXT)
defconsti(env, "GL-UNPACK-ROW-LENGTH-EXT", (GLenum) GL_UNPACK_ROW_LENGTH_EXT, "GL_UNPACK_ROW_LENGTH_EXT");
#endif
#if defined(GL_UNPACK_SKIP_IMAGES)
defconsti(env, "GL-UNPACK-SKIP-IMAGES", (GLenum) GL_UNPACK_SKIP_IMAGES, "GL_UNPACK_SKIP_IMAGES");
#endif
#if defined(GL_UNPACK_SKIP_IMAGES_EXT)
defconsti(env, "GL-UNPACK-SKIP-IMAGES-EXT", (GLenum) GL_UNPACK_SKIP_IMAGES_EXT, "GL_UNPACK_SKIP_IMAGES_EXT");
#endif
#if defined(GL_UNPACK_SKIP_PIXELS)
defconsti(env, "GL-UNPACK-SKIP-PIXELS", (GLenum) GL_UNPACK_SKIP_PIXELS, "GL_UNPACK_SKIP_PIXELS");
#endif
#if defined(GL_UNPACK_SKIP_PIXELS_EXT)
defconsti(env, "GL-UNPACK-SKIP-PIXELS-EXT", (GLenum) GL_UNPACK_SKIP_PIXELS_EXT, "GL_UNPACK_SKIP_PIXELS_EXT");
#endif
#if defined(GL_UNPACK_SKIP_ROWS)
defconsti(env, "GL-UNPACK-SKIP-ROWS", (GLenum) GL_UNPACK_SKIP_ROWS, "GL_UNPACK_SKIP_ROWS");
#endif
#if defined(GL_UNPACK_SKIP_ROWS_EXT)
defconsti(env, "GL-UNPACK-SKIP-ROWS-EXT", (GLenum) GL_UNPACK_SKIP_ROWS_EXT, "GL_UNPACK_SKIP_ROWS_EXT");
#endif
#if defined(GL_UNPACK_SKIP_VOLUMES_SGIS)
defconsti(env, "GL-UNPACK-SKIP-VOLUMES-SGIS", (GLenum) GL_UNPACK_SKIP_VOLUMES_SGIS, "GL_UNPACK_SKIP_VOLUMES_SGIS");
#endif
#if defined(GL_UNPACK_SUBSAMPLE_RATE_SGIX)
defconsti(env, "GL-UNPACK-SUBSAMPLE-RATE-SGIX", (GLenum) GL_UNPACK_SUBSAMPLE_RATE_SGIX, "GL_UNPACK_SUBSAMPLE_RATE_SGIX");
#endif
#if defined(GL_UNPACK_SWAP_BYTES)
defconsti(env, "GL-UNPACK-SWAP-BYTES", (GLenum) GL_UNPACK_SWAP_BYTES, "GL_UNPACK_SWAP_BYTES");
#endif
#if defined(GL_RESAMPLE_DECIMATE_SGIX)
defconsti(env, "GL-RESAMPLE-DECIMATE-SGIX", (GLenum) GL_RESAMPLE_DECIMATE_SGIX, "GL_RESAMPLE_DECIMATE_SGIX");
#endif
#if defined(GL_RESAMPLE_REPLICATE_SGIX)
defconsti(env, "GL-RESAMPLE-REPLICATE-SGIX", (GLenum) GL_RESAMPLE_REPLICATE_SGIX, "GL_RESAMPLE_REPLICATE_SGIX");
#endif
#if defined(GL_RESAMPLE_ZERO_FILL_SGIX)
defconsti(env, "GL-RESAMPLE-ZERO-FILL-SGIX", (GLenum) GL_RESAMPLE_ZERO_FILL_SGIX, "GL_RESAMPLE_ZERO_FILL_SGIX");
#endif
#if defined(GL_PIXEL_SUBSAMPLE_2424_SGIX)
defconsti(env, "GL-PIXEL-SUBSAMPLE-2424-SGIX", (GLenum) GL_PIXEL_SUBSAMPLE_2424_SGIX, "GL_PIXEL_SUBSAMPLE_2424_SGIX");
#endif
#if defined(GL_PIXEL_SUBSAMPLE_4242_SGIX)
defconsti(env, "GL-PIXEL-SUBSAMPLE-4242-SGIX", (GLenum) GL_PIXEL_SUBSAMPLE_4242_SGIX, "GL_PIXEL_SUBSAMPLE_4242_SGIX");
#endif
#if defined(GL_PIXEL_SUBSAMPLE_4444_SGIX)
defconsti(env, "GL-PIXEL-SUBSAMPLE-4444-SGIX", (GLenum) GL_PIXEL_SUBSAMPLE_4444_SGIX, "GL_PIXEL_SUBSAMPLE_4444_SGIX");
#endif
#if defined(GL_LUMINANCE)
defconsti(env, "GL-LUMINANCE", (GLenum) GL_LUMINANCE, "GL_LUMINANCE");
#endif
#if defined(GL_LUMINANCE_ALPHA)
defconsti(env, "GL-LUMINANCE-ALPHA", (GLenum) GL_LUMINANCE_ALPHA, "GL_LUMINANCE_ALPHA");
#endif
#if defined(GL_NONE)
defconsti(env, "GL-NONE", (GLenum) GL_NONE, "GL_NONE");
#endif
#if defined(GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-ALPHA-LS-SGIX", (GLenum) GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX, "GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX");
#endif
#if defined(GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-ALPHA-MS-SGIX", (GLenum) GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX, "GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX");
#endif
#if defined(GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-ALPHA-NO-REPLACE-SGIX", (GLenum) GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX, "GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX");
#endif
#if defined(GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-ALPHA-REPLACE-SGIX", (GLenum) GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX, "GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX");
#endif
#if defined(GL_RGB)
defconsti(env, "GL-RGB", (GLenum) GL_RGB, "GL_RGB");
#endif
#if defined(GL_RGBA)
defconsti(env, "GL-RGBA", (GLenum) GL_RGBA, "GL_RGBA");
#endif
#if defined(GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS)
defconsti(env, "GL-PIXEL-FRAGMENT-ALPHA-SOURCE-SGIS", (GLenum) GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS, "GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS");
#endif
#if defined(GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS)
defconsti(env, "GL-PIXEL-FRAGMENT-RGB-SOURCE-SGIS", (GLenum) GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS, "GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS");
#endif
#if defined(GL_ALPHA_BIAS)
defconsti(env, "GL-ALPHA-BIAS", (GLenum) GL_ALPHA_BIAS, "GL_ALPHA_BIAS");
#endif
#if defined(GL_ALPHA_SCALE)
defconsti(env, "GL-ALPHA-SCALE", (GLenum) GL_ALPHA_SCALE, "GL_ALPHA_SCALE");
#endif
#if defined(GL_BLUE_BIAS)
defconsti(env, "GL-BLUE-BIAS", (GLenum) GL_BLUE_BIAS, "GL_BLUE_BIAS");
#endif
#if defined(GL_BLUE_SCALE)
defconsti(env, "GL-BLUE-SCALE", (GLenum) GL_BLUE_SCALE, "GL_BLUE_SCALE");
#endif
#if defined(GL_DEPTH_BIAS)
defconsti(env, "GL-DEPTH-BIAS", (GLenum) GL_DEPTH_BIAS, "GL_DEPTH_BIAS");
#endif
#if defined(GL_DEPTH_SCALE)
defconsti(env, "GL-DEPTH-SCALE", (GLenum) GL_DEPTH_SCALE, "GL_DEPTH_SCALE");
#endif
#if defined(GL_GREEN_BIAS)
defconsti(env, "GL-GREEN-BIAS", (GLenum) GL_GREEN_BIAS, "GL_GREEN_BIAS");
#endif
#if defined(GL_GREEN_SCALE)
defconsti(env, "GL-GREEN-SCALE", (GLenum) GL_GREEN_SCALE, "GL_GREEN_SCALE");
#endif
#if defined(GL_INDEX_OFFSET)
defconsti(env, "GL-INDEX-OFFSET", (GLenum) GL_INDEX_OFFSET, "GL_INDEX_OFFSET");
#endif
#if defined(GL_INDEX_SHIFT)
defconsti(env, "GL-INDEX-SHIFT", (GLenum) GL_INDEX_SHIFT, "GL_INDEX_SHIFT");
#endif
#if defined(GL_MAP_COLOR)
defconsti(env, "GL-MAP-COLOR", (GLenum) GL_MAP_COLOR, "GL_MAP_COLOR");
#endif
#if defined(GL_MAP_STENCIL)
defconsti(env, "GL-MAP-STENCIL", (GLenum) GL_MAP_STENCIL, "GL_MAP_STENCIL");
#endif
#if defined(GL_POST_COLOR_MATRIX_ALPHA_BIAS)
defconsti(env, "GL-POST-COLOR-MATRIX-ALPHA-BIAS", (GLenum) GL_POST_COLOR_MATRIX_ALPHA_BIAS, "GL_POST_COLOR_MATRIX_ALPHA_BIAS");
#endif
#if defined(GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-ALPHA-BIAS-SGI", (GLenum) GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI, "GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_ALPHA_SCALE)
defconsti(env, "GL-POST-COLOR-MATRIX-ALPHA-SCALE", (GLenum) GL_POST_COLOR_MATRIX_ALPHA_SCALE, "GL_POST_COLOR_MATRIX_ALPHA_SCALE");
#endif
#if defined(GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-ALPHA-SCALE-SGI", (GLenum) GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI, "GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_BLUE_BIAS)
defconsti(env, "GL-POST-COLOR-MATRIX-BLUE-BIAS", (GLenum) GL_POST_COLOR_MATRIX_BLUE_BIAS, "GL_POST_COLOR_MATRIX_BLUE_BIAS");
#endif
#if defined(GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-BLUE-BIAS-SGI", (GLenum) GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI, "GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_BLUE_SCALE)
defconsti(env, "GL-POST-COLOR-MATRIX-BLUE-SCALE", (GLenum) GL_POST_COLOR_MATRIX_BLUE_SCALE, "GL_POST_COLOR_MATRIX_BLUE_SCALE");
#endif
#if defined(GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-BLUE-SCALE-SGI", (GLenum) GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI, "GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_GREEN_BIAS)
defconsti(env, "GL-POST-COLOR-MATRIX-GREEN-BIAS", (GLenum) GL_POST_COLOR_MATRIX_GREEN_BIAS, "GL_POST_COLOR_MATRIX_GREEN_BIAS");
#endif
#if defined(GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-GREEN-BIAS-SGI", (GLenum) GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI, "GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_GREEN_SCALE)
defconsti(env, "GL-POST-COLOR-MATRIX-GREEN-SCALE", (GLenum) GL_POST_COLOR_MATRIX_GREEN_SCALE, "GL_POST_COLOR_MATRIX_GREEN_SCALE");
#endif
#if defined(GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-GREEN-SCALE-SGI", (GLenum) GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI, "GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_RED_BIAS)
defconsti(env, "GL-POST-COLOR-MATRIX-RED-BIAS", (GLenum) GL_POST_COLOR_MATRIX_RED_BIAS, "GL_POST_COLOR_MATRIX_RED_BIAS");
#endif
#if defined(GL_POST_COLOR_MATRIX_RED_BIAS_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-RED-BIAS-SGI", (GLenum) GL_POST_COLOR_MATRIX_RED_BIAS_SGI, "GL_POST_COLOR_MATRIX_RED_BIAS_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_RED_SCALE)
defconsti(env, "GL-POST-COLOR-MATRIX-RED-SCALE", (GLenum) GL_POST_COLOR_MATRIX_RED_SCALE, "GL_POST_COLOR_MATRIX_RED_SCALE");
#endif
#if defined(GL_POST_COLOR_MATRIX_RED_SCALE_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-RED-SCALE-SGI", (GLenum) GL_POST_COLOR_MATRIX_RED_SCALE_SGI, "GL_POST_COLOR_MATRIX_RED_SCALE_SGI");
#endif
#if defined(GL_POST_CONVOLUTION_ALPHA_BIAS)
defconsti(env, "GL-POST-CONVOLUTION-ALPHA-BIAS", (GLenum) GL_POST_CONVOLUTION_ALPHA_BIAS, "GL_POST_CONVOLUTION_ALPHA_BIAS");
#endif
#if defined(GL_POST_CONVOLUTION_ALPHA_BIAS_EXT)
defconsti(env, "GL-POST-CONVOLUTION-ALPHA-BIAS-EXT", (GLenum) GL_POST_CONVOLUTION_ALPHA_BIAS_EXT, "GL_POST_CONVOLUTION_ALPHA_BIAS_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_ALPHA_SCALE)
defconsti(env, "GL-POST-CONVOLUTION-ALPHA-SCALE", (GLenum) GL_POST_CONVOLUTION_ALPHA_SCALE, "GL_POST_CONVOLUTION_ALPHA_SCALE");
#endif
#if defined(GL_POST_CONVOLUTION_ALPHA_SCALE_EXT)
defconsti(env, "GL-POST-CONVOLUTION-ALPHA-SCALE-EXT", (GLenum) GL_POST_CONVOLUTION_ALPHA_SCALE_EXT, "GL_POST_CONVOLUTION_ALPHA_SCALE_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_BLUE_BIAS)
defconsti(env, "GL-POST-CONVOLUTION-BLUE-BIAS", (GLenum) GL_POST_CONVOLUTION_BLUE_BIAS, "GL_POST_CONVOLUTION_BLUE_BIAS");
#endif
#if defined(GL_POST_CONVOLUTION_BLUE_BIAS_EXT)
defconsti(env, "GL-POST-CONVOLUTION-BLUE-BIAS-EXT", (GLenum) GL_POST_CONVOLUTION_BLUE_BIAS_EXT, "GL_POST_CONVOLUTION_BLUE_BIAS_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_BLUE_SCALE)
defconsti(env, "GL-POST-CONVOLUTION-BLUE-SCALE", (GLenum) GL_POST_CONVOLUTION_BLUE_SCALE, "GL_POST_CONVOLUTION_BLUE_SCALE");
#endif
#if defined(GL_POST_CONVOLUTION_BLUE_SCALE_EXT)
defconsti(env, "GL-POST-CONVOLUTION-BLUE-SCALE-EXT", (GLenum) GL_POST_CONVOLUTION_BLUE_SCALE_EXT, "GL_POST_CONVOLUTION_BLUE_SCALE_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_GREEN_BIAS)
defconsti(env, "GL-POST-CONVOLUTION-GREEN-BIAS", (GLenum) GL_POST_CONVOLUTION_GREEN_BIAS, "GL_POST_CONVOLUTION_GREEN_BIAS");
#endif
#if defined(GL_POST_CONVOLUTION_GREEN_BIAS_EXT)
defconsti(env, "GL-POST-CONVOLUTION-GREEN-BIAS-EXT", (GLenum) GL_POST_CONVOLUTION_GREEN_BIAS_EXT, "GL_POST_CONVOLUTION_GREEN_BIAS_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_GREEN_SCALE)
defconsti(env, "GL-POST-CONVOLUTION-GREEN-SCALE", (GLenum) GL_POST_CONVOLUTION_GREEN_SCALE, "GL_POST_CONVOLUTION_GREEN_SCALE");
#endif
#if defined(GL_POST_CONVOLUTION_GREEN_SCALE_EXT)
defconsti(env, "GL-POST-CONVOLUTION-GREEN-SCALE-EXT", (GLenum) GL_POST_CONVOLUTION_GREEN_SCALE_EXT, "GL_POST_CONVOLUTION_GREEN_SCALE_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_RED_BIAS)
defconsti(env, "GL-POST-CONVOLUTION-RED-BIAS", (GLenum) GL_POST_CONVOLUTION_RED_BIAS, "GL_POST_CONVOLUTION_RED_BIAS");
#endif
#if defined(GL_POST_CONVOLUTION_RED_BIAS_EXT)
defconsti(env, "GL-POST-CONVOLUTION-RED-BIAS-EXT", (GLenum) GL_POST_CONVOLUTION_RED_BIAS_EXT, "GL_POST_CONVOLUTION_RED_BIAS_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_RED_SCALE)
defconsti(env, "GL-POST-CONVOLUTION-RED-SCALE", (GLenum) GL_POST_CONVOLUTION_RED_SCALE, "GL_POST_CONVOLUTION_RED_SCALE");
#endif
#if defined(GL_POST_CONVOLUTION_RED_SCALE_EXT)
defconsti(env, "GL-POST-CONVOLUTION-RED-SCALE-EXT", (GLenum) GL_POST_CONVOLUTION_RED_SCALE_EXT, "GL_POST_CONVOLUTION_RED_SCALE_EXT");
#endif
#if defined(GL_RED_BIAS)
defconsti(env, "GL-RED-BIAS", (GLenum) GL_RED_BIAS, "GL_RED_BIAS");
#endif
#if defined(GL_RED_SCALE)
defconsti(env, "GL-RED-SCALE", (GLenum) GL_RED_SCALE, "GL_RED_SCALE");
#endif
#if defined(GL_BITMAP)
defconsti(env, "GL-BITMAP", (GLenum) GL_BITMAP, "GL_BITMAP");
#endif
#if defined(GL_BYTE)
defconsti(env, "GL-BYTE", (GLenum) GL_BYTE, "GL_BYTE");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_INT)
defconsti(env, "GL-INT", (GLenum) GL_INT, "GL_INT");
#endif
#if defined(GL_SHORT)
defconsti(env, "GL-SHORT", (GLenum) GL_SHORT, "GL_SHORT");
#endif
#if defined(GL_UNSIGNED_BYTE)
defconsti(env, "GL-UNSIGNED-BYTE", (GLenum) GL_UNSIGNED_BYTE, "GL_UNSIGNED_BYTE");
#endif
#if defined(GL_UNSIGNED_BYTE_3_3_2)
defconsti(env, "GL-UNSIGNED-BYTE-3-3-2", (GLenum) GL_UNSIGNED_BYTE_3_3_2, "GL_UNSIGNED_BYTE_3_3_2");
#endif
#if defined(GL_UNSIGNED_BYTE_3_3_2_EXT)
defconsti(env, "GL-UNSIGNED-BYTE-3-3-2-EXT", (GLenum) GL_UNSIGNED_BYTE_3_3_2_EXT, "GL_UNSIGNED_BYTE_3_3_2_EXT");
#endif
#if defined(GL_UNSIGNED_INT)
defconsti(env, "GL-UNSIGNED-INT", (GLenum) GL_UNSIGNED_INT, "GL_UNSIGNED_INT");
#endif
#if defined(GL_UNSIGNED_INT_10_10_10_2)
defconsti(env, "GL-UNSIGNED-INT-10-10-10-2", (GLenum) GL_UNSIGNED_INT_10_10_10_2, "GL_UNSIGNED_INT_10_10_10_2");
#endif
#if defined(GL_UNSIGNED_INT_10_10_10_2_EXT)
defconsti(env, "GL-UNSIGNED-INT-10-10-10-2-EXT", (GLenum) GL_UNSIGNED_INT_10_10_10_2_EXT, "GL_UNSIGNED_INT_10_10_10_2_EXT");
#endif
#if defined(GL_UNSIGNED_INT_8_8_8_8)
defconsti(env, "GL-UNSIGNED-INT-8-8-8-8", (GLenum) GL_UNSIGNED_INT_8_8_8_8, "GL_UNSIGNED_INT_8_8_8_8");
#endif
#if defined(GL_UNSIGNED_INT_8_8_8_8_EXT)
defconsti(env, "GL-UNSIGNED-INT-8-8-8-8-EXT", (GLenum) GL_UNSIGNED_INT_8_8_8_8_EXT, "GL_UNSIGNED_INT_8_8_8_8_EXT");
#endif
#if defined(GL_UNSIGNED_SHORT)
defconsti(env, "GL-UNSIGNED-SHORT", (GLenum) GL_UNSIGNED_SHORT, "GL_UNSIGNED_SHORT");
#endif
#if defined(GL_UNSIGNED_SHORT_4_4_4_4)
defconsti(env, "GL-UNSIGNED-SHORT-4-4-4-4", (GLenum) GL_UNSIGNED_SHORT_4_4_4_4, "GL_UNSIGNED_SHORT_4_4_4_4");
#endif
#if defined(GL_UNSIGNED_SHORT_4_4_4_4_EXT)
defconsti(env, "GL-UNSIGNED-SHORT-4-4-4-4-EXT", (GLenum) GL_UNSIGNED_SHORT_4_4_4_4_EXT, "GL_UNSIGNED_SHORT_4_4_4_4_EXT");
#endif
#if defined(GL_UNSIGNED_SHORT_5_5_5_1)
defconsti(env, "GL-UNSIGNED-SHORT-5-5-5-1", (GLenum) GL_UNSIGNED_SHORT_5_5_5_1, "GL_UNSIGNED_SHORT_5_5_5_1");
#endif
#if defined(GL_UNSIGNED_SHORT_5_5_5_1_EXT)
defconsti(env, "GL-UNSIGNED-SHORT-5-5-5-1-EXT", (GLenum) GL_UNSIGNED_SHORT_5_5_5_1_EXT, "GL_UNSIGNED_SHORT_5_5_5_1_EXT");
#endif
#if defined(GL_DISTANCE_ATTENUATION_EXT)
defconsti(env, "GL-DISTANCE-ATTENUATION-EXT", (GLenum) GL_DISTANCE_ATTENUATION_EXT, "GL_DISTANCE_ATTENUATION_EXT");
#endif
#if defined(GL_DISTANCE_ATTENUATION_SGIS)
defconsti(env, "GL-DISTANCE-ATTENUATION-SGIS", (GLenum) GL_DISTANCE_ATTENUATION_SGIS, "GL_DISTANCE_ATTENUATION_SGIS");
#endif
#if defined(GL_POINT_DISTANCE_ATTENUATION)
defconsti(env, "GL-POINT-DISTANCE-ATTENUATION", (GLenum) GL_POINT_DISTANCE_ATTENUATION, "GL_POINT_DISTANCE_ATTENUATION");
#endif
#if defined(GL_POINT_DISTANCE_ATTENUATION_ARB)
defconsti(env, "GL-POINT-DISTANCE-ATTENUATION-ARB", (GLenum) GL_POINT_DISTANCE_ATTENUATION_ARB, "GL_POINT_DISTANCE_ATTENUATION_ARB");
#endif
#if defined(GL_POINT_FADE_THRESHOLD_SIZE)
defconsti(env, "GL-POINT-FADE-THRESHOLD-SIZE", (GLenum) GL_POINT_FADE_THRESHOLD_SIZE, "GL_POINT_FADE_THRESHOLD_SIZE");
#endif
#if defined(GL_POINT_FADE_THRESHOLD_SIZE_ARB)
defconsti(env, "GL-POINT-FADE-THRESHOLD-SIZE-ARB", (GLenum) GL_POINT_FADE_THRESHOLD_SIZE_ARB, "GL_POINT_FADE_THRESHOLD_SIZE_ARB");
#endif
#if defined(GL_POINT_FADE_THRESHOLD_SIZE_EXT)
defconsti(env, "GL-POINT-FADE-THRESHOLD-SIZE-EXT", (GLenum) GL_POINT_FADE_THRESHOLD_SIZE_EXT, "GL_POINT_FADE_THRESHOLD_SIZE_EXT");
#endif
#if defined(GL_POINT_FADE_THRESHOLD_SIZE_SGIS)
defconsti(env, "GL-POINT-FADE-THRESHOLD-SIZE-SGIS", (GLenum) GL_POINT_FADE_THRESHOLD_SIZE_SGIS, "GL_POINT_FADE_THRESHOLD_SIZE_SGIS");
#endif
#if defined(GL_POINT_SIZE_MAX)
defconsti(env, "GL-POINT-SIZE-MAX", (GLenum) GL_POINT_SIZE_MAX, "GL_POINT_SIZE_MAX");
#endif
#if defined(GL_POINT_SIZE_MAX_ARB)
defconsti(env, "GL-POINT-SIZE-MAX-ARB", (GLenum) GL_POINT_SIZE_MAX_ARB, "GL_POINT_SIZE_MAX_ARB");
#endif
#if defined(GL_POINT_SIZE_MAX_EXT)
defconsti(env, "GL-POINT-SIZE-MAX-EXT", (GLenum) GL_POINT_SIZE_MAX_EXT, "GL_POINT_SIZE_MAX_EXT");
#endif
#if defined(GL_POINT_SIZE_MAX_SGIS)
defconsti(env, "GL-POINT-SIZE-MAX-SGIS", (GLenum) GL_POINT_SIZE_MAX_SGIS, "GL_POINT_SIZE_MAX_SGIS");
#endif
#if defined(GL_POINT_SIZE_MIN)
defconsti(env, "GL-POINT-SIZE-MIN", (GLenum) GL_POINT_SIZE_MIN, "GL_POINT_SIZE_MIN");
#endif
#if defined(GL_POINT_SIZE_MIN_ARB)
defconsti(env, "GL-POINT-SIZE-MIN-ARB", (GLenum) GL_POINT_SIZE_MIN_ARB, "GL_POINT_SIZE_MIN_ARB");
#endif
#if defined(GL_POINT_SIZE_MIN_EXT)
defconsti(env, "GL-POINT-SIZE-MIN-EXT", (GLenum) GL_POINT_SIZE_MIN_EXT, "GL_POINT_SIZE_MIN_EXT");
#endif
#if defined(GL_POINT_SIZE_MIN_SGIS)
defconsti(env, "GL-POINT-SIZE-MIN-SGIS", (GLenum) GL_POINT_SIZE_MIN_SGIS, "GL_POINT_SIZE_MIN_SGIS");
#endif
#if defined(GL_FILL)
defconsti(env, "GL-FILL", (GLenum) GL_FILL, "GL_FILL");
#endif
#if defined(GL_LINE)
defconsti(env, "GL-LINE", (GLenum) GL_LINE, "GL_LINE");
#endif
#if defined(GL_POINT)
defconsti(env, "GL-POINT", (GLenum) GL_POINT, "GL_POINT");
#endif
#if defined(GL_LINES)
defconsti(env, "GL-LINES", (GLenum) GL_LINES, "GL_LINES");
#endif
#if defined(GL_LINES_ADJACENCY)
defconsti(env, "GL-LINES-ADJACENCY", (GLenum) GL_LINES_ADJACENCY, "GL_LINES_ADJACENCY");
#endif
#if defined(GL_LINES_ADJACENCY_ARB)
defconsti(env, "GL-LINES-ADJACENCY-ARB", (GLenum) GL_LINES_ADJACENCY_ARB, "GL_LINES_ADJACENCY_ARB");
#endif
#if defined(GL_LINES_ADJACENCY_EXT)
defconsti(env, "GL-LINES-ADJACENCY-EXT", (GLenum) GL_LINES_ADJACENCY_EXT, "GL_LINES_ADJACENCY_EXT");
#endif
#if defined(GL_LINE_LOOP)
defconsti(env, "GL-LINE-LOOP", (GLenum) GL_LINE_LOOP, "GL_LINE_LOOP");
#endif
#if defined(GL_LINE_STRIP)
defconsti(env, "GL-LINE-STRIP", (GLenum) GL_LINE_STRIP, "GL_LINE_STRIP");
#endif
#if defined(GL_LINE_STRIP_ADJACENCY)
defconsti(env, "GL-LINE-STRIP-ADJACENCY", (GLenum) GL_LINE_STRIP_ADJACENCY, "GL_LINE_STRIP_ADJACENCY");
#endif
#if defined(GL_LINE_STRIP_ADJACENCY_ARB)
defconsti(env, "GL-LINE-STRIP-ADJACENCY-ARB", (GLenum) GL_LINE_STRIP_ADJACENCY_ARB, "GL_LINE_STRIP_ADJACENCY_ARB");
#endif
#if defined(GL_LINE_STRIP_ADJACENCY_EXT)
defconsti(env, "GL-LINE-STRIP-ADJACENCY-EXT", (GLenum) GL_LINE_STRIP_ADJACENCY_EXT, "GL_LINE_STRIP_ADJACENCY_EXT");
#endif
#if defined(GL_PATCHES)
defconsti(env, "GL-PATCHES", (GLenum) GL_PATCHES, "GL_PATCHES");
#endif
#if defined(GL_PATCHES_EXT)
defconsti(env, "GL-PATCHES-EXT", (GLenum) GL_PATCHES_EXT, "GL_PATCHES_EXT");
#endif
#if defined(GL_POINTS)
defconsti(env, "GL-POINTS", (GLenum) GL_POINTS, "GL_POINTS");
#endif
#if defined(GL_POLYGON)
defconsti(env, "GL-POLYGON", (GLenum) GL_POLYGON, "GL_POLYGON");
#endif
#if defined(GL_QUADS)
defconsti(env, "GL-QUADS", (GLenum) GL_QUADS, "GL_QUADS");
#endif
#if defined(GL_QUADS_EXT)
defconsti(env, "GL-QUADS-EXT", (GLenum) GL_QUADS_EXT, "GL_QUADS_EXT");
#endif
#if defined(GL_QUAD_STRIP)
defconsti(env, "GL-QUAD-STRIP", (GLenum) GL_QUAD_STRIP, "GL_QUAD_STRIP");
#endif
#if defined(GL_TRIANGLES)
defconsti(env, "GL-TRIANGLES", (GLenum) GL_TRIANGLES, "GL_TRIANGLES");
#endif
#if defined(GL_TRIANGLES_ADJACENCY)
defconsti(env, "GL-TRIANGLES-ADJACENCY", (GLenum) GL_TRIANGLES_ADJACENCY, "GL_TRIANGLES_ADJACENCY");
#endif
#if defined(GL_TRIANGLES_ADJACENCY_ARB)
defconsti(env, "GL-TRIANGLES-ADJACENCY-ARB", (GLenum) GL_TRIANGLES_ADJACENCY_ARB, "GL_TRIANGLES_ADJACENCY_ARB");
#endif
#if defined(GL_TRIANGLES_ADJACENCY_EXT)
defconsti(env, "GL-TRIANGLES-ADJACENCY-EXT", (GLenum) GL_TRIANGLES_ADJACENCY_EXT, "GL_TRIANGLES_ADJACENCY_EXT");
#endif
#if defined(GL_TRIANGLE_FAN)
defconsti(env, "GL-TRIANGLE-FAN", (GLenum) GL_TRIANGLE_FAN, "GL_TRIANGLE_FAN");
#endif
#if defined(GL_TRIANGLE_STRIP)
defconsti(env, "GL-TRIANGLE-STRIP", (GLenum) GL_TRIANGLE_STRIP, "GL_TRIANGLE_STRIP");
#endif
#if defined(GL_TRIANGLE_STRIP_ADJACENCY)
defconsti(env, "GL-TRIANGLE-STRIP-ADJACENCY", (GLenum) GL_TRIANGLE_STRIP_ADJACENCY, "GL_TRIANGLE_STRIP_ADJACENCY");
#endif
#if defined(GL_TRIANGLE_STRIP_ADJACENCY_ARB)
defconsti(env, "GL-TRIANGLE-STRIP-ADJACENCY-ARB", (GLenum) GL_TRIANGLE_STRIP_ADJACENCY_ARB, "GL_TRIANGLE_STRIP_ADJACENCY_ARB");
#endif
#if defined(GL_TRIANGLE_STRIP_ADJACENCY_EXT)
defconsti(env, "GL-TRIANGLE-STRIP-ADJACENCY-EXT", (GLenum) GL_TRIANGLE_STRIP_ADJACENCY_EXT, "GL_TRIANGLE_STRIP_ADJACENCY_EXT");
#endif
#if defined(GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD)
defconsti(env, "GL-QUERY-DEPTH-PASS-EVENT-BIT-AMD", (GLenum) GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD, "GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD");
#endif
#if defined(GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD)
defconsti(env, "GL-QUERY-DEPTH-FAIL-EVENT-BIT-AMD", (GLenum) GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD, "GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD");
#endif
#if defined(GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD)
defconsti(env, "GL-QUERY-STENCIL-FAIL-EVENT-BIT-AMD", (GLenum) GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD, "GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD");
#endif
#if defined(GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD)
defconsti(env, "GL-QUERY-DEPTH-BOUNDS-FAIL-EVENT-BIT-AMD", (GLenum) GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD, "GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD");
#endif
#if defined(GL_QUERY_ALL_EVENT_BITS_AMD)
defconsti(env, "GL-QUERY-ALL-EVENT-BITS-AMD", (GLenum) GL_QUERY_ALL_EVENT_BITS_AMD, "GL_QUERY_ALL_EVENT_BITS_AMD");
#endif
#if defined(GL_NONE)
defconsti(env, "GL-NONE", (GLenum) GL_NONE, "GL_NONE");
#endif
#if defined(GL_NONE_OES)
defconsti(env, "GL-NONE-OES", (GLenum) GL_NONE_OES, "GL_NONE_OES");
#endif
#if defined(GL_AUX0)
defconsti(env, "GL-AUX0", (GLenum) GL_AUX0, "GL_AUX0");
#endif
#if defined(GL_AUX1)
defconsti(env, "GL-AUX1", (GLenum) GL_AUX1, "GL_AUX1");
#endif
#if defined(GL_AUX2)
defconsti(env, "GL-AUX2", (GLenum) GL_AUX2, "GL_AUX2");
#endif
#if defined(GL_AUX3)
defconsti(env, "GL-AUX3", (GLenum) GL_AUX3, "GL_AUX3");
#endif
#if defined(GL_BACK)
defconsti(env, "GL-BACK", (GLenum) GL_BACK, "GL_BACK");
#endif
#if defined(GL_BACK_LEFT)
defconsti(env, "GL-BACK-LEFT", (GLenum) GL_BACK_LEFT, "GL_BACK_LEFT");
#endif
#if defined(GL_BACK_RIGHT)
defconsti(env, "GL-BACK-RIGHT", (GLenum) GL_BACK_RIGHT, "GL_BACK_RIGHT");
#endif
#if defined(GL_FRONT)
defconsti(env, "GL-FRONT", (GLenum) GL_FRONT, "GL_FRONT");
#endif
#if defined(GL_FRONT_LEFT)
defconsti(env, "GL-FRONT-LEFT", (GLenum) GL_FRONT_LEFT, "GL_FRONT_LEFT");
#endif
#if defined(GL_FRONT_RIGHT)
defconsti(env, "GL-FRONT-RIGHT", (GLenum) GL_FRONT_RIGHT, "GL_FRONT_RIGHT");
#endif
#if defined(GL_LEFT)
defconsti(env, "GL-LEFT", (GLenum) GL_LEFT, "GL_LEFT");
#endif
#if defined(GL_RIGHT)
defconsti(env, "GL-RIGHT", (GLenum) GL_RIGHT, "GL_RIGHT");
#endif
#if defined(GL_COLOR_ATTACHMENT0)
defconsti(env, "GL-COLOR-ATTACHMENT0", (GLenum) GL_COLOR_ATTACHMENT0, "GL_COLOR_ATTACHMENT0");
#endif
#if defined(GL_COLOR_ATTACHMENT1)
defconsti(env, "GL-COLOR-ATTACHMENT1", (GLenum) GL_COLOR_ATTACHMENT1, "GL_COLOR_ATTACHMENT1");
#endif
#if defined(GL_COLOR_ATTACHMENT2)
defconsti(env, "GL-COLOR-ATTACHMENT2", (GLenum) GL_COLOR_ATTACHMENT2, "GL_COLOR_ATTACHMENT2");
#endif
#if defined(GL_COLOR_ATTACHMENT3)
defconsti(env, "GL-COLOR-ATTACHMENT3", (GLenum) GL_COLOR_ATTACHMENT3, "GL_COLOR_ATTACHMENT3");
#endif
#if defined(GL_COLOR_ATTACHMENT4)
defconsti(env, "GL-COLOR-ATTACHMENT4", (GLenum) GL_COLOR_ATTACHMENT4, "GL_COLOR_ATTACHMENT4");
#endif
#if defined(GL_COLOR_ATTACHMENT5)
defconsti(env, "GL-COLOR-ATTACHMENT5", (GLenum) GL_COLOR_ATTACHMENT5, "GL_COLOR_ATTACHMENT5");
#endif
#if defined(GL_COLOR_ATTACHMENT6)
defconsti(env, "GL-COLOR-ATTACHMENT6", (GLenum) GL_COLOR_ATTACHMENT6, "GL_COLOR_ATTACHMENT6");
#endif
#if defined(GL_COLOR_ATTACHMENT7)
defconsti(env, "GL-COLOR-ATTACHMENT7", (GLenum) GL_COLOR_ATTACHMENT7, "GL_COLOR_ATTACHMENT7");
#endif
#if defined(GL_COLOR_ATTACHMENT8)
defconsti(env, "GL-COLOR-ATTACHMENT8", (GLenum) GL_COLOR_ATTACHMENT8, "GL_COLOR_ATTACHMENT8");
#endif
#if defined(GL_COLOR_ATTACHMENT9)
defconsti(env, "GL-COLOR-ATTACHMENT9", (GLenum) GL_COLOR_ATTACHMENT9, "GL_COLOR_ATTACHMENT9");
#endif
#if defined(GL_COLOR_ATTACHMENT10)
defconsti(env, "GL-COLOR-ATTACHMENT10", (GLenum) GL_COLOR_ATTACHMENT10, "GL_COLOR_ATTACHMENT10");
#endif
#if defined(GL_COLOR_ATTACHMENT11)
defconsti(env, "GL-COLOR-ATTACHMENT11", (GLenum) GL_COLOR_ATTACHMENT11, "GL_COLOR_ATTACHMENT11");
#endif
#if defined(GL_COLOR_ATTACHMENT12)
defconsti(env, "GL-COLOR-ATTACHMENT12", (GLenum) GL_COLOR_ATTACHMENT12, "GL_COLOR_ATTACHMENT12");
#endif
#if defined(GL_COLOR_ATTACHMENT13)
defconsti(env, "GL-COLOR-ATTACHMENT13", (GLenum) GL_COLOR_ATTACHMENT13, "GL_COLOR_ATTACHMENT13");
#endif
#if defined(GL_COLOR_ATTACHMENT14)
defconsti(env, "GL-COLOR-ATTACHMENT14", (GLenum) GL_COLOR_ATTACHMENT14, "GL_COLOR_ATTACHMENT14");
#endif
#if defined(GL_COLOR_ATTACHMENT15)
defconsti(env, "GL-COLOR-ATTACHMENT15", (GLenum) GL_COLOR_ATTACHMENT15, "GL_COLOR_ATTACHMENT15");
#endif
#if defined(GL_FEEDBACK)
defconsti(env, "GL-FEEDBACK", (GLenum) GL_FEEDBACK, "GL_FEEDBACK");
#endif
#if defined(GL_RENDER)
defconsti(env, "GL-RENDER", (GLenum) GL_RENDER, "GL_RENDER");
#endif
#if defined(GL_SELECT)
defconsti(env, "GL-SELECT", (GLenum) GL_SELECT, "GL_SELECT");
#endif
#if defined(GL_1PASS_EXT)
defconsti(env, "GL-1PASS-EXT", (GLenum) GL_1PASS_EXT, "GL_1PASS_EXT");
#endif
#if defined(GL_1PASS_SGIS)
defconsti(env, "GL-1PASS-SGIS", (GLenum) GL_1PASS_SGIS, "GL_1PASS_SGIS");
#endif
#if defined(GL_2PASS_0_EXT)
defconsti(env, "GL-2PASS-0-EXT", (GLenum) GL_2PASS_0_EXT, "GL_2PASS_0_EXT");
#endif
#if defined(GL_2PASS_0_SGIS)
defconsti(env, "GL-2PASS-0-SGIS", (GLenum) GL_2PASS_0_SGIS, "GL_2PASS_0_SGIS");
#endif
#if defined(GL_2PASS_1_EXT)
defconsti(env, "GL-2PASS-1-EXT", (GLenum) GL_2PASS_1_EXT, "GL_2PASS_1_EXT");
#endif
#if defined(GL_2PASS_1_SGIS)
defconsti(env, "GL-2PASS-1-SGIS", (GLenum) GL_2PASS_1_SGIS, "GL_2PASS_1_SGIS");
#endif
#if defined(GL_4PASS_0_EXT)
defconsti(env, "GL-4PASS-0-EXT", (GLenum) GL_4PASS_0_EXT, "GL_4PASS_0_EXT");
#endif
#if defined(GL_4PASS_0_SGIS)
defconsti(env, "GL-4PASS-0-SGIS", (GLenum) GL_4PASS_0_SGIS, "GL_4PASS_0_SGIS");
#endif
#if defined(GL_4PASS_1_EXT)
defconsti(env, "GL-4PASS-1-EXT", (GLenum) GL_4PASS_1_EXT, "GL_4PASS_1_EXT");
#endif
#if defined(GL_4PASS_1_SGIS)
defconsti(env, "GL-4PASS-1-SGIS", (GLenum) GL_4PASS_1_SGIS, "GL_4PASS_1_SGIS");
#endif
#if defined(GL_4PASS_2_EXT)
defconsti(env, "GL-4PASS-2-EXT", (GLenum) GL_4PASS_2_EXT, "GL_4PASS_2_EXT");
#endif
#if defined(GL_4PASS_2_SGIS)
defconsti(env, "GL-4PASS-2-SGIS", (GLenum) GL_4PASS_2_SGIS, "GL_4PASS_2_SGIS");
#endif
#if defined(GL_4PASS_3_EXT)
defconsti(env, "GL-4PASS-3-EXT", (GLenum) GL_4PASS_3_EXT, "GL_4PASS_3_EXT");
#endif
#if defined(GL_4PASS_3_SGIS)
defconsti(env, "GL-4PASS-3-SGIS", (GLenum) GL_4PASS_3_SGIS, "GL_4PASS_3_SGIS");
#endif
#if defined(GL_D3D12_FENCE_VALUE_EXT)
defconsti(env, "GL-D3D12-FENCE-VALUE-EXT", (GLenum) GL_D3D12_FENCE_VALUE_EXT, "GL_D3D12_FENCE_VALUE_EXT");
#endif
#if defined(GL_SEPARABLE_2D)
defconsti(env, "GL-SEPARABLE-2D", (GLenum) GL_SEPARABLE_2D, "GL_SEPARABLE_2D");
#endif
#if defined(GL_SEPARABLE_2D_EXT)
defconsti(env, "GL-SEPARABLE-2D-EXT", (GLenum) GL_SEPARABLE_2D_EXT, "GL_SEPARABLE_2D_EXT");
#endif
#if defined(GL_FLAT)
defconsti(env, "GL-FLAT", (GLenum) GL_FLAT, "GL_FLAT");
#endif
#if defined(GL_SMOOTH)
defconsti(env, "GL-SMOOTH", (GLenum) GL_SMOOTH, "GL_SMOOTH");
#endif
#if defined(GL_FRONT)
defconsti(env, "GL-FRONT", (GLenum) GL_FRONT, "GL_FRONT");
#endif
#if defined(GL_BACK)
defconsti(env, "GL-BACK", (GLenum) GL_BACK, "GL_BACK");
#endif
#if defined(GL_FRONT_AND_BACK)
defconsti(env, "GL-FRONT-AND-BACK", (GLenum) GL_FRONT_AND_BACK, "GL_FRONT_AND_BACK");
#endif
#if defined(GL_ALWAYS)
defconsti(env, "GL-ALWAYS", (GLenum) GL_ALWAYS, "GL_ALWAYS");
#endif
#if defined(GL_EQUAL)
defconsti(env, "GL-EQUAL", (GLenum) GL_EQUAL, "GL_EQUAL");
#endif
#if defined(GL_GEQUAL)
defconsti(env, "GL-GEQUAL", (GLenum) GL_GEQUAL, "GL_GEQUAL");
#endif
#if defined(GL_GREATER)
defconsti(env, "GL-GREATER", (GLenum) GL_GREATER, "GL_GREATER");
#endif
#if defined(GL_LEQUAL)
defconsti(env, "GL-LEQUAL", (GLenum) GL_LEQUAL, "GL_LEQUAL");
#endif
#if defined(GL_LESS)
defconsti(env, "GL-LESS", (GLenum) GL_LESS, "GL_LESS");
#endif
#if defined(GL_NEVER)
defconsti(env, "GL-NEVER", (GLenum) GL_NEVER, "GL_NEVER");
#endif
#if defined(GL_NOTEQUAL)
defconsti(env, "GL-NOTEQUAL", (GLenum) GL_NOTEQUAL, "GL_NOTEQUAL");
#endif
#if defined(GL_DECR)
defconsti(env, "GL-DECR", (GLenum) GL_DECR, "GL_DECR");
#endif
#if defined(GL_DECR_WRAP)
defconsti(env, "GL-DECR-WRAP", (GLenum) GL_DECR_WRAP, "GL_DECR_WRAP");
#endif
#if defined(GL_INCR)
defconsti(env, "GL-INCR", (GLenum) GL_INCR, "GL_INCR");
#endif
#if defined(GL_INCR_WRAP)
defconsti(env, "GL-INCR-WRAP", (GLenum) GL_INCR_WRAP, "GL_INCR_WRAP");
#endif
#if defined(GL_INVERT)
defconsti(env, "GL-INVERT", (GLenum) GL_INVERT, "GL_INVERT");
#endif
#if defined(GL_KEEP)
defconsti(env, "GL-KEEP", (GLenum) GL_KEEP, "GL_KEEP");
#endif
#if defined(GL_REPLACE)
defconsti(env, "GL-REPLACE", (GLenum) GL_REPLACE, "GL_REPLACE");
#endif
#if defined(GL_ZERO)
defconsti(env, "GL-ZERO", (GLenum) GL_ZERO, "GL_ZERO");
#endif
#if defined(GL_EXTENSIONS)
defconsti(env, "GL-EXTENSIONS", (GLenum) GL_EXTENSIONS, "GL_EXTENSIONS");
#endif
#if defined(GL_RENDERER)
defconsti(env, "GL-RENDERER", (GLenum) GL_RENDERER, "GL_RENDERER");
#endif
#if defined(GL_VENDOR)
defconsti(env, "GL-VENDOR", (GLenum) GL_VENDOR, "GL_VENDOR");
#endif
#if defined(GL_VERSION)
defconsti(env, "GL-VERSION", (GLenum) GL_VERSION, "GL_VERSION");
#endif
#if defined(GL_SHADING_LANGUAGE_VERSION)
defconsti(env, "GL-SHADING-LANGUAGE-VERSION", (GLenum) GL_SHADING_LANGUAGE_VERSION, "GL_SHADING_LANGUAGE_VERSION");
#endif
#if defined(GL_SYNC_FLUSH_COMMANDS_BIT)
defconsti(env, "GL-SYNC-FLUSH-COMMANDS-BIT", (GLenum) GL_SYNC_FLUSH_COMMANDS_BIT, "GL_SYNC_FLUSH_COMMANDS_BIT");
#endif
#if defined(GL_SYNC_FLUSH_COMMANDS_BIT_APPLE)
defconsti(env, "GL-SYNC-FLUSH-COMMANDS-BIT-APPLE", (GLenum) GL_SYNC_FLUSH_COMMANDS_BIT_APPLE, "GL_SYNC_FLUSH_COMMANDS_BIT_APPLE");
#endif
#if defined(GL_DOUBLE)
defconsti(env, "GL-DOUBLE", (GLenum) GL_DOUBLE, "GL_DOUBLE");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_INT)
defconsti(env, "GL-INT", (GLenum) GL_INT, "GL_INT");
#endif
#if defined(GL_SHORT)
defconsti(env, "GL-SHORT", (GLenum) GL_SHORT, "GL_SHORT");
#endif
#if defined(GL_S)
defconsti(env, "GL-S", (GLenum) GL_S, "GL_S");
#endif
#if defined(GL_T)
defconsti(env, "GL-T", (GLenum) GL_T, "GL_T");
#endif
#if defined(GL_R)
defconsti(env, "GL-R", (GLenum) GL_R, "GL_R");
#endif
#if defined(GL_Q)
defconsti(env, "GL-Q", (GLenum) GL_Q, "GL_Q");
#endif
#if defined(GL_ADD)
defconsti(env, "GL-ADD", (GLenum) GL_ADD, "GL_ADD");
#endif
#if defined(GL_BLEND)
defconsti(env, "GL-BLEND", (GLenum) GL_BLEND, "GL_BLEND");
#endif
#if defined(GL_DECAL)
defconsti(env, "GL-DECAL", (GLenum) GL_DECAL, "GL_DECAL");
#endif
#if defined(GL_MODULATE)
defconsti(env, "GL-MODULATE", (GLenum) GL_MODULATE, "GL_MODULATE");
#endif
#if defined(GL_REPLACE_EXT)
defconsti(env, "GL-REPLACE-EXT", (GLenum) GL_REPLACE_EXT, "GL_REPLACE_EXT");
#endif
#if defined(GL_TEXTURE_ENV_BIAS_SGIX)
defconsti(env, "GL-TEXTURE-ENV-BIAS-SGIX", (GLenum) GL_TEXTURE_ENV_BIAS_SGIX, "GL_TEXTURE_ENV_BIAS_SGIX");
#endif
#if defined(GL_TEXTURE_ENV_COLOR)
defconsti(env, "GL-TEXTURE-ENV-COLOR", (GLenum) GL_TEXTURE_ENV_COLOR, "GL_TEXTURE_ENV_COLOR");
#endif
#if defined(GL_TEXTURE_ENV_MODE)
defconsti(env, "GL-TEXTURE-ENV-MODE", (GLenum) GL_TEXTURE_ENV_MODE, "GL_TEXTURE_ENV_MODE");
#endif
#if defined(GL_TEXTURE_ENV)
defconsti(env, "GL-TEXTURE-ENV", (GLenum) GL_TEXTURE_ENV, "GL_TEXTURE_ENV");
#endif
#if defined(GL_FILTER4_SGIS)
defconsti(env, "GL-FILTER4-SGIS", (GLenum) GL_FILTER4_SGIS, "GL_FILTER4_SGIS");
#endif
#if defined(GL_EYE_DISTANCE_TO_LINE_SGIS)
defconsti(env, "GL-EYE-DISTANCE-TO-LINE-SGIS", (GLenum) GL_EYE_DISTANCE_TO_LINE_SGIS, "GL_EYE_DISTANCE_TO_LINE_SGIS");
#endif
#if defined(GL_EYE_DISTANCE_TO_POINT_SGIS)
defconsti(env, "GL-EYE-DISTANCE-TO-POINT-SGIS", (GLenum) GL_EYE_DISTANCE_TO_POINT_SGIS, "GL_EYE_DISTANCE_TO_POINT_SGIS");
#endif
#if defined(GL_EYE_LINEAR)
defconsti(env, "GL-EYE-LINEAR", (GLenum) GL_EYE_LINEAR, "GL_EYE_LINEAR");
#endif
#if defined(GL_OBJECT_DISTANCE_TO_LINE_SGIS)
defconsti(env, "GL-OBJECT-DISTANCE-TO-LINE-SGIS", (GLenum) GL_OBJECT_DISTANCE_TO_LINE_SGIS, "GL_OBJECT_DISTANCE_TO_LINE_SGIS");
#endif
#if defined(GL_OBJECT_DISTANCE_TO_POINT_SGIS)
defconsti(env, "GL-OBJECT-DISTANCE-TO-POINT-SGIS", (GLenum) GL_OBJECT_DISTANCE_TO_POINT_SGIS, "GL_OBJECT_DISTANCE_TO_POINT_SGIS");
#endif
#if defined(GL_OBJECT_LINEAR)
defconsti(env, "GL-OBJECT-LINEAR", (GLenum) GL_OBJECT_LINEAR, "GL_OBJECT_LINEAR");
#endif
#if defined(GL_SPHERE_MAP)
defconsti(env, "GL-SPHERE-MAP", (GLenum) GL_SPHERE_MAP, "GL_SPHERE_MAP");
#endif
#if defined(GL_EYE_LINE_SGIS)
defconsti(env, "GL-EYE-LINE-SGIS", (GLenum) GL_EYE_LINE_SGIS, "GL_EYE_LINE_SGIS");
#endif
#if defined(GL_EYE_PLANE)
defconsti(env, "GL-EYE-PLANE", (GLenum) GL_EYE_PLANE, "GL_EYE_PLANE");
#endif
#if defined(GL_EYE_POINT_SGIS)
defconsti(env, "GL-EYE-POINT-SGIS", (GLenum) GL_EYE_POINT_SGIS, "GL_EYE_POINT_SGIS");
#endif
#if defined(GL_OBJECT_LINE_SGIS)
defconsti(env, "GL-OBJECT-LINE-SGIS", (GLenum) GL_OBJECT_LINE_SGIS, "GL_OBJECT_LINE_SGIS");
#endif
#if defined(GL_OBJECT_PLANE)
defconsti(env, "GL-OBJECT-PLANE", (GLenum) GL_OBJECT_PLANE, "GL_OBJECT_PLANE");
#endif
#if defined(GL_OBJECT_POINT_SGIS)
defconsti(env, "GL-OBJECT-POINT-SGIS", (GLenum) GL_OBJECT_POINT_SGIS, "GL_OBJECT_POINT_SGIS");
#endif
#if defined(GL_TEXTURE_GEN_MODE)
defconsti(env, "GL-TEXTURE-GEN-MODE", (GLenum) GL_TEXTURE_GEN_MODE, "GL_TEXTURE_GEN_MODE");
#endif
#if defined(GL_FILTER4_SGIS)
defconsti(env, "GL-FILTER4-SGIS", (GLenum) GL_FILTER4_SGIS, "GL_FILTER4_SGIS");
#endif
#if defined(GL_LINEAR)
defconsti(env, "GL-LINEAR", (GLenum) GL_LINEAR, "GL_LINEAR");
#endif
#if defined(GL_LINEAR_DETAIL_ALPHA_SGIS)
defconsti(env, "GL-LINEAR-DETAIL-ALPHA-SGIS", (GLenum) GL_LINEAR_DETAIL_ALPHA_SGIS, "GL_LINEAR_DETAIL_ALPHA_SGIS");
#endif
#if defined(GL_LINEAR_DETAIL_COLOR_SGIS)
defconsti(env, "GL-LINEAR-DETAIL-COLOR-SGIS", (GLenum) GL_LINEAR_DETAIL_COLOR_SGIS, "GL_LINEAR_DETAIL_COLOR_SGIS");
#endif
#if defined(GL_LINEAR_DETAIL_SGIS)
defconsti(env, "GL-LINEAR-DETAIL-SGIS", (GLenum) GL_LINEAR_DETAIL_SGIS, "GL_LINEAR_DETAIL_SGIS");
#endif
#if defined(GL_LINEAR_SHARPEN_ALPHA_SGIS)
defconsti(env, "GL-LINEAR-SHARPEN-ALPHA-SGIS", (GLenum) GL_LINEAR_SHARPEN_ALPHA_SGIS, "GL_LINEAR_SHARPEN_ALPHA_SGIS");
#endif
#if defined(GL_LINEAR_SHARPEN_COLOR_SGIS)
defconsti(env, "GL-LINEAR-SHARPEN-COLOR-SGIS", (GLenum) GL_LINEAR_SHARPEN_COLOR_SGIS, "GL_LINEAR_SHARPEN_COLOR_SGIS");
#endif
#if defined(GL_LINEAR_SHARPEN_SGIS)
defconsti(env, "GL-LINEAR-SHARPEN-SGIS", (GLenum) GL_LINEAR_SHARPEN_SGIS, "GL_LINEAR_SHARPEN_SGIS");
#endif
#if defined(GL_NEAREST)
defconsti(env, "GL-NEAREST", (GLenum) GL_NEAREST, "GL_NEAREST");
#endif
#if defined(GL_PIXEL_TEX_GEN_Q_CEILING_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-Q-CEILING-SGIX", (GLenum) GL_PIXEL_TEX_GEN_Q_CEILING_SGIX, "GL_PIXEL_TEX_GEN_Q_CEILING_SGIX");
#endif
#if defined(GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-Q-FLOOR-SGIX", (GLenum) GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX, "GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX");
#endif
#if defined(GL_PIXEL_TEX_GEN_Q_ROUND_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-Q-ROUND-SGIX", (GLenum) GL_PIXEL_TEX_GEN_Q_ROUND_SGIX, "GL_PIXEL_TEX_GEN_Q_ROUND_SGIX");
#endif
#if defined(GL_FILTER4_SGIS)
defconsti(env, "GL-FILTER4-SGIS", (GLenum) GL_FILTER4_SGIS, "GL_FILTER4_SGIS");
#endif
#if defined(GL_LINEAR)
defconsti(env, "GL-LINEAR", (GLenum) GL_LINEAR, "GL_LINEAR");
#endif
#if defined(GL_LINEAR_CLIPMAP_LINEAR_SGIX)
defconsti(env, "GL-LINEAR-CLIPMAP-LINEAR-SGIX", (GLenum) GL_LINEAR_CLIPMAP_LINEAR_SGIX, "GL_LINEAR_CLIPMAP_LINEAR_SGIX");
#endif
#if defined(GL_LINEAR_CLIPMAP_NEAREST_SGIX)
defconsti(env, "GL-LINEAR-CLIPMAP-NEAREST-SGIX", (GLenum) GL_LINEAR_CLIPMAP_NEAREST_SGIX, "GL_LINEAR_CLIPMAP_NEAREST_SGIX");
#endif
#if defined(GL_LINEAR_MIPMAP_LINEAR)
defconsti(env, "GL-LINEAR-MIPMAP-LINEAR", (GLenum) GL_LINEAR_MIPMAP_LINEAR, "GL_LINEAR_MIPMAP_LINEAR");
#endif
#if defined(GL_LINEAR_MIPMAP_NEAREST)
defconsti(env, "GL-LINEAR-MIPMAP-NEAREST", (GLenum) GL_LINEAR_MIPMAP_NEAREST, "GL_LINEAR_MIPMAP_NEAREST");
#endif
#if defined(GL_NEAREST)
defconsti(env, "GL-NEAREST", (GLenum) GL_NEAREST, "GL_NEAREST");
#endif
#if defined(GL_NEAREST_CLIPMAP_LINEAR_SGIX)
defconsti(env, "GL-NEAREST-CLIPMAP-LINEAR-SGIX", (GLenum) GL_NEAREST_CLIPMAP_LINEAR_SGIX, "GL_NEAREST_CLIPMAP_LINEAR_SGIX");
#endif
#if defined(GL_NEAREST_CLIPMAP_NEAREST_SGIX)
defconsti(env, "GL-NEAREST-CLIPMAP-NEAREST-SGIX", (GLenum) GL_NEAREST_CLIPMAP_NEAREST_SGIX, "GL_NEAREST_CLIPMAP_NEAREST_SGIX");
#endif
#if defined(GL_NEAREST_MIPMAP_LINEAR)
defconsti(env, "GL-NEAREST-MIPMAP-LINEAR", (GLenum) GL_NEAREST_MIPMAP_LINEAR, "GL_NEAREST_MIPMAP_LINEAR");
#endif
#if defined(GL_NEAREST_MIPMAP_NEAREST)
defconsti(env, "GL-NEAREST-MIPMAP-NEAREST", (GLenum) GL_NEAREST_MIPMAP_NEAREST, "GL_NEAREST_MIPMAP_NEAREST");
#endif
#if defined(GL_PIXEL_TEX_GEN_Q_CEILING_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-Q-CEILING-SGIX", (GLenum) GL_PIXEL_TEX_GEN_Q_CEILING_SGIX, "GL_PIXEL_TEX_GEN_Q_CEILING_SGIX");
#endif
#if defined(GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-Q-FLOOR-SGIX", (GLenum) GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX, "GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX");
#endif
#if defined(GL_PIXEL_TEX_GEN_Q_ROUND_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-Q-ROUND-SGIX", (GLenum) GL_PIXEL_TEX_GEN_Q_ROUND_SGIX, "GL_PIXEL_TEX_GEN_Q_ROUND_SGIX");
#endif
#if defined(GL_DETAIL_TEXTURE_LEVEL_SGIS)
defconsti(env, "GL-DETAIL-TEXTURE-LEVEL-SGIS", (GLenum) GL_DETAIL_TEXTURE_LEVEL_SGIS, "GL_DETAIL_TEXTURE_LEVEL_SGIS");
#endif
#if defined(GL_DETAIL_TEXTURE_MODE_SGIS)
defconsti(env, "GL-DETAIL-TEXTURE-MODE-SGIS", (GLenum) GL_DETAIL_TEXTURE_MODE_SGIS, "GL_DETAIL_TEXTURE_MODE_SGIS");
#endif
#if defined(GL_DUAL_TEXTURE_SELECT_SGIS)
defconsti(env, "GL-DUAL-TEXTURE-SELECT-SGIS", (GLenum) GL_DUAL_TEXTURE_SELECT_SGIS, "GL_DUAL_TEXTURE_SELECT_SGIS");
#endif
#if defined(GL_GENERATE_MIPMAP)
defconsti(env, "GL-GENERATE-MIPMAP", (GLenum) GL_GENERATE_MIPMAP, "GL_GENERATE_MIPMAP");
#endif
#if defined(GL_GENERATE_MIPMAP_SGIS)
defconsti(env, "GL-GENERATE-MIPMAP-SGIS", (GLenum) GL_GENERATE_MIPMAP_SGIS, "GL_GENERATE_MIPMAP_SGIS");
#endif
#if defined(GL_POST_TEXTURE_FILTER_BIAS_SGIX)
defconsti(env, "GL-POST-TEXTURE-FILTER-BIAS-SGIX", (GLenum) GL_POST_TEXTURE_FILTER_BIAS_SGIX, "GL_POST_TEXTURE_FILTER_BIAS_SGIX");
#endif
#if defined(GL_POST_TEXTURE_FILTER_SCALE_SGIX)
defconsti(env, "GL-POST-TEXTURE-FILTER-SCALE-SGIX", (GLenum) GL_POST_TEXTURE_FILTER_SCALE_SGIX, "GL_POST_TEXTURE_FILTER_SCALE_SGIX");
#endif
#if defined(GL_QUAD_TEXTURE_SELECT_SGIS)
defconsti(env, "GL-QUAD-TEXTURE-SELECT-SGIS", (GLenum) GL_QUAD_TEXTURE_SELECT_SGIS, "GL_QUAD_TEXTURE_SELECT_SGIS");
#endif
#if defined(GL_SHADOW_AMBIENT_SGIX)
defconsti(env, "GL-SHADOW-AMBIENT-SGIX", (GLenum) GL_SHADOW_AMBIENT_SGIX, "GL_SHADOW_AMBIENT_SGIX");
#endif
#if defined(GL_TEXTURE_BORDER_COLOR)
defconsti(env, "GL-TEXTURE-BORDER-COLOR", (GLenum) GL_TEXTURE_BORDER_COLOR, "GL_TEXTURE_BORDER_COLOR");
#endif
#if defined(GL_TEXTURE_CLIPMAP_CENTER_SGIX)
defconsti(env, "GL-TEXTURE-CLIPMAP-CENTER-SGIX", (GLenum) GL_TEXTURE_CLIPMAP_CENTER_SGIX, "GL_TEXTURE_CLIPMAP_CENTER_SGIX");
#endif
#if defined(GL_TEXTURE_CLIPMAP_DEPTH_SGIX)
defconsti(env, "GL-TEXTURE-CLIPMAP-DEPTH-SGIX", (GLenum) GL_TEXTURE_CLIPMAP_DEPTH_SGIX, "GL_TEXTURE_CLIPMAP_DEPTH_SGIX");
#endif
#if defined(GL_TEXTURE_CLIPMAP_FRAME_SGIX)
defconsti(env, "GL-TEXTURE-CLIPMAP-FRAME-SGIX", (GLenum) GL_TEXTURE_CLIPMAP_FRAME_SGIX, "GL_TEXTURE_CLIPMAP_FRAME_SGIX");
#endif
#if defined(GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX)
defconsti(env, "GL-TEXTURE-CLIPMAP-LOD-OFFSET-SGIX", (GLenum) GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX, "GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX");
#endif
#if defined(GL_TEXTURE_CLIPMAP_OFFSET_SGIX)
defconsti(env, "GL-TEXTURE-CLIPMAP-OFFSET-SGIX", (GLenum) GL_TEXTURE_CLIPMAP_OFFSET_SGIX, "GL_TEXTURE_CLIPMAP_OFFSET_SGIX");
#endif
#if defined(GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX)
defconsti(env, "GL-TEXTURE-CLIPMAP-VIRTUAL-DEPTH-SGIX", (GLenum) GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX, "GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX");
#endif
#if defined(GL_TEXTURE_COMPARE_SGIX)
defconsti(env, "GL-TEXTURE-COMPARE-SGIX", (GLenum) GL_TEXTURE_COMPARE_SGIX, "GL_TEXTURE_COMPARE_SGIX");
#endif
#if defined(GL_TEXTURE_LOD_BIAS_R_SGIX)
defconsti(env, "GL-TEXTURE-LOD-BIAS-R-SGIX", (GLenum) GL_TEXTURE_LOD_BIAS_R_SGIX, "GL_TEXTURE_LOD_BIAS_R_SGIX");
#endif
#if defined(GL_TEXTURE_LOD_BIAS_S_SGIX)
defconsti(env, "GL-TEXTURE-LOD-BIAS-S-SGIX", (GLenum) GL_TEXTURE_LOD_BIAS_S_SGIX, "GL_TEXTURE_LOD_BIAS_S_SGIX");
#endif
#if defined(GL_TEXTURE_LOD_BIAS_T_SGIX)
defconsti(env, "GL-TEXTURE-LOD-BIAS-T-SGIX", (GLenum) GL_TEXTURE_LOD_BIAS_T_SGIX, "GL_TEXTURE_LOD_BIAS_T_SGIX");
#endif
#if defined(GL_TEXTURE_MAG_FILTER)
defconsti(env, "GL-TEXTURE-MAG-FILTER", (GLenum) GL_TEXTURE_MAG_FILTER, "GL_TEXTURE_MAG_FILTER");
#endif
#if defined(GL_TEXTURE_MAX_CLAMP_R_SGIX)
defconsti(env, "GL-TEXTURE-MAX-CLAMP-R-SGIX", (GLenum) GL_TEXTURE_MAX_CLAMP_R_SGIX, "GL_TEXTURE_MAX_CLAMP_R_SGIX");
#endif
#if defined(GL_TEXTURE_MAX_CLAMP_S_SGIX)
defconsti(env, "GL-TEXTURE-MAX-CLAMP-S-SGIX", (GLenum) GL_TEXTURE_MAX_CLAMP_S_SGIX, "GL_TEXTURE_MAX_CLAMP_S_SGIX");
#endif
#if defined(GL_TEXTURE_MAX_CLAMP_T_SGIX)
defconsti(env, "GL-TEXTURE-MAX-CLAMP-T-SGIX", (GLenum) GL_TEXTURE_MAX_CLAMP_T_SGIX, "GL_TEXTURE_MAX_CLAMP_T_SGIX");
#endif
#if defined(GL_TEXTURE_MIN_FILTER)
defconsti(env, "GL-TEXTURE-MIN-FILTER", (GLenum) GL_TEXTURE_MIN_FILTER, "GL_TEXTURE_MIN_FILTER");
#endif
#if defined(GL_TEXTURE_PRIORITY)
defconsti(env, "GL-TEXTURE-PRIORITY", (GLenum) GL_TEXTURE_PRIORITY, "GL_TEXTURE_PRIORITY");
#endif
#if defined(GL_TEXTURE_PRIORITY_EXT)
defconsti(env, "GL-TEXTURE-PRIORITY-EXT", (GLenum) GL_TEXTURE_PRIORITY_EXT, "GL_TEXTURE_PRIORITY_EXT");
#endif
#if defined(GL_TEXTURE_WRAP_Q_SGIS)
defconsti(env, "GL-TEXTURE-WRAP-Q-SGIS", (GLenum) GL_TEXTURE_WRAP_Q_SGIS, "GL_TEXTURE_WRAP_Q_SGIS");
#endif
#if defined(GL_TEXTURE_WRAP_R)
defconsti(env, "GL-TEXTURE-WRAP-R", (GLenum) GL_TEXTURE_WRAP_R, "GL_TEXTURE_WRAP_R");
#endif
#if defined(GL_TEXTURE_WRAP_R_EXT)
defconsti(env, "GL-TEXTURE-WRAP-R-EXT", (GLenum) GL_TEXTURE_WRAP_R_EXT, "GL_TEXTURE_WRAP_R_EXT");
#endif
#if defined(GL_TEXTURE_WRAP_R_OES)
defconsti(env, "GL-TEXTURE-WRAP-R-OES", (GLenum) GL_TEXTURE_WRAP_R_OES, "GL_TEXTURE_WRAP_R_OES");
#endif
#if defined(GL_TEXTURE_WRAP_S)
defconsti(env, "GL-TEXTURE-WRAP-S", (GLenum) GL_TEXTURE_WRAP_S, "GL_TEXTURE_WRAP_S");
#endif
#if defined(GL_TEXTURE_WRAP_T)
defconsti(env, "GL-TEXTURE-WRAP-T", (GLenum) GL_TEXTURE_WRAP_T, "GL_TEXTURE_WRAP_T");
#endif
#if defined(GL_TEXTURE_BASE_LEVEL)
defconsti(env, "GL-TEXTURE-BASE-LEVEL", (GLenum) GL_TEXTURE_BASE_LEVEL, "GL_TEXTURE_BASE_LEVEL");
#endif
#if defined(GL_TEXTURE_COMPARE_MODE)
defconsti(env, "GL-TEXTURE-COMPARE-MODE", (GLenum) GL_TEXTURE_COMPARE_MODE, "GL_TEXTURE_COMPARE_MODE");
#endif
#if defined(GL_TEXTURE_COMPARE_FUNC)
defconsti(env, "GL-TEXTURE-COMPARE-FUNC", (GLenum) GL_TEXTURE_COMPARE_FUNC, "GL_TEXTURE_COMPARE_FUNC");
#endif
#if defined(GL_TEXTURE_LOD_BIAS)
defconsti(env, "GL-TEXTURE-LOD-BIAS", (GLenum) GL_TEXTURE_LOD_BIAS, "GL_TEXTURE_LOD_BIAS");
#endif
#if defined(GL_TEXTURE_MIN_LOD)
defconsti(env, "GL-TEXTURE-MIN-LOD", (GLenum) GL_TEXTURE_MIN_LOD, "GL_TEXTURE_MIN_LOD");
#endif
#if defined(GL_TEXTURE_MAX_LOD)
defconsti(env, "GL-TEXTURE-MAX-LOD", (GLenum) GL_TEXTURE_MAX_LOD, "GL_TEXTURE_MAX_LOD");
#endif
#if defined(GL_TEXTURE_MAX_LEVEL)
defconsti(env, "GL-TEXTURE-MAX-LEVEL", (GLenum) GL_TEXTURE_MAX_LEVEL, "GL_TEXTURE_MAX_LEVEL");
#endif
#if defined(GL_TEXTURE_SWIZZLE_R)
defconsti(env, "GL-TEXTURE-SWIZZLE-R", (GLenum) GL_TEXTURE_SWIZZLE_R, "GL_TEXTURE_SWIZZLE_R");
#endif
#if defined(GL_TEXTURE_SWIZZLE_G)
defconsti(env, "GL-TEXTURE-SWIZZLE-G", (GLenum) GL_TEXTURE_SWIZZLE_G, "GL_TEXTURE_SWIZZLE_G");
#endif
#if defined(GL_TEXTURE_SWIZZLE_B)
defconsti(env, "GL-TEXTURE-SWIZZLE-B", (GLenum) GL_TEXTURE_SWIZZLE_B, "GL_TEXTURE_SWIZZLE_B");
#endif
#if defined(GL_TEXTURE_SWIZZLE_A)
defconsti(env, "GL-TEXTURE-SWIZZLE-A", (GLenum) GL_TEXTURE_SWIZZLE_A, "GL_TEXTURE_SWIZZLE_A");
#endif
#if defined(GL_TEXTURE_SWIZZLE_RGBA)
defconsti(env, "GL-TEXTURE-SWIZZLE-RGBA", (GLenum) GL_TEXTURE_SWIZZLE_RGBA, "GL_TEXTURE_SWIZZLE_RGBA");
#endif
#if defined(GL_TEXTURE_TILING_EXT)
defconsti(env, "GL-TEXTURE-TILING-EXT", (GLenum) GL_TEXTURE_TILING_EXT, "GL_TEXTURE_TILING_EXT");
#endif
#if defined(GL_DEPTH_STENCIL_TEXTURE_MODE)
defconsti(env, "GL-DEPTH-STENCIL-TEXTURE-MODE", (GLenum) GL_DEPTH_STENCIL_TEXTURE_MODE, "GL_DEPTH_STENCIL_TEXTURE_MODE");
#endif
#if defined(GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS)
defconsti(env, "GL-DETAIL-TEXTURE-FUNC-POINTS-SGIS", (GLenum) GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS, "GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS");
#endif
#if defined(GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS)
defconsti(env, "GL-SHARPEN-TEXTURE-FUNC-POINTS-SGIS", (GLenum) GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS, "GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS");
#endif
#if defined(GL_TEXTURE_4DSIZE_SGIS)
defconsti(env, "GL-TEXTURE-4DSIZE-SGIS", (GLenum) GL_TEXTURE_4DSIZE_SGIS, "GL_TEXTURE_4DSIZE_SGIS");
#endif
#if defined(GL_TEXTURE_ALPHA_SIZE)
defconsti(env, "GL-TEXTURE-ALPHA-SIZE", (GLenum) GL_TEXTURE_ALPHA_SIZE, "GL_TEXTURE_ALPHA_SIZE");
#endif
#if defined(GL_TEXTURE_BASE_LEVEL_SGIS)
defconsti(env, "GL-TEXTURE-BASE-LEVEL-SGIS", (GLenum) GL_TEXTURE_BASE_LEVEL_SGIS, "GL_TEXTURE_BASE_LEVEL_SGIS");
#endif
#if defined(GL_TEXTURE_BLUE_SIZE)
defconsti(env, "GL-TEXTURE-BLUE-SIZE", (GLenum) GL_TEXTURE_BLUE_SIZE, "GL_TEXTURE_BLUE_SIZE");
#endif
#if defined(GL_TEXTURE_BORDER)
defconsti(env, "GL-TEXTURE-BORDER", (GLenum) GL_TEXTURE_BORDER, "GL_TEXTURE_BORDER");
#endif
#if defined(GL_TEXTURE_BORDER_COLOR_NV)
defconsti(env, "GL-TEXTURE-BORDER-COLOR-NV", (GLenum) GL_TEXTURE_BORDER_COLOR_NV, "GL_TEXTURE_BORDER_COLOR_NV");
#endif
#if defined(GL_TEXTURE_COMPARE_OPERATOR_SGIX)
defconsti(env, "GL-TEXTURE-COMPARE-OPERATOR-SGIX", (GLenum) GL_TEXTURE_COMPARE_OPERATOR_SGIX, "GL_TEXTURE_COMPARE_OPERATOR_SGIX");
#endif
#if defined(GL_TEXTURE_COMPONENTS)
defconsti(env, "GL-TEXTURE-COMPONENTS", (GLenum) GL_TEXTURE_COMPONENTS, "GL_TEXTURE_COMPONENTS");
#endif
#if defined(GL_TEXTURE_DEPTH_EXT)
defconsti(env, "GL-TEXTURE-DEPTH-EXT", (GLenum) GL_TEXTURE_DEPTH_EXT, "GL_TEXTURE_DEPTH_EXT");
#endif
#if defined(GL_TEXTURE_FILTER4_SIZE_SGIS)
defconsti(env, "GL-TEXTURE-FILTER4-SIZE-SGIS", (GLenum) GL_TEXTURE_FILTER4_SIZE_SGIS, "GL_TEXTURE_FILTER4_SIZE_SGIS");
#endif
#if defined(GL_TEXTURE_GEQUAL_R_SGIX)
defconsti(env, "GL-TEXTURE-GEQUAL-R-SGIX", (GLenum) GL_TEXTURE_GEQUAL_R_SGIX, "GL_TEXTURE_GEQUAL_R_SGIX");
#endif
#if defined(GL_TEXTURE_GREEN_SIZE)
defconsti(env, "GL-TEXTURE-GREEN-SIZE", (GLenum) GL_TEXTURE_GREEN_SIZE, "GL_TEXTURE_GREEN_SIZE");
#endif
#if defined(GL_TEXTURE_HEIGHT)
defconsti(env, "GL-TEXTURE-HEIGHT", (GLenum) GL_TEXTURE_HEIGHT, "GL_TEXTURE_HEIGHT");
#endif
#if defined(GL_TEXTURE_INTENSITY_SIZE)
defconsti(env, "GL-TEXTURE-INTENSITY-SIZE", (GLenum) GL_TEXTURE_INTENSITY_SIZE, "GL_TEXTURE_INTENSITY_SIZE");
#endif
#if defined(GL_TEXTURE_INTERNAL_FORMAT)
defconsti(env, "GL-TEXTURE-INTERNAL-FORMAT", (GLenum) GL_TEXTURE_INTERNAL_FORMAT, "GL_TEXTURE_INTERNAL_FORMAT");
#endif
#if defined(GL_TEXTURE_LEQUAL_R_SGIX)
defconsti(env, "GL-TEXTURE-LEQUAL-R-SGIX", (GLenum) GL_TEXTURE_LEQUAL_R_SGIX, "GL_TEXTURE_LEQUAL_R_SGIX");
#endif
#if defined(GL_TEXTURE_LUMINANCE_SIZE)
defconsti(env, "GL-TEXTURE-LUMINANCE-SIZE", (GLenum) GL_TEXTURE_LUMINANCE_SIZE, "GL_TEXTURE_LUMINANCE_SIZE");
#endif
#if defined(GL_TEXTURE_MAX_LEVEL_SGIS)
defconsti(env, "GL-TEXTURE-MAX-LEVEL-SGIS", (GLenum) GL_TEXTURE_MAX_LEVEL_SGIS, "GL_TEXTURE_MAX_LEVEL_SGIS");
#endif
#if defined(GL_TEXTURE_MAX_LOD_SGIS)
defconsti(env, "GL-TEXTURE-MAX-LOD-SGIS", (GLenum) GL_TEXTURE_MAX_LOD_SGIS, "GL_TEXTURE_MAX_LOD_SGIS");
#endif
#if defined(GL_TEXTURE_MIN_LOD_SGIS)
defconsti(env, "GL-TEXTURE-MIN-LOD-SGIS", (GLenum) GL_TEXTURE_MIN_LOD_SGIS, "GL_TEXTURE_MIN_LOD_SGIS");
#endif
#if defined(GL_TEXTURE_RED_SIZE)
defconsti(env, "GL-TEXTURE-RED-SIZE", (GLenum) GL_TEXTURE_RED_SIZE, "GL_TEXTURE_RED_SIZE");
#endif
#if defined(GL_TEXTURE_RESIDENT)
defconsti(env, "GL-TEXTURE-RESIDENT", (GLenum) GL_TEXTURE_RESIDENT, "GL_TEXTURE_RESIDENT");
#endif
#if defined(GL_TEXTURE_WIDTH)
defconsti(env, "GL-TEXTURE-WIDTH", (GLenum) GL_TEXTURE_WIDTH, "GL_TEXTURE_WIDTH");
#endif
#if defined(GL_TEXTURE_STORAGE_SPARSE_BIT_AMD)
defconsti(env, "GL-TEXTURE-STORAGE-SPARSE-BIT-AMD", (GLenum) GL_TEXTURE_STORAGE_SPARSE_BIT_AMD, "GL_TEXTURE_STORAGE_SPARSE_BIT_AMD");
#endif
#if defined(GL_DETAIL_TEXTURE_2D_SGIS)
defconsti(env, "GL-DETAIL-TEXTURE-2D-SGIS", (GLenum) GL_DETAIL_TEXTURE_2D_SGIS, "GL_DETAIL_TEXTURE_2D_SGIS");
#endif
#if defined(GL_PROXY_TEXTURE_1D)
defconsti(env, "GL-PROXY-TEXTURE-1D", (GLenum) GL_PROXY_TEXTURE_1D, "GL_PROXY_TEXTURE_1D");
#endif
#if defined(GL_PROXY_TEXTURE_1D_ARRAY)
defconsti(env, "GL-PROXY-TEXTURE-1D-ARRAY", (GLenum) GL_PROXY_TEXTURE_1D_ARRAY, "GL_PROXY_TEXTURE_1D_ARRAY");
#endif
#if defined(GL_PROXY_TEXTURE_1D_ARRAY_EXT)
defconsti(env, "GL-PROXY-TEXTURE-1D-ARRAY-EXT", (GLenum) GL_PROXY_TEXTURE_1D_ARRAY_EXT, "GL_PROXY_TEXTURE_1D_ARRAY_EXT");
#endif
#if defined(GL_PROXY_TEXTURE_1D_EXT)
defconsti(env, "GL-PROXY-TEXTURE-1D-EXT", (GLenum) GL_PROXY_TEXTURE_1D_EXT, "GL_PROXY_TEXTURE_1D_EXT");
#endif
#if defined(GL_PROXY_TEXTURE_2D)
defconsti(env, "GL-PROXY-TEXTURE-2D", (GLenum) GL_PROXY_TEXTURE_2D, "GL_PROXY_TEXTURE_2D");
#endif
#if defined(GL_PROXY_TEXTURE_2D_ARRAY)
defconsti(env, "GL-PROXY-TEXTURE-2D-ARRAY", (GLenum) GL_PROXY_TEXTURE_2D_ARRAY, "GL_PROXY_TEXTURE_2D_ARRAY");
#endif
#if defined(GL_PROXY_TEXTURE_2D_ARRAY_EXT)
defconsti(env, "GL-PROXY-TEXTURE-2D-ARRAY-EXT", (GLenum) GL_PROXY_TEXTURE_2D_ARRAY_EXT, "GL_PROXY_TEXTURE_2D_ARRAY_EXT");
#endif
#if defined(GL_PROXY_TEXTURE_2D_EXT)
defconsti(env, "GL-PROXY-TEXTURE-2D-EXT", (GLenum) GL_PROXY_TEXTURE_2D_EXT, "GL_PROXY_TEXTURE_2D_EXT");
#endif
#if defined(GL_PROXY_TEXTURE_2D_MULTISAMPLE)
defconsti(env, "GL-PROXY-TEXTURE-2D-MULTISAMPLE", (GLenum) GL_PROXY_TEXTURE_2D_MULTISAMPLE, "GL_PROXY_TEXTURE_2D_MULTISAMPLE");
#endif
#if defined(GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-PROXY-TEXTURE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY, "GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_PROXY_TEXTURE_3D)
defconsti(env, "GL-PROXY-TEXTURE-3D", (GLenum) GL_PROXY_TEXTURE_3D, "GL_PROXY_TEXTURE_3D");
#endif
#if defined(GL_PROXY_TEXTURE_3D_EXT)
defconsti(env, "GL-PROXY-TEXTURE-3D-EXT", (GLenum) GL_PROXY_TEXTURE_3D_EXT, "GL_PROXY_TEXTURE_3D_EXT");
#endif
#if defined(GL_PROXY_TEXTURE_4D_SGIS)
defconsti(env, "GL-PROXY-TEXTURE-4D-SGIS", (GLenum) GL_PROXY_TEXTURE_4D_SGIS, "GL_PROXY_TEXTURE_4D_SGIS");
#endif
#if defined(GL_PROXY_TEXTURE_CUBE_MAP)
defconsti(env, "GL-PROXY-TEXTURE-CUBE-MAP", (GLenum) GL_PROXY_TEXTURE_CUBE_MAP, "GL_PROXY_TEXTURE_CUBE_MAP");
#endif
#if defined(GL_PROXY_TEXTURE_CUBE_MAP_ARB)
defconsti(env, "GL-PROXY-TEXTURE-CUBE-MAP-ARB", (GLenum) GL_PROXY_TEXTURE_CUBE_MAP_ARB, "GL_PROXY_TEXTURE_CUBE_MAP_ARB");
#endif
#if defined(GL_PROXY_TEXTURE_CUBE_MAP_EXT)
defconsti(env, "GL-PROXY-TEXTURE-CUBE-MAP-EXT", (GLenum) GL_PROXY_TEXTURE_CUBE_MAP_EXT, "GL_PROXY_TEXTURE_CUBE_MAP_EXT");
#endif
#if defined(GL_PROXY_TEXTURE_CUBE_MAP_ARRAY)
defconsti(env, "GL-PROXY-TEXTURE-CUBE-MAP-ARRAY", (GLenum) GL_PROXY_TEXTURE_CUBE_MAP_ARRAY, "GL_PROXY_TEXTURE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB)
defconsti(env, "GL-PROXY-TEXTURE-CUBE-MAP-ARRAY-ARB", (GLenum) GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB, "GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB");
#endif
#if defined(GL_PROXY_TEXTURE_RECTANGLE)
defconsti(env, "GL-PROXY-TEXTURE-RECTANGLE", (GLenum) GL_PROXY_TEXTURE_RECTANGLE, "GL_PROXY_TEXTURE_RECTANGLE");
#endif
#if defined(GL_PROXY_TEXTURE_RECTANGLE_ARB)
defconsti(env, "GL-PROXY-TEXTURE-RECTANGLE-ARB", (GLenum) GL_PROXY_TEXTURE_RECTANGLE_ARB, "GL_PROXY_TEXTURE_RECTANGLE_ARB");
#endif
#if defined(GL_PROXY_TEXTURE_RECTANGLE_NV)
defconsti(env, "GL-PROXY-TEXTURE-RECTANGLE-NV", (GLenum) GL_PROXY_TEXTURE_RECTANGLE_NV, "GL_PROXY_TEXTURE_RECTANGLE_NV");
#endif
#if defined(GL_TEXTURE_1D)
defconsti(env, "GL-TEXTURE-1D", (GLenum) GL_TEXTURE_1D, "GL_TEXTURE_1D");
#endif
#if defined(GL_TEXTURE_2D)
defconsti(env, "GL-TEXTURE-2D", (GLenum) GL_TEXTURE_2D, "GL_TEXTURE_2D");
#endif
#if defined(GL_TEXTURE_3D)
defconsti(env, "GL-TEXTURE-3D", (GLenum) GL_TEXTURE_3D, "GL_TEXTURE_3D");
#endif
#if defined(GL_TEXTURE_3D_EXT)
defconsti(env, "GL-TEXTURE-3D-EXT", (GLenum) GL_TEXTURE_3D_EXT, "GL_TEXTURE_3D_EXT");
#endif
#if defined(GL_TEXTURE_3D_OES)
defconsti(env, "GL-TEXTURE-3D-OES", (GLenum) GL_TEXTURE_3D_OES, "GL_TEXTURE_3D_OES");
#endif
#if defined(GL_TEXTURE_4D_SGIS)
defconsti(env, "GL-TEXTURE-4D-SGIS", (GLenum) GL_TEXTURE_4D_SGIS, "GL_TEXTURE_4D_SGIS");
#endif
#if defined(GL_TEXTURE_RECTANGLE)
defconsti(env, "GL-TEXTURE-RECTANGLE", (GLenum) GL_TEXTURE_RECTANGLE, "GL_TEXTURE_RECTANGLE");
#endif
#if defined(GL_TEXTURE_CUBE_MAP)
defconsti(env, "GL-TEXTURE-CUBE-MAP", (GLenum) GL_TEXTURE_CUBE_MAP, "GL_TEXTURE_CUBE_MAP");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_X)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-X", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_X, "GL_TEXTURE_CUBE_MAP_POSITIVE_X");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_X)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-X", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_X, "GL_TEXTURE_CUBE_MAP_NEGATIVE_X");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_Y)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-Y", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_Y, "GL_TEXTURE_CUBE_MAP_POSITIVE_Y");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_Y)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-Y", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_Z)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-Z", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_Z, "GL_TEXTURE_CUBE_MAP_POSITIVE_Z");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_Z)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-Z", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_ARRAY)
defconsti(env, "GL-TEXTURE-CUBE-MAP-ARRAY", (GLenum) GL_TEXTURE_CUBE_MAP_ARRAY, "GL_TEXTURE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_ARRAY_ARB)
defconsti(env, "GL-TEXTURE-CUBE-MAP-ARRAY-ARB", (GLenum) GL_TEXTURE_CUBE_MAP_ARRAY_ARB, "GL_TEXTURE_CUBE_MAP_ARRAY_ARB");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_ARRAY_EXT)
defconsti(env, "GL-TEXTURE-CUBE-MAP-ARRAY-EXT", (GLenum) GL_TEXTURE_CUBE_MAP_ARRAY_EXT, "GL_TEXTURE_CUBE_MAP_ARRAY_EXT");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_ARRAY_OES)
defconsti(env, "GL-TEXTURE-CUBE-MAP-ARRAY-OES", (GLenum) GL_TEXTURE_CUBE_MAP_ARRAY_OES, "GL_TEXTURE_CUBE_MAP_ARRAY_OES");
#endif
#if defined(GL_TEXTURE_1D_ARRAY)
defconsti(env, "GL-TEXTURE-1D-ARRAY", (GLenum) GL_TEXTURE_1D_ARRAY, "GL_TEXTURE_1D_ARRAY");
#endif
#if defined(GL_TEXTURE_2D_ARRAY)
defconsti(env, "GL-TEXTURE-2D-ARRAY", (GLenum) GL_TEXTURE_2D_ARRAY, "GL_TEXTURE_2D_ARRAY");
#endif
#if defined(GL_TEXTURE_2D_MULTISAMPLE)
defconsti(env, "GL-TEXTURE-2D-MULTISAMPLE", (GLenum) GL_TEXTURE_2D_MULTISAMPLE, "GL_TEXTURE_2D_MULTISAMPLE");
#endif
#if defined(GL_TEXTURE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-TEXTURE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_TEXTURE_2D_MULTISAMPLE_ARRAY, "GL_TEXTURE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_CLAMP)
defconsti(env, "GL-CLAMP", (GLenum) GL_CLAMP, "GL_CLAMP");
#endif
#if defined(GL_CLAMP_TO_BORDER)
defconsti(env, "GL-CLAMP-TO-BORDER", (GLenum) GL_CLAMP_TO_BORDER, "GL_CLAMP_TO_BORDER");
#endif
#if defined(GL_CLAMP_TO_BORDER_ARB)
defconsti(env, "GL-CLAMP-TO-BORDER-ARB", (GLenum) GL_CLAMP_TO_BORDER_ARB, "GL_CLAMP_TO_BORDER_ARB");
#endif
#if defined(GL_CLAMP_TO_BORDER_NV)
defconsti(env, "GL-CLAMP-TO-BORDER-NV", (GLenum) GL_CLAMP_TO_BORDER_NV, "GL_CLAMP_TO_BORDER_NV");
#endif
#if defined(GL_CLAMP_TO_BORDER_SGIS)
defconsti(env, "GL-CLAMP-TO-BORDER-SGIS", (GLenum) GL_CLAMP_TO_BORDER_SGIS, "GL_CLAMP_TO_BORDER_SGIS");
#endif
#if defined(GL_CLAMP_TO_EDGE)
defconsti(env, "GL-CLAMP-TO-EDGE", (GLenum) GL_CLAMP_TO_EDGE, "GL_CLAMP_TO_EDGE");
#endif
#if defined(GL_CLAMP_TO_EDGE_SGIS)
defconsti(env, "GL-CLAMP-TO-EDGE-SGIS", (GLenum) GL_CLAMP_TO_EDGE_SGIS, "GL_CLAMP_TO_EDGE_SGIS");
#endif
#if defined(GL_REPEAT)
defconsti(env, "GL-REPEAT", (GLenum) GL_REPEAT, "GL_REPEAT");
#endif
#if defined(GL_LINEAR_MIPMAP_LINEAR)
defconsti(env, "GL-LINEAR-MIPMAP-LINEAR", (GLenum) GL_LINEAR_MIPMAP_LINEAR, "GL_LINEAR_MIPMAP_LINEAR");
#endif
#if defined(GL_MIRRORED_REPEAT)
defconsti(env, "GL-MIRRORED-REPEAT", (GLenum) GL_MIRRORED_REPEAT, "GL_MIRRORED_REPEAT");
#endif
#if defined(GL_VERTEX_SHADER_BIT)
defconsti(env, "GL-VERTEX-SHADER-BIT", (GLenum) GL_VERTEX_SHADER_BIT, "GL_VERTEX_SHADER_BIT");
#endif
#if defined(GL_VERTEX_SHADER_BIT_EXT)
defconsti(env, "GL-VERTEX-SHADER-BIT-EXT", (GLenum) GL_VERTEX_SHADER_BIT_EXT, "GL_VERTEX_SHADER_BIT_EXT");
#endif
#if defined(GL_FRAGMENT_SHADER_BIT)
defconsti(env, "GL-FRAGMENT-SHADER-BIT", (GLenum) GL_FRAGMENT_SHADER_BIT, "GL_FRAGMENT_SHADER_BIT");
#endif
#if defined(GL_FRAGMENT_SHADER_BIT_EXT)
defconsti(env, "GL-FRAGMENT-SHADER-BIT-EXT", (GLenum) GL_FRAGMENT_SHADER_BIT_EXT, "GL_FRAGMENT_SHADER_BIT_EXT");
#endif
#if defined(GL_GEOMETRY_SHADER_BIT)
defconsti(env, "GL-GEOMETRY-SHADER-BIT", (GLenum) GL_GEOMETRY_SHADER_BIT, "GL_GEOMETRY_SHADER_BIT");
#endif
#if defined(GL_GEOMETRY_SHADER_BIT_EXT)
defconsti(env, "GL-GEOMETRY-SHADER-BIT-EXT", (GLenum) GL_GEOMETRY_SHADER_BIT_EXT, "GL_GEOMETRY_SHADER_BIT_EXT");
#endif
#if defined(GL_GEOMETRY_SHADER_BIT_OES)
defconsti(env, "GL-GEOMETRY-SHADER-BIT-OES", (GLenum) GL_GEOMETRY_SHADER_BIT_OES, "GL_GEOMETRY_SHADER_BIT_OES");
#endif
#if defined(GL_TESS_CONTROL_SHADER_BIT)
defconsti(env, "GL-TESS-CONTROL-SHADER-BIT", (GLenum) GL_TESS_CONTROL_SHADER_BIT, "GL_TESS_CONTROL_SHADER_BIT");
#endif
#if defined(GL_TESS_CONTROL_SHADER_BIT_EXT)
defconsti(env, "GL-TESS-CONTROL-SHADER-BIT-EXT", (GLenum) GL_TESS_CONTROL_SHADER_BIT_EXT, "GL_TESS_CONTROL_SHADER_BIT_EXT");
#endif
#if defined(GL_TESS_CONTROL_SHADER_BIT_OES)
defconsti(env, "GL-TESS-CONTROL-SHADER-BIT-OES", (GLenum) GL_TESS_CONTROL_SHADER_BIT_OES, "GL_TESS_CONTROL_SHADER_BIT_OES");
#endif
#if defined(GL_TESS_EVALUATION_SHADER_BIT)
defconsti(env, "GL-TESS-EVALUATION-SHADER-BIT", (GLenum) GL_TESS_EVALUATION_SHADER_BIT, "GL_TESS_EVALUATION_SHADER_BIT");
#endif
#if defined(GL_TESS_EVALUATION_SHADER_BIT_EXT)
defconsti(env, "GL-TESS-EVALUATION-SHADER-BIT-EXT", (GLenum) GL_TESS_EVALUATION_SHADER_BIT_EXT, "GL_TESS_EVALUATION_SHADER_BIT_EXT");
#endif
#if defined(GL_TESS_EVALUATION_SHADER_BIT_OES)
defconsti(env, "GL-TESS-EVALUATION-SHADER-BIT-OES", (GLenum) GL_TESS_EVALUATION_SHADER_BIT_OES, "GL_TESS_EVALUATION_SHADER_BIT_OES");
#endif
#if defined(GL_COMPUTE_SHADER_BIT)
defconsti(env, "GL-COMPUTE-SHADER-BIT", (GLenum) GL_COMPUTE_SHADER_BIT, "GL_COMPUTE_SHADER_BIT");
#endif
#if defined(GL_MESH_SHADER_BIT_NV)
defconsti(env, "GL-MESH-SHADER-BIT-NV", (GLenum) GL_MESH_SHADER_BIT_NV, "GL_MESH_SHADER_BIT_NV");
#endif
#if defined(GL_TASK_SHADER_BIT_NV)
defconsti(env, "GL-TASK-SHADER-BIT-NV", (GLenum) GL_TASK_SHADER_BIT_NV, "GL_TASK_SHADER_BIT_NV");
#endif
#if defined(GL_ALL_SHADER_BITS)
defconsti(env, "GL-ALL-SHADER-BITS", (GLenum) GL_ALL_SHADER_BITS, "GL_ALL_SHADER_BITS");
#endif
#if defined(GL_ALL_SHADER_BITS_EXT)
defconsti(env, "GL-ALL-SHADER-BITS-EXT", (GLenum) GL_ALL_SHADER_BITS_EXT, "GL_ALL_SHADER_BITS_EXT");
#endif
#if defined(GL_SUBGROUP_FEATURE_BASIC_BIT_KHR)
defconsti(env, "GL-SUBGROUP-FEATURE-BASIC-BIT-KHR", (GLenum) GL_SUBGROUP_FEATURE_BASIC_BIT_KHR, "GL_SUBGROUP_FEATURE_BASIC_BIT_KHR");
#endif
#if defined(GL_SUBGROUP_FEATURE_VOTE_BIT_KHR)
defconsti(env, "GL-SUBGROUP-FEATURE-VOTE-BIT-KHR", (GLenum) GL_SUBGROUP_FEATURE_VOTE_BIT_KHR, "GL_SUBGROUP_FEATURE_VOTE_BIT_KHR");
#endif
#if defined(GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR)
defconsti(env, "GL-SUBGROUP-FEATURE-ARITHMETIC-BIT-KHR", (GLenum) GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR, "GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR");
#endif
#if defined(GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR)
defconsti(env, "GL-SUBGROUP-FEATURE-BALLOT-BIT-KHR", (GLenum) GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR, "GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR");
#endif
#if defined(GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR)
defconsti(env, "GL-SUBGROUP-FEATURE-SHUFFLE-BIT-KHR", (GLenum) GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR, "GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR");
#endif
#if defined(GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR)
defconsti(env, "GL-SUBGROUP-FEATURE-SHUFFLE-RELATIVE-BIT-KHR", (GLenum) GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR, "GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR");
#endif
#if defined(GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR)
defconsti(env, "GL-SUBGROUP-FEATURE-CLUSTERED-BIT-KHR", (GLenum) GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR, "GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR");
#endif
#if defined(GL_SUBGROUP_FEATURE_QUAD_BIT_KHR)
defconsti(env, "GL-SUBGROUP-FEATURE-QUAD-BIT-KHR", (GLenum) GL_SUBGROUP_FEATURE_QUAD_BIT_KHR, "GL_SUBGROUP_FEATURE_QUAD_BIT_KHR");
#endif
#if defined(GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV)
defconsti(env, "GL-SUBGROUP-FEATURE-PARTITIONED-BIT-NV", (GLenum) GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV, "GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV");
#endif
#if defined(GL_DOUBLE)
defconsti(env, "GL-DOUBLE", (GLenum) GL_DOUBLE, "GL_DOUBLE");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_INT)
defconsti(env, "GL-INT", (GLenum) GL_INT, "GL_INT");
#endif
#if defined(GL_SHORT)
defconsti(env, "GL-SHORT", (GLenum) GL_SHORT, "GL_SHORT");
#endif
#if defined(GL_COLOR_ATTACHMENT0)
defconsti(env, "GL-COLOR-ATTACHMENT0", (GLenum) GL_COLOR_ATTACHMENT0, "GL_COLOR_ATTACHMENT0");
#endif
#if defined(GL_COLOR_ATTACHMENT0_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT0-EXT", (GLenum) GL_COLOR_ATTACHMENT0_EXT, "GL_COLOR_ATTACHMENT0_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT0_NV)
defconsti(env, "GL-COLOR-ATTACHMENT0-NV", (GLenum) GL_COLOR_ATTACHMENT0_NV, "GL_COLOR_ATTACHMENT0_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT0_OES)
defconsti(env, "GL-COLOR-ATTACHMENT0-OES", (GLenum) GL_COLOR_ATTACHMENT0_OES, "GL_COLOR_ATTACHMENT0_OES");
#endif
#if defined(GL_COLOR_ATTACHMENT1)
defconsti(env, "GL-COLOR-ATTACHMENT1", (GLenum) GL_COLOR_ATTACHMENT1, "GL_COLOR_ATTACHMENT1");
#endif
#if defined(GL_COLOR_ATTACHMENT1_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT1-EXT", (GLenum) GL_COLOR_ATTACHMENT1_EXT, "GL_COLOR_ATTACHMENT1_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT1_NV)
defconsti(env, "GL-COLOR-ATTACHMENT1-NV", (GLenum) GL_COLOR_ATTACHMENT1_NV, "GL_COLOR_ATTACHMENT1_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT2)
defconsti(env, "GL-COLOR-ATTACHMENT2", (GLenum) GL_COLOR_ATTACHMENT2, "GL_COLOR_ATTACHMENT2");
#endif
#if defined(GL_COLOR_ATTACHMENT2_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT2-EXT", (GLenum) GL_COLOR_ATTACHMENT2_EXT, "GL_COLOR_ATTACHMENT2_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT2_NV)
defconsti(env, "GL-COLOR-ATTACHMENT2-NV", (GLenum) GL_COLOR_ATTACHMENT2_NV, "GL_COLOR_ATTACHMENT2_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT3)
defconsti(env, "GL-COLOR-ATTACHMENT3", (GLenum) GL_COLOR_ATTACHMENT3, "GL_COLOR_ATTACHMENT3");
#endif
#if defined(GL_COLOR_ATTACHMENT3_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT3-EXT", (GLenum) GL_COLOR_ATTACHMENT3_EXT, "GL_COLOR_ATTACHMENT3_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT3_NV)
defconsti(env, "GL-COLOR-ATTACHMENT3-NV", (GLenum) GL_COLOR_ATTACHMENT3_NV, "GL_COLOR_ATTACHMENT3_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT4)
defconsti(env, "GL-COLOR-ATTACHMENT4", (GLenum) GL_COLOR_ATTACHMENT4, "GL_COLOR_ATTACHMENT4");
#endif
#if defined(GL_COLOR_ATTACHMENT4_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT4-EXT", (GLenum) GL_COLOR_ATTACHMENT4_EXT, "GL_COLOR_ATTACHMENT4_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT4_NV)
defconsti(env, "GL-COLOR-ATTACHMENT4-NV", (GLenum) GL_COLOR_ATTACHMENT4_NV, "GL_COLOR_ATTACHMENT4_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT5)
defconsti(env, "GL-COLOR-ATTACHMENT5", (GLenum) GL_COLOR_ATTACHMENT5, "GL_COLOR_ATTACHMENT5");
#endif
#if defined(GL_COLOR_ATTACHMENT5_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT5-EXT", (GLenum) GL_COLOR_ATTACHMENT5_EXT, "GL_COLOR_ATTACHMENT5_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT5_NV)
defconsti(env, "GL-COLOR-ATTACHMENT5-NV", (GLenum) GL_COLOR_ATTACHMENT5_NV, "GL_COLOR_ATTACHMENT5_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT6)
defconsti(env, "GL-COLOR-ATTACHMENT6", (GLenum) GL_COLOR_ATTACHMENT6, "GL_COLOR_ATTACHMENT6");
#endif
#if defined(GL_COLOR_ATTACHMENT6_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT6-EXT", (GLenum) GL_COLOR_ATTACHMENT6_EXT, "GL_COLOR_ATTACHMENT6_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT6_NV)
defconsti(env, "GL-COLOR-ATTACHMENT6-NV", (GLenum) GL_COLOR_ATTACHMENT6_NV, "GL_COLOR_ATTACHMENT6_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT7)
defconsti(env, "GL-COLOR-ATTACHMENT7", (GLenum) GL_COLOR_ATTACHMENT7, "GL_COLOR_ATTACHMENT7");
#endif
#if defined(GL_COLOR_ATTACHMENT7_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT7-EXT", (GLenum) GL_COLOR_ATTACHMENT7_EXT, "GL_COLOR_ATTACHMENT7_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT7_NV)
defconsti(env, "GL-COLOR-ATTACHMENT7-NV", (GLenum) GL_COLOR_ATTACHMENT7_NV, "GL_COLOR_ATTACHMENT7_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT8)
defconsti(env, "GL-COLOR-ATTACHMENT8", (GLenum) GL_COLOR_ATTACHMENT8, "GL_COLOR_ATTACHMENT8");
#endif
#if defined(GL_COLOR_ATTACHMENT8_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT8-EXT", (GLenum) GL_COLOR_ATTACHMENT8_EXT, "GL_COLOR_ATTACHMENT8_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT8_NV)
defconsti(env, "GL-COLOR-ATTACHMENT8-NV", (GLenum) GL_COLOR_ATTACHMENT8_NV, "GL_COLOR_ATTACHMENT8_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT9)
defconsti(env, "GL-COLOR-ATTACHMENT9", (GLenum) GL_COLOR_ATTACHMENT9, "GL_COLOR_ATTACHMENT9");
#endif
#if defined(GL_COLOR_ATTACHMENT9_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT9-EXT", (GLenum) GL_COLOR_ATTACHMENT9_EXT, "GL_COLOR_ATTACHMENT9_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT9_NV)
defconsti(env, "GL-COLOR-ATTACHMENT9-NV", (GLenum) GL_COLOR_ATTACHMENT9_NV, "GL_COLOR_ATTACHMENT9_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT10)
defconsti(env, "GL-COLOR-ATTACHMENT10", (GLenum) GL_COLOR_ATTACHMENT10, "GL_COLOR_ATTACHMENT10");
#endif
#if defined(GL_COLOR_ATTACHMENT10_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT10-EXT", (GLenum) GL_COLOR_ATTACHMENT10_EXT, "GL_COLOR_ATTACHMENT10_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT10_NV)
defconsti(env, "GL-COLOR-ATTACHMENT10-NV", (GLenum) GL_COLOR_ATTACHMENT10_NV, "GL_COLOR_ATTACHMENT10_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT11)
defconsti(env, "GL-COLOR-ATTACHMENT11", (GLenum) GL_COLOR_ATTACHMENT11, "GL_COLOR_ATTACHMENT11");
#endif
#if defined(GL_COLOR_ATTACHMENT11_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT11-EXT", (GLenum) GL_COLOR_ATTACHMENT11_EXT, "GL_COLOR_ATTACHMENT11_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT11_NV)
defconsti(env, "GL-COLOR-ATTACHMENT11-NV", (GLenum) GL_COLOR_ATTACHMENT11_NV, "GL_COLOR_ATTACHMENT11_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT12)
defconsti(env, "GL-COLOR-ATTACHMENT12", (GLenum) GL_COLOR_ATTACHMENT12, "GL_COLOR_ATTACHMENT12");
#endif
#if defined(GL_COLOR_ATTACHMENT12_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT12-EXT", (GLenum) GL_COLOR_ATTACHMENT12_EXT, "GL_COLOR_ATTACHMENT12_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT12_NV)
defconsti(env, "GL-COLOR-ATTACHMENT12-NV", (GLenum) GL_COLOR_ATTACHMENT12_NV, "GL_COLOR_ATTACHMENT12_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT13)
defconsti(env, "GL-COLOR-ATTACHMENT13", (GLenum) GL_COLOR_ATTACHMENT13, "GL_COLOR_ATTACHMENT13");
#endif
#if defined(GL_COLOR_ATTACHMENT13_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT13-EXT", (GLenum) GL_COLOR_ATTACHMENT13_EXT, "GL_COLOR_ATTACHMENT13_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT13_NV)
defconsti(env, "GL-COLOR-ATTACHMENT13-NV", (GLenum) GL_COLOR_ATTACHMENT13_NV, "GL_COLOR_ATTACHMENT13_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT14)
defconsti(env, "GL-COLOR-ATTACHMENT14", (GLenum) GL_COLOR_ATTACHMENT14, "GL_COLOR_ATTACHMENT14");
#endif
#if defined(GL_COLOR_ATTACHMENT14_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT14-EXT", (GLenum) GL_COLOR_ATTACHMENT14_EXT, "GL_COLOR_ATTACHMENT14_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT14_NV)
defconsti(env, "GL-COLOR-ATTACHMENT14-NV", (GLenum) GL_COLOR_ATTACHMENT14_NV, "GL_COLOR_ATTACHMENT14_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT15)
defconsti(env, "GL-COLOR-ATTACHMENT15", (GLenum) GL_COLOR_ATTACHMENT15, "GL_COLOR_ATTACHMENT15");
#endif
#if defined(GL_COLOR_ATTACHMENT15_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT15-EXT", (GLenum) GL_COLOR_ATTACHMENT15_EXT, "GL_COLOR_ATTACHMENT15_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT15_NV)
defconsti(env, "GL-COLOR-ATTACHMENT15-NV", (GLenum) GL_COLOR_ATTACHMENT15_NV, "GL_COLOR_ATTACHMENT15_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT16)
defconsti(env, "GL-COLOR-ATTACHMENT16", (GLenum) GL_COLOR_ATTACHMENT16, "GL_COLOR_ATTACHMENT16");
#endif
#if defined(GL_COLOR_ATTACHMENT17)
defconsti(env, "GL-COLOR-ATTACHMENT17", (GLenum) GL_COLOR_ATTACHMENT17, "GL_COLOR_ATTACHMENT17");
#endif
#if defined(GL_COLOR_ATTACHMENT18)
defconsti(env, "GL-COLOR-ATTACHMENT18", (GLenum) GL_COLOR_ATTACHMENT18, "GL_COLOR_ATTACHMENT18");
#endif
#if defined(GL_COLOR_ATTACHMENT19)
defconsti(env, "GL-COLOR-ATTACHMENT19", (GLenum) GL_COLOR_ATTACHMENT19, "GL_COLOR_ATTACHMENT19");
#endif
#if defined(GL_COLOR_ATTACHMENT20)
defconsti(env, "GL-COLOR-ATTACHMENT20", (GLenum) GL_COLOR_ATTACHMENT20, "GL_COLOR_ATTACHMENT20");
#endif
#if defined(GL_COLOR_ATTACHMENT21)
defconsti(env, "GL-COLOR-ATTACHMENT21", (GLenum) GL_COLOR_ATTACHMENT21, "GL_COLOR_ATTACHMENT21");
#endif
#if defined(GL_COLOR_ATTACHMENT22)
defconsti(env, "GL-COLOR-ATTACHMENT22", (GLenum) GL_COLOR_ATTACHMENT22, "GL_COLOR_ATTACHMENT22");
#endif
#if defined(GL_COLOR_ATTACHMENT23)
defconsti(env, "GL-COLOR-ATTACHMENT23", (GLenum) GL_COLOR_ATTACHMENT23, "GL_COLOR_ATTACHMENT23");
#endif
#if defined(GL_COLOR_ATTACHMENT24)
defconsti(env, "GL-COLOR-ATTACHMENT24", (GLenum) GL_COLOR_ATTACHMENT24, "GL_COLOR_ATTACHMENT24");
#endif
#if defined(GL_COLOR_ATTACHMENT25)
defconsti(env, "GL-COLOR-ATTACHMENT25", (GLenum) GL_COLOR_ATTACHMENT25, "GL_COLOR_ATTACHMENT25");
#endif
#if defined(GL_COLOR_ATTACHMENT26)
defconsti(env, "GL-COLOR-ATTACHMENT26", (GLenum) GL_COLOR_ATTACHMENT26, "GL_COLOR_ATTACHMENT26");
#endif
#if defined(GL_COLOR_ATTACHMENT27)
defconsti(env, "GL-COLOR-ATTACHMENT27", (GLenum) GL_COLOR_ATTACHMENT27, "GL_COLOR_ATTACHMENT27");
#endif
#if defined(GL_COLOR_ATTACHMENT28)
defconsti(env, "GL-COLOR-ATTACHMENT28", (GLenum) GL_COLOR_ATTACHMENT28, "GL_COLOR_ATTACHMENT28");
#endif
#if defined(GL_COLOR_ATTACHMENT29)
defconsti(env, "GL-COLOR-ATTACHMENT29", (GLenum) GL_COLOR_ATTACHMENT29, "GL_COLOR_ATTACHMENT29");
#endif
#if defined(GL_COLOR_ATTACHMENT30)
defconsti(env, "GL-COLOR-ATTACHMENT30", (GLenum) GL_COLOR_ATTACHMENT30, "GL_COLOR_ATTACHMENT30");
#endif
#if defined(GL_COLOR_ATTACHMENT31)
defconsti(env, "GL-COLOR-ATTACHMENT31", (GLenum) GL_COLOR_ATTACHMENT31, "GL_COLOR_ATTACHMENT31");
#endif
#if defined(GL_DEPTH_ATTACHMENT)
defconsti(env, "GL-DEPTH-ATTACHMENT", (GLenum) GL_DEPTH_ATTACHMENT, "GL_DEPTH_ATTACHMENT");
#endif
#if defined(GL_DEPTH_STENCIL_ATTACHMENT)
defconsti(env, "GL-DEPTH-STENCIL-ATTACHMENT", (GLenum) GL_DEPTH_STENCIL_ATTACHMENT, "GL_DEPTH_STENCIL_ATTACHMENT");
#endif
#if defined(GL_DEPTH_ATTACHMENT_EXT)
defconsti(env, "GL-DEPTH-ATTACHMENT-EXT", (GLenum) GL_DEPTH_ATTACHMENT_EXT, "GL_DEPTH_ATTACHMENT_EXT");
#endif
#if defined(GL_DEPTH_ATTACHMENT_OES)
defconsti(env, "GL-DEPTH-ATTACHMENT-OES", (GLenum) GL_DEPTH_ATTACHMENT_OES, "GL_DEPTH_ATTACHMENT_OES");
#endif
#if defined(GL_STENCIL_ATTACHMENT)
defconsti(env, "GL-STENCIL-ATTACHMENT", (GLenum) GL_STENCIL_ATTACHMENT, "GL_STENCIL_ATTACHMENT");
#endif
#if defined(GL_STENCIL_ATTACHMENT_EXT)
defconsti(env, "GL-STENCIL-ATTACHMENT-EXT", (GLenum) GL_STENCIL_ATTACHMENT_EXT, "GL_STENCIL_ATTACHMENT_EXT");
#endif
#if defined(GL_STENCIL_ATTACHMENT_OES)
defconsti(env, "GL-STENCIL-ATTACHMENT-OES", (GLenum) GL_STENCIL_ATTACHMENT_OES, "GL_STENCIL_ATTACHMENT_OES");
#endif
#if defined(GL_COLOR_ATTACHMENT0)
defconsti(env, "GL-COLOR-ATTACHMENT0", (GLenum) GL_COLOR_ATTACHMENT0, "GL_COLOR_ATTACHMENT0");
#endif
#if defined(GL_COLOR_ATTACHMENT0_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT0-EXT", (GLenum) GL_COLOR_ATTACHMENT0_EXT, "GL_COLOR_ATTACHMENT0_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT0_NV)
defconsti(env, "GL-COLOR-ATTACHMENT0-NV", (GLenum) GL_COLOR_ATTACHMENT0_NV, "GL_COLOR_ATTACHMENT0_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT0_OES)
defconsti(env, "GL-COLOR-ATTACHMENT0-OES", (GLenum) GL_COLOR_ATTACHMENT0_OES, "GL_COLOR_ATTACHMENT0_OES");
#endif
#if defined(GL_COLOR_ATTACHMENT1)
defconsti(env, "GL-COLOR-ATTACHMENT1", (GLenum) GL_COLOR_ATTACHMENT1, "GL_COLOR_ATTACHMENT1");
#endif
#if defined(GL_COLOR_ATTACHMENT1_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT1-EXT", (GLenum) GL_COLOR_ATTACHMENT1_EXT, "GL_COLOR_ATTACHMENT1_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT1_NV)
defconsti(env, "GL-COLOR-ATTACHMENT1-NV", (GLenum) GL_COLOR_ATTACHMENT1_NV, "GL_COLOR_ATTACHMENT1_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT2)
defconsti(env, "GL-COLOR-ATTACHMENT2", (GLenum) GL_COLOR_ATTACHMENT2, "GL_COLOR_ATTACHMENT2");
#endif
#if defined(GL_COLOR_ATTACHMENT2_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT2-EXT", (GLenum) GL_COLOR_ATTACHMENT2_EXT, "GL_COLOR_ATTACHMENT2_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT2_NV)
defconsti(env, "GL-COLOR-ATTACHMENT2-NV", (GLenum) GL_COLOR_ATTACHMENT2_NV, "GL_COLOR_ATTACHMENT2_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT3)
defconsti(env, "GL-COLOR-ATTACHMENT3", (GLenum) GL_COLOR_ATTACHMENT3, "GL_COLOR_ATTACHMENT3");
#endif
#if defined(GL_COLOR_ATTACHMENT3_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT3-EXT", (GLenum) GL_COLOR_ATTACHMENT3_EXT, "GL_COLOR_ATTACHMENT3_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT3_NV)
defconsti(env, "GL-COLOR-ATTACHMENT3-NV", (GLenum) GL_COLOR_ATTACHMENT3_NV, "GL_COLOR_ATTACHMENT3_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT4)
defconsti(env, "GL-COLOR-ATTACHMENT4", (GLenum) GL_COLOR_ATTACHMENT4, "GL_COLOR_ATTACHMENT4");
#endif
#if defined(GL_COLOR_ATTACHMENT4_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT4-EXT", (GLenum) GL_COLOR_ATTACHMENT4_EXT, "GL_COLOR_ATTACHMENT4_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT4_NV)
defconsti(env, "GL-COLOR-ATTACHMENT4-NV", (GLenum) GL_COLOR_ATTACHMENT4_NV, "GL_COLOR_ATTACHMENT4_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT5)
defconsti(env, "GL-COLOR-ATTACHMENT5", (GLenum) GL_COLOR_ATTACHMENT5, "GL_COLOR_ATTACHMENT5");
#endif
#if defined(GL_COLOR_ATTACHMENT5_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT5-EXT", (GLenum) GL_COLOR_ATTACHMENT5_EXT, "GL_COLOR_ATTACHMENT5_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT5_NV)
defconsti(env, "GL-COLOR-ATTACHMENT5-NV", (GLenum) GL_COLOR_ATTACHMENT5_NV, "GL_COLOR_ATTACHMENT5_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT6)
defconsti(env, "GL-COLOR-ATTACHMENT6", (GLenum) GL_COLOR_ATTACHMENT6, "GL_COLOR_ATTACHMENT6");
#endif
#if defined(GL_COLOR_ATTACHMENT6_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT6-EXT", (GLenum) GL_COLOR_ATTACHMENT6_EXT, "GL_COLOR_ATTACHMENT6_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT6_NV)
defconsti(env, "GL-COLOR-ATTACHMENT6-NV", (GLenum) GL_COLOR_ATTACHMENT6_NV, "GL_COLOR_ATTACHMENT6_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT7)
defconsti(env, "GL-COLOR-ATTACHMENT7", (GLenum) GL_COLOR_ATTACHMENT7, "GL_COLOR_ATTACHMENT7");
#endif
#if defined(GL_COLOR_ATTACHMENT7_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT7-EXT", (GLenum) GL_COLOR_ATTACHMENT7_EXT, "GL_COLOR_ATTACHMENT7_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT7_NV)
defconsti(env, "GL-COLOR-ATTACHMENT7-NV", (GLenum) GL_COLOR_ATTACHMENT7_NV, "GL_COLOR_ATTACHMENT7_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT8)
defconsti(env, "GL-COLOR-ATTACHMENT8", (GLenum) GL_COLOR_ATTACHMENT8, "GL_COLOR_ATTACHMENT8");
#endif
#if defined(GL_COLOR_ATTACHMENT8_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT8-EXT", (GLenum) GL_COLOR_ATTACHMENT8_EXT, "GL_COLOR_ATTACHMENT8_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT8_NV)
defconsti(env, "GL-COLOR-ATTACHMENT8-NV", (GLenum) GL_COLOR_ATTACHMENT8_NV, "GL_COLOR_ATTACHMENT8_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT9)
defconsti(env, "GL-COLOR-ATTACHMENT9", (GLenum) GL_COLOR_ATTACHMENT9, "GL_COLOR_ATTACHMENT9");
#endif
#if defined(GL_COLOR_ATTACHMENT9_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT9-EXT", (GLenum) GL_COLOR_ATTACHMENT9_EXT, "GL_COLOR_ATTACHMENT9_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT9_NV)
defconsti(env, "GL-COLOR-ATTACHMENT9-NV", (GLenum) GL_COLOR_ATTACHMENT9_NV, "GL_COLOR_ATTACHMENT9_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT10)
defconsti(env, "GL-COLOR-ATTACHMENT10", (GLenum) GL_COLOR_ATTACHMENT10, "GL_COLOR_ATTACHMENT10");
#endif
#if defined(GL_COLOR_ATTACHMENT10_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT10-EXT", (GLenum) GL_COLOR_ATTACHMENT10_EXT, "GL_COLOR_ATTACHMENT10_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT10_NV)
defconsti(env, "GL-COLOR-ATTACHMENT10-NV", (GLenum) GL_COLOR_ATTACHMENT10_NV, "GL_COLOR_ATTACHMENT10_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT11)
defconsti(env, "GL-COLOR-ATTACHMENT11", (GLenum) GL_COLOR_ATTACHMENT11, "GL_COLOR_ATTACHMENT11");
#endif
#if defined(GL_COLOR_ATTACHMENT11_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT11-EXT", (GLenum) GL_COLOR_ATTACHMENT11_EXT, "GL_COLOR_ATTACHMENT11_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT11_NV)
defconsti(env, "GL-COLOR-ATTACHMENT11-NV", (GLenum) GL_COLOR_ATTACHMENT11_NV, "GL_COLOR_ATTACHMENT11_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT12)
defconsti(env, "GL-COLOR-ATTACHMENT12", (GLenum) GL_COLOR_ATTACHMENT12, "GL_COLOR_ATTACHMENT12");
#endif
#if defined(GL_COLOR_ATTACHMENT12_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT12-EXT", (GLenum) GL_COLOR_ATTACHMENT12_EXT, "GL_COLOR_ATTACHMENT12_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT12_NV)
defconsti(env, "GL-COLOR-ATTACHMENT12-NV", (GLenum) GL_COLOR_ATTACHMENT12_NV, "GL_COLOR_ATTACHMENT12_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT13)
defconsti(env, "GL-COLOR-ATTACHMENT13", (GLenum) GL_COLOR_ATTACHMENT13, "GL_COLOR_ATTACHMENT13");
#endif
#if defined(GL_COLOR_ATTACHMENT13_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT13-EXT", (GLenum) GL_COLOR_ATTACHMENT13_EXT, "GL_COLOR_ATTACHMENT13_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT13_NV)
defconsti(env, "GL-COLOR-ATTACHMENT13-NV", (GLenum) GL_COLOR_ATTACHMENT13_NV, "GL_COLOR_ATTACHMENT13_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT14)
defconsti(env, "GL-COLOR-ATTACHMENT14", (GLenum) GL_COLOR_ATTACHMENT14, "GL_COLOR_ATTACHMENT14");
#endif
#if defined(GL_COLOR_ATTACHMENT14_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT14-EXT", (GLenum) GL_COLOR_ATTACHMENT14_EXT, "GL_COLOR_ATTACHMENT14_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT14_NV)
defconsti(env, "GL-COLOR-ATTACHMENT14-NV", (GLenum) GL_COLOR_ATTACHMENT14_NV, "GL_COLOR_ATTACHMENT14_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT15)
defconsti(env, "GL-COLOR-ATTACHMENT15", (GLenum) GL_COLOR_ATTACHMENT15, "GL_COLOR_ATTACHMENT15");
#endif
#if defined(GL_COLOR_ATTACHMENT15_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT15-EXT", (GLenum) GL_COLOR_ATTACHMENT15_EXT, "GL_COLOR_ATTACHMENT15_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT15_NV)
defconsti(env, "GL-COLOR-ATTACHMENT15-NV", (GLenum) GL_COLOR_ATTACHMENT15_NV, "GL_COLOR_ATTACHMENT15_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT16)
defconsti(env, "GL-COLOR-ATTACHMENT16", (GLenum) GL_COLOR_ATTACHMENT16, "GL_COLOR_ATTACHMENT16");
#endif
#if defined(GL_COLOR_ATTACHMENT17)
defconsti(env, "GL-COLOR-ATTACHMENT17", (GLenum) GL_COLOR_ATTACHMENT17, "GL_COLOR_ATTACHMENT17");
#endif
#if defined(GL_COLOR_ATTACHMENT18)
defconsti(env, "GL-COLOR-ATTACHMENT18", (GLenum) GL_COLOR_ATTACHMENT18, "GL_COLOR_ATTACHMENT18");
#endif
#if defined(GL_COLOR_ATTACHMENT19)
defconsti(env, "GL-COLOR-ATTACHMENT19", (GLenum) GL_COLOR_ATTACHMENT19, "GL_COLOR_ATTACHMENT19");
#endif
#if defined(GL_COLOR_ATTACHMENT20)
defconsti(env, "GL-COLOR-ATTACHMENT20", (GLenum) GL_COLOR_ATTACHMENT20, "GL_COLOR_ATTACHMENT20");
#endif
#if defined(GL_COLOR_ATTACHMENT21)
defconsti(env, "GL-COLOR-ATTACHMENT21", (GLenum) GL_COLOR_ATTACHMENT21, "GL_COLOR_ATTACHMENT21");
#endif
#if defined(GL_COLOR_ATTACHMENT22)
defconsti(env, "GL-COLOR-ATTACHMENT22", (GLenum) GL_COLOR_ATTACHMENT22, "GL_COLOR_ATTACHMENT22");
#endif
#if defined(GL_COLOR_ATTACHMENT23)
defconsti(env, "GL-COLOR-ATTACHMENT23", (GLenum) GL_COLOR_ATTACHMENT23, "GL_COLOR_ATTACHMENT23");
#endif
#if defined(GL_COLOR_ATTACHMENT24)
defconsti(env, "GL-COLOR-ATTACHMENT24", (GLenum) GL_COLOR_ATTACHMENT24, "GL_COLOR_ATTACHMENT24");
#endif
#if defined(GL_COLOR_ATTACHMENT25)
defconsti(env, "GL-COLOR-ATTACHMENT25", (GLenum) GL_COLOR_ATTACHMENT25, "GL_COLOR_ATTACHMENT25");
#endif
#if defined(GL_COLOR_ATTACHMENT26)
defconsti(env, "GL-COLOR-ATTACHMENT26", (GLenum) GL_COLOR_ATTACHMENT26, "GL_COLOR_ATTACHMENT26");
#endif
#if defined(GL_COLOR_ATTACHMENT27)
defconsti(env, "GL-COLOR-ATTACHMENT27", (GLenum) GL_COLOR_ATTACHMENT27, "GL_COLOR_ATTACHMENT27");
#endif
#if defined(GL_COLOR_ATTACHMENT28)
defconsti(env, "GL-COLOR-ATTACHMENT28", (GLenum) GL_COLOR_ATTACHMENT28, "GL_COLOR_ATTACHMENT28");
#endif
#if defined(GL_COLOR_ATTACHMENT29)
defconsti(env, "GL-COLOR-ATTACHMENT29", (GLenum) GL_COLOR_ATTACHMENT29, "GL_COLOR_ATTACHMENT29");
#endif
#if defined(GL_COLOR_ATTACHMENT30)
defconsti(env, "GL-COLOR-ATTACHMENT30", (GLenum) GL_COLOR_ATTACHMENT30, "GL_COLOR_ATTACHMENT30");
#endif
#if defined(GL_COLOR_ATTACHMENT31)
defconsti(env, "GL-COLOR-ATTACHMENT31", (GLenum) GL_COLOR_ATTACHMENT31, "GL_COLOR_ATTACHMENT31");
#endif
#if defined(GL_DEPTH_ATTACHMENT)
defconsti(env, "GL-DEPTH-ATTACHMENT", (GLenum) GL_DEPTH_ATTACHMENT, "GL_DEPTH_ATTACHMENT");
#endif
#if defined(GL_DEPTH_STENCIL_ATTACHMENT)
defconsti(env, "GL-DEPTH-STENCIL-ATTACHMENT", (GLenum) GL_DEPTH_STENCIL_ATTACHMENT, "GL_DEPTH_STENCIL_ATTACHMENT");
#endif
#if defined(GL_DEPTH_ATTACHMENT_EXT)
defconsti(env, "GL-DEPTH-ATTACHMENT-EXT", (GLenum) GL_DEPTH_ATTACHMENT_EXT, "GL_DEPTH_ATTACHMENT_EXT");
#endif
#if defined(GL_DEPTH_ATTACHMENT_OES)
defconsti(env, "GL-DEPTH-ATTACHMENT-OES", (GLenum) GL_DEPTH_ATTACHMENT_OES, "GL_DEPTH_ATTACHMENT_OES");
#endif
#if defined(GL_STENCIL)
defconsti(env, "GL-STENCIL", (GLenum) GL_STENCIL, "GL_STENCIL");
#endif
#if defined(GL_STENCIL_ATTACHMENT_EXT)
defconsti(env, "GL-STENCIL-ATTACHMENT-EXT", (GLenum) GL_STENCIL_ATTACHMENT_EXT, "GL_STENCIL_ATTACHMENT_EXT");
#endif
#if defined(GL_STENCIL_ATTACHMENT_OES)
defconsti(env, "GL-STENCIL-ATTACHMENT-OES", (GLenum) GL_STENCIL_ATTACHMENT_OES, "GL_STENCIL_ATTACHMENT_OES");
#endif
#if defined(GL_COLOR)
defconsti(env, "GL-COLOR", (GLenum) GL_COLOR, "GL_COLOR");
#endif
#if defined(GL_DEPTH)
defconsti(env, "GL-DEPTH", (GLenum) GL_DEPTH, "GL_DEPTH");
#endif
#if defined(GL_STENCIL)
defconsti(env, "GL-STENCIL", (GLenum) GL_STENCIL, "GL_STENCIL");
#endif
#if defined(GL_RENDERBUFFER)
defconsti(env, "GL-RENDERBUFFER", (GLenum) GL_RENDERBUFFER, "GL_RENDERBUFFER");
#endif
#if defined(GL_RENDERBUFFER_OES)
defconsti(env, "GL-RENDERBUFFER-OES", (GLenum) GL_RENDERBUFFER_OES, "GL_RENDERBUFFER_OES");
#endif
#if defined(GL_FRAMEBUFFER)
defconsti(env, "GL-FRAMEBUFFER", (GLenum) GL_FRAMEBUFFER, "GL_FRAMEBUFFER");
#endif
#if defined(GL_FRAMEBUFFER_OES)
defconsti(env, "GL-FRAMEBUFFER-OES", (GLenum) GL_FRAMEBUFFER_OES, "GL_FRAMEBUFFER_OES");
#endif
#if defined(GL_DRAW_FRAMEBUFFER)
defconsti(env, "GL-DRAW-FRAMEBUFFER", (GLenum) GL_DRAW_FRAMEBUFFER, "GL_DRAW_FRAMEBUFFER");
#endif
#if defined(GL_READ_FRAMEBUFFER)
defconsti(env, "GL-READ-FRAMEBUFFER", (GLenum) GL_READ_FRAMEBUFFER, "GL_READ_FRAMEBUFFER");
#endif
#if defined(GL_TEXTURE0)
defconsti(env, "GL-TEXTURE0", (GLenum) GL_TEXTURE0, "GL_TEXTURE0");
#endif
#if defined(GL_TEXTURE1)
defconsti(env, "GL-TEXTURE1", (GLenum) GL_TEXTURE1, "GL_TEXTURE1");
#endif
#if defined(GL_TEXTURE2)
defconsti(env, "GL-TEXTURE2", (GLenum) GL_TEXTURE2, "GL_TEXTURE2");
#endif
#if defined(GL_TEXTURE3)
defconsti(env, "GL-TEXTURE3", (GLenum) GL_TEXTURE3, "GL_TEXTURE3");
#endif
#if defined(GL_TEXTURE4)
defconsti(env, "GL-TEXTURE4", (GLenum) GL_TEXTURE4, "GL_TEXTURE4");
#endif
#if defined(GL_TEXTURE5)
defconsti(env, "GL-TEXTURE5", (GLenum) GL_TEXTURE5, "GL_TEXTURE5");
#endif
#if defined(GL_TEXTURE6)
defconsti(env, "GL-TEXTURE6", (GLenum) GL_TEXTURE6, "GL_TEXTURE6");
#endif
#if defined(GL_TEXTURE7)
defconsti(env, "GL-TEXTURE7", (GLenum) GL_TEXTURE7, "GL_TEXTURE7");
#endif
#if defined(GL_TEXTURE8)
defconsti(env, "GL-TEXTURE8", (GLenum) GL_TEXTURE8, "GL_TEXTURE8");
#endif
#if defined(GL_TEXTURE9)
defconsti(env, "GL-TEXTURE9", (GLenum) GL_TEXTURE9, "GL_TEXTURE9");
#endif
#if defined(GL_TEXTURE10)
defconsti(env, "GL-TEXTURE10", (GLenum) GL_TEXTURE10, "GL_TEXTURE10");
#endif
#if defined(GL_TEXTURE11)
defconsti(env, "GL-TEXTURE11", (GLenum) GL_TEXTURE11, "GL_TEXTURE11");
#endif
#if defined(GL_TEXTURE12)
defconsti(env, "GL-TEXTURE12", (GLenum) GL_TEXTURE12, "GL_TEXTURE12");
#endif
#if defined(GL_TEXTURE13)
defconsti(env, "GL-TEXTURE13", (GLenum) GL_TEXTURE13, "GL_TEXTURE13");
#endif
#if defined(GL_TEXTURE14)
defconsti(env, "GL-TEXTURE14", (GLenum) GL_TEXTURE14, "GL_TEXTURE14");
#endif
#if defined(GL_TEXTURE15)
defconsti(env, "GL-TEXTURE15", (GLenum) GL_TEXTURE15, "GL_TEXTURE15");
#endif
#if defined(GL_TEXTURE16)
defconsti(env, "GL-TEXTURE16", (GLenum) GL_TEXTURE16, "GL_TEXTURE16");
#endif
#if defined(GL_TEXTURE17)
defconsti(env, "GL-TEXTURE17", (GLenum) GL_TEXTURE17, "GL_TEXTURE17");
#endif
#if defined(GL_TEXTURE18)
defconsti(env, "GL-TEXTURE18", (GLenum) GL_TEXTURE18, "GL_TEXTURE18");
#endif
#if defined(GL_TEXTURE19)
defconsti(env, "GL-TEXTURE19", (GLenum) GL_TEXTURE19, "GL_TEXTURE19");
#endif
#if defined(GL_TEXTURE20)
defconsti(env, "GL-TEXTURE20", (GLenum) GL_TEXTURE20, "GL_TEXTURE20");
#endif
#if defined(GL_TEXTURE21)
defconsti(env, "GL-TEXTURE21", (GLenum) GL_TEXTURE21, "GL_TEXTURE21");
#endif
#if defined(GL_TEXTURE22)
defconsti(env, "GL-TEXTURE22", (GLenum) GL_TEXTURE22, "GL_TEXTURE22");
#endif
#if defined(GL_TEXTURE23)
defconsti(env, "GL-TEXTURE23", (GLenum) GL_TEXTURE23, "GL_TEXTURE23");
#endif
#if defined(GL_TEXTURE24)
defconsti(env, "GL-TEXTURE24", (GLenum) GL_TEXTURE24, "GL_TEXTURE24");
#endif
#if defined(GL_TEXTURE25)
defconsti(env, "GL-TEXTURE25", (GLenum) GL_TEXTURE25, "GL_TEXTURE25");
#endif
#if defined(GL_TEXTURE26)
defconsti(env, "GL-TEXTURE26", (GLenum) GL_TEXTURE26, "GL_TEXTURE26");
#endif
#if defined(GL_TEXTURE27)
defconsti(env, "GL-TEXTURE27", (GLenum) GL_TEXTURE27, "GL_TEXTURE27");
#endif
#if defined(GL_TEXTURE28)
defconsti(env, "GL-TEXTURE28", (GLenum) GL_TEXTURE28, "GL_TEXTURE28");
#endif
#if defined(GL_TEXTURE29)
defconsti(env, "GL-TEXTURE29", (GLenum) GL_TEXTURE29, "GL_TEXTURE29");
#endif
#if defined(GL_TEXTURE30)
defconsti(env, "GL-TEXTURE30", (GLenum) GL_TEXTURE30, "GL_TEXTURE30");
#endif
#if defined(GL_TEXTURE31)
defconsti(env, "GL-TEXTURE31", (GLenum) GL_TEXTURE31, "GL_TEXTURE31");
#endif
#if defined(GL_QUERY_WAIT)
defconsti(env, "GL-QUERY-WAIT", (GLenum) GL_QUERY_WAIT, "GL_QUERY_WAIT");
#endif
#if defined(GL_QUERY_NO_WAIT)
defconsti(env, "GL-QUERY-NO-WAIT", (GLenum) GL_QUERY_NO_WAIT, "GL_QUERY_NO_WAIT");
#endif
#if defined(GL_QUERY_BY_REGION_WAIT)
defconsti(env, "GL-QUERY-BY-REGION-WAIT", (GLenum) GL_QUERY_BY_REGION_WAIT, "GL_QUERY_BY_REGION_WAIT");
#endif
#if defined(GL_QUERY_BY_REGION_NO_WAIT)
defconsti(env, "GL-QUERY-BY-REGION-NO-WAIT", (GLenum) GL_QUERY_BY_REGION_NO_WAIT, "GL_QUERY_BY_REGION_NO_WAIT");
#endif
#if defined(GL_QUERY_WAIT_INVERTED)
defconsti(env, "GL-QUERY-WAIT-INVERTED", (GLenum) GL_QUERY_WAIT_INVERTED, "GL_QUERY_WAIT_INVERTED");
#endif
#if defined(GL_QUERY_NO_WAIT_INVERTED)
defconsti(env, "GL-QUERY-NO-WAIT-INVERTED", (GLenum) GL_QUERY_NO_WAIT_INVERTED, "GL_QUERY_NO_WAIT_INVERTED");
#endif
#if defined(GL_QUERY_BY_REGION_WAIT_INVERTED)
defconsti(env, "GL-QUERY-BY-REGION-WAIT-INVERTED", (GLenum) GL_QUERY_BY_REGION_WAIT_INVERTED, "GL_QUERY_BY_REGION_WAIT_INVERTED");
#endif
#if defined(GL_QUERY_BY_REGION_NO_WAIT_INVERTED)
defconsti(env, "GL-QUERY-BY-REGION-NO-WAIT-INVERTED", (GLenum) GL_QUERY_BY_REGION_NO_WAIT_INVERTED, "GL_QUERY_BY_REGION_NO_WAIT_INVERTED");
#endif
#if defined(GL_MOV_ATI)
defconsti(env, "GL-MOV-ATI", (GLenum) GL_MOV_ATI, "GL_MOV_ATI");
#endif
#if defined(GL_ADD_ATI)
defconsti(env, "GL-ADD-ATI", (GLenum) GL_ADD_ATI, "GL_ADD_ATI");
#endif
#if defined(GL_MUL_ATI)
defconsti(env, "GL-MUL-ATI", (GLenum) GL_MUL_ATI, "GL_MUL_ATI");
#endif
#if defined(GL_SUB_ATI)
defconsti(env, "GL-SUB-ATI", (GLenum) GL_SUB_ATI, "GL_SUB_ATI");
#endif
#if defined(GL_DOT3_ATI)
defconsti(env, "GL-DOT3-ATI", (GLenum) GL_DOT3_ATI, "GL_DOT3_ATI");
#endif
#if defined(GL_DOT4_ATI)
defconsti(env, "GL-DOT4-ATI", (GLenum) GL_DOT4_ATI, "GL_DOT4_ATI");
#endif
#if defined(GL_MAD_ATI)
defconsti(env, "GL-MAD-ATI", (GLenum) GL_MAD_ATI, "GL_MAD_ATI");
#endif
#if defined(GL_LERP_ATI)
defconsti(env, "GL-LERP-ATI", (GLenum) GL_LERP_ATI, "GL_LERP_ATI");
#endif
#if defined(GL_CND_ATI)
defconsti(env, "GL-CND-ATI", (GLenum) GL_CND_ATI, "GL_CND_ATI");
#endif
#if defined(GL_CND0_ATI)
defconsti(env, "GL-CND0-ATI", (GLenum) GL_CND0_ATI, "GL_CND0_ATI");
#endif
#if defined(GL_DOT2_ADD_ATI)
defconsti(env, "GL-DOT2-ADD-ATI", (GLenum) GL_DOT2_ADD_ATI, "GL_DOT2_ADD_ATI");
#endif
#if defined(GL_FRAMEBUFFER_COMPLETE)
defconsti(env, "GL-FRAMEBUFFER-COMPLETE", (GLenum) GL_FRAMEBUFFER_COMPLETE, "GL_FRAMEBUFFER_COMPLETE");
#endif
#if defined(GL_FRAMEBUFFER_UNDEFINED)
defconsti(env, "GL-FRAMEBUFFER-UNDEFINED", (GLenum) GL_FRAMEBUFFER_UNDEFINED, "GL_FRAMEBUFFER_UNDEFINED");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-ATTACHMENT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT, "GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MISSING-ATTACHMENT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT, "GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-DRAW-BUFFER", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER, "GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-READ-BUFFER", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER, "GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER");
#endif
#if defined(GL_FRAMEBUFFER_UNSUPPORTED)
defconsti(env, "GL-FRAMEBUFFER-UNSUPPORTED", (GLenum) GL_FRAMEBUFFER_UNSUPPORTED, "GL_FRAMEBUFFER_UNSUPPORTED");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MULTISAMPLE", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE, "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MULTISAMPLE", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE, "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-LAYER-TARGETS", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS, "GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS");
#endif
#if defined(GL_NO_ERROR)
defconsti(env, "GL-NO-ERROR", (GLenum) GL_NO_ERROR, "GL_NO_ERROR");
#endif
#if defined(GL_GUILTY_CONTEXT_RESET)
defconsti(env, "GL-GUILTY-CONTEXT-RESET", (GLenum) GL_GUILTY_CONTEXT_RESET, "GL_GUILTY_CONTEXT_RESET");
#endif
#if defined(GL_INNOCENT_CONTEXT_RESET)
defconsti(env, "GL-INNOCENT-CONTEXT-RESET", (GLenum) GL_INNOCENT_CONTEXT_RESET, "GL_INNOCENT_CONTEXT_RESET");
#endif
#if defined(GL_UNKNOWN_CONTEXT_RESET)
defconsti(env, "GL-UNKNOWN-CONTEXT-RESET", (GLenum) GL_UNKNOWN_CONTEXT_RESET, "GL_UNKNOWN_CONTEXT_RESET");
#endif
#if defined(GL_ALREADY_SIGNALED)
defconsti(env, "GL-ALREADY-SIGNALED", (GLenum) GL_ALREADY_SIGNALED, "GL_ALREADY_SIGNALED");
#endif
#if defined(GL_TIMEOUT_EXPIRED)
defconsti(env, "GL-TIMEOUT-EXPIRED", (GLenum) GL_TIMEOUT_EXPIRED, "GL_TIMEOUT_EXPIRED");
#endif
#if defined(GL_CONDITION_SATISFIED)
defconsti(env, "GL-CONDITION-SATISFIED", (GLenum) GL_CONDITION_SATISFIED, "GL_CONDITION_SATISFIED");
#endif
#if defined(GL_WAIT_FAILED)
defconsti(env, "GL-WAIT-FAILED", (GLenum) GL_WAIT_FAILED, "GL_WAIT_FAILED");
#endif
#if defined(GL_SAMPLES_PASSED)
defconsti(env, "GL-SAMPLES-PASSED", (GLenum) GL_SAMPLES_PASSED, "GL_SAMPLES_PASSED");
#endif
#if defined(GL_ANY_SAMPLES_PASSED)
defconsti(env, "GL-ANY-SAMPLES-PASSED", (GLenum) GL_ANY_SAMPLES_PASSED, "GL_ANY_SAMPLES_PASSED");
#endif
#if defined(GL_ANY_SAMPLES_PASSED_CONSERVATIVE)
defconsti(env, "GL-ANY-SAMPLES-PASSED-CONSERVATIVE", (GLenum) GL_ANY_SAMPLES_PASSED_CONSERVATIVE, "GL_ANY_SAMPLES_PASSED_CONSERVATIVE");
#endif
#if defined(GL_PRIMITIVES_GENERATED)
defconsti(env, "GL-PRIMITIVES-GENERATED", (GLenum) GL_PRIMITIVES_GENERATED, "GL_PRIMITIVES_GENERATED");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN)
defconsti(env, "GL-TRANSFORM-FEEDBACK-PRIMITIVES-WRITTEN", (GLenum) GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN, "GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN");
#endif
#if defined(GL_TIME_ELAPSED)
defconsti(env, "GL-TIME-ELAPSED", (GLenum) GL_TIME_ELAPSED, "GL_TIME_ELAPSED");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_OVERFLOW)
defconsti(env, "GL-TRANSFORM-FEEDBACK-OVERFLOW", (GLenum) GL_TRANSFORM_FEEDBACK_OVERFLOW, "GL_TRANSFORM_FEEDBACK_OVERFLOW");
#endif
#if defined(GL_VERTICES_SUBMITTED)
defconsti(env, "GL-VERTICES-SUBMITTED", (GLenum) GL_VERTICES_SUBMITTED, "GL_VERTICES_SUBMITTED");
#endif
#if defined(GL_PRIMITIVES_SUBMITTED)
defconsti(env, "GL-PRIMITIVES-SUBMITTED", (GLenum) GL_PRIMITIVES_SUBMITTED, "GL_PRIMITIVES_SUBMITTED");
#endif
#if defined(GL_VERTEX_SHADER_INVOCATIONS)
defconsti(env, "GL-VERTEX-SHADER-INVOCATIONS", (GLenum) GL_VERTEX_SHADER_INVOCATIONS, "GL_VERTEX_SHADER_INVOCATIONS");
#endif
#if defined(GL_TIMESTAMP)
defconsti(env, "GL-TIMESTAMP", (GLenum) GL_TIMESTAMP, "GL_TIMESTAMP");
#endif
#if defined(GL_CONVOLUTION_1D)
defconsti(env, "GL-CONVOLUTION-1D", (GLenum) GL_CONVOLUTION_1D, "GL_CONVOLUTION_1D");
#endif
#if defined(GL_CONVOLUTION_2D)
defconsti(env, "GL-CONVOLUTION-2D", (GLenum) GL_CONVOLUTION_2D, "GL_CONVOLUTION_2D");
#endif
#if defined(GL_INVERT)
defconsti(env, "GL-INVERT", (GLenum) GL_INVERT, "GL_INVERT");
#endif
#if defined(GL_COUNT_UP_NV)
defconsti(env, "GL-COUNT-UP-NV", (GLenum) GL_COUNT_UP_NV, "GL_COUNT_UP_NV");
#endif
#if defined(GL_COUNT_DOWN_NV)
defconsti(env, "GL-COUNT-DOWN-NV", (GLenum) GL_COUNT_DOWN_NV, "GL_COUNT_DOWN_NV");
#endif
#if defined(GL_PATH_FILL_MODE_NV)
defconsti(env, "GL-PATH-FILL-MODE-NV", (GLenum) GL_PATH_FILL_MODE_NV, "GL_PATH_FILL_MODE_NV");
#endif
#if defined(GL_COLOR_TABLE)
defconsti(env, "GL-COLOR-TABLE", (GLenum) GL_COLOR_TABLE, "GL_COLOR_TABLE");
#endif
#if defined(GL_POST_CONVOLUTION_COLOR_TABLE)
defconsti(env, "GL-POST-CONVOLUTION-COLOR-TABLE", (GLenum) GL_POST_CONVOLUTION_COLOR_TABLE, "GL_POST_CONVOLUTION_COLOR_TABLE");
#endif
#if defined(GL_POST_COLOR_MATRIX_COLOR_TABLE)
defconsti(env, "GL-POST-COLOR-MATRIX-COLOR-TABLE", (GLenum) GL_POST_COLOR_MATRIX_COLOR_TABLE, "GL_POST_COLOR_MATRIX_COLOR_TABLE");
#endif
#if defined(GL_BUFFER_ACCESS)
defconsti(env, "GL-BUFFER-ACCESS", (GLenum) GL_BUFFER_ACCESS, "GL_BUFFER_ACCESS");
#endif
#if defined(GL_BUFFER_ACCESS_FLAGS)
defconsti(env, "GL-BUFFER-ACCESS-FLAGS", (GLenum) GL_BUFFER_ACCESS_FLAGS, "GL_BUFFER_ACCESS_FLAGS");
#endif
#if defined(GL_BUFFER_IMMUTABLE_STORAGE)
defconsti(env, "GL-BUFFER-IMMUTABLE-STORAGE", (GLenum) GL_BUFFER_IMMUTABLE_STORAGE, "GL_BUFFER_IMMUTABLE_STORAGE");
#endif
#if defined(GL_BUFFER_MAPPED)
defconsti(env, "GL-BUFFER-MAPPED", (GLenum) GL_BUFFER_MAPPED, "GL_BUFFER_MAPPED");
#endif
#if defined(GL_BUFFER_MAP_LENGTH)
defconsti(env, "GL-BUFFER-MAP-LENGTH", (GLenum) GL_BUFFER_MAP_LENGTH, "GL_BUFFER_MAP_LENGTH");
#endif
#if defined(GL_BUFFER_MAP_OFFSET)
defconsti(env, "GL-BUFFER-MAP-OFFSET", (GLenum) GL_BUFFER_MAP_OFFSET, "GL_BUFFER_MAP_OFFSET");
#endif
#if defined(GL_BUFFER_SIZE)
defconsti(env, "GL-BUFFER-SIZE", (GLenum) GL_BUFFER_SIZE, "GL_BUFFER_SIZE");
#endif
#if defined(GL_BUFFER_STORAGE_FLAGS)
defconsti(env, "GL-BUFFER-STORAGE-FLAGS", (GLenum) GL_BUFFER_STORAGE_FLAGS, "GL_BUFFER_STORAGE_FLAGS");
#endif
#if defined(GL_BUFFER_USAGE)
defconsti(env, "GL-BUFFER-USAGE", (GLenum) GL_BUFFER_USAGE, "GL_BUFFER_USAGE");
#endif
#if defined(GL_RENDERBUFFER_WIDTH)
defconsti(env, "GL-RENDERBUFFER-WIDTH", (GLenum) GL_RENDERBUFFER_WIDTH, "GL_RENDERBUFFER_WIDTH");
#endif
#if defined(GL_RENDERBUFFER_WIDTH_EXT)
defconsti(env, "GL-RENDERBUFFER-WIDTH-EXT", (GLenum) GL_RENDERBUFFER_WIDTH_EXT, "GL_RENDERBUFFER_WIDTH_EXT");
#endif
#if defined(GL_RENDERBUFFER_WIDTH_OES)
defconsti(env, "GL-RENDERBUFFER-WIDTH-OES", (GLenum) GL_RENDERBUFFER_WIDTH_OES, "GL_RENDERBUFFER_WIDTH_OES");
#endif
#if defined(GL_RENDERBUFFER_HEIGHT)
defconsti(env, "GL-RENDERBUFFER-HEIGHT", (GLenum) GL_RENDERBUFFER_HEIGHT, "GL_RENDERBUFFER_HEIGHT");
#endif
#if defined(GL_RENDERBUFFER_HEIGHT_EXT)
defconsti(env, "GL-RENDERBUFFER-HEIGHT-EXT", (GLenum) GL_RENDERBUFFER_HEIGHT_EXT, "GL_RENDERBUFFER_HEIGHT_EXT");
#endif
#if defined(GL_RENDERBUFFER_HEIGHT_OES)
defconsti(env, "GL-RENDERBUFFER-HEIGHT-OES", (GLenum) GL_RENDERBUFFER_HEIGHT_OES, "GL_RENDERBUFFER_HEIGHT_OES");
#endif
#if defined(GL_RENDERBUFFER_INTERNAL_FORMAT)
defconsti(env, "GL-RENDERBUFFER-INTERNAL-FORMAT", (GLenum) GL_RENDERBUFFER_INTERNAL_FORMAT, "GL_RENDERBUFFER_INTERNAL_FORMAT");
#endif
#if defined(GL_RENDERBUFFER_INTERNAL_FORMAT_EXT)
defconsti(env, "GL-RENDERBUFFER-INTERNAL-FORMAT-EXT", (GLenum) GL_RENDERBUFFER_INTERNAL_FORMAT_EXT, "GL_RENDERBUFFER_INTERNAL_FORMAT_EXT");
#endif
#if defined(GL_RENDERBUFFER_INTERNAL_FORMAT_OES)
defconsti(env, "GL-RENDERBUFFER-INTERNAL-FORMAT-OES", (GLenum) GL_RENDERBUFFER_INTERNAL_FORMAT_OES, "GL_RENDERBUFFER_INTERNAL_FORMAT_OES");
#endif
#if defined(GL_RENDERBUFFER_SAMPLES)
defconsti(env, "GL-RENDERBUFFER-SAMPLES", (GLenum) GL_RENDERBUFFER_SAMPLES, "GL_RENDERBUFFER_SAMPLES");
#endif
#if defined(GL_RENDERBUFFER_SAMPLES_ANGLE)
defconsti(env, "GL-RENDERBUFFER-SAMPLES-ANGLE", (GLenum) GL_RENDERBUFFER_SAMPLES_ANGLE, "GL_RENDERBUFFER_SAMPLES_ANGLE");
#endif
#if defined(GL_RENDERBUFFER_SAMPLES_APPLE)
defconsti(env, "GL-RENDERBUFFER-SAMPLES-APPLE", (GLenum) GL_RENDERBUFFER_SAMPLES_APPLE, "GL_RENDERBUFFER_SAMPLES_APPLE");
#endif
#if defined(GL_RENDERBUFFER_SAMPLES_EXT)
defconsti(env, "GL-RENDERBUFFER-SAMPLES-EXT", (GLenum) GL_RENDERBUFFER_SAMPLES_EXT, "GL_RENDERBUFFER_SAMPLES_EXT");
#endif
#if defined(GL_RENDERBUFFER_SAMPLES_IMG)
defconsti(env, "GL-RENDERBUFFER-SAMPLES-IMG", (GLenum) GL_RENDERBUFFER_SAMPLES_IMG, "GL_RENDERBUFFER_SAMPLES_IMG");
#endif
#if defined(GL_RENDERBUFFER_SAMPLES_NV)
defconsti(env, "GL-RENDERBUFFER-SAMPLES-NV", (GLenum) GL_RENDERBUFFER_SAMPLES_NV, "GL_RENDERBUFFER_SAMPLES_NV");
#endif
#if defined(GL_RENDERBUFFER_RED_SIZE)
defconsti(env, "GL-RENDERBUFFER-RED-SIZE", (GLenum) GL_RENDERBUFFER_RED_SIZE, "GL_RENDERBUFFER_RED_SIZE");
#endif
#if defined(GL_RENDERBUFFER_RED_SIZE_EXT)
defconsti(env, "GL-RENDERBUFFER-RED-SIZE-EXT", (GLenum) GL_RENDERBUFFER_RED_SIZE_EXT, "GL_RENDERBUFFER_RED_SIZE_EXT");
#endif
#if defined(GL_RENDERBUFFER_RED_SIZE_OES)
defconsti(env, "GL-RENDERBUFFER-RED-SIZE-OES", (GLenum) GL_RENDERBUFFER_RED_SIZE_OES, "GL_RENDERBUFFER_RED_SIZE_OES");
#endif
#if defined(GL_RENDERBUFFER_GREEN_SIZE)
defconsti(env, "GL-RENDERBUFFER-GREEN-SIZE", (GLenum) GL_RENDERBUFFER_GREEN_SIZE, "GL_RENDERBUFFER_GREEN_SIZE");
#endif
#if defined(GL_RENDERBUFFER_GREEN_SIZE_EXT)
defconsti(env, "GL-RENDERBUFFER-GREEN-SIZE-EXT", (GLenum) GL_RENDERBUFFER_GREEN_SIZE_EXT, "GL_RENDERBUFFER_GREEN_SIZE_EXT");
#endif
#if defined(GL_RENDERBUFFER_GREEN_SIZE_OES)
defconsti(env, "GL-RENDERBUFFER-GREEN-SIZE-OES", (GLenum) GL_RENDERBUFFER_GREEN_SIZE_OES, "GL_RENDERBUFFER_GREEN_SIZE_OES");
#endif
#if defined(GL_RENDERBUFFER_BLUE_SIZE)
defconsti(env, "GL-RENDERBUFFER-BLUE-SIZE", (GLenum) GL_RENDERBUFFER_BLUE_SIZE, "GL_RENDERBUFFER_BLUE_SIZE");
#endif
#if defined(GL_RENDERBUFFER_BLUE_SIZE_EXT)
defconsti(env, "GL-RENDERBUFFER-BLUE-SIZE-EXT", (GLenum) GL_RENDERBUFFER_BLUE_SIZE_EXT, "GL_RENDERBUFFER_BLUE_SIZE_EXT");
#endif
#if defined(GL_RENDERBUFFER_BLUE_SIZE_OES)
defconsti(env, "GL-RENDERBUFFER-BLUE-SIZE-OES", (GLenum) GL_RENDERBUFFER_BLUE_SIZE_OES, "GL_RENDERBUFFER_BLUE_SIZE_OES");
#endif
#if defined(GL_RENDERBUFFER_ALPHA_SIZE)
defconsti(env, "GL-RENDERBUFFER-ALPHA-SIZE", (GLenum) GL_RENDERBUFFER_ALPHA_SIZE, "GL_RENDERBUFFER_ALPHA_SIZE");
#endif
#if defined(GL_RENDERBUFFER_ALPHA_SIZE_EXT)
defconsti(env, "GL-RENDERBUFFER-ALPHA-SIZE-EXT", (GLenum) GL_RENDERBUFFER_ALPHA_SIZE_EXT, "GL_RENDERBUFFER_ALPHA_SIZE_EXT");
#endif
#if defined(GL_RENDERBUFFER_ALPHA_SIZE_OES)
defconsti(env, "GL-RENDERBUFFER-ALPHA-SIZE-OES", (GLenum) GL_RENDERBUFFER_ALPHA_SIZE_OES, "GL_RENDERBUFFER_ALPHA_SIZE_OES");
#endif
#if defined(GL_RENDERBUFFER_DEPTH_SIZE)
defconsti(env, "GL-RENDERBUFFER-DEPTH-SIZE", (GLenum) GL_RENDERBUFFER_DEPTH_SIZE, "GL_RENDERBUFFER_DEPTH_SIZE");
#endif
#if defined(GL_RENDERBUFFER_DEPTH_SIZE_EXT)
defconsti(env, "GL-RENDERBUFFER-DEPTH-SIZE-EXT", (GLenum) GL_RENDERBUFFER_DEPTH_SIZE_EXT, "GL_RENDERBUFFER_DEPTH_SIZE_EXT");
#endif
#if defined(GL_RENDERBUFFER_DEPTH_SIZE_OES)
defconsti(env, "GL-RENDERBUFFER-DEPTH-SIZE-OES", (GLenum) GL_RENDERBUFFER_DEPTH_SIZE_OES, "GL_RENDERBUFFER_DEPTH_SIZE_OES");
#endif
#if defined(GL_RENDERBUFFER_STENCIL_SIZE)
defconsti(env, "GL-RENDERBUFFER-STENCIL-SIZE", (GLenum) GL_RENDERBUFFER_STENCIL_SIZE, "GL_RENDERBUFFER_STENCIL_SIZE");
#endif
#if defined(GL_RENDERBUFFER_STENCIL_SIZE_EXT)
defconsti(env, "GL-RENDERBUFFER-STENCIL-SIZE-EXT", (GLenum) GL_RENDERBUFFER_STENCIL_SIZE_EXT, "GL_RENDERBUFFER_STENCIL_SIZE_EXT");
#endif
#if defined(GL_RENDERBUFFER_STENCIL_SIZE_OES)
defconsti(env, "GL-RENDERBUFFER-STENCIL-SIZE-OES", (GLenum) GL_RENDERBUFFER_STENCIL_SIZE_OES, "GL_RENDERBUFFER_STENCIL_SIZE_OES");
#endif
#if defined(GL_RENDERBUFFER_STORAGE_SAMPLES_AMD)
defconsti(env, "GL-RENDERBUFFER-STORAGE-SAMPLES-AMD", (GLenum) GL_RENDERBUFFER_STORAGE_SAMPLES_AMD, "GL_RENDERBUFFER_STORAGE_SAMPLES_AMD");
#endif
#if defined(GL_RENDERBUFFER_COVERAGE_SAMPLES_NV)
defconsti(env, "GL-RENDERBUFFER-COVERAGE-SAMPLES-NV", (GLenum) GL_RENDERBUFFER_COVERAGE_SAMPLES_NV, "GL_RENDERBUFFER_COVERAGE_SAMPLES_NV");
#endif
#if defined(GL_RENDERBUFFER_COLOR_SAMPLES_NV)
defconsti(env, "GL-RENDERBUFFER-COLOR-SAMPLES-NV", (GLenum) GL_RENDERBUFFER_COLOR_SAMPLES_NV, "GL_RENDERBUFFER_COLOR_SAMPLES_NV");
#endif
#if defined(GL_STREAM_DRAW)
defconsti(env, "GL-STREAM-DRAW", (GLenum) GL_STREAM_DRAW, "GL_STREAM_DRAW");
#endif
#if defined(GL_STREAM_READ)
defconsti(env, "GL-STREAM-READ", (GLenum) GL_STREAM_READ, "GL_STREAM_READ");
#endif
#if defined(GL_STREAM_COPY)
defconsti(env, "GL-STREAM-COPY", (GLenum) GL_STREAM_COPY, "GL_STREAM_COPY");
#endif
#if defined(GL_STATIC_DRAW)
defconsti(env, "GL-STATIC-DRAW", (GLenum) GL_STATIC_DRAW, "GL_STATIC_DRAW");
#endif
#if defined(GL_STATIC_READ)
defconsti(env, "GL-STATIC-READ", (GLenum) GL_STATIC_READ, "GL_STATIC_READ");
#endif
#if defined(GL_STATIC_COPY)
defconsti(env, "GL-STATIC-COPY", (GLenum) GL_STATIC_COPY, "GL_STATIC_COPY");
#endif
#if defined(GL_DYNAMIC_DRAW)
defconsti(env, "GL-DYNAMIC-DRAW", (GLenum) GL_DYNAMIC_DRAW, "GL_DYNAMIC_DRAW");
#endif
#if defined(GL_DYNAMIC_READ)
defconsti(env, "GL-DYNAMIC-READ", (GLenum) GL_DYNAMIC_READ, "GL_DYNAMIC_READ");
#endif
#if defined(GL_DYNAMIC_COPY)
defconsti(env, "GL-DYNAMIC-COPY", (GLenum) GL_DYNAMIC_COPY, "GL_DYNAMIC_COPY");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_WIDTH)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-WIDTH", (GLenum) GL_FRAMEBUFFER_DEFAULT_WIDTH, "GL_FRAMEBUFFER_DEFAULT_WIDTH");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_HEIGHT)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-HEIGHT", (GLenum) GL_FRAMEBUFFER_DEFAULT_HEIGHT, "GL_FRAMEBUFFER_DEFAULT_HEIGHT");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_LAYERS)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-LAYERS", (GLenum) GL_FRAMEBUFFER_DEFAULT_LAYERS, "GL_FRAMEBUFFER_DEFAULT_LAYERS");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_SAMPLES)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-SAMPLES", (GLenum) GL_FRAMEBUFFER_DEFAULT_SAMPLES, "GL_FRAMEBUFFER_DEFAULT_SAMPLES");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-FIXED-SAMPLE-LOCATIONS", (GLenum) GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS, "GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS");
#endif
#if defined(GL_PROGRAM_BINARY_RETRIEVABLE_HINT)
defconsti(env, "GL-PROGRAM-BINARY-RETRIEVABLE-HINT", (GLenum) GL_PROGRAM_BINARY_RETRIEVABLE_HINT, "GL_PROGRAM_BINARY_RETRIEVABLE_HINT");
#endif
#if defined(GL_PROGRAM_SEPARABLE)
defconsti(env, "GL-PROGRAM-SEPARABLE", (GLenum) GL_PROGRAM_SEPARABLE, "GL_PROGRAM_SEPARABLE");
#endif
#if defined(GL_ZERO)
defconsti(env, "GL-ZERO", (GLenum) GL_ZERO, "GL_ZERO");
#endif
#if defined(GL_ONE)
defconsti(env, "GL-ONE", (GLenum) GL_ONE, "GL_ONE");
#endif
#if defined(GL_SRC_COLOR)
defconsti(env, "GL-SRC-COLOR", (GLenum) GL_SRC_COLOR, "GL_SRC_COLOR");
#endif
#if defined(GL_ONE_MINUS_SRC_COLOR)
defconsti(env, "GL-ONE-MINUS-SRC-COLOR", (GLenum) GL_ONE_MINUS_SRC_COLOR, "GL_ONE_MINUS_SRC_COLOR");
#endif
#if defined(GL_DST_COLOR)
defconsti(env, "GL-DST-COLOR", (GLenum) GL_DST_COLOR, "GL_DST_COLOR");
#endif
#if defined(GL_ONE_MINUS_DST_COLOR)
defconsti(env, "GL-ONE-MINUS-DST-COLOR", (GLenum) GL_ONE_MINUS_DST_COLOR, "GL_ONE_MINUS_DST_COLOR");
#endif
#if defined(GL_SRC_ALPHA)
defconsti(env, "GL-SRC-ALPHA", (GLenum) GL_SRC_ALPHA, "GL_SRC_ALPHA");
#endif
#if defined(GL_ONE_MINUS_SRC_ALPHA)
defconsti(env, "GL-ONE-MINUS-SRC-ALPHA", (GLenum) GL_ONE_MINUS_SRC_ALPHA, "GL_ONE_MINUS_SRC_ALPHA");
#endif
#if defined(GL_DST_ALPHA)
defconsti(env, "GL-DST-ALPHA", (GLenum) GL_DST_ALPHA, "GL_DST_ALPHA");
#endif
#if defined(GL_ONE_MINUS_DST_ALPHA)
defconsti(env, "GL-ONE-MINUS-DST-ALPHA", (GLenum) GL_ONE_MINUS_DST_ALPHA, "GL_ONE_MINUS_DST_ALPHA");
#endif
#if defined(GL_CONSTANT_COLOR)
defconsti(env, "GL-CONSTANT-COLOR", (GLenum) GL_CONSTANT_COLOR, "GL_CONSTANT_COLOR");
#endif
#if defined(GL_ONE_MINUS_CONSTANT_COLOR)
defconsti(env, "GL-ONE-MINUS-CONSTANT-COLOR", (GLenum) GL_ONE_MINUS_CONSTANT_COLOR, "GL_ONE_MINUS_CONSTANT_COLOR");
#endif
#if defined(GL_CONSTANT_ALPHA)
defconsti(env, "GL-CONSTANT-ALPHA", (GLenum) GL_CONSTANT_ALPHA, "GL_CONSTANT_ALPHA");
#endif
#if defined(GL_ONE_MINUS_CONSTANT_ALPHA)
defconsti(env, "GL-ONE-MINUS-CONSTANT-ALPHA", (GLenum) GL_ONE_MINUS_CONSTANT_ALPHA, "GL_ONE_MINUS_CONSTANT_ALPHA");
#endif
#if defined(GL_SRC_ALPHA_SATURATE)
defconsti(env, "GL-SRC-ALPHA-SATURATE", (GLenum) GL_SRC_ALPHA_SATURATE, "GL_SRC_ALPHA_SATURATE");
#endif
#if defined(GL_SRC1_COLOR)
defconsti(env, "GL-SRC1-COLOR", (GLenum) GL_SRC1_COLOR, "GL_SRC1_COLOR");
#endif
#if defined(GL_ONE_MINUS_SRC1_COLOR)
defconsti(env, "GL-ONE-MINUS-SRC1-COLOR", (GLenum) GL_ONE_MINUS_SRC1_COLOR, "GL_ONE_MINUS_SRC1_COLOR");
#endif
#if defined(GL_SRC1_ALPHA)
defconsti(env, "GL-SRC1-ALPHA", (GLenum) GL_SRC1_ALPHA, "GL_SRC1_ALPHA");
#endif
#if defined(GL_ONE_MINUS_SRC1_ALPHA)
defconsti(env, "GL-ONE-MINUS-SRC1-ALPHA", (GLenum) GL_ONE_MINUS_SRC1_ALPHA, "GL_ONE_MINUS_SRC1_ALPHA");
#endif
#if defined(GL_TRANSFORM_FEEDBACK)
defconsti(env, "GL-TRANSFORM-FEEDBACK", (GLenum) GL_TRANSFORM_FEEDBACK, "GL_TRANSFORM_FEEDBACK");
#endif
#if defined(GL_NEAREST)
defconsti(env, "GL-NEAREST", (GLenum) GL_NEAREST, "GL_NEAREST");
#endif
#if defined(GL_LINEAR)
defconsti(env, "GL-LINEAR", (GLenum) GL_LINEAR, "GL_LINEAR");
#endif
#if defined(GL_ARRAY_BUFFER)
defconsti(env, "GL-ARRAY-BUFFER", (GLenum) GL_ARRAY_BUFFER, "GL_ARRAY_BUFFER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER", (GLenum) GL_ATOMIC_COUNTER_BUFFER, "GL_ATOMIC_COUNTER_BUFFER");
#endif
#if defined(GL_COPY_READ_BUFFER)
defconsti(env, "GL-COPY-READ-BUFFER", (GLenum) GL_COPY_READ_BUFFER, "GL_COPY_READ_BUFFER");
#endif
#if defined(GL_COPY_WRITE_BUFFER)
defconsti(env, "GL-COPY-WRITE-BUFFER", (GLenum) GL_COPY_WRITE_BUFFER, "GL_COPY_WRITE_BUFFER");
#endif
#if defined(GL_DISPATCH_INDIRECT_BUFFER)
defconsti(env, "GL-DISPATCH-INDIRECT-BUFFER", (GLenum) GL_DISPATCH_INDIRECT_BUFFER, "GL_DISPATCH_INDIRECT_BUFFER");
#endif
#if defined(GL_DRAW_INDIRECT_BUFFER)
defconsti(env, "GL-DRAW-INDIRECT-BUFFER", (GLenum) GL_DRAW_INDIRECT_BUFFER, "GL_DRAW_INDIRECT_BUFFER");
#endif
#if defined(GL_ELEMENT_ARRAY_BUFFER)
defconsti(env, "GL-ELEMENT-ARRAY-BUFFER", (GLenum) GL_ELEMENT_ARRAY_BUFFER, "GL_ELEMENT_ARRAY_BUFFER");
#endif
#if defined(GL_PIXEL_PACK_BUFFER)
defconsti(env, "GL-PIXEL-PACK-BUFFER", (GLenum) GL_PIXEL_PACK_BUFFER, "GL_PIXEL_PACK_BUFFER");
#endif
#if defined(GL_PIXEL_UNPACK_BUFFER)
defconsti(env, "GL-PIXEL-UNPACK-BUFFER", (GLenum) GL_PIXEL_UNPACK_BUFFER, "GL_PIXEL_UNPACK_BUFFER");
#endif
#if defined(GL_QUERY_BUFFER)
defconsti(env, "GL-QUERY-BUFFER", (GLenum) GL_QUERY_BUFFER, "GL_QUERY_BUFFER");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER)
defconsti(env, "GL-SHADER-STORAGE-BUFFER", (GLenum) GL_SHADER_STORAGE_BUFFER, "GL_SHADER_STORAGE_BUFFER");
#endif
#if defined(GL_TEXTURE_BUFFER)
defconsti(env, "GL-TEXTURE-BUFFER", (GLenum) GL_TEXTURE_BUFFER, "GL_TEXTURE_BUFFER");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER, "GL_TRANSFORM_FEEDBACK_BUFFER");
#endif
#if defined(GL_UNIFORM_BUFFER)
defconsti(env, "GL-UNIFORM-BUFFER", (GLenum) GL_UNIFORM_BUFFER, "GL_UNIFORM_BUFFER");
#endif
#if defined(GL_DRAW_FRAMEBUFFER)
defconsti(env, "GL-DRAW-FRAMEBUFFER", (GLenum) GL_DRAW_FRAMEBUFFER, "GL_DRAW_FRAMEBUFFER");
#endif
#if defined(GL_READ_FRAMEBUFFER)
defconsti(env, "GL-READ-FRAMEBUFFER", (GLenum) GL_READ_FRAMEBUFFER, "GL_READ_FRAMEBUFFER");
#endif
#if defined(GL_FRAMEBUFFER)
defconsti(env, "GL-FRAMEBUFFER", (GLenum) GL_FRAMEBUFFER, "GL_FRAMEBUFFER");
#endif
#if defined(GL_COLOR)
defconsti(env, "GL-COLOR", (GLenum) GL_COLOR, "GL_COLOR");
#endif
#if defined(GL_DEPTH)
defconsti(env, "GL-DEPTH", (GLenum) GL_DEPTH, "GL_DEPTH");
#endif
#if defined(GL_STENCIL)
defconsti(env, "GL-STENCIL", (GLenum) GL_STENCIL, "GL_STENCIL");
#endif
#if defined(GL_LOWER_LEFT)
defconsti(env, "GL-LOWER-LEFT", (GLenum) GL_LOWER_LEFT, "GL_LOWER_LEFT");
#endif
#if defined(GL_UPPER_LEFT)
defconsti(env, "GL-UPPER-LEFT", (GLenum) GL_UPPER_LEFT, "GL_UPPER_LEFT");
#endif
#if defined(GL_NEGATIVE_ONE_TO_ONE)
defconsti(env, "GL-NEGATIVE-ONE-TO-ONE", (GLenum) GL_NEGATIVE_ONE_TO_ONE, "GL_NEGATIVE_ONE_TO_ONE");
#endif
#if defined(GL_ZERO_TO_ONE)
defconsti(env, "GL-ZERO-TO-ONE", (GLenum) GL_ZERO_TO_ONE, "GL_ZERO_TO_ONE");
#endif
#if defined(GL_ARRAY_BUFFER)
defconsti(env, "GL-ARRAY-BUFFER", (GLenum) GL_ARRAY_BUFFER, "GL_ARRAY_BUFFER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER", (GLenum) GL_ATOMIC_COUNTER_BUFFER, "GL_ATOMIC_COUNTER_BUFFER");
#endif
#if defined(GL_COPY_READ_BUFFER)
defconsti(env, "GL-COPY-READ-BUFFER", (GLenum) GL_COPY_READ_BUFFER, "GL_COPY_READ_BUFFER");
#endif
#if defined(GL_COPY_WRITE_BUFFER)
defconsti(env, "GL-COPY-WRITE-BUFFER", (GLenum) GL_COPY_WRITE_BUFFER, "GL_COPY_WRITE_BUFFER");
#endif
#if defined(GL_DISPATCH_INDIRECT_BUFFER)
defconsti(env, "GL-DISPATCH-INDIRECT-BUFFER", (GLenum) GL_DISPATCH_INDIRECT_BUFFER, "GL_DISPATCH_INDIRECT_BUFFER");
#endif
#if defined(GL_DRAW_INDIRECT_BUFFER)
defconsti(env, "GL-DRAW-INDIRECT-BUFFER", (GLenum) GL_DRAW_INDIRECT_BUFFER, "GL_DRAW_INDIRECT_BUFFER");
#endif
#if defined(GL_ELEMENT_ARRAY_BUFFER)
defconsti(env, "GL-ELEMENT-ARRAY-BUFFER", (GLenum) GL_ELEMENT_ARRAY_BUFFER, "GL_ELEMENT_ARRAY_BUFFER");
#endif
#if defined(GL_PIXEL_PACK_BUFFER)
defconsti(env, "GL-PIXEL-PACK-BUFFER", (GLenum) GL_PIXEL_PACK_BUFFER, "GL_PIXEL_PACK_BUFFER");
#endif
#if defined(GL_PIXEL_UNPACK_BUFFER)
defconsti(env, "GL-PIXEL-UNPACK-BUFFER", (GLenum) GL_PIXEL_UNPACK_BUFFER, "GL_PIXEL_UNPACK_BUFFER");
#endif
#if defined(GL_QUERY_BUFFER)
defconsti(env, "GL-QUERY-BUFFER", (GLenum) GL_QUERY_BUFFER, "GL_QUERY_BUFFER");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER)
defconsti(env, "GL-SHADER-STORAGE-BUFFER", (GLenum) GL_SHADER_STORAGE_BUFFER, "GL_SHADER_STORAGE_BUFFER");
#endif
#if defined(GL_TEXTURE_BUFFER)
defconsti(env, "GL-TEXTURE-BUFFER", (GLenum) GL_TEXTURE_BUFFER, "GL_TEXTURE_BUFFER");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER, "GL_TRANSFORM_FEEDBACK_BUFFER");
#endif
#if defined(GL_UNIFORM_BUFFER)
defconsti(env, "GL-UNIFORM-BUFFER", (GLenum) GL_UNIFORM_BUFFER, "GL_UNIFORM_BUFFER");
#endif
#if defined(GL_RENDERBUFFER)
defconsti(env, "GL-RENDERBUFFER", (GLenum) GL_RENDERBUFFER, "GL_RENDERBUFFER");
#endif
#if defined(GL_TEXTURE_1D)
defconsti(env, "GL-TEXTURE-1D", (GLenum) GL_TEXTURE_1D, "GL_TEXTURE_1D");
#endif
#if defined(GL_TEXTURE_2D)
defconsti(env, "GL-TEXTURE-2D", (GLenum) GL_TEXTURE_2D, "GL_TEXTURE_2D");
#endif
#if defined(GL_TEXTURE_3D)
defconsti(env, "GL-TEXTURE-3D", (GLenum) GL_TEXTURE_3D, "GL_TEXTURE_3D");
#endif
#if defined(GL_TEXTURE_RECTANGLE)
defconsti(env, "GL-TEXTURE-RECTANGLE", (GLenum) GL_TEXTURE_RECTANGLE, "GL_TEXTURE_RECTANGLE");
#endif
#if defined(GL_TEXTURE_CUBE_MAP)
defconsti(env, "GL-TEXTURE-CUBE-MAP", (GLenum) GL_TEXTURE_CUBE_MAP, "GL_TEXTURE_CUBE_MAP");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_ARRAY)
defconsti(env, "GL-TEXTURE-CUBE-MAP-ARRAY", (GLenum) GL_TEXTURE_CUBE_MAP_ARRAY, "GL_TEXTURE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_TEXTURE_1D_ARRAY)
defconsti(env, "GL-TEXTURE-1D-ARRAY", (GLenum) GL_TEXTURE_1D_ARRAY, "GL_TEXTURE_1D_ARRAY");
#endif
#if defined(GL_TEXTURE_2D_ARRAY)
defconsti(env, "GL-TEXTURE-2D-ARRAY", (GLenum) GL_TEXTURE_2D_ARRAY, "GL_TEXTURE_2D_ARRAY");
#endif
#if defined(GL_TEXTURE_2D_MULTISAMPLE)
defconsti(env, "GL-TEXTURE-2D-MULTISAMPLE", (GLenum) GL_TEXTURE_2D_MULTISAMPLE, "GL_TEXTURE_2D_MULTISAMPLE");
#endif
#if defined(GL_TEXTURE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-TEXTURE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_TEXTURE_2D_MULTISAMPLE_ARRAY, "GL_TEXTURE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_COMPUTE_SHADER)
defconsti(env, "GL-COMPUTE-SHADER", (GLenum) GL_COMPUTE_SHADER, "GL_COMPUTE_SHADER");
#endif
#if defined(GL_VERTEX_SHADER)
defconsti(env, "GL-VERTEX-SHADER", (GLenum) GL_VERTEX_SHADER, "GL_VERTEX_SHADER");
#endif
#if defined(GL_TESS_CONTROL_SHADER)
defconsti(env, "GL-TESS-CONTROL-SHADER", (GLenum) GL_TESS_CONTROL_SHADER, "GL_TESS_CONTROL_SHADER");
#endif
#if defined(GL_TESS_EVALUATION_SHADER)
defconsti(env, "GL-TESS-EVALUATION-SHADER", (GLenum) GL_TESS_EVALUATION_SHADER, "GL_TESS_EVALUATION_SHADER");
#endif
#if defined(GL_GEOMETRY_SHADER)
defconsti(env, "GL-GEOMETRY-SHADER", (GLenum) GL_GEOMETRY_SHADER, "GL_GEOMETRY_SHADER");
#endif
#if defined(GL_FRAGMENT_SHADER)
defconsti(env, "GL-FRAGMENT-SHADER", (GLenum) GL_FRAGMENT_SHADER, "GL_FRAGMENT_SHADER");
#endif
#if defined(GL_FRAGMENT_SHADER_ARB)
defconsti(env, "GL-FRAGMENT-SHADER-ARB", (GLenum) GL_FRAGMENT_SHADER_ARB, "GL_FRAGMENT_SHADER_ARB");
#endif
#if defined(GL_VERTEX_SHADER_ARB)
defconsti(env, "GL-VERTEX-SHADER-ARB", (GLenum) GL_VERTEX_SHADER_ARB, "GL_VERTEX_SHADER_ARB");
#endif
#if defined(GL_DEBUG_SOURCE_API)
defconsti(env, "GL-DEBUG-SOURCE-API", (GLenum) GL_DEBUG_SOURCE_API, "GL_DEBUG_SOURCE_API");
#endif
#if defined(GL_DEBUG_SOURCE_WINDOW_SYSTEM)
defconsti(env, "GL-DEBUG-SOURCE-WINDOW-SYSTEM", (GLenum) GL_DEBUG_SOURCE_WINDOW_SYSTEM, "GL_DEBUG_SOURCE_WINDOW_SYSTEM");
#endif
#if defined(GL_DEBUG_SOURCE_SHADER_COMPILER)
defconsti(env, "GL-DEBUG-SOURCE-SHADER-COMPILER", (GLenum) GL_DEBUG_SOURCE_SHADER_COMPILER, "GL_DEBUG_SOURCE_SHADER_COMPILER");
#endif
#if defined(GL_DEBUG_SOURCE_THIRD_PARTY)
defconsti(env, "GL-DEBUG-SOURCE-THIRD-PARTY", (GLenum) GL_DEBUG_SOURCE_THIRD_PARTY, "GL_DEBUG_SOURCE_THIRD_PARTY");
#endif
#if defined(GL_DEBUG_SOURCE_APPLICATION)
defconsti(env, "GL-DEBUG-SOURCE-APPLICATION", (GLenum) GL_DEBUG_SOURCE_APPLICATION, "GL_DEBUG_SOURCE_APPLICATION");
#endif
#if defined(GL_DEBUG_SOURCE_OTHER)
defconsti(env, "GL-DEBUG-SOURCE-OTHER", (GLenum) GL_DEBUG_SOURCE_OTHER, "GL_DEBUG_SOURCE_OTHER");
#endif
#if defined(GL_DONT_CARE)
defconsti(env, "GL-DONT-CARE", (GLenum) GL_DONT_CARE, "GL_DONT_CARE");
#endif
#if defined(GL_DEBUG_TYPE_ERROR)
defconsti(env, "GL-DEBUG-TYPE-ERROR", (GLenum) GL_DEBUG_TYPE_ERROR, "GL_DEBUG_TYPE_ERROR");
#endif
#if defined(GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR)
defconsti(env, "GL-DEBUG-TYPE-DEPRECATED-BEHAVIOR", (GLenum) GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR, "GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR");
#endif
#if defined(GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR)
defconsti(env, "GL-DEBUG-TYPE-UNDEFINED-BEHAVIOR", (GLenum) GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR, "GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR");
#endif
#if defined(GL_DEBUG_TYPE_PORTABILITY)
defconsti(env, "GL-DEBUG-TYPE-PORTABILITY", (GLenum) GL_DEBUG_TYPE_PORTABILITY, "GL_DEBUG_TYPE_PORTABILITY");
#endif
#if defined(GL_DEBUG_TYPE_PERFORMANCE)
defconsti(env, "GL-DEBUG-TYPE-PERFORMANCE", (GLenum) GL_DEBUG_TYPE_PERFORMANCE, "GL_DEBUG_TYPE_PERFORMANCE");
#endif
#if defined(GL_DEBUG_TYPE_MARKER)
defconsti(env, "GL-DEBUG-TYPE-MARKER", (GLenum) GL_DEBUG_TYPE_MARKER, "GL_DEBUG_TYPE_MARKER");
#endif
#if defined(GL_DEBUG_TYPE_PUSH_GROUP)
defconsti(env, "GL-DEBUG-TYPE-PUSH-GROUP", (GLenum) GL_DEBUG_TYPE_PUSH_GROUP, "GL_DEBUG_TYPE_PUSH_GROUP");
#endif
#if defined(GL_DEBUG_TYPE_POP_GROUP)
defconsti(env, "GL-DEBUG-TYPE-POP-GROUP", (GLenum) GL_DEBUG_TYPE_POP_GROUP, "GL_DEBUG_TYPE_POP_GROUP");
#endif
#if defined(GL_DEBUG_TYPE_OTHER)
defconsti(env, "GL-DEBUG-TYPE-OTHER", (GLenum) GL_DEBUG_TYPE_OTHER, "GL_DEBUG_TYPE_OTHER");
#endif
#if defined(GL_DONT_CARE)
defconsti(env, "GL-DONT-CARE", (GLenum) GL_DONT_CARE, "GL_DONT_CARE");
#endif
#if defined(GL_DEBUG_SEVERITY_LOW)
defconsti(env, "GL-DEBUG-SEVERITY-LOW", (GLenum) GL_DEBUG_SEVERITY_LOW, "GL_DEBUG_SEVERITY_LOW");
#endif
#if defined(GL_DEBUG_SEVERITY_MEDIUM)
defconsti(env, "GL-DEBUG-SEVERITY-MEDIUM", (GLenum) GL_DEBUG_SEVERITY_MEDIUM, "GL_DEBUG_SEVERITY_MEDIUM");
#endif
#if defined(GL_DEBUG_SEVERITY_HIGH)
defconsti(env, "GL-DEBUG-SEVERITY-HIGH", (GLenum) GL_DEBUG_SEVERITY_HIGH, "GL_DEBUG_SEVERITY_HIGH");
#endif
#if defined(GL_DEBUG_SEVERITY_NOTIFICATION)
defconsti(env, "GL-DEBUG-SEVERITY-NOTIFICATION", (GLenum) GL_DEBUG_SEVERITY_NOTIFICATION, "GL_DEBUG_SEVERITY_NOTIFICATION");
#endif
#if defined(GL_DONT_CARE)
defconsti(env, "GL-DONT-CARE", (GLenum) GL_DONT_CARE, "GL_DONT_CARE");
#endif
#if defined(GL_SYNC_GPU_COMMANDS_COMPLETE)
defconsti(env, "GL-SYNC-GPU-COMMANDS-COMPLETE", (GLenum) GL_SYNC_GPU_COMMANDS_COMPLETE, "GL_SYNC_GPU_COMMANDS_COMPLETE");
#endif
#if defined(GL_FOG_MODE)
defconsti(env, "GL-FOG-MODE", (GLenum) GL_FOG_MODE, "GL_FOG_MODE");
#endif
#if defined(GL_FOG_DENSITY)
defconsti(env, "GL-FOG-DENSITY", (GLenum) GL_FOG_DENSITY, "GL_FOG_DENSITY");
#endif
#if defined(GL_FOG_START)
defconsti(env, "GL-FOG-START", (GLenum) GL_FOG_START, "GL_FOG_START");
#endif
#if defined(GL_FOG_END)
defconsti(env, "GL-FOG-END", (GLenum) GL_FOG_END, "GL_FOG_END");
#endif
#if defined(GL_FOG_INDEX)
defconsti(env, "GL-FOG-INDEX", (GLenum) GL_FOG_INDEX, "GL_FOG_INDEX");
#endif
#if defined(GL_FOG_COORD_SRC)
defconsti(env, "GL-FOG-COORD-SRC", (GLenum) GL_FOG_COORD_SRC, "GL_FOG_COORD_SRC");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_BINDING)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-BINDING", (GLenum) GL_ATOMIC_COUNTER_BUFFER_BINDING, "GL_ATOMIC_COUNTER_BUFFER_BINDING");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-DATA-SIZE", (GLenum) GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE, "GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-ACTIVE-ATOMIC-COUNTERS", (GLenum) GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS, "GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-ACTIVE-ATOMIC-COUNTER-INDICES", (GLenum) GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES, "GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-VERTEX-SHADER", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-TESS-CONTROL-SHADER", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-TESS-EVALUATION-SHADER", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-GEOMETRY-SHADER", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-FRAGMENT-SHADER", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-COMPUTE-SHADER", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER");
#endif
#if defined(GL_UNIFORM_BLOCK_BINDING)
defconsti(env, "GL-UNIFORM-BLOCK-BINDING", (GLenum) GL_UNIFORM_BLOCK_BINDING, "GL_UNIFORM_BLOCK_BINDING");
#endif
#if defined(GL_UNIFORM_BLOCK_DATA_SIZE)
defconsti(env, "GL-UNIFORM-BLOCK-DATA-SIZE", (GLenum) GL_UNIFORM_BLOCK_DATA_SIZE, "GL_UNIFORM_BLOCK_DATA_SIZE");
#endif
#if defined(GL_UNIFORM_BLOCK_NAME_LENGTH)
defconsti(env, "GL-UNIFORM-BLOCK-NAME-LENGTH", (GLenum) GL_UNIFORM_BLOCK_NAME_LENGTH, "GL_UNIFORM_BLOCK_NAME_LENGTH");
#endif
#if defined(GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS)
defconsti(env, "GL-UNIFORM-BLOCK-ACTIVE-UNIFORMS", (GLenum) GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS, "GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS");
#endif
#if defined(GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES)
defconsti(env, "GL-UNIFORM-BLOCK-ACTIVE-UNIFORM-INDICES", (GLenum) GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES, "GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-VERTEX-SHADER", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER, "GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-TESS-CONTROL-SHADER", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER, "GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-TESS-EVALUATION-SHADER", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER, "GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-GEOMETRY-SHADER", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER, "GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-FRAGMENT-SHADER", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER, "GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-COMPUTE-SHADER", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER, "GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER");
#endif
#if defined(GL_UNIFORM_TYPE)
defconsti(env, "GL-UNIFORM-TYPE", (GLenum) GL_UNIFORM_TYPE, "GL_UNIFORM_TYPE");
#endif
#if defined(GL_UNIFORM_SIZE)
defconsti(env, "GL-UNIFORM-SIZE", (GLenum) GL_UNIFORM_SIZE, "GL_UNIFORM_SIZE");
#endif
#if defined(GL_UNIFORM_NAME_LENGTH)
defconsti(env, "GL-UNIFORM-NAME-LENGTH", (GLenum) GL_UNIFORM_NAME_LENGTH, "GL_UNIFORM_NAME_LENGTH");
#endif
#if defined(GL_UNIFORM_BLOCK_INDEX)
defconsti(env, "GL-UNIFORM-BLOCK-INDEX", (GLenum) GL_UNIFORM_BLOCK_INDEX, "GL_UNIFORM_BLOCK_INDEX");
#endif
#if defined(GL_UNIFORM_OFFSET)
defconsti(env, "GL-UNIFORM-OFFSET", (GLenum) GL_UNIFORM_OFFSET, "GL_UNIFORM_OFFSET");
#endif
#if defined(GL_UNIFORM_ARRAY_STRIDE)
defconsti(env, "GL-UNIFORM-ARRAY-STRIDE", (GLenum) GL_UNIFORM_ARRAY_STRIDE, "GL_UNIFORM_ARRAY_STRIDE");
#endif
#if defined(GL_UNIFORM_MATRIX_STRIDE)
defconsti(env, "GL-UNIFORM-MATRIX-STRIDE", (GLenum) GL_UNIFORM_MATRIX_STRIDE, "GL_UNIFORM_MATRIX_STRIDE");
#endif
#if defined(GL_UNIFORM_IS_ROW_MAJOR)
defconsti(env, "GL-UNIFORM-IS-ROW-MAJOR", (GLenum) GL_UNIFORM_IS_ROW_MAJOR, "GL_UNIFORM_IS_ROW_MAJOR");
#endif
#if defined(GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX)
defconsti(env, "GL-UNIFORM-ATOMIC-COUNTER-BUFFER-INDEX", (GLenum) GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX, "GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX");
#endif
#if defined(GL_TEXTURE_WRAP_S)
defconsti(env, "GL-TEXTURE-WRAP-S", (GLenum) GL_TEXTURE_WRAP_S, "GL_TEXTURE_WRAP_S");
#endif
#if defined(GL_TEXTURE_WRAP_T)
defconsti(env, "GL-TEXTURE-WRAP-T", (GLenum) GL_TEXTURE_WRAP_T, "GL_TEXTURE_WRAP_T");
#endif
#if defined(GL_TEXTURE_WRAP_R)
defconsti(env, "GL-TEXTURE-WRAP-R", (GLenum) GL_TEXTURE_WRAP_R, "GL_TEXTURE_WRAP_R");
#endif
#if defined(GL_TEXTURE_MIN_FILTER)
defconsti(env, "GL-TEXTURE-MIN-FILTER", (GLenum) GL_TEXTURE_MIN_FILTER, "GL_TEXTURE_MIN_FILTER");
#endif
#if defined(GL_TEXTURE_MAG_FILTER)
defconsti(env, "GL-TEXTURE-MAG-FILTER", (GLenum) GL_TEXTURE_MAG_FILTER, "GL_TEXTURE_MAG_FILTER");
#endif
#if defined(GL_TEXTURE_COMPARE_MODE)
defconsti(env, "GL-TEXTURE-COMPARE-MODE", (GLenum) GL_TEXTURE_COMPARE_MODE, "GL_TEXTURE_COMPARE_MODE");
#endif
#if defined(GL_TEXTURE_COMPARE_FUNC)
defconsti(env, "GL-TEXTURE-COMPARE-FUNC", (GLenum) GL_TEXTURE_COMPARE_FUNC, "GL_TEXTURE_COMPARE_FUNC");
#endif
#if defined(GL_TEXTURE_BORDER_COLOR)
defconsti(env, "GL-TEXTURE-BORDER-COLOR", (GLenum) GL_TEXTURE_BORDER_COLOR, "GL_TEXTURE_BORDER_COLOR");
#endif
#if defined(GL_TEXTURE_MIN_LOD)
defconsti(env, "GL-TEXTURE-MIN-LOD", (GLenum) GL_TEXTURE_MIN_LOD, "GL_TEXTURE_MIN_LOD");
#endif
#if defined(GL_TEXTURE_MAX_LOD)
defconsti(env, "GL-TEXTURE-MAX-LOD", (GLenum) GL_TEXTURE_MAX_LOD, "GL_TEXTURE_MAX_LOD");
#endif
#if defined(GL_TEXTURE_MAX_ANISOTROPY)
defconsti(env, "GL-TEXTURE-MAX-ANISOTROPY", (GLenum) GL_TEXTURE_MAX_ANISOTROPY, "GL_TEXTURE_MAX_ANISOTROPY");
#endif
#if defined(GL_FIRST_VERTEX_CONVENTION)
defconsti(env, "GL-FIRST-VERTEX-CONVENTION", (GLenum) GL_FIRST_VERTEX_CONVENTION, "GL_FIRST_VERTEX_CONVENTION");
#endif
#if defined(GL_LAST_VERTEX_CONVENTION)
defconsti(env, "GL-LAST-VERTEX-CONVENTION", (GLenum) GL_LAST_VERTEX_CONVENTION, "GL_LAST_VERTEX_CONVENTION");
#endif
#if defined(GL_PATCH_VERTICES)
defconsti(env, "GL-PATCH-VERTICES", (GLenum) GL_PATCH_VERTICES, "GL_PATCH_VERTICES");
#endif
#if defined(GL_PATCH_DEFAULT_OUTER_LEVEL)
defconsti(env, "GL-PATCH-DEFAULT-OUTER-LEVEL", (GLenum) GL_PATCH_DEFAULT_OUTER_LEVEL, "GL_PATCH_DEFAULT_OUTER_LEVEL");
#endif
#if defined(GL_PATCH_DEFAULT_INNER_LEVEL)
defconsti(env, "GL-PATCH-DEFAULT-INNER-LEVEL", (GLenum) GL_PATCH_DEFAULT_INNER_LEVEL, "GL_PATCH_DEFAULT_INNER_LEVEL");
#endif
#if defined(GL_BUFFER)
defconsti(env, "GL-BUFFER", (GLenum) GL_BUFFER, "GL_BUFFER");
#endif
#if defined(GL_SHADER)
defconsti(env, "GL-SHADER", (GLenum) GL_SHADER, "GL_SHADER");
#endif
#if defined(GL_PROGRAM)
defconsti(env, "GL-PROGRAM", (GLenum) GL_PROGRAM, "GL_PROGRAM");
#endif
#if defined(GL_VERTEX_ARRAY)
defconsti(env, "GL-VERTEX-ARRAY", (GLenum) GL_VERTEX_ARRAY, "GL_VERTEX_ARRAY");
#endif
#if defined(GL_QUERY)
defconsti(env, "GL-QUERY", (GLenum) GL_QUERY, "GL_QUERY");
#endif
#if defined(GL_PROGRAM_PIPELINE)
defconsti(env, "GL-PROGRAM-PIPELINE", (GLenum) GL_PROGRAM_PIPELINE, "GL_PROGRAM_PIPELINE");
#endif
#if defined(GL_TRANSFORM_FEEDBACK)
defconsti(env, "GL-TRANSFORM-FEEDBACK", (GLenum) GL_TRANSFORM_FEEDBACK, "GL_TRANSFORM_FEEDBACK");
#endif
#if defined(GL_SAMPLER)
defconsti(env, "GL-SAMPLER", (GLenum) GL_SAMPLER, "GL_SAMPLER");
#endif
#if defined(GL_TEXTURE)
defconsti(env, "GL-TEXTURE", (GLenum) GL_TEXTURE, "GL_TEXTURE");
#endif
#if defined(GL_RENDERBUFFER)
defconsti(env, "GL-RENDERBUFFER", (GLenum) GL_RENDERBUFFER, "GL_RENDERBUFFER");
#endif
#if defined(GL_FRAMEBUFFER)
defconsti(env, "GL-FRAMEBUFFER", (GLenum) GL_FRAMEBUFFER, "GL_FRAMEBUFFER");
#endif
#if defined(GL_NONE)
defconsti(env, "GL-NONE", (GLenum) GL_NONE, "GL_NONE");
#endif
#if defined(GL_FRONT_LEFT)
defconsti(env, "GL-FRONT-LEFT", (GLenum) GL_FRONT_LEFT, "GL_FRONT_LEFT");
#endif
#if defined(GL_FRONT_RIGHT)
defconsti(env, "GL-FRONT-RIGHT", (GLenum) GL_FRONT_RIGHT, "GL_FRONT_RIGHT");
#endif
#if defined(GL_BACK_LEFT)
defconsti(env, "GL-BACK-LEFT", (GLenum) GL_BACK_LEFT, "GL_BACK_LEFT");
#endif
#if defined(GL_BACK_RIGHT)
defconsti(env, "GL-BACK-RIGHT", (GLenum) GL_BACK_RIGHT, "GL_BACK_RIGHT");
#endif
#if defined(GL_FRONT)
defconsti(env, "GL-FRONT", (GLenum) GL_FRONT, "GL_FRONT");
#endif
#if defined(GL_BACK)
defconsti(env, "GL-BACK", (GLenum) GL_BACK, "GL_BACK");
#endif
#if defined(GL_LEFT)
defconsti(env, "GL-LEFT", (GLenum) GL_LEFT, "GL_LEFT");
#endif
#if defined(GL_RIGHT)
defconsti(env, "GL-RIGHT", (GLenum) GL_RIGHT, "GL_RIGHT");
#endif
#if defined(GL_FRONT_AND_BACK)
defconsti(env, "GL-FRONT-AND-BACK", (GLenum) GL_FRONT_AND_BACK, "GL_FRONT_AND_BACK");
#endif
#if defined(GL_COLOR_ATTACHMENT0)
defconsti(env, "GL-COLOR-ATTACHMENT0", (GLenum) GL_COLOR_ATTACHMENT0, "GL_COLOR_ATTACHMENT0");
#endif
#if defined(GL_COLOR_ATTACHMENT1)
defconsti(env, "GL-COLOR-ATTACHMENT1", (GLenum) GL_COLOR_ATTACHMENT1, "GL_COLOR_ATTACHMENT1");
#endif
#if defined(GL_COLOR_ATTACHMENT2)
defconsti(env, "GL-COLOR-ATTACHMENT2", (GLenum) GL_COLOR_ATTACHMENT2, "GL_COLOR_ATTACHMENT2");
#endif
#if defined(GL_COLOR_ATTACHMENT3)
defconsti(env, "GL-COLOR-ATTACHMENT3", (GLenum) GL_COLOR_ATTACHMENT3, "GL_COLOR_ATTACHMENT3");
#endif
#if defined(GL_COLOR_ATTACHMENT4)
defconsti(env, "GL-COLOR-ATTACHMENT4", (GLenum) GL_COLOR_ATTACHMENT4, "GL_COLOR_ATTACHMENT4");
#endif
#if defined(GL_COLOR_ATTACHMENT5)
defconsti(env, "GL-COLOR-ATTACHMENT5", (GLenum) GL_COLOR_ATTACHMENT5, "GL_COLOR_ATTACHMENT5");
#endif
#if defined(GL_COLOR_ATTACHMENT6)
defconsti(env, "GL-COLOR-ATTACHMENT6", (GLenum) GL_COLOR_ATTACHMENT6, "GL_COLOR_ATTACHMENT6");
#endif
#if defined(GL_COLOR_ATTACHMENT7)
defconsti(env, "GL-COLOR-ATTACHMENT7", (GLenum) GL_COLOR_ATTACHMENT7, "GL_COLOR_ATTACHMENT7");
#endif
#if defined(GL_COLOR_ATTACHMENT8)
defconsti(env, "GL-COLOR-ATTACHMENT8", (GLenum) GL_COLOR_ATTACHMENT8, "GL_COLOR_ATTACHMENT8");
#endif
#if defined(GL_COLOR_ATTACHMENT9)
defconsti(env, "GL-COLOR-ATTACHMENT9", (GLenum) GL_COLOR_ATTACHMENT9, "GL_COLOR_ATTACHMENT9");
#endif
#if defined(GL_COLOR_ATTACHMENT10)
defconsti(env, "GL-COLOR-ATTACHMENT10", (GLenum) GL_COLOR_ATTACHMENT10, "GL_COLOR_ATTACHMENT10");
#endif
#if defined(GL_COLOR_ATTACHMENT11)
defconsti(env, "GL-COLOR-ATTACHMENT11", (GLenum) GL_COLOR_ATTACHMENT11, "GL_COLOR_ATTACHMENT11");
#endif
#if defined(GL_COLOR_ATTACHMENT12)
defconsti(env, "GL-COLOR-ATTACHMENT12", (GLenum) GL_COLOR_ATTACHMENT12, "GL_COLOR_ATTACHMENT12");
#endif
#if defined(GL_COLOR_ATTACHMENT13)
defconsti(env, "GL-COLOR-ATTACHMENT13", (GLenum) GL_COLOR_ATTACHMENT13, "GL_COLOR_ATTACHMENT13");
#endif
#if defined(GL_COLOR_ATTACHMENT14)
defconsti(env, "GL-COLOR-ATTACHMENT14", (GLenum) GL_COLOR_ATTACHMENT14, "GL_COLOR_ATTACHMENT14");
#endif
#if defined(GL_COLOR_ATTACHMENT15)
defconsti(env, "GL-COLOR-ATTACHMENT15", (GLenum) GL_COLOR_ATTACHMENT15, "GL_COLOR_ATTACHMENT15");
#endif
#if defined(GL_COLOR_ATTACHMENT16)
defconsti(env, "GL-COLOR-ATTACHMENT16", (GLenum) GL_COLOR_ATTACHMENT16, "GL_COLOR_ATTACHMENT16");
#endif
#if defined(GL_COLOR_ATTACHMENT17)
defconsti(env, "GL-COLOR-ATTACHMENT17", (GLenum) GL_COLOR_ATTACHMENT17, "GL_COLOR_ATTACHMENT17");
#endif
#if defined(GL_COLOR_ATTACHMENT18)
defconsti(env, "GL-COLOR-ATTACHMENT18", (GLenum) GL_COLOR_ATTACHMENT18, "GL_COLOR_ATTACHMENT18");
#endif
#if defined(GL_COLOR_ATTACHMENT19)
defconsti(env, "GL-COLOR-ATTACHMENT19", (GLenum) GL_COLOR_ATTACHMENT19, "GL_COLOR_ATTACHMENT19");
#endif
#if defined(GL_COLOR_ATTACHMENT20)
defconsti(env, "GL-COLOR-ATTACHMENT20", (GLenum) GL_COLOR_ATTACHMENT20, "GL_COLOR_ATTACHMENT20");
#endif
#if defined(GL_COLOR_ATTACHMENT21)
defconsti(env, "GL-COLOR-ATTACHMENT21", (GLenum) GL_COLOR_ATTACHMENT21, "GL_COLOR_ATTACHMENT21");
#endif
#if defined(GL_COLOR_ATTACHMENT22)
defconsti(env, "GL-COLOR-ATTACHMENT22", (GLenum) GL_COLOR_ATTACHMENT22, "GL_COLOR_ATTACHMENT22");
#endif
#if defined(GL_COLOR_ATTACHMENT23)
defconsti(env, "GL-COLOR-ATTACHMENT23", (GLenum) GL_COLOR_ATTACHMENT23, "GL_COLOR_ATTACHMENT23");
#endif
#if defined(GL_COLOR_ATTACHMENT24)
defconsti(env, "GL-COLOR-ATTACHMENT24", (GLenum) GL_COLOR_ATTACHMENT24, "GL_COLOR_ATTACHMENT24");
#endif
#if defined(GL_COLOR_ATTACHMENT25)
defconsti(env, "GL-COLOR-ATTACHMENT25", (GLenum) GL_COLOR_ATTACHMENT25, "GL_COLOR_ATTACHMENT25");
#endif
#if defined(GL_COLOR_ATTACHMENT26)
defconsti(env, "GL-COLOR-ATTACHMENT26", (GLenum) GL_COLOR_ATTACHMENT26, "GL_COLOR_ATTACHMENT26");
#endif
#if defined(GL_COLOR_ATTACHMENT27)
defconsti(env, "GL-COLOR-ATTACHMENT27", (GLenum) GL_COLOR_ATTACHMENT27, "GL_COLOR_ATTACHMENT27");
#endif
#if defined(GL_COLOR_ATTACHMENT28)
defconsti(env, "GL-COLOR-ATTACHMENT28", (GLenum) GL_COLOR_ATTACHMENT28, "GL_COLOR_ATTACHMENT28");
#endif
#if defined(GL_COLOR_ATTACHMENT29)
defconsti(env, "GL-COLOR-ATTACHMENT29", (GLenum) GL_COLOR_ATTACHMENT29, "GL_COLOR_ATTACHMENT29");
#endif
#if defined(GL_COLOR_ATTACHMENT30)
defconsti(env, "GL-COLOR-ATTACHMENT30", (GLenum) GL_COLOR_ATTACHMENT30, "GL_COLOR_ATTACHMENT30");
#endif
#if defined(GL_COLOR_ATTACHMENT31)
defconsti(env, "GL-COLOR-ATTACHMENT31", (GLenum) GL_COLOR_ATTACHMENT31, "GL_COLOR_ATTACHMENT31");
#endif
#if defined(GL_COEFF)
defconsti(env, "GL-COEFF", (GLenum) GL_COEFF, "GL_COEFF");
#endif
#if defined(GL_ORDER)
defconsti(env, "GL-ORDER", (GLenum) GL_ORDER, "GL_ORDER");
#endif
#if defined(GL_DOMAIN)
defconsti(env, "GL-DOMAIN", (GLenum) GL_DOMAIN, "GL_DOMAIN");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_ENABLED)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-ENABLED", (GLenum) GL_VERTEX_ATTRIB_ARRAY_ENABLED, "GL_VERTEX_ATTRIB_ARRAY_ENABLED");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_SIZE)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-SIZE", (GLenum) GL_VERTEX_ATTRIB_ARRAY_SIZE, "GL_VERTEX_ATTRIB_ARRAY_SIZE");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_STRIDE)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-STRIDE", (GLenum) GL_VERTEX_ATTRIB_ARRAY_STRIDE, "GL_VERTEX_ATTRIB_ARRAY_STRIDE");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_TYPE)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-TYPE", (GLenum) GL_VERTEX_ATTRIB_ARRAY_TYPE, "GL_VERTEX_ATTRIB_ARRAY_TYPE");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_NORMALIZED)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-NORMALIZED", (GLenum) GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, "GL_VERTEX_ATTRIB_ARRAY_NORMALIZED");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_INTEGER)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-INTEGER", (GLenum) GL_VERTEX_ATTRIB_ARRAY_INTEGER, "GL_VERTEX_ATTRIB_ARRAY_INTEGER");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_LONG)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-LONG", (GLenum) GL_VERTEX_ATTRIB_ARRAY_LONG, "GL_VERTEX_ATTRIB_ARRAY_LONG");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_DIVISOR)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-DIVISOR", (GLenum) GL_VERTEX_ATTRIB_ARRAY_DIVISOR, "GL_VERTEX_ATTRIB_ARRAY_DIVISOR");
#endif
#if defined(GL_VERTEX_ATTRIB_RELATIVE_OFFSET)
defconsti(env, "GL-VERTEX-ATTRIB-RELATIVE-OFFSET", (GLenum) GL_VERTEX_ATTRIB_RELATIVE_OFFSET, "GL_VERTEX_ATTRIB_RELATIVE_OFFSET");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_BINDING)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-BINDING", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_BINDING, "GL_TRANSFORM_FEEDBACK_BUFFER_BINDING");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_START)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-START", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_START, "GL_TRANSFORM_FEEDBACK_BUFFER_START");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_SIZE)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-SIZE", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_SIZE, "GL_TRANSFORM_FEEDBACK_BUFFER_SIZE");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_PAUSED)
defconsti(env, "GL-TRANSFORM-FEEDBACK-PAUSED", (GLenum) GL_TRANSFORM_FEEDBACK_PAUSED, "GL_TRANSFORM_FEEDBACK_PAUSED");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_ACTIVE)
defconsti(env, "GL-TRANSFORM-FEEDBACK-ACTIVE", (GLenum) GL_TRANSFORM_FEEDBACK_ACTIVE, "GL_TRANSFORM_FEEDBACK_ACTIVE");
#endif
#if defined(GL_OBJECT_TYPE)
defconsti(env, "GL-OBJECT-TYPE", (GLenum) GL_OBJECT_TYPE, "GL_OBJECT_TYPE");
#endif
#if defined(GL_SYNC_STATUS)
defconsti(env, "GL-SYNC-STATUS", (GLenum) GL_SYNC_STATUS, "GL_SYNC_STATUS");
#endif
#if defined(GL_SYNC_CONDITION)
defconsti(env, "GL-SYNC-CONDITION", (GLenum) GL_SYNC_CONDITION, "GL_SYNC_CONDITION");
#endif
#if defined(GL_SYNC_FLAGS)
defconsti(env, "GL-SYNC-FLAGS", (GLenum) GL_SYNC_FLAGS, "GL_SYNC_FLAGS");
#endif
#if defined(GL_SHADER_TYPE)
defconsti(env, "GL-SHADER-TYPE", (GLenum) GL_SHADER_TYPE, "GL_SHADER_TYPE");
#endif
#if defined(GL_DELETE_STATUS)
defconsti(env, "GL-DELETE-STATUS", (GLenum) GL_DELETE_STATUS, "GL_DELETE_STATUS");
#endif
#if defined(GL_COMPILE_STATUS)
defconsti(env, "GL-COMPILE-STATUS", (GLenum) GL_COMPILE_STATUS, "GL_COMPILE_STATUS");
#endif
#if defined(GL_INFO_LOG_LENGTH)
defconsti(env, "GL-INFO-LOG-LENGTH", (GLenum) GL_INFO_LOG_LENGTH, "GL_INFO_LOG_LENGTH");
#endif
#if defined(GL_SHADER_SOURCE_LENGTH)
defconsti(env, "GL-SHADER-SOURCE-LENGTH", (GLenum) GL_SHADER_SOURCE_LENGTH, "GL_SHADER_SOURCE_LENGTH");
#endif
#if defined(GL_QUERY_RESULT_AVAILABLE)
defconsti(env, "GL-QUERY-RESULT-AVAILABLE", (GLenum) GL_QUERY_RESULT_AVAILABLE, "GL_QUERY_RESULT_AVAILABLE");
#endif
#if defined(GL_QUERY_RESULT)
defconsti(env, "GL-QUERY-RESULT", (GLenum) GL_QUERY_RESULT, "GL_QUERY_RESULT");
#endif
#if defined(GL_QUERY_RESULT_NO_WAIT)
defconsti(env, "GL-QUERY-RESULT-NO-WAIT", (GLenum) GL_QUERY_RESULT_NO_WAIT, "GL_QUERY_RESULT_NO_WAIT");
#endif
#if defined(GL_QUERY_TARGET)
defconsti(env, "GL-QUERY-TARGET", (GLenum) GL_QUERY_TARGET, "GL_QUERY_TARGET");
#endif
#if defined(GL_CURRENT_QUERY)
defconsti(env, "GL-CURRENT-QUERY", (GLenum) GL_CURRENT_QUERY, "GL_CURRENT_QUERY");
#endif
#if defined(GL_QUERY_COUNTER_BITS)
defconsti(env, "GL-QUERY-COUNTER-BITS", (GLenum) GL_QUERY_COUNTER_BITS, "GL_QUERY_COUNTER_BITS");
#endif
#if defined(GL_ACTIVE_SUBROUTINE_UNIFORMS)
defconsti(env, "GL-ACTIVE-SUBROUTINE-UNIFORMS", (GLenum) GL_ACTIVE_SUBROUTINE_UNIFORMS, "GL_ACTIVE_SUBROUTINE_UNIFORMS");
#endif
#if defined(GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS)
defconsti(env, "GL-ACTIVE-SUBROUTINE-UNIFORM-LOCATIONS", (GLenum) GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS, "GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS");
#endif
#if defined(GL_ACTIVE_SUBROUTINES)
defconsti(env, "GL-ACTIVE-SUBROUTINES", (GLenum) GL_ACTIVE_SUBROUTINES, "GL_ACTIVE_SUBROUTINES");
#endif
#if defined(GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH)
defconsti(env, "GL-ACTIVE-SUBROUTINE-UNIFORM-MAX-LENGTH", (GLenum) GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH, "GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH");
#endif
#if defined(GL_ACTIVE_SUBROUTINE_MAX_LENGTH)
defconsti(env, "GL-ACTIVE-SUBROUTINE-MAX-LENGTH", (GLenum) GL_ACTIVE_SUBROUTINE_MAX_LENGTH, "GL_ACTIVE_SUBROUTINE_MAX_LENGTH");
#endif
#if defined(GL_ACTIVE_PROGRAM)
defconsti(env, "GL-ACTIVE-PROGRAM", (GLenum) GL_ACTIVE_PROGRAM, "GL_ACTIVE_PROGRAM");
#endif
#if defined(GL_VERTEX_SHADER)
defconsti(env, "GL-VERTEX-SHADER", (GLenum) GL_VERTEX_SHADER, "GL_VERTEX_SHADER");
#endif
#if defined(GL_TESS_CONTROL_SHADER)
defconsti(env, "GL-TESS-CONTROL-SHADER", (GLenum) GL_TESS_CONTROL_SHADER, "GL_TESS_CONTROL_SHADER");
#endif
#if defined(GL_TESS_EVALUATION_SHADER)
defconsti(env, "GL-TESS-EVALUATION-SHADER", (GLenum) GL_TESS_EVALUATION_SHADER, "GL_TESS_EVALUATION_SHADER");
#endif
#if defined(GL_GEOMETRY_SHADER)
defconsti(env, "GL-GEOMETRY-SHADER", (GLenum) GL_GEOMETRY_SHADER, "GL_GEOMETRY_SHADER");
#endif
#if defined(GL_FRAGMENT_SHADER)
defconsti(env, "GL-FRAGMENT-SHADER", (GLenum) GL_FRAGMENT_SHADER, "GL_FRAGMENT_SHADER");
#endif
#if defined(GL_INFO_LOG_LENGTH)
defconsti(env, "GL-INFO-LOG-LENGTH", (GLenum) GL_INFO_LOG_LENGTH, "GL_INFO_LOG_LENGTH");
#endif
#if defined(GL_UNIFORM)
defconsti(env, "GL-UNIFORM", (GLenum) GL_UNIFORM, "GL_UNIFORM");
#endif
#if defined(GL_UNIFORM_BLOCK)
defconsti(env, "GL-UNIFORM-BLOCK", (GLenum) GL_UNIFORM_BLOCK, "GL_UNIFORM_BLOCK");
#endif
#if defined(GL_PROGRAM_INPUT)
defconsti(env, "GL-PROGRAM-INPUT", (GLenum) GL_PROGRAM_INPUT, "GL_PROGRAM_INPUT");
#endif
#if defined(GL_PROGRAM_OUTPUT)
defconsti(env, "GL-PROGRAM-OUTPUT", (GLenum) GL_PROGRAM_OUTPUT, "GL_PROGRAM_OUTPUT");
#endif
#if defined(GL_VERTEX_SUBROUTINE)
defconsti(env, "GL-VERTEX-SUBROUTINE", (GLenum) GL_VERTEX_SUBROUTINE, "GL_VERTEX_SUBROUTINE");
#endif
#if defined(GL_TESS_CONTROL_SUBROUTINE)
defconsti(env, "GL-TESS-CONTROL-SUBROUTINE", (GLenum) GL_TESS_CONTROL_SUBROUTINE, "GL_TESS_CONTROL_SUBROUTINE");
#endif
#if defined(GL_TESS_EVALUATION_SUBROUTINE)
defconsti(env, "GL-TESS-EVALUATION-SUBROUTINE", (GLenum) GL_TESS_EVALUATION_SUBROUTINE, "GL_TESS_EVALUATION_SUBROUTINE");
#endif
#if defined(GL_GEOMETRY_SUBROUTINE)
defconsti(env, "GL-GEOMETRY-SUBROUTINE", (GLenum) GL_GEOMETRY_SUBROUTINE, "GL_GEOMETRY_SUBROUTINE");
#endif
#if defined(GL_FRAGMENT_SUBROUTINE)
defconsti(env, "GL-FRAGMENT-SUBROUTINE", (GLenum) GL_FRAGMENT_SUBROUTINE, "GL_FRAGMENT_SUBROUTINE");
#endif
#if defined(GL_COMPUTE_SUBROUTINE)
defconsti(env, "GL-COMPUTE-SUBROUTINE", (GLenum) GL_COMPUTE_SUBROUTINE, "GL_COMPUTE_SUBROUTINE");
#endif
#if defined(GL_VERTEX_SUBROUTINE_UNIFORM)
defconsti(env, "GL-VERTEX-SUBROUTINE-UNIFORM", (GLenum) GL_VERTEX_SUBROUTINE_UNIFORM, "GL_VERTEX_SUBROUTINE_UNIFORM");
#endif
#if defined(GL_TESS_CONTROL_SUBROUTINE_UNIFORM)
defconsti(env, "GL-TESS-CONTROL-SUBROUTINE-UNIFORM", (GLenum) GL_TESS_CONTROL_SUBROUTINE_UNIFORM, "GL_TESS_CONTROL_SUBROUTINE_UNIFORM");
#endif
#if defined(GL_TESS_EVALUATION_SUBROUTINE_UNIFORM)
defconsti(env, "GL-TESS-EVALUATION-SUBROUTINE-UNIFORM", (GLenum) GL_TESS_EVALUATION_SUBROUTINE_UNIFORM, "GL_TESS_EVALUATION_SUBROUTINE_UNIFORM");
#endif
#if defined(GL_GEOMETRY_SUBROUTINE_UNIFORM)
defconsti(env, "GL-GEOMETRY-SUBROUTINE-UNIFORM", (GLenum) GL_GEOMETRY_SUBROUTINE_UNIFORM, "GL_GEOMETRY_SUBROUTINE_UNIFORM");
#endif
#if defined(GL_FRAGMENT_SUBROUTINE_UNIFORM)
defconsti(env, "GL-FRAGMENT-SUBROUTINE-UNIFORM", (GLenum) GL_FRAGMENT_SUBROUTINE_UNIFORM, "GL_FRAGMENT_SUBROUTINE_UNIFORM");
#endif
#if defined(GL_COMPUTE_SUBROUTINE_UNIFORM)
defconsti(env, "GL-COMPUTE-SUBROUTINE-UNIFORM", (GLenum) GL_COMPUTE_SUBROUTINE_UNIFORM, "GL_COMPUTE_SUBROUTINE_UNIFORM");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_VARYING)
defconsti(env, "GL-TRANSFORM-FEEDBACK-VARYING", (GLenum) GL_TRANSFORM_FEEDBACK_VARYING, "GL_TRANSFORM_FEEDBACK_VARYING");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER, "GL_TRANSFORM_FEEDBACK_BUFFER");
#endif
#if defined(GL_BUFFER_VARIABLE)
defconsti(env, "GL-BUFFER-VARIABLE", (GLenum) GL_BUFFER_VARIABLE, "GL_BUFFER_VARIABLE");
#endif
#if defined(GL_SHADER_STORAGE_BLOCK)
defconsti(env, "GL-SHADER-STORAGE-BLOCK", (GLenum) GL_SHADER_STORAGE_BLOCK, "GL_SHADER_STORAGE_BLOCK");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-BUFFER-BINDING", (GLenum) GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, "GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_ENABLED)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-ENABLED", (GLenum) GL_VERTEX_ATTRIB_ARRAY_ENABLED, "GL_VERTEX_ATTRIB_ARRAY_ENABLED");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_SIZE)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-SIZE", (GLenum) GL_VERTEX_ATTRIB_ARRAY_SIZE, "GL_VERTEX_ATTRIB_ARRAY_SIZE");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_STRIDE)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-STRIDE", (GLenum) GL_VERTEX_ATTRIB_ARRAY_STRIDE, "GL_VERTEX_ATTRIB_ARRAY_STRIDE");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_TYPE)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-TYPE", (GLenum) GL_VERTEX_ATTRIB_ARRAY_TYPE, "GL_VERTEX_ATTRIB_ARRAY_TYPE");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_NORMALIZED)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-NORMALIZED", (GLenum) GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, "GL_VERTEX_ATTRIB_ARRAY_NORMALIZED");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_INTEGER)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-INTEGER", (GLenum) GL_VERTEX_ATTRIB_ARRAY_INTEGER, "GL_VERTEX_ATTRIB_ARRAY_INTEGER");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_DIVISOR)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-DIVISOR", (GLenum) GL_VERTEX_ATTRIB_ARRAY_DIVISOR, "GL_VERTEX_ATTRIB_ARRAY_DIVISOR");
#endif
#if defined(GL_CURRENT_VERTEX_ATTRIB)
defconsti(env, "GL-CURRENT-VERTEX-ATTRIB", (GLenum) GL_CURRENT_VERTEX_ATTRIB, "GL_CURRENT_VERTEX_ATTRIB");
#endif
#if defined(GL_BYTE)
defconsti(env, "GL-BYTE", (GLenum) GL_BYTE, "GL_BYTE");
#endif
#if defined(GL_SHORT)
defconsti(env, "GL-SHORT", (GLenum) GL_SHORT, "GL_SHORT");
#endif
#if defined(GL_INT)
defconsti(env, "GL-INT", (GLenum) GL_INT, "GL_INT");
#endif
#if defined(GL_FIXED)
defconsti(env, "GL-FIXED", (GLenum) GL_FIXED, "GL_FIXED");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_HALF_FLOAT)
defconsti(env, "GL-HALF-FLOAT", (GLenum) GL_HALF_FLOAT, "GL_HALF_FLOAT");
#endif
#if defined(GL_DOUBLE)
defconsti(env, "GL-DOUBLE", (GLenum) GL_DOUBLE, "GL_DOUBLE");
#endif
#if defined(GL_UNSIGNED_BYTE)
defconsti(env, "GL-UNSIGNED-BYTE", (GLenum) GL_UNSIGNED_BYTE, "GL_UNSIGNED_BYTE");
#endif
#if defined(GL_UNSIGNED_SHORT)
defconsti(env, "GL-UNSIGNED-SHORT", (GLenum) GL_UNSIGNED_SHORT, "GL_UNSIGNED_SHORT");
#endif
#if defined(GL_UNSIGNED_INT)
defconsti(env, "GL-UNSIGNED-INT", (GLenum) GL_UNSIGNED_INT, "GL_UNSIGNED_INT");
#endif
#if defined(GL_INT_2_10_10_10_REV)
defconsti(env, "GL-INT-2-10-10-10-REV", (GLenum) GL_INT_2_10_10_10_REV, "GL_INT_2_10_10_10_REV");
#endif
#if defined(GL_UNSIGNED_INT_2_10_10_10_REV)
defconsti(env, "GL-UNSIGNED-INT-2-10-10-10-REV", (GLenum) GL_UNSIGNED_INT_2_10_10_10_REV, "GL_UNSIGNED_INT_2_10_10_10_REV");
#endif
#if defined(GL_UNSIGNED_INT_10F_11F_11F_REV)
defconsti(env, "GL-UNSIGNED-INT-10F-11F-11F-REV", (GLenum) GL_UNSIGNED_INT_10F_11F_11F_REV, "GL_UNSIGNED_INT_10F_11F_11F_REV");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_FLOAT_VEC2)
defconsti(env, "GL-FLOAT-VEC2", (GLenum) GL_FLOAT_VEC2, "GL_FLOAT_VEC2");
#endif
#if defined(GL_FLOAT_VEC2_ARB)
defconsti(env, "GL-FLOAT-VEC2-ARB", (GLenum) GL_FLOAT_VEC2_ARB, "GL_FLOAT_VEC2_ARB");
#endif
#if defined(GL_FLOAT_VEC3)
defconsti(env, "GL-FLOAT-VEC3", (GLenum) GL_FLOAT_VEC3, "GL_FLOAT_VEC3");
#endif
#if defined(GL_FLOAT_VEC3_ARB)
defconsti(env, "GL-FLOAT-VEC3-ARB", (GLenum) GL_FLOAT_VEC3_ARB, "GL_FLOAT_VEC3_ARB");
#endif
#if defined(GL_FLOAT_VEC4)
defconsti(env, "GL-FLOAT-VEC4", (GLenum) GL_FLOAT_VEC4, "GL_FLOAT_VEC4");
#endif
#if defined(GL_FLOAT_VEC4_ARB)
defconsti(env, "GL-FLOAT-VEC4-ARB", (GLenum) GL_FLOAT_VEC4_ARB, "GL_FLOAT_VEC4_ARB");
#endif
#if defined(GL_DOUBLE)
defconsti(env, "GL-DOUBLE", (GLenum) GL_DOUBLE, "GL_DOUBLE");
#endif
#if defined(GL_DOUBLE_VEC2)
defconsti(env, "GL-DOUBLE-VEC2", (GLenum) GL_DOUBLE_VEC2, "GL_DOUBLE_VEC2");
#endif
#if defined(GL_DOUBLE_VEC3)
defconsti(env, "GL-DOUBLE-VEC3", (GLenum) GL_DOUBLE_VEC3, "GL_DOUBLE_VEC3");
#endif
#if defined(GL_DOUBLE_VEC4)
defconsti(env, "GL-DOUBLE-VEC4", (GLenum) GL_DOUBLE_VEC4, "GL_DOUBLE_VEC4");
#endif
#if defined(GL_INT)
defconsti(env, "GL-INT", (GLenum) GL_INT, "GL_INT");
#endif
#if defined(GL_INT_VEC2)
defconsti(env, "GL-INT-VEC2", (GLenum) GL_INT_VEC2, "GL_INT_VEC2");
#endif
#if defined(GL_INT_VEC2_ARB)
defconsti(env, "GL-INT-VEC2-ARB", (GLenum) GL_INT_VEC2_ARB, "GL_INT_VEC2_ARB");
#endif
#if defined(GL_INT_VEC3)
defconsti(env, "GL-INT-VEC3", (GLenum) GL_INT_VEC3, "GL_INT_VEC3");
#endif
#if defined(GL_INT_VEC3_ARB)
defconsti(env, "GL-INT-VEC3-ARB", (GLenum) GL_INT_VEC3_ARB, "GL_INT_VEC3_ARB");
#endif
#if defined(GL_INT_VEC4)
defconsti(env, "GL-INT-VEC4", (GLenum) GL_INT_VEC4, "GL_INT_VEC4");
#endif
#if defined(GL_INT_VEC4_ARB)
defconsti(env, "GL-INT-VEC4-ARB", (GLenum) GL_INT_VEC4_ARB, "GL_INT_VEC4_ARB");
#endif
#if defined(GL_UNSIGNED_INT)
defconsti(env, "GL-UNSIGNED-INT", (GLenum) GL_UNSIGNED_INT, "GL_UNSIGNED_INT");
#endif
#if defined(GL_UNSIGNED_INT_VEC2)
defconsti(env, "GL-UNSIGNED-INT-VEC2", (GLenum) GL_UNSIGNED_INT_VEC2, "GL_UNSIGNED_INT_VEC2");
#endif
#if defined(GL_UNSIGNED_INT_VEC3)
defconsti(env, "GL-UNSIGNED-INT-VEC3", (GLenum) GL_UNSIGNED_INT_VEC3, "GL_UNSIGNED_INT_VEC3");
#endif
#if defined(GL_UNSIGNED_INT_VEC4)
defconsti(env, "GL-UNSIGNED-INT-VEC4", (GLenum) GL_UNSIGNED_INT_VEC4, "GL_UNSIGNED_INT_VEC4");
#endif
#if defined(GL_BOOL)
defconsti(env, "GL-BOOL", (GLenum) GL_BOOL, "GL_BOOL");
#endif
#if defined(GL_BOOL_ARB)
defconsti(env, "GL-BOOL-ARB", (GLenum) GL_BOOL_ARB, "GL_BOOL_ARB");
#endif
#if defined(GL_BOOL_VEC2)
defconsti(env, "GL-BOOL-VEC2", (GLenum) GL_BOOL_VEC2, "GL_BOOL_VEC2");
#endif
#if defined(GL_BOOL_VEC2_ARB)
defconsti(env, "GL-BOOL-VEC2-ARB", (GLenum) GL_BOOL_VEC2_ARB, "GL_BOOL_VEC2_ARB");
#endif
#if defined(GL_BOOL_VEC3)
defconsti(env, "GL-BOOL-VEC3", (GLenum) GL_BOOL_VEC3, "GL_BOOL_VEC3");
#endif
#if defined(GL_BOOL_VEC3_ARB)
defconsti(env, "GL-BOOL-VEC3-ARB", (GLenum) GL_BOOL_VEC3_ARB, "GL_BOOL_VEC3_ARB");
#endif
#if defined(GL_BOOL_VEC4)
defconsti(env, "GL-BOOL-VEC4", (GLenum) GL_BOOL_VEC4, "GL_BOOL_VEC4");
#endif
#if defined(GL_BOOL_VEC4_ARB)
defconsti(env, "GL-BOOL-VEC4-ARB", (GLenum) GL_BOOL_VEC4_ARB, "GL_BOOL_VEC4_ARB");
#endif
#if defined(GL_FLOAT_MAT2)
defconsti(env, "GL-FLOAT-MAT2", (GLenum) GL_FLOAT_MAT2, "GL_FLOAT_MAT2");
#endif
#if defined(GL_FLOAT_MAT2_ARB)
defconsti(env, "GL-FLOAT-MAT2-ARB", (GLenum) GL_FLOAT_MAT2_ARB, "GL_FLOAT_MAT2_ARB");
#endif
#if defined(GL_FLOAT_MAT3)
defconsti(env, "GL-FLOAT-MAT3", (GLenum) GL_FLOAT_MAT3, "GL_FLOAT_MAT3");
#endif
#if defined(GL_FLOAT_MAT3_ARB)
defconsti(env, "GL-FLOAT-MAT3-ARB", (GLenum) GL_FLOAT_MAT3_ARB, "GL_FLOAT_MAT3_ARB");
#endif
#if defined(GL_FLOAT_MAT4)
defconsti(env, "GL-FLOAT-MAT4", (GLenum) GL_FLOAT_MAT4, "GL_FLOAT_MAT4");
#endif
#if defined(GL_FLOAT_MAT4_ARB)
defconsti(env, "GL-FLOAT-MAT4-ARB", (GLenum) GL_FLOAT_MAT4_ARB, "GL_FLOAT_MAT4_ARB");
#endif
#if defined(GL_FLOAT_MAT2x3)
defconsti(env, "GL-FLOAT-MAT2x3", (GLenum) GL_FLOAT_MAT2x3, "GL_FLOAT_MAT2x3");
#endif
#if defined(GL_FLOAT_MAT2x3_NV)
defconsti(env, "GL-FLOAT-MAT2x3-NV", (GLenum) GL_FLOAT_MAT2x3_NV, "GL_FLOAT_MAT2x3_NV");
#endif
#if defined(GL_FLOAT_MAT2x4)
defconsti(env, "GL-FLOAT-MAT2x4", (GLenum) GL_FLOAT_MAT2x4, "GL_FLOAT_MAT2x4");
#endif
#if defined(GL_FLOAT_MAT2x4_NV)
defconsti(env, "GL-FLOAT-MAT2x4-NV", (GLenum) GL_FLOAT_MAT2x4_NV, "GL_FLOAT_MAT2x4_NV");
#endif
#if defined(GL_FLOAT_MAT3x2)
defconsti(env, "GL-FLOAT-MAT3x2", (GLenum) GL_FLOAT_MAT3x2, "GL_FLOAT_MAT3x2");
#endif
#if defined(GL_FLOAT_MAT3x2_NV)
defconsti(env, "GL-FLOAT-MAT3x2-NV", (GLenum) GL_FLOAT_MAT3x2_NV, "GL_FLOAT_MAT3x2_NV");
#endif
#if defined(GL_FLOAT_MAT3x4)
defconsti(env, "GL-FLOAT-MAT3x4", (GLenum) GL_FLOAT_MAT3x4, "GL_FLOAT_MAT3x4");
#endif
#if defined(GL_FLOAT_MAT3x4_NV)
defconsti(env, "GL-FLOAT-MAT3x4-NV", (GLenum) GL_FLOAT_MAT3x4_NV, "GL_FLOAT_MAT3x4_NV");
#endif
#if defined(GL_FLOAT_MAT4x2)
defconsti(env, "GL-FLOAT-MAT4x2", (GLenum) GL_FLOAT_MAT4x2, "GL_FLOAT_MAT4x2");
#endif
#if defined(GL_FLOAT_MAT4x2_NV)
defconsti(env, "GL-FLOAT-MAT4x2-NV", (GLenum) GL_FLOAT_MAT4x2_NV, "GL_FLOAT_MAT4x2_NV");
#endif
#if defined(GL_FLOAT_MAT4x3)
defconsti(env, "GL-FLOAT-MAT4x3", (GLenum) GL_FLOAT_MAT4x3, "GL_FLOAT_MAT4x3");
#endif
#if defined(GL_FLOAT_MAT4x3_NV)
defconsti(env, "GL-FLOAT-MAT4x3-NV", (GLenum) GL_FLOAT_MAT4x3_NV, "GL_FLOAT_MAT4x3_NV");
#endif
#if defined(GL_DOUBLE_MAT2)
defconsti(env, "GL-DOUBLE-MAT2", (GLenum) GL_DOUBLE_MAT2, "GL_DOUBLE_MAT2");
#endif
#if defined(GL_DOUBLE_MAT3)
defconsti(env, "GL-DOUBLE-MAT3", (GLenum) GL_DOUBLE_MAT3, "GL_DOUBLE_MAT3");
#endif
#if defined(GL_DOUBLE_MAT4)
defconsti(env, "GL-DOUBLE-MAT4", (GLenum) GL_DOUBLE_MAT4, "GL_DOUBLE_MAT4");
#endif
#if defined(GL_DOUBLE_MAT2x3)
defconsti(env, "GL-DOUBLE-MAT2x3", (GLenum) GL_DOUBLE_MAT2x3, "GL_DOUBLE_MAT2x3");
#endif
#if defined(GL_DOUBLE_MAT2x4)
defconsti(env, "GL-DOUBLE-MAT2x4", (GLenum) GL_DOUBLE_MAT2x4, "GL_DOUBLE_MAT2x4");
#endif
#if defined(GL_DOUBLE_MAT3x2)
defconsti(env, "GL-DOUBLE-MAT3x2", (GLenum) GL_DOUBLE_MAT3x2, "GL_DOUBLE_MAT3x2");
#endif
#if defined(GL_DOUBLE_MAT3x4)
defconsti(env, "GL-DOUBLE-MAT3x4", (GLenum) GL_DOUBLE_MAT3x4, "GL_DOUBLE_MAT3x4");
#endif
#if defined(GL_DOUBLE_MAT4x2)
defconsti(env, "GL-DOUBLE-MAT4x2", (GLenum) GL_DOUBLE_MAT4x2, "GL_DOUBLE_MAT4x2");
#endif
#if defined(GL_DOUBLE_MAT4x3)
defconsti(env, "GL-DOUBLE-MAT4x3", (GLenum) GL_DOUBLE_MAT4x3, "GL_DOUBLE_MAT4x3");
#endif
#if defined(GL_SAMPLER_1D)
defconsti(env, "GL-SAMPLER-1D", (GLenum) GL_SAMPLER_1D, "GL_SAMPLER_1D");
#endif
#if defined(GL_SAMPLER_1D_ARB)
defconsti(env, "GL-SAMPLER-1D-ARB", (GLenum) GL_SAMPLER_1D_ARB, "GL_SAMPLER_1D_ARB");
#endif
#if defined(GL_SAMPLER_2D)
defconsti(env, "GL-SAMPLER-2D", (GLenum) GL_SAMPLER_2D, "GL_SAMPLER_2D");
#endif
#if defined(GL_SAMPLER_2D_ARB)
defconsti(env, "GL-SAMPLER-2D-ARB", (GLenum) GL_SAMPLER_2D_ARB, "GL_SAMPLER_2D_ARB");
#endif
#if defined(GL_SAMPLER_3D)
defconsti(env, "GL-SAMPLER-3D", (GLenum) GL_SAMPLER_3D, "GL_SAMPLER_3D");
#endif
#if defined(GL_SAMPLER_3D_ARB)
defconsti(env, "GL-SAMPLER-3D-ARB", (GLenum) GL_SAMPLER_3D_ARB, "GL_SAMPLER_3D_ARB");
#endif
#if defined(GL_SAMPLER_3D_OES)
defconsti(env, "GL-SAMPLER-3D-OES", (GLenum) GL_SAMPLER_3D_OES, "GL_SAMPLER_3D_OES");
#endif
#if defined(GL_SAMPLER_CUBE)
defconsti(env, "GL-SAMPLER-CUBE", (GLenum) GL_SAMPLER_CUBE, "GL_SAMPLER_CUBE");
#endif
#if defined(GL_SAMPLER_CUBE_ARB)
defconsti(env, "GL-SAMPLER-CUBE-ARB", (GLenum) GL_SAMPLER_CUBE_ARB, "GL_SAMPLER_CUBE_ARB");
#endif
#if defined(GL_SAMPLER_1D_SHADOW)
defconsti(env, "GL-SAMPLER-1D-SHADOW", (GLenum) GL_SAMPLER_1D_SHADOW, "GL_SAMPLER_1D_SHADOW");
#endif
#if defined(GL_SAMPLER_1D_SHADOW_ARB)
defconsti(env, "GL-SAMPLER-1D-SHADOW-ARB", (GLenum) GL_SAMPLER_1D_SHADOW_ARB, "GL_SAMPLER_1D_SHADOW_ARB");
#endif
#if defined(GL_SAMPLER_2D_SHADOW)
defconsti(env, "GL-SAMPLER-2D-SHADOW", (GLenum) GL_SAMPLER_2D_SHADOW, "GL_SAMPLER_2D_SHADOW");
#endif
#if defined(GL_SAMPLER_2D_SHADOW_ARB)
defconsti(env, "GL-SAMPLER-2D-SHADOW-ARB", (GLenum) GL_SAMPLER_2D_SHADOW_ARB, "GL_SAMPLER_2D_SHADOW_ARB");
#endif
#if defined(GL_SAMPLER_2D_SHADOW_EXT)
defconsti(env, "GL-SAMPLER-2D-SHADOW-EXT", (GLenum) GL_SAMPLER_2D_SHADOW_EXT, "GL_SAMPLER_2D_SHADOW_EXT");
#endif
#if defined(GL_SAMPLER_CUBE_MAP_ARRAY)
defconsti(env, "GL-SAMPLER-CUBE-MAP-ARRAY", (GLenum) GL_SAMPLER_CUBE_MAP_ARRAY, "GL_SAMPLER_CUBE_MAP_ARRAY");
#endif
#if defined(GL_SAMPLER_1D_ARRAY_SHADOW)
defconsti(env, "GL-SAMPLER-1D-ARRAY-SHADOW", (GLenum) GL_SAMPLER_1D_ARRAY_SHADOW, "GL_SAMPLER_1D_ARRAY_SHADOW");
#endif
#if defined(GL_SAMPLER_2D_ARRAY_SHADOW)
defconsti(env, "GL-SAMPLER-2D-ARRAY-SHADOW", (GLenum) GL_SAMPLER_2D_ARRAY_SHADOW, "GL_SAMPLER_2D_ARRAY_SHADOW");
#endif
#if defined(GL_SAMPLER_2D_MULTISAMPLE)
defconsti(env, "GL-SAMPLER-2D-MULTISAMPLE", (GLenum) GL_SAMPLER_2D_MULTISAMPLE, "GL_SAMPLER_2D_MULTISAMPLE");
#endif
#if defined(GL_SAMPLER_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-SAMPLER-2D-MULTISAMPLE-ARRAY", (GLenum) GL_SAMPLER_2D_MULTISAMPLE_ARRAY, "GL_SAMPLER_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_SAMPLER_CUBE_SHADOW)
defconsti(env, "GL-SAMPLER-CUBE-SHADOW", (GLenum) GL_SAMPLER_CUBE_SHADOW, "GL_SAMPLER_CUBE_SHADOW");
#endif
#if defined(GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW)
defconsti(env, "GL-SAMPLER-CUBE-MAP-ARRAY-SHADOW", (GLenum) GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW, "GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW");
#endif
#if defined(GL_SAMPLER_BUFFER)
defconsti(env, "GL-SAMPLER-BUFFER", (GLenum) GL_SAMPLER_BUFFER, "GL_SAMPLER_BUFFER");
#endif
#if defined(GL_SAMPLER_2D_RECT)
defconsti(env, "GL-SAMPLER-2D-RECT", (GLenum) GL_SAMPLER_2D_RECT, "GL_SAMPLER_2D_RECT");
#endif
#if defined(GL_SAMPLER_2D_RECT_ARB)
defconsti(env, "GL-SAMPLER-2D-RECT-ARB", (GLenum) GL_SAMPLER_2D_RECT_ARB, "GL_SAMPLER_2D_RECT_ARB");
#endif
#if defined(GL_SAMPLER_2D_RECT_SHADOW)
defconsti(env, "GL-SAMPLER-2D-RECT-SHADOW", (GLenum) GL_SAMPLER_2D_RECT_SHADOW, "GL_SAMPLER_2D_RECT_SHADOW");
#endif
#if defined(GL_SAMPLER_2D_RECT_SHADOW_ARB)
defconsti(env, "GL-SAMPLER-2D-RECT-SHADOW-ARB", (GLenum) GL_SAMPLER_2D_RECT_SHADOW_ARB, "GL_SAMPLER_2D_RECT_SHADOW_ARB");
#endif
#if defined(GL_INT_SAMPLER_1D)
defconsti(env, "GL-INT-SAMPLER-1D", (GLenum) GL_INT_SAMPLER_1D, "GL_INT_SAMPLER_1D");
#endif
#if defined(GL_INT_SAMPLER_2D)
defconsti(env, "GL-INT-SAMPLER-2D", (GLenum) GL_INT_SAMPLER_2D, "GL_INT_SAMPLER_2D");
#endif
#if defined(GL_INT_SAMPLER_3D)
defconsti(env, "GL-INT-SAMPLER-3D", (GLenum) GL_INT_SAMPLER_3D, "GL_INT_SAMPLER_3D");
#endif
#if defined(GL_INT_SAMPLER_CUBE)
defconsti(env, "GL-INT-SAMPLER-CUBE", (GLenum) GL_INT_SAMPLER_CUBE, "GL_INT_SAMPLER_CUBE");
#endif
#if defined(GL_INT_SAMPLER_1D_ARRAY)
defconsti(env, "GL-INT-SAMPLER-1D-ARRAY", (GLenum) GL_INT_SAMPLER_1D_ARRAY, "GL_INT_SAMPLER_1D_ARRAY");
#endif
#if defined(GL_INT_SAMPLER_2D_ARRAY)
defconsti(env, "GL-INT-SAMPLER-2D-ARRAY", (GLenum) GL_INT_SAMPLER_2D_ARRAY, "GL_INT_SAMPLER_2D_ARRAY");
#endif
#if defined(GL_INT_SAMPLER_CUBE_MAP_ARRAY)
defconsti(env, "GL-INT-SAMPLER-CUBE-MAP-ARRAY", (GLenum) GL_INT_SAMPLER_CUBE_MAP_ARRAY, "GL_INT_SAMPLER_CUBE_MAP_ARRAY");
#endif
#if defined(GL_INT_SAMPLER_2D_MULTISAMPLE)
defconsti(env, "GL-INT-SAMPLER-2D-MULTISAMPLE", (GLenum) GL_INT_SAMPLER_2D_MULTISAMPLE, "GL_INT_SAMPLER_2D_MULTISAMPLE");
#endif
#if defined(GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-INT-SAMPLER-2D-MULTISAMPLE-ARRAY", (GLenum) GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY, "GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_INT_SAMPLER_BUFFER)
defconsti(env, "GL-INT-SAMPLER-BUFFER", (GLenum) GL_INT_SAMPLER_BUFFER, "GL_INT_SAMPLER_BUFFER");
#endif
#if defined(GL_INT_SAMPLER_2D_RECT)
defconsti(env, "GL-INT-SAMPLER-2D-RECT", (GLenum) GL_INT_SAMPLER_2D_RECT, "GL_INT_SAMPLER_2D_RECT");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_1D)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-1D", (GLenum) GL_UNSIGNED_INT_SAMPLER_1D, "GL_UNSIGNED_INT_SAMPLER_1D");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D, "GL_UNSIGNED_INT_SAMPLER_2D");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_3D)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-3D", (GLenum) GL_UNSIGNED_INT_SAMPLER_3D, "GL_UNSIGNED_INT_SAMPLER_3D");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_CUBE)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-CUBE", (GLenum) GL_UNSIGNED_INT_SAMPLER_CUBE, "GL_UNSIGNED_INT_SAMPLER_CUBE");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_1D_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-1D-ARRAY", (GLenum) GL_UNSIGNED_INT_SAMPLER_1D_ARRAY, "GL_UNSIGNED_INT_SAMPLER_1D_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-ARRAY", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_ARRAY, "GL_UNSIGNED_INT_SAMPLER_2D_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-CUBE-MAP-ARRAY", (GLenum) GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY, "GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-MULTISAMPLE", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE, "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-MULTISAMPLE-ARRAY", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY, "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_BUFFER)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-BUFFER", (GLenum) GL_UNSIGNED_INT_SAMPLER_BUFFER, "GL_UNSIGNED_INT_SAMPLER_BUFFER");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_RECT)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-RECT", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_RECT, "GL_UNSIGNED_INT_SAMPLER_2D_RECT");
#endif
#if defined(GL_IMAGE_1D)
defconsti(env, "GL-IMAGE-1D", (GLenum) GL_IMAGE_1D, "GL_IMAGE_1D");
#endif
#if defined(GL_IMAGE_2D)
defconsti(env, "GL-IMAGE-2D", (GLenum) GL_IMAGE_2D, "GL_IMAGE_2D");
#endif
#if defined(GL_IMAGE_3D)
defconsti(env, "GL-IMAGE-3D", (GLenum) GL_IMAGE_3D, "GL_IMAGE_3D");
#endif
#if defined(GL_IMAGE_2D_RECT)
defconsti(env, "GL-IMAGE-2D-RECT", (GLenum) GL_IMAGE_2D_RECT, "GL_IMAGE_2D_RECT");
#endif
#if defined(GL_IMAGE_CUBE)
defconsti(env, "GL-IMAGE-CUBE", (GLenum) GL_IMAGE_CUBE, "GL_IMAGE_CUBE");
#endif
#if defined(GL_IMAGE_BUFFER)
defconsti(env, "GL-IMAGE-BUFFER", (GLenum) GL_IMAGE_BUFFER, "GL_IMAGE_BUFFER");
#endif
#if defined(GL_IMAGE_1D_ARRAY)
defconsti(env, "GL-IMAGE-1D-ARRAY", (GLenum) GL_IMAGE_1D_ARRAY, "GL_IMAGE_1D_ARRAY");
#endif
#if defined(GL_IMAGE_2D_ARRAY)
defconsti(env, "GL-IMAGE-2D-ARRAY", (GLenum) GL_IMAGE_2D_ARRAY, "GL_IMAGE_2D_ARRAY");
#endif
#if defined(GL_IMAGE_CUBE_MAP_ARRAY)
defconsti(env, "GL-IMAGE-CUBE-MAP-ARRAY", (GLenum) GL_IMAGE_CUBE_MAP_ARRAY, "GL_IMAGE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_IMAGE_2D_MULTISAMPLE)
defconsti(env, "GL-IMAGE-2D-MULTISAMPLE", (GLenum) GL_IMAGE_2D_MULTISAMPLE, "GL_IMAGE_2D_MULTISAMPLE");
#endif
#if defined(GL_IMAGE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-IMAGE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_IMAGE_2D_MULTISAMPLE_ARRAY, "GL_IMAGE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_INT_IMAGE_1D)
defconsti(env, "GL-INT-IMAGE-1D", (GLenum) GL_INT_IMAGE_1D, "GL_INT_IMAGE_1D");
#endif
#if defined(GL_INT_IMAGE_2D)
defconsti(env, "GL-INT-IMAGE-2D", (GLenum) GL_INT_IMAGE_2D, "GL_INT_IMAGE_2D");
#endif
#if defined(GL_INT_IMAGE_3D)
defconsti(env, "GL-INT-IMAGE-3D", (GLenum) GL_INT_IMAGE_3D, "GL_INT_IMAGE_3D");
#endif
#if defined(GL_INT_IMAGE_2D_RECT)
defconsti(env, "GL-INT-IMAGE-2D-RECT", (GLenum) GL_INT_IMAGE_2D_RECT, "GL_INT_IMAGE_2D_RECT");
#endif
#if defined(GL_INT_IMAGE_CUBE)
defconsti(env, "GL-INT-IMAGE-CUBE", (GLenum) GL_INT_IMAGE_CUBE, "GL_INT_IMAGE_CUBE");
#endif
#if defined(GL_INT_IMAGE_BUFFER)
defconsti(env, "GL-INT-IMAGE-BUFFER", (GLenum) GL_INT_IMAGE_BUFFER, "GL_INT_IMAGE_BUFFER");
#endif
#if defined(GL_INT_IMAGE_1D_ARRAY)
defconsti(env, "GL-INT-IMAGE-1D-ARRAY", (GLenum) GL_INT_IMAGE_1D_ARRAY, "GL_INT_IMAGE_1D_ARRAY");
#endif
#if defined(GL_INT_IMAGE_2D_ARRAY)
defconsti(env, "GL-INT-IMAGE-2D-ARRAY", (GLenum) GL_INT_IMAGE_2D_ARRAY, "GL_INT_IMAGE_2D_ARRAY");
#endif
#if defined(GL_INT_IMAGE_CUBE_MAP_ARRAY)
defconsti(env, "GL-INT-IMAGE-CUBE-MAP-ARRAY", (GLenum) GL_INT_IMAGE_CUBE_MAP_ARRAY, "GL_INT_IMAGE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_INT_IMAGE_2D_MULTISAMPLE)
defconsti(env, "GL-INT-IMAGE-2D-MULTISAMPLE", (GLenum) GL_INT_IMAGE_2D_MULTISAMPLE, "GL_INT_IMAGE_2D_MULTISAMPLE");
#endif
#if defined(GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-INT-IMAGE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY, "GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_1D)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-1D", (GLenum) GL_UNSIGNED_INT_IMAGE_1D, "GL_UNSIGNED_INT_IMAGE_1D");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D", (GLenum) GL_UNSIGNED_INT_IMAGE_2D, "GL_UNSIGNED_INT_IMAGE_2D");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_3D)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-3D", (GLenum) GL_UNSIGNED_INT_IMAGE_3D, "GL_UNSIGNED_INT_IMAGE_3D");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_RECT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-RECT", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_RECT, "GL_UNSIGNED_INT_IMAGE_2D_RECT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_CUBE)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-CUBE", (GLenum) GL_UNSIGNED_INT_IMAGE_CUBE, "GL_UNSIGNED_INT_IMAGE_CUBE");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_BUFFER)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-BUFFER", (GLenum) GL_UNSIGNED_INT_IMAGE_BUFFER, "GL_UNSIGNED_INT_IMAGE_BUFFER");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_1D_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-1D-ARRAY", (GLenum) GL_UNSIGNED_INT_IMAGE_1D_ARRAY, "GL_UNSIGNED_INT_IMAGE_1D_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-ARRAY", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_ARRAY, "GL_UNSIGNED_INT_IMAGE_2D_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-CUBE-MAP-ARRAY", (GLenum) GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY, "GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-MULTISAMPLE", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE, "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY, "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_INT64_ARB)
defconsti(env, "GL-INT64-ARB", (GLenum) GL_INT64_ARB, "GL_INT64_ARB");
#endif
#if defined(GL_INT64_NV)
defconsti(env, "GL-INT64-NV", (GLenum) GL_INT64_NV, "GL_INT64_NV");
#endif
#if defined(GL_INT64_VEC2_ARB)
defconsti(env, "GL-INT64-VEC2-ARB", (GLenum) GL_INT64_VEC2_ARB, "GL_INT64_VEC2_ARB");
#endif
#if defined(GL_INT64_VEC3_ARB)
defconsti(env, "GL-INT64-VEC3-ARB", (GLenum) GL_INT64_VEC3_ARB, "GL_INT64_VEC3_ARB");
#endif
#if defined(GL_INT64_VEC4_ARB)
defconsti(env, "GL-INT64-VEC4-ARB", (GLenum) GL_INT64_VEC4_ARB, "GL_INT64_VEC4_ARB");
#endif
#if defined(GL_UNSIGNED_INT64_ARB)
defconsti(env, "GL-UNSIGNED-INT64-ARB", (GLenum) GL_UNSIGNED_INT64_ARB, "GL_UNSIGNED_INT64_ARB");
#endif
#if defined(GL_UNSIGNED_INT64_NV)
defconsti(env, "GL-UNSIGNED-INT64-NV", (GLenum) GL_UNSIGNED_INT64_NV, "GL_UNSIGNED_INT64_NV");
#endif
#if defined(GL_UNSIGNED_INT64_VEC2_ARB)
defconsti(env, "GL-UNSIGNED-INT64-VEC2-ARB", (GLenum) GL_UNSIGNED_INT64_VEC2_ARB, "GL_UNSIGNED_INT64_VEC2_ARB");
#endif
#if defined(GL_UNSIGNED_INT64_VEC3_ARB)
defconsti(env, "GL-UNSIGNED-INT64-VEC3-ARB", (GLenum) GL_UNSIGNED_INT64_VEC3_ARB, "GL_UNSIGNED_INT64_VEC3_ARB");
#endif
#if defined(GL_UNSIGNED_INT64_VEC4_ARB)
defconsti(env, "GL-UNSIGNED-INT64-VEC4-ARB", (GLenum) GL_UNSIGNED_INT64_VEC4_ARB, "GL_UNSIGNED_INT64_VEC4_ARB");
#endif
#if defined(GL_INT)
defconsti(env, "GL-INT", (GLenum) GL_INT, "GL_INT");
#endif
#if defined(GL_UNSIGNED_INT)
defconsti(env, "GL-UNSIGNED-INT", (GLenum) GL_UNSIGNED_INT, "GL_UNSIGNED_INT");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_DOUBLE)
defconsti(env, "GL-DOUBLE", (GLenum) GL_DOUBLE, "GL_DOUBLE");
#endif
#if defined(GL_FLOAT_VEC2)
defconsti(env, "GL-FLOAT-VEC2", (GLenum) GL_FLOAT_VEC2, "GL_FLOAT_VEC2");
#endif
#if defined(GL_FLOAT_VEC3)
defconsti(env, "GL-FLOAT-VEC3", (GLenum) GL_FLOAT_VEC3, "GL_FLOAT_VEC3");
#endif
#if defined(GL_FLOAT_VEC4)
defconsti(env, "GL-FLOAT-VEC4", (GLenum) GL_FLOAT_VEC4, "GL_FLOAT_VEC4");
#endif
#if defined(GL_INT_VEC2)
defconsti(env, "GL-INT-VEC2", (GLenum) GL_INT_VEC2, "GL_INT_VEC2");
#endif
#if defined(GL_INT_VEC3)
defconsti(env, "GL-INT-VEC3", (GLenum) GL_INT_VEC3, "GL_INT_VEC3");
#endif
#if defined(GL_INT_VEC4)
defconsti(env, "GL-INT-VEC4", (GLenum) GL_INT_VEC4, "GL_INT_VEC4");
#endif
#if defined(GL_BOOL)
defconsti(env, "GL-BOOL", (GLenum) GL_BOOL, "GL_BOOL");
#endif
#if defined(GL_BOOL_VEC2)
defconsti(env, "GL-BOOL-VEC2", (GLenum) GL_BOOL_VEC2, "GL_BOOL_VEC2");
#endif
#if defined(GL_BOOL_VEC3)
defconsti(env, "GL-BOOL-VEC3", (GLenum) GL_BOOL_VEC3, "GL_BOOL_VEC3");
#endif
#if defined(GL_BOOL_VEC4)
defconsti(env, "GL-BOOL-VEC4", (GLenum) GL_BOOL_VEC4, "GL_BOOL_VEC4");
#endif
#if defined(GL_FLOAT_MAT2)
defconsti(env, "GL-FLOAT-MAT2", (GLenum) GL_FLOAT_MAT2, "GL_FLOAT_MAT2");
#endif
#if defined(GL_FLOAT_MAT3)
defconsti(env, "GL-FLOAT-MAT3", (GLenum) GL_FLOAT_MAT3, "GL_FLOAT_MAT3");
#endif
#if defined(GL_FLOAT_MAT4)
defconsti(env, "GL-FLOAT-MAT4", (GLenum) GL_FLOAT_MAT4, "GL_FLOAT_MAT4");
#endif
#if defined(GL_SAMPLER_1D)
defconsti(env, "GL-SAMPLER-1D", (GLenum) GL_SAMPLER_1D, "GL_SAMPLER_1D");
#endif
#if defined(GL_SAMPLER_2D)
defconsti(env, "GL-SAMPLER-2D", (GLenum) GL_SAMPLER_2D, "GL_SAMPLER_2D");
#endif
#if defined(GL_SAMPLER_3D)
defconsti(env, "GL-SAMPLER-3D", (GLenum) GL_SAMPLER_3D, "GL_SAMPLER_3D");
#endif
#if defined(GL_SAMPLER_CUBE)
defconsti(env, "GL-SAMPLER-CUBE", (GLenum) GL_SAMPLER_CUBE, "GL_SAMPLER_CUBE");
#endif
#if defined(GL_SAMPLER_1D_SHADOW)
defconsti(env, "GL-SAMPLER-1D-SHADOW", (GLenum) GL_SAMPLER_1D_SHADOW, "GL_SAMPLER_1D_SHADOW");
#endif
#if defined(GL_SAMPLER_2D_SHADOW)
defconsti(env, "GL-SAMPLER-2D-SHADOW", (GLenum) GL_SAMPLER_2D_SHADOW, "GL_SAMPLER_2D_SHADOW");
#endif
#if defined(GL_SAMPLER_2D_RECT)
defconsti(env, "GL-SAMPLER-2D-RECT", (GLenum) GL_SAMPLER_2D_RECT, "GL_SAMPLER_2D_RECT");
#endif
#if defined(GL_SAMPLER_2D_RECT_SHADOW)
defconsti(env, "GL-SAMPLER-2D-RECT-SHADOW", (GLenum) GL_SAMPLER_2D_RECT_SHADOW, "GL_SAMPLER_2D_RECT_SHADOW");
#endif
#if defined(GL_FLOAT_MAT2x3)
defconsti(env, "GL-FLOAT-MAT2x3", (GLenum) GL_FLOAT_MAT2x3, "GL_FLOAT_MAT2x3");
#endif
#if defined(GL_FLOAT_MAT2x4)
defconsti(env, "GL-FLOAT-MAT2x4", (GLenum) GL_FLOAT_MAT2x4, "GL_FLOAT_MAT2x4");
#endif
#if defined(GL_FLOAT_MAT3x2)
defconsti(env, "GL-FLOAT-MAT3x2", (GLenum) GL_FLOAT_MAT3x2, "GL_FLOAT_MAT3x2");
#endif
#if defined(GL_FLOAT_MAT3x4)
defconsti(env, "GL-FLOAT-MAT3x4", (GLenum) GL_FLOAT_MAT3x4, "GL_FLOAT_MAT3x4");
#endif
#if defined(GL_FLOAT_MAT4x2)
defconsti(env, "GL-FLOAT-MAT4x2", (GLenum) GL_FLOAT_MAT4x2, "GL_FLOAT_MAT4x2");
#endif
#if defined(GL_FLOAT_MAT4x3)
defconsti(env, "GL-FLOAT-MAT4x3", (GLenum) GL_FLOAT_MAT4x3, "GL_FLOAT_MAT4x3");
#endif
#if defined(GL_SAMPLER_1D_ARRAY)
defconsti(env, "GL-SAMPLER-1D-ARRAY", (GLenum) GL_SAMPLER_1D_ARRAY, "GL_SAMPLER_1D_ARRAY");
#endif
#if defined(GL_SAMPLER_2D_ARRAY)
defconsti(env, "GL-SAMPLER-2D-ARRAY", (GLenum) GL_SAMPLER_2D_ARRAY, "GL_SAMPLER_2D_ARRAY");
#endif
#if defined(GL_SAMPLER_BUFFER)
defconsti(env, "GL-SAMPLER-BUFFER", (GLenum) GL_SAMPLER_BUFFER, "GL_SAMPLER_BUFFER");
#endif
#if defined(GL_SAMPLER_1D_ARRAY_SHADOW)
defconsti(env, "GL-SAMPLER-1D-ARRAY-SHADOW", (GLenum) GL_SAMPLER_1D_ARRAY_SHADOW, "GL_SAMPLER_1D_ARRAY_SHADOW");
#endif
#if defined(GL_SAMPLER_2D_ARRAY_SHADOW)
defconsti(env, "GL-SAMPLER-2D-ARRAY-SHADOW", (GLenum) GL_SAMPLER_2D_ARRAY_SHADOW, "GL_SAMPLER_2D_ARRAY_SHADOW");
#endif
#if defined(GL_SAMPLER_CUBE_SHADOW)
defconsti(env, "GL-SAMPLER-CUBE-SHADOW", (GLenum) GL_SAMPLER_CUBE_SHADOW, "GL_SAMPLER_CUBE_SHADOW");
#endif
#if defined(GL_UNSIGNED_INT_VEC2)
defconsti(env, "GL-UNSIGNED-INT-VEC2", (GLenum) GL_UNSIGNED_INT_VEC2, "GL_UNSIGNED_INT_VEC2");
#endif
#if defined(GL_UNSIGNED_INT_VEC3)
defconsti(env, "GL-UNSIGNED-INT-VEC3", (GLenum) GL_UNSIGNED_INT_VEC3, "GL_UNSIGNED_INT_VEC3");
#endif
#if defined(GL_UNSIGNED_INT_VEC4)
defconsti(env, "GL-UNSIGNED-INT-VEC4", (GLenum) GL_UNSIGNED_INT_VEC4, "GL_UNSIGNED_INT_VEC4");
#endif
#if defined(GL_INT_SAMPLER_1D)
defconsti(env, "GL-INT-SAMPLER-1D", (GLenum) GL_INT_SAMPLER_1D, "GL_INT_SAMPLER_1D");
#endif
#if defined(GL_INT_SAMPLER_2D)
defconsti(env, "GL-INT-SAMPLER-2D", (GLenum) GL_INT_SAMPLER_2D, "GL_INT_SAMPLER_2D");
#endif
#if defined(GL_INT_SAMPLER_3D)
defconsti(env, "GL-INT-SAMPLER-3D", (GLenum) GL_INT_SAMPLER_3D, "GL_INT_SAMPLER_3D");
#endif
#if defined(GL_INT_SAMPLER_CUBE)
defconsti(env, "GL-INT-SAMPLER-CUBE", (GLenum) GL_INT_SAMPLER_CUBE, "GL_INT_SAMPLER_CUBE");
#endif
#if defined(GL_INT_SAMPLER_2D_RECT)
defconsti(env, "GL-INT-SAMPLER-2D-RECT", (GLenum) GL_INT_SAMPLER_2D_RECT, "GL_INT_SAMPLER_2D_RECT");
#endif
#if defined(GL_INT_SAMPLER_1D_ARRAY)
defconsti(env, "GL-INT-SAMPLER-1D-ARRAY", (GLenum) GL_INT_SAMPLER_1D_ARRAY, "GL_INT_SAMPLER_1D_ARRAY");
#endif
#if defined(GL_INT_SAMPLER_2D_ARRAY)
defconsti(env, "GL-INT-SAMPLER-2D-ARRAY", (GLenum) GL_INT_SAMPLER_2D_ARRAY, "GL_INT_SAMPLER_2D_ARRAY");
#endif
#if defined(GL_INT_SAMPLER_BUFFER)
defconsti(env, "GL-INT-SAMPLER-BUFFER", (GLenum) GL_INT_SAMPLER_BUFFER, "GL_INT_SAMPLER_BUFFER");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_1D)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-1D", (GLenum) GL_UNSIGNED_INT_SAMPLER_1D, "GL_UNSIGNED_INT_SAMPLER_1D");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D, "GL_UNSIGNED_INT_SAMPLER_2D");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_3D)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-3D", (GLenum) GL_UNSIGNED_INT_SAMPLER_3D, "GL_UNSIGNED_INT_SAMPLER_3D");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_CUBE)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-CUBE", (GLenum) GL_UNSIGNED_INT_SAMPLER_CUBE, "GL_UNSIGNED_INT_SAMPLER_CUBE");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_RECT)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-RECT", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_RECT, "GL_UNSIGNED_INT_SAMPLER_2D_RECT");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_1D_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-1D-ARRAY", (GLenum) GL_UNSIGNED_INT_SAMPLER_1D_ARRAY, "GL_UNSIGNED_INT_SAMPLER_1D_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-ARRAY", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_ARRAY, "GL_UNSIGNED_INT_SAMPLER_2D_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_BUFFER)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-BUFFER", (GLenum) GL_UNSIGNED_INT_SAMPLER_BUFFER, "GL_UNSIGNED_INT_SAMPLER_BUFFER");
#endif
#if defined(GL_DOUBLE_MAT2)
defconsti(env, "GL-DOUBLE-MAT2", (GLenum) GL_DOUBLE_MAT2, "GL_DOUBLE_MAT2");
#endif
#if defined(GL_DOUBLE_MAT3)
defconsti(env, "GL-DOUBLE-MAT3", (GLenum) GL_DOUBLE_MAT3, "GL_DOUBLE_MAT3");
#endif
#if defined(GL_DOUBLE_MAT4)
defconsti(env, "GL-DOUBLE-MAT4", (GLenum) GL_DOUBLE_MAT4, "GL_DOUBLE_MAT4");
#endif
#if defined(GL_DOUBLE_MAT2x3)
defconsti(env, "GL-DOUBLE-MAT2x3", (GLenum) GL_DOUBLE_MAT2x3, "GL_DOUBLE_MAT2x3");
#endif
#if defined(GL_DOUBLE_MAT2x4)
defconsti(env, "GL-DOUBLE-MAT2x4", (GLenum) GL_DOUBLE_MAT2x4, "GL_DOUBLE_MAT2x4");
#endif
#if defined(GL_DOUBLE_MAT3x2)
defconsti(env, "GL-DOUBLE-MAT3x2", (GLenum) GL_DOUBLE_MAT3x2, "GL_DOUBLE_MAT3x2");
#endif
#if defined(GL_DOUBLE_MAT3x4)
defconsti(env, "GL-DOUBLE-MAT3x4", (GLenum) GL_DOUBLE_MAT3x4, "GL_DOUBLE_MAT3x4");
#endif
#if defined(GL_DOUBLE_MAT4x2)
defconsti(env, "GL-DOUBLE-MAT4x2", (GLenum) GL_DOUBLE_MAT4x2, "GL_DOUBLE_MAT4x2");
#endif
#if defined(GL_DOUBLE_MAT4x3)
defconsti(env, "GL-DOUBLE-MAT4x3", (GLenum) GL_DOUBLE_MAT4x3, "GL_DOUBLE_MAT4x3");
#endif
#if defined(GL_DOUBLE_VEC2)
defconsti(env, "GL-DOUBLE-VEC2", (GLenum) GL_DOUBLE_VEC2, "GL_DOUBLE_VEC2");
#endif
#if defined(GL_DOUBLE_VEC3)
defconsti(env, "GL-DOUBLE-VEC3", (GLenum) GL_DOUBLE_VEC3, "GL_DOUBLE_VEC3");
#endif
#if defined(GL_DOUBLE_VEC4)
defconsti(env, "GL-DOUBLE-VEC4", (GLenum) GL_DOUBLE_VEC4, "GL_DOUBLE_VEC4");
#endif
#if defined(GL_SAMPLER_CUBE_MAP_ARRAY)
defconsti(env, "GL-SAMPLER-CUBE-MAP-ARRAY", (GLenum) GL_SAMPLER_CUBE_MAP_ARRAY, "GL_SAMPLER_CUBE_MAP_ARRAY");
#endif
#if defined(GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW)
defconsti(env, "GL-SAMPLER-CUBE-MAP-ARRAY-SHADOW", (GLenum) GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW, "GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW");
#endif
#if defined(GL_INT_SAMPLER_CUBE_MAP_ARRAY)
defconsti(env, "GL-INT-SAMPLER-CUBE-MAP-ARRAY", (GLenum) GL_INT_SAMPLER_CUBE_MAP_ARRAY, "GL_INT_SAMPLER_CUBE_MAP_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-CUBE-MAP-ARRAY", (GLenum) GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY, "GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY");
#endif
#if defined(GL_SAMPLER_2D_MULTISAMPLE)
defconsti(env, "GL-SAMPLER-2D-MULTISAMPLE", (GLenum) GL_SAMPLER_2D_MULTISAMPLE, "GL_SAMPLER_2D_MULTISAMPLE");
#endif
#if defined(GL_INT_SAMPLER_2D_MULTISAMPLE)
defconsti(env, "GL-INT-SAMPLER-2D-MULTISAMPLE", (GLenum) GL_INT_SAMPLER_2D_MULTISAMPLE, "GL_INT_SAMPLER_2D_MULTISAMPLE");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-MULTISAMPLE", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE, "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE");
#endif
#if defined(GL_SAMPLER_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-SAMPLER-2D-MULTISAMPLE-ARRAY", (GLenum) GL_SAMPLER_2D_MULTISAMPLE_ARRAY, "GL_SAMPLER_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-INT-SAMPLER-2D-MULTISAMPLE-ARRAY", (GLenum) GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY, "GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-MULTISAMPLE-ARRAY", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY, "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_NUM_SAMPLE_COUNTS)
defconsti(env, "GL-NUM-SAMPLE-COUNTS", (GLenum) GL_NUM_SAMPLE_COUNTS, "GL_NUM_SAMPLE_COUNTS");
#endif
#if defined(GL_SAMPLES)
defconsti(env, "GL-SAMPLES", (GLenum) GL_SAMPLES, "GL_SAMPLES");
#endif
#if defined(GL_INTERNALFORMAT_SUPPORTED)
defconsti(env, "GL-INTERNALFORMAT-SUPPORTED", (GLenum) GL_INTERNALFORMAT_SUPPORTED, "GL_INTERNALFORMAT_SUPPORTED");
#endif
#if defined(GL_INTERNALFORMAT_PREFERRED)
defconsti(env, "GL-INTERNALFORMAT-PREFERRED", (GLenum) GL_INTERNALFORMAT_PREFERRED, "GL_INTERNALFORMAT_PREFERRED");
#endif
#if defined(GL_INTERNALFORMAT_RED_SIZE)
defconsti(env, "GL-INTERNALFORMAT-RED-SIZE", (GLenum) GL_INTERNALFORMAT_RED_SIZE, "GL_INTERNALFORMAT_RED_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_GREEN_SIZE)
defconsti(env, "GL-INTERNALFORMAT-GREEN-SIZE", (GLenum) GL_INTERNALFORMAT_GREEN_SIZE, "GL_INTERNALFORMAT_GREEN_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_BLUE_SIZE)
defconsti(env, "GL-INTERNALFORMAT-BLUE-SIZE", (GLenum) GL_INTERNALFORMAT_BLUE_SIZE, "GL_INTERNALFORMAT_BLUE_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_ALPHA_SIZE)
defconsti(env, "GL-INTERNALFORMAT-ALPHA-SIZE", (GLenum) GL_INTERNALFORMAT_ALPHA_SIZE, "GL_INTERNALFORMAT_ALPHA_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_DEPTH_SIZE)
defconsti(env, "GL-INTERNALFORMAT-DEPTH-SIZE", (GLenum) GL_INTERNALFORMAT_DEPTH_SIZE, "GL_INTERNALFORMAT_DEPTH_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_STENCIL_SIZE)
defconsti(env, "GL-INTERNALFORMAT-STENCIL-SIZE", (GLenum) GL_INTERNALFORMAT_STENCIL_SIZE, "GL_INTERNALFORMAT_STENCIL_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_SHARED_SIZE)
defconsti(env, "GL-INTERNALFORMAT-SHARED-SIZE", (GLenum) GL_INTERNALFORMAT_SHARED_SIZE, "GL_INTERNALFORMAT_SHARED_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_RED_TYPE)
defconsti(env, "GL-INTERNALFORMAT-RED-TYPE", (GLenum) GL_INTERNALFORMAT_RED_TYPE, "GL_INTERNALFORMAT_RED_TYPE");
#endif
#if defined(GL_INTERNALFORMAT_GREEN_TYPE)
defconsti(env, "GL-INTERNALFORMAT-GREEN-TYPE", (GLenum) GL_INTERNALFORMAT_GREEN_TYPE, "GL_INTERNALFORMAT_GREEN_TYPE");
#endif
#if defined(GL_INTERNALFORMAT_BLUE_TYPE)
defconsti(env, "GL-INTERNALFORMAT-BLUE-TYPE", (GLenum) GL_INTERNALFORMAT_BLUE_TYPE, "GL_INTERNALFORMAT_BLUE_TYPE");
#endif
#if defined(GL_INTERNALFORMAT_ALPHA_TYPE)
defconsti(env, "GL-INTERNALFORMAT-ALPHA-TYPE", (GLenum) GL_INTERNALFORMAT_ALPHA_TYPE, "GL_INTERNALFORMAT_ALPHA_TYPE");
#endif
#if defined(GL_INTERNALFORMAT_DEPTH_TYPE)
defconsti(env, "GL-INTERNALFORMAT-DEPTH-TYPE", (GLenum) GL_INTERNALFORMAT_DEPTH_TYPE, "GL_INTERNALFORMAT_DEPTH_TYPE");
#endif
#if defined(GL_INTERNALFORMAT_STENCIL_TYPE)
defconsti(env, "GL-INTERNALFORMAT-STENCIL-TYPE", (GLenum) GL_INTERNALFORMAT_STENCIL_TYPE, "GL_INTERNALFORMAT_STENCIL_TYPE");
#endif
#if defined(GL_MAX_WIDTH)
defconsti(env, "GL-MAX-WIDTH", (GLenum) GL_MAX_WIDTH, "GL_MAX_WIDTH");
#endif
#if defined(GL_MAX_HEIGHT)
defconsti(env, "GL-MAX-HEIGHT", (GLenum) GL_MAX_HEIGHT, "GL_MAX_HEIGHT");
#endif
#if defined(GL_MAX_DEPTH)
defconsti(env, "GL-MAX-DEPTH", (GLenum) GL_MAX_DEPTH, "GL_MAX_DEPTH");
#endif
#if defined(GL_MAX_LAYERS)
defconsti(env, "GL-MAX-LAYERS", (GLenum) GL_MAX_LAYERS, "GL_MAX_LAYERS");
#endif
#if defined(GL_COLOR_COMPONENTS)
defconsti(env, "GL-COLOR-COMPONENTS", (GLenum) GL_COLOR_COMPONENTS, "GL_COLOR_COMPONENTS");
#endif
#if defined(GL_COLOR_RENDERABLE)
defconsti(env, "GL-COLOR-RENDERABLE", (GLenum) GL_COLOR_RENDERABLE, "GL_COLOR_RENDERABLE");
#endif
#if defined(GL_DEPTH_RENDERABLE)
defconsti(env, "GL-DEPTH-RENDERABLE", (GLenum) GL_DEPTH_RENDERABLE, "GL_DEPTH_RENDERABLE");
#endif
#if defined(GL_STENCIL_RENDERABLE)
defconsti(env, "GL-STENCIL-RENDERABLE", (GLenum) GL_STENCIL_RENDERABLE, "GL_STENCIL_RENDERABLE");
#endif
#if defined(GL_FRAMEBUFFER_RENDERABLE)
defconsti(env, "GL-FRAMEBUFFER-RENDERABLE", (GLenum) GL_FRAMEBUFFER_RENDERABLE, "GL_FRAMEBUFFER_RENDERABLE");
#endif
#if defined(GL_FRAMEBUFFER_RENDERABLE_LAYERED)
defconsti(env, "GL-FRAMEBUFFER-RENDERABLE-LAYERED", (GLenum) GL_FRAMEBUFFER_RENDERABLE_LAYERED, "GL_FRAMEBUFFER_RENDERABLE_LAYERED");
#endif
#if defined(GL_FRAMEBUFFER_BLEND)
defconsti(env, "GL-FRAMEBUFFER-BLEND", (GLenum) GL_FRAMEBUFFER_BLEND, "GL_FRAMEBUFFER_BLEND");
#endif
#if defined(GL_READ_PIXELS)
defconsti(env, "GL-READ-PIXELS", (GLenum) GL_READ_PIXELS, "GL_READ_PIXELS");
#endif
#if defined(GL_READ_PIXELS_FORMAT)
defconsti(env, "GL-READ-PIXELS-FORMAT", (GLenum) GL_READ_PIXELS_FORMAT, "GL_READ_PIXELS_FORMAT");
#endif
#if defined(GL_READ_PIXELS_TYPE)
defconsti(env, "GL-READ-PIXELS-TYPE", (GLenum) GL_READ_PIXELS_TYPE, "GL_READ_PIXELS_TYPE");
#endif
#if defined(GL_TEXTURE_IMAGE_FORMAT)
defconsti(env, "GL-TEXTURE-IMAGE-FORMAT", (GLenum) GL_TEXTURE_IMAGE_FORMAT, "GL_TEXTURE_IMAGE_FORMAT");
#endif
#if defined(GL_TEXTURE_IMAGE_TYPE)
defconsti(env, "GL-TEXTURE-IMAGE-TYPE", (GLenum) GL_TEXTURE_IMAGE_TYPE, "GL_TEXTURE_IMAGE_TYPE");
#endif
#if defined(GL_GET_TEXTURE_IMAGE_FORMAT)
defconsti(env, "GL-GET-TEXTURE-IMAGE-FORMAT", (GLenum) GL_GET_TEXTURE_IMAGE_FORMAT, "GL_GET_TEXTURE_IMAGE_FORMAT");
#endif
#if defined(GL_GET_TEXTURE_IMAGE_TYPE)
defconsti(env, "GL-GET-TEXTURE-IMAGE-TYPE", (GLenum) GL_GET_TEXTURE_IMAGE_TYPE, "GL_GET_TEXTURE_IMAGE_TYPE");
#endif
#if defined(GL_MIPMAP)
defconsti(env, "GL-MIPMAP", (GLenum) GL_MIPMAP, "GL_MIPMAP");
#endif
#if defined(GL_GENERATE_MIPMAP)
defconsti(env, "GL-GENERATE-MIPMAP", (GLenum) GL_GENERATE_MIPMAP, "GL_GENERATE_MIPMAP");
#endif
#if defined(GL_AUTO_GENERATE_MIPMAP)
defconsti(env, "GL-AUTO-GENERATE-MIPMAP", (GLenum) GL_AUTO_GENERATE_MIPMAP, "GL_AUTO_GENERATE_MIPMAP");
#endif
#if defined(GL_COLOR_ENCODING)
defconsti(env, "GL-COLOR-ENCODING", (GLenum) GL_COLOR_ENCODING, "GL_COLOR_ENCODING");
#endif
#if defined(GL_SRGB_READ)
defconsti(env, "GL-SRGB-READ", (GLenum) GL_SRGB_READ, "GL_SRGB_READ");
#endif
#if defined(GL_SRGB_WRITE)
defconsti(env, "GL-SRGB-WRITE", (GLenum) GL_SRGB_WRITE, "GL_SRGB_WRITE");
#endif
#if defined(GL_FILTER)
defconsti(env, "GL-FILTER", (GLenum) GL_FILTER, "GL_FILTER");
#endif
#if defined(GL_VERTEX_TEXTURE)
defconsti(env, "GL-VERTEX-TEXTURE", (GLenum) GL_VERTEX_TEXTURE, "GL_VERTEX_TEXTURE");
#endif
#if defined(GL_TESS_CONTROL_TEXTURE)
defconsti(env, "GL-TESS-CONTROL-TEXTURE", (GLenum) GL_TESS_CONTROL_TEXTURE, "GL_TESS_CONTROL_TEXTURE");
#endif
#if defined(GL_TESS_EVALUATION_TEXTURE)
defconsti(env, "GL-TESS-EVALUATION-TEXTURE", (GLenum) GL_TESS_EVALUATION_TEXTURE, "GL_TESS_EVALUATION_TEXTURE");
#endif
#if defined(GL_GEOMETRY_TEXTURE)
defconsti(env, "GL-GEOMETRY-TEXTURE", (GLenum) GL_GEOMETRY_TEXTURE, "GL_GEOMETRY_TEXTURE");
#endif
#if defined(GL_FRAGMENT_TEXTURE)
defconsti(env, "GL-FRAGMENT-TEXTURE", (GLenum) GL_FRAGMENT_TEXTURE, "GL_FRAGMENT_TEXTURE");
#endif
#if defined(GL_COMPUTE_TEXTURE)
defconsti(env, "GL-COMPUTE-TEXTURE", (GLenum) GL_COMPUTE_TEXTURE, "GL_COMPUTE_TEXTURE");
#endif
#if defined(GL_TEXTURE_SHADOW)
defconsti(env, "GL-TEXTURE-SHADOW", (GLenum) GL_TEXTURE_SHADOW, "GL_TEXTURE_SHADOW");
#endif
#if defined(GL_TEXTURE_GATHER)
defconsti(env, "GL-TEXTURE-GATHER", (GLenum) GL_TEXTURE_GATHER, "GL_TEXTURE_GATHER");
#endif
#if defined(GL_TEXTURE_GATHER_SHADOW)
defconsti(env, "GL-TEXTURE-GATHER-SHADOW", (GLenum) GL_TEXTURE_GATHER_SHADOW, "GL_TEXTURE_GATHER_SHADOW");
#endif
#if defined(GL_SHADER_IMAGE_LOAD)
defconsti(env, "GL-SHADER-IMAGE-LOAD", (GLenum) GL_SHADER_IMAGE_LOAD, "GL_SHADER_IMAGE_LOAD");
#endif
#if defined(GL_SHADER_IMAGE_STORE)
defconsti(env, "GL-SHADER-IMAGE-STORE", (GLenum) GL_SHADER_IMAGE_STORE, "GL_SHADER_IMAGE_STORE");
#endif
#if defined(GL_SHADER_IMAGE_ATOMIC)
defconsti(env, "GL-SHADER-IMAGE-ATOMIC", (GLenum) GL_SHADER_IMAGE_ATOMIC, "GL_SHADER_IMAGE_ATOMIC");
#endif
#if defined(GL_IMAGE_TEXEL_SIZE)
defconsti(env, "GL-IMAGE-TEXEL-SIZE", (GLenum) GL_IMAGE_TEXEL_SIZE, "GL_IMAGE_TEXEL_SIZE");
#endif
#if defined(GL_IMAGE_COMPATIBILITY_CLASS)
defconsti(env, "GL-IMAGE-COMPATIBILITY-CLASS", (GLenum) GL_IMAGE_COMPATIBILITY_CLASS, "GL_IMAGE_COMPATIBILITY_CLASS");
#endif
#if defined(GL_IMAGE_PIXEL_FORMAT)
defconsti(env, "GL-IMAGE-PIXEL-FORMAT", (GLenum) GL_IMAGE_PIXEL_FORMAT, "GL_IMAGE_PIXEL_FORMAT");
#endif
#if defined(GL_IMAGE_PIXEL_TYPE)
defconsti(env, "GL-IMAGE-PIXEL-TYPE", (GLenum) GL_IMAGE_PIXEL_TYPE, "GL_IMAGE_PIXEL_TYPE");
#endif
#if defined(GL_IMAGE_FORMAT_COMPATIBILITY_TYPE)
defconsti(env, "GL-IMAGE-FORMAT-COMPATIBILITY-TYPE", (GLenum) GL_IMAGE_FORMAT_COMPATIBILITY_TYPE, "GL_IMAGE_FORMAT_COMPATIBILITY_TYPE");
#endif
#if defined(GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST)
defconsti(env, "GL-SIMULTANEOUS-TEXTURE-AND-DEPTH-TEST", (GLenum) GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST, "GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST");
#endif
#if defined(GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST)
defconsti(env, "GL-SIMULTANEOUS-TEXTURE-AND-STENCIL-TEST", (GLenum) GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST, "GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST");
#endif
#if defined(GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE)
defconsti(env, "GL-SIMULTANEOUS-TEXTURE-AND-DEPTH-WRITE", (GLenum) GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE, "GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE");
#endif
#if defined(GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE)
defconsti(env, "GL-SIMULTANEOUS-TEXTURE-AND-STENCIL-WRITE", (GLenum) GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE, "GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE");
#endif
#if defined(GL_TEXTURE_COMPRESSED)
defconsti(env, "GL-TEXTURE-COMPRESSED", (GLenum) GL_TEXTURE_COMPRESSED, "GL_TEXTURE_COMPRESSED");
#endif
#if defined(GL_TEXTURE_COMPRESSED_BLOCK_WIDTH)
defconsti(env, "GL-TEXTURE-COMPRESSED-BLOCK-WIDTH", (GLenum) GL_TEXTURE_COMPRESSED_BLOCK_WIDTH, "GL_TEXTURE_COMPRESSED_BLOCK_WIDTH");
#endif
#if defined(GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT)
defconsti(env, "GL-TEXTURE-COMPRESSED-BLOCK-HEIGHT", (GLenum) GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT, "GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT");
#endif
#if defined(GL_TEXTURE_COMPRESSED_BLOCK_SIZE)
defconsti(env, "GL-TEXTURE-COMPRESSED-BLOCK-SIZE", (GLenum) GL_TEXTURE_COMPRESSED_BLOCK_SIZE, "GL_TEXTURE_COMPRESSED_BLOCK_SIZE");
#endif
#if defined(GL_CLEAR_BUFFER)
defconsti(env, "GL-CLEAR-BUFFER", (GLenum) GL_CLEAR_BUFFER, "GL_CLEAR_BUFFER");
#endif
#if defined(GL_TEXTURE_VIEW)
defconsti(env, "GL-TEXTURE-VIEW", (GLenum) GL_TEXTURE_VIEW, "GL_TEXTURE_VIEW");
#endif
#if defined(GL_VIEW_COMPATIBILITY_CLASS)
defconsti(env, "GL-VIEW-COMPATIBILITY-CLASS", (GLenum) GL_VIEW_COMPATIBILITY_CLASS, "GL_VIEW_COMPATIBILITY_CLASS");
#endif
#if defined(GL_CLEAR_TEXTURE)
defconsti(env, "GL-CLEAR-TEXTURE", (GLenum) GL_CLEAR_TEXTURE, "GL_CLEAR_TEXTURE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-RED-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-GREEN-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-BLUE-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-ALPHA-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-DEPTH-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-STENCIL-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-COMPONENT-TYPE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE, "GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-COMPONENT-TYPE-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT, "GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-COLOR-ENCODING", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING, "GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-COLOR-ENCODING-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT, "GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-OBJECT-NAME", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-OBJECT-NAME-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-OBJECT-NAME-OES", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-OBJECT-TYPE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-OBJECT-TYPE-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-OBJECT-TYPE-OES", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-LEVEL", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-LEVEL-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-LEVEL-OES", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-CUBE-MAP-FACE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-CUBE-MAP-FACE-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-CUBE-MAP-FACE-OES", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-3D-ZOFFSET-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-3D-ZOFFSET-OES", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-LAYER", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-LAYER-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-NUM-VIEWS-OVR", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-BASE-VIEW-INDEX-OVR", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-SAMPLES-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-SCALE-IMG", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_LAYERED)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-LAYERED", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_LAYERED, "GL_FRAMEBUFFER_ATTACHMENT_LAYERED");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-LAYERED-ARB", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB, "GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-LAYERED-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT, "GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-LAYERED-OES", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES, "GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES");
#endif
#if defined(GL_ACTIVE_RESOURCES)
defconsti(env, "GL-ACTIVE-RESOURCES", (GLenum) GL_ACTIVE_RESOURCES, "GL_ACTIVE_RESOURCES");
#endif
#if defined(GL_MAX_NAME_LENGTH)
defconsti(env, "GL-MAX-NAME-LENGTH", (GLenum) GL_MAX_NAME_LENGTH, "GL_MAX_NAME_LENGTH");
#endif
#if defined(GL_MAX_NUM_ACTIVE_VARIABLES)
defconsti(env, "GL-MAX-NUM-ACTIVE-VARIABLES", (GLenum) GL_MAX_NUM_ACTIVE_VARIABLES, "GL_MAX_NUM_ACTIVE_VARIABLES");
#endif
#if defined(GL_MAX_NUM_COMPATIBLE_SUBROUTINES)
defconsti(env, "GL-MAX-NUM-COMPATIBLE-SUBROUTINES", (GLenum) GL_MAX_NUM_COMPATIBLE_SUBROUTINES, "GL_MAX_NUM_COMPATIBLE_SUBROUTINES");
#endif
#if defined(GL_LOW_FLOAT)
defconsti(env, "GL-LOW-FLOAT", (GLenum) GL_LOW_FLOAT, "GL_LOW_FLOAT");
#endif
#if defined(GL_MEDIUM_FLOAT)
defconsti(env, "GL-MEDIUM-FLOAT", (GLenum) GL_MEDIUM_FLOAT, "GL_MEDIUM_FLOAT");
#endif
#if defined(GL_HIGH_FLOAT)
defconsti(env, "GL-HIGH-FLOAT", (GLenum) GL_HIGH_FLOAT, "GL_HIGH_FLOAT");
#endif
#if defined(GL_LOW_INT)
defconsti(env, "GL-LOW-INT", (GLenum) GL_LOW_INT, "GL_LOW_INT");
#endif
#if defined(GL_MEDIUM_INT)
defconsti(env, "GL-MEDIUM-INT", (GLenum) GL_MEDIUM_INT, "GL_MEDIUM_INT");
#endif
#if defined(GL_HIGH_INT)
defconsti(env, "GL-HIGH-INT", (GLenum) GL_HIGH_INT, "GL_HIGH_INT");
#endif
#if defined(GL_BYTE)
defconsti(env, "GL-BYTE", (GLenum) GL_BYTE, "GL_BYTE");
#endif
#if defined(GL_UNSIGNED_BYTE)
defconsti(env, "GL-UNSIGNED-BYTE", (GLenum) GL_UNSIGNED_BYTE, "GL_UNSIGNED_BYTE");
#endif
#if defined(GL_SHORT)
defconsti(env, "GL-SHORT", (GLenum) GL_SHORT, "GL_SHORT");
#endif
#if defined(GL_UNSIGNED_SHORT)
defconsti(env, "GL-UNSIGNED-SHORT", (GLenum) GL_UNSIGNED_SHORT, "GL_UNSIGNED_SHORT");
#endif
#if defined(GL_INT)
defconsti(env, "GL-INT", (GLenum) GL_INT, "GL_INT");
#endif
#if defined(GL_UNSIGNED_INT)
defconsti(env, "GL-UNSIGNED-INT", (GLenum) GL_UNSIGNED_INT, "GL_UNSIGNED_INT");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_DOUBLE)
defconsti(env, "GL-DOUBLE", (GLenum) GL_DOUBLE, "GL_DOUBLE");
#endif
#if defined(GL_HALF_FLOAT)
defconsti(env, "GL-HALF-FLOAT", (GLenum) GL_HALF_FLOAT, "GL_HALF_FLOAT");
#endif
#if defined(GL_FIXED)
defconsti(env, "GL-FIXED", (GLenum) GL_FIXED, "GL_FIXED");
#endif
#if defined(GL_INT_2_10_10_10_REV)
defconsti(env, "GL-INT-2-10-10-10-REV", (GLenum) GL_INT_2_10_10_10_REV, "GL_INT_2_10_10_10_REV");
#endif
#if defined(GL_UNSIGNED_INT_2_10_10_10_REV)
defconsti(env, "GL-UNSIGNED-INT-2-10-10-10-REV", (GLenum) GL_UNSIGNED_INT_2_10_10_10_REV, "GL_UNSIGNED_INT_2_10_10_10_REV");
#endif
#if defined(GL_UNSIGNED_INT_10F_11F_11F_REV)
defconsti(env, "GL-UNSIGNED-INT-10F-11F-11F-REV", (GLenum) GL_UNSIGNED_INT_10F_11F_11F_REV, "GL_UNSIGNED_INT_10F_11F_11F_REV");
#endif
#if defined(GL_INT64_ARB)
defconsti(env, "GL-INT64-ARB", (GLenum) GL_INT64_ARB, "GL_INT64_ARB");
#endif
#if defined(GL_INT64_NV)
defconsti(env, "GL-INT64-NV", (GLenum) GL_INT64_NV, "GL_INT64_NV");
#endif
#if defined(GL_UNSIGNED_INT64_ARB)
defconsti(env, "GL-UNSIGNED-INT64-ARB", (GLenum) GL_UNSIGNED_INT64_ARB, "GL_UNSIGNED_INT64_ARB");
#endif
#if defined(GL_UNSIGNED_INT64_NV)
defconsti(env, "GL-UNSIGNED-INT64-NV", (GLenum) GL_UNSIGNED_INT64_NV, "GL_UNSIGNED_INT64_NV");
#endif
#if defined(GL_NUM_COMPATIBLE_SUBROUTINES)
defconsti(env, "GL-NUM-COMPATIBLE-SUBROUTINES", (GLenum) GL_NUM_COMPATIBLE_SUBROUTINES, "GL_NUM_COMPATIBLE_SUBROUTINES");
#endif
#if defined(GL_COMPATIBLE_SUBROUTINES)
defconsti(env, "GL-COMPATIBLE-SUBROUTINES", (GLenum) GL_COMPATIBLE_SUBROUTINES, "GL_COMPATIBLE_SUBROUTINES");
#endif
#if defined(GL_UNIFORM_SIZE)
defconsti(env, "GL-UNIFORM-SIZE", (GLenum) GL_UNIFORM_SIZE, "GL_UNIFORM_SIZE");
#endif
#if defined(GL_UNIFORM_NAME_LENGTH)
defconsti(env, "GL-UNIFORM-NAME-LENGTH", (GLenum) GL_UNIFORM_NAME_LENGTH, "GL_UNIFORM_NAME_LENGTH");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_WIDTH)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-WIDTH", (GLenum) GL_FRAMEBUFFER_DEFAULT_WIDTH, "GL_FRAMEBUFFER_DEFAULT_WIDTH");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_HEIGHT)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-HEIGHT", (GLenum) GL_FRAMEBUFFER_DEFAULT_HEIGHT, "GL_FRAMEBUFFER_DEFAULT_HEIGHT");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_LAYERS)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-LAYERS", (GLenum) GL_FRAMEBUFFER_DEFAULT_LAYERS, "GL_FRAMEBUFFER_DEFAULT_LAYERS");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_SAMPLES)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-SAMPLES", (GLenum) GL_FRAMEBUFFER_DEFAULT_SAMPLES, "GL_FRAMEBUFFER_DEFAULT_SAMPLES");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-FIXED-SAMPLE-LOCATIONS", (GLenum) GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS, "GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS");
#endif
#if defined(GL_DOUBLEBUFFER)
defconsti(env, "GL-DOUBLEBUFFER", (GLenum) GL_DOUBLEBUFFER, "GL_DOUBLEBUFFER");
#endif
#if defined(GL_IMPLEMENTATION_COLOR_READ_FORMAT)
defconsti(env, "GL-IMPLEMENTATION-COLOR-READ-FORMAT", (GLenum) GL_IMPLEMENTATION_COLOR_READ_FORMAT, "GL_IMPLEMENTATION_COLOR_READ_FORMAT");
#endif
#if defined(GL_IMPLEMENTATION_COLOR_READ_TYPE)
defconsti(env, "GL-IMPLEMENTATION-COLOR-READ-TYPE", (GLenum) GL_IMPLEMENTATION_COLOR_READ_TYPE, "GL_IMPLEMENTATION_COLOR_READ_TYPE");
#endif
#if defined(GL_SAMPLES)
defconsti(env, "GL-SAMPLES", (GLenum) GL_SAMPLES, "GL_SAMPLES");
#endif
#if defined(GL_SAMPLE_BUFFERS)
defconsti(env, "GL-SAMPLE-BUFFERS", (GLenum) GL_SAMPLE_BUFFERS, "GL_SAMPLE_BUFFERS");
#endif
#if defined(GL_STEREO)
defconsti(env, "GL-STEREO", (GLenum) GL_STEREO, "GL_STEREO");
#endif
#if defined(GL_PATH_FORMAT_SVG_NV)
defconsti(env, "GL-PATH-FORMAT-SVG-NV", (GLenum) GL_PATH_FORMAT_SVG_NV, "GL_PATH_FORMAT_SVG_NV");
#endif
#if defined(GL_PATH_FORMAT_PS_NV)
defconsti(env, "GL-PATH-FORMAT-PS-NV", (GLenum) GL_PATH_FORMAT_PS_NV, "GL_PATH_FORMAT_PS_NV");
#endif
#if defined(GL_STANDARD_FONT_NAME_NV)
defconsti(env, "GL-STANDARD-FONT-NAME-NV", (GLenum) GL_STANDARD_FONT_NAME_NV, "GL_STANDARD_FONT_NAME_NV");
#endif
#if defined(GL_SYSTEM_FONT_NAME_NV)
defconsti(env, "GL-SYSTEM-FONT-NAME-NV", (GLenum) GL_SYSTEM_FONT_NAME_NV, "GL_SYSTEM_FONT_NAME_NV");
#endif
#if defined(GL_FILE_NAME_NV)
defconsti(env, "GL-FILE-NAME-NV", (GLenum) GL_FILE_NAME_NV, "GL_FILE_NAME_NV");
#endif
#if defined(GL_SKIP_MISSING_GLYPH_NV)
defconsti(env, "GL-SKIP-MISSING-GLYPH-NV", (GLenum) GL_SKIP_MISSING_GLYPH_NV, "GL_SKIP_MISSING_GLYPH_NV");
#endif
#if defined(GL_USE_MISSING_GLYPH_NV)
defconsti(env, "GL-USE-MISSING-GLYPH-NV", (GLenum) GL_USE_MISSING_GLYPH_NV, "GL_USE_MISSING_GLYPH_NV");
#endif
#if defined(GL_PATH_STROKE_WIDTH_NV)
defconsti(env, "GL-PATH-STROKE-WIDTH-NV", (GLenum) GL_PATH_STROKE_WIDTH_NV, "GL_PATH_STROKE_WIDTH_NV");
#endif
#if defined(GL_PATH_INITIAL_END_CAP_NV)
defconsti(env, "GL-PATH-INITIAL-END-CAP-NV", (GLenum) GL_PATH_INITIAL_END_CAP_NV, "GL_PATH_INITIAL_END_CAP_NV");
#endif
#if defined(GL_PATH_TERMINAL_END_CAP_NV)
defconsti(env, "GL-PATH-TERMINAL-END-CAP-NV", (GLenum) GL_PATH_TERMINAL_END_CAP_NV, "GL_PATH_TERMINAL_END_CAP_NV");
#endif
#if defined(GL_PATH_JOIN_STYLE_NV)
defconsti(env, "GL-PATH-JOIN-STYLE-NV", (GLenum) GL_PATH_JOIN_STYLE_NV, "GL_PATH_JOIN_STYLE_NV");
#endif
#if defined(GL_PATH_MITER_LIMIT_NV)
defconsti(env, "GL-PATH-MITER-LIMIT-NV", (GLenum) GL_PATH_MITER_LIMIT_NV, "GL_PATH_MITER_LIMIT_NV");
#endif
#if defined(GL_PATH_INITIAL_DASH_CAP_NV)
defconsti(env, "GL-PATH-INITIAL-DASH-CAP-NV", (GLenum) GL_PATH_INITIAL_DASH_CAP_NV, "GL_PATH_INITIAL_DASH_CAP_NV");
#endif
#if defined(GL_PATH_TERMINAL_DASH_CAP_NV)
defconsti(env, "GL-PATH-TERMINAL-DASH-CAP-NV", (GLenum) GL_PATH_TERMINAL_DASH_CAP_NV, "GL_PATH_TERMINAL_DASH_CAP_NV");
#endif
#if defined(GL_PATH_DASH_OFFSET_NV)
defconsti(env, "GL-PATH-DASH-OFFSET-NV", (GLenum) GL_PATH_DASH_OFFSET_NV, "GL_PATH_DASH_OFFSET_NV");
#endif
#if defined(GL_PATH_CLIENT_LENGTH_NV)
defconsti(env, "GL-PATH-CLIENT-LENGTH-NV", (GLenum) GL_PATH_CLIENT_LENGTH_NV, "GL_PATH_CLIENT_LENGTH_NV");
#endif
#if defined(GL_PATH_DASH_OFFSET_RESET_NV)
defconsti(env, "GL-PATH-DASH-OFFSET-RESET-NV", (GLenum) GL_PATH_DASH_OFFSET_RESET_NV, "GL_PATH_DASH_OFFSET_RESET_NV");
#endif
#if defined(GL_PATH_FILL_MODE_NV)
defconsti(env, "GL-PATH-FILL-MODE-NV", (GLenum) GL_PATH_FILL_MODE_NV, "GL_PATH_FILL_MODE_NV");
#endif
#if defined(GL_PATH_FILL_MASK_NV)
defconsti(env, "GL-PATH-FILL-MASK-NV", (GLenum) GL_PATH_FILL_MASK_NV, "GL_PATH_FILL_MASK_NV");
#endif
#if defined(GL_PATH_FILL_COVER_MODE_NV)
defconsti(env, "GL-PATH-FILL-COVER-MODE-NV", (GLenum) GL_PATH_FILL_COVER_MODE_NV, "GL_PATH_FILL_COVER_MODE_NV");
#endif
#if defined(GL_PATH_STROKE_COVER_MODE_NV)
defconsti(env, "GL-PATH-STROKE-COVER-MODE-NV", (GLenum) GL_PATH_STROKE_COVER_MODE_NV, "GL_PATH_STROKE_COVER_MODE_NV");
#endif
#if defined(GL_PATH_STROKE_MASK_NV)
defconsti(env, "GL-PATH-STROKE-MASK-NV", (GLenum) GL_PATH_STROKE_MASK_NV, "GL_PATH_STROKE_MASK_NV");
#endif
#if defined(GL_PATH_END_CAPS_NV)
defconsti(env, "GL-PATH-END-CAPS-NV", (GLenum) GL_PATH_END_CAPS_NV, "GL_PATH_END_CAPS_NV");
#endif
#if defined(GL_PATH_DASH_CAPS_NV)
defconsti(env, "GL-PATH-DASH-CAPS-NV", (GLenum) GL_PATH_DASH_CAPS_NV, "GL_PATH_DASH_CAPS_NV");
#endif
#if defined(GL_PATH_COMMAND_COUNT_NV)
defconsti(env, "GL-PATH-COMMAND-COUNT-NV", (GLenum) GL_PATH_COMMAND_COUNT_NV, "GL_PATH_COMMAND_COUNT_NV");
#endif
#if defined(GL_PATH_COORD_COUNT_NV)
defconsti(env, "GL-PATH-COORD-COUNT-NV", (GLenum) GL_PATH_COORD_COUNT_NV, "GL_PATH_COORD_COUNT_NV");
#endif
#if defined(GL_PATH_DASH_ARRAY_COUNT_NV)
defconsti(env, "GL-PATH-DASH-ARRAY-COUNT-NV", (GLenum) GL_PATH_DASH_ARRAY_COUNT_NV, "GL_PATH_DASH_ARRAY_COUNT_NV");
#endif
#if defined(GL_PATH_COMPUTED_LENGTH_NV)
defconsti(env, "GL-PATH-COMPUTED-LENGTH-NV", (GLenum) GL_PATH_COMPUTED_LENGTH_NV, "GL_PATH_COMPUTED_LENGTH_NV");
#endif
#if defined(GL_PATH_OBJECT_BOUNDING_BOX_NV)
defconsti(env, "GL-PATH-OBJECT-BOUNDING-BOX-NV", (GLenum) GL_PATH_OBJECT_BOUNDING_BOX_NV, "GL_PATH_OBJECT_BOUNDING_BOX_NV");
#endif
#if defined(GL_PATH_FILL_BOUNDING_BOX_NV)
defconsti(env, "GL-PATH-FILL-BOUNDING-BOX-NV", (GLenum) GL_PATH_FILL_BOUNDING_BOX_NV, "GL_PATH_FILL_BOUNDING_BOX_NV");
#endif
#if defined(GL_PATH_STROKE_BOUNDING_BOX_NV)
defconsti(env, "GL-PATH-STROKE-BOUNDING-BOX-NV", (GLenum) GL_PATH_STROKE_BOUNDING_BOX_NV, "GL_PATH_STROKE_BOUNDING_BOX_NV");
#endif
#if defined(GL_PRIMARY_COLOR)
defconsti(env, "GL-PRIMARY-COLOR", (GLenum) GL_PRIMARY_COLOR, "GL_PRIMARY_COLOR");
#endif
#if defined(GL_PRIMARY_COLOR_NV)
defconsti(env, "GL-PRIMARY-COLOR-NV", (GLenum) GL_PRIMARY_COLOR_NV, "GL_PRIMARY_COLOR_NV");
#endif
#if defined(GL_SECONDARY_COLOR_NV)
defconsti(env, "GL-SECONDARY-COLOR-NV", (GLenum) GL_SECONDARY_COLOR_NV, "GL_SECONDARY_COLOR_NV");
#endif
#if defined(GL_NONE)
defconsti(env, "GL-NONE", (GLenum) GL_NONE, "GL_NONE");
#endif
#if defined(GL_EYE_LINEAR)
defconsti(env, "GL-EYE-LINEAR", (GLenum) GL_EYE_LINEAR, "GL_EYE_LINEAR");
#endif
#if defined(GL_OBJECT_LINEAR)
defconsti(env, "GL-OBJECT-LINEAR", (GLenum) GL_OBJECT_LINEAR, "GL_OBJECT_LINEAR");
#endif
#if defined(GL_PATH_OBJECT_BOUNDING_BOX_NV)
defconsti(env, "GL-PATH-OBJECT-BOUNDING-BOX-NV", (GLenum) GL_PATH_OBJECT_BOUNDING_BOX_NV, "GL_PATH_OBJECT_BOUNDING_BOX_NV");
#endif
#if defined(GL_CONSTANT)
defconsti(env, "GL-CONSTANT", (GLenum) GL_CONSTANT, "GL_CONSTANT");
#endif
#if defined(GL_LAYOUT_GENERAL_EXT)
defconsti(env, "GL-LAYOUT-GENERAL-EXT", (GLenum) GL_LAYOUT_GENERAL_EXT, "GL_LAYOUT_GENERAL_EXT");
#endif
#if defined(GL_LAYOUT_COLOR_ATTACHMENT_EXT)
defconsti(env, "GL-LAYOUT-COLOR-ATTACHMENT-EXT", (GLenum) GL_LAYOUT_COLOR_ATTACHMENT_EXT, "GL_LAYOUT_COLOR_ATTACHMENT_EXT");
#endif
#if defined(GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT)
defconsti(env, "GL-LAYOUT-DEPTH-STENCIL-ATTACHMENT-EXT", (GLenum) GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT, "GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT");
#endif
#if defined(GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT)
defconsti(env, "GL-LAYOUT-DEPTH-STENCIL-READ-ONLY-EXT", (GLenum) GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT, "GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT");
#endif
#if defined(GL_LAYOUT_SHADER_READ_ONLY_EXT)
defconsti(env, "GL-LAYOUT-SHADER-READ-ONLY-EXT", (GLenum) GL_LAYOUT_SHADER_READ_ONLY_EXT, "GL_LAYOUT_SHADER_READ_ONLY_EXT");
#endif
#if defined(GL_LAYOUT_TRANSFER_SRC_EXT)
defconsti(env, "GL-LAYOUT-TRANSFER-SRC-EXT", (GLenum) GL_LAYOUT_TRANSFER_SRC_EXT, "GL_LAYOUT_TRANSFER_SRC_EXT");
#endif
#if defined(GL_LAYOUT_TRANSFER_DST_EXT)
defconsti(env, "GL-LAYOUT-TRANSFER-DST-EXT", (GLenum) GL_LAYOUT_TRANSFER_DST_EXT, "GL_LAYOUT_TRANSFER_DST_EXT");
#endif
#if defined(GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT)
defconsti(env, "GL-LAYOUT-DEPTH-READ-ONLY-STENCIL-ATTACHMENT-EXT", (GLenum) GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT, "GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT");
#endif
#if defined(GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT)
defconsti(env, "GL-LAYOUT-DEPTH-ATTACHMENT-STENCIL-READ-ONLY-EXT", (GLenum) GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT, "GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT");
#endif
#if defined(GL_NONE)
defconsti(env, "GL-NONE", (GLenum) GL_NONE, "GL_NONE");
#endif
#if defined(GL_TRANSLATE_X_NV)
defconsti(env, "GL-TRANSLATE-X-NV", (GLenum) GL_TRANSLATE_X_NV, "GL_TRANSLATE_X_NV");
#endif
#if defined(GL_TRANSLATE_Y_NV)
defconsti(env, "GL-TRANSLATE-Y-NV", (GLenum) GL_TRANSLATE_Y_NV, "GL_TRANSLATE_Y_NV");
#endif
#if defined(GL_TRANSLATE_2D_NV)
defconsti(env, "GL-TRANSLATE-2D-NV", (GLenum) GL_TRANSLATE_2D_NV, "GL_TRANSLATE_2D_NV");
#endif
#if defined(GL_TRANSLATE_3D_NV)
defconsti(env, "GL-TRANSLATE-3D-NV", (GLenum) GL_TRANSLATE_3D_NV, "GL_TRANSLATE_3D_NV");
#endif
#if defined(GL_AFFINE_2D_NV)
defconsti(env, "GL-AFFINE-2D-NV", (GLenum) GL_AFFINE_2D_NV, "GL_AFFINE_2D_NV");
#endif
#if defined(GL_AFFINE_3D_NV)
defconsti(env, "GL-AFFINE-3D-NV", (GLenum) GL_AFFINE_3D_NV, "GL_AFFINE_3D_NV");
#endif
#if defined(GL_TRANSPOSE_AFFINE_2D_NV)
defconsti(env, "GL-TRANSPOSE-AFFINE-2D-NV", (GLenum) GL_TRANSPOSE_AFFINE_2D_NV, "GL_TRANSPOSE_AFFINE_2D_NV");
#endif
#if defined(GL_TRANSPOSE_AFFINE_3D_NV)
defconsti(env, "GL-TRANSPOSE-AFFINE-3D-NV", (GLenum) GL_TRANSPOSE_AFFINE_3D_NV, "GL_TRANSPOSE_AFFINE_3D_NV");
#endif
#if defined(GL_UTF8_NV)
defconsti(env, "GL-UTF8-NV", (GLenum) GL_UTF8_NV, "GL_UTF8_NV");
#endif
#if defined(GL_UTF16_NV)
defconsti(env, "GL-UTF16-NV", (GLenum) GL_UTF16_NV, "GL_UTF16_NV");
#endif
#if defined(GL_CONVEX_HULL_NV)
defconsti(env, "GL-CONVEX-HULL-NV", (GLenum) GL_CONVEX_HULL_NV, "GL_CONVEX_HULL_NV");
#endif
#if defined(GL_BOUNDING_BOX_NV)
defconsti(env, "GL-BOUNDING-BOX-NV", (GLenum) GL_BOUNDING_BOX_NV, "GL_BOUNDING_BOX_NV");
#endif
#if defined(GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV)
defconsti(env, "GL-BOUNDING-BOX-OF-BOUNDING-BOXES-NV", (GLenum) GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV, "GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV");
#endif
#if defined(GL_PATH_FILL_COVER_MODE_NV)
defconsti(env, "GL-PATH-FILL-COVER-MODE-NV", (GLenum) GL_PATH_FILL_COVER_MODE_NV, "GL_PATH_FILL_COVER_MODE_NV");
#endif
#if defined(GL_NONE)
defconsti(env, "GL-NONE", (GLenum) GL_NONE, "GL_NONE");
#endif
#if defined(GL_BOLD_BIT_NV)
defconsti(env, "GL-BOLD-BIT-NV", (GLenum) GL_BOLD_BIT_NV, "GL_BOLD_BIT_NV");
#endif
#if defined(GL_ITALIC_BIT_NV)
defconsti(env, "GL-ITALIC-BIT-NV", (GLenum) GL_ITALIC_BIT_NV, "GL_ITALIC_BIT_NV");
#endif
#if defined(GL_GLYPH_WIDTH_BIT_NV)
defconsti(env, "GL-GLYPH-WIDTH-BIT-NV", (GLenum) GL_GLYPH_WIDTH_BIT_NV, "GL_GLYPH_WIDTH_BIT_NV");
#endif
#if defined(GL_GLYPH_HEIGHT_BIT_NV)
defconsti(env, "GL-GLYPH-HEIGHT-BIT-NV", (GLenum) GL_GLYPH_HEIGHT_BIT_NV, "GL_GLYPH_HEIGHT_BIT_NV");
#endif
#if defined(GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV)
defconsti(env, "GL-GLYPH-HORIZONTAL-BEARING-X-BIT-NV", (GLenum) GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV, "GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV");
#endif
#if defined(GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV)
defconsti(env, "GL-GLYPH-HORIZONTAL-BEARING-Y-BIT-NV", (GLenum) GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV, "GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV");
#endif
#if defined(GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV)
defconsti(env, "GL-GLYPH-HORIZONTAL-BEARING-ADVANCE-BIT-NV", (GLenum) GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV, "GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV");
#endif
#if defined(GL_GLYPH_VERTICAL_BEARING_X_BIT_NV)
defconsti(env, "GL-GLYPH-VERTICAL-BEARING-X-BIT-NV", (GLenum) GL_GLYPH_VERTICAL_BEARING_X_BIT_NV, "GL_GLYPH_VERTICAL_BEARING_X_BIT_NV");
#endif
#if defined(GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV)
defconsti(env, "GL-GLYPH-VERTICAL-BEARING-Y-BIT-NV", (GLenum) GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV, "GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV");
#endif
#if defined(GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV)
defconsti(env, "GL-GLYPH-VERTICAL-BEARING-ADVANCE-BIT-NV", (GLenum) GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV, "GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV");
#endif
#if defined(GL_GLYPH_HAS_KERNING_BIT_NV)
defconsti(env, "GL-GLYPH-HAS-KERNING-BIT-NV", (GLenum) GL_GLYPH_HAS_KERNING_BIT_NV, "GL_GLYPH_HAS_KERNING_BIT_NV");
#endif
#if defined(GL_FONT_X_MIN_BOUNDS_BIT_NV)
defconsti(env, "GL-FONT-X-MIN-BOUNDS-BIT-NV", (GLenum) GL_FONT_X_MIN_BOUNDS_BIT_NV, "GL_FONT_X_MIN_BOUNDS_BIT_NV");
#endif
#if defined(GL_FONT_Y_MIN_BOUNDS_BIT_NV)
defconsti(env, "GL-FONT-Y-MIN-BOUNDS-BIT-NV", (GLenum) GL_FONT_Y_MIN_BOUNDS_BIT_NV, "GL_FONT_Y_MIN_BOUNDS_BIT_NV");
#endif
#if defined(GL_FONT_X_MAX_BOUNDS_BIT_NV)
defconsti(env, "GL-FONT-X-MAX-BOUNDS-BIT-NV", (GLenum) GL_FONT_X_MAX_BOUNDS_BIT_NV, "GL_FONT_X_MAX_BOUNDS_BIT_NV");
#endif
#if defined(GL_FONT_Y_MAX_BOUNDS_BIT_NV)
defconsti(env, "GL-FONT-Y-MAX-BOUNDS-BIT-NV", (GLenum) GL_FONT_Y_MAX_BOUNDS_BIT_NV, "GL_FONT_Y_MAX_BOUNDS_BIT_NV");
#endif
#if defined(GL_FONT_UNITS_PER_EM_BIT_NV)
defconsti(env, "GL-FONT-UNITS-PER-EM-BIT-NV", (GLenum) GL_FONT_UNITS_PER_EM_BIT_NV, "GL_FONT_UNITS_PER_EM_BIT_NV");
#endif
#if defined(GL_FONT_ASCENDER_BIT_NV)
defconsti(env, "GL-FONT-ASCENDER-BIT-NV", (GLenum) GL_FONT_ASCENDER_BIT_NV, "GL_FONT_ASCENDER_BIT_NV");
#endif
#if defined(GL_FONT_DESCENDER_BIT_NV)
defconsti(env, "GL-FONT-DESCENDER-BIT-NV", (GLenum) GL_FONT_DESCENDER_BIT_NV, "GL_FONT_DESCENDER_BIT_NV");
#endif
#if defined(GL_FONT_HEIGHT_BIT_NV)
defconsti(env, "GL-FONT-HEIGHT-BIT-NV", (GLenum) GL_FONT_HEIGHT_BIT_NV, "GL_FONT_HEIGHT_BIT_NV");
#endif
#if defined(GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV)
defconsti(env, "GL-FONT-MAX-ADVANCE-WIDTH-BIT-NV", (GLenum) GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV, "GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV");
#endif
#if defined(GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV)
defconsti(env, "GL-FONT-MAX-ADVANCE-HEIGHT-BIT-NV", (GLenum) GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV, "GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV");
#endif
#if defined(GL_FONT_UNDERLINE_POSITION_BIT_NV)
defconsti(env, "GL-FONT-UNDERLINE-POSITION-BIT-NV", (GLenum) GL_FONT_UNDERLINE_POSITION_BIT_NV, "GL_FONT_UNDERLINE_POSITION_BIT_NV");
#endif
#if defined(GL_FONT_UNDERLINE_THICKNESS_BIT_NV)
defconsti(env, "GL-FONT-UNDERLINE-THICKNESS-BIT-NV", (GLenum) GL_FONT_UNDERLINE_THICKNESS_BIT_NV, "GL_FONT_UNDERLINE_THICKNESS_BIT_NV");
#endif
#if defined(GL_FONT_HAS_KERNING_BIT_NV)
defconsti(env, "GL-FONT-HAS-KERNING-BIT-NV", (GLenum) GL_FONT_HAS_KERNING_BIT_NV, "GL_FONT_HAS_KERNING_BIT_NV");
#endif
#if defined(GL_FONT_NUM_GLYPH_INDICES_BIT_NV)
defconsti(env, "GL-FONT-NUM-GLYPH-INDICES-BIT-NV", (GLenum) GL_FONT_NUM_GLYPH_INDICES_BIT_NV, "GL_FONT_NUM_GLYPH_INDICES_BIT_NV");
#endif
#if defined(GL_ACCUM_ADJACENT_PAIRS_NV)
defconsti(env, "GL-ACCUM-ADJACENT-PAIRS-NV", (GLenum) GL_ACCUM_ADJACENT_PAIRS_NV, "GL_ACCUM_ADJACENT_PAIRS_NV");
#endif
#if defined(GL_ADJACENT_PAIRS_NV)
defconsti(env, "GL-ADJACENT-PAIRS-NV", (GLenum) GL_ADJACENT_PAIRS_NV, "GL_ADJACENT_PAIRS_NV");
#endif
#if defined(GL_FIRST_TO_REST_NV)
defconsti(env, "GL-FIRST-TO-REST-NV", (GLenum) GL_FIRST_TO_REST_NV, "GL_FIRST_TO_REST_NV");
#endif
#if defined(GL_DELETE_STATUS)
defconsti(env, "GL-DELETE-STATUS", (GLenum) GL_DELETE_STATUS, "GL_DELETE_STATUS");
#endif
#if defined(GL_LINK_STATUS)
defconsti(env, "GL-LINK-STATUS", (GLenum) GL_LINK_STATUS, "GL_LINK_STATUS");
#endif
#if defined(GL_VALIDATE_STATUS)
defconsti(env, "GL-VALIDATE-STATUS", (GLenum) GL_VALIDATE_STATUS, "GL_VALIDATE_STATUS");
#endif
#if defined(GL_INFO_LOG_LENGTH)
defconsti(env, "GL-INFO-LOG-LENGTH", (GLenum) GL_INFO_LOG_LENGTH, "GL_INFO_LOG_LENGTH");
#endif
#if defined(GL_ATTACHED_SHADERS)
defconsti(env, "GL-ATTACHED-SHADERS", (GLenum) GL_ATTACHED_SHADERS, "GL_ATTACHED_SHADERS");
#endif
#if defined(GL_ACTIVE_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-ACTIVE-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_ACTIVE_ATOMIC_COUNTER_BUFFERS, "GL_ACTIVE_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_ACTIVE_ATTRIBUTES)
defconsti(env, "GL-ACTIVE-ATTRIBUTES", (GLenum) GL_ACTIVE_ATTRIBUTES, "GL_ACTIVE_ATTRIBUTES");
#endif
#if defined(GL_ACTIVE_ATTRIBUTE_MAX_LENGTH)
defconsti(env, "GL-ACTIVE-ATTRIBUTE-MAX-LENGTH", (GLenum) GL_ACTIVE_ATTRIBUTE_MAX_LENGTH, "GL_ACTIVE_ATTRIBUTE_MAX_LENGTH");
#endif
#if defined(GL_ACTIVE_UNIFORMS)
defconsti(env, "GL-ACTIVE-UNIFORMS", (GLenum) GL_ACTIVE_UNIFORMS, "GL_ACTIVE_UNIFORMS");
#endif
#if defined(GL_ACTIVE_UNIFORM_BLOCKS)
defconsti(env, "GL-ACTIVE-UNIFORM-BLOCKS", (GLenum) GL_ACTIVE_UNIFORM_BLOCKS, "GL_ACTIVE_UNIFORM_BLOCKS");
#endif
#if defined(GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH)
defconsti(env, "GL-ACTIVE-UNIFORM-BLOCK-MAX-NAME-LENGTH", (GLenum) GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH, "GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH");
#endif
#if defined(GL_ACTIVE_UNIFORM_MAX_LENGTH)
defconsti(env, "GL-ACTIVE-UNIFORM-MAX-LENGTH", (GLenum) GL_ACTIVE_UNIFORM_MAX_LENGTH, "GL_ACTIVE_UNIFORM_MAX_LENGTH");
#endif
#if defined(GL_COMPUTE_WORK_GROUP_SIZE)
defconsti(env, "GL-COMPUTE-WORK-GROUP-SIZE", (GLenum) GL_COMPUTE_WORK_GROUP_SIZE, "GL_COMPUTE_WORK_GROUP_SIZE");
#endif
#if defined(GL_PROGRAM_BINARY_LENGTH)
defconsti(env, "GL-PROGRAM-BINARY-LENGTH", (GLenum) GL_PROGRAM_BINARY_LENGTH, "GL_PROGRAM_BINARY_LENGTH");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_MODE)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-MODE", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_MODE, "GL_TRANSFORM_FEEDBACK_BUFFER_MODE");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_VARYINGS)
defconsti(env, "GL-TRANSFORM-FEEDBACK-VARYINGS", (GLenum) GL_TRANSFORM_FEEDBACK_VARYINGS, "GL_TRANSFORM_FEEDBACK_VARYINGS");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH)
defconsti(env, "GL-TRANSFORM-FEEDBACK-VARYING-MAX-LENGTH", (GLenum) GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH, "GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH");
#endif
#if defined(GL_GEOMETRY_VERTICES_OUT)
defconsti(env, "GL-GEOMETRY-VERTICES-OUT", (GLenum) GL_GEOMETRY_VERTICES_OUT, "GL_GEOMETRY_VERTICES_OUT");
#endif
#if defined(GL_GEOMETRY_INPUT_TYPE)
defconsti(env, "GL-GEOMETRY-INPUT-TYPE", (GLenum) GL_GEOMETRY_INPUT_TYPE, "GL_GEOMETRY_INPUT_TYPE");
#endif
#if defined(GL_GEOMETRY_OUTPUT_TYPE)
defconsti(env, "GL-GEOMETRY-OUTPUT-TYPE", (GLenum) GL_GEOMETRY_OUTPUT_TYPE, "GL_GEOMETRY_OUTPUT_TYPE");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_FLOAT_VEC2)
defconsti(env, "GL-FLOAT-VEC2", (GLenum) GL_FLOAT_VEC2, "GL_FLOAT_VEC2");
#endif
#if defined(GL_FLOAT_VEC3)
defconsti(env, "GL-FLOAT-VEC3", (GLenum) GL_FLOAT_VEC3, "GL_FLOAT_VEC3");
#endif
#if defined(GL_FLOAT_VEC4)
defconsti(env, "GL-FLOAT-VEC4", (GLenum) GL_FLOAT_VEC4, "GL_FLOAT_VEC4");
#endif
#if defined(GL_DOUBLE)
defconsti(env, "GL-DOUBLE", (GLenum) GL_DOUBLE, "GL_DOUBLE");
#endif
#if defined(GL_DOUBLE_VEC2)
defconsti(env, "GL-DOUBLE-VEC2", (GLenum) GL_DOUBLE_VEC2, "GL_DOUBLE_VEC2");
#endif
#if defined(GL_DOUBLE_VEC3)
defconsti(env, "GL-DOUBLE-VEC3", (GLenum) GL_DOUBLE_VEC3, "GL_DOUBLE_VEC3");
#endif
#if defined(GL_DOUBLE_VEC4)
defconsti(env, "GL-DOUBLE-VEC4", (GLenum) GL_DOUBLE_VEC4, "GL_DOUBLE_VEC4");
#endif
#if defined(GL_INT)
defconsti(env, "GL-INT", (GLenum) GL_INT, "GL_INT");
#endif
#if defined(GL_INT_VEC2)
defconsti(env, "GL-INT-VEC2", (GLenum) GL_INT_VEC2, "GL_INT_VEC2");
#endif
#if defined(GL_INT_VEC3)
defconsti(env, "GL-INT-VEC3", (GLenum) GL_INT_VEC3, "GL_INT_VEC3");
#endif
#if defined(GL_INT_VEC4)
defconsti(env, "GL-INT-VEC4", (GLenum) GL_INT_VEC4, "GL_INT_VEC4");
#endif
#if defined(GL_UNSIGNED_INT)
defconsti(env, "GL-UNSIGNED-INT", (GLenum) GL_UNSIGNED_INT, "GL_UNSIGNED_INT");
#endif
#if defined(GL_UNSIGNED_INT_VEC2)
defconsti(env, "GL-UNSIGNED-INT-VEC2", (GLenum) GL_UNSIGNED_INT_VEC2, "GL_UNSIGNED_INT_VEC2");
#endif
#if defined(GL_UNSIGNED_INT_VEC3)
defconsti(env, "GL-UNSIGNED-INT-VEC3", (GLenum) GL_UNSIGNED_INT_VEC3, "GL_UNSIGNED_INT_VEC3");
#endif
#if defined(GL_UNSIGNED_INT_VEC4)
defconsti(env, "GL-UNSIGNED-INT-VEC4", (GLenum) GL_UNSIGNED_INT_VEC4, "GL_UNSIGNED_INT_VEC4");
#endif
#if defined(GL_BOOL)
defconsti(env, "GL-BOOL", (GLenum) GL_BOOL, "GL_BOOL");
#endif
#if defined(GL_BOOL_VEC2)
defconsti(env, "GL-BOOL-VEC2", (GLenum) GL_BOOL_VEC2, "GL_BOOL_VEC2");
#endif
#if defined(GL_BOOL_VEC3)
defconsti(env, "GL-BOOL-VEC3", (GLenum) GL_BOOL_VEC3, "GL_BOOL_VEC3");
#endif
#if defined(GL_BOOL_VEC4)
defconsti(env, "GL-BOOL-VEC4", (GLenum) GL_BOOL_VEC4, "GL_BOOL_VEC4");
#endif
#if defined(GL_FLOAT_MAT2)
defconsti(env, "GL-FLOAT-MAT2", (GLenum) GL_FLOAT_MAT2, "GL_FLOAT_MAT2");
#endif
#if defined(GL_FLOAT_MAT3)
defconsti(env, "GL-FLOAT-MAT3", (GLenum) GL_FLOAT_MAT3, "GL_FLOAT_MAT3");
#endif
#if defined(GL_FLOAT_MAT4)
defconsti(env, "GL-FLOAT-MAT4", (GLenum) GL_FLOAT_MAT4, "GL_FLOAT_MAT4");
#endif
#if defined(GL_FLOAT_MAT2x3)
defconsti(env, "GL-FLOAT-MAT2x3", (GLenum) GL_FLOAT_MAT2x3, "GL_FLOAT_MAT2x3");
#endif
#if defined(GL_FLOAT_MAT2x4)
defconsti(env, "GL-FLOAT-MAT2x4", (GLenum) GL_FLOAT_MAT2x4, "GL_FLOAT_MAT2x4");
#endif
#if defined(GL_FLOAT_MAT3x2)
defconsti(env, "GL-FLOAT-MAT3x2", (GLenum) GL_FLOAT_MAT3x2, "GL_FLOAT_MAT3x2");
#endif
#if defined(GL_FLOAT_MAT3x4)
defconsti(env, "GL-FLOAT-MAT3x4", (GLenum) GL_FLOAT_MAT3x4, "GL_FLOAT_MAT3x4");
#endif
#if defined(GL_FLOAT_MAT4x2)
defconsti(env, "GL-FLOAT-MAT4x2", (GLenum) GL_FLOAT_MAT4x2, "GL_FLOAT_MAT4x2");
#endif
#if defined(GL_FLOAT_MAT4x3)
defconsti(env, "GL-FLOAT-MAT4x3", (GLenum) GL_FLOAT_MAT4x3, "GL_FLOAT_MAT4x3");
#endif
#if defined(GL_DOUBLE_MAT2)
defconsti(env, "GL-DOUBLE-MAT2", (GLenum) GL_DOUBLE_MAT2, "GL_DOUBLE_MAT2");
#endif
#if defined(GL_DOUBLE_MAT3)
defconsti(env, "GL-DOUBLE-MAT3", (GLenum) GL_DOUBLE_MAT3, "GL_DOUBLE_MAT3");
#endif
#if defined(GL_DOUBLE_MAT4)
defconsti(env, "GL-DOUBLE-MAT4", (GLenum) GL_DOUBLE_MAT4, "GL_DOUBLE_MAT4");
#endif
#if defined(GL_SAMPLER_1D)
defconsti(env, "GL-SAMPLER-1D", (GLenum) GL_SAMPLER_1D, "GL_SAMPLER_1D");
#endif
#if defined(GL_SAMPLER_2D)
defconsti(env, "GL-SAMPLER-2D", (GLenum) GL_SAMPLER_2D, "GL_SAMPLER_2D");
#endif
#if defined(GL_SAMPLER_3D)
defconsti(env, "GL-SAMPLER-3D", (GLenum) GL_SAMPLER_3D, "GL_SAMPLER_3D");
#endif
#if defined(GL_SAMPLER_CUBE)
defconsti(env, "GL-SAMPLER-CUBE", (GLenum) GL_SAMPLER_CUBE, "GL_SAMPLER_CUBE");
#endif
#if defined(GL_SAMPLER_1D_SHADOW)
defconsti(env, "GL-SAMPLER-1D-SHADOW", (GLenum) GL_SAMPLER_1D_SHADOW, "GL_SAMPLER_1D_SHADOW");
#endif
#if defined(GL_SAMPLER_2D_SHADOW)
defconsti(env, "GL-SAMPLER-2D-SHADOW", (GLenum) GL_SAMPLER_2D_SHADOW, "GL_SAMPLER_2D_SHADOW");
#endif
#if defined(GL_SAMPLER_1D_ARRAY)
defconsti(env, "GL-SAMPLER-1D-ARRAY", (GLenum) GL_SAMPLER_1D_ARRAY, "GL_SAMPLER_1D_ARRAY");
#endif
#if defined(GL_SAMPLER_2D_ARRAY)
defconsti(env, "GL-SAMPLER-2D-ARRAY", (GLenum) GL_SAMPLER_2D_ARRAY, "GL_SAMPLER_2D_ARRAY");
#endif
#if defined(GL_SAMPLER_CUBE_MAP_ARRAY)
defconsti(env, "GL-SAMPLER-CUBE-MAP-ARRAY", (GLenum) GL_SAMPLER_CUBE_MAP_ARRAY, "GL_SAMPLER_CUBE_MAP_ARRAY");
#endif
#if defined(GL_SAMPLER_1D_ARRAY_SHADOW)
defconsti(env, "GL-SAMPLER-1D-ARRAY-SHADOW", (GLenum) GL_SAMPLER_1D_ARRAY_SHADOW, "GL_SAMPLER_1D_ARRAY_SHADOW");
#endif
#if defined(GL_SAMPLER_2D_ARRAY_SHADOW)
defconsti(env, "GL-SAMPLER-2D-ARRAY-SHADOW", (GLenum) GL_SAMPLER_2D_ARRAY_SHADOW, "GL_SAMPLER_2D_ARRAY_SHADOW");
#endif
#if defined(GL_SAMPLER_2D_MULTISAMPLE)
defconsti(env, "GL-SAMPLER-2D-MULTISAMPLE", (GLenum) GL_SAMPLER_2D_MULTISAMPLE, "GL_SAMPLER_2D_MULTISAMPLE");
#endif
#if defined(GL_SAMPLER_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-SAMPLER-2D-MULTISAMPLE-ARRAY", (GLenum) GL_SAMPLER_2D_MULTISAMPLE_ARRAY, "GL_SAMPLER_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_SAMPLER_CUBE_SHADOW)
defconsti(env, "GL-SAMPLER-CUBE-SHADOW", (GLenum) GL_SAMPLER_CUBE_SHADOW, "GL_SAMPLER_CUBE_SHADOW");
#endif
#if defined(GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW)
defconsti(env, "GL-SAMPLER-CUBE-MAP-ARRAY-SHADOW", (GLenum) GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW, "GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW");
#endif
#if defined(GL_SAMPLER_BUFFER)
defconsti(env, "GL-SAMPLER-BUFFER", (GLenum) GL_SAMPLER_BUFFER, "GL_SAMPLER_BUFFER");
#endif
#if defined(GL_SAMPLER_2D_RECT)
defconsti(env, "GL-SAMPLER-2D-RECT", (GLenum) GL_SAMPLER_2D_RECT, "GL_SAMPLER_2D_RECT");
#endif
#if defined(GL_SAMPLER_2D_RECT_SHADOW)
defconsti(env, "GL-SAMPLER-2D-RECT-SHADOW", (GLenum) GL_SAMPLER_2D_RECT_SHADOW, "GL_SAMPLER_2D_RECT_SHADOW");
#endif
#if defined(GL_INT_SAMPLER_1D)
defconsti(env, "GL-INT-SAMPLER-1D", (GLenum) GL_INT_SAMPLER_1D, "GL_INT_SAMPLER_1D");
#endif
#if defined(GL_INT_SAMPLER_2D)
defconsti(env, "GL-INT-SAMPLER-2D", (GLenum) GL_INT_SAMPLER_2D, "GL_INT_SAMPLER_2D");
#endif
#if defined(GL_INT_SAMPLER_3D)
defconsti(env, "GL-INT-SAMPLER-3D", (GLenum) GL_INT_SAMPLER_3D, "GL_INT_SAMPLER_3D");
#endif
#if defined(GL_INT_SAMPLER_CUBE)
defconsti(env, "GL-INT-SAMPLER-CUBE", (GLenum) GL_INT_SAMPLER_CUBE, "GL_INT_SAMPLER_CUBE");
#endif
#if defined(GL_INT_SAMPLER_1D_ARRAY)
defconsti(env, "GL-INT-SAMPLER-1D-ARRAY", (GLenum) GL_INT_SAMPLER_1D_ARRAY, "GL_INT_SAMPLER_1D_ARRAY");
#endif
#if defined(GL_INT_SAMPLER_2D_ARRAY)
defconsti(env, "GL-INT-SAMPLER-2D-ARRAY", (GLenum) GL_INT_SAMPLER_2D_ARRAY, "GL_INT_SAMPLER_2D_ARRAY");
#endif
#if defined(GL_INT_SAMPLER_CUBE_MAP_ARRAY)
defconsti(env, "GL-INT-SAMPLER-CUBE-MAP-ARRAY", (GLenum) GL_INT_SAMPLER_CUBE_MAP_ARRAY, "GL_INT_SAMPLER_CUBE_MAP_ARRAY");
#endif
#if defined(GL_INT_SAMPLER_2D_MULTISAMPLE)
defconsti(env, "GL-INT-SAMPLER-2D-MULTISAMPLE", (GLenum) GL_INT_SAMPLER_2D_MULTISAMPLE, "GL_INT_SAMPLER_2D_MULTISAMPLE");
#endif
#if defined(GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-INT-SAMPLER-2D-MULTISAMPLE-ARRAY", (GLenum) GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY, "GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_INT_SAMPLER_BUFFER)
defconsti(env, "GL-INT-SAMPLER-BUFFER", (GLenum) GL_INT_SAMPLER_BUFFER, "GL_INT_SAMPLER_BUFFER");
#endif
#if defined(GL_INT_SAMPLER_2D_RECT)
defconsti(env, "GL-INT-SAMPLER-2D-RECT", (GLenum) GL_INT_SAMPLER_2D_RECT, "GL_INT_SAMPLER_2D_RECT");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_1D)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-1D", (GLenum) GL_UNSIGNED_INT_SAMPLER_1D, "GL_UNSIGNED_INT_SAMPLER_1D");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D, "GL_UNSIGNED_INT_SAMPLER_2D");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_3D)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-3D", (GLenum) GL_UNSIGNED_INT_SAMPLER_3D, "GL_UNSIGNED_INT_SAMPLER_3D");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_CUBE)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-CUBE", (GLenum) GL_UNSIGNED_INT_SAMPLER_CUBE, "GL_UNSIGNED_INT_SAMPLER_CUBE");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_1D_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-1D-ARRAY", (GLenum) GL_UNSIGNED_INT_SAMPLER_1D_ARRAY, "GL_UNSIGNED_INT_SAMPLER_1D_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-ARRAY", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_ARRAY, "GL_UNSIGNED_INT_SAMPLER_2D_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-CUBE-MAP-ARRAY", (GLenum) GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY, "GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-MULTISAMPLE", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE, "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-MULTISAMPLE-ARRAY", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY, "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_BUFFER)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-BUFFER", (GLenum) GL_UNSIGNED_INT_SAMPLER_BUFFER, "GL_UNSIGNED_INT_SAMPLER_BUFFER");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_RECT)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-RECT", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_RECT, "GL_UNSIGNED_INT_SAMPLER_2D_RECT");
#endif
#if defined(GL_IMAGE_1D)
defconsti(env, "GL-IMAGE-1D", (GLenum) GL_IMAGE_1D, "GL_IMAGE_1D");
#endif
#if defined(GL_IMAGE_2D)
defconsti(env, "GL-IMAGE-2D", (GLenum) GL_IMAGE_2D, "GL_IMAGE_2D");
#endif
#if defined(GL_IMAGE_3D)
defconsti(env, "GL-IMAGE-3D", (GLenum) GL_IMAGE_3D, "GL_IMAGE_3D");
#endif
#if defined(GL_IMAGE_2D_RECT)
defconsti(env, "GL-IMAGE-2D-RECT", (GLenum) GL_IMAGE_2D_RECT, "GL_IMAGE_2D_RECT");
#endif
#if defined(GL_IMAGE_CUBE)
defconsti(env, "GL-IMAGE-CUBE", (GLenum) GL_IMAGE_CUBE, "GL_IMAGE_CUBE");
#endif
#if defined(GL_IMAGE_BUFFER)
defconsti(env, "GL-IMAGE-BUFFER", (GLenum) GL_IMAGE_BUFFER, "GL_IMAGE_BUFFER");
#endif
#if defined(GL_IMAGE_1D_ARRAY)
defconsti(env, "GL-IMAGE-1D-ARRAY", (GLenum) GL_IMAGE_1D_ARRAY, "GL_IMAGE_1D_ARRAY");
#endif
#if defined(GL_IMAGE_2D_ARRAY)
defconsti(env, "GL-IMAGE-2D-ARRAY", (GLenum) GL_IMAGE_2D_ARRAY, "GL_IMAGE_2D_ARRAY");
#endif
#if defined(GL_IMAGE_CUBE_MAP_ARRAY)
defconsti(env, "GL-IMAGE-CUBE-MAP-ARRAY", (GLenum) GL_IMAGE_CUBE_MAP_ARRAY, "GL_IMAGE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_IMAGE_2D_MULTISAMPLE)
defconsti(env, "GL-IMAGE-2D-MULTISAMPLE", (GLenum) GL_IMAGE_2D_MULTISAMPLE, "GL_IMAGE_2D_MULTISAMPLE");
#endif
#if defined(GL_IMAGE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-IMAGE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_IMAGE_2D_MULTISAMPLE_ARRAY, "GL_IMAGE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_INT_IMAGE_1D)
defconsti(env, "GL-INT-IMAGE-1D", (GLenum) GL_INT_IMAGE_1D, "GL_INT_IMAGE_1D");
#endif
#if defined(GL_INT_IMAGE_2D)
defconsti(env, "GL-INT-IMAGE-2D", (GLenum) GL_INT_IMAGE_2D, "GL_INT_IMAGE_2D");
#endif
#if defined(GL_INT_IMAGE_3D)
defconsti(env, "GL-INT-IMAGE-3D", (GLenum) GL_INT_IMAGE_3D, "GL_INT_IMAGE_3D");
#endif
#if defined(GL_INT_IMAGE_2D_RECT)
defconsti(env, "GL-INT-IMAGE-2D-RECT", (GLenum) GL_INT_IMAGE_2D_RECT, "GL_INT_IMAGE_2D_RECT");
#endif
#if defined(GL_INT_IMAGE_CUBE)
defconsti(env, "GL-INT-IMAGE-CUBE", (GLenum) GL_INT_IMAGE_CUBE, "GL_INT_IMAGE_CUBE");
#endif
#if defined(GL_INT_IMAGE_BUFFER)
defconsti(env, "GL-INT-IMAGE-BUFFER", (GLenum) GL_INT_IMAGE_BUFFER, "GL_INT_IMAGE_BUFFER");
#endif
#if defined(GL_INT_IMAGE_1D_ARRAY)
defconsti(env, "GL-INT-IMAGE-1D-ARRAY", (GLenum) GL_INT_IMAGE_1D_ARRAY, "GL_INT_IMAGE_1D_ARRAY");
#endif
#if defined(GL_INT_IMAGE_2D_ARRAY)
defconsti(env, "GL-INT-IMAGE-2D-ARRAY", (GLenum) GL_INT_IMAGE_2D_ARRAY, "GL_INT_IMAGE_2D_ARRAY");
#endif
#if defined(GL_INT_IMAGE_CUBE_MAP_ARRAY)
defconsti(env, "GL-INT-IMAGE-CUBE-MAP-ARRAY", (GLenum) GL_INT_IMAGE_CUBE_MAP_ARRAY, "GL_INT_IMAGE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_INT_IMAGE_2D_MULTISAMPLE)
defconsti(env, "GL-INT-IMAGE-2D-MULTISAMPLE", (GLenum) GL_INT_IMAGE_2D_MULTISAMPLE, "GL_INT_IMAGE_2D_MULTISAMPLE");
#endif
#if defined(GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-INT-IMAGE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY, "GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_1D)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-1D", (GLenum) GL_UNSIGNED_INT_IMAGE_1D, "GL_UNSIGNED_INT_IMAGE_1D");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D", (GLenum) GL_UNSIGNED_INT_IMAGE_2D, "GL_UNSIGNED_INT_IMAGE_2D");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_3D)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-3D", (GLenum) GL_UNSIGNED_INT_IMAGE_3D, "GL_UNSIGNED_INT_IMAGE_3D");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_RECT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-RECT", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_RECT, "GL_UNSIGNED_INT_IMAGE_2D_RECT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_CUBE)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-CUBE", (GLenum) GL_UNSIGNED_INT_IMAGE_CUBE, "GL_UNSIGNED_INT_IMAGE_CUBE");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_BUFFER)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-BUFFER", (GLenum) GL_UNSIGNED_INT_IMAGE_BUFFER, "GL_UNSIGNED_INT_IMAGE_BUFFER");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_1D_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-1D-ARRAY", (GLenum) GL_UNSIGNED_INT_IMAGE_1D_ARRAY, "GL_UNSIGNED_INT_IMAGE_1D_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-ARRAY", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_ARRAY, "GL_UNSIGNED_INT_IMAGE_2D_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-CUBE-MAP-ARRAY", (GLenum) GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY, "GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-MULTISAMPLE", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE, "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY, "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_ATOMIC_COUNTER)
defconsti(env, "GL-UNSIGNED-INT-ATOMIC-COUNTER", (GLenum) GL_UNSIGNED_INT_ATOMIC_COUNTER, "GL_UNSIGNED_INT_ATOMIC_COUNTER");
#endif
#if defined(GL_INTERLEAVED_ATTRIBS)
defconsti(env, "GL-INTERLEAVED-ATTRIBS", (GLenum) GL_INTERLEAVED_ATTRIBS, "GL_INTERLEAVED_ATTRIBS");
#endif
#if defined(GL_SEPARATE_ATTRIBS)
defconsti(env, "GL-SEPARATE-ATTRIBS", (GLenum) GL_SEPARATE_ATTRIBS, "GL_SEPARATE_ATTRIBS");
#endif
#if defined(GL_BYTE)
defconsti(env, "GL-BYTE", (GLenum) GL_BYTE, "GL_BYTE");
#endif
#if defined(GL_UNSIGNED_BYTE)
defconsti(env, "GL-UNSIGNED-BYTE", (GLenum) GL_UNSIGNED_BYTE, "GL_UNSIGNED_BYTE");
#endif
#if defined(GL_SHORT)
defconsti(env, "GL-SHORT", (GLenum) GL_SHORT, "GL_SHORT");
#endif
#if defined(GL_UNSIGNED_SHORT)
defconsti(env, "GL-UNSIGNED-SHORT", (GLenum) GL_UNSIGNED_SHORT, "GL_UNSIGNED_SHORT");
#endif
#if defined(GL_INT)
defconsti(env, "GL-INT", (GLenum) GL_INT, "GL_INT");
#endif
#if defined(GL_UNSIGNED_INT)
defconsti(env, "GL-UNSIGNED-INT", (GLenum) GL_UNSIGNED_INT, "GL_UNSIGNED_INT");
#endif
#if defined(GL_DOUBLE)
defconsti(env, "GL-DOUBLE", (GLenum) GL_DOUBLE, "GL_DOUBLE");
#endif
#if defined(GL_ACTIVE_VARIABLES)
defconsti(env, "GL-ACTIVE-VARIABLES", (GLenum) GL_ACTIVE_VARIABLES, "GL_ACTIVE_VARIABLES");
#endif
#if defined(GL_BUFFER_BINDING)
defconsti(env, "GL-BUFFER-BINDING", (GLenum) GL_BUFFER_BINDING, "GL_BUFFER_BINDING");
#endif
#if defined(GL_NUM_ACTIVE_VARIABLES)
defconsti(env, "GL-NUM-ACTIVE-VARIABLES", (GLenum) GL_NUM_ACTIVE_VARIABLES, "GL_NUM_ACTIVE_VARIABLES");
#endif
#if defined(GL_ARRAY_SIZE)
defconsti(env, "GL-ARRAY-SIZE", (GLenum) GL_ARRAY_SIZE, "GL_ARRAY_SIZE");
#endif
#if defined(GL_ARRAY_STRIDE)
defconsti(env, "GL-ARRAY-STRIDE", (GLenum) GL_ARRAY_STRIDE, "GL_ARRAY_STRIDE");
#endif
#if defined(GL_BLOCK_INDEX)
defconsti(env, "GL-BLOCK-INDEX", (GLenum) GL_BLOCK_INDEX, "GL_BLOCK_INDEX");
#endif
#if defined(GL_IS_ROW_MAJOR)
defconsti(env, "GL-IS-ROW-MAJOR", (GLenum) GL_IS_ROW_MAJOR, "GL_IS_ROW_MAJOR");
#endif
#if defined(GL_MATRIX_STRIDE)
defconsti(env, "GL-MATRIX-STRIDE", (GLenum) GL_MATRIX_STRIDE, "GL_MATRIX_STRIDE");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_INDEX)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-INDEX", (GLenum) GL_ATOMIC_COUNTER_BUFFER_INDEX, "GL_ATOMIC_COUNTER_BUFFER_INDEX");
#endif
#if defined(GL_BUFFER_DATA_SIZE)
defconsti(env, "GL-BUFFER-DATA-SIZE", (GLenum) GL_BUFFER_DATA_SIZE, "GL_BUFFER_DATA_SIZE");
#endif
#if defined(GL_NUM_COMPATIBLE_SUBROUTINES)
defconsti(env, "GL-NUM-COMPATIBLE-SUBROUTINES", (GLenum) GL_NUM_COMPATIBLE_SUBROUTINES, "GL_NUM_COMPATIBLE_SUBROUTINES");
#endif
#if defined(GL_COMPATIBLE_SUBROUTINES)
defconsti(env, "GL-COMPATIBLE-SUBROUTINES", (GLenum) GL_COMPATIBLE_SUBROUTINES, "GL_COMPATIBLE_SUBROUTINES");
#endif
#if defined(GL_IS_PER_PATCH)
defconsti(env, "GL-IS-PER-PATCH", (GLenum) GL_IS_PER_PATCH, "GL_IS_PER_PATCH");
#endif
#if defined(GL_LOCATION)
defconsti(env, "GL-LOCATION", (GLenum) GL_LOCATION, "GL_LOCATION");
#endif
#if defined(GL_UNIFORM)
defconsti(env, "GL-UNIFORM", (GLenum) GL_UNIFORM, "GL_UNIFORM");
#endif
#if defined(GL_LOCATION_COMPONENT)
defconsti(env, "GL-LOCATION-COMPONENT", (GLenum) GL_LOCATION_COMPONENT, "GL_LOCATION_COMPONENT");
#endif
#if defined(GL_LOCATION_INDEX)
defconsti(env, "GL-LOCATION-INDEX", (GLenum) GL_LOCATION_INDEX, "GL_LOCATION_INDEX");
#endif
#if defined(GL_NAME_LENGTH)
defconsti(env, "GL-NAME-LENGTH", (GLenum) GL_NAME_LENGTH, "GL_NAME_LENGTH");
#endif
#if defined(GL_OFFSET)
defconsti(env, "GL-OFFSET", (GLenum) GL_OFFSET, "GL_OFFSET");
#endif
#if defined(GL_REFERENCED_BY_VERTEX_SHADER)
defconsti(env, "GL-REFERENCED-BY-VERTEX-SHADER", (GLenum) GL_REFERENCED_BY_VERTEX_SHADER, "GL_REFERENCED_BY_VERTEX_SHADER");
#endif
#if defined(GL_REFERENCED_BY_TESS_CONTROL_SHADER)
defconsti(env, "GL-REFERENCED-BY-TESS-CONTROL-SHADER", (GLenum) GL_REFERENCED_BY_TESS_CONTROL_SHADER, "GL_REFERENCED_BY_TESS_CONTROL_SHADER");
#endif
#if defined(GL_REFERENCED_BY_TESS_EVALUATION_SHADER)
defconsti(env, "GL-REFERENCED-BY-TESS-EVALUATION-SHADER", (GLenum) GL_REFERENCED_BY_TESS_EVALUATION_SHADER, "GL_REFERENCED_BY_TESS_EVALUATION_SHADER");
#endif
#if defined(GL_REFERENCED_BY_GEOMETRY_SHADER)
defconsti(env, "GL-REFERENCED-BY-GEOMETRY-SHADER", (GLenum) GL_REFERENCED_BY_GEOMETRY_SHADER, "GL_REFERENCED_BY_GEOMETRY_SHADER");
#endif
#if defined(GL_REFERENCED_BY_FRAGMENT_SHADER)
defconsti(env, "GL-REFERENCED-BY-FRAGMENT-SHADER", (GLenum) GL_REFERENCED_BY_FRAGMENT_SHADER, "GL_REFERENCED_BY_FRAGMENT_SHADER");
#endif
#if defined(GL_REFERENCED_BY_COMPUTE_SHADER)
defconsti(env, "GL-REFERENCED-BY-COMPUTE-SHADER", (GLenum) GL_REFERENCED_BY_COMPUTE_SHADER, "GL_REFERENCED_BY_COMPUTE_SHADER");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_INDEX)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-INDEX", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_INDEX, "GL_TRANSFORM_FEEDBACK_BUFFER_INDEX");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-STRIDE", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE, "GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE");
#endif
#if defined(GL_TOP_LEVEL_ARRAY_SIZE)
defconsti(env, "GL-TOP-LEVEL-ARRAY-SIZE", (GLenum) GL_TOP_LEVEL_ARRAY_SIZE, "GL_TOP_LEVEL_ARRAY_SIZE");
#endif
#if defined(GL_TOP_LEVEL_ARRAY_STRIDE)
defconsti(env, "GL-TOP-LEVEL-ARRAY-STRIDE", (GLenum) GL_TOP_LEVEL_ARRAY_STRIDE, "GL_TOP_LEVEL_ARRAY_STRIDE");
#endif
#if defined(GL_TYPE)
defconsti(env, "GL-TYPE", (GLenum) GL_TYPE, "GL_TYPE");
#endif
#if defined(GL_NONE)
defconsti(env, "GL-NONE", (GLenum) GL_NONE, "GL_NONE");
#endif
#if defined(GL_COMPARE_REF_TO_TEXTURE)
defconsti(env, "GL-COMPARE-REF-TO-TEXTURE", (GLenum) GL_COMPARE_REF_TO_TEXTURE, "GL_COMPARE_REF_TO_TEXTURE");
#endif
#if defined(GL_COMPARE_R_TO_TEXTURE)
defconsti(env, "GL-COMPARE-R-TO-TEXTURE", (GLenum) GL_COMPARE_R_TO_TEXTURE, "GL_COMPARE_R_TO_TEXTURE");
#endif
#if defined(GL_RED)
defconsti(env, "GL-RED", (GLenum) GL_RED, "GL_RED");
#endif
#if defined(GL_GREEN)
defconsti(env, "GL-GREEN", (GLenum) GL_GREEN, "GL_GREEN");
#endif
#if defined(GL_BLUE)
defconsti(env, "GL-BLUE", (GLenum) GL_BLUE, "GL_BLUE");
#endif
#if defined(GL_ALPHA)
defconsti(env, "GL-ALPHA", (GLenum) GL_ALPHA, "GL_ALPHA");
#endif
#if defined(GL_ZERO)
defconsti(env, "GL-ZERO", (GLenum) GL_ZERO, "GL_ZERO");
#endif
#if defined(GL_ONE)
defconsti(env, "GL-ONE", (GLenum) GL_ONE, "GL_ONE");
#endif
#if defined(GL_CURRENT_BIT)
defconsti(env, "GL-CURRENT-BIT", (GLenum) GL_CURRENT_BIT, "GL_CURRENT_BIT");
#endif
#if defined(GL_POINT_BIT)
defconsti(env, "GL-POINT-BIT", (GLenum) GL_POINT_BIT, "GL_POINT_BIT");
#endif
#if defined(GL_LINE_BIT)
defconsti(env, "GL-LINE-BIT", (GLenum) GL_LINE_BIT, "GL_LINE_BIT");
#endif
#if defined(GL_POLYGON_BIT)
defconsti(env, "GL-POLYGON-BIT", (GLenum) GL_POLYGON_BIT, "GL_POLYGON_BIT");
#endif
#if defined(GL_POLYGON_STIPPLE_BIT)
defconsti(env, "GL-POLYGON-STIPPLE-BIT", (GLenum) GL_POLYGON_STIPPLE_BIT, "GL_POLYGON_STIPPLE_BIT");
#endif
#if defined(GL_PIXEL_MODE_BIT)
defconsti(env, "GL-PIXEL-MODE-BIT", (GLenum) GL_PIXEL_MODE_BIT, "GL_PIXEL_MODE_BIT");
#endif
#if defined(GL_LIGHTING_BIT)
defconsti(env, "GL-LIGHTING-BIT", (GLenum) GL_LIGHTING_BIT, "GL_LIGHTING_BIT");
#endif
#if defined(GL_FOG_BIT)
defconsti(env, "GL-FOG-BIT", (GLenum) GL_FOG_BIT, "GL_FOG_BIT");
#endif
#if defined(GL_DEPTH_BUFFER_BIT)
defconsti(env, "GL-DEPTH-BUFFER-BIT", (GLenum) GL_DEPTH_BUFFER_BIT, "GL_DEPTH_BUFFER_BIT");
#endif
#if defined(GL_ACCUM_BUFFER_BIT)
defconsti(env, "GL-ACCUM-BUFFER-BIT", (GLenum) GL_ACCUM_BUFFER_BIT, "GL_ACCUM_BUFFER_BIT");
#endif
#if defined(GL_STENCIL_BUFFER_BIT)
defconsti(env, "GL-STENCIL-BUFFER-BIT", (GLenum) GL_STENCIL_BUFFER_BIT, "GL_STENCIL_BUFFER_BIT");
#endif
#if defined(GL_VIEWPORT_BIT)
defconsti(env, "GL-VIEWPORT-BIT", (GLenum) GL_VIEWPORT_BIT, "GL_VIEWPORT_BIT");
#endif
#if defined(GL_TRANSFORM_BIT)
defconsti(env, "GL-TRANSFORM-BIT", (GLenum) GL_TRANSFORM_BIT, "GL_TRANSFORM_BIT");
#endif
#if defined(GL_ENABLE_BIT)
defconsti(env, "GL-ENABLE-BIT", (GLenum) GL_ENABLE_BIT, "GL_ENABLE_BIT");
#endif
#if defined(GL_COLOR_BUFFER_BIT)
defconsti(env, "GL-COLOR-BUFFER-BIT", (GLenum) GL_COLOR_BUFFER_BIT, "GL_COLOR_BUFFER_BIT");
#endif
#if defined(GL_HINT_BIT)
defconsti(env, "GL-HINT-BIT", (GLenum) GL_HINT_BIT, "GL_HINT_BIT");
#endif
#if defined(GL_EVAL_BIT)
defconsti(env, "GL-EVAL-BIT", (GLenum) GL_EVAL_BIT, "GL_EVAL_BIT");
#endif
#if defined(GL_LIST_BIT)
defconsti(env, "GL-LIST-BIT", (GLenum) GL_LIST_BIT, "GL_LIST_BIT");
#endif
#if defined(GL_TEXTURE_BIT)
defconsti(env, "GL-TEXTURE-BIT", (GLenum) GL_TEXTURE_BIT, "GL_TEXTURE_BIT");
#endif
#if defined(GL_SCISSOR_BIT)
defconsti(env, "GL-SCISSOR-BIT", (GLenum) GL_SCISSOR_BIT, "GL_SCISSOR_BIT");
#endif
#if defined(GL_MULTISAMPLE_BIT)
defconsti(env, "GL-MULTISAMPLE-BIT", (GLenum) GL_MULTISAMPLE_BIT, "GL_MULTISAMPLE_BIT");
#endif
#if defined(GL_MULTISAMPLE_BIT_ARB)
defconsti(env, "GL-MULTISAMPLE-BIT-ARB", (GLenum) GL_MULTISAMPLE_BIT_ARB, "GL_MULTISAMPLE_BIT_ARB");
#endif
#if defined(GL_MULTISAMPLE_BIT_EXT)
defconsti(env, "GL-MULTISAMPLE-BIT-EXT", (GLenum) GL_MULTISAMPLE_BIT_EXT, "GL_MULTISAMPLE_BIT_EXT");
#endif
#if defined(GL_MULTISAMPLE_BIT_3DFX)
defconsti(env, "GL-MULTISAMPLE-BIT-3DFX", (GLenum) GL_MULTISAMPLE_BIT_3DFX, "GL_MULTISAMPLE_BIT_3DFX");
#endif
#if defined(GL_ALL_ATTRIB_BITS)
defconsti(env, "GL-ALL-ATTRIB-BITS", (GLenum) GL_ALL_ATTRIB_BITS, "GL_ALL_ATTRIB_BITS");
#endif
#if defined(GL_DYNAMIC_STORAGE_BIT)
defconsti(env, "GL-DYNAMIC-STORAGE-BIT", (GLenum) GL_DYNAMIC_STORAGE_BIT, "GL_DYNAMIC_STORAGE_BIT");
#endif
#if defined(GL_DYNAMIC_STORAGE_BIT_EXT)
defconsti(env, "GL-DYNAMIC-STORAGE-BIT-EXT", (GLenum) GL_DYNAMIC_STORAGE_BIT_EXT, "GL_DYNAMIC_STORAGE_BIT_EXT");
#endif
#if defined(GL_CLIENT_STORAGE_BIT)
defconsti(env, "GL-CLIENT-STORAGE-BIT", (GLenum) GL_CLIENT_STORAGE_BIT, "GL_CLIENT_STORAGE_BIT");
#endif
#if defined(GL_CLIENT_STORAGE_BIT_EXT)
defconsti(env, "GL-CLIENT-STORAGE-BIT-EXT", (GLenum) GL_CLIENT_STORAGE_BIT_EXT, "GL_CLIENT_STORAGE_BIT_EXT");
#endif
#if defined(GL_SPARSE_STORAGE_BIT_ARB)
defconsti(env, "GL-SPARSE-STORAGE-BIT-ARB", (GLenum) GL_SPARSE_STORAGE_BIT_ARB, "GL_SPARSE_STORAGE_BIT_ARB");
#endif
#if defined(GL_LGPU_SEPARATE_STORAGE_BIT_NVX)
defconsti(env, "GL-LGPU-SEPARATE-STORAGE-BIT-NVX", (GLenum) GL_LGPU_SEPARATE_STORAGE_BIT_NVX, "GL_LGPU_SEPARATE_STORAGE_BIT_NVX");
#endif
#if defined(GL_PER_GPU_STORAGE_BIT_NV)
defconsti(env, "GL-PER-GPU-STORAGE-BIT-NV", (GLenum) GL_PER_GPU_STORAGE_BIT_NV, "GL_PER_GPU_STORAGE_BIT_NV");
#endif
#if defined(GL_EXTERNAL_STORAGE_BIT_NVX)
defconsti(env, "GL-EXTERNAL-STORAGE-BIT-NVX", (GLenum) GL_EXTERNAL_STORAGE_BIT_NVX, "GL_EXTERNAL_STORAGE_BIT_NVX");
#endif
#if defined(GL_COVERAGE_BUFFER_BIT_NV)
defconsti(env, "GL-COVERAGE-BUFFER-BIT-NV", (GLenum) GL_COVERAGE_BUFFER_BIT_NV, "GL_COVERAGE_BUFFER_BIT_NV");
#endif
#if defined(GL_CLIENT_PIXEL_STORE_BIT)
defconsti(env, "GL-CLIENT-PIXEL-STORE-BIT", (GLenum) GL_CLIENT_PIXEL_STORE_BIT, "GL_CLIENT_PIXEL_STORE_BIT");
#endif
#if defined(GL_CLIENT_VERTEX_ARRAY_BIT)
defconsti(env, "GL-CLIENT-VERTEX-ARRAY-BIT", (GLenum) GL_CLIENT_VERTEX_ARRAY_BIT, "GL_CLIENT_VERTEX_ARRAY_BIT");
#endif
#if defined(GL_CLIENT_ALL_ATTRIB_BITS)
defconsti(env, "GL-CLIENT-ALL-ATTRIB-BITS", (GLenum) GL_CLIENT_ALL_ATTRIB_BITS, "GL_CLIENT_ALL_ATTRIB_BITS");
#endif
#if defined(GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT)
defconsti(env, "GL-CONTEXT-FLAG-FORWARD-COMPATIBLE-BIT", (GLenum) GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT, "GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT");
#endif
#if defined(GL_CONTEXT_FLAG_DEBUG_BIT)
defconsti(env, "GL-CONTEXT-FLAG-DEBUG-BIT", (GLenum) GL_CONTEXT_FLAG_DEBUG_BIT, "GL_CONTEXT_FLAG_DEBUG_BIT");
#endif
#if defined(GL_CONTEXT_FLAG_DEBUG_BIT_KHR)
defconsti(env, "GL-CONTEXT-FLAG-DEBUG-BIT-KHR", (GLenum) GL_CONTEXT_FLAG_DEBUG_BIT_KHR, "GL_CONTEXT_FLAG_DEBUG_BIT_KHR");
#endif
#if defined(GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT)
defconsti(env, "GL-CONTEXT-FLAG-ROBUST-ACCESS-BIT", (GLenum) GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT, "GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT");
#endif
#if defined(GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB)
defconsti(env, "GL-CONTEXT-FLAG-ROBUST-ACCESS-BIT-ARB", (GLenum) GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB, "GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB");
#endif
#if defined(GL_CONTEXT_FLAG_NO_ERROR_BIT)
defconsti(env, "GL-CONTEXT-FLAG-NO-ERROR-BIT", (GLenum) GL_CONTEXT_FLAG_NO_ERROR_BIT, "GL_CONTEXT_FLAG_NO_ERROR_BIT");
#endif
#if defined(GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR)
defconsti(env, "GL-CONTEXT-FLAG-NO-ERROR-BIT-KHR", (GLenum) GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR, "GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR");
#endif
#if defined(GL_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT)
defconsti(env, "GL-CONTEXT-FLAG-PROTECTED-CONTENT-BIT-EXT", (GLenum) GL_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT, "GL_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT");
#endif
#if defined(GL_CONTEXT_CORE_PROFILE_BIT)
defconsti(env, "GL-CONTEXT-CORE-PROFILE-BIT", (GLenum) GL_CONTEXT_CORE_PROFILE_BIT, "GL_CONTEXT_CORE_PROFILE_BIT");
#endif
#if defined(GL_CONTEXT_COMPATIBILITY_PROFILE_BIT)
defconsti(env, "GL-CONTEXT-COMPATIBILITY-PROFILE-BIT", (GLenum) GL_CONTEXT_COMPATIBILITY_PROFILE_BIT, "GL_CONTEXT_COMPATIBILITY_PROFILE_BIT");
#endif
#if defined(GL_MAP_READ_BIT)
defconsti(env, "GL-MAP-READ-BIT", (GLenum) GL_MAP_READ_BIT, "GL_MAP_READ_BIT");
#endif
#if defined(GL_MAP_READ_BIT_EXT)
defconsti(env, "GL-MAP-READ-BIT-EXT", (GLenum) GL_MAP_READ_BIT_EXT, "GL_MAP_READ_BIT_EXT");
#endif
#if defined(GL_MAP_WRITE_BIT)
defconsti(env, "GL-MAP-WRITE-BIT", (GLenum) GL_MAP_WRITE_BIT, "GL_MAP_WRITE_BIT");
#endif
#if defined(GL_MAP_WRITE_BIT_EXT)
defconsti(env, "GL-MAP-WRITE-BIT-EXT", (GLenum) GL_MAP_WRITE_BIT_EXT, "GL_MAP_WRITE_BIT_EXT");
#endif
#if defined(GL_MAP_INVALIDATE_RANGE_BIT)
defconsti(env, "GL-MAP-INVALIDATE-RANGE-BIT", (GLenum) GL_MAP_INVALIDATE_RANGE_BIT, "GL_MAP_INVALIDATE_RANGE_BIT");
#endif
#if defined(GL_MAP_INVALIDATE_RANGE_BIT_EXT)
defconsti(env, "GL-MAP-INVALIDATE-RANGE-BIT-EXT", (GLenum) GL_MAP_INVALIDATE_RANGE_BIT_EXT, "GL_MAP_INVALIDATE_RANGE_BIT_EXT");
#endif
#if defined(GL_MAP_INVALIDATE_BUFFER_BIT)
defconsti(env, "GL-MAP-INVALIDATE-BUFFER-BIT", (GLenum) GL_MAP_INVALIDATE_BUFFER_BIT, "GL_MAP_INVALIDATE_BUFFER_BIT");
#endif
#if defined(GL_MAP_INVALIDATE_BUFFER_BIT_EXT)
defconsti(env, "GL-MAP-INVALIDATE-BUFFER-BIT-EXT", (GLenum) GL_MAP_INVALIDATE_BUFFER_BIT_EXT, "GL_MAP_INVALIDATE_BUFFER_BIT_EXT");
#endif
#if defined(GL_MAP_FLUSH_EXPLICIT_BIT)
defconsti(env, "GL-MAP-FLUSH-EXPLICIT-BIT", (GLenum) GL_MAP_FLUSH_EXPLICIT_BIT, "GL_MAP_FLUSH_EXPLICIT_BIT");
#endif
#if defined(GL_MAP_FLUSH_EXPLICIT_BIT_EXT)
defconsti(env, "GL-MAP-FLUSH-EXPLICIT-BIT-EXT", (GLenum) GL_MAP_FLUSH_EXPLICIT_BIT_EXT, "GL_MAP_FLUSH_EXPLICIT_BIT_EXT");
#endif
#if defined(GL_MAP_UNSYNCHRONIZED_BIT)
defconsti(env, "GL-MAP-UNSYNCHRONIZED-BIT", (GLenum) GL_MAP_UNSYNCHRONIZED_BIT, "GL_MAP_UNSYNCHRONIZED_BIT");
#endif
#if defined(GL_MAP_UNSYNCHRONIZED_BIT_EXT)
defconsti(env, "GL-MAP-UNSYNCHRONIZED-BIT-EXT", (GLenum) GL_MAP_UNSYNCHRONIZED_BIT_EXT, "GL_MAP_UNSYNCHRONIZED_BIT_EXT");
#endif
#if defined(GL_MAP_PERSISTENT_BIT)
defconsti(env, "GL-MAP-PERSISTENT-BIT", (GLenum) GL_MAP_PERSISTENT_BIT, "GL_MAP_PERSISTENT_BIT");
#endif
#if defined(GL_MAP_PERSISTENT_BIT_EXT)
defconsti(env, "GL-MAP-PERSISTENT-BIT-EXT", (GLenum) GL_MAP_PERSISTENT_BIT_EXT, "GL_MAP_PERSISTENT_BIT_EXT");
#endif
#if defined(GL_MAP_COHERENT_BIT)
defconsti(env, "GL-MAP-COHERENT-BIT", (GLenum) GL_MAP_COHERENT_BIT, "GL_MAP_COHERENT_BIT");
#endif
#if defined(GL_MAP_COHERENT_BIT_EXT)
defconsti(env, "GL-MAP-COHERENT-BIT-EXT", (GLenum) GL_MAP_COHERENT_BIT_EXT, "GL_MAP_COHERENT_BIT_EXT");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-BARRIER-BIT", (GLenum) GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT, "GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-BARRIER-BIT-EXT", (GLenum) GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT, "GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT");
#endif
#if defined(GL_ELEMENT_ARRAY_BARRIER_BIT)
defconsti(env, "GL-ELEMENT-ARRAY-BARRIER-BIT", (GLenum) GL_ELEMENT_ARRAY_BARRIER_BIT, "GL_ELEMENT_ARRAY_BARRIER_BIT");
#endif
#if defined(GL_ELEMENT_ARRAY_BARRIER_BIT_EXT)
defconsti(env, "GL-ELEMENT-ARRAY-BARRIER-BIT-EXT", (GLenum) GL_ELEMENT_ARRAY_BARRIER_BIT_EXT, "GL_ELEMENT_ARRAY_BARRIER_BIT_EXT");
#endif
#if defined(GL_UNIFORM_BARRIER_BIT)
defconsti(env, "GL-UNIFORM-BARRIER-BIT", (GLenum) GL_UNIFORM_BARRIER_BIT, "GL_UNIFORM_BARRIER_BIT");
#endif
#if defined(GL_UNIFORM_BARRIER_BIT_EXT)
defconsti(env, "GL-UNIFORM-BARRIER-BIT-EXT", (GLenum) GL_UNIFORM_BARRIER_BIT_EXT, "GL_UNIFORM_BARRIER_BIT_EXT");
#endif
#if defined(GL_TEXTURE_FETCH_BARRIER_BIT)
defconsti(env, "GL-TEXTURE-FETCH-BARRIER-BIT", (GLenum) GL_TEXTURE_FETCH_BARRIER_BIT, "GL_TEXTURE_FETCH_BARRIER_BIT");
#endif
#if defined(GL_TEXTURE_FETCH_BARRIER_BIT_EXT)
defconsti(env, "GL-TEXTURE-FETCH-BARRIER-BIT-EXT", (GLenum) GL_TEXTURE_FETCH_BARRIER_BIT_EXT, "GL_TEXTURE_FETCH_BARRIER_BIT_EXT");
#endif
#if defined(GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV)
defconsti(env, "GL-SHADER-GLOBAL-ACCESS-BARRIER-BIT-NV", (GLenum) GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV, "GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV");
#endif
#if defined(GL_SHADER_IMAGE_ACCESS_BARRIER_BIT)
defconsti(env, "GL-SHADER-IMAGE-ACCESS-BARRIER-BIT", (GLenum) GL_SHADER_IMAGE_ACCESS_BARRIER_BIT, "GL_SHADER_IMAGE_ACCESS_BARRIER_BIT");
#endif
#if defined(GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT)
defconsti(env, "GL-SHADER-IMAGE-ACCESS-BARRIER-BIT-EXT", (GLenum) GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT, "GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT");
#endif
#if defined(GL_COMMAND_BARRIER_BIT)
defconsti(env, "GL-COMMAND-BARRIER-BIT", (GLenum) GL_COMMAND_BARRIER_BIT, "GL_COMMAND_BARRIER_BIT");
#endif
#if defined(GL_COMMAND_BARRIER_BIT_EXT)
defconsti(env, "GL-COMMAND-BARRIER-BIT-EXT", (GLenum) GL_COMMAND_BARRIER_BIT_EXT, "GL_COMMAND_BARRIER_BIT_EXT");
#endif
#if defined(GL_PIXEL_BUFFER_BARRIER_BIT)
defconsti(env, "GL-PIXEL-BUFFER-BARRIER-BIT", (GLenum) GL_PIXEL_BUFFER_BARRIER_BIT, "GL_PIXEL_BUFFER_BARRIER_BIT");
#endif
#if defined(GL_PIXEL_BUFFER_BARRIER_BIT_EXT)
defconsti(env, "GL-PIXEL-BUFFER-BARRIER-BIT-EXT", (GLenum) GL_PIXEL_BUFFER_BARRIER_BIT_EXT, "GL_PIXEL_BUFFER_BARRIER_BIT_EXT");
#endif
#if defined(GL_TEXTURE_UPDATE_BARRIER_BIT)
defconsti(env, "GL-TEXTURE-UPDATE-BARRIER-BIT", (GLenum) GL_TEXTURE_UPDATE_BARRIER_BIT, "GL_TEXTURE_UPDATE_BARRIER_BIT");
#endif
#if defined(GL_TEXTURE_UPDATE_BARRIER_BIT_EXT)
defconsti(env, "GL-TEXTURE-UPDATE-BARRIER-BIT-EXT", (GLenum) GL_TEXTURE_UPDATE_BARRIER_BIT_EXT, "GL_TEXTURE_UPDATE_BARRIER_BIT_EXT");
#endif
#if defined(GL_BUFFER_UPDATE_BARRIER_BIT)
defconsti(env, "GL-BUFFER-UPDATE-BARRIER-BIT", (GLenum) GL_BUFFER_UPDATE_BARRIER_BIT, "GL_BUFFER_UPDATE_BARRIER_BIT");
#endif
#if defined(GL_BUFFER_UPDATE_BARRIER_BIT_EXT)
defconsti(env, "GL-BUFFER-UPDATE-BARRIER-BIT-EXT", (GLenum) GL_BUFFER_UPDATE_BARRIER_BIT_EXT, "GL_BUFFER_UPDATE_BARRIER_BIT_EXT");
#endif
#if defined(GL_FRAMEBUFFER_BARRIER_BIT)
defconsti(env, "GL-FRAMEBUFFER-BARRIER-BIT", (GLenum) GL_FRAMEBUFFER_BARRIER_BIT, "GL_FRAMEBUFFER_BARRIER_BIT");
#endif
#if defined(GL_FRAMEBUFFER_BARRIER_BIT_EXT)
defconsti(env, "GL-FRAMEBUFFER-BARRIER-BIT-EXT", (GLenum) GL_FRAMEBUFFER_BARRIER_BIT_EXT, "GL_FRAMEBUFFER_BARRIER_BIT_EXT");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BARRIER_BIT)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BARRIER-BIT", (GLenum) GL_TRANSFORM_FEEDBACK_BARRIER_BIT, "GL_TRANSFORM_FEEDBACK_BARRIER_BIT");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BARRIER-BIT-EXT", (GLenum) GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT, "GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT");
#endif
#if defined(GL_ATOMIC_COUNTER_BARRIER_BIT)
defconsti(env, "GL-ATOMIC-COUNTER-BARRIER-BIT", (GLenum) GL_ATOMIC_COUNTER_BARRIER_BIT, "GL_ATOMIC_COUNTER_BARRIER_BIT");
#endif
#if defined(GL_ATOMIC_COUNTER_BARRIER_BIT_EXT)
defconsti(env, "GL-ATOMIC-COUNTER-BARRIER-BIT-EXT", (GLenum) GL_ATOMIC_COUNTER_BARRIER_BIT_EXT, "GL_ATOMIC_COUNTER_BARRIER_BIT_EXT");
#endif
#if defined(GL_SHADER_STORAGE_BARRIER_BIT)
defconsti(env, "GL-SHADER-STORAGE-BARRIER-BIT", (GLenum) GL_SHADER_STORAGE_BARRIER_BIT, "GL_SHADER_STORAGE_BARRIER_BIT");
#endif
#if defined(GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT)
defconsti(env, "GL-CLIENT-MAPPED-BUFFER-BARRIER-BIT", (GLenum) GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT, "GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT");
#endif
#if defined(GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT)
defconsti(env, "GL-CLIENT-MAPPED-BUFFER-BARRIER-BIT-EXT", (GLenum) GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT, "GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT");
#endif
#if defined(GL_QUERY_BUFFER_BARRIER_BIT)
defconsti(env, "GL-QUERY-BUFFER-BARRIER-BIT", (GLenum) GL_QUERY_BUFFER_BARRIER_BIT, "GL_QUERY_BUFFER_BARRIER_BIT");
#endif
#if defined(GL_ALL_BARRIER_BITS)
defconsti(env, "GL-ALL-BARRIER-BITS", (GLenum) GL_ALL_BARRIER_BITS, "GL_ALL_BARRIER_BITS");
#endif
#if defined(GL_ALL_BARRIER_BITS_EXT)
defconsti(env, "GL-ALL-BARRIER-BITS-EXT", (GLenum) GL_ALL_BARRIER_BITS_EXT, "GL_ALL_BARRIER_BITS_EXT");
#endif
#if defined(GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD)
defconsti(env, "GL-QUERY-DEPTH-PASS-EVENT-BIT-AMD", (GLenum) GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD, "GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD");
#endif
#if defined(GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD)
defconsti(env, "GL-QUERY-DEPTH-FAIL-EVENT-BIT-AMD", (GLenum) GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD, "GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD");
#endif
#if defined(GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD)
defconsti(env, "GL-QUERY-STENCIL-FAIL-EVENT-BIT-AMD", (GLenum) GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD, "GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD");
#endif
#if defined(GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD)
defconsti(env, "GL-QUERY-DEPTH-BOUNDS-FAIL-EVENT-BIT-AMD", (GLenum) GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD, "GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD");
#endif
#if defined(GL_QUERY_ALL_EVENT_BITS_AMD)
defconsti(env, "GL-QUERY-ALL-EVENT-BITS-AMD", (GLenum) GL_QUERY_ALL_EVENT_BITS_AMD, "GL_QUERY_ALL_EVENT_BITS_AMD");
#endif
#if defined(GL_SYNC_FLUSH_COMMANDS_BIT)
defconsti(env, "GL-SYNC-FLUSH-COMMANDS-BIT", (GLenum) GL_SYNC_FLUSH_COMMANDS_BIT, "GL_SYNC_FLUSH_COMMANDS_BIT");
#endif
#if defined(GL_SYNC_FLUSH_COMMANDS_BIT_APPLE)
defconsti(env, "GL-SYNC-FLUSH-COMMANDS-BIT-APPLE", (GLenum) GL_SYNC_FLUSH_COMMANDS_BIT_APPLE, "GL_SYNC_FLUSH_COMMANDS_BIT_APPLE");
#endif
#if defined(GL_VERTEX_SHADER_BIT)
defconsti(env, "GL-VERTEX-SHADER-BIT", (GLenum) GL_VERTEX_SHADER_BIT, "GL_VERTEX_SHADER_BIT");
#endif
#if defined(GL_VERTEX_SHADER_BIT_EXT)
defconsti(env, "GL-VERTEX-SHADER-BIT-EXT", (GLenum) GL_VERTEX_SHADER_BIT_EXT, "GL_VERTEX_SHADER_BIT_EXT");
#endif
#if defined(GL_FRAGMENT_SHADER_BIT)
defconsti(env, "GL-FRAGMENT-SHADER-BIT", (GLenum) GL_FRAGMENT_SHADER_BIT, "GL_FRAGMENT_SHADER_BIT");
#endif
#if defined(GL_FRAGMENT_SHADER_BIT_EXT)
defconsti(env, "GL-FRAGMENT-SHADER-BIT-EXT", (GLenum) GL_FRAGMENT_SHADER_BIT_EXT, "GL_FRAGMENT_SHADER_BIT_EXT");
#endif
#if defined(GL_GEOMETRY_SHADER_BIT)
defconsti(env, "GL-GEOMETRY-SHADER-BIT", (GLenum) GL_GEOMETRY_SHADER_BIT, "GL_GEOMETRY_SHADER_BIT");
#endif
#if defined(GL_GEOMETRY_SHADER_BIT_EXT)
defconsti(env, "GL-GEOMETRY-SHADER-BIT-EXT", (GLenum) GL_GEOMETRY_SHADER_BIT_EXT, "GL_GEOMETRY_SHADER_BIT_EXT");
#endif
#if defined(GL_GEOMETRY_SHADER_BIT_OES)
defconsti(env, "GL-GEOMETRY-SHADER-BIT-OES", (GLenum) GL_GEOMETRY_SHADER_BIT_OES, "GL_GEOMETRY_SHADER_BIT_OES");
#endif
#if defined(GL_TESS_CONTROL_SHADER_BIT)
defconsti(env, "GL-TESS-CONTROL-SHADER-BIT", (GLenum) GL_TESS_CONTROL_SHADER_BIT, "GL_TESS_CONTROL_SHADER_BIT");
#endif
#if defined(GL_TESS_CONTROL_SHADER_BIT_EXT)
defconsti(env, "GL-TESS-CONTROL-SHADER-BIT-EXT", (GLenum) GL_TESS_CONTROL_SHADER_BIT_EXT, "GL_TESS_CONTROL_SHADER_BIT_EXT");
#endif
#if defined(GL_TESS_CONTROL_SHADER_BIT_OES)
defconsti(env, "GL-TESS-CONTROL-SHADER-BIT-OES", (GLenum) GL_TESS_CONTROL_SHADER_BIT_OES, "GL_TESS_CONTROL_SHADER_BIT_OES");
#endif
#if defined(GL_TESS_EVALUATION_SHADER_BIT)
defconsti(env, "GL-TESS-EVALUATION-SHADER-BIT", (GLenum) GL_TESS_EVALUATION_SHADER_BIT, "GL_TESS_EVALUATION_SHADER_BIT");
#endif
#if defined(GL_TESS_EVALUATION_SHADER_BIT_EXT)
defconsti(env, "GL-TESS-EVALUATION-SHADER-BIT-EXT", (GLenum) GL_TESS_EVALUATION_SHADER_BIT_EXT, "GL_TESS_EVALUATION_SHADER_BIT_EXT");
#endif
#if defined(GL_TESS_EVALUATION_SHADER_BIT_OES)
defconsti(env, "GL-TESS-EVALUATION-SHADER-BIT-OES", (GLenum) GL_TESS_EVALUATION_SHADER_BIT_OES, "GL_TESS_EVALUATION_SHADER_BIT_OES");
#endif
#if defined(GL_COMPUTE_SHADER_BIT)
defconsti(env, "GL-COMPUTE-SHADER-BIT", (GLenum) GL_COMPUTE_SHADER_BIT, "GL_COMPUTE_SHADER_BIT");
#endif
#if defined(GL_MESH_SHADER_BIT_NV)
defconsti(env, "GL-MESH-SHADER-BIT-NV", (GLenum) GL_MESH_SHADER_BIT_NV, "GL_MESH_SHADER_BIT_NV");
#endif
#if defined(GL_TASK_SHADER_BIT_NV)
defconsti(env, "GL-TASK-SHADER-BIT-NV", (GLenum) GL_TASK_SHADER_BIT_NV, "GL_TASK_SHADER_BIT_NV");
#endif
#if defined(GL_ALL_SHADER_BITS)
defconsti(env, "GL-ALL-SHADER-BITS", (GLenum) GL_ALL_SHADER_BITS, "GL_ALL_SHADER_BITS");
#endif
#if defined(GL_ALL_SHADER_BITS_EXT)
defconsti(env, "GL-ALL-SHADER-BITS-EXT", (GLenum) GL_ALL_SHADER_BITS_EXT, "GL_ALL_SHADER_BITS_EXT");
#endif
#if defined(GL_SUBGROUP_FEATURE_BASIC_BIT_KHR)
defconsti(env, "GL-SUBGROUP-FEATURE-BASIC-BIT-KHR", (GLenum) GL_SUBGROUP_FEATURE_BASIC_BIT_KHR, "GL_SUBGROUP_FEATURE_BASIC_BIT_KHR");
#endif
#if defined(GL_SUBGROUP_FEATURE_VOTE_BIT_KHR)
defconsti(env, "GL-SUBGROUP-FEATURE-VOTE-BIT-KHR", (GLenum) GL_SUBGROUP_FEATURE_VOTE_BIT_KHR, "GL_SUBGROUP_FEATURE_VOTE_BIT_KHR");
#endif
#if defined(GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR)
defconsti(env, "GL-SUBGROUP-FEATURE-ARITHMETIC-BIT-KHR", (GLenum) GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR, "GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR");
#endif
#if defined(GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR)
defconsti(env, "GL-SUBGROUP-FEATURE-BALLOT-BIT-KHR", (GLenum) GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR, "GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR");
#endif
#if defined(GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR)
defconsti(env, "GL-SUBGROUP-FEATURE-SHUFFLE-BIT-KHR", (GLenum) GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR, "GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR");
#endif
#if defined(GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR)
defconsti(env, "GL-SUBGROUP-FEATURE-SHUFFLE-RELATIVE-BIT-KHR", (GLenum) GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR, "GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR");
#endif
#if defined(GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR)
defconsti(env, "GL-SUBGROUP-FEATURE-CLUSTERED-BIT-KHR", (GLenum) GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR, "GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR");
#endif
#if defined(GL_SUBGROUP_FEATURE_QUAD_BIT_KHR)
defconsti(env, "GL-SUBGROUP-FEATURE-QUAD-BIT-KHR", (GLenum) GL_SUBGROUP_FEATURE_QUAD_BIT_KHR, "GL_SUBGROUP_FEATURE_QUAD_BIT_KHR");
#endif
#if defined(GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV)
defconsti(env, "GL-SUBGROUP-FEATURE-PARTITIONED-BIT-NV", (GLenum) GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV, "GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV");
#endif
#if defined(GL_TEXTURE_STORAGE_SPARSE_BIT_AMD)
defconsti(env, "GL-TEXTURE-STORAGE-SPARSE-BIT-AMD", (GLenum) GL_TEXTURE_STORAGE_SPARSE_BIT_AMD, "GL_TEXTURE_STORAGE_SPARSE_BIT_AMD");
#endif
#if defined(GL_RED_BIT_ATI)
defconsti(env, "GL-RED-BIT-ATI", (GLenum) GL_RED_BIT_ATI, "GL_RED_BIT_ATI");
#endif
#if defined(GL_GREEN_BIT_ATI)
defconsti(env, "GL-GREEN-BIT-ATI", (GLenum) GL_GREEN_BIT_ATI, "GL_GREEN_BIT_ATI");
#endif
#if defined(GL_BLUE_BIT_ATI)
defconsti(env, "GL-BLUE-BIT-ATI", (GLenum) GL_BLUE_BIT_ATI, "GL_BLUE_BIT_ATI");
#endif
#if defined(GL_2X_BIT_ATI)
defconsti(env, "GL-2X-BIT-ATI", (GLenum) GL_2X_BIT_ATI, "GL_2X_BIT_ATI");
#endif
#if defined(GL_4X_BIT_ATI)
defconsti(env, "GL-4X-BIT-ATI", (GLenum) GL_4X_BIT_ATI, "GL_4X_BIT_ATI");
#endif
#if defined(GL_8X_BIT_ATI)
defconsti(env, "GL-8X-BIT-ATI", (GLenum) GL_8X_BIT_ATI, "GL_8X_BIT_ATI");
#endif
#if defined(GL_HALF_BIT_ATI)
defconsti(env, "GL-HALF-BIT-ATI", (GLenum) GL_HALF_BIT_ATI, "GL_HALF_BIT_ATI");
#endif
#if defined(GL_QUARTER_BIT_ATI)
defconsti(env, "GL-QUARTER-BIT-ATI", (GLenum) GL_QUARTER_BIT_ATI, "GL_QUARTER_BIT_ATI");
#endif
#if defined(GL_EIGHTH_BIT_ATI)
defconsti(env, "GL-EIGHTH-BIT-ATI", (GLenum) GL_EIGHTH_BIT_ATI, "GL_EIGHTH_BIT_ATI");
#endif
#if defined(GL_SATURATE_BIT_ATI)
defconsti(env, "GL-SATURATE-BIT-ATI", (GLenum) GL_SATURATE_BIT_ATI, "GL_SATURATE_BIT_ATI");
#endif
#if defined(GL_COMP_BIT_ATI)
defconsti(env, "GL-COMP-BIT-ATI", (GLenum) GL_COMP_BIT_ATI, "GL_COMP_BIT_ATI");
#endif
#if defined(GL_NEGATE_BIT_ATI)
defconsti(env, "GL-NEGATE-BIT-ATI", (GLenum) GL_NEGATE_BIT_ATI, "GL_NEGATE_BIT_ATI");
#endif
#if defined(GL_BIAS_BIT_ATI)
defconsti(env, "GL-BIAS-BIT-ATI", (GLenum) GL_BIAS_BIT_ATI, "GL_BIAS_BIT_ATI");
#endif
#if defined(GL_TRACE_OPERATIONS_BIT_MESA)
defconsti(env, "GL-TRACE-OPERATIONS-BIT-MESA", (GLenum) GL_TRACE_OPERATIONS_BIT_MESA, "GL_TRACE_OPERATIONS_BIT_MESA");
#endif
#if defined(GL_TRACE_PRIMITIVES_BIT_MESA)
defconsti(env, "GL-TRACE-PRIMITIVES-BIT-MESA", (GLenum) GL_TRACE_PRIMITIVES_BIT_MESA, "GL_TRACE_PRIMITIVES_BIT_MESA");
#endif
#if defined(GL_TRACE_ARRAYS_BIT_MESA)
defconsti(env, "GL-TRACE-ARRAYS-BIT-MESA", (GLenum) GL_TRACE_ARRAYS_BIT_MESA, "GL_TRACE_ARRAYS_BIT_MESA");
#endif
#if defined(GL_TRACE_TEXTURES_BIT_MESA)
defconsti(env, "GL-TRACE-TEXTURES-BIT-MESA", (GLenum) GL_TRACE_TEXTURES_BIT_MESA, "GL_TRACE_TEXTURES_BIT_MESA");
#endif
#if defined(GL_TRACE_PIXELS_BIT_MESA)
defconsti(env, "GL-TRACE-PIXELS-BIT-MESA", (GLenum) GL_TRACE_PIXELS_BIT_MESA, "GL_TRACE_PIXELS_BIT_MESA");
#endif
#if defined(GL_TRACE_ERRORS_BIT_MESA)
defconsti(env, "GL-TRACE-ERRORS-BIT-MESA", (GLenum) GL_TRACE_ERRORS_BIT_MESA, "GL_TRACE_ERRORS_BIT_MESA");
#endif
#if defined(GL_TRACE_ALL_BITS_MESA)
defconsti(env, "GL-TRACE-ALL-BITS-MESA", (GLenum) GL_TRACE_ALL_BITS_MESA, "GL_TRACE_ALL_BITS_MESA");
#endif
#if defined(GL_BOLD_BIT_NV)
defconsti(env, "GL-BOLD-BIT-NV", (GLenum) GL_BOLD_BIT_NV, "GL_BOLD_BIT_NV");
#endif
#if defined(GL_ITALIC_BIT_NV)
defconsti(env, "GL-ITALIC-BIT-NV", (GLenum) GL_ITALIC_BIT_NV, "GL_ITALIC_BIT_NV");
#endif
#if defined(GL_GLYPH_WIDTH_BIT_NV)
defconsti(env, "GL-GLYPH-WIDTH-BIT-NV", (GLenum) GL_GLYPH_WIDTH_BIT_NV, "GL_GLYPH_WIDTH_BIT_NV");
#endif
#if defined(GL_GLYPH_HEIGHT_BIT_NV)
defconsti(env, "GL-GLYPH-HEIGHT-BIT-NV", (GLenum) GL_GLYPH_HEIGHT_BIT_NV, "GL_GLYPH_HEIGHT_BIT_NV");
#endif
#if defined(GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV)
defconsti(env, "GL-GLYPH-HORIZONTAL-BEARING-X-BIT-NV", (GLenum) GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV, "GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV");
#endif
#if defined(GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV)
defconsti(env, "GL-GLYPH-HORIZONTAL-BEARING-Y-BIT-NV", (GLenum) GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV, "GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV");
#endif
#if defined(GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV)
defconsti(env, "GL-GLYPH-HORIZONTAL-BEARING-ADVANCE-BIT-NV", (GLenum) GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV, "GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV");
#endif
#if defined(GL_GLYPH_VERTICAL_BEARING_X_BIT_NV)
defconsti(env, "GL-GLYPH-VERTICAL-BEARING-X-BIT-NV", (GLenum) GL_GLYPH_VERTICAL_BEARING_X_BIT_NV, "GL_GLYPH_VERTICAL_BEARING_X_BIT_NV");
#endif
#if defined(GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV)
defconsti(env, "GL-GLYPH-VERTICAL-BEARING-Y-BIT-NV", (GLenum) GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV, "GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV");
#endif
#if defined(GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV)
defconsti(env, "GL-GLYPH-VERTICAL-BEARING-ADVANCE-BIT-NV", (GLenum) GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV, "GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV");
#endif
#if defined(GL_GLYPH_HAS_KERNING_BIT_NV)
defconsti(env, "GL-GLYPH-HAS-KERNING-BIT-NV", (GLenum) GL_GLYPH_HAS_KERNING_BIT_NV, "GL_GLYPH_HAS_KERNING_BIT_NV");
#endif
#if defined(GL_FONT_X_MIN_BOUNDS_BIT_NV)
defconsti(env, "GL-FONT-X-MIN-BOUNDS-BIT-NV", (GLenum) GL_FONT_X_MIN_BOUNDS_BIT_NV, "GL_FONT_X_MIN_BOUNDS_BIT_NV");
#endif
#if defined(GL_FONT_Y_MIN_BOUNDS_BIT_NV)
defconsti(env, "GL-FONT-Y-MIN-BOUNDS-BIT-NV", (GLenum) GL_FONT_Y_MIN_BOUNDS_BIT_NV, "GL_FONT_Y_MIN_BOUNDS_BIT_NV");
#endif
#if defined(GL_FONT_X_MAX_BOUNDS_BIT_NV)
defconsti(env, "GL-FONT-X-MAX-BOUNDS-BIT-NV", (GLenum) GL_FONT_X_MAX_BOUNDS_BIT_NV, "GL_FONT_X_MAX_BOUNDS_BIT_NV");
#endif
#if defined(GL_FONT_Y_MAX_BOUNDS_BIT_NV)
defconsti(env, "GL-FONT-Y-MAX-BOUNDS-BIT-NV", (GLenum) GL_FONT_Y_MAX_BOUNDS_BIT_NV, "GL_FONT_Y_MAX_BOUNDS_BIT_NV");
#endif
#if defined(GL_FONT_UNITS_PER_EM_BIT_NV)
defconsti(env, "GL-FONT-UNITS-PER-EM-BIT-NV", (GLenum) GL_FONT_UNITS_PER_EM_BIT_NV, "GL_FONT_UNITS_PER_EM_BIT_NV");
#endif
#if defined(GL_FONT_ASCENDER_BIT_NV)
defconsti(env, "GL-FONT-ASCENDER-BIT-NV", (GLenum) GL_FONT_ASCENDER_BIT_NV, "GL_FONT_ASCENDER_BIT_NV");
#endif
#if defined(GL_FONT_DESCENDER_BIT_NV)
defconsti(env, "GL-FONT-DESCENDER-BIT-NV", (GLenum) GL_FONT_DESCENDER_BIT_NV, "GL_FONT_DESCENDER_BIT_NV");
#endif
#if defined(GL_FONT_HEIGHT_BIT_NV)
defconsti(env, "GL-FONT-HEIGHT-BIT-NV", (GLenum) GL_FONT_HEIGHT_BIT_NV, "GL_FONT_HEIGHT_BIT_NV");
#endif
#if defined(GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV)
defconsti(env, "GL-FONT-MAX-ADVANCE-WIDTH-BIT-NV", (GLenum) GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV, "GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV");
#endif
#if defined(GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV)
defconsti(env, "GL-FONT-MAX-ADVANCE-HEIGHT-BIT-NV", (GLenum) GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV, "GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV");
#endif
#if defined(GL_FONT_UNDERLINE_POSITION_BIT_NV)
defconsti(env, "GL-FONT-UNDERLINE-POSITION-BIT-NV", (GLenum) GL_FONT_UNDERLINE_POSITION_BIT_NV, "GL_FONT_UNDERLINE_POSITION_BIT_NV");
#endif
#if defined(GL_FONT_UNDERLINE_THICKNESS_BIT_NV)
defconsti(env, "GL-FONT-UNDERLINE-THICKNESS-BIT-NV", (GLenum) GL_FONT_UNDERLINE_THICKNESS_BIT_NV, "GL_FONT_UNDERLINE_THICKNESS_BIT_NV");
#endif
#if defined(GL_FONT_HAS_KERNING_BIT_NV)
defconsti(env, "GL-FONT-HAS-KERNING-BIT-NV", (GLenum) GL_FONT_HAS_KERNING_BIT_NV, "GL_FONT_HAS_KERNING_BIT_NV");
#endif
#if defined(GL_FONT_NUM_GLYPH_INDICES_BIT_NV)
defconsti(env, "GL-FONT-NUM-GLYPH-INDICES-BIT-NV", (GLenum) GL_FONT_NUM_GLYPH_INDICES_BIT_NV, "GL_FONT_NUM_GLYPH_INDICES_BIT_NV");
#endif
#if defined(GL_PERFQUERY_SINGLE_CONTEXT_INTEL)
defconsti(env, "GL-PERFQUERY-SINGLE-CONTEXT-INTEL", (GLenum) GL_PERFQUERY_SINGLE_CONTEXT_INTEL, "GL_PERFQUERY_SINGLE_CONTEXT_INTEL");
#endif
#if defined(GL_PERFQUERY_GLOBAL_CONTEXT_INTEL)
defconsti(env, "GL-PERFQUERY-GLOBAL-CONTEXT-INTEL", (GLenum) GL_PERFQUERY_GLOBAL_CONTEXT_INTEL, "GL_PERFQUERY_GLOBAL_CONTEXT_INTEL");
#endif
#if defined(GL_VERTEX23_BIT_PGI)
defconsti(env, "GL-VERTEX23-BIT-PGI", (GLenum) GL_VERTEX23_BIT_PGI, "GL_VERTEX23_BIT_PGI");
#endif
#if defined(GL_VERTEX4_BIT_PGI)
defconsti(env, "GL-VERTEX4-BIT-PGI", (GLenum) GL_VERTEX4_BIT_PGI, "GL_VERTEX4_BIT_PGI");
#endif
#if defined(GL_COLOR3_BIT_PGI)
defconsti(env, "GL-COLOR3-BIT-PGI", (GLenum) GL_COLOR3_BIT_PGI, "GL_COLOR3_BIT_PGI");
#endif
#if defined(GL_COLOR4_BIT_PGI)
defconsti(env, "GL-COLOR4-BIT-PGI", (GLenum) GL_COLOR4_BIT_PGI, "GL_COLOR4_BIT_PGI");
#endif
#if defined(GL_EDGEFLAG_BIT_PGI)
defconsti(env, "GL-EDGEFLAG-BIT-PGI", (GLenum) GL_EDGEFLAG_BIT_PGI, "GL_EDGEFLAG_BIT_PGI");
#endif
#if defined(GL_INDEX_BIT_PGI)
defconsti(env, "GL-INDEX-BIT-PGI", (GLenum) GL_INDEX_BIT_PGI, "GL_INDEX_BIT_PGI");
#endif
#if defined(GL_MAT_AMBIENT_BIT_PGI)
defconsti(env, "GL-MAT-AMBIENT-BIT-PGI", (GLenum) GL_MAT_AMBIENT_BIT_PGI, "GL_MAT_AMBIENT_BIT_PGI");
#endif
#if defined(GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI)
defconsti(env, "GL-MAT-AMBIENT-AND-DIFFUSE-BIT-PGI", (GLenum) GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI, "GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI");
#endif
#if defined(GL_MAT_DIFFUSE_BIT_PGI)
defconsti(env, "GL-MAT-DIFFUSE-BIT-PGI", (GLenum) GL_MAT_DIFFUSE_BIT_PGI, "GL_MAT_DIFFUSE_BIT_PGI");
#endif
#if defined(GL_MAT_EMISSION_BIT_PGI)
defconsti(env, "GL-MAT-EMISSION-BIT-PGI", (GLenum) GL_MAT_EMISSION_BIT_PGI, "GL_MAT_EMISSION_BIT_PGI");
#endif
#if defined(GL_MAT_COLOR_INDEXES_BIT_PGI)
defconsti(env, "GL-MAT-COLOR-INDEXES-BIT-PGI", (GLenum) GL_MAT_COLOR_INDEXES_BIT_PGI, "GL_MAT_COLOR_INDEXES_BIT_PGI");
#endif
#if defined(GL_MAT_SHININESS_BIT_PGI)
defconsti(env, "GL-MAT-SHININESS-BIT-PGI", (GLenum) GL_MAT_SHININESS_BIT_PGI, "GL_MAT_SHININESS_BIT_PGI");
#endif
#if defined(GL_MAT_SPECULAR_BIT_PGI)
defconsti(env, "GL-MAT-SPECULAR-BIT-PGI", (GLenum) GL_MAT_SPECULAR_BIT_PGI, "GL_MAT_SPECULAR_BIT_PGI");
#endif
#if defined(GL_NORMAL_BIT_PGI)
defconsti(env, "GL-NORMAL-BIT-PGI", (GLenum) GL_NORMAL_BIT_PGI, "GL_NORMAL_BIT_PGI");
#endif
#if defined(GL_TEXCOORD1_BIT_PGI)
defconsti(env, "GL-TEXCOORD1-BIT-PGI", (GLenum) GL_TEXCOORD1_BIT_PGI, "GL_TEXCOORD1_BIT_PGI");
#endif
#if defined(GL_TEXCOORD2_BIT_PGI)
defconsti(env, "GL-TEXCOORD2-BIT-PGI", (GLenum) GL_TEXCOORD2_BIT_PGI, "GL_TEXCOORD2_BIT_PGI");
#endif
#if defined(GL_TEXCOORD3_BIT_PGI)
defconsti(env, "GL-TEXCOORD3-BIT-PGI", (GLenum) GL_TEXCOORD3_BIT_PGI, "GL_TEXCOORD3_BIT_PGI");
#endif
#if defined(GL_TEXCOORD4_BIT_PGI)
defconsti(env, "GL-TEXCOORD4-BIT-PGI", (GLenum) GL_TEXCOORD4_BIT_PGI, "GL_TEXCOORD4_BIT_PGI");
#endif
#if defined(GL_COLOR_BUFFER_BIT0_QCOM)
defconsti(env, "GL-COLOR-BUFFER-BIT0-QCOM", (GLenum) GL_COLOR_BUFFER_BIT0_QCOM, "GL_COLOR_BUFFER_BIT0_QCOM");
#endif
#if defined(GL_COLOR_BUFFER_BIT1_QCOM)
defconsti(env, "GL-COLOR-BUFFER-BIT1-QCOM", (GLenum) GL_COLOR_BUFFER_BIT1_QCOM, "GL_COLOR_BUFFER_BIT1_QCOM");
#endif
#if defined(GL_COLOR_BUFFER_BIT2_QCOM)
defconsti(env, "GL-COLOR-BUFFER-BIT2-QCOM", (GLenum) GL_COLOR_BUFFER_BIT2_QCOM, "GL_COLOR_BUFFER_BIT2_QCOM");
#endif
#if defined(GL_COLOR_BUFFER_BIT3_QCOM)
defconsti(env, "GL-COLOR-BUFFER-BIT3-QCOM", (GLenum) GL_COLOR_BUFFER_BIT3_QCOM, "GL_COLOR_BUFFER_BIT3_QCOM");
#endif
#if defined(GL_COLOR_BUFFER_BIT4_QCOM)
defconsti(env, "GL-COLOR-BUFFER-BIT4-QCOM", (GLenum) GL_COLOR_BUFFER_BIT4_QCOM, "GL_COLOR_BUFFER_BIT4_QCOM");
#endif
#if defined(GL_COLOR_BUFFER_BIT5_QCOM)
defconsti(env, "GL-COLOR-BUFFER-BIT5-QCOM", (GLenum) GL_COLOR_BUFFER_BIT5_QCOM, "GL_COLOR_BUFFER_BIT5_QCOM");
#endif
#if defined(GL_COLOR_BUFFER_BIT6_QCOM)
defconsti(env, "GL-COLOR-BUFFER-BIT6-QCOM", (GLenum) GL_COLOR_BUFFER_BIT6_QCOM, "GL_COLOR_BUFFER_BIT6_QCOM");
#endif
#if defined(GL_COLOR_BUFFER_BIT7_QCOM)
defconsti(env, "GL-COLOR-BUFFER-BIT7-QCOM", (GLenum) GL_COLOR_BUFFER_BIT7_QCOM, "GL_COLOR_BUFFER_BIT7_QCOM");
#endif
#if defined(GL_DEPTH_BUFFER_BIT0_QCOM)
defconsti(env, "GL-DEPTH-BUFFER-BIT0-QCOM", (GLenum) GL_DEPTH_BUFFER_BIT0_QCOM, "GL_DEPTH_BUFFER_BIT0_QCOM");
#endif
#if defined(GL_DEPTH_BUFFER_BIT1_QCOM)
defconsti(env, "GL-DEPTH-BUFFER-BIT1-QCOM", (GLenum) GL_DEPTH_BUFFER_BIT1_QCOM, "GL_DEPTH_BUFFER_BIT1_QCOM");
#endif
#if defined(GL_DEPTH_BUFFER_BIT2_QCOM)
defconsti(env, "GL-DEPTH-BUFFER-BIT2-QCOM", (GLenum) GL_DEPTH_BUFFER_BIT2_QCOM, "GL_DEPTH_BUFFER_BIT2_QCOM");
#endif
#if defined(GL_DEPTH_BUFFER_BIT3_QCOM)
defconsti(env, "GL-DEPTH-BUFFER-BIT3-QCOM", (GLenum) GL_DEPTH_BUFFER_BIT3_QCOM, "GL_DEPTH_BUFFER_BIT3_QCOM");
#endif
#if defined(GL_DEPTH_BUFFER_BIT4_QCOM)
defconsti(env, "GL-DEPTH-BUFFER-BIT4-QCOM", (GLenum) GL_DEPTH_BUFFER_BIT4_QCOM, "GL_DEPTH_BUFFER_BIT4_QCOM");
#endif
#if defined(GL_DEPTH_BUFFER_BIT5_QCOM)
defconsti(env, "GL-DEPTH-BUFFER-BIT5-QCOM", (GLenum) GL_DEPTH_BUFFER_BIT5_QCOM, "GL_DEPTH_BUFFER_BIT5_QCOM");
#endif
#if defined(GL_DEPTH_BUFFER_BIT6_QCOM)
defconsti(env, "GL-DEPTH-BUFFER-BIT6-QCOM", (GLenum) GL_DEPTH_BUFFER_BIT6_QCOM, "GL_DEPTH_BUFFER_BIT6_QCOM");
#endif
#if defined(GL_DEPTH_BUFFER_BIT7_QCOM)
defconsti(env, "GL-DEPTH-BUFFER-BIT7-QCOM", (GLenum) GL_DEPTH_BUFFER_BIT7_QCOM, "GL_DEPTH_BUFFER_BIT7_QCOM");
#endif
#if defined(GL_STENCIL_BUFFER_BIT0_QCOM)
defconsti(env, "GL-STENCIL-BUFFER-BIT0-QCOM", (GLenum) GL_STENCIL_BUFFER_BIT0_QCOM, "GL_STENCIL_BUFFER_BIT0_QCOM");
#endif
#if defined(GL_STENCIL_BUFFER_BIT1_QCOM)
defconsti(env, "GL-STENCIL-BUFFER-BIT1-QCOM", (GLenum) GL_STENCIL_BUFFER_BIT1_QCOM, "GL_STENCIL_BUFFER_BIT1_QCOM");
#endif
#if defined(GL_STENCIL_BUFFER_BIT2_QCOM)
defconsti(env, "GL-STENCIL-BUFFER-BIT2-QCOM", (GLenum) GL_STENCIL_BUFFER_BIT2_QCOM, "GL_STENCIL_BUFFER_BIT2_QCOM");
#endif
#if defined(GL_STENCIL_BUFFER_BIT3_QCOM)
defconsti(env, "GL-STENCIL-BUFFER-BIT3-QCOM", (GLenum) GL_STENCIL_BUFFER_BIT3_QCOM, "GL_STENCIL_BUFFER_BIT3_QCOM");
#endif
#if defined(GL_STENCIL_BUFFER_BIT4_QCOM)
defconsti(env, "GL-STENCIL-BUFFER-BIT4-QCOM", (GLenum) GL_STENCIL_BUFFER_BIT4_QCOM, "GL_STENCIL_BUFFER_BIT4_QCOM");
#endif
#if defined(GL_STENCIL_BUFFER_BIT5_QCOM)
defconsti(env, "GL-STENCIL-BUFFER-BIT5-QCOM", (GLenum) GL_STENCIL_BUFFER_BIT5_QCOM, "GL_STENCIL_BUFFER_BIT5_QCOM");
#endif
#if defined(GL_STENCIL_BUFFER_BIT6_QCOM)
defconsti(env, "GL-STENCIL-BUFFER-BIT6-QCOM", (GLenum) GL_STENCIL_BUFFER_BIT6_QCOM, "GL_STENCIL_BUFFER_BIT6_QCOM");
#endif
#if defined(GL_STENCIL_BUFFER_BIT7_QCOM)
defconsti(env, "GL-STENCIL-BUFFER-BIT7-QCOM", (GLenum) GL_STENCIL_BUFFER_BIT7_QCOM, "GL_STENCIL_BUFFER_BIT7_QCOM");
#endif
#if defined(GL_MULTISAMPLE_BUFFER_BIT0_QCOM)
defconsti(env, "GL-MULTISAMPLE-BUFFER-BIT0-QCOM", (GLenum) GL_MULTISAMPLE_BUFFER_BIT0_QCOM, "GL_MULTISAMPLE_BUFFER_BIT0_QCOM");
#endif
#if defined(GL_MULTISAMPLE_BUFFER_BIT1_QCOM)
defconsti(env, "GL-MULTISAMPLE-BUFFER-BIT1-QCOM", (GLenum) GL_MULTISAMPLE_BUFFER_BIT1_QCOM, "GL_MULTISAMPLE_BUFFER_BIT1_QCOM");
#endif
#if defined(GL_MULTISAMPLE_BUFFER_BIT2_QCOM)
defconsti(env, "GL-MULTISAMPLE-BUFFER-BIT2-QCOM", (GLenum) GL_MULTISAMPLE_BUFFER_BIT2_QCOM, "GL_MULTISAMPLE_BUFFER_BIT2_QCOM");
#endif
#if defined(GL_MULTISAMPLE_BUFFER_BIT3_QCOM)
defconsti(env, "GL-MULTISAMPLE-BUFFER-BIT3-QCOM", (GLenum) GL_MULTISAMPLE_BUFFER_BIT3_QCOM, "GL_MULTISAMPLE_BUFFER_BIT3_QCOM");
#endif
#if defined(GL_MULTISAMPLE_BUFFER_BIT4_QCOM)
defconsti(env, "GL-MULTISAMPLE-BUFFER-BIT4-QCOM", (GLenum) GL_MULTISAMPLE_BUFFER_BIT4_QCOM, "GL_MULTISAMPLE_BUFFER_BIT4_QCOM");
#endif
#if defined(GL_MULTISAMPLE_BUFFER_BIT5_QCOM)
defconsti(env, "GL-MULTISAMPLE-BUFFER-BIT5-QCOM", (GLenum) GL_MULTISAMPLE_BUFFER_BIT5_QCOM, "GL_MULTISAMPLE_BUFFER_BIT5_QCOM");
#endif
#if defined(GL_MULTISAMPLE_BUFFER_BIT6_QCOM)
defconsti(env, "GL-MULTISAMPLE-BUFFER-BIT6-QCOM", (GLenum) GL_MULTISAMPLE_BUFFER_BIT6_QCOM, "GL_MULTISAMPLE_BUFFER_BIT6_QCOM");
#endif
#if defined(GL_MULTISAMPLE_BUFFER_BIT7_QCOM)
defconsti(env, "GL-MULTISAMPLE-BUFFER-BIT7-QCOM", (GLenum) GL_MULTISAMPLE_BUFFER_BIT7_QCOM, "GL_MULTISAMPLE_BUFFER_BIT7_QCOM");
#endif
#if defined(GL_FOVEATION_ENABLE_BIT_QCOM)
defconsti(env, "GL-FOVEATION-ENABLE-BIT-QCOM", (GLenum) GL_FOVEATION_ENABLE_BIT_QCOM, "GL_FOVEATION_ENABLE_BIT_QCOM");
#endif
#if defined(GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM)
defconsti(env, "GL-FOVEATION-SCALED-BIN-METHOD-BIT-QCOM", (GLenum) GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM, "GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM");
#endif
#if defined(GL_FOVEATION_SUBSAMPLED_LAYOUT_METHOD_BIT_QCOM)
defconsti(env, "GL-FOVEATION-SUBSAMPLED-LAYOUT-METHOD-BIT-QCOM", (GLenum) GL_FOVEATION_SUBSAMPLED_LAYOUT_METHOD_BIT_QCOM, "GL_FOVEATION_SUBSAMPLED_LAYOUT_METHOD_BIT_QCOM");
#endif
#if defined(GL_TEXTURE_DEFORMATION_BIT_SGIX)
defconsti(env, "GL-TEXTURE-DEFORMATION-BIT-SGIX", (GLenum) GL_TEXTURE_DEFORMATION_BIT_SGIX, "GL_TEXTURE_DEFORMATION_BIT_SGIX");
#endif
#if defined(GL_GEOMETRY_DEFORMATION_BIT_SGIX)
defconsti(env, "GL-GEOMETRY-DEFORMATION-BIT-SGIX", (GLenum) GL_GEOMETRY_DEFORMATION_BIT_SGIX, "GL_GEOMETRY_DEFORMATION_BIT_SGIX");
#endif
#if defined(GL_TERMINATE_SEQUENCE_COMMAND_NV)
defconsti(env, "GL-TERMINATE-SEQUENCE-COMMAND-NV", (GLenum) GL_TERMINATE_SEQUENCE_COMMAND_NV, "GL_TERMINATE_SEQUENCE_COMMAND_NV");
#endif
#if defined(GL_NOP_COMMAND_NV)
defconsti(env, "GL-NOP-COMMAND-NV", (GLenum) GL_NOP_COMMAND_NV, "GL_NOP_COMMAND_NV");
#endif
#if defined(GL_DRAW_ELEMENTS_COMMAND_NV)
defconsti(env, "GL-DRAW-ELEMENTS-COMMAND-NV", (GLenum) GL_DRAW_ELEMENTS_COMMAND_NV, "GL_DRAW_ELEMENTS_COMMAND_NV");
#endif
#if defined(GL_DRAW_ARRAYS_COMMAND_NV)
defconsti(env, "GL-DRAW-ARRAYS-COMMAND-NV", (GLenum) GL_DRAW_ARRAYS_COMMAND_NV, "GL_DRAW_ARRAYS_COMMAND_NV");
#endif
#if defined(GL_DRAW_ELEMENTS_STRIP_COMMAND_NV)
defconsti(env, "GL-DRAW-ELEMENTS-STRIP-COMMAND-NV", (GLenum) GL_DRAW_ELEMENTS_STRIP_COMMAND_NV, "GL_DRAW_ELEMENTS_STRIP_COMMAND_NV");
#endif
#if defined(GL_DRAW_ARRAYS_STRIP_COMMAND_NV)
defconsti(env, "GL-DRAW-ARRAYS-STRIP-COMMAND-NV", (GLenum) GL_DRAW_ARRAYS_STRIP_COMMAND_NV, "GL_DRAW_ARRAYS_STRIP_COMMAND_NV");
#endif
#if defined(GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV)
defconsti(env, "GL-DRAW-ELEMENTS-INSTANCED-COMMAND-NV", (GLenum) GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV, "GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV");
#endif
#if defined(GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV)
defconsti(env, "GL-DRAW-ARRAYS-INSTANCED-COMMAND-NV", (GLenum) GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV, "GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV");
#endif
#if defined(GL_ELEMENT_ADDRESS_COMMAND_NV)
defconsti(env, "GL-ELEMENT-ADDRESS-COMMAND-NV", (GLenum) GL_ELEMENT_ADDRESS_COMMAND_NV, "GL_ELEMENT_ADDRESS_COMMAND_NV");
#endif
#if defined(GL_ATTRIBUTE_ADDRESS_COMMAND_NV)
defconsti(env, "GL-ATTRIBUTE-ADDRESS-COMMAND-NV", (GLenum) GL_ATTRIBUTE_ADDRESS_COMMAND_NV, "GL_ATTRIBUTE_ADDRESS_COMMAND_NV");
#endif
#if defined(GL_UNIFORM_ADDRESS_COMMAND_NV)
defconsti(env, "GL-UNIFORM-ADDRESS-COMMAND-NV", (GLenum) GL_UNIFORM_ADDRESS_COMMAND_NV, "GL_UNIFORM_ADDRESS_COMMAND_NV");
#endif
#if defined(GL_BLEND_COLOR_COMMAND_NV)
defconsti(env, "GL-BLEND-COLOR-COMMAND-NV", (GLenum) GL_BLEND_COLOR_COMMAND_NV, "GL_BLEND_COLOR_COMMAND_NV");
#endif
#if defined(GL_STENCIL_REF_COMMAND_NV)
defconsti(env, "GL-STENCIL-REF-COMMAND-NV", (GLenum) GL_STENCIL_REF_COMMAND_NV, "GL_STENCIL_REF_COMMAND_NV");
#endif
#if defined(GL_LINE_WIDTH_COMMAND_NV)
defconsti(env, "GL-LINE-WIDTH-COMMAND-NV", (GLenum) GL_LINE_WIDTH_COMMAND_NV, "GL_LINE_WIDTH_COMMAND_NV");
#endif
#if defined(GL_POLYGON_OFFSET_COMMAND_NV)
defconsti(env, "GL-POLYGON-OFFSET-COMMAND-NV", (GLenum) GL_POLYGON_OFFSET_COMMAND_NV, "GL_POLYGON_OFFSET_COMMAND_NV");
#endif
#if defined(GL_ALPHA_REF_COMMAND_NV)
defconsti(env, "GL-ALPHA-REF-COMMAND-NV", (GLenum) GL_ALPHA_REF_COMMAND_NV, "GL_ALPHA_REF_COMMAND_NV");
#endif
#if defined(GL_VIEWPORT_COMMAND_NV)
defconsti(env, "GL-VIEWPORT-COMMAND-NV", (GLenum) GL_VIEWPORT_COMMAND_NV, "GL_VIEWPORT_COMMAND_NV");
#endif
#if defined(GL_SCISSOR_COMMAND_NV)
defconsti(env, "GL-SCISSOR-COMMAND-NV", (GLenum) GL_SCISSOR_COMMAND_NV, "GL_SCISSOR_COMMAND_NV");
#endif
#if defined(GL_FRONT_FACE_COMMAND_NV)
defconsti(env, "GL-FRONT-FACE-COMMAND-NV", (GLenum) GL_FRONT_FACE_COMMAND_NV, "GL_FRONT_FACE_COMMAND_NV");
#endif
#if defined(GL_LAYOUT_DEFAULT_INTEL)
defconsti(env, "GL-LAYOUT-DEFAULT-INTEL", (GLenum) GL_LAYOUT_DEFAULT_INTEL, "GL_LAYOUT_DEFAULT_INTEL");
#endif
#if defined(GL_LAYOUT_LINEAR_INTEL)
defconsti(env, "GL-LAYOUT-LINEAR-INTEL", (GLenum) GL_LAYOUT_LINEAR_INTEL, "GL_LAYOUT_LINEAR_INTEL");
#endif
#if defined(GL_LAYOUT_LINEAR_CPU_CACHED_INTEL)
defconsti(env, "GL-LAYOUT-LINEAR-CPU-CACHED-INTEL", (GLenum) GL_LAYOUT_LINEAR_CPU_CACHED_INTEL, "GL_LAYOUT_LINEAR_CPU_CACHED_INTEL");
#endif
#if defined(GL_CLOSE_PATH_NV)
defconsti(env, "GL-CLOSE-PATH-NV", (GLenum) GL_CLOSE_PATH_NV, "GL_CLOSE_PATH_NV");
#endif
#if defined(GL_MOVE_TO_NV)
defconsti(env, "GL-MOVE-TO-NV", (GLenum) GL_MOVE_TO_NV, "GL_MOVE_TO_NV");
#endif
#if defined(GL_RELATIVE_MOVE_TO_NV)
defconsti(env, "GL-RELATIVE-MOVE-TO-NV", (GLenum) GL_RELATIVE_MOVE_TO_NV, "GL_RELATIVE_MOVE_TO_NV");
#endif
#if defined(GL_LINE_TO_NV)
defconsti(env, "GL-LINE-TO-NV", (GLenum) GL_LINE_TO_NV, "GL_LINE_TO_NV");
#endif
#if defined(GL_RELATIVE_LINE_TO_NV)
defconsti(env, "GL-RELATIVE-LINE-TO-NV", (GLenum) GL_RELATIVE_LINE_TO_NV, "GL_RELATIVE_LINE_TO_NV");
#endif
#if defined(GL_HORIZONTAL_LINE_TO_NV)
defconsti(env, "GL-HORIZONTAL-LINE-TO-NV", (GLenum) GL_HORIZONTAL_LINE_TO_NV, "GL_HORIZONTAL_LINE_TO_NV");
#endif
#if defined(GL_RELATIVE_HORIZONTAL_LINE_TO_NV)
defconsti(env, "GL-RELATIVE-HORIZONTAL-LINE-TO-NV", (GLenum) GL_RELATIVE_HORIZONTAL_LINE_TO_NV, "GL_RELATIVE_HORIZONTAL_LINE_TO_NV");
#endif
#if defined(GL_VERTICAL_LINE_TO_NV)
defconsti(env, "GL-VERTICAL-LINE-TO-NV", (GLenum) GL_VERTICAL_LINE_TO_NV, "GL_VERTICAL_LINE_TO_NV");
#endif
#if defined(GL_RELATIVE_VERTICAL_LINE_TO_NV)
defconsti(env, "GL-RELATIVE-VERTICAL-LINE-TO-NV", (GLenum) GL_RELATIVE_VERTICAL_LINE_TO_NV, "GL_RELATIVE_VERTICAL_LINE_TO_NV");
#endif
#if defined(GL_QUADRATIC_CURVE_TO_NV)
defconsti(env, "GL-QUADRATIC-CURVE-TO-NV", (GLenum) GL_QUADRATIC_CURVE_TO_NV, "GL_QUADRATIC_CURVE_TO_NV");
#endif
#if defined(GL_RELATIVE_QUADRATIC_CURVE_TO_NV)
defconsti(env, "GL-RELATIVE-QUADRATIC-CURVE-TO-NV", (GLenum) GL_RELATIVE_QUADRATIC_CURVE_TO_NV, "GL_RELATIVE_QUADRATIC_CURVE_TO_NV");
#endif
#if defined(GL_CUBIC_CURVE_TO_NV)
defconsti(env, "GL-CUBIC-CURVE-TO-NV", (GLenum) GL_CUBIC_CURVE_TO_NV, "GL_CUBIC_CURVE_TO_NV");
#endif
#if defined(GL_RELATIVE_CUBIC_CURVE_TO_NV)
defconsti(env, "GL-RELATIVE-CUBIC-CURVE-TO-NV", (GLenum) GL_RELATIVE_CUBIC_CURVE_TO_NV, "GL_RELATIVE_CUBIC_CURVE_TO_NV");
#endif
#if defined(GL_SMOOTH_QUADRATIC_CURVE_TO_NV)
defconsti(env, "GL-SMOOTH-QUADRATIC-CURVE-TO-NV", (GLenum) GL_SMOOTH_QUADRATIC_CURVE_TO_NV, "GL_SMOOTH_QUADRATIC_CURVE_TO_NV");
#endif
#if defined(GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV)
defconsti(env, "GL-RELATIVE-SMOOTH-QUADRATIC-CURVE-TO-NV", (GLenum) GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV, "GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV");
#endif
#if defined(GL_SMOOTH_CUBIC_CURVE_TO_NV)
defconsti(env, "GL-SMOOTH-CUBIC-CURVE-TO-NV", (GLenum) GL_SMOOTH_CUBIC_CURVE_TO_NV, "GL_SMOOTH_CUBIC_CURVE_TO_NV");
#endif
#if defined(GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV)
defconsti(env, "GL-RELATIVE-SMOOTH-CUBIC-CURVE-TO-NV", (GLenum) GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV, "GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV");
#endif
#if defined(GL_SMALL_CCW_ARC_TO_NV)
defconsti(env, "GL-SMALL-CCW-ARC-TO-NV", (GLenum) GL_SMALL_CCW_ARC_TO_NV, "GL_SMALL_CCW_ARC_TO_NV");
#endif
#if defined(GL_RELATIVE_SMALL_CCW_ARC_TO_NV)
defconsti(env, "GL-RELATIVE-SMALL-CCW-ARC-TO-NV", (GLenum) GL_RELATIVE_SMALL_CCW_ARC_TO_NV, "GL_RELATIVE_SMALL_CCW_ARC_TO_NV");
#endif
#if defined(GL_SMALL_CW_ARC_TO_NV)
defconsti(env, "GL-SMALL-CW-ARC-TO-NV", (GLenum) GL_SMALL_CW_ARC_TO_NV, "GL_SMALL_CW_ARC_TO_NV");
#endif
#if defined(GL_RELATIVE_SMALL_CW_ARC_TO_NV)
defconsti(env, "GL-RELATIVE-SMALL-CW-ARC-TO-NV", (GLenum) GL_RELATIVE_SMALL_CW_ARC_TO_NV, "GL_RELATIVE_SMALL_CW_ARC_TO_NV");
#endif
#if defined(GL_LARGE_CCW_ARC_TO_NV)
defconsti(env, "GL-LARGE-CCW-ARC-TO-NV", (GLenum) GL_LARGE_CCW_ARC_TO_NV, "GL_LARGE_CCW_ARC_TO_NV");
#endif
#if defined(GL_RELATIVE_LARGE_CCW_ARC_TO_NV)
defconsti(env, "GL-RELATIVE-LARGE-CCW-ARC-TO-NV", (GLenum) GL_RELATIVE_LARGE_CCW_ARC_TO_NV, "GL_RELATIVE_LARGE_CCW_ARC_TO_NV");
#endif
#if defined(GL_LARGE_CW_ARC_TO_NV)
defconsti(env, "GL-LARGE-CW-ARC-TO-NV", (GLenum) GL_LARGE_CW_ARC_TO_NV, "GL_LARGE_CW_ARC_TO_NV");
#endif
#if defined(GL_RELATIVE_LARGE_CW_ARC_TO_NV)
defconsti(env, "GL-RELATIVE-LARGE-CW-ARC-TO-NV", (GLenum) GL_RELATIVE_LARGE_CW_ARC_TO_NV, "GL_RELATIVE_LARGE_CW_ARC_TO_NV");
#endif
#if defined(GL_CONIC_CURVE_TO_NV)
defconsti(env, "GL-CONIC-CURVE-TO-NV", (GLenum) GL_CONIC_CURVE_TO_NV, "GL_CONIC_CURVE_TO_NV");
#endif
#if defined(GL_RELATIVE_CONIC_CURVE_TO_NV)
defconsti(env, "GL-RELATIVE-CONIC-CURVE-TO-NV", (GLenum) GL_RELATIVE_CONIC_CURVE_TO_NV, "GL_RELATIVE_CONIC_CURVE_TO_NV");
#endif
#if defined(GL_SHARED_EDGE_NV)
defconsti(env, "GL-SHARED-EDGE-NV", (GLenum) GL_SHARED_EDGE_NV, "GL_SHARED_EDGE_NV");
#endif
#if defined(GL_ROUNDED_RECT_NV)
defconsti(env, "GL-ROUNDED-RECT-NV", (GLenum) GL_ROUNDED_RECT_NV, "GL_ROUNDED_RECT_NV");
#endif
#if defined(GL_RELATIVE_ROUNDED_RECT_NV)
defconsti(env, "GL-RELATIVE-ROUNDED-RECT-NV", (GLenum) GL_RELATIVE_ROUNDED_RECT_NV, "GL_RELATIVE_ROUNDED_RECT_NV");
#endif
#if defined(GL_ROUNDED_RECT2_NV)
defconsti(env, "GL-ROUNDED-RECT2-NV", (GLenum) GL_ROUNDED_RECT2_NV, "GL_ROUNDED_RECT2_NV");
#endif
#if defined(GL_RELATIVE_ROUNDED_RECT2_NV)
defconsti(env, "GL-RELATIVE-ROUNDED-RECT2-NV", (GLenum) GL_RELATIVE_ROUNDED_RECT2_NV, "GL_RELATIVE_ROUNDED_RECT2_NV");
#endif
#if defined(GL_ROUNDED_RECT4_NV)
defconsti(env, "GL-ROUNDED-RECT4-NV", (GLenum) GL_ROUNDED_RECT4_NV, "GL_ROUNDED_RECT4_NV");
#endif
#if defined(GL_RELATIVE_ROUNDED_RECT4_NV)
defconsti(env, "GL-RELATIVE-ROUNDED-RECT4-NV", (GLenum) GL_RELATIVE_ROUNDED_RECT4_NV, "GL_RELATIVE_ROUNDED_RECT4_NV");
#endif
#if defined(GL_ROUNDED_RECT8_NV)
defconsti(env, "GL-ROUNDED-RECT8-NV", (GLenum) GL_ROUNDED_RECT8_NV, "GL_ROUNDED_RECT8_NV");
#endif
#if defined(GL_RELATIVE_ROUNDED_RECT8_NV)
defconsti(env, "GL-RELATIVE-ROUNDED-RECT8-NV", (GLenum) GL_RELATIVE_ROUNDED_RECT8_NV, "GL_RELATIVE_ROUNDED_RECT8_NV");
#endif
#if defined(GL_RESTART_PATH_NV)
defconsti(env, "GL-RESTART-PATH-NV", (GLenum) GL_RESTART_PATH_NV, "GL_RESTART_PATH_NV");
#endif
#if defined(GL_DUP_FIRST_CUBIC_CURVE_TO_NV)
defconsti(env, "GL-DUP-FIRST-CUBIC-CURVE-TO-NV", (GLenum) GL_DUP_FIRST_CUBIC_CURVE_TO_NV, "GL_DUP_FIRST_CUBIC_CURVE_TO_NV");
#endif
#if defined(GL_DUP_LAST_CUBIC_CURVE_TO_NV)
defconsti(env, "GL-DUP-LAST-CUBIC-CURVE-TO-NV", (GLenum) GL_DUP_LAST_CUBIC_CURVE_TO_NV, "GL_DUP_LAST_CUBIC_CURVE_TO_NV");
#endif
#if defined(GL_RECT_NV)
defconsti(env, "GL-RECT-NV", (GLenum) GL_RECT_NV, "GL_RECT_NV");
#endif
#if defined(GL_RELATIVE_RECT_NV)
defconsti(env, "GL-RELATIVE-RECT-NV", (GLenum) GL_RELATIVE_RECT_NV, "GL_RELATIVE_RECT_NV");
#endif
#if defined(GL_CIRCULAR_CCW_ARC_TO_NV)
defconsti(env, "GL-CIRCULAR-CCW-ARC-TO-NV", (GLenum) GL_CIRCULAR_CCW_ARC_TO_NV, "GL_CIRCULAR_CCW_ARC_TO_NV");
#endif
#if defined(GL_CIRCULAR_CW_ARC_TO_NV)
defconsti(env, "GL-CIRCULAR-CW-ARC-TO-NV", (GLenum) GL_CIRCULAR_CW_ARC_TO_NV, "GL_CIRCULAR_CW_ARC_TO_NV");
#endif
#if defined(GL_CIRCULAR_TANGENT_ARC_TO_NV)
defconsti(env, "GL-CIRCULAR-TANGENT-ARC-TO-NV", (GLenum) GL_CIRCULAR_TANGENT_ARC_TO_NV, "GL_CIRCULAR_TANGENT_ARC_TO_NV");
#endif
#if defined(GL_ARC_TO_NV)
defconsti(env, "GL-ARC-TO-NV", (GLenum) GL_ARC_TO_NV, "GL_ARC_TO_NV");
#endif
#if defined(GL_RELATIVE_ARC_TO_NV)
defconsti(env, "GL-RELATIVE-ARC-TO-NV", (GLenum) GL_RELATIVE_ARC_TO_NV, "GL_RELATIVE_ARC_TO_NV");
#endif
#if defined(GL_NEXT_BUFFER_NV)
defconsti(env, "GL-NEXT-BUFFER-NV", (GLenum) GL_NEXT_BUFFER_NV, "GL_NEXT_BUFFER_NV");
#endif
#if defined(GL_SKIP_COMPONENTS4_NV)
defconsti(env, "GL-SKIP-COMPONENTS4-NV", (GLenum) GL_SKIP_COMPONENTS4_NV, "GL_SKIP_COMPONENTS4_NV");
#endif
#if defined(GL_SKIP_COMPONENTS3_NV)
defconsti(env, "GL-SKIP-COMPONENTS3-NV", (GLenum) GL_SKIP_COMPONENTS3_NV, "GL_SKIP_COMPONENTS3_NV");
#endif
#if defined(GL_SKIP_COMPONENTS2_NV)
defconsti(env, "GL-SKIP-COMPONENTS2-NV", (GLenum) GL_SKIP_COMPONENTS2_NV, "GL_SKIP_COMPONENTS2_NV");
#endif
#if defined(GL_SKIP_COMPONENTS1_NV)
defconsti(env, "GL-SKIP-COMPONENTS1-NV", (GLenum) GL_SKIP_COMPONENTS1_NV, "GL_SKIP_COMPONENTS1_NV");
#endif
#if defined(GL_RESTART_SUN)
defconsti(env, "GL-RESTART-SUN", (GLenum) GL_RESTART_SUN, "GL_RESTART_SUN");
#endif
#if defined(GL_REPLACE_MIDDLE_SUN)
defconsti(env, "GL-REPLACE-MIDDLE-SUN", (GLenum) GL_REPLACE_MIDDLE_SUN, "GL_REPLACE_MIDDLE_SUN");
#endif
#if defined(GL_REPLACE_OLDEST_SUN)
defconsti(env, "GL-REPLACE-OLDEST-SUN", (GLenum) GL_REPLACE_OLDEST_SUN, "GL_REPLACE_OLDEST_SUN");
#endif
#if defined(GL_FALSE)
defconsti(env, "GL-FALSE", (GLenum) GL_FALSE, "GL_FALSE");
#endif
#if defined(GL_NO_ERROR)
defconsti(env, "GL-NO-ERROR", (GLenum) GL_NO_ERROR, "GL_NO_ERROR");
#endif
#if defined(GL_ZERO)
defconsti(env, "GL-ZERO", (GLenum) GL_ZERO, "GL_ZERO");
#endif
#if defined(GL_NONE)
defconsti(env, "GL-NONE", (GLenum) GL_NONE, "GL_NONE");
#endif
#if defined(GL_NONE_OES)
defconsti(env, "GL-NONE-OES", (GLenum) GL_NONE_OES, "GL_NONE_OES");
#endif
#if defined(GL_TRUE)
defconsti(env, "GL-TRUE", (GLenum) GL_TRUE, "GL_TRUE");
#endif
#if defined(GL_ONE)
defconsti(env, "GL-ONE", (GLenum) GL_ONE, "GL_ONE");
#endif
#if defined(GL_INVALID_INDEX)
defconsti(env, "GL-INVALID-INDEX", (GLenum) GL_INVALID_INDEX, "GL_INVALID_INDEX");
#endif
#if defined(GL_ALL_PIXELS_AMD)
defconsti(env, "GL-ALL-PIXELS-AMD", (GLenum) GL_ALL_PIXELS_AMD, "GL_ALL_PIXELS_AMD");
#endif
#if defined(GL_TIMEOUT_IGNORED)
defconsti(env, "GL-TIMEOUT-IGNORED", (GLenum) GL_TIMEOUT_IGNORED, "GL_TIMEOUT_IGNORED");
#endif
#if defined(GL_TIMEOUT_IGNORED_APPLE)
defconsti(env, "GL-TIMEOUT-IGNORED-APPLE", (GLenum) GL_TIMEOUT_IGNORED_APPLE, "GL_TIMEOUT_IGNORED_APPLE");
#endif
#if defined(GL_VERSION_ES_CL_1_0)
defconsti(env, "GL-VERSION-ES-CL-1-0", (GLenum) GL_VERSION_ES_CL_1_0, "GL_VERSION_ES_CL_1_0");
#endif
#if defined(GL_VERSION_ES_CM_1_1)
defconsti(env, "GL-VERSION-ES-CM-1-1", (GLenum) GL_VERSION_ES_CM_1_1, "GL_VERSION_ES_CM_1_1");
#endif
#if defined(GL_VERSION_ES_CL_1_1)
defconsti(env, "GL-VERSION-ES-CL-1-1", (GLenum) GL_VERSION_ES_CL_1_1, "GL_VERSION_ES_CL_1_1");
#endif
#if defined(GL_UUID_SIZE_EXT)
defconsti(env, "GL-UUID-SIZE-EXT", (GLenum) GL_UUID_SIZE_EXT, "GL_UUID_SIZE_EXT");
#endif
#if defined(GL_LUID_SIZE_EXT)
defconsti(env, "GL-LUID-SIZE-EXT", (GLenum) GL_LUID_SIZE_EXT, "GL_LUID_SIZE_EXT");
#endif
#if defined(GL_POINTS)
defconsti(env, "GL-POINTS", (GLenum) GL_POINTS, "GL_POINTS");
#endif
#if defined(GL_LINES)
defconsti(env, "GL-LINES", (GLenum) GL_LINES, "GL_LINES");
#endif
#if defined(GL_LINE_LOOP)
defconsti(env, "GL-LINE-LOOP", (GLenum) GL_LINE_LOOP, "GL_LINE_LOOP");
#endif
#if defined(GL_LINE_STRIP)
defconsti(env, "GL-LINE-STRIP", (GLenum) GL_LINE_STRIP, "GL_LINE_STRIP");
#endif
#if defined(GL_TRIANGLES)
defconsti(env, "GL-TRIANGLES", (GLenum) GL_TRIANGLES, "GL_TRIANGLES");
#endif
#if defined(GL_TRIANGLE_STRIP)
defconsti(env, "GL-TRIANGLE-STRIP", (GLenum) GL_TRIANGLE_STRIP, "GL_TRIANGLE_STRIP");
#endif
#if defined(GL_TRIANGLE_FAN)
defconsti(env, "GL-TRIANGLE-FAN", (GLenum) GL_TRIANGLE_FAN, "GL_TRIANGLE_FAN");
#endif
#if defined(GL_QUADS)
defconsti(env, "GL-QUADS", (GLenum) GL_QUADS, "GL_QUADS");
#endif
#if defined(GL_QUADS_EXT)
defconsti(env, "GL-QUADS-EXT", (GLenum) GL_QUADS_EXT, "GL_QUADS_EXT");
#endif
#if defined(GL_QUADS_OES)
defconsti(env, "GL-QUADS-OES", (GLenum) GL_QUADS_OES, "GL_QUADS_OES");
#endif
#if defined(GL_QUAD_STRIP)
defconsti(env, "GL-QUAD-STRIP", (GLenum) GL_QUAD_STRIP, "GL_QUAD_STRIP");
#endif
#if defined(GL_POLYGON)
defconsti(env, "GL-POLYGON", (GLenum) GL_POLYGON, "GL_POLYGON");
#endif
#if defined(GL_LINES_ADJACENCY)
defconsti(env, "GL-LINES-ADJACENCY", (GLenum) GL_LINES_ADJACENCY, "GL_LINES_ADJACENCY");
#endif
#if defined(GL_LINES_ADJACENCY_ARB)
defconsti(env, "GL-LINES-ADJACENCY-ARB", (GLenum) GL_LINES_ADJACENCY_ARB, "GL_LINES_ADJACENCY_ARB");
#endif
#if defined(GL_LINES_ADJACENCY_EXT)
defconsti(env, "GL-LINES-ADJACENCY-EXT", (GLenum) GL_LINES_ADJACENCY_EXT, "GL_LINES_ADJACENCY_EXT");
#endif
#if defined(GL_LINES_ADJACENCY_OES)
defconsti(env, "GL-LINES-ADJACENCY-OES", (GLenum) GL_LINES_ADJACENCY_OES, "GL_LINES_ADJACENCY_OES");
#endif
#if defined(GL_LINE_STRIP_ADJACENCY)
defconsti(env, "GL-LINE-STRIP-ADJACENCY", (GLenum) GL_LINE_STRIP_ADJACENCY, "GL_LINE_STRIP_ADJACENCY");
#endif
#if defined(GL_LINE_STRIP_ADJACENCY_ARB)
defconsti(env, "GL-LINE-STRIP-ADJACENCY-ARB", (GLenum) GL_LINE_STRIP_ADJACENCY_ARB, "GL_LINE_STRIP_ADJACENCY_ARB");
#endif
#if defined(GL_LINE_STRIP_ADJACENCY_EXT)
defconsti(env, "GL-LINE-STRIP-ADJACENCY-EXT", (GLenum) GL_LINE_STRIP_ADJACENCY_EXT, "GL_LINE_STRIP_ADJACENCY_EXT");
#endif
#if defined(GL_LINE_STRIP_ADJACENCY_OES)
defconsti(env, "GL-LINE-STRIP-ADJACENCY-OES", (GLenum) GL_LINE_STRIP_ADJACENCY_OES, "GL_LINE_STRIP_ADJACENCY_OES");
#endif
#if defined(GL_TRIANGLES_ADJACENCY)
defconsti(env, "GL-TRIANGLES-ADJACENCY", (GLenum) GL_TRIANGLES_ADJACENCY, "GL_TRIANGLES_ADJACENCY");
#endif
#if defined(GL_TRIANGLES_ADJACENCY_ARB)
defconsti(env, "GL-TRIANGLES-ADJACENCY-ARB", (GLenum) GL_TRIANGLES_ADJACENCY_ARB, "GL_TRIANGLES_ADJACENCY_ARB");
#endif
#if defined(GL_TRIANGLES_ADJACENCY_EXT)
defconsti(env, "GL-TRIANGLES-ADJACENCY-EXT", (GLenum) GL_TRIANGLES_ADJACENCY_EXT, "GL_TRIANGLES_ADJACENCY_EXT");
#endif
#if defined(GL_TRIANGLES_ADJACENCY_OES)
defconsti(env, "GL-TRIANGLES-ADJACENCY-OES", (GLenum) GL_TRIANGLES_ADJACENCY_OES, "GL_TRIANGLES_ADJACENCY_OES");
#endif
#if defined(GL_TRIANGLE_STRIP_ADJACENCY)
defconsti(env, "GL-TRIANGLE-STRIP-ADJACENCY", (GLenum) GL_TRIANGLE_STRIP_ADJACENCY, "GL_TRIANGLE_STRIP_ADJACENCY");
#endif
#if defined(GL_TRIANGLE_STRIP_ADJACENCY_ARB)
defconsti(env, "GL-TRIANGLE-STRIP-ADJACENCY-ARB", (GLenum) GL_TRIANGLE_STRIP_ADJACENCY_ARB, "GL_TRIANGLE_STRIP_ADJACENCY_ARB");
#endif
#if defined(GL_TRIANGLE_STRIP_ADJACENCY_EXT)
defconsti(env, "GL-TRIANGLE-STRIP-ADJACENCY-EXT", (GLenum) GL_TRIANGLE_STRIP_ADJACENCY_EXT, "GL_TRIANGLE_STRIP_ADJACENCY_EXT");
#endif
#if defined(GL_TRIANGLE_STRIP_ADJACENCY_OES)
defconsti(env, "GL-TRIANGLE-STRIP-ADJACENCY-OES", (GLenum) GL_TRIANGLE_STRIP_ADJACENCY_OES, "GL_TRIANGLE_STRIP_ADJACENCY_OES");
#endif
#if defined(GL_PATCHES)
defconsti(env, "GL-PATCHES", (GLenum) GL_PATCHES, "GL_PATCHES");
#endif
#if defined(GL_PATCHES_EXT)
defconsti(env, "GL-PATCHES-EXT", (GLenum) GL_PATCHES_EXT, "GL_PATCHES_EXT");
#endif
#if defined(GL_PATCHES_OES)
defconsti(env, "GL-PATCHES-OES", (GLenum) GL_PATCHES_OES, "GL_PATCHES_OES");
#endif
#if defined(GL_ACCUM)
defconsti(env, "GL-ACCUM", (GLenum) GL_ACCUM, "GL_ACCUM");
#endif
#if defined(GL_LOAD)
defconsti(env, "GL-LOAD", (GLenum) GL_LOAD, "GL_LOAD");
#endif
#if defined(GL_RETURN)
defconsti(env, "GL-RETURN", (GLenum) GL_RETURN, "GL_RETURN");
#endif
#if defined(GL_MULT)
defconsti(env, "GL-MULT", (GLenum) GL_MULT, "GL_MULT");
#endif
#if defined(GL_ADD)
defconsti(env, "GL-ADD", (GLenum) GL_ADD, "GL_ADD");
#endif
#if defined(GL_NEVER)
defconsti(env, "GL-NEVER", (GLenum) GL_NEVER, "GL_NEVER");
#endif
#if defined(GL_LESS)
defconsti(env, "GL-LESS", (GLenum) GL_LESS, "GL_LESS");
#endif
#if defined(GL_EQUAL)
defconsti(env, "GL-EQUAL", (GLenum) GL_EQUAL, "GL_EQUAL");
#endif
#if defined(GL_LEQUAL)
defconsti(env, "GL-LEQUAL", (GLenum) GL_LEQUAL, "GL_LEQUAL");
#endif
#if defined(GL_GREATER)
defconsti(env, "GL-GREATER", (GLenum) GL_GREATER, "GL_GREATER");
#endif
#if defined(GL_NOTEQUAL)
defconsti(env, "GL-NOTEQUAL", (GLenum) GL_NOTEQUAL, "GL_NOTEQUAL");
#endif
#if defined(GL_GEQUAL)
defconsti(env, "GL-GEQUAL", (GLenum) GL_GEQUAL, "GL_GEQUAL");
#endif
#if defined(GL_ALWAYS)
defconsti(env, "GL-ALWAYS", (GLenum) GL_ALWAYS, "GL_ALWAYS");
#endif
#if defined(GL_SRC_COLOR)
defconsti(env, "GL-SRC-COLOR", (GLenum) GL_SRC_COLOR, "GL_SRC_COLOR");
#endif
#if defined(GL_ONE_MINUS_SRC_COLOR)
defconsti(env, "GL-ONE-MINUS-SRC-COLOR", (GLenum) GL_ONE_MINUS_SRC_COLOR, "GL_ONE_MINUS_SRC_COLOR");
#endif
#if defined(GL_SRC_ALPHA)
defconsti(env, "GL-SRC-ALPHA", (GLenum) GL_SRC_ALPHA, "GL_SRC_ALPHA");
#endif
#if defined(GL_ONE_MINUS_SRC_ALPHA)
defconsti(env, "GL-ONE-MINUS-SRC-ALPHA", (GLenum) GL_ONE_MINUS_SRC_ALPHA, "GL_ONE_MINUS_SRC_ALPHA");
#endif
#if defined(GL_DST_ALPHA)
defconsti(env, "GL-DST-ALPHA", (GLenum) GL_DST_ALPHA, "GL_DST_ALPHA");
#endif
#if defined(GL_ONE_MINUS_DST_ALPHA)
defconsti(env, "GL-ONE-MINUS-DST-ALPHA", (GLenum) GL_ONE_MINUS_DST_ALPHA, "GL_ONE_MINUS_DST_ALPHA");
#endif
#if defined(GL_DST_COLOR)
defconsti(env, "GL-DST-COLOR", (GLenum) GL_DST_COLOR, "GL_DST_COLOR");
#endif
#if defined(GL_ONE_MINUS_DST_COLOR)
defconsti(env, "GL-ONE-MINUS-DST-COLOR", (GLenum) GL_ONE_MINUS_DST_COLOR, "GL_ONE_MINUS_DST_COLOR");
#endif
#if defined(GL_SRC_ALPHA_SATURATE)
defconsti(env, "GL-SRC-ALPHA-SATURATE", (GLenum) GL_SRC_ALPHA_SATURATE, "GL_SRC_ALPHA_SATURATE");
#endif
#if defined(GL_SRC_ALPHA_SATURATE_EXT)
defconsti(env, "GL-SRC-ALPHA-SATURATE-EXT", (GLenum) GL_SRC_ALPHA_SATURATE_EXT, "GL_SRC_ALPHA_SATURATE_EXT");
#endif
#if defined(GL_FRONT_LEFT)
defconsti(env, "GL-FRONT-LEFT", (GLenum) GL_FRONT_LEFT, "GL_FRONT_LEFT");
#endif
#if defined(GL_FRONT_RIGHT)
defconsti(env, "GL-FRONT-RIGHT", (GLenum) GL_FRONT_RIGHT, "GL_FRONT_RIGHT");
#endif
#if defined(GL_BACK_LEFT)
defconsti(env, "GL-BACK-LEFT", (GLenum) GL_BACK_LEFT, "GL_BACK_LEFT");
#endif
#if defined(GL_BACK_RIGHT)
defconsti(env, "GL-BACK-RIGHT", (GLenum) GL_BACK_RIGHT, "GL_BACK_RIGHT");
#endif
#if defined(GL_FRONT)
defconsti(env, "GL-FRONT", (GLenum) GL_FRONT, "GL_FRONT");
#endif
#if defined(GL_BACK)
defconsti(env, "GL-BACK", (GLenum) GL_BACK, "GL_BACK");
#endif
#if defined(GL_LEFT)
defconsti(env, "GL-LEFT", (GLenum) GL_LEFT, "GL_LEFT");
#endif
#if defined(GL_RIGHT)
defconsti(env, "GL-RIGHT", (GLenum) GL_RIGHT, "GL_RIGHT");
#endif
#if defined(GL_FRONT_AND_BACK)
defconsti(env, "GL-FRONT-AND-BACK", (GLenum) GL_FRONT_AND_BACK, "GL_FRONT_AND_BACK");
#endif
#if defined(GL_AUX0)
defconsti(env, "GL-AUX0", (GLenum) GL_AUX0, "GL_AUX0");
#endif
#if defined(GL_AUX1)
defconsti(env, "GL-AUX1", (GLenum) GL_AUX1, "GL_AUX1");
#endif
#if defined(GL_AUX2)
defconsti(env, "GL-AUX2", (GLenum) GL_AUX2, "GL_AUX2");
#endif
#if defined(GL_AUX3)
defconsti(env, "GL-AUX3", (GLenum) GL_AUX3, "GL_AUX3");
#endif
#if defined(GL_INVALID_ENUM)
defconsti(env, "GL-INVALID-ENUM", (GLenum) GL_INVALID_ENUM, "GL_INVALID_ENUM");
#endif
#if defined(GL_INVALID_VALUE)
defconsti(env, "GL-INVALID-VALUE", (GLenum) GL_INVALID_VALUE, "GL_INVALID_VALUE");
#endif
#if defined(GL_INVALID_OPERATION)
defconsti(env, "GL-INVALID-OPERATION", (GLenum) GL_INVALID_OPERATION, "GL_INVALID_OPERATION");
#endif
#if defined(GL_STACK_OVERFLOW)
defconsti(env, "GL-STACK-OVERFLOW", (GLenum) GL_STACK_OVERFLOW, "GL_STACK_OVERFLOW");
#endif
#if defined(GL_STACK_OVERFLOW_KHR)
defconsti(env, "GL-STACK-OVERFLOW-KHR", (GLenum) GL_STACK_OVERFLOW_KHR, "GL_STACK_OVERFLOW_KHR");
#endif
#if defined(GL_STACK_UNDERFLOW)
defconsti(env, "GL-STACK-UNDERFLOW", (GLenum) GL_STACK_UNDERFLOW, "GL_STACK_UNDERFLOW");
#endif
#if defined(GL_STACK_UNDERFLOW_KHR)
defconsti(env, "GL-STACK-UNDERFLOW-KHR", (GLenum) GL_STACK_UNDERFLOW_KHR, "GL_STACK_UNDERFLOW_KHR");
#endif
#if defined(GL_OUT_OF_MEMORY)
defconsti(env, "GL-OUT-OF-MEMORY", (GLenum) GL_OUT_OF_MEMORY, "GL_OUT_OF_MEMORY");
#endif
#if defined(GL_INVALID_FRAMEBUFFER_OPERATION)
defconsti(env, "GL-INVALID-FRAMEBUFFER-OPERATION", (GLenum) GL_INVALID_FRAMEBUFFER_OPERATION, "GL_INVALID_FRAMEBUFFER_OPERATION");
#endif
#if defined(GL_INVALID_FRAMEBUFFER_OPERATION_EXT)
defconsti(env, "GL-INVALID-FRAMEBUFFER-OPERATION-EXT", (GLenum) GL_INVALID_FRAMEBUFFER_OPERATION_EXT, "GL_INVALID_FRAMEBUFFER_OPERATION_EXT");
#endif
#if defined(GL_INVALID_FRAMEBUFFER_OPERATION_OES)
defconsti(env, "GL-INVALID-FRAMEBUFFER-OPERATION-OES", (GLenum) GL_INVALID_FRAMEBUFFER_OPERATION_OES, "GL_INVALID_FRAMEBUFFER_OPERATION_OES");
#endif
#if defined(GL_CONTEXT_LOST)
defconsti(env, "GL-CONTEXT-LOST", (GLenum) GL_CONTEXT_LOST, "GL_CONTEXT_LOST");
#endif
#if defined(GL_CONTEXT_LOST_KHR)
defconsti(env, "GL-CONTEXT-LOST-KHR", (GLenum) GL_CONTEXT_LOST_KHR, "GL_CONTEXT_LOST_KHR");
#endif
#if defined(GL_2D)
defconsti(env, "GL-2D", (GLenum) GL_2D, "GL_2D");
#endif
#if defined(GL_3D)
defconsti(env, "GL-3D", (GLenum) GL_3D, "GL_3D");
#endif
#if defined(GL_3D_COLOR)
defconsti(env, "GL-3D-COLOR", (GLenum) GL_3D_COLOR, "GL_3D_COLOR");
#endif
#if defined(GL_3D_COLOR_TEXTURE)
defconsti(env, "GL-3D-COLOR-TEXTURE", (GLenum) GL_3D_COLOR_TEXTURE, "GL_3D_COLOR_TEXTURE");
#endif
#if defined(GL_4D_COLOR_TEXTURE)
defconsti(env, "GL-4D-COLOR-TEXTURE", (GLenum) GL_4D_COLOR_TEXTURE, "GL_4D_COLOR_TEXTURE");
#endif
#if defined(GL_PASS_THROUGH_TOKEN)
defconsti(env, "GL-PASS-THROUGH-TOKEN", (GLenum) GL_PASS_THROUGH_TOKEN, "GL_PASS_THROUGH_TOKEN");
#endif
#if defined(GL_POINT_TOKEN)
defconsti(env, "GL-POINT-TOKEN", (GLenum) GL_POINT_TOKEN, "GL_POINT_TOKEN");
#endif
#if defined(GL_LINE_TOKEN)
defconsti(env, "GL-LINE-TOKEN", (GLenum) GL_LINE_TOKEN, "GL_LINE_TOKEN");
#endif
#if defined(GL_POLYGON_TOKEN)
defconsti(env, "GL-POLYGON-TOKEN", (GLenum) GL_POLYGON_TOKEN, "GL_POLYGON_TOKEN");
#endif
#if defined(GL_BITMAP_TOKEN)
defconsti(env, "GL-BITMAP-TOKEN", (GLenum) GL_BITMAP_TOKEN, "GL_BITMAP_TOKEN");
#endif
#if defined(GL_DRAW_PIXEL_TOKEN)
defconsti(env, "GL-DRAW-PIXEL-TOKEN", (GLenum) GL_DRAW_PIXEL_TOKEN, "GL_DRAW_PIXEL_TOKEN");
#endif
#if defined(GL_COPY_PIXEL_TOKEN)
defconsti(env, "GL-COPY-PIXEL-TOKEN", (GLenum) GL_COPY_PIXEL_TOKEN, "GL_COPY_PIXEL_TOKEN");
#endif
#if defined(GL_LINE_RESET_TOKEN)
defconsti(env, "GL-LINE-RESET-TOKEN", (GLenum) GL_LINE_RESET_TOKEN, "GL_LINE_RESET_TOKEN");
#endif
#if defined(GL_EXP)
defconsti(env, "GL-EXP", (GLenum) GL_EXP, "GL_EXP");
#endif
#if defined(GL_EXP2)
defconsti(env, "GL-EXP2", (GLenum) GL_EXP2, "GL_EXP2");
#endif
#if defined(GL_CW)
defconsti(env, "GL-CW", (GLenum) GL_CW, "GL_CW");
#endif
#if defined(GL_CCW)
defconsti(env, "GL-CCW", (GLenum) GL_CCW, "GL_CCW");
#endif
#if defined(GL_COEFF)
defconsti(env, "GL-COEFF", (GLenum) GL_COEFF, "GL_COEFF");
#endif
#if defined(GL_ORDER)
defconsti(env, "GL-ORDER", (GLenum) GL_ORDER, "GL_ORDER");
#endif
#if defined(GL_DOMAIN)
defconsti(env, "GL-DOMAIN", (GLenum) GL_DOMAIN, "GL_DOMAIN");
#endif
#if defined(GL_CURRENT_COLOR)
defconsti(env, "GL-CURRENT-COLOR", (GLenum) GL_CURRENT_COLOR, "GL_CURRENT_COLOR");
#endif
#if defined(GL_CURRENT_INDEX)
defconsti(env, "GL-CURRENT-INDEX", (GLenum) GL_CURRENT_INDEX, "GL_CURRENT_INDEX");
#endif
#if defined(GL_CURRENT_NORMAL)
defconsti(env, "GL-CURRENT-NORMAL", (GLenum) GL_CURRENT_NORMAL, "GL_CURRENT_NORMAL");
#endif
#if defined(GL_CURRENT_TEXTURE_COORDS)
defconsti(env, "GL-CURRENT-TEXTURE-COORDS", (GLenum) GL_CURRENT_TEXTURE_COORDS, "GL_CURRENT_TEXTURE_COORDS");
#endif
#if defined(GL_CURRENT_RASTER_COLOR)
defconsti(env, "GL-CURRENT-RASTER-COLOR", (GLenum) GL_CURRENT_RASTER_COLOR, "GL_CURRENT_RASTER_COLOR");
#endif
#if defined(GL_CURRENT_RASTER_INDEX)
defconsti(env, "GL-CURRENT-RASTER-INDEX", (GLenum) GL_CURRENT_RASTER_INDEX, "GL_CURRENT_RASTER_INDEX");
#endif
#if defined(GL_CURRENT_RASTER_TEXTURE_COORDS)
defconsti(env, "GL-CURRENT-RASTER-TEXTURE-COORDS", (GLenum) GL_CURRENT_RASTER_TEXTURE_COORDS, "GL_CURRENT_RASTER_TEXTURE_COORDS");
#endif
#if defined(GL_CURRENT_RASTER_POSITION)
defconsti(env, "GL-CURRENT-RASTER-POSITION", (GLenum) GL_CURRENT_RASTER_POSITION, "GL_CURRENT_RASTER_POSITION");
#endif
#if defined(GL_CURRENT_RASTER_POSITION_VALID)
defconsti(env, "GL-CURRENT-RASTER-POSITION-VALID", (GLenum) GL_CURRENT_RASTER_POSITION_VALID, "GL_CURRENT_RASTER_POSITION_VALID");
#endif
#if defined(GL_CURRENT_RASTER_DISTANCE)
defconsti(env, "GL-CURRENT-RASTER-DISTANCE", (GLenum) GL_CURRENT_RASTER_DISTANCE, "GL_CURRENT_RASTER_DISTANCE");
#endif
#if defined(GL_POINT_SMOOTH)
defconsti(env, "GL-POINT-SMOOTH", (GLenum) GL_POINT_SMOOTH, "GL_POINT_SMOOTH");
#endif
#if defined(GL_POINT_SIZE)
defconsti(env, "GL-POINT-SIZE", (GLenum) GL_POINT_SIZE, "GL_POINT_SIZE");
#endif
#if defined(GL_POINT_SIZE_RANGE)
defconsti(env, "GL-POINT-SIZE-RANGE", (GLenum) GL_POINT_SIZE_RANGE, "GL_POINT_SIZE_RANGE");
#endif
#if defined(GL_SMOOTH_POINT_SIZE_RANGE)
defconsti(env, "GL-SMOOTH-POINT-SIZE-RANGE", (GLenum) GL_SMOOTH_POINT_SIZE_RANGE, "GL_SMOOTH_POINT_SIZE_RANGE");
#endif
#if defined(GL_POINT_SIZE_GRANULARITY)
defconsti(env, "GL-POINT-SIZE-GRANULARITY", (GLenum) GL_POINT_SIZE_GRANULARITY, "GL_POINT_SIZE_GRANULARITY");
#endif
#if defined(GL_SMOOTH_POINT_SIZE_GRANULARITY)
defconsti(env, "GL-SMOOTH-POINT-SIZE-GRANULARITY", (GLenum) GL_SMOOTH_POINT_SIZE_GRANULARITY, "GL_SMOOTH_POINT_SIZE_GRANULARITY");
#endif
#if defined(GL_LINE_SMOOTH)
defconsti(env, "GL-LINE-SMOOTH", (GLenum) GL_LINE_SMOOTH, "GL_LINE_SMOOTH");
#endif
#if defined(GL_LINE_WIDTH)
defconsti(env, "GL-LINE-WIDTH", (GLenum) GL_LINE_WIDTH, "GL_LINE_WIDTH");
#endif
#if defined(GL_LINE_WIDTH_RANGE)
defconsti(env, "GL-LINE-WIDTH-RANGE", (GLenum) GL_LINE_WIDTH_RANGE, "GL_LINE_WIDTH_RANGE");
#endif
#if defined(GL_SMOOTH_LINE_WIDTH_RANGE)
defconsti(env, "GL-SMOOTH-LINE-WIDTH-RANGE", (GLenum) GL_SMOOTH_LINE_WIDTH_RANGE, "GL_SMOOTH_LINE_WIDTH_RANGE");
#endif
#if defined(GL_LINE_WIDTH_GRANULARITY)
defconsti(env, "GL-LINE-WIDTH-GRANULARITY", (GLenum) GL_LINE_WIDTH_GRANULARITY, "GL_LINE_WIDTH_GRANULARITY");
#endif
#if defined(GL_SMOOTH_LINE_WIDTH_GRANULARITY)
defconsti(env, "GL-SMOOTH-LINE-WIDTH-GRANULARITY", (GLenum) GL_SMOOTH_LINE_WIDTH_GRANULARITY, "GL_SMOOTH_LINE_WIDTH_GRANULARITY");
#endif
#if defined(GL_LINE_STIPPLE)
defconsti(env, "GL-LINE-STIPPLE", (GLenum) GL_LINE_STIPPLE, "GL_LINE_STIPPLE");
#endif
#if defined(GL_LINE_STIPPLE_PATTERN)
defconsti(env, "GL-LINE-STIPPLE-PATTERN", (GLenum) GL_LINE_STIPPLE_PATTERN, "GL_LINE_STIPPLE_PATTERN");
#endif
#if defined(GL_LINE_STIPPLE_REPEAT)
defconsti(env, "GL-LINE-STIPPLE-REPEAT", (GLenum) GL_LINE_STIPPLE_REPEAT, "GL_LINE_STIPPLE_REPEAT");
#endif
#if defined(GL_LIST_MODE)
defconsti(env, "GL-LIST-MODE", (GLenum) GL_LIST_MODE, "GL_LIST_MODE");
#endif
#if defined(GL_MAX_LIST_NESTING)
defconsti(env, "GL-MAX-LIST-NESTING", (GLenum) GL_MAX_LIST_NESTING, "GL_MAX_LIST_NESTING");
#endif
#if defined(GL_LIST_BASE)
defconsti(env, "GL-LIST-BASE", (GLenum) GL_LIST_BASE, "GL_LIST_BASE");
#endif
#if defined(GL_LIST_INDEX)
defconsti(env, "GL-LIST-INDEX", (GLenum) GL_LIST_INDEX, "GL_LIST_INDEX");
#endif
#if defined(GL_POLYGON_MODE)
defconsti(env, "GL-POLYGON-MODE", (GLenum) GL_POLYGON_MODE, "GL_POLYGON_MODE");
#endif
#if defined(GL_POLYGON_MODE_NV)
defconsti(env, "GL-POLYGON-MODE-NV", (GLenum) GL_POLYGON_MODE_NV, "GL_POLYGON_MODE_NV");
#endif
#if defined(GL_POLYGON_SMOOTH)
defconsti(env, "GL-POLYGON-SMOOTH", (GLenum) GL_POLYGON_SMOOTH, "GL_POLYGON_SMOOTH");
#endif
#if defined(GL_POLYGON_STIPPLE)
defconsti(env, "GL-POLYGON-STIPPLE", (GLenum) GL_POLYGON_STIPPLE, "GL_POLYGON_STIPPLE");
#endif
#if defined(GL_EDGE_FLAG)
defconsti(env, "GL-EDGE-FLAG", (GLenum) GL_EDGE_FLAG, "GL_EDGE_FLAG");
#endif
#if defined(GL_CULL_FACE)
defconsti(env, "GL-CULL-FACE", (GLenum) GL_CULL_FACE, "GL_CULL_FACE");
#endif
#if defined(GL_CULL_FACE_MODE)
defconsti(env, "GL-CULL-FACE-MODE", (GLenum) GL_CULL_FACE_MODE, "GL_CULL_FACE_MODE");
#endif
#if defined(GL_FRONT_FACE)
defconsti(env, "GL-FRONT-FACE", (GLenum) GL_FRONT_FACE, "GL_FRONT_FACE");
#endif
#if defined(GL_LIGHTING)
defconsti(env, "GL-LIGHTING", (GLenum) GL_LIGHTING, "GL_LIGHTING");
#endif
#if defined(GL_LIGHT_MODEL_LOCAL_VIEWER)
defconsti(env, "GL-LIGHT-MODEL-LOCAL-VIEWER", (GLenum) GL_LIGHT_MODEL_LOCAL_VIEWER, "GL_LIGHT_MODEL_LOCAL_VIEWER");
#endif
#if defined(GL_LIGHT_MODEL_TWO_SIDE)
defconsti(env, "GL-LIGHT-MODEL-TWO-SIDE", (GLenum) GL_LIGHT_MODEL_TWO_SIDE, "GL_LIGHT_MODEL_TWO_SIDE");
#endif
#if defined(GL_LIGHT_MODEL_AMBIENT)
defconsti(env, "GL-LIGHT-MODEL-AMBIENT", (GLenum) GL_LIGHT_MODEL_AMBIENT, "GL_LIGHT_MODEL_AMBIENT");
#endif
#if defined(GL_SHADE_MODEL)
defconsti(env, "GL-SHADE-MODEL", (GLenum) GL_SHADE_MODEL, "GL_SHADE_MODEL");
#endif
#if defined(GL_COLOR_MATERIAL_FACE)
defconsti(env, "GL-COLOR-MATERIAL-FACE", (GLenum) GL_COLOR_MATERIAL_FACE, "GL_COLOR_MATERIAL_FACE");
#endif
#if defined(GL_COLOR_MATERIAL_PARAMETER)
defconsti(env, "GL-COLOR-MATERIAL-PARAMETER", (GLenum) GL_COLOR_MATERIAL_PARAMETER, "GL_COLOR_MATERIAL_PARAMETER");
#endif
#if defined(GL_COLOR_MATERIAL)
defconsti(env, "GL-COLOR-MATERIAL", (GLenum) GL_COLOR_MATERIAL, "GL_COLOR_MATERIAL");
#endif
#if defined(GL_FOG)
defconsti(env, "GL-FOG", (GLenum) GL_FOG, "GL_FOG");
#endif
#if defined(GL_FOG_INDEX)
defconsti(env, "GL-FOG-INDEX", (GLenum) GL_FOG_INDEX, "GL_FOG_INDEX");
#endif
#if defined(GL_FOG_DENSITY)
defconsti(env, "GL-FOG-DENSITY", (GLenum) GL_FOG_DENSITY, "GL_FOG_DENSITY");
#endif
#if defined(GL_FOG_START)
defconsti(env, "GL-FOG-START", (GLenum) GL_FOG_START, "GL_FOG_START");
#endif
#if defined(GL_FOG_END)
defconsti(env, "GL-FOG-END", (GLenum) GL_FOG_END, "GL_FOG_END");
#endif
#if defined(GL_FOG_MODE)
defconsti(env, "GL-FOG-MODE", (GLenum) GL_FOG_MODE, "GL_FOG_MODE");
#endif
#if defined(GL_FOG_COLOR)
defconsti(env, "GL-FOG-COLOR", (GLenum) GL_FOG_COLOR, "GL_FOG_COLOR");
#endif
#if defined(GL_DEPTH_RANGE)
defconsti(env, "GL-DEPTH-RANGE", (GLenum) GL_DEPTH_RANGE, "GL_DEPTH_RANGE");
#endif
#if defined(GL_DEPTH_TEST)
defconsti(env, "GL-DEPTH-TEST", (GLenum) GL_DEPTH_TEST, "GL_DEPTH_TEST");
#endif
#if defined(GL_DEPTH_WRITEMASK)
defconsti(env, "GL-DEPTH-WRITEMASK", (GLenum) GL_DEPTH_WRITEMASK, "GL_DEPTH_WRITEMASK");
#endif
#if defined(GL_DEPTH_CLEAR_VALUE)
defconsti(env, "GL-DEPTH-CLEAR-VALUE", (GLenum) GL_DEPTH_CLEAR_VALUE, "GL_DEPTH_CLEAR_VALUE");
#endif
#if defined(GL_DEPTH_FUNC)
defconsti(env, "GL-DEPTH-FUNC", (GLenum) GL_DEPTH_FUNC, "GL_DEPTH_FUNC");
#endif
#if defined(GL_ACCUM_CLEAR_VALUE)
defconsti(env, "GL-ACCUM-CLEAR-VALUE", (GLenum) GL_ACCUM_CLEAR_VALUE, "GL_ACCUM_CLEAR_VALUE");
#endif
#if defined(GL_STENCIL_TEST)
defconsti(env, "GL-STENCIL-TEST", (GLenum) GL_STENCIL_TEST, "GL_STENCIL_TEST");
#endif
#if defined(GL_STENCIL_CLEAR_VALUE)
defconsti(env, "GL-STENCIL-CLEAR-VALUE", (GLenum) GL_STENCIL_CLEAR_VALUE, "GL_STENCIL_CLEAR_VALUE");
#endif
#if defined(GL_STENCIL_FUNC)
defconsti(env, "GL-STENCIL-FUNC", (GLenum) GL_STENCIL_FUNC, "GL_STENCIL_FUNC");
#endif
#if defined(GL_STENCIL_VALUE_MASK)
defconsti(env, "GL-STENCIL-VALUE-MASK", (GLenum) GL_STENCIL_VALUE_MASK, "GL_STENCIL_VALUE_MASK");
#endif
#if defined(GL_STENCIL_FAIL)
defconsti(env, "GL-STENCIL-FAIL", (GLenum) GL_STENCIL_FAIL, "GL_STENCIL_FAIL");
#endif
#if defined(GL_STENCIL_PASS_DEPTH_FAIL)
defconsti(env, "GL-STENCIL-PASS-DEPTH-FAIL", (GLenum) GL_STENCIL_PASS_DEPTH_FAIL, "GL_STENCIL_PASS_DEPTH_FAIL");
#endif
#if defined(GL_STENCIL_PASS_DEPTH_PASS)
defconsti(env, "GL-STENCIL-PASS-DEPTH-PASS", (GLenum) GL_STENCIL_PASS_DEPTH_PASS, "GL_STENCIL_PASS_DEPTH_PASS");
#endif
#if defined(GL_STENCIL_REF)
defconsti(env, "GL-STENCIL-REF", (GLenum) GL_STENCIL_REF, "GL_STENCIL_REF");
#endif
#if defined(GL_STENCIL_WRITEMASK)
defconsti(env, "GL-STENCIL-WRITEMASK", (GLenum) GL_STENCIL_WRITEMASK, "GL_STENCIL_WRITEMASK");
#endif
#if defined(GL_MATRIX_MODE)
defconsti(env, "GL-MATRIX-MODE", (GLenum) GL_MATRIX_MODE, "GL_MATRIX_MODE");
#endif
#if defined(GL_NORMALIZE)
defconsti(env, "GL-NORMALIZE", (GLenum) GL_NORMALIZE, "GL_NORMALIZE");
#endif
#if defined(GL_VIEWPORT)
defconsti(env, "GL-VIEWPORT", (GLenum) GL_VIEWPORT, "GL_VIEWPORT");
#endif
#if defined(GL_MODELVIEW_STACK_DEPTH)
defconsti(env, "GL-MODELVIEW-STACK-DEPTH", (GLenum) GL_MODELVIEW_STACK_DEPTH, "GL_MODELVIEW_STACK_DEPTH");
#endif
#if defined(GL_MODELVIEW0_STACK_DEPTH_EXT)
defconsti(env, "GL-MODELVIEW0-STACK-DEPTH-EXT", (GLenum) GL_MODELVIEW0_STACK_DEPTH_EXT, "GL_MODELVIEW0_STACK_DEPTH_EXT");
#endif
#if defined(GL_PATH_MODELVIEW_STACK_DEPTH_NV)
defconsti(env, "GL-PATH-MODELVIEW-STACK-DEPTH-NV", (GLenum) GL_PATH_MODELVIEW_STACK_DEPTH_NV, "GL_PATH_MODELVIEW_STACK_DEPTH_NV");
#endif
#if defined(GL_PROJECTION_STACK_DEPTH)
defconsti(env, "GL-PROJECTION-STACK-DEPTH", (GLenum) GL_PROJECTION_STACK_DEPTH, "GL_PROJECTION_STACK_DEPTH");
#endif
#if defined(GL_PATH_PROJECTION_STACK_DEPTH_NV)
defconsti(env, "GL-PATH-PROJECTION-STACK-DEPTH-NV", (GLenum) GL_PATH_PROJECTION_STACK_DEPTH_NV, "GL_PATH_PROJECTION_STACK_DEPTH_NV");
#endif
#if defined(GL_TEXTURE_STACK_DEPTH)
defconsti(env, "GL-TEXTURE-STACK-DEPTH", (GLenum) GL_TEXTURE_STACK_DEPTH, "GL_TEXTURE_STACK_DEPTH");
#endif
#if defined(GL_MODELVIEW_MATRIX)
defconsti(env, "GL-MODELVIEW-MATRIX", (GLenum) GL_MODELVIEW_MATRIX, "GL_MODELVIEW_MATRIX");
#endif
#if defined(GL_MODELVIEW0_MATRIX_EXT)
defconsti(env, "GL-MODELVIEW0-MATRIX-EXT", (GLenum) GL_MODELVIEW0_MATRIX_EXT, "GL_MODELVIEW0_MATRIX_EXT");
#endif
#if defined(GL_PATH_MODELVIEW_MATRIX_NV)
defconsti(env, "GL-PATH-MODELVIEW-MATRIX-NV", (GLenum) GL_PATH_MODELVIEW_MATRIX_NV, "GL_PATH_MODELVIEW_MATRIX_NV");
#endif
#if defined(GL_PROJECTION_MATRIX)
defconsti(env, "GL-PROJECTION-MATRIX", (GLenum) GL_PROJECTION_MATRIX, "GL_PROJECTION_MATRIX");
#endif
#if defined(GL_PATH_PROJECTION_MATRIX_NV)
defconsti(env, "GL-PATH-PROJECTION-MATRIX-NV", (GLenum) GL_PATH_PROJECTION_MATRIX_NV, "GL_PATH_PROJECTION_MATRIX_NV");
#endif
#if defined(GL_TEXTURE_MATRIX)
defconsti(env, "GL-TEXTURE-MATRIX", (GLenum) GL_TEXTURE_MATRIX, "GL_TEXTURE_MATRIX");
#endif
#if defined(GL_ATTRIB_STACK_DEPTH)
defconsti(env, "GL-ATTRIB-STACK-DEPTH", (GLenum) GL_ATTRIB_STACK_DEPTH, "GL_ATTRIB_STACK_DEPTH");
#endif
#if defined(GL_CLIENT_ATTRIB_STACK_DEPTH)
defconsti(env, "GL-CLIENT-ATTRIB-STACK-DEPTH", (GLenum) GL_CLIENT_ATTRIB_STACK_DEPTH, "GL_CLIENT_ATTRIB_STACK_DEPTH");
#endif
#if defined(GL_ALPHA_TEST)
defconsti(env, "GL-ALPHA-TEST", (GLenum) GL_ALPHA_TEST, "GL_ALPHA_TEST");
#endif
#if defined(GL_ALPHA_TEST_QCOM)
defconsti(env, "GL-ALPHA-TEST-QCOM", (GLenum) GL_ALPHA_TEST_QCOM, "GL_ALPHA_TEST_QCOM");
#endif
#if defined(GL_ALPHA_TEST_FUNC)
defconsti(env, "GL-ALPHA-TEST-FUNC", (GLenum) GL_ALPHA_TEST_FUNC, "GL_ALPHA_TEST_FUNC");
#endif
#if defined(GL_ALPHA_TEST_FUNC_QCOM)
defconsti(env, "GL-ALPHA-TEST-FUNC-QCOM", (GLenum) GL_ALPHA_TEST_FUNC_QCOM, "GL_ALPHA_TEST_FUNC_QCOM");
#endif
#if defined(GL_ALPHA_TEST_REF)
defconsti(env, "GL-ALPHA-TEST-REF", (GLenum) GL_ALPHA_TEST_REF, "GL_ALPHA_TEST_REF");
#endif
#if defined(GL_ALPHA_TEST_REF_QCOM)
defconsti(env, "GL-ALPHA-TEST-REF-QCOM", (GLenum) GL_ALPHA_TEST_REF_QCOM, "GL_ALPHA_TEST_REF_QCOM");
#endif
#if defined(GL_DITHER)
defconsti(env, "GL-DITHER", (GLenum) GL_DITHER, "GL_DITHER");
#endif
#if defined(GL_BLEND_DST)
defconsti(env, "GL-BLEND-DST", (GLenum) GL_BLEND_DST, "GL_BLEND_DST");
#endif
#if defined(GL_BLEND_SRC)
defconsti(env, "GL-BLEND-SRC", (GLenum) GL_BLEND_SRC, "GL_BLEND_SRC");
#endif
#if defined(GL_BLEND)
defconsti(env, "GL-BLEND", (GLenum) GL_BLEND, "GL_BLEND");
#endif
#if defined(GL_LOGIC_OP_MODE)
defconsti(env, "GL-LOGIC-OP-MODE", (GLenum) GL_LOGIC_OP_MODE, "GL_LOGIC_OP_MODE");
#endif
#if defined(GL_INDEX_LOGIC_OP)
defconsti(env, "GL-INDEX-LOGIC-OP", (GLenum) GL_INDEX_LOGIC_OP, "GL_INDEX_LOGIC_OP");
#endif
#if defined(GL_LOGIC_OP)
defconsti(env, "GL-LOGIC-OP", (GLenum) GL_LOGIC_OP, "GL_LOGIC_OP");
#endif
#if defined(GL_COLOR_LOGIC_OP)
defconsti(env, "GL-COLOR-LOGIC-OP", (GLenum) GL_COLOR_LOGIC_OP, "GL_COLOR_LOGIC_OP");
#endif
#if defined(GL_AUX_BUFFERS)
defconsti(env, "GL-AUX-BUFFERS", (GLenum) GL_AUX_BUFFERS, "GL_AUX_BUFFERS");
#endif
#if defined(GL_DRAW_BUFFER)
defconsti(env, "GL-DRAW-BUFFER", (GLenum) GL_DRAW_BUFFER, "GL_DRAW_BUFFER");
#endif
#if defined(GL_DRAW_BUFFER_EXT)
defconsti(env, "GL-DRAW-BUFFER-EXT", (GLenum) GL_DRAW_BUFFER_EXT, "GL_DRAW_BUFFER_EXT");
#endif
#if defined(GL_READ_BUFFER)
defconsti(env, "GL-READ-BUFFER", (GLenum) GL_READ_BUFFER, "GL_READ_BUFFER");
#endif
#if defined(GL_READ_BUFFER_EXT)
defconsti(env, "GL-READ-BUFFER-EXT", (GLenum) GL_READ_BUFFER_EXT, "GL_READ_BUFFER_EXT");
#endif
#if defined(GL_READ_BUFFER_NV)
defconsti(env, "GL-READ-BUFFER-NV", (GLenum) GL_READ_BUFFER_NV, "GL_READ_BUFFER_NV");
#endif
#if defined(GL_SCISSOR_BOX)
defconsti(env, "GL-SCISSOR-BOX", (GLenum) GL_SCISSOR_BOX, "GL_SCISSOR_BOX");
#endif
#if defined(GL_SCISSOR_TEST)
defconsti(env, "GL-SCISSOR-TEST", (GLenum) GL_SCISSOR_TEST, "GL_SCISSOR_TEST");
#endif
#if defined(GL_INDEX_CLEAR_VALUE)
defconsti(env, "GL-INDEX-CLEAR-VALUE", (GLenum) GL_INDEX_CLEAR_VALUE, "GL_INDEX_CLEAR_VALUE");
#endif
#if defined(GL_INDEX_WRITEMASK)
defconsti(env, "GL-INDEX-WRITEMASK", (GLenum) GL_INDEX_WRITEMASK, "GL_INDEX_WRITEMASK");
#endif
#if defined(GL_COLOR_CLEAR_VALUE)
defconsti(env, "GL-COLOR-CLEAR-VALUE", (GLenum) GL_COLOR_CLEAR_VALUE, "GL_COLOR_CLEAR_VALUE");
#endif
#if defined(GL_COLOR_WRITEMASK)
defconsti(env, "GL-COLOR-WRITEMASK", (GLenum) GL_COLOR_WRITEMASK, "GL_COLOR_WRITEMASK");
#endif
#if defined(GL_INDEX_MODE)
defconsti(env, "GL-INDEX-MODE", (GLenum) GL_INDEX_MODE, "GL_INDEX_MODE");
#endif
#if defined(GL_RGBA_MODE)
defconsti(env, "GL-RGBA-MODE", (GLenum) GL_RGBA_MODE, "GL_RGBA_MODE");
#endif
#if defined(GL_DOUBLEBUFFER)
defconsti(env, "GL-DOUBLEBUFFER", (GLenum) GL_DOUBLEBUFFER, "GL_DOUBLEBUFFER");
#endif
#if defined(GL_STEREO)
defconsti(env, "GL-STEREO", (GLenum) GL_STEREO, "GL_STEREO");
#endif
#if defined(GL_RENDER_MODE)
defconsti(env, "GL-RENDER-MODE", (GLenum) GL_RENDER_MODE, "GL_RENDER_MODE");
#endif
#if defined(GL_PERSPECTIVE_CORRECTION_HINT)
defconsti(env, "GL-PERSPECTIVE-CORRECTION-HINT", (GLenum) GL_PERSPECTIVE_CORRECTION_HINT, "GL_PERSPECTIVE_CORRECTION_HINT");
#endif
#if defined(GL_POINT_SMOOTH_HINT)
defconsti(env, "GL-POINT-SMOOTH-HINT", (GLenum) GL_POINT_SMOOTH_HINT, "GL_POINT_SMOOTH_HINT");
#endif
#if defined(GL_LINE_SMOOTH_HINT)
defconsti(env, "GL-LINE-SMOOTH-HINT", (GLenum) GL_LINE_SMOOTH_HINT, "GL_LINE_SMOOTH_HINT");
#endif
#if defined(GL_POLYGON_SMOOTH_HINT)
defconsti(env, "GL-POLYGON-SMOOTH-HINT", (GLenum) GL_POLYGON_SMOOTH_HINT, "GL_POLYGON_SMOOTH_HINT");
#endif
#if defined(GL_FOG_HINT)
defconsti(env, "GL-FOG-HINT", (GLenum) GL_FOG_HINT, "GL_FOG_HINT");
#endif
#if defined(GL_TEXTURE_GEN_S)
defconsti(env, "GL-TEXTURE-GEN-S", (GLenum) GL_TEXTURE_GEN_S, "GL_TEXTURE_GEN_S");
#endif
#if defined(GL_TEXTURE_GEN_T)
defconsti(env, "GL-TEXTURE-GEN-T", (GLenum) GL_TEXTURE_GEN_T, "GL_TEXTURE_GEN_T");
#endif
#if defined(GL_TEXTURE_GEN_R)
defconsti(env, "GL-TEXTURE-GEN-R", (GLenum) GL_TEXTURE_GEN_R, "GL_TEXTURE_GEN_R");
#endif
#if defined(GL_TEXTURE_GEN_Q)
defconsti(env, "GL-TEXTURE-GEN-Q", (GLenum) GL_TEXTURE_GEN_Q, "GL_TEXTURE_GEN_Q");
#endif
#if defined(GL_PIXEL_MAP_I_TO_I)
defconsti(env, "GL-PIXEL-MAP-I-TO-I", (GLenum) GL_PIXEL_MAP_I_TO_I, "GL_PIXEL_MAP_I_TO_I");
#endif
#if defined(GL_PIXEL_MAP_S_TO_S)
defconsti(env, "GL-PIXEL-MAP-S-TO-S", (GLenum) GL_PIXEL_MAP_S_TO_S, "GL_PIXEL_MAP_S_TO_S");
#endif
#if defined(GL_PIXEL_MAP_I_TO_R)
defconsti(env, "GL-PIXEL-MAP-I-TO-R", (GLenum) GL_PIXEL_MAP_I_TO_R, "GL_PIXEL_MAP_I_TO_R");
#endif
#if defined(GL_PIXEL_MAP_I_TO_G)
defconsti(env, "GL-PIXEL-MAP-I-TO-G", (GLenum) GL_PIXEL_MAP_I_TO_G, "GL_PIXEL_MAP_I_TO_G");
#endif
#if defined(GL_PIXEL_MAP_I_TO_B)
defconsti(env, "GL-PIXEL-MAP-I-TO-B", (GLenum) GL_PIXEL_MAP_I_TO_B, "GL_PIXEL_MAP_I_TO_B");
#endif
#if defined(GL_PIXEL_MAP_I_TO_A)
defconsti(env, "GL-PIXEL-MAP-I-TO-A", (GLenum) GL_PIXEL_MAP_I_TO_A, "GL_PIXEL_MAP_I_TO_A");
#endif
#if defined(GL_PIXEL_MAP_R_TO_R)
defconsti(env, "GL-PIXEL-MAP-R-TO-R", (GLenum) GL_PIXEL_MAP_R_TO_R, "GL_PIXEL_MAP_R_TO_R");
#endif
#if defined(GL_PIXEL_MAP_G_TO_G)
defconsti(env, "GL-PIXEL-MAP-G-TO-G", (GLenum) GL_PIXEL_MAP_G_TO_G, "GL_PIXEL_MAP_G_TO_G");
#endif
#if defined(GL_PIXEL_MAP_B_TO_B)
defconsti(env, "GL-PIXEL-MAP-B-TO-B", (GLenum) GL_PIXEL_MAP_B_TO_B, "GL_PIXEL_MAP_B_TO_B");
#endif
#if defined(GL_PIXEL_MAP_A_TO_A)
defconsti(env, "GL-PIXEL-MAP-A-TO-A", (GLenum) GL_PIXEL_MAP_A_TO_A, "GL_PIXEL_MAP_A_TO_A");
#endif
#if defined(GL_PIXEL_MAP_I_TO_I_SIZE)
defconsti(env, "GL-PIXEL-MAP-I-TO-I-SIZE", (GLenum) GL_PIXEL_MAP_I_TO_I_SIZE, "GL_PIXEL_MAP_I_TO_I_SIZE");
#endif
#if defined(GL_PIXEL_MAP_S_TO_S_SIZE)
defconsti(env, "GL-PIXEL-MAP-S-TO-S-SIZE", (GLenum) GL_PIXEL_MAP_S_TO_S_SIZE, "GL_PIXEL_MAP_S_TO_S_SIZE");
#endif
#if defined(GL_PIXEL_MAP_I_TO_R_SIZE)
defconsti(env, "GL-PIXEL-MAP-I-TO-R-SIZE", (GLenum) GL_PIXEL_MAP_I_TO_R_SIZE, "GL_PIXEL_MAP_I_TO_R_SIZE");
#endif
#if defined(GL_PIXEL_MAP_I_TO_G_SIZE)
defconsti(env, "GL-PIXEL-MAP-I-TO-G-SIZE", (GLenum) GL_PIXEL_MAP_I_TO_G_SIZE, "GL_PIXEL_MAP_I_TO_G_SIZE");
#endif
#if defined(GL_PIXEL_MAP_I_TO_B_SIZE)
defconsti(env, "GL-PIXEL-MAP-I-TO-B-SIZE", (GLenum) GL_PIXEL_MAP_I_TO_B_SIZE, "GL_PIXEL_MAP_I_TO_B_SIZE");
#endif
#if defined(GL_PIXEL_MAP_I_TO_A_SIZE)
defconsti(env, "GL-PIXEL-MAP-I-TO-A-SIZE", (GLenum) GL_PIXEL_MAP_I_TO_A_SIZE, "GL_PIXEL_MAP_I_TO_A_SIZE");
#endif
#if defined(GL_PIXEL_MAP_R_TO_R_SIZE)
defconsti(env, "GL-PIXEL-MAP-R-TO-R-SIZE", (GLenum) GL_PIXEL_MAP_R_TO_R_SIZE, "GL_PIXEL_MAP_R_TO_R_SIZE");
#endif
#if defined(GL_PIXEL_MAP_G_TO_G_SIZE)
defconsti(env, "GL-PIXEL-MAP-G-TO-G-SIZE", (GLenum) GL_PIXEL_MAP_G_TO_G_SIZE, "GL_PIXEL_MAP_G_TO_G_SIZE");
#endif
#if defined(GL_PIXEL_MAP_B_TO_B_SIZE)
defconsti(env, "GL-PIXEL-MAP-B-TO-B-SIZE", (GLenum) GL_PIXEL_MAP_B_TO_B_SIZE, "GL_PIXEL_MAP_B_TO_B_SIZE");
#endif
#if defined(GL_PIXEL_MAP_A_TO_A_SIZE)
defconsti(env, "GL-PIXEL-MAP-A-TO-A-SIZE", (GLenum) GL_PIXEL_MAP_A_TO_A_SIZE, "GL_PIXEL_MAP_A_TO_A_SIZE");
#endif
#if defined(GL_UNPACK_SWAP_BYTES)
defconsti(env, "GL-UNPACK-SWAP-BYTES", (GLenum) GL_UNPACK_SWAP_BYTES, "GL_UNPACK_SWAP_BYTES");
#endif
#if defined(GL_UNPACK_LSB_FIRST)
defconsti(env, "GL-UNPACK-LSB-FIRST", (GLenum) GL_UNPACK_LSB_FIRST, "GL_UNPACK_LSB_FIRST");
#endif
#if defined(GL_UNPACK_ROW_LENGTH)
defconsti(env, "GL-UNPACK-ROW-LENGTH", (GLenum) GL_UNPACK_ROW_LENGTH, "GL_UNPACK_ROW_LENGTH");
#endif
#if defined(GL_UNPACK_ROW_LENGTH_EXT)
defconsti(env, "GL-UNPACK-ROW-LENGTH-EXT", (GLenum) GL_UNPACK_ROW_LENGTH_EXT, "GL_UNPACK_ROW_LENGTH_EXT");
#endif
#if defined(GL_UNPACK_SKIP_ROWS)
defconsti(env, "GL-UNPACK-SKIP-ROWS", (GLenum) GL_UNPACK_SKIP_ROWS, "GL_UNPACK_SKIP_ROWS");
#endif
#if defined(GL_UNPACK_SKIP_ROWS_EXT)
defconsti(env, "GL-UNPACK-SKIP-ROWS-EXT", (GLenum) GL_UNPACK_SKIP_ROWS_EXT, "GL_UNPACK_SKIP_ROWS_EXT");
#endif
#if defined(GL_UNPACK_SKIP_PIXELS)
defconsti(env, "GL-UNPACK-SKIP-PIXELS", (GLenum) GL_UNPACK_SKIP_PIXELS, "GL_UNPACK_SKIP_PIXELS");
#endif
#if defined(GL_UNPACK_SKIP_PIXELS_EXT)
defconsti(env, "GL-UNPACK-SKIP-PIXELS-EXT", (GLenum) GL_UNPACK_SKIP_PIXELS_EXT, "GL_UNPACK_SKIP_PIXELS_EXT");
#endif
#if defined(GL_UNPACK_ALIGNMENT)
defconsti(env, "GL-UNPACK-ALIGNMENT", (GLenum) GL_UNPACK_ALIGNMENT, "GL_UNPACK_ALIGNMENT");
#endif
#if defined(GL_PACK_SWAP_BYTES)
defconsti(env, "GL-PACK-SWAP-BYTES", (GLenum) GL_PACK_SWAP_BYTES, "GL_PACK_SWAP_BYTES");
#endif
#if defined(GL_PACK_LSB_FIRST)
defconsti(env, "GL-PACK-LSB-FIRST", (GLenum) GL_PACK_LSB_FIRST, "GL_PACK_LSB_FIRST");
#endif
#if defined(GL_PACK_ROW_LENGTH)
defconsti(env, "GL-PACK-ROW-LENGTH", (GLenum) GL_PACK_ROW_LENGTH, "GL_PACK_ROW_LENGTH");
#endif
#if defined(GL_PACK_SKIP_ROWS)
defconsti(env, "GL-PACK-SKIP-ROWS", (GLenum) GL_PACK_SKIP_ROWS, "GL_PACK_SKIP_ROWS");
#endif
#if defined(GL_PACK_SKIP_PIXELS)
defconsti(env, "GL-PACK-SKIP-PIXELS", (GLenum) GL_PACK_SKIP_PIXELS, "GL_PACK_SKIP_PIXELS");
#endif
#if defined(GL_PACK_ALIGNMENT)
defconsti(env, "GL-PACK-ALIGNMENT", (GLenum) GL_PACK_ALIGNMENT, "GL_PACK_ALIGNMENT");
#endif
#if defined(GL_MAP_COLOR)
defconsti(env, "GL-MAP-COLOR", (GLenum) GL_MAP_COLOR, "GL_MAP_COLOR");
#endif
#if defined(GL_MAP_STENCIL)
defconsti(env, "GL-MAP-STENCIL", (GLenum) GL_MAP_STENCIL, "GL_MAP_STENCIL");
#endif
#if defined(GL_INDEX_SHIFT)
defconsti(env, "GL-INDEX-SHIFT", (GLenum) GL_INDEX_SHIFT, "GL_INDEX_SHIFT");
#endif
#if defined(GL_INDEX_OFFSET)
defconsti(env, "GL-INDEX-OFFSET", (GLenum) GL_INDEX_OFFSET, "GL_INDEX_OFFSET");
#endif
#if defined(GL_RED_SCALE)
defconsti(env, "GL-RED-SCALE", (GLenum) GL_RED_SCALE, "GL_RED_SCALE");
#endif
#if defined(GL_RED_BIAS)
defconsti(env, "GL-RED-BIAS", (GLenum) GL_RED_BIAS, "GL_RED_BIAS");
#endif
#if defined(GL_ZOOM_X)
defconsti(env, "GL-ZOOM-X", (GLenum) GL_ZOOM_X, "GL_ZOOM_X");
#endif
#if defined(GL_ZOOM_Y)
defconsti(env, "GL-ZOOM-Y", (GLenum) GL_ZOOM_Y, "GL_ZOOM_Y");
#endif
#if defined(GL_GREEN_SCALE)
defconsti(env, "GL-GREEN-SCALE", (GLenum) GL_GREEN_SCALE, "GL_GREEN_SCALE");
#endif
#if defined(GL_GREEN_BIAS)
defconsti(env, "GL-GREEN-BIAS", (GLenum) GL_GREEN_BIAS, "GL_GREEN_BIAS");
#endif
#if defined(GL_BLUE_SCALE)
defconsti(env, "GL-BLUE-SCALE", (GLenum) GL_BLUE_SCALE, "GL_BLUE_SCALE");
#endif
#if defined(GL_BLUE_BIAS)
defconsti(env, "GL-BLUE-BIAS", (GLenum) GL_BLUE_BIAS, "GL_BLUE_BIAS");
#endif
#if defined(GL_ALPHA_SCALE)
defconsti(env, "GL-ALPHA-SCALE", (GLenum) GL_ALPHA_SCALE, "GL_ALPHA_SCALE");
#endif
#if defined(GL_ALPHA_BIAS)
defconsti(env, "GL-ALPHA-BIAS", (GLenum) GL_ALPHA_BIAS, "GL_ALPHA_BIAS");
#endif
#if defined(GL_DEPTH_SCALE)
defconsti(env, "GL-DEPTH-SCALE", (GLenum) GL_DEPTH_SCALE, "GL_DEPTH_SCALE");
#endif
#if defined(GL_DEPTH_BIAS)
defconsti(env, "GL-DEPTH-BIAS", (GLenum) GL_DEPTH_BIAS, "GL_DEPTH_BIAS");
#endif
#if defined(GL_MAX_EVAL_ORDER)
defconsti(env, "GL-MAX-EVAL-ORDER", (GLenum) GL_MAX_EVAL_ORDER, "GL_MAX_EVAL_ORDER");
#endif
#if defined(GL_MAX_LIGHTS)
defconsti(env, "GL-MAX-LIGHTS", (GLenum) GL_MAX_LIGHTS, "GL_MAX_LIGHTS");
#endif
#if defined(GL_MAX_CLIP_PLANES)
defconsti(env, "GL-MAX-CLIP-PLANES", (GLenum) GL_MAX_CLIP_PLANES, "GL_MAX_CLIP_PLANES");
#endif
#if defined(GL_MAX_CLIP_PLANES_IMG)
defconsti(env, "GL-MAX-CLIP-PLANES-IMG", (GLenum) GL_MAX_CLIP_PLANES_IMG, "GL_MAX_CLIP_PLANES_IMG");
#endif
#if defined(GL_MAX_CLIP_DISTANCES)
defconsti(env, "GL-MAX-CLIP-DISTANCES", (GLenum) GL_MAX_CLIP_DISTANCES, "GL_MAX_CLIP_DISTANCES");
#endif
#if defined(GL_MAX_CLIP_DISTANCES_EXT)
defconsti(env, "GL-MAX-CLIP-DISTANCES-EXT", (GLenum) GL_MAX_CLIP_DISTANCES_EXT, "GL_MAX_CLIP_DISTANCES_EXT");
#endif
#if defined(GL_MAX_CLIP_DISTANCES_APPLE)
defconsti(env, "GL-MAX-CLIP-DISTANCES-APPLE", (GLenum) GL_MAX_CLIP_DISTANCES_APPLE, "GL_MAX_CLIP_DISTANCES_APPLE");
#endif
#if defined(GL_MAX_TEXTURE_SIZE)
defconsti(env, "GL-MAX-TEXTURE-SIZE", (GLenum) GL_MAX_TEXTURE_SIZE, "GL_MAX_TEXTURE_SIZE");
#endif
#if defined(GL_MAX_PIXEL_MAP_TABLE)
defconsti(env, "GL-MAX-PIXEL-MAP-TABLE", (GLenum) GL_MAX_PIXEL_MAP_TABLE, "GL_MAX_PIXEL_MAP_TABLE");
#endif
#if defined(GL_MAX_ATTRIB_STACK_DEPTH)
defconsti(env, "GL-MAX-ATTRIB-STACK-DEPTH", (GLenum) GL_MAX_ATTRIB_STACK_DEPTH, "GL_MAX_ATTRIB_STACK_DEPTH");
#endif
#if defined(GL_MAX_MODELVIEW_STACK_DEPTH)
defconsti(env, "GL-MAX-MODELVIEW-STACK-DEPTH", (GLenum) GL_MAX_MODELVIEW_STACK_DEPTH, "GL_MAX_MODELVIEW_STACK_DEPTH");
#endif
#if defined(GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV)
defconsti(env, "GL-PATH-MAX-MODELVIEW-STACK-DEPTH-NV", (GLenum) GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV, "GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV");
#endif
#if defined(GL_MAX_NAME_STACK_DEPTH)
defconsti(env, "GL-MAX-NAME-STACK-DEPTH", (GLenum) GL_MAX_NAME_STACK_DEPTH, "GL_MAX_NAME_STACK_DEPTH");
#endif
#if defined(GL_MAX_PROJECTION_STACK_DEPTH)
defconsti(env, "GL-MAX-PROJECTION-STACK-DEPTH", (GLenum) GL_MAX_PROJECTION_STACK_DEPTH, "GL_MAX_PROJECTION_STACK_DEPTH");
#endif
#if defined(GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV)
defconsti(env, "GL-PATH-MAX-PROJECTION-STACK-DEPTH-NV", (GLenum) GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV, "GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV");
#endif
#if defined(GL_MAX_TEXTURE_STACK_DEPTH)
defconsti(env, "GL-MAX-TEXTURE-STACK-DEPTH", (GLenum) GL_MAX_TEXTURE_STACK_DEPTH, "GL_MAX_TEXTURE_STACK_DEPTH");
#endif
#if defined(GL_MAX_VIEWPORT_DIMS)
defconsti(env, "GL-MAX-VIEWPORT-DIMS", (GLenum) GL_MAX_VIEWPORT_DIMS, "GL_MAX_VIEWPORT_DIMS");
#endif
#if defined(GL_MAX_CLIENT_ATTRIB_STACK_DEPTH)
defconsti(env, "GL-MAX-CLIENT-ATTRIB-STACK-DEPTH", (GLenum) GL_MAX_CLIENT_ATTRIB_STACK_DEPTH, "GL_MAX_CLIENT_ATTRIB_STACK_DEPTH");
#endif
#if defined(GL_SUBPIXEL_BITS)
defconsti(env, "GL-SUBPIXEL-BITS", (GLenum) GL_SUBPIXEL_BITS, "GL_SUBPIXEL_BITS");
#endif
#if defined(GL_INDEX_BITS)
defconsti(env, "GL-INDEX-BITS", (GLenum) GL_INDEX_BITS, "GL_INDEX_BITS");
#endif
#if defined(GL_RED_BITS)
defconsti(env, "GL-RED-BITS", (GLenum) GL_RED_BITS, "GL_RED_BITS");
#endif
#if defined(GL_GREEN_BITS)
defconsti(env, "GL-GREEN-BITS", (GLenum) GL_GREEN_BITS, "GL_GREEN_BITS");
#endif
#if defined(GL_BLUE_BITS)
defconsti(env, "GL-BLUE-BITS", (GLenum) GL_BLUE_BITS, "GL_BLUE_BITS");
#endif
#if defined(GL_ALPHA_BITS)
defconsti(env, "GL-ALPHA-BITS", (GLenum) GL_ALPHA_BITS, "GL_ALPHA_BITS");
#endif
#if defined(GL_DEPTH_BITS)
defconsti(env, "GL-DEPTH-BITS", (GLenum) GL_DEPTH_BITS, "GL_DEPTH_BITS");
#endif
#if defined(GL_STENCIL_BITS)
defconsti(env, "GL-STENCIL-BITS", (GLenum) GL_STENCIL_BITS, "GL_STENCIL_BITS");
#endif
#if defined(GL_ACCUM_RED_BITS)
defconsti(env, "GL-ACCUM-RED-BITS", (GLenum) GL_ACCUM_RED_BITS, "GL_ACCUM_RED_BITS");
#endif
#if defined(GL_ACCUM_GREEN_BITS)
defconsti(env, "GL-ACCUM-GREEN-BITS", (GLenum) GL_ACCUM_GREEN_BITS, "GL_ACCUM_GREEN_BITS");
#endif
#if defined(GL_ACCUM_BLUE_BITS)
defconsti(env, "GL-ACCUM-BLUE-BITS", (GLenum) GL_ACCUM_BLUE_BITS, "GL_ACCUM_BLUE_BITS");
#endif
#if defined(GL_ACCUM_ALPHA_BITS)
defconsti(env, "GL-ACCUM-ALPHA-BITS", (GLenum) GL_ACCUM_ALPHA_BITS, "GL_ACCUM_ALPHA_BITS");
#endif
#if defined(GL_NAME_STACK_DEPTH)
defconsti(env, "GL-NAME-STACK-DEPTH", (GLenum) GL_NAME_STACK_DEPTH, "GL_NAME_STACK_DEPTH");
#endif
#if defined(GL_AUTO_NORMAL)
defconsti(env, "GL-AUTO-NORMAL", (GLenum) GL_AUTO_NORMAL, "GL_AUTO_NORMAL");
#endif
#if defined(GL_MAP1_COLOR_4)
defconsti(env, "GL-MAP1-COLOR-4", (GLenum) GL_MAP1_COLOR_4, "GL_MAP1_COLOR_4");
#endif
#if defined(GL_MAP1_INDEX)
defconsti(env, "GL-MAP1-INDEX", (GLenum) GL_MAP1_INDEX, "GL_MAP1_INDEX");
#endif
#if defined(GL_MAP1_NORMAL)
defconsti(env, "GL-MAP1-NORMAL", (GLenum) GL_MAP1_NORMAL, "GL_MAP1_NORMAL");
#endif
#if defined(GL_MAP1_TEXTURE_COORD_1)
defconsti(env, "GL-MAP1-TEXTURE-COORD-1", (GLenum) GL_MAP1_TEXTURE_COORD_1, "GL_MAP1_TEXTURE_COORD_1");
#endif
#if defined(GL_MAP1_TEXTURE_COORD_2)
defconsti(env, "GL-MAP1-TEXTURE-COORD-2", (GLenum) GL_MAP1_TEXTURE_COORD_2, "GL_MAP1_TEXTURE_COORD_2");
#endif
#if defined(GL_MAP1_TEXTURE_COORD_3)
defconsti(env, "GL-MAP1-TEXTURE-COORD-3", (GLenum) GL_MAP1_TEXTURE_COORD_3, "GL_MAP1_TEXTURE_COORD_3");
#endif
#if defined(GL_MAP1_TEXTURE_COORD_4)
defconsti(env, "GL-MAP1-TEXTURE-COORD-4", (GLenum) GL_MAP1_TEXTURE_COORD_4, "GL_MAP1_TEXTURE_COORD_4");
#endif
#if defined(GL_MAP1_VERTEX_3)
defconsti(env, "GL-MAP1-VERTEX-3", (GLenum) GL_MAP1_VERTEX_3, "GL_MAP1_VERTEX_3");
#endif
#if defined(GL_MAP1_VERTEX_4)
defconsti(env, "GL-MAP1-VERTEX-4", (GLenum) GL_MAP1_VERTEX_4, "GL_MAP1_VERTEX_4");
#endif
#if defined(GL_MAP2_COLOR_4)
defconsti(env, "GL-MAP2-COLOR-4", (GLenum) GL_MAP2_COLOR_4, "GL_MAP2_COLOR_4");
#endif
#if defined(GL_MAP2_INDEX)
defconsti(env, "GL-MAP2-INDEX", (GLenum) GL_MAP2_INDEX, "GL_MAP2_INDEX");
#endif
#if defined(GL_MAP2_NORMAL)
defconsti(env, "GL-MAP2-NORMAL", (GLenum) GL_MAP2_NORMAL, "GL_MAP2_NORMAL");
#endif
#if defined(GL_MAP2_TEXTURE_COORD_1)
defconsti(env, "GL-MAP2-TEXTURE-COORD-1", (GLenum) GL_MAP2_TEXTURE_COORD_1, "GL_MAP2_TEXTURE_COORD_1");
#endif
#if defined(GL_MAP2_TEXTURE_COORD_2)
defconsti(env, "GL-MAP2-TEXTURE-COORD-2", (GLenum) GL_MAP2_TEXTURE_COORD_2, "GL_MAP2_TEXTURE_COORD_2");
#endif
#if defined(GL_MAP2_TEXTURE_COORD_3)
defconsti(env, "GL-MAP2-TEXTURE-COORD-3", (GLenum) GL_MAP2_TEXTURE_COORD_3, "GL_MAP2_TEXTURE_COORD_3");
#endif
#if defined(GL_MAP2_TEXTURE_COORD_4)
defconsti(env, "GL-MAP2-TEXTURE-COORD-4", (GLenum) GL_MAP2_TEXTURE_COORD_4, "GL_MAP2_TEXTURE_COORD_4");
#endif
#if defined(GL_MAP2_VERTEX_3)
defconsti(env, "GL-MAP2-VERTEX-3", (GLenum) GL_MAP2_VERTEX_3, "GL_MAP2_VERTEX_3");
#endif
#if defined(GL_MAP2_VERTEX_4)
defconsti(env, "GL-MAP2-VERTEX-4", (GLenum) GL_MAP2_VERTEX_4, "GL_MAP2_VERTEX_4");
#endif
#if defined(GL_MAP1_GRID_DOMAIN)
defconsti(env, "GL-MAP1-GRID-DOMAIN", (GLenum) GL_MAP1_GRID_DOMAIN, "GL_MAP1_GRID_DOMAIN");
#endif
#if defined(GL_MAP1_GRID_SEGMENTS)
defconsti(env, "GL-MAP1-GRID-SEGMENTS", (GLenum) GL_MAP1_GRID_SEGMENTS, "GL_MAP1_GRID_SEGMENTS");
#endif
#if defined(GL_MAP2_GRID_DOMAIN)
defconsti(env, "GL-MAP2-GRID-DOMAIN", (GLenum) GL_MAP2_GRID_DOMAIN, "GL_MAP2_GRID_DOMAIN");
#endif
#if defined(GL_MAP2_GRID_SEGMENTS)
defconsti(env, "GL-MAP2-GRID-SEGMENTS", (GLenum) GL_MAP2_GRID_SEGMENTS, "GL_MAP2_GRID_SEGMENTS");
#endif
#if defined(GL_TEXTURE_1D)
defconsti(env, "GL-TEXTURE-1D", (GLenum) GL_TEXTURE_1D, "GL_TEXTURE_1D");
#endif
#if defined(GL_TEXTURE_2D)
defconsti(env, "GL-TEXTURE-2D", (GLenum) GL_TEXTURE_2D, "GL_TEXTURE_2D");
#endif
#if defined(GL_FEEDBACK_BUFFER_POINTER)
defconsti(env, "GL-FEEDBACK-BUFFER-POINTER", (GLenum) GL_FEEDBACK_BUFFER_POINTER, "GL_FEEDBACK_BUFFER_POINTER");
#endif
#if defined(GL_FEEDBACK_BUFFER_SIZE)
defconsti(env, "GL-FEEDBACK-BUFFER-SIZE", (GLenum) GL_FEEDBACK_BUFFER_SIZE, "GL_FEEDBACK_BUFFER_SIZE");
#endif
#if defined(GL_FEEDBACK_BUFFER_TYPE)
defconsti(env, "GL-FEEDBACK-BUFFER-TYPE", (GLenum) GL_FEEDBACK_BUFFER_TYPE, "GL_FEEDBACK_BUFFER_TYPE");
#endif
#if defined(GL_SELECTION_BUFFER_POINTER)
defconsti(env, "GL-SELECTION-BUFFER-POINTER", (GLenum) GL_SELECTION_BUFFER_POINTER, "GL_SELECTION_BUFFER_POINTER");
#endif
#if defined(GL_SELECTION_BUFFER_SIZE)
defconsti(env, "GL-SELECTION-BUFFER-SIZE", (GLenum) GL_SELECTION_BUFFER_SIZE, "GL_SELECTION_BUFFER_SIZE");
#endif
#if defined(GL_TEXTURE_WIDTH)
defconsti(env, "GL-TEXTURE-WIDTH", (GLenum) GL_TEXTURE_WIDTH, "GL_TEXTURE_WIDTH");
#endif
#if defined(GL_TEXTURE_HEIGHT)
defconsti(env, "GL-TEXTURE-HEIGHT", (GLenum) GL_TEXTURE_HEIGHT, "GL_TEXTURE_HEIGHT");
#endif
#if defined(GL_TEXTURE_INTERNAL_FORMAT)
defconsti(env, "GL-TEXTURE-INTERNAL-FORMAT", (GLenum) GL_TEXTURE_INTERNAL_FORMAT, "GL_TEXTURE_INTERNAL_FORMAT");
#endif
#if defined(GL_TEXTURE_COMPONENTS)
defconsti(env, "GL-TEXTURE-COMPONENTS", (GLenum) GL_TEXTURE_COMPONENTS, "GL_TEXTURE_COMPONENTS");
#endif
#if defined(GL_TEXTURE_BORDER_COLOR)
defconsti(env, "GL-TEXTURE-BORDER-COLOR", (GLenum) GL_TEXTURE_BORDER_COLOR, "GL_TEXTURE_BORDER_COLOR");
#endif
#if defined(GL_TEXTURE_BORDER_COLOR_EXT)
defconsti(env, "GL-TEXTURE-BORDER-COLOR-EXT", (GLenum) GL_TEXTURE_BORDER_COLOR_EXT, "GL_TEXTURE_BORDER_COLOR_EXT");
#endif
#if defined(GL_TEXTURE_BORDER_COLOR_NV)
defconsti(env, "GL-TEXTURE-BORDER-COLOR-NV", (GLenum) GL_TEXTURE_BORDER_COLOR_NV, "GL_TEXTURE_BORDER_COLOR_NV");
#endif
#if defined(GL_TEXTURE_BORDER_COLOR_OES)
defconsti(env, "GL-TEXTURE-BORDER-COLOR-OES", (GLenum) GL_TEXTURE_BORDER_COLOR_OES, "GL_TEXTURE_BORDER_COLOR_OES");
#endif
#if defined(GL_TEXTURE_BORDER)
defconsti(env, "GL-TEXTURE-BORDER", (GLenum) GL_TEXTURE_BORDER, "GL_TEXTURE_BORDER");
#endif
#if defined(GL_TEXTURE_TARGET)
defconsti(env, "GL-TEXTURE-TARGET", (GLenum) GL_TEXTURE_TARGET, "GL_TEXTURE_TARGET");
#endif
#if defined(GL_DONT_CARE)
defconsti(env, "GL-DONT-CARE", (GLenum) GL_DONT_CARE, "GL_DONT_CARE");
#endif
#if defined(GL_FASTEST)
defconsti(env, "GL-FASTEST", (GLenum) GL_FASTEST, "GL_FASTEST");
#endif
#if defined(GL_NICEST)
defconsti(env, "GL-NICEST", (GLenum) GL_NICEST, "GL_NICEST");
#endif
#if defined(GL_AMBIENT)
defconsti(env, "GL-AMBIENT", (GLenum) GL_AMBIENT, "GL_AMBIENT");
#endif
#if defined(GL_DIFFUSE)
defconsti(env, "GL-DIFFUSE", (GLenum) GL_DIFFUSE, "GL_DIFFUSE");
#endif
#if defined(GL_SPECULAR)
defconsti(env, "GL-SPECULAR", (GLenum) GL_SPECULAR, "GL_SPECULAR");
#endif
#if defined(GL_POSITION)
defconsti(env, "GL-POSITION", (GLenum) GL_POSITION, "GL_POSITION");
#endif
#if defined(GL_SPOT_DIRECTION)
defconsti(env, "GL-SPOT-DIRECTION", (GLenum) GL_SPOT_DIRECTION, "GL_SPOT_DIRECTION");
#endif
#if defined(GL_SPOT_EXPONENT)
defconsti(env, "GL-SPOT-EXPONENT", (GLenum) GL_SPOT_EXPONENT, "GL_SPOT_EXPONENT");
#endif
#if defined(GL_SPOT_CUTOFF)
defconsti(env, "GL-SPOT-CUTOFF", (GLenum) GL_SPOT_CUTOFF, "GL_SPOT_CUTOFF");
#endif
#if defined(GL_CONSTANT_ATTENUATION)
defconsti(env, "GL-CONSTANT-ATTENUATION", (GLenum) GL_CONSTANT_ATTENUATION, "GL_CONSTANT_ATTENUATION");
#endif
#if defined(GL_LINEAR_ATTENUATION)
defconsti(env, "GL-LINEAR-ATTENUATION", (GLenum) GL_LINEAR_ATTENUATION, "GL_LINEAR_ATTENUATION");
#endif
#if defined(GL_QUADRATIC_ATTENUATION)
defconsti(env, "GL-QUADRATIC-ATTENUATION", (GLenum) GL_QUADRATIC_ATTENUATION, "GL_QUADRATIC_ATTENUATION");
#endif
#if defined(GL_COMPILE)
defconsti(env, "GL-COMPILE", (GLenum) GL_COMPILE, "GL_COMPILE");
#endif
#if defined(GL_COMPILE_AND_EXECUTE)
defconsti(env, "GL-COMPILE-AND-EXECUTE", (GLenum) GL_COMPILE_AND_EXECUTE, "GL_COMPILE_AND_EXECUTE");
#endif
#if defined(GL_BYTE)
defconsti(env, "GL-BYTE", (GLenum) GL_BYTE, "GL_BYTE");
#endif
#if defined(GL_UNSIGNED_BYTE)
defconsti(env, "GL-UNSIGNED-BYTE", (GLenum) GL_UNSIGNED_BYTE, "GL_UNSIGNED_BYTE");
#endif
#if defined(GL_SHORT)
defconsti(env, "GL-SHORT", (GLenum) GL_SHORT, "GL_SHORT");
#endif
#if defined(GL_UNSIGNED_SHORT)
defconsti(env, "GL-UNSIGNED-SHORT", (GLenum) GL_UNSIGNED_SHORT, "GL_UNSIGNED_SHORT");
#endif
#if defined(GL_INT)
defconsti(env, "GL-INT", (GLenum) GL_INT, "GL_INT");
#endif
#if defined(GL_UNSIGNED_INT)
defconsti(env, "GL-UNSIGNED-INT", (GLenum) GL_UNSIGNED_INT, "GL_UNSIGNED_INT");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_2_BYTES)
defconsti(env, "GL-2-BYTES", (GLenum) GL_2_BYTES, "GL_2_BYTES");
#endif
#if defined(GL_2_BYTES_NV)
defconsti(env, "GL-2-BYTES-NV", (GLenum) GL_2_BYTES_NV, "GL_2_BYTES_NV");
#endif
#if defined(GL_3_BYTES)
defconsti(env, "GL-3-BYTES", (GLenum) GL_3_BYTES, "GL_3_BYTES");
#endif
#if defined(GL_3_BYTES_NV)
defconsti(env, "GL-3-BYTES-NV", (GLenum) GL_3_BYTES_NV, "GL_3_BYTES_NV");
#endif
#if defined(GL_4_BYTES)
defconsti(env, "GL-4-BYTES", (GLenum) GL_4_BYTES, "GL_4_BYTES");
#endif
#if defined(GL_4_BYTES_NV)
defconsti(env, "GL-4-BYTES-NV", (GLenum) GL_4_BYTES_NV, "GL_4_BYTES_NV");
#endif
#if defined(GL_DOUBLE)
defconsti(env, "GL-DOUBLE", (GLenum) GL_DOUBLE, "GL_DOUBLE");
#endif
#if defined(GL_DOUBLE_EXT)
defconsti(env, "GL-DOUBLE-EXT", (GLenum) GL_DOUBLE_EXT, "GL_DOUBLE_EXT");
#endif
#if defined(GL_HALF_FLOAT)
defconsti(env, "GL-HALF-FLOAT", (GLenum) GL_HALF_FLOAT, "GL_HALF_FLOAT");
#endif
#if defined(GL_HALF_FLOAT_ARB)
defconsti(env, "GL-HALF-FLOAT-ARB", (GLenum) GL_HALF_FLOAT_ARB, "GL_HALF_FLOAT_ARB");
#endif
#if defined(GL_HALF_FLOAT_NV)
defconsti(env, "GL-HALF-FLOAT-NV", (GLenum) GL_HALF_FLOAT_NV, "GL_HALF_FLOAT_NV");
#endif
#if defined(GL_HALF_APPLE)
defconsti(env, "GL-HALF-APPLE", (GLenum) GL_HALF_APPLE, "GL_HALF_APPLE");
#endif
#if defined(GL_FIXED)
defconsti(env, "GL-FIXED", (GLenum) GL_FIXED, "GL_FIXED");
#endif
#if defined(GL_FIXED_OES)
defconsti(env, "GL-FIXED-OES", (GLenum) GL_FIXED_OES, "GL_FIXED_OES");
#endif
#if defined(GL_INT64_ARB)
defconsti(env, "GL-INT64-ARB", (GLenum) GL_INT64_ARB, "GL_INT64_ARB");
#endif
#if defined(GL_INT64_NV)
defconsti(env, "GL-INT64-NV", (GLenum) GL_INT64_NV, "GL_INT64_NV");
#endif
#if defined(GL_UNSIGNED_INT64_ARB)
defconsti(env, "GL-UNSIGNED-INT64-ARB", (GLenum) GL_UNSIGNED_INT64_ARB, "GL_UNSIGNED_INT64_ARB");
#endif
#if defined(GL_UNSIGNED_INT64_NV)
defconsti(env, "GL-UNSIGNED-INT64-NV", (GLenum) GL_UNSIGNED_INT64_NV, "GL_UNSIGNED_INT64_NV");
#endif
#if defined(GL_CLEAR)
defconsti(env, "GL-CLEAR", (GLenum) GL_CLEAR, "GL_CLEAR");
#endif
#if defined(GL_AND)
defconsti(env, "GL-AND", (GLenum) GL_AND, "GL_AND");
#endif
#if defined(GL_AND_REVERSE)
defconsti(env, "GL-AND-REVERSE", (GLenum) GL_AND_REVERSE, "GL_AND_REVERSE");
#endif
#if defined(GL_COPY)
defconsti(env, "GL-COPY", (GLenum) GL_COPY, "GL_COPY");
#endif
#if defined(GL_AND_INVERTED)
defconsti(env, "GL-AND-INVERTED", (GLenum) GL_AND_INVERTED, "GL_AND_INVERTED");
#endif
#if defined(GL_NOOP)
defconsti(env, "GL-NOOP", (GLenum) GL_NOOP, "GL_NOOP");
#endif
#if defined(GL_XOR)
defconsti(env, "GL-XOR", (GLenum) GL_XOR, "GL_XOR");
#endif
#if defined(GL_XOR_NV)
defconsti(env, "GL-XOR-NV", (GLenum) GL_XOR_NV, "GL_XOR_NV");
#endif
#if defined(GL_OR)
defconsti(env, "GL-OR", (GLenum) GL_OR, "GL_OR");
#endif
#if defined(GL_NOR)
defconsti(env, "GL-NOR", (GLenum) GL_NOR, "GL_NOR");
#endif
#if defined(GL_EQUIV)
defconsti(env, "GL-EQUIV", (GLenum) GL_EQUIV, "GL_EQUIV");
#endif
#if defined(GL_INVERT)
defconsti(env, "GL-INVERT", (GLenum) GL_INVERT, "GL_INVERT");
#endif
#if defined(GL_OR_REVERSE)
defconsti(env, "GL-OR-REVERSE", (GLenum) GL_OR_REVERSE, "GL_OR_REVERSE");
#endif
#if defined(GL_COPY_INVERTED)
defconsti(env, "GL-COPY-INVERTED", (GLenum) GL_COPY_INVERTED, "GL_COPY_INVERTED");
#endif
#if defined(GL_OR_INVERTED)
defconsti(env, "GL-OR-INVERTED", (GLenum) GL_OR_INVERTED, "GL_OR_INVERTED");
#endif
#if defined(GL_NAND)
defconsti(env, "GL-NAND", (GLenum) GL_NAND, "GL_NAND");
#endif
#if defined(GL_SET)
defconsti(env, "GL-SET", (GLenum) GL_SET, "GL_SET");
#endif
#if defined(GL_EMISSION)
defconsti(env, "GL-EMISSION", (GLenum) GL_EMISSION, "GL_EMISSION");
#endif
#if defined(GL_SHININESS)
defconsti(env, "GL-SHININESS", (GLenum) GL_SHININESS, "GL_SHININESS");
#endif
#if defined(GL_AMBIENT_AND_DIFFUSE)
defconsti(env, "GL-AMBIENT-AND-DIFFUSE", (GLenum) GL_AMBIENT_AND_DIFFUSE, "GL_AMBIENT_AND_DIFFUSE");
#endif
#if defined(GL_COLOR_INDEXES)
defconsti(env, "GL-COLOR-INDEXES", (GLenum) GL_COLOR_INDEXES, "GL_COLOR_INDEXES");
#endif
#if defined(GL_MODELVIEW)
defconsti(env, "GL-MODELVIEW", (GLenum) GL_MODELVIEW, "GL_MODELVIEW");
#endif
#if defined(GL_MODELVIEW0_ARB)
defconsti(env, "GL-MODELVIEW0-ARB", (GLenum) GL_MODELVIEW0_ARB, "GL_MODELVIEW0_ARB");
#endif
#if defined(GL_MODELVIEW0_EXT)
defconsti(env, "GL-MODELVIEW0-EXT", (GLenum) GL_MODELVIEW0_EXT, "GL_MODELVIEW0_EXT");
#endif
#if defined(GL_PATH_MODELVIEW_NV)
defconsti(env, "GL-PATH-MODELVIEW-NV", (GLenum) GL_PATH_MODELVIEW_NV, "GL_PATH_MODELVIEW_NV");
#endif
#if defined(GL_PROJECTION)
defconsti(env, "GL-PROJECTION", (GLenum) GL_PROJECTION, "GL_PROJECTION");
#endif
#if defined(GL_PATH_PROJECTION_NV)
defconsti(env, "GL-PATH-PROJECTION-NV", (GLenum) GL_PATH_PROJECTION_NV, "GL_PATH_PROJECTION_NV");
#endif
#if defined(GL_TEXTURE)
defconsti(env, "GL-TEXTURE", (GLenum) GL_TEXTURE, "GL_TEXTURE");
#endif
#if defined(GL_COLOR)
defconsti(env, "GL-COLOR", (GLenum) GL_COLOR, "GL_COLOR");
#endif
#if defined(GL_COLOR_EXT)
defconsti(env, "GL-COLOR-EXT", (GLenum) GL_COLOR_EXT, "GL_COLOR_EXT");
#endif
#if defined(GL_DEPTH)
defconsti(env, "GL-DEPTH", (GLenum) GL_DEPTH, "GL_DEPTH");
#endif
#if defined(GL_DEPTH_EXT)
defconsti(env, "GL-DEPTH-EXT", (GLenum) GL_DEPTH_EXT, "GL_DEPTH_EXT");
#endif
#if defined(GL_STENCIL)
defconsti(env, "GL-STENCIL", (GLenum) GL_STENCIL, "GL_STENCIL");
#endif
#if defined(GL_STENCIL_EXT)
defconsti(env, "GL-STENCIL-EXT", (GLenum) GL_STENCIL_EXT, "GL_STENCIL_EXT");
#endif
#if defined(GL_COLOR_INDEX)
defconsti(env, "GL-COLOR-INDEX", (GLenum) GL_COLOR_INDEX, "GL_COLOR_INDEX");
#endif
#if defined(GL_STENCIL_INDEX)
defconsti(env, "GL-STENCIL-INDEX", (GLenum) GL_STENCIL_INDEX, "GL_STENCIL_INDEX");
#endif
#if defined(GL_STENCIL_INDEX_OES)
defconsti(env, "GL-STENCIL-INDEX-OES", (GLenum) GL_STENCIL_INDEX_OES, "GL_STENCIL_INDEX_OES");
#endif
#if defined(GL_DEPTH_COMPONENT)
defconsti(env, "GL-DEPTH-COMPONENT", (GLenum) GL_DEPTH_COMPONENT, "GL_DEPTH_COMPONENT");
#endif
#if defined(GL_RED)
defconsti(env, "GL-RED", (GLenum) GL_RED, "GL_RED");
#endif
#if defined(GL_RED_EXT)
defconsti(env, "GL-RED-EXT", (GLenum) GL_RED_EXT, "GL_RED_EXT");
#endif
#if defined(GL_RED_NV)
defconsti(env, "GL-RED-NV", (GLenum) GL_RED_NV, "GL_RED_NV");
#endif
#if defined(GL_GREEN)
defconsti(env, "GL-GREEN", (GLenum) GL_GREEN, "GL_GREEN");
#endif
#if defined(GL_GREEN_NV)
defconsti(env, "GL-GREEN-NV", (GLenum) GL_GREEN_NV, "GL_GREEN_NV");
#endif
#if defined(GL_BLUE)
defconsti(env, "GL-BLUE", (GLenum) GL_BLUE, "GL_BLUE");
#endif
#if defined(GL_BLUE_NV)
defconsti(env, "GL-BLUE-NV", (GLenum) GL_BLUE_NV, "GL_BLUE_NV");
#endif
#if defined(GL_ALPHA)
defconsti(env, "GL-ALPHA", (GLenum) GL_ALPHA, "GL_ALPHA");
#endif
#if defined(GL_RGB)
defconsti(env, "GL-RGB", (GLenum) GL_RGB, "GL_RGB");
#endif
#if defined(GL_RGBA)
defconsti(env, "GL-RGBA", (GLenum) GL_RGBA, "GL_RGBA");
#endif
#if defined(GL_LUMINANCE)
defconsti(env, "GL-LUMINANCE", (GLenum) GL_LUMINANCE, "GL_LUMINANCE");
#endif
#if defined(GL_LUMINANCE_ALPHA)
defconsti(env, "GL-LUMINANCE-ALPHA", (GLenum) GL_LUMINANCE_ALPHA, "GL_LUMINANCE_ALPHA");
#endif
#if defined(GL_BITMAP)
defconsti(env, "GL-BITMAP", (GLenum) GL_BITMAP, "GL_BITMAP");
#endif
#if defined(GL_POINT)
defconsti(env, "GL-POINT", (GLenum) GL_POINT, "GL_POINT");
#endif
#if defined(GL_POINT_NV)
defconsti(env, "GL-POINT-NV", (GLenum) GL_POINT_NV, "GL_POINT_NV");
#endif
#if defined(GL_LINE)
defconsti(env, "GL-LINE", (GLenum) GL_LINE, "GL_LINE");
#endif
#if defined(GL_LINE_NV)
defconsti(env, "GL-LINE-NV", (GLenum) GL_LINE_NV, "GL_LINE_NV");
#endif
#if defined(GL_FILL)
defconsti(env, "GL-FILL", (GLenum) GL_FILL, "GL_FILL");
#endif
#if defined(GL_FILL_NV)
defconsti(env, "GL-FILL-NV", (GLenum) GL_FILL_NV, "GL_FILL_NV");
#endif
#if defined(GL_RENDER)
defconsti(env, "GL-RENDER", (GLenum) GL_RENDER, "GL_RENDER");
#endif
#if defined(GL_FEEDBACK)
defconsti(env, "GL-FEEDBACK", (GLenum) GL_FEEDBACK, "GL_FEEDBACK");
#endif
#if defined(GL_SELECT)
defconsti(env, "GL-SELECT", (GLenum) GL_SELECT, "GL_SELECT");
#endif
#if defined(GL_FLAT)
defconsti(env, "GL-FLAT", (GLenum) GL_FLAT, "GL_FLAT");
#endif
#if defined(GL_SMOOTH)
defconsti(env, "GL-SMOOTH", (GLenum) GL_SMOOTH, "GL_SMOOTH");
#endif
#if defined(GL_KEEP)
defconsti(env, "GL-KEEP", (GLenum) GL_KEEP, "GL_KEEP");
#endif
#if defined(GL_REPLACE)
defconsti(env, "GL-REPLACE", (GLenum) GL_REPLACE, "GL_REPLACE");
#endif
#if defined(GL_INCR)
defconsti(env, "GL-INCR", (GLenum) GL_INCR, "GL_INCR");
#endif
#if defined(GL_DECR)
defconsti(env, "GL-DECR", (GLenum) GL_DECR, "GL_DECR");
#endif
#if defined(GL_VENDOR)
defconsti(env, "GL-VENDOR", (GLenum) GL_VENDOR, "GL_VENDOR");
#endif
#if defined(GL_RENDERER)
defconsti(env, "GL-RENDERER", (GLenum) GL_RENDERER, "GL_RENDERER");
#endif
#if defined(GL_VERSION)
defconsti(env, "GL-VERSION", (GLenum) GL_VERSION, "GL_VERSION");
#endif
#if defined(GL_EXTENSIONS)
defconsti(env, "GL-EXTENSIONS", (GLenum) GL_EXTENSIONS, "GL_EXTENSIONS");
#endif
#if defined(GL_S)
defconsti(env, "GL-S", (GLenum) GL_S, "GL_S");
#endif
#if defined(GL_T)
defconsti(env, "GL-T", (GLenum) GL_T, "GL_T");
#endif
#if defined(GL_R)
defconsti(env, "GL-R", (GLenum) GL_R, "GL_R");
#endif
#if defined(GL_Q)
defconsti(env, "GL-Q", (GLenum) GL_Q, "GL_Q");
#endif
#if defined(GL_MODULATE)
defconsti(env, "GL-MODULATE", (GLenum) GL_MODULATE, "GL_MODULATE");
#endif
#if defined(GL_DECAL)
defconsti(env, "GL-DECAL", (GLenum) GL_DECAL, "GL_DECAL");
#endif
#if defined(GL_TEXTURE_ENV_MODE)
defconsti(env, "GL-TEXTURE-ENV-MODE", (GLenum) GL_TEXTURE_ENV_MODE, "GL_TEXTURE_ENV_MODE");
#endif
#if defined(GL_TEXTURE_ENV_COLOR)
defconsti(env, "GL-TEXTURE-ENV-COLOR", (GLenum) GL_TEXTURE_ENV_COLOR, "GL_TEXTURE_ENV_COLOR");
#endif
#if defined(GL_TEXTURE_ENV)
defconsti(env, "GL-TEXTURE-ENV", (GLenum) GL_TEXTURE_ENV, "GL_TEXTURE_ENV");
#endif
#if defined(GL_EYE_LINEAR)
defconsti(env, "GL-EYE-LINEAR", (GLenum) GL_EYE_LINEAR, "GL_EYE_LINEAR");
#endif
#if defined(GL_EYE_LINEAR_NV)
defconsti(env, "GL-EYE-LINEAR-NV", (GLenum) GL_EYE_LINEAR_NV, "GL_EYE_LINEAR_NV");
#endif
#if defined(GL_OBJECT_LINEAR)
defconsti(env, "GL-OBJECT-LINEAR", (GLenum) GL_OBJECT_LINEAR, "GL_OBJECT_LINEAR");
#endif
#if defined(GL_OBJECT_LINEAR_NV)
defconsti(env, "GL-OBJECT-LINEAR-NV", (GLenum) GL_OBJECT_LINEAR_NV, "GL_OBJECT_LINEAR_NV");
#endif
#if defined(GL_SPHERE_MAP)
defconsti(env, "GL-SPHERE-MAP", (GLenum) GL_SPHERE_MAP, "GL_SPHERE_MAP");
#endif
#if defined(GL_TEXTURE_GEN_MODE)
defconsti(env, "GL-TEXTURE-GEN-MODE", (GLenum) GL_TEXTURE_GEN_MODE, "GL_TEXTURE_GEN_MODE");
#endif
#if defined(GL_TEXTURE_GEN_MODE_OES)
defconsti(env, "GL-TEXTURE-GEN-MODE-OES", (GLenum) GL_TEXTURE_GEN_MODE_OES, "GL_TEXTURE_GEN_MODE_OES");
#endif
#if defined(GL_OBJECT_PLANE)
defconsti(env, "GL-OBJECT-PLANE", (GLenum) GL_OBJECT_PLANE, "GL_OBJECT_PLANE");
#endif
#if defined(GL_EYE_PLANE)
defconsti(env, "GL-EYE-PLANE", (GLenum) GL_EYE_PLANE, "GL_EYE_PLANE");
#endif
#if defined(GL_NEAREST)
defconsti(env, "GL-NEAREST", (GLenum) GL_NEAREST, "GL_NEAREST");
#endif
#if defined(GL_LINEAR)
defconsti(env, "GL-LINEAR", (GLenum) GL_LINEAR, "GL_LINEAR");
#endif
#if defined(GL_NEAREST_MIPMAP_NEAREST)
defconsti(env, "GL-NEAREST-MIPMAP-NEAREST", (GLenum) GL_NEAREST_MIPMAP_NEAREST, "GL_NEAREST_MIPMAP_NEAREST");
#endif
#if defined(GL_LINEAR_MIPMAP_NEAREST)
defconsti(env, "GL-LINEAR-MIPMAP-NEAREST", (GLenum) GL_LINEAR_MIPMAP_NEAREST, "GL_LINEAR_MIPMAP_NEAREST");
#endif
#if defined(GL_NEAREST_MIPMAP_LINEAR)
defconsti(env, "GL-NEAREST-MIPMAP-LINEAR", (GLenum) GL_NEAREST_MIPMAP_LINEAR, "GL_NEAREST_MIPMAP_LINEAR");
#endif
#if defined(GL_LINEAR_MIPMAP_LINEAR)
defconsti(env, "GL-LINEAR-MIPMAP-LINEAR", (GLenum) GL_LINEAR_MIPMAP_LINEAR, "GL_LINEAR_MIPMAP_LINEAR");
#endif
#if defined(GL_TEXTURE_MAG_FILTER)
defconsti(env, "GL-TEXTURE-MAG-FILTER", (GLenum) GL_TEXTURE_MAG_FILTER, "GL_TEXTURE_MAG_FILTER");
#endif
#if defined(GL_TEXTURE_MIN_FILTER)
defconsti(env, "GL-TEXTURE-MIN-FILTER", (GLenum) GL_TEXTURE_MIN_FILTER, "GL_TEXTURE_MIN_FILTER");
#endif
#if defined(GL_TEXTURE_WRAP_S)
defconsti(env, "GL-TEXTURE-WRAP-S", (GLenum) GL_TEXTURE_WRAP_S, "GL_TEXTURE_WRAP_S");
#endif
#if defined(GL_TEXTURE_WRAP_T)
defconsti(env, "GL-TEXTURE-WRAP-T", (GLenum) GL_TEXTURE_WRAP_T, "GL_TEXTURE_WRAP_T");
#endif
#if defined(GL_CLAMP)
defconsti(env, "GL-CLAMP", (GLenum) GL_CLAMP, "GL_CLAMP");
#endif
#if defined(GL_REPEAT)
defconsti(env, "GL-REPEAT", (GLenum) GL_REPEAT, "GL_REPEAT");
#endif
#if defined(GL_POLYGON_OFFSET_UNITS)
defconsti(env, "GL-POLYGON-OFFSET-UNITS", (GLenum) GL_POLYGON_OFFSET_UNITS, "GL_POLYGON_OFFSET_UNITS");
#endif
#if defined(GL_POLYGON_OFFSET_POINT)
defconsti(env, "GL-POLYGON-OFFSET-POINT", (GLenum) GL_POLYGON_OFFSET_POINT, "GL_POLYGON_OFFSET_POINT");
#endif
#if defined(GL_POLYGON_OFFSET_POINT_NV)
defconsti(env, "GL-POLYGON-OFFSET-POINT-NV", (GLenum) GL_POLYGON_OFFSET_POINT_NV, "GL_POLYGON_OFFSET_POINT_NV");
#endif
#if defined(GL_POLYGON_OFFSET_LINE)
defconsti(env, "GL-POLYGON-OFFSET-LINE", (GLenum) GL_POLYGON_OFFSET_LINE, "GL_POLYGON_OFFSET_LINE");
#endif
#if defined(GL_POLYGON_OFFSET_LINE_NV)
defconsti(env, "GL-POLYGON-OFFSET-LINE-NV", (GLenum) GL_POLYGON_OFFSET_LINE_NV, "GL_POLYGON_OFFSET_LINE_NV");
#endif
#if defined(GL_R3_G3_B2)
defconsti(env, "GL-R3-G3-B2", (GLenum) GL_R3_G3_B2, "GL_R3_G3_B2");
#endif
#if defined(GL_V2F)
defconsti(env, "GL-V2F", (GLenum) GL_V2F, "GL_V2F");
#endif
#if defined(GL_V3F)
defconsti(env, "GL-V3F", (GLenum) GL_V3F, "GL_V3F");
#endif
#if defined(GL_C4UB_V2F)
defconsti(env, "GL-C4UB-V2F", (GLenum) GL_C4UB_V2F, "GL_C4UB_V2F");
#endif
#if defined(GL_C4UB_V3F)
defconsti(env, "GL-C4UB-V3F", (GLenum) GL_C4UB_V3F, "GL_C4UB_V3F");
#endif
#if defined(GL_C3F_V3F)
defconsti(env, "GL-C3F-V3F", (GLenum) GL_C3F_V3F, "GL_C3F_V3F");
#endif
#if defined(GL_N3F_V3F)
defconsti(env, "GL-N3F-V3F", (GLenum) GL_N3F_V3F, "GL_N3F_V3F");
#endif
#if defined(GL_C4F_N3F_V3F)
defconsti(env, "GL-C4F-N3F-V3F", (GLenum) GL_C4F_N3F_V3F, "GL_C4F_N3F_V3F");
#endif
#if defined(GL_T2F_V3F)
defconsti(env, "GL-T2F-V3F", (GLenum) GL_T2F_V3F, "GL_T2F_V3F");
#endif
#if defined(GL_T4F_V4F)
defconsti(env, "GL-T4F-V4F", (GLenum) GL_T4F_V4F, "GL_T4F_V4F");
#endif
#if defined(GL_T2F_C4UB_V3F)
defconsti(env, "GL-T2F-C4UB-V3F", (GLenum) GL_T2F_C4UB_V3F, "GL_T2F_C4UB_V3F");
#endif
#if defined(GL_T2F_C3F_V3F)
defconsti(env, "GL-T2F-C3F-V3F", (GLenum) GL_T2F_C3F_V3F, "GL_T2F_C3F_V3F");
#endif
#if defined(GL_T2F_N3F_V3F)
defconsti(env, "GL-T2F-N3F-V3F", (GLenum) GL_T2F_N3F_V3F, "GL_T2F_N3F_V3F");
#endif
#if defined(GL_T2F_C4F_N3F_V3F)
defconsti(env, "GL-T2F-C4F-N3F-V3F", (GLenum) GL_T2F_C4F_N3F_V3F, "GL_T2F_C4F_N3F_V3F");
#endif
#if defined(GL_T4F_C4F_N3F_V4F)
defconsti(env, "GL-T4F-C4F-N3F-V4F", (GLenum) GL_T4F_C4F_N3F_V4F, "GL_T4F_C4F_N3F_V4F");
#endif
#if defined(GL_CLIP_PLANE0)
defconsti(env, "GL-CLIP-PLANE0", (GLenum) GL_CLIP_PLANE0, "GL_CLIP_PLANE0");
#endif
#if defined(GL_CLIP_PLANE0_IMG)
defconsti(env, "GL-CLIP-PLANE0-IMG", (GLenum) GL_CLIP_PLANE0_IMG, "GL_CLIP_PLANE0_IMG");
#endif
#if defined(GL_CLIP_DISTANCE0)
defconsti(env, "GL-CLIP-DISTANCE0", (GLenum) GL_CLIP_DISTANCE0, "GL_CLIP_DISTANCE0");
#endif
#if defined(GL_CLIP_DISTANCE0_EXT)
defconsti(env, "GL-CLIP-DISTANCE0-EXT", (GLenum) GL_CLIP_DISTANCE0_EXT, "GL_CLIP_DISTANCE0_EXT");
#endif
#if defined(GL_CLIP_DISTANCE0_APPLE)
defconsti(env, "GL-CLIP-DISTANCE0-APPLE", (GLenum) GL_CLIP_DISTANCE0_APPLE, "GL_CLIP_DISTANCE0_APPLE");
#endif
#if defined(GL_CLIP_PLANE1)
defconsti(env, "GL-CLIP-PLANE1", (GLenum) GL_CLIP_PLANE1, "GL_CLIP_PLANE1");
#endif
#if defined(GL_CLIP_PLANE1_IMG)
defconsti(env, "GL-CLIP-PLANE1-IMG", (GLenum) GL_CLIP_PLANE1_IMG, "GL_CLIP_PLANE1_IMG");
#endif
#if defined(GL_CLIP_DISTANCE1)
defconsti(env, "GL-CLIP-DISTANCE1", (GLenum) GL_CLIP_DISTANCE1, "GL_CLIP_DISTANCE1");
#endif
#if defined(GL_CLIP_DISTANCE1_EXT)
defconsti(env, "GL-CLIP-DISTANCE1-EXT", (GLenum) GL_CLIP_DISTANCE1_EXT, "GL_CLIP_DISTANCE1_EXT");
#endif
#if defined(GL_CLIP_DISTANCE1_APPLE)
defconsti(env, "GL-CLIP-DISTANCE1-APPLE", (GLenum) GL_CLIP_DISTANCE1_APPLE, "GL_CLIP_DISTANCE1_APPLE");
#endif
#if defined(GL_CLIP_PLANE2)
defconsti(env, "GL-CLIP-PLANE2", (GLenum) GL_CLIP_PLANE2, "GL_CLIP_PLANE2");
#endif
#if defined(GL_CLIP_PLANE2_IMG)
defconsti(env, "GL-CLIP-PLANE2-IMG", (GLenum) GL_CLIP_PLANE2_IMG, "GL_CLIP_PLANE2_IMG");
#endif
#if defined(GL_CLIP_DISTANCE2)
defconsti(env, "GL-CLIP-DISTANCE2", (GLenum) GL_CLIP_DISTANCE2, "GL_CLIP_DISTANCE2");
#endif
#if defined(GL_CLIP_DISTANCE2_EXT)
defconsti(env, "GL-CLIP-DISTANCE2-EXT", (GLenum) GL_CLIP_DISTANCE2_EXT, "GL_CLIP_DISTANCE2_EXT");
#endif
#if defined(GL_CLIP_DISTANCE2_APPLE)
defconsti(env, "GL-CLIP-DISTANCE2-APPLE", (GLenum) GL_CLIP_DISTANCE2_APPLE, "GL_CLIP_DISTANCE2_APPLE");
#endif
#if defined(GL_CLIP_PLANE3)
defconsti(env, "GL-CLIP-PLANE3", (GLenum) GL_CLIP_PLANE3, "GL_CLIP_PLANE3");
#endif
#if defined(GL_CLIP_PLANE3_IMG)
defconsti(env, "GL-CLIP-PLANE3-IMG", (GLenum) GL_CLIP_PLANE3_IMG, "GL_CLIP_PLANE3_IMG");
#endif
#if defined(GL_CLIP_DISTANCE3)
defconsti(env, "GL-CLIP-DISTANCE3", (GLenum) GL_CLIP_DISTANCE3, "GL_CLIP_DISTANCE3");
#endif
#if defined(GL_CLIP_DISTANCE3_EXT)
defconsti(env, "GL-CLIP-DISTANCE3-EXT", (GLenum) GL_CLIP_DISTANCE3_EXT, "GL_CLIP_DISTANCE3_EXT");
#endif
#if defined(GL_CLIP_DISTANCE3_APPLE)
defconsti(env, "GL-CLIP-DISTANCE3-APPLE", (GLenum) GL_CLIP_DISTANCE3_APPLE, "GL_CLIP_DISTANCE3_APPLE");
#endif
#if defined(GL_CLIP_PLANE4)
defconsti(env, "GL-CLIP-PLANE4", (GLenum) GL_CLIP_PLANE4, "GL_CLIP_PLANE4");
#endif
#if defined(GL_CLIP_PLANE4_IMG)
defconsti(env, "GL-CLIP-PLANE4-IMG", (GLenum) GL_CLIP_PLANE4_IMG, "GL_CLIP_PLANE4_IMG");
#endif
#if defined(GL_CLIP_DISTANCE4)
defconsti(env, "GL-CLIP-DISTANCE4", (GLenum) GL_CLIP_DISTANCE4, "GL_CLIP_DISTANCE4");
#endif
#if defined(GL_CLIP_DISTANCE4_EXT)
defconsti(env, "GL-CLIP-DISTANCE4-EXT", (GLenum) GL_CLIP_DISTANCE4_EXT, "GL_CLIP_DISTANCE4_EXT");
#endif
#if defined(GL_CLIP_DISTANCE4_APPLE)
defconsti(env, "GL-CLIP-DISTANCE4-APPLE", (GLenum) GL_CLIP_DISTANCE4_APPLE, "GL_CLIP_DISTANCE4_APPLE");
#endif
#if defined(GL_CLIP_PLANE5)
defconsti(env, "GL-CLIP-PLANE5", (GLenum) GL_CLIP_PLANE5, "GL_CLIP_PLANE5");
#endif
#if defined(GL_CLIP_PLANE5_IMG)
defconsti(env, "GL-CLIP-PLANE5-IMG", (GLenum) GL_CLIP_PLANE5_IMG, "GL_CLIP_PLANE5_IMG");
#endif
#if defined(GL_CLIP_DISTANCE5)
defconsti(env, "GL-CLIP-DISTANCE5", (GLenum) GL_CLIP_DISTANCE5, "GL_CLIP_DISTANCE5");
#endif
#if defined(GL_CLIP_DISTANCE5_EXT)
defconsti(env, "GL-CLIP-DISTANCE5-EXT", (GLenum) GL_CLIP_DISTANCE5_EXT, "GL_CLIP_DISTANCE5_EXT");
#endif
#if defined(GL_CLIP_DISTANCE5_APPLE)
defconsti(env, "GL-CLIP-DISTANCE5-APPLE", (GLenum) GL_CLIP_DISTANCE5_APPLE, "GL_CLIP_DISTANCE5_APPLE");
#endif
#if defined(GL_CLIP_DISTANCE6)
defconsti(env, "GL-CLIP-DISTANCE6", (GLenum) GL_CLIP_DISTANCE6, "GL_CLIP_DISTANCE6");
#endif
#if defined(GL_CLIP_DISTANCE6_EXT)
defconsti(env, "GL-CLIP-DISTANCE6-EXT", (GLenum) GL_CLIP_DISTANCE6_EXT, "GL_CLIP_DISTANCE6_EXT");
#endif
#if defined(GL_CLIP_DISTANCE6_APPLE)
defconsti(env, "GL-CLIP-DISTANCE6-APPLE", (GLenum) GL_CLIP_DISTANCE6_APPLE, "GL_CLIP_DISTANCE6_APPLE");
#endif
#if defined(GL_CLIP_DISTANCE7)
defconsti(env, "GL-CLIP-DISTANCE7", (GLenum) GL_CLIP_DISTANCE7, "GL_CLIP_DISTANCE7");
#endif
#if defined(GL_CLIP_DISTANCE7_EXT)
defconsti(env, "GL-CLIP-DISTANCE7-EXT", (GLenum) GL_CLIP_DISTANCE7_EXT, "GL_CLIP_DISTANCE7_EXT");
#endif
#if defined(GL_CLIP_DISTANCE7_APPLE)
defconsti(env, "GL-CLIP-DISTANCE7-APPLE", (GLenum) GL_CLIP_DISTANCE7_APPLE, "GL_CLIP_DISTANCE7_APPLE");
#endif
#if defined(GL_LIGHT0)
defconsti(env, "GL-LIGHT0", (GLenum) GL_LIGHT0, "GL_LIGHT0");
#endif
#if defined(GL_LIGHT1)
defconsti(env, "GL-LIGHT1", (GLenum) GL_LIGHT1, "GL_LIGHT1");
#endif
#if defined(GL_LIGHT2)
defconsti(env, "GL-LIGHT2", (GLenum) GL_LIGHT2, "GL_LIGHT2");
#endif
#if defined(GL_LIGHT3)
defconsti(env, "GL-LIGHT3", (GLenum) GL_LIGHT3, "GL_LIGHT3");
#endif
#if defined(GL_LIGHT4)
defconsti(env, "GL-LIGHT4", (GLenum) GL_LIGHT4, "GL_LIGHT4");
#endif
#if defined(GL_LIGHT5)
defconsti(env, "GL-LIGHT5", (GLenum) GL_LIGHT5, "GL_LIGHT5");
#endif
#if defined(GL_LIGHT6)
defconsti(env, "GL-LIGHT6", (GLenum) GL_LIGHT6, "GL_LIGHT6");
#endif
#if defined(GL_LIGHT7)
defconsti(env, "GL-LIGHT7", (GLenum) GL_LIGHT7, "GL_LIGHT7");
#endif
#if defined(GL_ABGR_EXT)
defconsti(env, "GL-ABGR-EXT", (GLenum) GL_ABGR_EXT, "GL_ABGR_EXT");
#endif
#if defined(GL_CONSTANT_COLOR)
defconsti(env, "GL-CONSTANT-COLOR", (GLenum) GL_CONSTANT_COLOR, "GL_CONSTANT_COLOR");
#endif
#if defined(GL_CONSTANT_COLOR_EXT)
defconsti(env, "GL-CONSTANT-COLOR-EXT", (GLenum) GL_CONSTANT_COLOR_EXT, "GL_CONSTANT_COLOR_EXT");
#endif
#if defined(GL_ONE_MINUS_CONSTANT_COLOR)
defconsti(env, "GL-ONE-MINUS-CONSTANT-COLOR", (GLenum) GL_ONE_MINUS_CONSTANT_COLOR, "GL_ONE_MINUS_CONSTANT_COLOR");
#endif
#if defined(GL_ONE_MINUS_CONSTANT_COLOR_EXT)
defconsti(env, "GL-ONE-MINUS-CONSTANT-COLOR-EXT", (GLenum) GL_ONE_MINUS_CONSTANT_COLOR_EXT, "GL_ONE_MINUS_CONSTANT_COLOR_EXT");
#endif
#if defined(GL_CONSTANT_ALPHA)
defconsti(env, "GL-CONSTANT-ALPHA", (GLenum) GL_CONSTANT_ALPHA, "GL_CONSTANT_ALPHA");
#endif
#if defined(GL_CONSTANT_ALPHA_EXT)
defconsti(env, "GL-CONSTANT-ALPHA-EXT", (GLenum) GL_CONSTANT_ALPHA_EXT, "GL_CONSTANT_ALPHA_EXT");
#endif
#if defined(GL_ONE_MINUS_CONSTANT_ALPHA)
defconsti(env, "GL-ONE-MINUS-CONSTANT-ALPHA", (GLenum) GL_ONE_MINUS_CONSTANT_ALPHA, "GL_ONE_MINUS_CONSTANT_ALPHA");
#endif
#if defined(GL_ONE_MINUS_CONSTANT_ALPHA_EXT)
defconsti(env, "GL-ONE-MINUS-CONSTANT-ALPHA-EXT", (GLenum) GL_ONE_MINUS_CONSTANT_ALPHA_EXT, "GL_ONE_MINUS_CONSTANT_ALPHA_EXT");
#endif
#if defined(GL_BLEND_COLOR)
defconsti(env, "GL-BLEND-COLOR", (GLenum) GL_BLEND_COLOR, "GL_BLEND_COLOR");
#endif
#if defined(GL_BLEND_COLOR_EXT)
defconsti(env, "GL-BLEND-COLOR-EXT", (GLenum) GL_BLEND_COLOR_EXT, "GL_BLEND_COLOR_EXT");
#endif
#if defined(GL_FUNC_ADD)
defconsti(env, "GL-FUNC-ADD", (GLenum) GL_FUNC_ADD, "GL_FUNC_ADD");
#endif
#if defined(GL_FUNC_ADD_EXT)
defconsti(env, "GL-FUNC-ADD-EXT", (GLenum) GL_FUNC_ADD_EXT, "GL_FUNC_ADD_EXT");
#endif
#if defined(GL_FUNC_ADD_OES)
defconsti(env, "GL-FUNC-ADD-OES", (GLenum) GL_FUNC_ADD_OES, "GL_FUNC_ADD_OES");
#endif
#if defined(GL_MIN)
defconsti(env, "GL-MIN", (GLenum) GL_MIN, "GL_MIN");
#endif
#if defined(GL_MIN_EXT)
defconsti(env, "GL-MIN-EXT", (GLenum) GL_MIN_EXT, "GL_MIN_EXT");
#endif
#if defined(GL_MAX)
defconsti(env, "GL-MAX", (GLenum) GL_MAX, "GL_MAX");
#endif
#if defined(GL_MAX_EXT)
defconsti(env, "GL-MAX-EXT", (GLenum) GL_MAX_EXT, "GL_MAX_EXT");
#endif
#if defined(GL_BLEND_EQUATION)
defconsti(env, "GL-BLEND-EQUATION", (GLenum) GL_BLEND_EQUATION, "GL_BLEND_EQUATION");
#endif
#if defined(GL_BLEND_EQUATION_EXT)
defconsti(env, "GL-BLEND-EQUATION-EXT", (GLenum) GL_BLEND_EQUATION_EXT, "GL_BLEND_EQUATION_EXT");
#endif
#if defined(GL_BLEND_EQUATION_OES)
defconsti(env, "GL-BLEND-EQUATION-OES", (GLenum) GL_BLEND_EQUATION_OES, "GL_BLEND_EQUATION_OES");
#endif
#if defined(GL_BLEND_EQUATION_RGB)
defconsti(env, "GL-BLEND-EQUATION-RGB", (GLenum) GL_BLEND_EQUATION_RGB, "GL_BLEND_EQUATION_RGB");
#endif
#if defined(GL_BLEND_EQUATION_RGB_EXT)
defconsti(env, "GL-BLEND-EQUATION-RGB-EXT", (GLenum) GL_BLEND_EQUATION_RGB_EXT, "GL_BLEND_EQUATION_RGB_EXT");
#endif
#if defined(GL_BLEND_EQUATION_RGB_OES)
defconsti(env, "GL-BLEND-EQUATION-RGB-OES", (GLenum) GL_BLEND_EQUATION_RGB_OES, "GL_BLEND_EQUATION_RGB_OES");
#endif
#if defined(GL_FUNC_SUBTRACT)
defconsti(env, "GL-FUNC-SUBTRACT", (GLenum) GL_FUNC_SUBTRACT, "GL_FUNC_SUBTRACT");
#endif
#if defined(GL_FUNC_SUBTRACT_EXT)
defconsti(env, "GL-FUNC-SUBTRACT-EXT", (GLenum) GL_FUNC_SUBTRACT_EXT, "GL_FUNC_SUBTRACT_EXT");
#endif
#if defined(GL_FUNC_SUBTRACT_OES)
defconsti(env, "GL-FUNC-SUBTRACT-OES", (GLenum) GL_FUNC_SUBTRACT_OES, "GL_FUNC_SUBTRACT_OES");
#endif
#if defined(GL_FUNC_REVERSE_SUBTRACT)
defconsti(env, "GL-FUNC-REVERSE-SUBTRACT", (GLenum) GL_FUNC_REVERSE_SUBTRACT, "GL_FUNC_REVERSE_SUBTRACT");
#endif
#if defined(GL_FUNC_REVERSE_SUBTRACT_EXT)
defconsti(env, "GL-FUNC-REVERSE-SUBTRACT-EXT", (GLenum) GL_FUNC_REVERSE_SUBTRACT_EXT, "GL_FUNC_REVERSE_SUBTRACT_EXT");
#endif
#if defined(GL_FUNC_REVERSE_SUBTRACT_OES)
defconsti(env, "GL-FUNC-REVERSE-SUBTRACT-OES", (GLenum) GL_FUNC_REVERSE_SUBTRACT_OES, "GL_FUNC_REVERSE_SUBTRACT_OES");
#endif
#if defined(GL_CMYK_EXT)
defconsti(env, "GL-CMYK-EXT", (GLenum) GL_CMYK_EXT, "GL_CMYK_EXT");
#endif
#if defined(GL_CMYKA_EXT)
defconsti(env, "GL-CMYKA-EXT", (GLenum) GL_CMYKA_EXT, "GL_CMYKA_EXT");
#endif
#if defined(GL_PACK_CMYK_HINT_EXT)
defconsti(env, "GL-PACK-CMYK-HINT-EXT", (GLenum) GL_PACK_CMYK_HINT_EXT, "GL_PACK_CMYK_HINT_EXT");
#endif
#if defined(GL_UNPACK_CMYK_HINT_EXT)
defconsti(env, "GL-UNPACK-CMYK-HINT-EXT", (GLenum) GL_UNPACK_CMYK_HINT_EXT, "GL_UNPACK_CMYK_HINT_EXT");
#endif
#if defined(GL_CONVOLUTION_1D)
defconsti(env, "GL-CONVOLUTION-1D", (GLenum) GL_CONVOLUTION_1D, "GL_CONVOLUTION_1D");
#endif
#if defined(GL_CONVOLUTION_1D_EXT)
defconsti(env, "GL-CONVOLUTION-1D-EXT", (GLenum) GL_CONVOLUTION_1D_EXT, "GL_CONVOLUTION_1D_EXT");
#endif
#if defined(GL_CONVOLUTION_2D)
defconsti(env, "GL-CONVOLUTION-2D", (GLenum) GL_CONVOLUTION_2D, "GL_CONVOLUTION_2D");
#endif
#if defined(GL_CONVOLUTION_2D_EXT)
defconsti(env, "GL-CONVOLUTION-2D-EXT", (GLenum) GL_CONVOLUTION_2D_EXT, "GL_CONVOLUTION_2D_EXT");
#endif
#if defined(GL_SEPARABLE_2D)
defconsti(env, "GL-SEPARABLE-2D", (GLenum) GL_SEPARABLE_2D, "GL_SEPARABLE_2D");
#endif
#if defined(GL_SEPARABLE_2D_EXT)
defconsti(env, "GL-SEPARABLE-2D-EXT", (GLenum) GL_SEPARABLE_2D_EXT, "GL_SEPARABLE_2D_EXT");
#endif
#if defined(GL_CONVOLUTION_BORDER_MODE)
defconsti(env, "GL-CONVOLUTION-BORDER-MODE", (GLenum) GL_CONVOLUTION_BORDER_MODE, "GL_CONVOLUTION_BORDER_MODE");
#endif
#if defined(GL_CONVOLUTION_BORDER_MODE_EXT)
defconsti(env, "GL-CONVOLUTION-BORDER-MODE-EXT", (GLenum) GL_CONVOLUTION_BORDER_MODE_EXT, "GL_CONVOLUTION_BORDER_MODE_EXT");
#endif
#if defined(GL_CONVOLUTION_FILTER_SCALE)
defconsti(env, "GL-CONVOLUTION-FILTER-SCALE", (GLenum) GL_CONVOLUTION_FILTER_SCALE, "GL_CONVOLUTION_FILTER_SCALE");
#endif
#if defined(GL_CONVOLUTION_FILTER_SCALE_EXT)
defconsti(env, "GL-CONVOLUTION-FILTER-SCALE-EXT", (GLenum) GL_CONVOLUTION_FILTER_SCALE_EXT, "GL_CONVOLUTION_FILTER_SCALE_EXT");
#endif
#if defined(GL_CONVOLUTION_FILTER_BIAS)
defconsti(env, "GL-CONVOLUTION-FILTER-BIAS", (GLenum) GL_CONVOLUTION_FILTER_BIAS, "GL_CONVOLUTION_FILTER_BIAS");
#endif
#if defined(GL_CONVOLUTION_FILTER_BIAS_EXT)
defconsti(env, "GL-CONVOLUTION-FILTER-BIAS-EXT", (GLenum) GL_CONVOLUTION_FILTER_BIAS_EXT, "GL_CONVOLUTION_FILTER_BIAS_EXT");
#endif
#if defined(GL_REDUCE)
defconsti(env, "GL-REDUCE", (GLenum) GL_REDUCE, "GL_REDUCE");
#endif
#if defined(GL_REDUCE_EXT)
defconsti(env, "GL-REDUCE-EXT", (GLenum) GL_REDUCE_EXT, "GL_REDUCE_EXT");
#endif
#if defined(GL_CONVOLUTION_FORMAT)
defconsti(env, "GL-CONVOLUTION-FORMAT", (GLenum) GL_CONVOLUTION_FORMAT, "GL_CONVOLUTION_FORMAT");
#endif
#if defined(GL_CONVOLUTION_FORMAT_EXT)
defconsti(env, "GL-CONVOLUTION-FORMAT-EXT", (GLenum) GL_CONVOLUTION_FORMAT_EXT, "GL_CONVOLUTION_FORMAT_EXT");
#endif
#if defined(GL_CONVOLUTION_WIDTH)
defconsti(env, "GL-CONVOLUTION-WIDTH", (GLenum) GL_CONVOLUTION_WIDTH, "GL_CONVOLUTION_WIDTH");
#endif
#if defined(GL_CONVOLUTION_WIDTH_EXT)
defconsti(env, "GL-CONVOLUTION-WIDTH-EXT", (GLenum) GL_CONVOLUTION_WIDTH_EXT, "GL_CONVOLUTION_WIDTH_EXT");
#endif
#if defined(GL_CONVOLUTION_HEIGHT)
defconsti(env, "GL-CONVOLUTION-HEIGHT", (GLenum) GL_CONVOLUTION_HEIGHT, "GL_CONVOLUTION_HEIGHT");
#endif
#if defined(GL_CONVOLUTION_HEIGHT_EXT)
defconsti(env, "GL-CONVOLUTION-HEIGHT-EXT", (GLenum) GL_CONVOLUTION_HEIGHT_EXT, "GL_CONVOLUTION_HEIGHT_EXT");
#endif
#if defined(GL_MAX_CONVOLUTION_WIDTH)
defconsti(env, "GL-MAX-CONVOLUTION-WIDTH", (GLenum) GL_MAX_CONVOLUTION_WIDTH, "GL_MAX_CONVOLUTION_WIDTH");
#endif
#if defined(GL_MAX_CONVOLUTION_WIDTH_EXT)
defconsti(env, "GL-MAX-CONVOLUTION-WIDTH-EXT", (GLenum) GL_MAX_CONVOLUTION_WIDTH_EXT, "GL_MAX_CONVOLUTION_WIDTH_EXT");
#endif
#if defined(GL_MAX_CONVOLUTION_HEIGHT)
defconsti(env, "GL-MAX-CONVOLUTION-HEIGHT", (GLenum) GL_MAX_CONVOLUTION_HEIGHT, "GL_MAX_CONVOLUTION_HEIGHT");
#endif
#if defined(GL_MAX_CONVOLUTION_HEIGHT_EXT)
defconsti(env, "GL-MAX-CONVOLUTION-HEIGHT-EXT", (GLenum) GL_MAX_CONVOLUTION_HEIGHT_EXT, "GL_MAX_CONVOLUTION_HEIGHT_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_RED_SCALE)
defconsti(env, "GL-POST-CONVOLUTION-RED-SCALE", (GLenum) GL_POST_CONVOLUTION_RED_SCALE, "GL_POST_CONVOLUTION_RED_SCALE");
#endif
#if defined(GL_POST_CONVOLUTION_RED_SCALE_EXT)
defconsti(env, "GL-POST-CONVOLUTION-RED-SCALE-EXT", (GLenum) GL_POST_CONVOLUTION_RED_SCALE_EXT, "GL_POST_CONVOLUTION_RED_SCALE_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_GREEN_SCALE)
defconsti(env, "GL-POST-CONVOLUTION-GREEN-SCALE", (GLenum) GL_POST_CONVOLUTION_GREEN_SCALE, "GL_POST_CONVOLUTION_GREEN_SCALE");
#endif
#if defined(GL_POST_CONVOLUTION_GREEN_SCALE_EXT)
defconsti(env, "GL-POST-CONVOLUTION-GREEN-SCALE-EXT", (GLenum) GL_POST_CONVOLUTION_GREEN_SCALE_EXT, "GL_POST_CONVOLUTION_GREEN_SCALE_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_BLUE_SCALE)
defconsti(env, "GL-POST-CONVOLUTION-BLUE-SCALE", (GLenum) GL_POST_CONVOLUTION_BLUE_SCALE, "GL_POST_CONVOLUTION_BLUE_SCALE");
#endif
#if defined(GL_POST_CONVOLUTION_BLUE_SCALE_EXT)
defconsti(env, "GL-POST-CONVOLUTION-BLUE-SCALE-EXT", (GLenum) GL_POST_CONVOLUTION_BLUE_SCALE_EXT, "GL_POST_CONVOLUTION_BLUE_SCALE_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_ALPHA_SCALE)
defconsti(env, "GL-POST-CONVOLUTION-ALPHA-SCALE", (GLenum) GL_POST_CONVOLUTION_ALPHA_SCALE, "GL_POST_CONVOLUTION_ALPHA_SCALE");
#endif
#if defined(GL_POST_CONVOLUTION_ALPHA_SCALE_EXT)
defconsti(env, "GL-POST-CONVOLUTION-ALPHA-SCALE-EXT", (GLenum) GL_POST_CONVOLUTION_ALPHA_SCALE_EXT, "GL_POST_CONVOLUTION_ALPHA_SCALE_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_RED_BIAS)
defconsti(env, "GL-POST-CONVOLUTION-RED-BIAS", (GLenum) GL_POST_CONVOLUTION_RED_BIAS, "GL_POST_CONVOLUTION_RED_BIAS");
#endif
#if defined(GL_POST_CONVOLUTION_RED_BIAS_EXT)
defconsti(env, "GL-POST-CONVOLUTION-RED-BIAS-EXT", (GLenum) GL_POST_CONVOLUTION_RED_BIAS_EXT, "GL_POST_CONVOLUTION_RED_BIAS_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_GREEN_BIAS)
defconsti(env, "GL-POST-CONVOLUTION-GREEN-BIAS", (GLenum) GL_POST_CONVOLUTION_GREEN_BIAS, "GL_POST_CONVOLUTION_GREEN_BIAS");
#endif
#if defined(GL_POST_CONVOLUTION_GREEN_BIAS_EXT)
defconsti(env, "GL-POST-CONVOLUTION-GREEN-BIAS-EXT", (GLenum) GL_POST_CONVOLUTION_GREEN_BIAS_EXT, "GL_POST_CONVOLUTION_GREEN_BIAS_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_BLUE_BIAS)
defconsti(env, "GL-POST-CONVOLUTION-BLUE-BIAS", (GLenum) GL_POST_CONVOLUTION_BLUE_BIAS, "GL_POST_CONVOLUTION_BLUE_BIAS");
#endif
#if defined(GL_POST_CONVOLUTION_BLUE_BIAS_EXT)
defconsti(env, "GL-POST-CONVOLUTION-BLUE-BIAS-EXT", (GLenum) GL_POST_CONVOLUTION_BLUE_BIAS_EXT, "GL_POST_CONVOLUTION_BLUE_BIAS_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_ALPHA_BIAS)
defconsti(env, "GL-POST-CONVOLUTION-ALPHA-BIAS", (GLenum) GL_POST_CONVOLUTION_ALPHA_BIAS, "GL_POST_CONVOLUTION_ALPHA_BIAS");
#endif
#if defined(GL_POST_CONVOLUTION_ALPHA_BIAS_EXT)
defconsti(env, "GL-POST-CONVOLUTION-ALPHA-BIAS-EXT", (GLenum) GL_POST_CONVOLUTION_ALPHA_BIAS_EXT, "GL_POST_CONVOLUTION_ALPHA_BIAS_EXT");
#endif
#if defined(GL_HISTOGRAM)
defconsti(env, "GL-HISTOGRAM", (GLenum) GL_HISTOGRAM, "GL_HISTOGRAM");
#endif
#if defined(GL_HISTOGRAM_EXT)
defconsti(env, "GL-HISTOGRAM-EXT", (GLenum) GL_HISTOGRAM_EXT, "GL_HISTOGRAM_EXT");
#endif
#if defined(GL_PROXY_HISTOGRAM)
defconsti(env, "GL-PROXY-HISTOGRAM", (GLenum) GL_PROXY_HISTOGRAM, "GL_PROXY_HISTOGRAM");
#endif
#if defined(GL_PROXY_HISTOGRAM_EXT)
defconsti(env, "GL-PROXY-HISTOGRAM-EXT", (GLenum) GL_PROXY_HISTOGRAM_EXT, "GL_PROXY_HISTOGRAM_EXT");
#endif
#if defined(GL_HISTOGRAM_WIDTH)
defconsti(env, "GL-HISTOGRAM-WIDTH", (GLenum) GL_HISTOGRAM_WIDTH, "GL_HISTOGRAM_WIDTH");
#endif
#if defined(GL_HISTOGRAM_WIDTH_EXT)
defconsti(env, "GL-HISTOGRAM-WIDTH-EXT", (GLenum) GL_HISTOGRAM_WIDTH_EXT, "GL_HISTOGRAM_WIDTH_EXT");
#endif
#if defined(GL_HISTOGRAM_FORMAT)
defconsti(env, "GL-HISTOGRAM-FORMAT", (GLenum) GL_HISTOGRAM_FORMAT, "GL_HISTOGRAM_FORMAT");
#endif
#if defined(GL_HISTOGRAM_FORMAT_EXT)
defconsti(env, "GL-HISTOGRAM-FORMAT-EXT", (GLenum) GL_HISTOGRAM_FORMAT_EXT, "GL_HISTOGRAM_FORMAT_EXT");
#endif
#if defined(GL_HISTOGRAM_RED_SIZE)
defconsti(env, "GL-HISTOGRAM-RED-SIZE", (GLenum) GL_HISTOGRAM_RED_SIZE, "GL_HISTOGRAM_RED_SIZE");
#endif
#if defined(GL_HISTOGRAM_RED_SIZE_EXT)
defconsti(env, "GL-HISTOGRAM-RED-SIZE-EXT", (GLenum) GL_HISTOGRAM_RED_SIZE_EXT, "GL_HISTOGRAM_RED_SIZE_EXT");
#endif
#if defined(GL_HISTOGRAM_GREEN_SIZE)
defconsti(env, "GL-HISTOGRAM-GREEN-SIZE", (GLenum) GL_HISTOGRAM_GREEN_SIZE, "GL_HISTOGRAM_GREEN_SIZE");
#endif
#if defined(GL_HISTOGRAM_GREEN_SIZE_EXT)
defconsti(env, "GL-HISTOGRAM-GREEN-SIZE-EXT", (GLenum) GL_HISTOGRAM_GREEN_SIZE_EXT, "GL_HISTOGRAM_GREEN_SIZE_EXT");
#endif
#if defined(GL_HISTOGRAM_BLUE_SIZE)
defconsti(env, "GL-HISTOGRAM-BLUE-SIZE", (GLenum) GL_HISTOGRAM_BLUE_SIZE, "GL_HISTOGRAM_BLUE_SIZE");
#endif
#if defined(GL_HISTOGRAM_BLUE_SIZE_EXT)
defconsti(env, "GL-HISTOGRAM-BLUE-SIZE-EXT", (GLenum) GL_HISTOGRAM_BLUE_SIZE_EXT, "GL_HISTOGRAM_BLUE_SIZE_EXT");
#endif
#if defined(GL_HISTOGRAM_ALPHA_SIZE)
defconsti(env, "GL-HISTOGRAM-ALPHA-SIZE", (GLenum) GL_HISTOGRAM_ALPHA_SIZE, "GL_HISTOGRAM_ALPHA_SIZE");
#endif
#if defined(GL_HISTOGRAM_ALPHA_SIZE_EXT)
defconsti(env, "GL-HISTOGRAM-ALPHA-SIZE-EXT", (GLenum) GL_HISTOGRAM_ALPHA_SIZE_EXT, "GL_HISTOGRAM_ALPHA_SIZE_EXT");
#endif
#if defined(GL_HISTOGRAM_LUMINANCE_SIZE)
defconsti(env, "GL-HISTOGRAM-LUMINANCE-SIZE", (GLenum) GL_HISTOGRAM_LUMINANCE_SIZE, "GL_HISTOGRAM_LUMINANCE_SIZE");
#endif
#if defined(GL_HISTOGRAM_LUMINANCE_SIZE_EXT)
defconsti(env, "GL-HISTOGRAM-LUMINANCE-SIZE-EXT", (GLenum) GL_HISTOGRAM_LUMINANCE_SIZE_EXT, "GL_HISTOGRAM_LUMINANCE_SIZE_EXT");
#endif
#if defined(GL_HISTOGRAM_SINK)
defconsti(env, "GL-HISTOGRAM-SINK", (GLenum) GL_HISTOGRAM_SINK, "GL_HISTOGRAM_SINK");
#endif
#if defined(GL_HISTOGRAM_SINK_EXT)
defconsti(env, "GL-HISTOGRAM-SINK-EXT", (GLenum) GL_HISTOGRAM_SINK_EXT, "GL_HISTOGRAM_SINK_EXT");
#endif
#if defined(GL_MINMAX)
defconsti(env, "GL-MINMAX", (GLenum) GL_MINMAX, "GL_MINMAX");
#endif
#if defined(GL_MINMAX_EXT)
defconsti(env, "GL-MINMAX-EXT", (GLenum) GL_MINMAX_EXT, "GL_MINMAX_EXT");
#endif
#if defined(GL_MINMAX_FORMAT)
defconsti(env, "GL-MINMAX-FORMAT", (GLenum) GL_MINMAX_FORMAT, "GL_MINMAX_FORMAT");
#endif
#if defined(GL_MINMAX_FORMAT_EXT)
defconsti(env, "GL-MINMAX-FORMAT-EXT", (GLenum) GL_MINMAX_FORMAT_EXT, "GL_MINMAX_FORMAT_EXT");
#endif
#if defined(GL_MINMAX_SINK)
defconsti(env, "GL-MINMAX-SINK", (GLenum) GL_MINMAX_SINK, "GL_MINMAX_SINK");
#endif
#if defined(GL_MINMAX_SINK_EXT)
defconsti(env, "GL-MINMAX-SINK-EXT", (GLenum) GL_MINMAX_SINK_EXT, "GL_MINMAX_SINK_EXT");
#endif
#if defined(GL_TABLE_TOO_LARGE_EXT)
defconsti(env, "GL-TABLE-TOO-LARGE-EXT", (GLenum) GL_TABLE_TOO_LARGE_EXT, "GL_TABLE_TOO_LARGE_EXT");
#endif
#if defined(GL_TABLE_TOO_LARGE)
defconsti(env, "GL-TABLE-TOO-LARGE", (GLenum) GL_TABLE_TOO_LARGE, "GL_TABLE_TOO_LARGE");
#endif
#if defined(GL_UNSIGNED_BYTE_3_3_2)
defconsti(env, "GL-UNSIGNED-BYTE-3-3-2", (GLenum) GL_UNSIGNED_BYTE_3_3_2, "GL_UNSIGNED_BYTE_3_3_2");
#endif
#if defined(GL_UNSIGNED_BYTE_3_3_2_EXT)
defconsti(env, "GL-UNSIGNED-BYTE-3-3-2-EXT", (GLenum) GL_UNSIGNED_BYTE_3_3_2_EXT, "GL_UNSIGNED_BYTE_3_3_2_EXT");
#endif
#if defined(GL_UNSIGNED_SHORT_4_4_4_4)
defconsti(env, "GL-UNSIGNED-SHORT-4-4-4-4", (GLenum) GL_UNSIGNED_SHORT_4_4_4_4, "GL_UNSIGNED_SHORT_4_4_4_4");
#endif
#if defined(GL_UNSIGNED_SHORT_4_4_4_4_EXT)
defconsti(env, "GL-UNSIGNED-SHORT-4-4-4-4-EXT", (GLenum) GL_UNSIGNED_SHORT_4_4_4_4_EXT, "GL_UNSIGNED_SHORT_4_4_4_4_EXT");
#endif
#if defined(GL_UNSIGNED_SHORT_5_5_5_1)
defconsti(env, "GL-UNSIGNED-SHORT-5-5-5-1", (GLenum) GL_UNSIGNED_SHORT_5_5_5_1, "GL_UNSIGNED_SHORT_5_5_5_1");
#endif
#if defined(GL_UNSIGNED_SHORT_5_5_5_1_EXT)
defconsti(env, "GL-UNSIGNED-SHORT-5-5-5-1-EXT", (GLenum) GL_UNSIGNED_SHORT_5_5_5_1_EXT, "GL_UNSIGNED_SHORT_5_5_5_1_EXT");
#endif
#if defined(GL_UNSIGNED_INT_8_8_8_8)
defconsti(env, "GL-UNSIGNED-INT-8-8-8-8", (GLenum) GL_UNSIGNED_INT_8_8_8_8, "GL_UNSIGNED_INT_8_8_8_8");
#endif
#if defined(GL_UNSIGNED_INT_8_8_8_8_EXT)
defconsti(env, "GL-UNSIGNED-INT-8-8-8-8-EXT", (GLenum) GL_UNSIGNED_INT_8_8_8_8_EXT, "GL_UNSIGNED_INT_8_8_8_8_EXT");
#endif
#if defined(GL_UNSIGNED_INT_10_10_10_2)
defconsti(env, "GL-UNSIGNED-INT-10-10-10-2", (GLenum) GL_UNSIGNED_INT_10_10_10_2, "GL_UNSIGNED_INT_10_10_10_2");
#endif
#if defined(GL_UNSIGNED_INT_10_10_10_2_EXT)
defconsti(env, "GL-UNSIGNED-INT-10-10-10-2-EXT", (GLenum) GL_UNSIGNED_INT_10_10_10_2_EXT, "GL_UNSIGNED_INT_10_10_10_2_EXT");
#endif
#if defined(GL_POLYGON_OFFSET_EXT)
defconsti(env, "GL-POLYGON-OFFSET-EXT", (GLenum) GL_POLYGON_OFFSET_EXT, "GL_POLYGON_OFFSET_EXT");
#endif
#if defined(GL_POLYGON_OFFSET_FILL)
defconsti(env, "GL-POLYGON-OFFSET-FILL", (GLenum) GL_POLYGON_OFFSET_FILL, "GL_POLYGON_OFFSET_FILL");
#endif
#if defined(GL_POLYGON_OFFSET_FACTOR)
defconsti(env, "GL-POLYGON-OFFSET-FACTOR", (GLenum) GL_POLYGON_OFFSET_FACTOR, "GL_POLYGON_OFFSET_FACTOR");
#endif
#if defined(GL_POLYGON_OFFSET_FACTOR_EXT)
defconsti(env, "GL-POLYGON-OFFSET-FACTOR-EXT", (GLenum) GL_POLYGON_OFFSET_FACTOR_EXT, "GL_POLYGON_OFFSET_FACTOR_EXT");
#endif
#if defined(GL_POLYGON_OFFSET_BIAS_EXT)
defconsti(env, "GL-POLYGON-OFFSET-BIAS-EXT", (GLenum) GL_POLYGON_OFFSET_BIAS_EXT, "GL_POLYGON_OFFSET_BIAS_EXT");
#endif
#if defined(GL_RESCALE_NORMAL)
defconsti(env, "GL-RESCALE-NORMAL", (GLenum) GL_RESCALE_NORMAL, "GL_RESCALE_NORMAL");
#endif
#if defined(GL_RESCALE_NORMAL_EXT)
defconsti(env, "GL-RESCALE-NORMAL-EXT", (GLenum) GL_RESCALE_NORMAL_EXT, "GL_RESCALE_NORMAL_EXT");
#endif
#if defined(GL_ALPHA4)
defconsti(env, "GL-ALPHA4", (GLenum) GL_ALPHA4, "GL_ALPHA4");
#endif
#if defined(GL_ALPHA4_EXT)
defconsti(env, "GL-ALPHA4-EXT", (GLenum) GL_ALPHA4_EXT, "GL_ALPHA4_EXT");
#endif
#if defined(GL_ALPHA8)
defconsti(env, "GL-ALPHA8", (GLenum) GL_ALPHA8, "GL_ALPHA8");
#endif
#if defined(GL_ALPHA8_EXT)
defconsti(env, "GL-ALPHA8-EXT", (GLenum) GL_ALPHA8_EXT, "GL_ALPHA8_EXT");
#endif
#if defined(GL_ALPHA8_OES)
defconsti(env, "GL-ALPHA8-OES", (GLenum) GL_ALPHA8_OES, "GL_ALPHA8_OES");
#endif
#if defined(GL_ALPHA12)
defconsti(env, "GL-ALPHA12", (GLenum) GL_ALPHA12, "GL_ALPHA12");
#endif
#if defined(GL_ALPHA12_EXT)
defconsti(env, "GL-ALPHA12-EXT", (GLenum) GL_ALPHA12_EXT, "GL_ALPHA12_EXT");
#endif
#if defined(GL_ALPHA16)
defconsti(env, "GL-ALPHA16", (GLenum) GL_ALPHA16, "GL_ALPHA16");
#endif
#if defined(GL_ALPHA16_EXT)
defconsti(env, "GL-ALPHA16-EXT", (GLenum) GL_ALPHA16_EXT, "GL_ALPHA16_EXT");
#endif
#if defined(GL_LUMINANCE4)
defconsti(env, "GL-LUMINANCE4", (GLenum) GL_LUMINANCE4, "GL_LUMINANCE4");
#endif
#if defined(GL_LUMINANCE4_EXT)
defconsti(env, "GL-LUMINANCE4-EXT", (GLenum) GL_LUMINANCE4_EXT, "GL_LUMINANCE4_EXT");
#endif
#if defined(GL_LUMINANCE8)
defconsti(env, "GL-LUMINANCE8", (GLenum) GL_LUMINANCE8, "GL_LUMINANCE8");
#endif
#if defined(GL_LUMINANCE8_EXT)
defconsti(env, "GL-LUMINANCE8-EXT", (GLenum) GL_LUMINANCE8_EXT, "GL_LUMINANCE8_EXT");
#endif
#if defined(GL_LUMINANCE8_OES)
defconsti(env, "GL-LUMINANCE8-OES", (GLenum) GL_LUMINANCE8_OES, "GL_LUMINANCE8_OES");
#endif
#if defined(GL_LUMINANCE12)
defconsti(env, "GL-LUMINANCE12", (GLenum) GL_LUMINANCE12, "GL_LUMINANCE12");
#endif
#if defined(GL_LUMINANCE12_EXT)
defconsti(env, "GL-LUMINANCE12-EXT", (GLenum) GL_LUMINANCE12_EXT, "GL_LUMINANCE12_EXT");
#endif
#if defined(GL_LUMINANCE16)
defconsti(env, "GL-LUMINANCE16", (GLenum) GL_LUMINANCE16, "GL_LUMINANCE16");
#endif
#if defined(GL_LUMINANCE16_EXT)
defconsti(env, "GL-LUMINANCE16-EXT", (GLenum) GL_LUMINANCE16_EXT, "GL_LUMINANCE16_EXT");
#endif
#if defined(GL_LUMINANCE4_ALPHA4)
defconsti(env, "GL-LUMINANCE4-ALPHA4", (GLenum) GL_LUMINANCE4_ALPHA4, "GL_LUMINANCE4_ALPHA4");
#endif
#if defined(GL_LUMINANCE4_ALPHA4_EXT)
defconsti(env, "GL-LUMINANCE4-ALPHA4-EXT", (GLenum) GL_LUMINANCE4_ALPHA4_EXT, "GL_LUMINANCE4_ALPHA4_EXT");
#endif
#if defined(GL_LUMINANCE4_ALPHA4_OES)
defconsti(env, "GL-LUMINANCE4-ALPHA4-OES", (GLenum) GL_LUMINANCE4_ALPHA4_OES, "GL_LUMINANCE4_ALPHA4_OES");
#endif
#if defined(GL_LUMINANCE6_ALPHA2)
defconsti(env, "GL-LUMINANCE6-ALPHA2", (GLenum) GL_LUMINANCE6_ALPHA2, "GL_LUMINANCE6_ALPHA2");
#endif
#if defined(GL_LUMINANCE6_ALPHA2_EXT)
defconsti(env, "GL-LUMINANCE6-ALPHA2-EXT", (GLenum) GL_LUMINANCE6_ALPHA2_EXT, "GL_LUMINANCE6_ALPHA2_EXT");
#endif
#if defined(GL_LUMINANCE8_ALPHA8)
defconsti(env, "GL-LUMINANCE8-ALPHA8", (GLenum) GL_LUMINANCE8_ALPHA8, "GL_LUMINANCE8_ALPHA8");
#endif
#if defined(GL_LUMINANCE8_ALPHA8_EXT)
defconsti(env, "GL-LUMINANCE8-ALPHA8-EXT", (GLenum) GL_LUMINANCE8_ALPHA8_EXT, "GL_LUMINANCE8_ALPHA8_EXT");
#endif
#if defined(GL_LUMINANCE8_ALPHA8_OES)
defconsti(env, "GL-LUMINANCE8-ALPHA8-OES", (GLenum) GL_LUMINANCE8_ALPHA8_OES, "GL_LUMINANCE8_ALPHA8_OES");
#endif
#if defined(GL_LUMINANCE12_ALPHA4)
defconsti(env, "GL-LUMINANCE12-ALPHA4", (GLenum) GL_LUMINANCE12_ALPHA4, "GL_LUMINANCE12_ALPHA4");
#endif
#if defined(GL_LUMINANCE12_ALPHA4_EXT)
defconsti(env, "GL-LUMINANCE12-ALPHA4-EXT", (GLenum) GL_LUMINANCE12_ALPHA4_EXT, "GL_LUMINANCE12_ALPHA4_EXT");
#endif
#if defined(GL_LUMINANCE12_ALPHA12)
defconsti(env, "GL-LUMINANCE12-ALPHA12", (GLenum) GL_LUMINANCE12_ALPHA12, "GL_LUMINANCE12_ALPHA12");
#endif
#if defined(GL_LUMINANCE12_ALPHA12_EXT)
defconsti(env, "GL-LUMINANCE12-ALPHA12-EXT", (GLenum) GL_LUMINANCE12_ALPHA12_EXT, "GL_LUMINANCE12_ALPHA12_EXT");
#endif
#if defined(GL_LUMINANCE16_ALPHA16)
defconsti(env, "GL-LUMINANCE16-ALPHA16", (GLenum) GL_LUMINANCE16_ALPHA16, "GL_LUMINANCE16_ALPHA16");
#endif
#if defined(GL_LUMINANCE16_ALPHA16_EXT)
defconsti(env, "GL-LUMINANCE16-ALPHA16-EXT", (GLenum) GL_LUMINANCE16_ALPHA16_EXT, "GL_LUMINANCE16_ALPHA16_EXT");
#endif
#if defined(GL_INTENSITY)
defconsti(env, "GL-INTENSITY", (GLenum) GL_INTENSITY, "GL_INTENSITY");
#endif
#if defined(GL_INTENSITY_EXT)
defconsti(env, "GL-INTENSITY-EXT", (GLenum) GL_INTENSITY_EXT, "GL_INTENSITY_EXT");
#endif
#if defined(GL_INTENSITY4)
defconsti(env, "GL-INTENSITY4", (GLenum) GL_INTENSITY4, "GL_INTENSITY4");
#endif
#if defined(GL_INTENSITY4_EXT)
defconsti(env, "GL-INTENSITY4-EXT", (GLenum) GL_INTENSITY4_EXT, "GL_INTENSITY4_EXT");
#endif
#if defined(GL_INTENSITY8)
defconsti(env, "GL-INTENSITY8", (GLenum) GL_INTENSITY8, "GL_INTENSITY8");
#endif
#if defined(GL_INTENSITY8_EXT)
defconsti(env, "GL-INTENSITY8-EXT", (GLenum) GL_INTENSITY8_EXT, "GL_INTENSITY8_EXT");
#endif
#if defined(GL_INTENSITY12)
defconsti(env, "GL-INTENSITY12", (GLenum) GL_INTENSITY12, "GL_INTENSITY12");
#endif
#if defined(GL_INTENSITY12_EXT)
defconsti(env, "GL-INTENSITY12-EXT", (GLenum) GL_INTENSITY12_EXT, "GL_INTENSITY12_EXT");
#endif
#if defined(GL_INTENSITY16)
defconsti(env, "GL-INTENSITY16", (GLenum) GL_INTENSITY16, "GL_INTENSITY16");
#endif
#if defined(GL_INTENSITY16_EXT)
defconsti(env, "GL-INTENSITY16-EXT", (GLenum) GL_INTENSITY16_EXT, "GL_INTENSITY16_EXT");
#endif
#if defined(GL_RGB2_EXT)
defconsti(env, "GL-RGB2-EXT", (GLenum) GL_RGB2_EXT, "GL_RGB2_EXT");
#endif
#if defined(GL_RGB4)
defconsti(env, "GL-RGB4", (GLenum) GL_RGB4, "GL_RGB4");
#endif
#if defined(GL_RGB4_EXT)
defconsti(env, "GL-RGB4-EXT", (GLenum) GL_RGB4_EXT, "GL_RGB4_EXT");
#endif
#if defined(GL_RGB5)
defconsti(env, "GL-RGB5", (GLenum) GL_RGB5, "GL_RGB5");
#endif
#if defined(GL_RGB5_EXT)
defconsti(env, "GL-RGB5-EXT", (GLenum) GL_RGB5_EXT, "GL_RGB5_EXT");
#endif
#if defined(GL_RGB8)
defconsti(env, "GL-RGB8", (GLenum) GL_RGB8, "GL_RGB8");
#endif
#if defined(GL_RGB8_EXT)
defconsti(env, "GL-RGB8-EXT", (GLenum) GL_RGB8_EXT, "GL_RGB8_EXT");
#endif
#if defined(GL_RGB8_OES)
defconsti(env, "GL-RGB8-OES", (GLenum) GL_RGB8_OES, "GL_RGB8_OES");
#endif
#if defined(GL_RGB10)
defconsti(env, "GL-RGB10", (GLenum) GL_RGB10, "GL_RGB10");
#endif
#if defined(GL_RGB10_EXT)
defconsti(env, "GL-RGB10-EXT", (GLenum) GL_RGB10_EXT, "GL_RGB10_EXT");
#endif
#if defined(GL_RGB12)
defconsti(env, "GL-RGB12", (GLenum) GL_RGB12, "GL_RGB12");
#endif
#if defined(GL_RGB12_EXT)
defconsti(env, "GL-RGB12-EXT", (GLenum) GL_RGB12_EXT, "GL_RGB12_EXT");
#endif
#if defined(GL_RGB16)
defconsti(env, "GL-RGB16", (GLenum) GL_RGB16, "GL_RGB16");
#endif
#if defined(GL_RGB16_EXT)
defconsti(env, "GL-RGB16-EXT", (GLenum) GL_RGB16_EXT, "GL_RGB16_EXT");
#endif
#if defined(GL_RGBA2)
defconsti(env, "GL-RGBA2", (GLenum) GL_RGBA2, "GL_RGBA2");
#endif
#if defined(GL_RGBA2_EXT)
defconsti(env, "GL-RGBA2-EXT", (GLenum) GL_RGBA2_EXT, "GL_RGBA2_EXT");
#endif
#if defined(GL_RGBA4)
defconsti(env, "GL-RGBA4", (GLenum) GL_RGBA4, "GL_RGBA4");
#endif
#if defined(GL_RGBA4_EXT)
defconsti(env, "GL-RGBA4-EXT", (GLenum) GL_RGBA4_EXT, "GL_RGBA4_EXT");
#endif
#if defined(GL_RGBA4_OES)
defconsti(env, "GL-RGBA4-OES", (GLenum) GL_RGBA4_OES, "GL_RGBA4_OES");
#endif
#if defined(GL_RGB5_A1)
defconsti(env, "GL-RGB5-A1", (GLenum) GL_RGB5_A1, "GL_RGB5_A1");
#endif
#if defined(GL_RGB5_A1_EXT)
defconsti(env, "GL-RGB5-A1-EXT", (GLenum) GL_RGB5_A1_EXT, "GL_RGB5_A1_EXT");
#endif
#if defined(GL_RGB5_A1_OES)
defconsti(env, "GL-RGB5-A1-OES", (GLenum) GL_RGB5_A1_OES, "GL_RGB5_A1_OES");
#endif
#if defined(GL_RGBA8)
defconsti(env, "GL-RGBA8", (GLenum) GL_RGBA8, "GL_RGBA8");
#endif
#if defined(GL_RGBA8_EXT)
defconsti(env, "GL-RGBA8-EXT", (GLenum) GL_RGBA8_EXT, "GL_RGBA8_EXT");
#endif
#if defined(GL_RGBA8_OES)
defconsti(env, "GL-RGBA8-OES", (GLenum) GL_RGBA8_OES, "GL_RGBA8_OES");
#endif
#if defined(GL_RGB10_A2)
defconsti(env, "GL-RGB10-A2", (GLenum) GL_RGB10_A2, "GL_RGB10_A2");
#endif
#if defined(GL_RGB10_A2_EXT)
defconsti(env, "GL-RGB10-A2-EXT", (GLenum) GL_RGB10_A2_EXT, "GL_RGB10_A2_EXT");
#endif
#if defined(GL_RGBA12)
defconsti(env, "GL-RGBA12", (GLenum) GL_RGBA12, "GL_RGBA12");
#endif
#if defined(GL_RGBA12_EXT)
defconsti(env, "GL-RGBA12-EXT", (GLenum) GL_RGBA12_EXT, "GL_RGBA12_EXT");
#endif
#if defined(GL_RGBA16)
defconsti(env, "GL-RGBA16", (GLenum) GL_RGBA16, "GL_RGBA16");
#endif
#if defined(GL_RGBA16_EXT)
defconsti(env, "GL-RGBA16-EXT", (GLenum) GL_RGBA16_EXT, "GL_RGBA16_EXT");
#endif
#if defined(GL_TEXTURE_RED_SIZE)
defconsti(env, "GL-TEXTURE-RED-SIZE", (GLenum) GL_TEXTURE_RED_SIZE, "GL_TEXTURE_RED_SIZE");
#endif
#if defined(GL_TEXTURE_RED_SIZE_EXT)
defconsti(env, "GL-TEXTURE-RED-SIZE-EXT", (GLenum) GL_TEXTURE_RED_SIZE_EXT, "GL_TEXTURE_RED_SIZE_EXT");
#endif
#if defined(GL_TEXTURE_GREEN_SIZE)
defconsti(env, "GL-TEXTURE-GREEN-SIZE", (GLenum) GL_TEXTURE_GREEN_SIZE, "GL_TEXTURE_GREEN_SIZE");
#endif
#if defined(GL_TEXTURE_GREEN_SIZE_EXT)
defconsti(env, "GL-TEXTURE-GREEN-SIZE-EXT", (GLenum) GL_TEXTURE_GREEN_SIZE_EXT, "GL_TEXTURE_GREEN_SIZE_EXT");
#endif
#if defined(GL_TEXTURE_BLUE_SIZE)
defconsti(env, "GL-TEXTURE-BLUE-SIZE", (GLenum) GL_TEXTURE_BLUE_SIZE, "GL_TEXTURE_BLUE_SIZE");
#endif
#if defined(GL_TEXTURE_BLUE_SIZE_EXT)
defconsti(env, "GL-TEXTURE-BLUE-SIZE-EXT", (GLenum) GL_TEXTURE_BLUE_SIZE_EXT, "GL_TEXTURE_BLUE_SIZE_EXT");
#endif
#if defined(GL_TEXTURE_ALPHA_SIZE)
defconsti(env, "GL-TEXTURE-ALPHA-SIZE", (GLenum) GL_TEXTURE_ALPHA_SIZE, "GL_TEXTURE_ALPHA_SIZE");
#endif
#if defined(GL_TEXTURE_ALPHA_SIZE_EXT)
defconsti(env, "GL-TEXTURE-ALPHA-SIZE-EXT", (GLenum) GL_TEXTURE_ALPHA_SIZE_EXT, "GL_TEXTURE_ALPHA_SIZE_EXT");
#endif
#if defined(GL_TEXTURE_LUMINANCE_SIZE)
defconsti(env, "GL-TEXTURE-LUMINANCE-SIZE", (GLenum) GL_TEXTURE_LUMINANCE_SIZE, "GL_TEXTURE_LUMINANCE_SIZE");
#endif
#if defined(GL_TEXTURE_LUMINANCE_SIZE_EXT)
defconsti(env, "GL-TEXTURE-LUMINANCE-SIZE-EXT", (GLenum) GL_TEXTURE_LUMINANCE_SIZE_EXT, "GL_TEXTURE_LUMINANCE_SIZE_EXT");
#endif
#if defined(GL_TEXTURE_INTENSITY_SIZE)
defconsti(env, "GL-TEXTURE-INTENSITY-SIZE", (GLenum) GL_TEXTURE_INTENSITY_SIZE, "GL_TEXTURE_INTENSITY_SIZE");
#endif
#if defined(GL_TEXTURE_INTENSITY_SIZE_EXT)
defconsti(env, "GL-TEXTURE-INTENSITY-SIZE-EXT", (GLenum) GL_TEXTURE_INTENSITY_SIZE_EXT, "GL_TEXTURE_INTENSITY_SIZE_EXT");
#endif
#if defined(GL_REPLACE_EXT)
defconsti(env, "GL-REPLACE-EXT", (GLenum) GL_REPLACE_EXT, "GL_REPLACE_EXT");
#endif
#if defined(GL_PROXY_TEXTURE_1D)
defconsti(env, "GL-PROXY-TEXTURE-1D", (GLenum) GL_PROXY_TEXTURE_1D, "GL_PROXY_TEXTURE_1D");
#endif
#if defined(GL_PROXY_TEXTURE_1D_EXT)
defconsti(env, "GL-PROXY-TEXTURE-1D-EXT", (GLenum) GL_PROXY_TEXTURE_1D_EXT, "GL_PROXY_TEXTURE_1D_EXT");
#endif
#if defined(GL_PROXY_TEXTURE_2D)
defconsti(env, "GL-PROXY-TEXTURE-2D", (GLenum) GL_PROXY_TEXTURE_2D, "GL_PROXY_TEXTURE_2D");
#endif
#if defined(GL_PROXY_TEXTURE_2D_EXT)
defconsti(env, "GL-PROXY-TEXTURE-2D-EXT", (GLenum) GL_PROXY_TEXTURE_2D_EXT, "GL_PROXY_TEXTURE_2D_EXT");
#endif
#if defined(GL_TEXTURE_TOO_LARGE_EXT)
defconsti(env, "GL-TEXTURE-TOO-LARGE-EXT", (GLenum) GL_TEXTURE_TOO_LARGE_EXT, "GL_TEXTURE_TOO_LARGE_EXT");
#endif
#if defined(GL_TEXTURE_PRIORITY)
defconsti(env, "GL-TEXTURE-PRIORITY", (GLenum) GL_TEXTURE_PRIORITY, "GL_TEXTURE_PRIORITY");
#endif
#if defined(GL_TEXTURE_PRIORITY_EXT)
defconsti(env, "GL-TEXTURE-PRIORITY-EXT", (GLenum) GL_TEXTURE_PRIORITY_EXT, "GL_TEXTURE_PRIORITY_EXT");
#endif
#if defined(GL_TEXTURE_RESIDENT)
defconsti(env, "GL-TEXTURE-RESIDENT", (GLenum) GL_TEXTURE_RESIDENT, "GL_TEXTURE_RESIDENT");
#endif
#if defined(GL_TEXTURE_RESIDENT_EXT)
defconsti(env, "GL-TEXTURE-RESIDENT-EXT", (GLenum) GL_TEXTURE_RESIDENT_EXT, "GL_TEXTURE_RESIDENT_EXT");
#endif
#if defined(GL_TEXTURE_1D_BINDING_EXT)
defconsti(env, "GL-TEXTURE-1D-BINDING-EXT", (GLenum) GL_TEXTURE_1D_BINDING_EXT, "GL_TEXTURE_1D_BINDING_EXT");
#endif
#if defined(GL_TEXTURE_BINDING_1D)
defconsti(env, "GL-TEXTURE-BINDING-1D", (GLenum) GL_TEXTURE_BINDING_1D, "GL_TEXTURE_BINDING_1D");
#endif
#if defined(GL_TEXTURE_2D_BINDING_EXT)
defconsti(env, "GL-TEXTURE-2D-BINDING-EXT", (GLenum) GL_TEXTURE_2D_BINDING_EXT, "GL_TEXTURE_2D_BINDING_EXT");
#endif
#if defined(GL_TEXTURE_BINDING_2D)
defconsti(env, "GL-TEXTURE-BINDING-2D", (GLenum) GL_TEXTURE_BINDING_2D, "GL_TEXTURE_BINDING_2D");
#endif
#if defined(GL_TEXTURE_3D_BINDING_EXT)
defconsti(env, "GL-TEXTURE-3D-BINDING-EXT", (GLenum) GL_TEXTURE_3D_BINDING_EXT, "GL_TEXTURE_3D_BINDING_EXT");
#endif
#if defined(GL_TEXTURE_3D_BINDING_OES)
defconsti(env, "GL-TEXTURE-3D-BINDING-OES", (GLenum) GL_TEXTURE_3D_BINDING_OES, "GL_TEXTURE_3D_BINDING_OES");
#endif
#if defined(GL_TEXTURE_BINDING_3D)
defconsti(env, "GL-TEXTURE-BINDING-3D", (GLenum) GL_TEXTURE_BINDING_3D, "GL_TEXTURE_BINDING_3D");
#endif
#if defined(GL_TEXTURE_BINDING_3D_OES)
defconsti(env, "GL-TEXTURE-BINDING-3D-OES", (GLenum) GL_TEXTURE_BINDING_3D_OES, "GL_TEXTURE_BINDING_3D_OES");
#endif
#if defined(GL_PACK_SKIP_IMAGES)
defconsti(env, "GL-PACK-SKIP-IMAGES", (GLenum) GL_PACK_SKIP_IMAGES, "GL_PACK_SKIP_IMAGES");
#endif
#if defined(GL_PACK_SKIP_IMAGES_EXT)
defconsti(env, "GL-PACK-SKIP-IMAGES-EXT", (GLenum) GL_PACK_SKIP_IMAGES_EXT, "GL_PACK_SKIP_IMAGES_EXT");
#endif
#if defined(GL_PACK_IMAGE_HEIGHT)
defconsti(env, "GL-PACK-IMAGE-HEIGHT", (GLenum) GL_PACK_IMAGE_HEIGHT, "GL_PACK_IMAGE_HEIGHT");
#endif
#if defined(GL_PACK_IMAGE_HEIGHT_EXT)
defconsti(env, "GL-PACK-IMAGE-HEIGHT-EXT", (GLenum) GL_PACK_IMAGE_HEIGHT_EXT, "GL_PACK_IMAGE_HEIGHT_EXT");
#endif
#if defined(GL_UNPACK_SKIP_IMAGES)
defconsti(env, "GL-UNPACK-SKIP-IMAGES", (GLenum) GL_UNPACK_SKIP_IMAGES, "GL_UNPACK_SKIP_IMAGES");
#endif
#if defined(GL_UNPACK_SKIP_IMAGES_EXT)
defconsti(env, "GL-UNPACK-SKIP-IMAGES-EXT", (GLenum) GL_UNPACK_SKIP_IMAGES_EXT, "GL_UNPACK_SKIP_IMAGES_EXT");
#endif
#if defined(GL_UNPACK_IMAGE_HEIGHT)
defconsti(env, "GL-UNPACK-IMAGE-HEIGHT", (GLenum) GL_UNPACK_IMAGE_HEIGHT, "GL_UNPACK_IMAGE_HEIGHT");
#endif
#if defined(GL_UNPACK_IMAGE_HEIGHT_EXT)
defconsti(env, "GL-UNPACK-IMAGE-HEIGHT-EXT", (GLenum) GL_UNPACK_IMAGE_HEIGHT_EXT, "GL_UNPACK_IMAGE_HEIGHT_EXT");
#endif
#if defined(GL_TEXTURE_3D)
defconsti(env, "GL-TEXTURE-3D", (GLenum) GL_TEXTURE_3D, "GL_TEXTURE_3D");
#endif
#if defined(GL_TEXTURE_3D_EXT)
defconsti(env, "GL-TEXTURE-3D-EXT", (GLenum) GL_TEXTURE_3D_EXT, "GL_TEXTURE_3D_EXT");
#endif
#if defined(GL_TEXTURE_3D_OES)
defconsti(env, "GL-TEXTURE-3D-OES", (GLenum) GL_TEXTURE_3D_OES, "GL_TEXTURE_3D_OES");
#endif
#if defined(GL_PROXY_TEXTURE_3D)
defconsti(env, "GL-PROXY-TEXTURE-3D", (GLenum) GL_PROXY_TEXTURE_3D, "GL_PROXY_TEXTURE_3D");
#endif
#if defined(GL_PROXY_TEXTURE_3D_EXT)
defconsti(env, "GL-PROXY-TEXTURE-3D-EXT", (GLenum) GL_PROXY_TEXTURE_3D_EXT, "GL_PROXY_TEXTURE_3D_EXT");
#endif
#if defined(GL_TEXTURE_DEPTH)
defconsti(env, "GL-TEXTURE-DEPTH", (GLenum) GL_TEXTURE_DEPTH, "GL_TEXTURE_DEPTH");
#endif
#if defined(GL_TEXTURE_DEPTH_EXT)
defconsti(env, "GL-TEXTURE-DEPTH-EXT", (GLenum) GL_TEXTURE_DEPTH_EXT, "GL_TEXTURE_DEPTH_EXT");
#endif
#if defined(GL_TEXTURE_WRAP_R)
defconsti(env, "GL-TEXTURE-WRAP-R", (GLenum) GL_TEXTURE_WRAP_R, "GL_TEXTURE_WRAP_R");
#endif
#if defined(GL_TEXTURE_WRAP_R_EXT)
defconsti(env, "GL-TEXTURE-WRAP-R-EXT", (GLenum) GL_TEXTURE_WRAP_R_EXT, "GL_TEXTURE_WRAP_R_EXT");
#endif
#if defined(GL_TEXTURE_WRAP_R_OES)
defconsti(env, "GL-TEXTURE-WRAP-R-OES", (GLenum) GL_TEXTURE_WRAP_R_OES, "GL_TEXTURE_WRAP_R_OES");
#endif
#if defined(GL_MAX_3D_TEXTURE_SIZE)
defconsti(env, "GL-MAX-3D-TEXTURE-SIZE", (GLenum) GL_MAX_3D_TEXTURE_SIZE, "GL_MAX_3D_TEXTURE_SIZE");
#endif
#if defined(GL_MAX_3D_TEXTURE_SIZE_EXT)
defconsti(env, "GL-MAX-3D-TEXTURE-SIZE-EXT", (GLenum) GL_MAX_3D_TEXTURE_SIZE_EXT, "GL_MAX_3D_TEXTURE_SIZE_EXT");
#endif
#if defined(GL_MAX_3D_TEXTURE_SIZE_OES)
defconsti(env, "GL-MAX-3D-TEXTURE-SIZE-OES", (GLenum) GL_MAX_3D_TEXTURE_SIZE_OES, "GL_MAX_3D_TEXTURE_SIZE_OES");
#endif
#if defined(GL_VERTEX_ARRAY)
defconsti(env, "GL-VERTEX-ARRAY", (GLenum) GL_VERTEX_ARRAY, "GL_VERTEX_ARRAY");
#endif
#if defined(GL_VERTEX_ARRAY_EXT)
defconsti(env, "GL-VERTEX-ARRAY-EXT", (GLenum) GL_VERTEX_ARRAY_EXT, "GL_VERTEX_ARRAY_EXT");
#endif
#if defined(GL_VERTEX_ARRAY_KHR)
defconsti(env, "GL-VERTEX-ARRAY-KHR", (GLenum) GL_VERTEX_ARRAY_KHR, "GL_VERTEX_ARRAY_KHR");
#endif
#if defined(GL_NORMAL_ARRAY)
defconsti(env, "GL-NORMAL-ARRAY", (GLenum) GL_NORMAL_ARRAY, "GL_NORMAL_ARRAY");
#endif
#if defined(GL_NORMAL_ARRAY_EXT)
defconsti(env, "GL-NORMAL-ARRAY-EXT", (GLenum) GL_NORMAL_ARRAY_EXT, "GL_NORMAL_ARRAY_EXT");
#endif
#if defined(GL_COLOR_ARRAY)
defconsti(env, "GL-COLOR-ARRAY", (GLenum) GL_COLOR_ARRAY, "GL_COLOR_ARRAY");
#endif
#if defined(GL_COLOR_ARRAY_EXT)
defconsti(env, "GL-COLOR-ARRAY-EXT", (GLenum) GL_COLOR_ARRAY_EXT, "GL_COLOR_ARRAY_EXT");
#endif
#if defined(GL_INDEX_ARRAY)
defconsti(env, "GL-INDEX-ARRAY", (GLenum) GL_INDEX_ARRAY, "GL_INDEX_ARRAY");
#endif
#if defined(GL_INDEX_ARRAY_EXT)
defconsti(env, "GL-INDEX-ARRAY-EXT", (GLenum) GL_INDEX_ARRAY_EXT, "GL_INDEX_ARRAY_EXT");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY)
defconsti(env, "GL-TEXTURE-COORD-ARRAY", (GLenum) GL_TEXTURE_COORD_ARRAY, "GL_TEXTURE_COORD_ARRAY");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_EXT)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-EXT", (GLenum) GL_TEXTURE_COORD_ARRAY_EXT, "GL_TEXTURE_COORD_ARRAY_EXT");
#endif
#if defined(GL_EDGE_FLAG_ARRAY)
defconsti(env, "GL-EDGE-FLAG-ARRAY", (GLenum) GL_EDGE_FLAG_ARRAY, "GL_EDGE_FLAG_ARRAY");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_EXT)
defconsti(env, "GL-EDGE-FLAG-ARRAY-EXT", (GLenum) GL_EDGE_FLAG_ARRAY_EXT, "GL_EDGE_FLAG_ARRAY_EXT");
#endif
#if defined(GL_VERTEX_ARRAY_SIZE)
defconsti(env, "GL-VERTEX-ARRAY-SIZE", (GLenum) GL_VERTEX_ARRAY_SIZE, "GL_VERTEX_ARRAY_SIZE");
#endif
#if defined(GL_VERTEX_ARRAY_SIZE_EXT)
defconsti(env, "GL-VERTEX-ARRAY-SIZE-EXT", (GLenum) GL_VERTEX_ARRAY_SIZE_EXT, "GL_VERTEX_ARRAY_SIZE_EXT");
#endif
#if defined(GL_VERTEX_ARRAY_TYPE)
defconsti(env, "GL-VERTEX-ARRAY-TYPE", (GLenum) GL_VERTEX_ARRAY_TYPE, "GL_VERTEX_ARRAY_TYPE");
#endif
#if defined(GL_VERTEX_ARRAY_TYPE_EXT)
defconsti(env, "GL-VERTEX-ARRAY-TYPE-EXT", (GLenum) GL_VERTEX_ARRAY_TYPE_EXT, "GL_VERTEX_ARRAY_TYPE_EXT");
#endif
#if defined(GL_VERTEX_ARRAY_STRIDE)
defconsti(env, "GL-VERTEX-ARRAY-STRIDE", (GLenum) GL_VERTEX_ARRAY_STRIDE, "GL_VERTEX_ARRAY_STRIDE");
#endif
#if defined(GL_VERTEX_ARRAY_STRIDE_EXT)
defconsti(env, "GL-VERTEX-ARRAY-STRIDE-EXT", (GLenum) GL_VERTEX_ARRAY_STRIDE_EXT, "GL_VERTEX_ARRAY_STRIDE_EXT");
#endif
#if defined(GL_VERTEX_ARRAY_COUNT_EXT)
defconsti(env, "GL-VERTEX-ARRAY-COUNT-EXT", (GLenum) GL_VERTEX_ARRAY_COUNT_EXT, "GL_VERTEX_ARRAY_COUNT_EXT");
#endif
#if defined(GL_NORMAL_ARRAY_TYPE)
defconsti(env, "GL-NORMAL-ARRAY-TYPE", (GLenum) GL_NORMAL_ARRAY_TYPE, "GL_NORMAL_ARRAY_TYPE");
#endif
#if defined(GL_NORMAL_ARRAY_TYPE_EXT)
defconsti(env, "GL-NORMAL-ARRAY-TYPE-EXT", (GLenum) GL_NORMAL_ARRAY_TYPE_EXT, "GL_NORMAL_ARRAY_TYPE_EXT");
#endif
#if defined(GL_NORMAL_ARRAY_STRIDE)
defconsti(env, "GL-NORMAL-ARRAY-STRIDE", (GLenum) GL_NORMAL_ARRAY_STRIDE, "GL_NORMAL_ARRAY_STRIDE");
#endif
#if defined(GL_NORMAL_ARRAY_STRIDE_EXT)
defconsti(env, "GL-NORMAL-ARRAY-STRIDE-EXT", (GLenum) GL_NORMAL_ARRAY_STRIDE_EXT, "GL_NORMAL_ARRAY_STRIDE_EXT");
#endif
#if defined(GL_NORMAL_ARRAY_COUNT_EXT)
defconsti(env, "GL-NORMAL-ARRAY-COUNT-EXT", (GLenum) GL_NORMAL_ARRAY_COUNT_EXT, "GL_NORMAL_ARRAY_COUNT_EXT");
#endif
#if defined(GL_COLOR_ARRAY_SIZE)
defconsti(env, "GL-COLOR-ARRAY-SIZE", (GLenum) GL_COLOR_ARRAY_SIZE, "GL_COLOR_ARRAY_SIZE");
#endif
#if defined(GL_COLOR_ARRAY_SIZE_EXT)
defconsti(env, "GL-COLOR-ARRAY-SIZE-EXT", (GLenum) GL_COLOR_ARRAY_SIZE_EXT, "GL_COLOR_ARRAY_SIZE_EXT");
#endif
#if defined(GL_COLOR_ARRAY_TYPE)
defconsti(env, "GL-COLOR-ARRAY-TYPE", (GLenum) GL_COLOR_ARRAY_TYPE, "GL_COLOR_ARRAY_TYPE");
#endif
#if defined(GL_COLOR_ARRAY_TYPE_EXT)
defconsti(env, "GL-COLOR-ARRAY-TYPE-EXT", (GLenum) GL_COLOR_ARRAY_TYPE_EXT, "GL_COLOR_ARRAY_TYPE_EXT");
#endif
#if defined(GL_COLOR_ARRAY_STRIDE)
defconsti(env, "GL-COLOR-ARRAY-STRIDE", (GLenum) GL_COLOR_ARRAY_STRIDE, "GL_COLOR_ARRAY_STRIDE");
#endif
#if defined(GL_COLOR_ARRAY_STRIDE_EXT)
defconsti(env, "GL-COLOR-ARRAY-STRIDE-EXT", (GLenum) GL_COLOR_ARRAY_STRIDE_EXT, "GL_COLOR_ARRAY_STRIDE_EXT");
#endif
#if defined(GL_COLOR_ARRAY_COUNT_EXT)
defconsti(env, "GL-COLOR-ARRAY-COUNT-EXT", (GLenum) GL_COLOR_ARRAY_COUNT_EXT, "GL_COLOR_ARRAY_COUNT_EXT");
#endif
#if defined(GL_INDEX_ARRAY_TYPE)
defconsti(env, "GL-INDEX-ARRAY-TYPE", (GLenum) GL_INDEX_ARRAY_TYPE, "GL_INDEX_ARRAY_TYPE");
#endif
#if defined(GL_INDEX_ARRAY_TYPE_EXT)
defconsti(env, "GL-INDEX-ARRAY-TYPE-EXT", (GLenum) GL_INDEX_ARRAY_TYPE_EXT, "GL_INDEX_ARRAY_TYPE_EXT");
#endif
#if defined(GL_INDEX_ARRAY_STRIDE)
defconsti(env, "GL-INDEX-ARRAY-STRIDE", (GLenum) GL_INDEX_ARRAY_STRIDE, "GL_INDEX_ARRAY_STRIDE");
#endif
#if defined(GL_INDEX_ARRAY_STRIDE_EXT)
defconsti(env, "GL-INDEX-ARRAY-STRIDE-EXT", (GLenum) GL_INDEX_ARRAY_STRIDE_EXT, "GL_INDEX_ARRAY_STRIDE_EXT");
#endif
#if defined(GL_INDEX_ARRAY_COUNT_EXT)
defconsti(env, "GL-INDEX-ARRAY-COUNT-EXT", (GLenum) GL_INDEX_ARRAY_COUNT_EXT, "GL_INDEX_ARRAY_COUNT_EXT");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_SIZE)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-SIZE", (GLenum) GL_TEXTURE_COORD_ARRAY_SIZE, "GL_TEXTURE_COORD_ARRAY_SIZE");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_SIZE_EXT)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-SIZE-EXT", (GLenum) GL_TEXTURE_COORD_ARRAY_SIZE_EXT, "GL_TEXTURE_COORD_ARRAY_SIZE_EXT");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_TYPE)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-TYPE", (GLenum) GL_TEXTURE_COORD_ARRAY_TYPE, "GL_TEXTURE_COORD_ARRAY_TYPE");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_TYPE_EXT)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-TYPE-EXT", (GLenum) GL_TEXTURE_COORD_ARRAY_TYPE_EXT, "GL_TEXTURE_COORD_ARRAY_TYPE_EXT");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_STRIDE)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-STRIDE", (GLenum) GL_TEXTURE_COORD_ARRAY_STRIDE, "GL_TEXTURE_COORD_ARRAY_STRIDE");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_STRIDE_EXT)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-STRIDE-EXT", (GLenum) GL_TEXTURE_COORD_ARRAY_STRIDE_EXT, "GL_TEXTURE_COORD_ARRAY_STRIDE_EXT");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_COUNT_EXT)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-COUNT-EXT", (GLenum) GL_TEXTURE_COORD_ARRAY_COUNT_EXT, "GL_TEXTURE_COORD_ARRAY_COUNT_EXT");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_STRIDE)
defconsti(env, "GL-EDGE-FLAG-ARRAY-STRIDE", (GLenum) GL_EDGE_FLAG_ARRAY_STRIDE, "GL_EDGE_FLAG_ARRAY_STRIDE");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_STRIDE_EXT)
defconsti(env, "GL-EDGE-FLAG-ARRAY-STRIDE-EXT", (GLenum) GL_EDGE_FLAG_ARRAY_STRIDE_EXT, "GL_EDGE_FLAG_ARRAY_STRIDE_EXT");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_COUNT_EXT)
defconsti(env, "GL-EDGE-FLAG-ARRAY-COUNT-EXT", (GLenum) GL_EDGE_FLAG_ARRAY_COUNT_EXT, "GL_EDGE_FLAG_ARRAY_COUNT_EXT");
#endif
#if defined(GL_VERTEX_ARRAY_POINTER)
defconsti(env, "GL-VERTEX-ARRAY-POINTER", (GLenum) GL_VERTEX_ARRAY_POINTER, "GL_VERTEX_ARRAY_POINTER");
#endif
#if defined(GL_VERTEX_ARRAY_POINTER_EXT)
defconsti(env, "GL-VERTEX-ARRAY-POINTER-EXT", (GLenum) GL_VERTEX_ARRAY_POINTER_EXT, "GL_VERTEX_ARRAY_POINTER_EXT");
#endif
#if defined(GL_NORMAL_ARRAY_POINTER)
defconsti(env, "GL-NORMAL-ARRAY-POINTER", (GLenum) GL_NORMAL_ARRAY_POINTER, "GL_NORMAL_ARRAY_POINTER");
#endif
#if defined(GL_NORMAL_ARRAY_POINTER_EXT)
defconsti(env, "GL-NORMAL-ARRAY-POINTER-EXT", (GLenum) GL_NORMAL_ARRAY_POINTER_EXT, "GL_NORMAL_ARRAY_POINTER_EXT");
#endif
#if defined(GL_COLOR_ARRAY_POINTER)
defconsti(env, "GL-COLOR-ARRAY-POINTER", (GLenum) GL_COLOR_ARRAY_POINTER, "GL_COLOR_ARRAY_POINTER");
#endif
#if defined(GL_COLOR_ARRAY_POINTER_EXT)
defconsti(env, "GL-COLOR-ARRAY-POINTER-EXT", (GLenum) GL_COLOR_ARRAY_POINTER_EXT, "GL_COLOR_ARRAY_POINTER_EXT");
#endif
#if defined(GL_INDEX_ARRAY_POINTER)
defconsti(env, "GL-INDEX-ARRAY-POINTER", (GLenum) GL_INDEX_ARRAY_POINTER, "GL_INDEX_ARRAY_POINTER");
#endif
#if defined(GL_INDEX_ARRAY_POINTER_EXT)
defconsti(env, "GL-INDEX-ARRAY-POINTER-EXT", (GLenum) GL_INDEX_ARRAY_POINTER_EXT, "GL_INDEX_ARRAY_POINTER_EXT");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_POINTER)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-POINTER", (GLenum) GL_TEXTURE_COORD_ARRAY_POINTER, "GL_TEXTURE_COORD_ARRAY_POINTER");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_POINTER_EXT)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-POINTER-EXT", (GLenum) GL_TEXTURE_COORD_ARRAY_POINTER_EXT, "GL_TEXTURE_COORD_ARRAY_POINTER_EXT");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_POINTER)
defconsti(env, "GL-EDGE-FLAG-ARRAY-POINTER", (GLenum) GL_EDGE_FLAG_ARRAY_POINTER, "GL_EDGE_FLAG_ARRAY_POINTER");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_POINTER_EXT)
defconsti(env, "GL-EDGE-FLAG-ARRAY-POINTER-EXT", (GLenum) GL_EDGE_FLAG_ARRAY_POINTER_EXT, "GL_EDGE_FLAG_ARRAY_POINTER_EXT");
#endif
#if defined(GL_INTERLACE_SGIX)
defconsti(env, "GL-INTERLACE-SGIX", (GLenum) GL_INTERLACE_SGIX, "GL_INTERLACE_SGIX");
#endif
#if defined(GL_DETAIL_TEXTURE_2D_SGIS)
defconsti(env, "GL-DETAIL-TEXTURE-2D-SGIS", (GLenum) GL_DETAIL_TEXTURE_2D_SGIS, "GL_DETAIL_TEXTURE_2D_SGIS");
#endif
#if defined(GL_DETAIL_TEXTURE_2D_BINDING_SGIS)
defconsti(env, "GL-DETAIL-TEXTURE-2D-BINDING-SGIS", (GLenum) GL_DETAIL_TEXTURE_2D_BINDING_SGIS, "GL_DETAIL_TEXTURE_2D_BINDING_SGIS");
#endif
#if defined(GL_LINEAR_DETAIL_SGIS)
defconsti(env, "GL-LINEAR-DETAIL-SGIS", (GLenum) GL_LINEAR_DETAIL_SGIS, "GL_LINEAR_DETAIL_SGIS");
#endif
#if defined(GL_LINEAR_DETAIL_ALPHA_SGIS)
defconsti(env, "GL-LINEAR-DETAIL-ALPHA-SGIS", (GLenum) GL_LINEAR_DETAIL_ALPHA_SGIS, "GL_LINEAR_DETAIL_ALPHA_SGIS");
#endif
#if defined(GL_LINEAR_DETAIL_COLOR_SGIS)
defconsti(env, "GL-LINEAR-DETAIL-COLOR-SGIS", (GLenum) GL_LINEAR_DETAIL_COLOR_SGIS, "GL_LINEAR_DETAIL_COLOR_SGIS");
#endif
#if defined(GL_DETAIL_TEXTURE_LEVEL_SGIS)
defconsti(env, "GL-DETAIL-TEXTURE-LEVEL-SGIS", (GLenum) GL_DETAIL_TEXTURE_LEVEL_SGIS, "GL_DETAIL_TEXTURE_LEVEL_SGIS");
#endif
#if defined(GL_DETAIL_TEXTURE_MODE_SGIS)
defconsti(env, "GL-DETAIL-TEXTURE-MODE-SGIS", (GLenum) GL_DETAIL_TEXTURE_MODE_SGIS, "GL_DETAIL_TEXTURE_MODE_SGIS");
#endif
#if defined(GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS)
defconsti(env, "GL-DETAIL-TEXTURE-FUNC-POINTS-SGIS", (GLenum) GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS, "GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS");
#endif
#if defined(GL_MULTISAMPLE)
defconsti(env, "GL-MULTISAMPLE", (GLenum) GL_MULTISAMPLE, "GL_MULTISAMPLE");
#endif
#if defined(GL_MULTISAMPLE_ARB)
defconsti(env, "GL-MULTISAMPLE-ARB", (GLenum) GL_MULTISAMPLE_ARB, "GL_MULTISAMPLE_ARB");
#endif
#if defined(GL_MULTISAMPLE_EXT)
defconsti(env, "GL-MULTISAMPLE-EXT", (GLenum) GL_MULTISAMPLE_EXT, "GL_MULTISAMPLE_EXT");
#endif
#if defined(GL_MULTISAMPLE_SGIS)
defconsti(env, "GL-MULTISAMPLE-SGIS", (GLenum) GL_MULTISAMPLE_SGIS, "GL_MULTISAMPLE_SGIS");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_COVERAGE)
defconsti(env, "GL-SAMPLE-ALPHA-TO-COVERAGE", (GLenum) GL_SAMPLE_ALPHA_TO_COVERAGE, "GL_SAMPLE_ALPHA_TO_COVERAGE");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_COVERAGE_ARB)
defconsti(env, "GL-SAMPLE-ALPHA-TO-COVERAGE-ARB", (GLenum) GL_SAMPLE_ALPHA_TO_COVERAGE_ARB, "GL_SAMPLE_ALPHA_TO_COVERAGE_ARB");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_MASK_EXT)
defconsti(env, "GL-SAMPLE-ALPHA-TO-MASK-EXT", (GLenum) GL_SAMPLE_ALPHA_TO_MASK_EXT, "GL_SAMPLE_ALPHA_TO_MASK_EXT");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_MASK_SGIS)
defconsti(env, "GL-SAMPLE-ALPHA-TO-MASK-SGIS", (GLenum) GL_SAMPLE_ALPHA_TO_MASK_SGIS, "GL_SAMPLE_ALPHA_TO_MASK_SGIS");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_ONE)
defconsti(env, "GL-SAMPLE-ALPHA-TO-ONE", (GLenum) GL_SAMPLE_ALPHA_TO_ONE, "GL_SAMPLE_ALPHA_TO_ONE");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_ONE_ARB)
defconsti(env, "GL-SAMPLE-ALPHA-TO-ONE-ARB", (GLenum) GL_SAMPLE_ALPHA_TO_ONE_ARB, "GL_SAMPLE_ALPHA_TO_ONE_ARB");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_ONE_EXT)
defconsti(env, "GL-SAMPLE-ALPHA-TO-ONE-EXT", (GLenum) GL_SAMPLE_ALPHA_TO_ONE_EXT, "GL_SAMPLE_ALPHA_TO_ONE_EXT");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_ONE_SGIS)
defconsti(env, "GL-SAMPLE-ALPHA-TO-ONE-SGIS", (GLenum) GL_SAMPLE_ALPHA_TO_ONE_SGIS, "GL_SAMPLE_ALPHA_TO_ONE_SGIS");
#endif
#if defined(GL_SAMPLE_COVERAGE)
defconsti(env, "GL-SAMPLE-COVERAGE", (GLenum) GL_SAMPLE_COVERAGE, "GL_SAMPLE_COVERAGE");
#endif
#if defined(GL_SAMPLE_COVERAGE_ARB)
defconsti(env, "GL-SAMPLE-COVERAGE-ARB", (GLenum) GL_SAMPLE_COVERAGE_ARB, "GL_SAMPLE_COVERAGE_ARB");
#endif
#if defined(GL_SAMPLE_MASK_EXT)
defconsti(env, "GL-SAMPLE-MASK-EXT", (GLenum) GL_SAMPLE_MASK_EXT, "GL_SAMPLE_MASK_EXT");
#endif
#if defined(GL_SAMPLE_MASK_SGIS)
defconsti(env, "GL-SAMPLE-MASK-SGIS", (GLenum) GL_SAMPLE_MASK_SGIS, "GL_SAMPLE_MASK_SGIS");
#endif
#if defined(GL_1PASS_EXT)
defconsti(env, "GL-1PASS-EXT", (GLenum) GL_1PASS_EXT, "GL_1PASS_EXT");
#endif
#if defined(GL_1PASS_SGIS)
defconsti(env, "GL-1PASS-SGIS", (GLenum) GL_1PASS_SGIS, "GL_1PASS_SGIS");
#endif
#if defined(GL_2PASS_0_EXT)
defconsti(env, "GL-2PASS-0-EXT", (GLenum) GL_2PASS_0_EXT, "GL_2PASS_0_EXT");
#endif
#if defined(GL_2PASS_0_SGIS)
defconsti(env, "GL-2PASS-0-SGIS", (GLenum) GL_2PASS_0_SGIS, "GL_2PASS_0_SGIS");
#endif
#if defined(GL_2PASS_1_EXT)
defconsti(env, "GL-2PASS-1-EXT", (GLenum) GL_2PASS_1_EXT, "GL_2PASS_1_EXT");
#endif
#if defined(GL_2PASS_1_SGIS)
defconsti(env, "GL-2PASS-1-SGIS", (GLenum) GL_2PASS_1_SGIS, "GL_2PASS_1_SGIS");
#endif
#if defined(GL_4PASS_0_EXT)
defconsti(env, "GL-4PASS-0-EXT", (GLenum) GL_4PASS_0_EXT, "GL_4PASS_0_EXT");
#endif
#if defined(GL_4PASS_0_SGIS)
defconsti(env, "GL-4PASS-0-SGIS", (GLenum) GL_4PASS_0_SGIS, "GL_4PASS_0_SGIS");
#endif
#if defined(GL_4PASS_1_EXT)
defconsti(env, "GL-4PASS-1-EXT", (GLenum) GL_4PASS_1_EXT, "GL_4PASS_1_EXT");
#endif
#if defined(GL_4PASS_1_SGIS)
defconsti(env, "GL-4PASS-1-SGIS", (GLenum) GL_4PASS_1_SGIS, "GL_4PASS_1_SGIS");
#endif
#if defined(GL_4PASS_2_EXT)
defconsti(env, "GL-4PASS-2-EXT", (GLenum) GL_4PASS_2_EXT, "GL_4PASS_2_EXT");
#endif
#if defined(GL_4PASS_2_SGIS)
defconsti(env, "GL-4PASS-2-SGIS", (GLenum) GL_4PASS_2_SGIS, "GL_4PASS_2_SGIS");
#endif
#if defined(GL_4PASS_3_EXT)
defconsti(env, "GL-4PASS-3-EXT", (GLenum) GL_4PASS_3_EXT, "GL_4PASS_3_EXT");
#endif
#if defined(GL_4PASS_3_SGIS)
defconsti(env, "GL-4PASS-3-SGIS", (GLenum) GL_4PASS_3_SGIS, "GL_4PASS_3_SGIS");
#endif
#if defined(GL_SAMPLE_BUFFERS)
defconsti(env, "GL-SAMPLE-BUFFERS", (GLenum) GL_SAMPLE_BUFFERS, "GL_SAMPLE_BUFFERS");
#endif
#if defined(GL_SAMPLE_BUFFERS_ARB)
defconsti(env, "GL-SAMPLE-BUFFERS-ARB", (GLenum) GL_SAMPLE_BUFFERS_ARB, "GL_SAMPLE_BUFFERS_ARB");
#endif
#if defined(GL_SAMPLE_BUFFERS_EXT)
defconsti(env, "GL-SAMPLE-BUFFERS-EXT", (GLenum) GL_SAMPLE_BUFFERS_EXT, "GL_SAMPLE_BUFFERS_EXT");
#endif
#if defined(GL_SAMPLE_BUFFERS_SGIS)
defconsti(env, "GL-SAMPLE-BUFFERS-SGIS", (GLenum) GL_SAMPLE_BUFFERS_SGIS, "GL_SAMPLE_BUFFERS_SGIS");
#endif
#if defined(GL_SAMPLES)
defconsti(env, "GL-SAMPLES", (GLenum) GL_SAMPLES, "GL_SAMPLES");
#endif
#if defined(GL_SAMPLES_ARB)
defconsti(env, "GL-SAMPLES-ARB", (GLenum) GL_SAMPLES_ARB, "GL_SAMPLES_ARB");
#endif
#if defined(GL_SAMPLES_EXT)
defconsti(env, "GL-SAMPLES-EXT", (GLenum) GL_SAMPLES_EXT, "GL_SAMPLES_EXT");
#endif
#if defined(GL_SAMPLES_SGIS)
defconsti(env, "GL-SAMPLES-SGIS", (GLenum) GL_SAMPLES_SGIS, "GL_SAMPLES_SGIS");
#endif
#if defined(GL_SAMPLE_COVERAGE_VALUE)
defconsti(env, "GL-SAMPLE-COVERAGE-VALUE", (GLenum) GL_SAMPLE_COVERAGE_VALUE, "GL_SAMPLE_COVERAGE_VALUE");
#endif
#if defined(GL_SAMPLE_COVERAGE_VALUE_ARB)
defconsti(env, "GL-SAMPLE-COVERAGE-VALUE-ARB", (GLenum) GL_SAMPLE_COVERAGE_VALUE_ARB, "GL_SAMPLE_COVERAGE_VALUE_ARB");
#endif
#if defined(GL_SAMPLE_MASK_VALUE_EXT)
defconsti(env, "GL-SAMPLE-MASK-VALUE-EXT", (GLenum) GL_SAMPLE_MASK_VALUE_EXT, "GL_SAMPLE_MASK_VALUE_EXT");
#endif
#if defined(GL_SAMPLE_MASK_VALUE_SGIS)
defconsti(env, "GL-SAMPLE-MASK-VALUE-SGIS", (GLenum) GL_SAMPLE_MASK_VALUE_SGIS, "GL_SAMPLE_MASK_VALUE_SGIS");
#endif
#if defined(GL_SAMPLE_COVERAGE_INVERT)
defconsti(env, "GL-SAMPLE-COVERAGE-INVERT", (GLenum) GL_SAMPLE_COVERAGE_INVERT, "GL_SAMPLE_COVERAGE_INVERT");
#endif
#if defined(GL_SAMPLE_COVERAGE_INVERT_ARB)
defconsti(env, "GL-SAMPLE-COVERAGE-INVERT-ARB", (GLenum) GL_SAMPLE_COVERAGE_INVERT_ARB, "GL_SAMPLE_COVERAGE_INVERT_ARB");
#endif
#if defined(GL_SAMPLE_MASK_INVERT_EXT)
defconsti(env, "GL-SAMPLE-MASK-INVERT-EXT", (GLenum) GL_SAMPLE_MASK_INVERT_EXT, "GL_SAMPLE_MASK_INVERT_EXT");
#endif
#if defined(GL_SAMPLE_MASK_INVERT_SGIS)
defconsti(env, "GL-SAMPLE-MASK-INVERT-SGIS", (GLenum) GL_SAMPLE_MASK_INVERT_SGIS, "GL_SAMPLE_MASK_INVERT_SGIS");
#endif
#if defined(GL_SAMPLE_PATTERN_EXT)
defconsti(env, "GL-SAMPLE-PATTERN-EXT", (GLenum) GL_SAMPLE_PATTERN_EXT, "GL_SAMPLE_PATTERN_EXT");
#endif
#if defined(GL_SAMPLE_PATTERN_SGIS)
defconsti(env, "GL-SAMPLE-PATTERN-SGIS", (GLenum) GL_SAMPLE_PATTERN_SGIS, "GL_SAMPLE_PATTERN_SGIS");
#endif
#if defined(GL_LINEAR_SHARPEN_SGIS)
defconsti(env, "GL-LINEAR-SHARPEN-SGIS", (GLenum) GL_LINEAR_SHARPEN_SGIS, "GL_LINEAR_SHARPEN_SGIS");
#endif
#if defined(GL_LINEAR_SHARPEN_ALPHA_SGIS)
defconsti(env, "GL-LINEAR-SHARPEN-ALPHA-SGIS", (GLenum) GL_LINEAR_SHARPEN_ALPHA_SGIS, "GL_LINEAR_SHARPEN_ALPHA_SGIS");
#endif
#if defined(GL_LINEAR_SHARPEN_COLOR_SGIS)
defconsti(env, "GL-LINEAR-SHARPEN-COLOR-SGIS", (GLenum) GL_LINEAR_SHARPEN_COLOR_SGIS, "GL_LINEAR_SHARPEN_COLOR_SGIS");
#endif
#if defined(GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS)
defconsti(env, "GL-SHARPEN-TEXTURE-FUNC-POINTS-SGIS", (GLenum) GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS, "GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS");
#endif
#if defined(GL_COLOR_MATRIX)
defconsti(env, "GL-COLOR-MATRIX", (GLenum) GL_COLOR_MATRIX, "GL_COLOR_MATRIX");
#endif
#if defined(GL_COLOR_MATRIX_SGI)
defconsti(env, "GL-COLOR-MATRIX-SGI", (GLenum) GL_COLOR_MATRIX_SGI, "GL_COLOR_MATRIX_SGI");
#endif
#if defined(GL_COLOR_MATRIX_STACK_DEPTH)
defconsti(env, "GL-COLOR-MATRIX-STACK-DEPTH", (GLenum) GL_COLOR_MATRIX_STACK_DEPTH, "GL_COLOR_MATRIX_STACK_DEPTH");
#endif
#if defined(GL_COLOR_MATRIX_STACK_DEPTH_SGI)
defconsti(env, "GL-COLOR-MATRIX-STACK-DEPTH-SGI", (GLenum) GL_COLOR_MATRIX_STACK_DEPTH_SGI, "GL_COLOR_MATRIX_STACK_DEPTH_SGI");
#endif
#if defined(GL_MAX_COLOR_MATRIX_STACK_DEPTH)
defconsti(env, "GL-MAX-COLOR-MATRIX-STACK-DEPTH", (GLenum) GL_MAX_COLOR_MATRIX_STACK_DEPTH, "GL_MAX_COLOR_MATRIX_STACK_DEPTH");
#endif
#if defined(GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI)
defconsti(env, "GL-MAX-COLOR-MATRIX-STACK-DEPTH-SGI", (GLenum) GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI, "GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_RED_SCALE)
defconsti(env, "GL-POST-COLOR-MATRIX-RED-SCALE", (GLenum) GL_POST_COLOR_MATRIX_RED_SCALE, "GL_POST_COLOR_MATRIX_RED_SCALE");
#endif
#if defined(GL_POST_COLOR_MATRIX_RED_SCALE_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-RED-SCALE-SGI", (GLenum) GL_POST_COLOR_MATRIX_RED_SCALE_SGI, "GL_POST_COLOR_MATRIX_RED_SCALE_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_GREEN_SCALE)
defconsti(env, "GL-POST-COLOR-MATRIX-GREEN-SCALE", (GLenum) GL_POST_COLOR_MATRIX_GREEN_SCALE, "GL_POST_COLOR_MATRIX_GREEN_SCALE");
#endif
#if defined(GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-GREEN-SCALE-SGI", (GLenum) GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI, "GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_BLUE_SCALE)
defconsti(env, "GL-POST-COLOR-MATRIX-BLUE-SCALE", (GLenum) GL_POST_COLOR_MATRIX_BLUE_SCALE, "GL_POST_COLOR_MATRIX_BLUE_SCALE");
#endif
#if defined(GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-BLUE-SCALE-SGI", (GLenum) GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI, "GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_ALPHA_SCALE)
defconsti(env, "GL-POST-COLOR-MATRIX-ALPHA-SCALE", (GLenum) GL_POST_COLOR_MATRIX_ALPHA_SCALE, "GL_POST_COLOR_MATRIX_ALPHA_SCALE");
#endif
#if defined(GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-ALPHA-SCALE-SGI", (GLenum) GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI, "GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_RED_BIAS)
defconsti(env, "GL-POST-COLOR-MATRIX-RED-BIAS", (GLenum) GL_POST_COLOR_MATRIX_RED_BIAS, "GL_POST_COLOR_MATRIX_RED_BIAS");
#endif
#if defined(GL_POST_COLOR_MATRIX_RED_BIAS_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-RED-BIAS-SGI", (GLenum) GL_POST_COLOR_MATRIX_RED_BIAS_SGI, "GL_POST_COLOR_MATRIX_RED_BIAS_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_GREEN_BIAS)
defconsti(env, "GL-POST-COLOR-MATRIX-GREEN-BIAS", (GLenum) GL_POST_COLOR_MATRIX_GREEN_BIAS, "GL_POST_COLOR_MATRIX_GREEN_BIAS");
#endif
#if defined(GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-GREEN-BIAS-SGI", (GLenum) GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI, "GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_BLUE_BIAS)
defconsti(env, "GL-POST-COLOR-MATRIX-BLUE-BIAS", (GLenum) GL_POST_COLOR_MATRIX_BLUE_BIAS, "GL_POST_COLOR_MATRIX_BLUE_BIAS");
#endif
#if defined(GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-BLUE-BIAS-SGI", (GLenum) GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI, "GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_ALPHA_BIAS)
defconsti(env, "GL-POST-COLOR-MATRIX-ALPHA-BIAS", (GLenum) GL_POST_COLOR_MATRIX_ALPHA_BIAS, "GL_POST_COLOR_MATRIX_ALPHA_BIAS");
#endif
#if defined(GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-ALPHA-BIAS-SGI", (GLenum) GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI, "GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI");
#endif
#if defined(GL_TEXTURE_COLOR_TABLE_SGI)
defconsti(env, "GL-TEXTURE-COLOR-TABLE-SGI", (GLenum) GL_TEXTURE_COLOR_TABLE_SGI, "GL_TEXTURE_COLOR_TABLE_SGI");
#endif
#if defined(GL_PROXY_TEXTURE_COLOR_TABLE_SGI)
defconsti(env, "GL-PROXY-TEXTURE-COLOR-TABLE-SGI", (GLenum) GL_PROXY_TEXTURE_COLOR_TABLE_SGI, "GL_PROXY_TEXTURE_COLOR_TABLE_SGI");
#endif
#if defined(GL_TEXTURE_ENV_BIAS_SGIX)
defconsti(env, "GL-TEXTURE-ENV-BIAS-SGIX", (GLenum) GL_TEXTURE_ENV_BIAS_SGIX, "GL_TEXTURE_ENV_BIAS_SGIX");
#endif
#if defined(GL_SHADOW_AMBIENT_SGIX)
defconsti(env, "GL-SHADOW-AMBIENT-SGIX", (GLenum) GL_SHADOW_AMBIENT_SGIX, "GL_SHADOW_AMBIENT_SGIX");
#endif
#if defined(GL_TEXTURE_COMPARE_FAIL_VALUE_ARB)
defconsti(env, "GL-TEXTURE-COMPARE-FAIL-VALUE-ARB", (GLenum) GL_TEXTURE_COMPARE_FAIL_VALUE_ARB, "GL_TEXTURE_COMPARE_FAIL_VALUE_ARB");
#endif
#if defined(GL_BLEND_DST_RGB)
defconsti(env, "GL-BLEND-DST-RGB", (GLenum) GL_BLEND_DST_RGB, "GL_BLEND_DST_RGB");
#endif
#if defined(GL_BLEND_DST_RGB_EXT)
defconsti(env, "GL-BLEND-DST-RGB-EXT", (GLenum) GL_BLEND_DST_RGB_EXT, "GL_BLEND_DST_RGB_EXT");
#endif
#if defined(GL_BLEND_DST_RGB_OES)
defconsti(env, "GL-BLEND-DST-RGB-OES", (GLenum) GL_BLEND_DST_RGB_OES, "GL_BLEND_DST_RGB_OES");
#endif
#if defined(GL_BLEND_SRC_RGB)
defconsti(env, "GL-BLEND-SRC-RGB", (GLenum) GL_BLEND_SRC_RGB, "GL_BLEND_SRC_RGB");
#endif
#if defined(GL_BLEND_SRC_RGB_EXT)
defconsti(env, "GL-BLEND-SRC-RGB-EXT", (GLenum) GL_BLEND_SRC_RGB_EXT, "GL_BLEND_SRC_RGB_EXT");
#endif
#if defined(GL_BLEND_SRC_RGB_OES)
defconsti(env, "GL-BLEND-SRC-RGB-OES", (GLenum) GL_BLEND_SRC_RGB_OES, "GL_BLEND_SRC_RGB_OES");
#endif
#if defined(GL_BLEND_DST_ALPHA)
defconsti(env, "GL-BLEND-DST-ALPHA", (GLenum) GL_BLEND_DST_ALPHA, "GL_BLEND_DST_ALPHA");
#endif
#if defined(GL_BLEND_DST_ALPHA_EXT)
defconsti(env, "GL-BLEND-DST-ALPHA-EXT", (GLenum) GL_BLEND_DST_ALPHA_EXT, "GL_BLEND_DST_ALPHA_EXT");
#endif
#if defined(GL_BLEND_DST_ALPHA_OES)
defconsti(env, "GL-BLEND-DST-ALPHA-OES", (GLenum) GL_BLEND_DST_ALPHA_OES, "GL_BLEND_DST_ALPHA_OES");
#endif
#if defined(GL_BLEND_SRC_ALPHA)
defconsti(env, "GL-BLEND-SRC-ALPHA", (GLenum) GL_BLEND_SRC_ALPHA, "GL_BLEND_SRC_ALPHA");
#endif
#if defined(GL_BLEND_SRC_ALPHA_EXT)
defconsti(env, "GL-BLEND-SRC-ALPHA-EXT", (GLenum) GL_BLEND_SRC_ALPHA_EXT, "GL_BLEND_SRC_ALPHA_EXT");
#endif
#if defined(GL_BLEND_SRC_ALPHA_OES)
defconsti(env, "GL-BLEND-SRC-ALPHA-OES", (GLenum) GL_BLEND_SRC_ALPHA_OES, "GL_BLEND_SRC_ALPHA_OES");
#endif
#if defined(GL_422_EXT)
defconsti(env, "GL-422-EXT", (GLenum) GL_422_EXT, "GL_422_EXT");
#endif
#if defined(GL_422_REV_EXT)
defconsti(env, "GL-422-REV-EXT", (GLenum) GL_422_REV_EXT, "GL_422_REV_EXT");
#endif
#if defined(GL_422_AVERAGE_EXT)
defconsti(env, "GL-422-AVERAGE-EXT", (GLenum) GL_422_AVERAGE_EXT, "GL_422_AVERAGE_EXT");
#endif
#if defined(GL_422_REV_AVERAGE_EXT)
defconsti(env, "GL-422-REV-AVERAGE-EXT", (GLenum) GL_422_REV_AVERAGE_EXT, "GL_422_REV_AVERAGE_EXT");
#endif
#if defined(GL_COLOR_TABLE)
defconsti(env, "GL-COLOR-TABLE", (GLenum) GL_COLOR_TABLE, "GL_COLOR_TABLE");
#endif
#if defined(GL_COLOR_TABLE_SGI)
defconsti(env, "GL-COLOR-TABLE-SGI", (GLenum) GL_COLOR_TABLE_SGI, "GL_COLOR_TABLE_SGI");
#endif
#if defined(GL_POST_CONVOLUTION_COLOR_TABLE)
defconsti(env, "GL-POST-CONVOLUTION-COLOR-TABLE", (GLenum) GL_POST_CONVOLUTION_COLOR_TABLE, "GL_POST_CONVOLUTION_COLOR_TABLE");
#endif
#if defined(GL_POST_CONVOLUTION_COLOR_TABLE_SGI)
defconsti(env, "GL-POST-CONVOLUTION-COLOR-TABLE-SGI", (GLenum) GL_POST_CONVOLUTION_COLOR_TABLE_SGI, "GL_POST_CONVOLUTION_COLOR_TABLE_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_COLOR_TABLE)
defconsti(env, "GL-POST-COLOR-MATRIX-COLOR-TABLE", (GLenum) GL_POST_COLOR_MATRIX_COLOR_TABLE, "GL_POST_COLOR_MATRIX_COLOR_TABLE");
#endif
#if defined(GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-COLOR-TABLE-SGI", (GLenum) GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI, "GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI");
#endif
#if defined(GL_PROXY_COLOR_TABLE)
defconsti(env, "GL-PROXY-COLOR-TABLE", (GLenum) GL_PROXY_COLOR_TABLE, "GL_PROXY_COLOR_TABLE");
#endif
#if defined(GL_PROXY_COLOR_TABLE_SGI)
defconsti(env, "GL-PROXY-COLOR-TABLE-SGI", (GLenum) GL_PROXY_COLOR_TABLE_SGI, "GL_PROXY_COLOR_TABLE_SGI");
#endif
#if defined(GL_PROXY_POST_CONVOLUTION_COLOR_TABLE)
defconsti(env, "GL-PROXY-POST-CONVOLUTION-COLOR-TABLE", (GLenum) GL_PROXY_POST_CONVOLUTION_COLOR_TABLE, "GL_PROXY_POST_CONVOLUTION_COLOR_TABLE");
#endif
#if defined(GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI)
defconsti(env, "GL-PROXY-POST-CONVOLUTION-COLOR-TABLE-SGI", (GLenum) GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI, "GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI");
#endif
#if defined(GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE)
defconsti(env, "GL-PROXY-POST-COLOR-MATRIX-COLOR-TABLE", (GLenum) GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE, "GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE");
#endif
#if defined(GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI)
defconsti(env, "GL-PROXY-POST-COLOR-MATRIX-COLOR-TABLE-SGI", (GLenum) GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI, "GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI");
#endif
#if defined(GL_COLOR_TABLE_SCALE)
defconsti(env, "GL-COLOR-TABLE-SCALE", (GLenum) GL_COLOR_TABLE_SCALE, "GL_COLOR_TABLE_SCALE");
#endif
#if defined(GL_COLOR_TABLE_SCALE_SGI)
defconsti(env, "GL-COLOR-TABLE-SCALE-SGI", (GLenum) GL_COLOR_TABLE_SCALE_SGI, "GL_COLOR_TABLE_SCALE_SGI");
#endif
#if defined(GL_COLOR_TABLE_BIAS)
defconsti(env, "GL-COLOR-TABLE-BIAS", (GLenum) GL_COLOR_TABLE_BIAS, "GL_COLOR_TABLE_BIAS");
#endif
#if defined(GL_COLOR_TABLE_BIAS_SGI)
defconsti(env, "GL-COLOR-TABLE-BIAS-SGI", (GLenum) GL_COLOR_TABLE_BIAS_SGI, "GL_COLOR_TABLE_BIAS_SGI");
#endif
#if defined(GL_COLOR_TABLE_FORMAT)
defconsti(env, "GL-COLOR-TABLE-FORMAT", (GLenum) GL_COLOR_TABLE_FORMAT, "GL_COLOR_TABLE_FORMAT");
#endif
#if defined(GL_COLOR_TABLE_FORMAT_SGI)
defconsti(env, "GL-COLOR-TABLE-FORMAT-SGI", (GLenum) GL_COLOR_TABLE_FORMAT_SGI, "GL_COLOR_TABLE_FORMAT_SGI");
#endif
#if defined(GL_COLOR_TABLE_WIDTH)
defconsti(env, "GL-COLOR-TABLE-WIDTH", (GLenum) GL_COLOR_TABLE_WIDTH, "GL_COLOR_TABLE_WIDTH");
#endif
#if defined(GL_COLOR_TABLE_WIDTH_SGI)
defconsti(env, "GL-COLOR-TABLE-WIDTH-SGI", (GLenum) GL_COLOR_TABLE_WIDTH_SGI, "GL_COLOR_TABLE_WIDTH_SGI");
#endif
#if defined(GL_COLOR_TABLE_RED_SIZE)
defconsti(env, "GL-COLOR-TABLE-RED-SIZE", (GLenum) GL_COLOR_TABLE_RED_SIZE, "GL_COLOR_TABLE_RED_SIZE");
#endif
#if defined(GL_COLOR_TABLE_RED_SIZE_SGI)
defconsti(env, "GL-COLOR-TABLE-RED-SIZE-SGI", (GLenum) GL_COLOR_TABLE_RED_SIZE_SGI, "GL_COLOR_TABLE_RED_SIZE_SGI");
#endif
#if defined(GL_COLOR_TABLE_GREEN_SIZE)
defconsti(env, "GL-COLOR-TABLE-GREEN-SIZE", (GLenum) GL_COLOR_TABLE_GREEN_SIZE, "GL_COLOR_TABLE_GREEN_SIZE");
#endif
#if defined(GL_COLOR_TABLE_GREEN_SIZE_SGI)
defconsti(env, "GL-COLOR-TABLE-GREEN-SIZE-SGI", (GLenum) GL_COLOR_TABLE_GREEN_SIZE_SGI, "GL_COLOR_TABLE_GREEN_SIZE_SGI");
#endif
#if defined(GL_COLOR_TABLE_BLUE_SIZE)
defconsti(env, "GL-COLOR-TABLE-BLUE-SIZE", (GLenum) GL_COLOR_TABLE_BLUE_SIZE, "GL_COLOR_TABLE_BLUE_SIZE");
#endif
#if defined(GL_COLOR_TABLE_BLUE_SIZE_SGI)
defconsti(env, "GL-COLOR-TABLE-BLUE-SIZE-SGI", (GLenum) GL_COLOR_TABLE_BLUE_SIZE_SGI, "GL_COLOR_TABLE_BLUE_SIZE_SGI");
#endif
#if defined(GL_COLOR_TABLE_ALPHA_SIZE)
defconsti(env, "GL-COLOR-TABLE-ALPHA-SIZE", (GLenum) GL_COLOR_TABLE_ALPHA_SIZE, "GL_COLOR_TABLE_ALPHA_SIZE");
#endif
#if defined(GL_COLOR_TABLE_ALPHA_SIZE_SGI)
defconsti(env, "GL-COLOR-TABLE-ALPHA-SIZE-SGI", (GLenum) GL_COLOR_TABLE_ALPHA_SIZE_SGI, "GL_COLOR_TABLE_ALPHA_SIZE_SGI");
#endif
#if defined(GL_COLOR_TABLE_LUMINANCE_SIZE)
defconsti(env, "GL-COLOR-TABLE-LUMINANCE-SIZE", (GLenum) GL_COLOR_TABLE_LUMINANCE_SIZE, "GL_COLOR_TABLE_LUMINANCE_SIZE");
#endif
#if defined(GL_COLOR_TABLE_LUMINANCE_SIZE_SGI)
defconsti(env, "GL-COLOR-TABLE-LUMINANCE-SIZE-SGI", (GLenum) GL_COLOR_TABLE_LUMINANCE_SIZE_SGI, "GL_COLOR_TABLE_LUMINANCE_SIZE_SGI");
#endif
#if defined(GL_COLOR_TABLE_INTENSITY_SIZE)
defconsti(env, "GL-COLOR-TABLE-INTENSITY-SIZE", (GLenum) GL_COLOR_TABLE_INTENSITY_SIZE, "GL_COLOR_TABLE_INTENSITY_SIZE");
#endif
#if defined(GL_COLOR_TABLE_INTENSITY_SIZE_SGI)
defconsti(env, "GL-COLOR-TABLE-INTENSITY-SIZE-SGI", (GLenum) GL_COLOR_TABLE_INTENSITY_SIZE_SGI, "GL_COLOR_TABLE_INTENSITY_SIZE_SGI");
#endif
#if defined(GL_BGR)
defconsti(env, "GL-BGR", (GLenum) GL_BGR, "GL_BGR");
#endif
#if defined(GL_BGR_EXT)
defconsti(env, "GL-BGR-EXT", (GLenum) GL_BGR_EXT, "GL_BGR_EXT");
#endif
#if defined(GL_BGRA)
defconsti(env, "GL-BGRA", (GLenum) GL_BGRA, "GL_BGRA");
#endif
#if defined(GL_BGRA_EXT)
defconsti(env, "GL-BGRA-EXT", (GLenum) GL_BGRA_EXT, "GL_BGRA_EXT");
#endif
#if defined(GL_BGRA_IMG)
defconsti(env, "GL-BGRA-IMG", (GLenum) GL_BGRA_IMG, "GL_BGRA_IMG");
#endif
#if defined(GL_COLOR_INDEX1_EXT)
defconsti(env, "GL-COLOR-INDEX1-EXT", (GLenum) GL_COLOR_INDEX1_EXT, "GL_COLOR_INDEX1_EXT");
#endif
#if defined(GL_COLOR_INDEX2_EXT)
defconsti(env, "GL-COLOR-INDEX2-EXT", (GLenum) GL_COLOR_INDEX2_EXT, "GL_COLOR_INDEX2_EXT");
#endif
#if defined(GL_COLOR_INDEX4_EXT)
defconsti(env, "GL-COLOR-INDEX4-EXT", (GLenum) GL_COLOR_INDEX4_EXT, "GL_COLOR_INDEX4_EXT");
#endif
#if defined(GL_COLOR_INDEX8_EXT)
defconsti(env, "GL-COLOR-INDEX8-EXT", (GLenum) GL_COLOR_INDEX8_EXT, "GL_COLOR_INDEX8_EXT");
#endif
#if defined(GL_COLOR_INDEX12_EXT)
defconsti(env, "GL-COLOR-INDEX12-EXT", (GLenum) GL_COLOR_INDEX12_EXT, "GL_COLOR_INDEX12_EXT");
#endif
#if defined(GL_COLOR_INDEX16_EXT)
defconsti(env, "GL-COLOR-INDEX16-EXT", (GLenum) GL_COLOR_INDEX16_EXT, "GL_COLOR_INDEX16_EXT");
#endif
#if defined(GL_MAX_ELEMENTS_VERTICES)
defconsti(env, "GL-MAX-ELEMENTS-VERTICES", (GLenum) GL_MAX_ELEMENTS_VERTICES, "GL_MAX_ELEMENTS_VERTICES");
#endif
#if defined(GL_MAX_ELEMENTS_VERTICES_EXT)
defconsti(env, "GL-MAX-ELEMENTS-VERTICES-EXT", (GLenum) GL_MAX_ELEMENTS_VERTICES_EXT, "GL_MAX_ELEMENTS_VERTICES_EXT");
#endif
#if defined(GL_MAX_ELEMENTS_INDICES)
defconsti(env, "GL-MAX-ELEMENTS-INDICES", (GLenum) GL_MAX_ELEMENTS_INDICES, "GL_MAX_ELEMENTS_INDICES");
#endif
#if defined(GL_MAX_ELEMENTS_INDICES_EXT)
defconsti(env, "GL-MAX-ELEMENTS-INDICES-EXT", (GLenum) GL_MAX_ELEMENTS_INDICES_EXT, "GL_MAX_ELEMENTS_INDICES_EXT");
#endif
#if defined(GL_PHONG_WIN)
defconsti(env, "GL-PHONG-WIN", (GLenum) GL_PHONG_WIN, "GL_PHONG_WIN");
#endif
#if defined(GL_PHONG_HINT_WIN)
defconsti(env, "GL-PHONG-HINT-WIN", (GLenum) GL_PHONG_HINT_WIN, "GL_PHONG_HINT_WIN");
#endif
#if defined(GL_FOG_SPECULAR_TEXTURE_WIN)
defconsti(env, "GL-FOG-SPECULAR-TEXTURE-WIN", (GLenum) GL_FOG_SPECULAR_TEXTURE_WIN, "GL_FOG_SPECULAR_TEXTURE_WIN");
#endif
#if defined(GL_TEXTURE_INDEX_SIZE_EXT)
defconsti(env, "GL-TEXTURE-INDEX-SIZE-EXT", (GLenum) GL_TEXTURE_INDEX_SIZE_EXT, "GL_TEXTURE_INDEX_SIZE_EXT");
#endif
#if defined(GL_PARAMETER_BUFFER)
defconsti(env, "GL-PARAMETER-BUFFER", (GLenum) GL_PARAMETER_BUFFER, "GL_PARAMETER_BUFFER");
#endif
#if defined(GL_PARAMETER_BUFFER_ARB)
defconsti(env, "GL-PARAMETER-BUFFER-ARB", (GLenum) GL_PARAMETER_BUFFER_ARB, "GL_PARAMETER_BUFFER_ARB");
#endif
#if defined(GL_PARAMETER_BUFFER_BINDING)
defconsti(env, "GL-PARAMETER-BUFFER-BINDING", (GLenum) GL_PARAMETER_BUFFER_BINDING, "GL_PARAMETER_BUFFER_BINDING");
#endif
#if defined(GL_PARAMETER_BUFFER_BINDING_ARB)
defconsti(env, "GL-PARAMETER-BUFFER-BINDING-ARB", (GLenum) GL_PARAMETER_BUFFER_BINDING_ARB, "GL_PARAMETER_BUFFER_BINDING_ARB");
#endif
#if defined(GL_CLIP_VOLUME_CLIPPING_HINT_EXT)
defconsti(env, "GL-CLIP-VOLUME-CLIPPING-HINT-EXT", (GLenum) GL_CLIP_VOLUME_CLIPPING_HINT_EXT, "GL_CLIP_VOLUME_CLIPPING_HINT_EXT");
#endif
#if defined(GL_DUAL_ALPHA4_SGIS)
defconsti(env, "GL-DUAL-ALPHA4-SGIS", (GLenum) GL_DUAL_ALPHA4_SGIS, "GL_DUAL_ALPHA4_SGIS");
#endif
#if defined(GL_DUAL_ALPHA8_SGIS)
defconsti(env, "GL-DUAL-ALPHA8-SGIS", (GLenum) GL_DUAL_ALPHA8_SGIS, "GL_DUAL_ALPHA8_SGIS");
#endif
#if defined(GL_DUAL_ALPHA12_SGIS)
defconsti(env, "GL-DUAL-ALPHA12-SGIS", (GLenum) GL_DUAL_ALPHA12_SGIS, "GL_DUAL_ALPHA12_SGIS");
#endif
#if defined(GL_DUAL_ALPHA16_SGIS)
defconsti(env, "GL-DUAL-ALPHA16-SGIS", (GLenum) GL_DUAL_ALPHA16_SGIS, "GL_DUAL_ALPHA16_SGIS");
#endif
#if defined(GL_DUAL_LUMINANCE4_SGIS)
defconsti(env, "GL-DUAL-LUMINANCE4-SGIS", (GLenum) GL_DUAL_LUMINANCE4_SGIS, "GL_DUAL_LUMINANCE4_SGIS");
#endif
#if defined(GL_DUAL_LUMINANCE8_SGIS)
defconsti(env, "GL-DUAL-LUMINANCE8-SGIS", (GLenum) GL_DUAL_LUMINANCE8_SGIS, "GL_DUAL_LUMINANCE8_SGIS");
#endif
#if defined(GL_DUAL_LUMINANCE12_SGIS)
defconsti(env, "GL-DUAL-LUMINANCE12-SGIS", (GLenum) GL_DUAL_LUMINANCE12_SGIS, "GL_DUAL_LUMINANCE12_SGIS");
#endif
#if defined(GL_DUAL_LUMINANCE16_SGIS)
defconsti(env, "GL-DUAL-LUMINANCE16-SGIS", (GLenum) GL_DUAL_LUMINANCE16_SGIS, "GL_DUAL_LUMINANCE16_SGIS");
#endif
#if defined(GL_DUAL_INTENSITY4_SGIS)
defconsti(env, "GL-DUAL-INTENSITY4-SGIS", (GLenum) GL_DUAL_INTENSITY4_SGIS, "GL_DUAL_INTENSITY4_SGIS");
#endif
#if defined(GL_DUAL_INTENSITY8_SGIS)
defconsti(env, "GL-DUAL-INTENSITY8-SGIS", (GLenum) GL_DUAL_INTENSITY8_SGIS, "GL_DUAL_INTENSITY8_SGIS");
#endif
#if defined(GL_DUAL_INTENSITY12_SGIS)
defconsti(env, "GL-DUAL-INTENSITY12-SGIS", (GLenum) GL_DUAL_INTENSITY12_SGIS, "GL_DUAL_INTENSITY12_SGIS");
#endif
#if defined(GL_DUAL_INTENSITY16_SGIS)
defconsti(env, "GL-DUAL-INTENSITY16-SGIS", (GLenum) GL_DUAL_INTENSITY16_SGIS, "GL_DUAL_INTENSITY16_SGIS");
#endif
#if defined(GL_DUAL_LUMINANCE_ALPHA4_SGIS)
defconsti(env, "GL-DUAL-LUMINANCE-ALPHA4-SGIS", (GLenum) GL_DUAL_LUMINANCE_ALPHA4_SGIS, "GL_DUAL_LUMINANCE_ALPHA4_SGIS");
#endif
#if defined(GL_DUAL_LUMINANCE_ALPHA8_SGIS)
defconsti(env, "GL-DUAL-LUMINANCE-ALPHA8-SGIS", (GLenum) GL_DUAL_LUMINANCE_ALPHA8_SGIS, "GL_DUAL_LUMINANCE_ALPHA8_SGIS");
#endif
#if defined(GL_QUAD_ALPHA4_SGIS)
defconsti(env, "GL-QUAD-ALPHA4-SGIS", (GLenum) GL_QUAD_ALPHA4_SGIS, "GL_QUAD_ALPHA4_SGIS");
#endif
#if defined(GL_QUAD_ALPHA8_SGIS)
defconsti(env, "GL-QUAD-ALPHA8-SGIS", (GLenum) GL_QUAD_ALPHA8_SGIS, "GL_QUAD_ALPHA8_SGIS");
#endif
#if defined(GL_QUAD_LUMINANCE4_SGIS)
defconsti(env, "GL-QUAD-LUMINANCE4-SGIS", (GLenum) GL_QUAD_LUMINANCE4_SGIS, "GL_QUAD_LUMINANCE4_SGIS");
#endif
#if defined(GL_QUAD_LUMINANCE8_SGIS)
defconsti(env, "GL-QUAD-LUMINANCE8-SGIS", (GLenum) GL_QUAD_LUMINANCE8_SGIS, "GL_QUAD_LUMINANCE8_SGIS");
#endif
#if defined(GL_QUAD_INTENSITY4_SGIS)
defconsti(env, "GL-QUAD-INTENSITY4-SGIS", (GLenum) GL_QUAD_INTENSITY4_SGIS, "GL_QUAD_INTENSITY4_SGIS");
#endif
#if defined(GL_QUAD_INTENSITY8_SGIS)
defconsti(env, "GL-QUAD-INTENSITY8-SGIS", (GLenum) GL_QUAD_INTENSITY8_SGIS, "GL_QUAD_INTENSITY8_SGIS");
#endif
#if defined(GL_DUAL_TEXTURE_SELECT_SGIS)
defconsti(env, "GL-DUAL-TEXTURE-SELECT-SGIS", (GLenum) GL_DUAL_TEXTURE_SELECT_SGIS, "GL_DUAL_TEXTURE_SELECT_SGIS");
#endif
#if defined(GL_QUAD_TEXTURE_SELECT_SGIS)
defconsti(env, "GL-QUAD-TEXTURE-SELECT-SGIS", (GLenum) GL_QUAD_TEXTURE_SELECT_SGIS, "GL_QUAD_TEXTURE_SELECT_SGIS");
#endif
#if defined(GL_POINT_SIZE_MIN)
defconsti(env, "GL-POINT-SIZE-MIN", (GLenum) GL_POINT_SIZE_MIN, "GL_POINT_SIZE_MIN");
#endif
#if defined(GL_POINT_SIZE_MIN_ARB)
defconsti(env, "GL-POINT-SIZE-MIN-ARB", (GLenum) GL_POINT_SIZE_MIN_ARB, "GL_POINT_SIZE_MIN_ARB");
#endif
#if defined(GL_POINT_SIZE_MIN_EXT)
defconsti(env, "GL-POINT-SIZE-MIN-EXT", (GLenum) GL_POINT_SIZE_MIN_EXT, "GL_POINT_SIZE_MIN_EXT");
#endif
#if defined(GL_POINT_SIZE_MIN_SGIS)
defconsti(env, "GL-POINT-SIZE-MIN-SGIS", (GLenum) GL_POINT_SIZE_MIN_SGIS, "GL_POINT_SIZE_MIN_SGIS");
#endif
#if defined(GL_POINT_SIZE_MAX)
defconsti(env, "GL-POINT-SIZE-MAX", (GLenum) GL_POINT_SIZE_MAX, "GL_POINT_SIZE_MAX");
#endif
#if defined(GL_POINT_SIZE_MAX_ARB)
defconsti(env, "GL-POINT-SIZE-MAX-ARB", (GLenum) GL_POINT_SIZE_MAX_ARB, "GL_POINT_SIZE_MAX_ARB");
#endif
#if defined(GL_POINT_SIZE_MAX_EXT)
defconsti(env, "GL-POINT-SIZE-MAX-EXT", (GLenum) GL_POINT_SIZE_MAX_EXT, "GL_POINT_SIZE_MAX_EXT");
#endif
#if defined(GL_POINT_SIZE_MAX_SGIS)
defconsti(env, "GL-POINT-SIZE-MAX-SGIS", (GLenum) GL_POINT_SIZE_MAX_SGIS, "GL_POINT_SIZE_MAX_SGIS");
#endif
#if defined(GL_POINT_FADE_THRESHOLD_SIZE)
defconsti(env, "GL-POINT-FADE-THRESHOLD-SIZE", (GLenum) GL_POINT_FADE_THRESHOLD_SIZE, "GL_POINT_FADE_THRESHOLD_SIZE");
#endif
#if defined(GL_POINT_FADE_THRESHOLD_SIZE_ARB)
defconsti(env, "GL-POINT-FADE-THRESHOLD-SIZE-ARB", (GLenum) GL_POINT_FADE_THRESHOLD_SIZE_ARB, "GL_POINT_FADE_THRESHOLD_SIZE_ARB");
#endif
#if defined(GL_POINT_FADE_THRESHOLD_SIZE_EXT)
defconsti(env, "GL-POINT-FADE-THRESHOLD-SIZE-EXT", (GLenum) GL_POINT_FADE_THRESHOLD_SIZE_EXT, "GL_POINT_FADE_THRESHOLD_SIZE_EXT");
#endif
#if defined(GL_POINT_FADE_THRESHOLD_SIZE_SGIS)
defconsti(env, "GL-POINT-FADE-THRESHOLD-SIZE-SGIS", (GLenum) GL_POINT_FADE_THRESHOLD_SIZE_SGIS, "GL_POINT_FADE_THRESHOLD_SIZE_SGIS");
#endif
#if defined(GL_DISTANCE_ATTENUATION_EXT)
defconsti(env, "GL-DISTANCE-ATTENUATION-EXT", (GLenum) GL_DISTANCE_ATTENUATION_EXT, "GL_DISTANCE_ATTENUATION_EXT");
#endif
#if defined(GL_DISTANCE_ATTENUATION_SGIS)
defconsti(env, "GL-DISTANCE-ATTENUATION-SGIS", (GLenum) GL_DISTANCE_ATTENUATION_SGIS, "GL_DISTANCE_ATTENUATION_SGIS");
#endif
#if defined(GL_POINT_DISTANCE_ATTENUATION)
defconsti(env, "GL-POINT-DISTANCE-ATTENUATION", (GLenum) GL_POINT_DISTANCE_ATTENUATION, "GL_POINT_DISTANCE_ATTENUATION");
#endif
#if defined(GL_POINT_DISTANCE_ATTENUATION_ARB)
defconsti(env, "GL-POINT-DISTANCE-ATTENUATION-ARB", (GLenum) GL_POINT_DISTANCE_ATTENUATION_ARB, "GL_POINT_DISTANCE_ATTENUATION_ARB");
#endif
#if defined(GL_FOG_FUNC_SGIS)
defconsti(env, "GL-FOG-FUNC-SGIS", (GLenum) GL_FOG_FUNC_SGIS, "GL_FOG_FUNC_SGIS");
#endif
#if defined(GL_FOG_FUNC_POINTS_SGIS)
defconsti(env, "GL-FOG-FUNC-POINTS-SGIS", (GLenum) GL_FOG_FUNC_POINTS_SGIS, "GL_FOG_FUNC_POINTS_SGIS");
#endif
#if defined(GL_MAX_FOG_FUNC_POINTS_SGIS)
defconsti(env, "GL-MAX-FOG-FUNC-POINTS-SGIS", (GLenum) GL_MAX_FOG_FUNC_POINTS_SGIS, "GL_MAX_FOG_FUNC_POINTS_SGIS");
#endif
#if defined(GL_CLAMP_TO_BORDER)
defconsti(env, "GL-CLAMP-TO-BORDER", (GLenum) GL_CLAMP_TO_BORDER, "GL_CLAMP_TO_BORDER");
#endif
#if defined(GL_CLAMP_TO_BORDER_ARB)
defconsti(env, "GL-CLAMP-TO-BORDER-ARB", (GLenum) GL_CLAMP_TO_BORDER_ARB, "GL_CLAMP_TO_BORDER_ARB");
#endif
#if defined(GL_CLAMP_TO_BORDER_EXT)
defconsti(env, "GL-CLAMP-TO-BORDER-EXT", (GLenum) GL_CLAMP_TO_BORDER_EXT, "GL_CLAMP_TO_BORDER_EXT");
#endif
#if defined(GL_CLAMP_TO_BORDER_NV)
defconsti(env, "GL-CLAMP-TO-BORDER-NV", (GLenum) GL_CLAMP_TO_BORDER_NV, "GL_CLAMP_TO_BORDER_NV");
#endif
#if defined(GL_CLAMP_TO_BORDER_SGIS)
defconsti(env, "GL-CLAMP-TO-BORDER-SGIS", (GLenum) GL_CLAMP_TO_BORDER_SGIS, "GL_CLAMP_TO_BORDER_SGIS");
#endif
#if defined(GL_CLAMP_TO_BORDER_OES)
defconsti(env, "GL-CLAMP-TO-BORDER-OES", (GLenum) GL_CLAMP_TO_BORDER_OES, "GL_CLAMP_TO_BORDER_OES");
#endif
#if defined(GL_TEXTURE_MULTI_BUFFER_HINT_SGIX)
defconsti(env, "GL-TEXTURE-MULTI-BUFFER-HINT-SGIX", (GLenum) GL_TEXTURE_MULTI_BUFFER_HINT_SGIX, "GL_TEXTURE_MULTI_BUFFER_HINT_SGIX");
#endif
#if defined(GL_CLAMP_TO_EDGE)
defconsti(env, "GL-CLAMP-TO-EDGE", (GLenum) GL_CLAMP_TO_EDGE, "GL_CLAMP_TO_EDGE");
#endif
#if defined(GL_CLAMP_TO_EDGE_SGIS)
defconsti(env, "GL-CLAMP-TO-EDGE-SGIS", (GLenum) GL_CLAMP_TO_EDGE_SGIS, "GL_CLAMP_TO_EDGE_SGIS");
#endif
#if defined(GL_PACK_SKIP_VOLUMES_SGIS)
defconsti(env, "GL-PACK-SKIP-VOLUMES-SGIS", (GLenum) GL_PACK_SKIP_VOLUMES_SGIS, "GL_PACK_SKIP_VOLUMES_SGIS");
#endif
#if defined(GL_PACK_IMAGE_DEPTH_SGIS)
defconsti(env, "GL-PACK-IMAGE-DEPTH-SGIS", (GLenum) GL_PACK_IMAGE_DEPTH_SGIS, "GL_PACK_IMAGE_DEPTH_SGIS");
#endif
#if defined(GL_UNPACK_SKIP_VOLUMES_SGIS)
defconsti(env, "GL-UNPACK-SKIP-VOLUMES-SGIS", (GLenum) GL_UNPACK_SKIP_VOLUMES_SGIS, "GL_UNPACK_SKIP_VOLUMES_SGIS");
#endif
#if defined(GL_UNPACK_IMAGE_DEPTH_SGIS)
defconsti(env, "GL-UNPACK-IMAGE-DEPTH-SGIS", (GLenum) GL_UNPACK_IMAGE_DEPTH_SGIS, "GL_UNPACK_IMAGE_DEPTH_SGIS");
#endif
#if defined(GL_TEXTURE_4D_SGIS)
defconsti(env, "GL-TEXTURE-4D-SGIS", (GLenum) GL_TEXTURE_4D_SGIS, "GL_TEXTURE_4D_SGIS");
#endif
#if defined(GL_PROXY_TEXTURE_4D_SGIS)
defconsti(env, "GL-PROXY-TEXTURE-4D-SGIS", (GLenum) GL_PROXY_TEXTURE_4D_SGIS, "GL_PROXY_TEXTURE_4D_SGIS");
#endif
#if defined(GL_TEXTURE_4DSIZE_SGIS)
defconsti(env, "GL-TEXTURE-4DSIZE-SGIS", (GLenum) GL_TEXTURE_4DSIZE_SGIS, "GL_TEXTURE_4DSIZE_SGIS");
#endif
#if defined(GL_TEXTURE_WRAP_Q_SGIS)
defconsti(env, "GL-TEXTURE-WRAP-Q-SGIS", (GLenum) GL_TEXTURE_WRAP_Q_SGIS, "GL_TEXTURE_WRAP_Q_SGIS");
#endif
#if defined(GL_MAX_4D_TEXTURE_SIZE_SGIS)
defconsti(env, "GL-MAX-4D-TEXTURE-SIZE-SGIS", (GLenum) GL_MAX_4D_TEXTURE_SIZE_SGIS, "GL_MAX_4D_TEXTURE_SIZE_SGIS");
#endif
#if defined(GL_PIXEL_TEX_GEN_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-SGIX", (GLenum) GL_PIXEL_TEX_GEN_SGIX, "GL_PIXEL_TEX_GEN_SGIX");
#endif
#if defined(GL_TEXTURE_MIN_LOD)
defconsti(env, "GL-TEXTURE-MIN-LOD", (GLenum) GL_TEXTURE_MIN_LOD, "GL_TEXTURE_MIN_LOD");
#endif
#if defined(GL_TEXTURE_MIN_LOD_SGIS)
defconsti(env, "GL-TEXTURE-MIN-LOD-SGIS", (GLenum) GL_TEXTURE_MIN_LOD_SGIS, "GL_TEXTURE_MIN_LOD_SGIS");
#endif
#if defined(GL_TEXTURE_MAX_LOD)
defconsti(env, "GL-TEXTURE-MAX-LOD", (GLenum) GL_TEXTURE_MAX_LOD, "GL_TEXTURE_MAX_LOD");
#endif
#if defined(GL_TEXTURE_MAX_LOD_SGIS)
defconsti(env, "GL-TEXTURE-MAX-LOD-SGIS", (GLenum) GL_TEXTURE_MAX_LOD_SGIS, "GL_TEXTURE_MAX_LOD_SGIS");
#endif
#if defined(GL_TEXTURE_BASE_LEVEL)
defconsti(env, "GL-TEXTURE-BASE-LEVEL", (GLenum) GL_TEXTURE_BASE_LEVEL, "GL_TEXTURE_BASE_LEVEL");
#endif
#if defined(GL_TEXTURE_BASE_LEVEL_SGIS)
defconsti(env, "GL-TEXTURE-BASE-LEVEL-SGIS", (GLenum) GL_TEXTURE_BASE_LEVEL_SGIS, "GL_TEXTURE_BASE_LEVEL_SGIS");
#endif
#if defined(GL_TEXTURE_MAX_LEVEL)
defconsti(env, "GL-TEXTURE-MAX-LEVEL", (GLenum) GL_TEXTURE_MAX_LEVEL, "GL_TEXTURE_MAX_LEVEL");
#endif
#if defined(GL_TEXTURE_MAX_LEVEL_APPLE)
defconsti(env, "GL-TEXTURE-MAX-LEVEL-APPLE", (GLenum) GL_TEXTURE_MAX_LEVEL_APPLE, "GL_TEXTURE_MAX_LEVEL_APPLE");
#endif
#if defined(GL_TEXTURE_MAX_LEVEL_SGIS)
defconsti(env, "GL-TEXTURE-MAX-LEVEL-SGIS", (GLenum) GL_TEXTURE_MAX_LEVEL_SGIS, "GL_TEXTURE_MAX_LEVEL_SGIS");
#endif
#if defined(GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX)
defconsti(env, "GL-PIXEL-TILE-BEST-ALIGNMENT-SGIX", (GLenum) GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX, "GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX");
#endif
#if defined(GL_PIXEL_TILE_CACHE_INCREMENT_SGIX)
defconsti(env, "GL-PIXEL-TILE-CACHE-INCREMENT-SGIX", (GLenum) GL_PIXEL_TILE_CACHE_INCREMENT_SGIX, "GL_PIXEL_TILE_CACHE_INCREMENT_SGIX");
#endif
#if defined(GL_PIXEL_TILE_WIDTH_SGIX)
defconsti(env, "GL-PIXEL-TILE-WIDTH-SGIX", (GLenum) GL_PIXEL_TILE_WIDTH_SGIX, "GL_PIXEL_TILE_WIDTH_SGIX");
#endif
#if defined(GL_PIXEL_TILE_HEIGHT_SGIX)
defconsti(env, "GL-PIXEL-TILE-HEIGHT-SGIX", (GLenum) GL_PIXEL_TILE_HEIGHT_SGIX, "GL_PIXEL_TILE_HEIGHT_SGIX");
#endif
#if defined(GL_PIXEL_TILE_GRID_WIDTH_SGIX)
defconsti(env, "GL-PIXEL-TILE-GRID-WIDTH-SGIX", (GLenum) GL_PIXEL_TILE_GRID_WIDTH_SGIX, "GL_PIXEL_TILE_GRID_WIDTH_SGIX");
#endif
#if defined(GL_PIXEL_TILE_GRID_HEIGHT_SGIX)
defconsti(env, "GL-PIXEL-TILE-GRID-HEIGHT-SGIX", (GLenum) GL_PIXEL_TILE_GRID_HEIGHT_SGIX, "GL_PIXEL_TILE_GRID_HEIGHT_SGIX");
#endif
#if defined(GL_PIXEL_TILE_GRID_DEPTH_SGIX)
defconsti(env, "GL-PIXEL-TILE-GRID-DEPTH-SGIX", (GLenum) GL_PIXEL_TILE_GRID_DEPTH_SGIX, "GL_PIXEL_TILE_GRID_DEPTH_SGIX");
#endif
#if defined(GL_PIXEL_TILE_CACHE_SIZE_SGIX)
defconsti(env, "GL-PIXEL-TILE-CACHE-SIZE-SGIX", (GLenum) GL_PIXEL_TILE_CACHE_SIZE_SGIX, "GL_PIXEL_TILE_CACHE_SIZE_SGIX");
#endif
#if defined(GL_FILTER4_SGIS)
defconsti(env, "GL-FILTER4-SGIS", (GLenum) GL_FILTER4_SGIS, "GL_FILTER4_SGIS");
#endif
#if defined(GL_TEXTURE_FILTER4_SIZE_SGIS)
defconsti(env, "GL-TEXTURE-FILTER4-SIZE-SGIS", (GLenum) GL_TEXTURE_FILTER4_SIZE_SGIS, "GL_TEXTURE_FILTER4_SIZE_SGIS");
#endif
#if defined(GL_SPRITE_SGIX)
defconsti(env, "GL-SPRITE-SGIX", (GLenum) GL_SPRITE_SGIX, "GL_SPRITE_SGIX");
#endif
#if defined(GL_SPRITE_MODE_SGIX)
defconsti(env, "GL-SPRITE-MODE-SGIX", (GLenum) GL_SPRITE_MODE_SGIX, "GL_SPRITE_MODE_SGIX");
#endif
#if defined(GL_SPRITE_AXIS_SGIX)
defconsti(env, "GL-SPRITE-AXIS-SGIX", (GLenum) GL_SPRITE_AXIS_SGIX, "GL_SPRITE_AXIS_SGIX");
#endif
#if defined(GL_SPRITE_TRANSLATION_SGIX)
defconsti(env, "GL-SPRITE-TRANSLATION-SGIX", (GLenum) GL_SPRITE_TRANSLATION_SGIX, "GL_SPRITE_TRANSLATION_SGIX");
#endif
#if defined(GL_SPRITE_AXIAL_SGIX)
defconsti(env, "GL-SPRITE-AXIAL-SGIX", (GLenum) GL_SPRITE_AXIAL_SGIX, "GL_SPRITE_AXIAL_SGIX");
#endif
#if defined(GL_SPRITE_OBJECT_ALIGNED_SGIX)
defconsti(env, "GL-SPRITE-OBJECT-ALIGNED-SGIX", (GLenum) GL_SPRITE_OBJECT_ALIGNED_SGIX, "GL_SPRITE_OBJECT_ALIGNED_SGIX");
#endif
#if defined(GL_SPRITE_EYE_ALIGNED_SGIX)
defconsti(env, "GL-SPRITE-EYE-ALIGNED-SGIX", (GLenum) GL_SPRITE_EYE_ALIGNED_SGIX, "GL_SPRITE_EYE_ALIGNED_SGIX");
#endif
#if defined(GL_TEXTURE_4D_BINDING_SGIS)
defconsti(env, "GL-TEXTURE-4D-BINDING-SGIS", (GLenum) GL_TEXTURE_4D_BINDING_SGIS, "GL_TEXTURE_4D_BINDING_SGIS");
#endif
#if defined(GL_IGNORE_BORDER_HP)
defconsti(env, "GL-IGNORE-BORDER-HP", (GLenum) GL_IGNORE_BORDER_HP, "GL_IGNORE_BORDER_HP");
#endif
#if defined(GL_CONSTANT_BORDER)
defconsti(env, "GL-CONSTANT-BORDER", (GLenum) GL_CONSTANT_BORDER, "GL_CONSTANT_BORDER");
#endif
#if defined(GL_CONSTANT_BORDER_HP)
defconsti(env, "GL-CONSTANT-BORDER-HP", (GLenum) GL_CONSTANT_BORDER_HP, "GL_CONSTANT_BORDER_HP");
#endif
#if defined(GL_REPLICATE_BORDER)
defconsti(env, "GL-REPLICATE-BORDER", (GLenum) GL_REPLICATE_BORDER, "GL_REPLICATE_BORDER");
#endif
#if defined(GL_REPLICATE_BORDER_HP)
defconsti(env, "GL-REPLICATE-BORDER-HP", (GLenum) GL_REPLICATE_BORDER_HP, "GL_REPLICATE_BORDER_HP");
#endif
#if defined(GL_CONVOLUTION_BORDER_COLOR)
defconsti(env, "GL-CONVOLUTION-BORDER-COLOR", (GLenum) GL_CONVOLUTION_BORDER_COLOR, "GL_CONVOLUTION_BORDER_COLOR");
#endif
#if defined(GL_CONVOLUTION_BORDER_COLOR_HP)
defconsti(env, "GL-CONVOLUTION-BORDER-COLOR-HP", (GLenum) GL_CONVOLUTION_BORDER_COLOR_HP, "GL_CONVOLUTION_BORDER_COLOR_HP");
#endif
#if defined(GL_IMAGE_SCALE_X_HP)
defconsti(env, "GL-IMAGE-SCALE-X-HP", (GLenum) GL_IMAGE_SCALE_X_HP, "GL_IMAGE_SCALE_X_HP");
#endif
#if defined(GL_IMAGE_SCALE_Y_HP)
defconsti(env, "GL-IMAGE-SCALE-Y-HP", (GLenum) GL_IMAGE_SCALE_Y_HP, "GL_IMAGE_SCALE_Y_HP");
#endif
#if defined(GL_IMAGE_TRANSLATE_X_HP)
defconsti(env, "GL-IMAGE-TRANSLATE-X-HP", (GLenum) GL_IMAGE_TRANSLATE_X_HP, "GL_IMAGE_TRANSLATE_X_HP");
#endif
#if defined(GL_IMAGE_TRANSLATE_Y_HP)
defconsti(env, "GL-IMAGE-TRANSLATE-Y-HP", (GLenum) GL_IMAGE_TRANSLATE_Y_HP, "GL_IMAGE_TRANSLATE_Y_HP");
#endif
#if defined(GL_IMAGE_ROTATE_ANGLE_HP)
defconsti(env, "GL-IMAGE-ROTATE-ANGLE-HP", (GLenum) GL_IMAGE_ROTATE_ANGLE_HP, "GL_IMAGE_ROTATE_ANGLE_HP");
#endif
#if defined(GL_IMAGE_ROTATE_ORIGIN_X_HP)
defconsti(env, "GL-IMAGE-ROTATE-ORIGIN-X-HP", (GLenum) GL_IMAGE_ROTATE_ORIGIN_X_HP, "GL_IMAGE_ROTATE_ORIGIN_X_HP");
#endif
#if defined(GL_IMAGE_ROTATE_ORIGIN_Y_HP)
defconsti(env, "GL-IMAGE-ROTATE-ORIGIN-Y-HP", (GLenum) GL_IMAGE_ROTATE_ORIGIN_Y_HP, "GL_IMAGE_ROTATE_ORIGIN_Y_HP");
#endif
#if defined(GL_IMAGE_MAG_FILTER_HP)
defconsti(env, "GL-IMAGE-MAG-FILTER-HP", (GLenum) GL_IMAGE_MAG_FILTER_HP, "GL_IMAGE_MAG_FILTER_HP");
#endif
#if defined(GL_IMAGE_MIN_FILTER_HP)
defconsti(env, "GL-IMAGE-MIN-FILTER-HP", (GLenum) GL_IMAGE_MIN_FILTER_HP, "GL_IMAGE_MIN_FILTER_HP");
#endif
#if defined(GL_IMAGE_CUBIC_WEIGHT_HP)
defconsti(env, "GL-IMAGE-CUBIC-WEIGHT-HP", (GLenum) GL_IMAGE_CUBIC_WEIGHT_HP, "GL_IMAGE_CUBIC_WEIGHT_HP");
#endif
#if defined(GL_CUBIC_HP)
defconsti(env, "GL-CUBIC-HP", (GLenum) GL_CUBIC_HP, "GL_CUBIC_HP");
#endif
#if defined(GL_AVERAGE_HP)
defconsti(env, "GL-AVERAGE-HP", (GLenum) GL_AVERAGE_HP, "GL_AVERAGE_HP");
#endif
#if defined(GL_IMAGE_TRANSFORM_2D_HP)
defconsti(env, "GL-IMAGE-TRANSFORM-2D-HP", (GLenum) GL_IMAGE_TRANSFORM_2D_HP, "GL_IMAGE_TRANSFORM_2D_HP");
#endif
#if defined(GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP)
defconsti(env, "GL-POST-IMAGE-TRANSFORM-COLOR-TABLE-HP", (GLenum) GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP, "GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP");
#endif
#if defined(GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP)
defconsti(env, "GL-PROXY-POST-IMAGE-TRANSFORM-COLOR-TABLE-HP", (GLenum) GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP, "GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP");
#endif
#if defined(GL_OCCLUSION_TEST_HP)
defconsti(env, "GL-OCCLUSION-TEST-HP", (GLenum) GL_OCCLUSION_TEST_HP, "GL_OCCLUSION_TEST_HP");
#endif
#if defined(GL_OCCLUSION_TEST_RESULT_HP)
defconsti(env, "GL-OCCLUSION-TEST-RESULT-HP", (GLenum) GL_OCCLUSION_TEST_RESULT_HP, "GL_OCCLUSION_TEST_RESULT_HP");
#endif
#if defined(GL_TEXTURE_LIGHTING_MODE_HP)
defconsti(env, "GL-TEXTURE-LIGHTING-MODE-HP", (GLenum) GL_TEXTURE_LIGHTING_MODE_HP, "GL_TEXTURE_LIGHTING_MODE_HP");
#endif
#if defined(GL_TEXTURE_POST_SPECULAR_HP)
defconsti(env, "GL-TEXTURE-POST-SPECULAR-HP", (GLenum) GL_TEXTURE_POST_SPECULAR_HP, "GL_TEXTURE_POST_SPECULAR_HP");
#endif
#if defined(GL_TEXTURE_PRE_SPECULAR_HP)
defconsti(env, "GL-TEXTURE-PRE-SPECULAR-HP", (GLenum) GL_TEXTURE_PRE_SPECULAR_HP, "GL_TEXTURE_PRE_SPECULAR_HP");
#endif
#if defined(GL_LINEAR_CLIPMAP_LINEAR_SGIX)
defconsti(env, "GL-LINEAR-CLIPMAP-LINEAR-SGIX", (GLenum) GL_LINEAR_CLIPMAP_LINEAR_SGIX, "GL_LINEAR_CLIPMAP_LINEAR_SGIX");
#endif
#if defined(GL_TEXTURE_CLIPMAP_CENTER_SGIX)
defconsti(env, "GL-TEXTURE-CLIPMAP-CENTER-SGIX", (GLenum) GL_TEXTURE_CLIPMAP_CENTER_SGIX, "GL_TEXTURE_CLIPMAP_CENTER_SGIX");
#endif
#if defined(GL_TEXTURE_CLIPMAP_FRAME_SGIX)
defconsti(env, "GL-TEXTURE-CLIPMAP-FRAME-SGIX", (GLenum) GL_TEXTURE_CLIPMAP_FRAME_SGIX, "GL_TEXTURE_CLIPMAP_FRAME_SGIX");
#endif
#if defined(GL_TEXTURE_CLIPMAP_OFFSET_SGIX)
defconsti(env, "GL-TEXTURE-CLIPMAP-OFFSET-SGIX", (GLenum) GL_TEXTURE_CLIPMAP_OFFSET_SGIX, "GL_TEXTURE_CLIPMAP_OFFSET_SGIX");
#endif
#if defined(GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX)
defconsti(env, "GL-TEXTURE-CLIPMAP-VIRTUAL-DEPTH-SGIX", (GLenum) GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX, "GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX");
#endif
#if defined(GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX)
defconsti(env, "GL-TEXTURE-CLIPMAP-LOD-OFFSET-SGIX", (GLenum) GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX, "GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX");
#endif
#if defined(GL_TEXTURE_CLIPMAP_DEPTH_SGIX)
defconsti(env, "GL-TEXTURE-CLIPMAP-DEPTH-SGIX", (GLenum) GL_TEXTURE_CLIPMAP_DEPTH_SGIX, "GL_TEXTURE_CLIPMAP_DEPTH_SGIX");
#endif
#if defined(GL_MAX_CLIPMAP_DEPTH_SGIX)
defconsti(env, "GL-MAX-CLIPMAP-DEPTH-SGIX", (GLenum) GL_MAX_CLIPMAP_DEPTH_SGIX, "GL_MAX_CLIPMAP_DEPTH_SGIX");
#endif
#if defined(GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX)
defconsti(env, "GL-MAX-CLIPMAP-VIRTUAL-DEPTH-SGIX", (GLenum) GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX, "GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX");
#endif
#if defined(GL_POST_TEXTURE_FILTER_BIAS_SGIX)
defconsti(env, "GL-POST-TEXTURE-FILTER-BIAS-SGIX", (GLenum) GL_POST_TEXTURE_FILTER_BIAS_SGIX, "GL_POST_TEXTURE_FILTER_BIAS_SGIX");
#endif
#if defined(GL_POST_TEXTURE_FILTER_SCALE_SGIX)
defconsti(env, "GL-POST-TEXTURE-FILTER-SCALE-SGIX", (GLenum) GL_POST_TEXTURE_FILTER_SCALE_SGIX, "GL_POST_TEXTURE_FILTER_SCALE_SGIX");
#endif
#if defined(GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX)
defconsti(env, "GL-POST-TEXTURE-FILTER-BIAS-RANGE-SGIX", (GLenum) GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX, "GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX");
#endif
#if defined(GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX)
defconsti(env, "GL-POST-TEXTURE-FILTER-SCALE-RANGE-SGIX", (GLenum) GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX, "GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX");
#endif
#if defined(GL_REFERENCE_PLANE_SGIX)
defconsti(env, "GL-REFERENCE-PLANE-SGIX", (GLenum) GL_REFERENCE_PLANE_SGIX, "GL_REFERENCE_PLANE_SGIX");
#endif
#if defined(GL_REFERENCE_PLANE_EQUATION_SGIX)
defconsti(env, "GL-REFERENCE-PLANE-EQUATION-SGIX", (GLenum) GL_REFERENCE_PLANE_EQUATION_SGIX, "GL_REFERENCE_PLANE_EQUATION_SGIX");
#endif
#if defined(GL_IR_INSTRUMENT1_SGIX)
defconsti(env, "GL-IR-INSTRUMENT1-SGIX", (GLenum) GL_IR_INSTRUMENT1_SGIX, "GL_IR_INSTRUMENT1_SGIX");
#endif
#if defined(GL_INSTRUMENT_BUFFER_POINTER_SGIX)
defconsti(env, "GL-INSTRUMENT-BUFFER-POINTER-SGIX", (GLenum) GL_INSTRUMENT_BUFFER_POINTER_SGIX, "GL_INSTRUMENT_BUFFER_POINTER_SGIX");
#endif
#if defined(GL_INSTRUMENT_MEASUREMENTS_SGIX)
defconsti(env, "GL-INSTRUMENT-MEASUREMENTS-SGIX", (GLenum) GL_INSTRUMENT_MEASUREMENTS_SGIX, "GL_INSTRUMENT_MEASUREMENTS_SGIX");
#endif
#if defined(GL_LIST_PRIORITY_SGIX)
defconsti(env, "GL-LIST-PRIORITY-SGIX", (GLenum) GL_LIST_PRIORITY_SGIX, "GL_LIST_PRIORITY_SGIX");
#endif
#if defined(GL_CALLIGRAPHIC_FRAGMENT_SGIX)
defconsti(env, "GL-CALLIGRAPHIC-FRAGMENT-SGIX", (GLenum) GL_CALLIGRAPHIC_FRAGMENT_SGIX, "GL_CALLIGRAPHIC_FRAGMENT_SGIX");
#endif
#if defined(GL_PIXEL_TEX_GEN_Q_CEILING_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-Q-CEILING-SGIX", (GLenum) GL_PIXEL_TEX_GEN_Q_CEILING_SGIX, "GL_PIXEL_TEX_GEN_Q_CEILING_SGIX");
#endif
#if defined(GL_PIXEL_TEX_GEN_Q_ROUND_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-Q-ROUND-SGIX", (GLenum) GL_PIXEL_TEX_GEN_Q_ROUND_SGIX, "GL_PIXEL_TEX_GEN_Q_ROUND_SGIX");
#endif
#if defined(GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-Q-FLOOR-SGIX", (GLenum) GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX, "GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX");
#endif
#if defined(GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-ALPHA-REPLACE-SGIX", (GLenum) GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX, "GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX");
#endif
#if defined(GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-ALPHA-NO-REPLACE-SGIX", (GLenum) GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX, "GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX");
#endif
#if defined(GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-ALPHA-LS-SGIX", (GLenum) GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX, "GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX");
#endif
#if defined(GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-ALPHA-MS-SGIX", (GLenum) GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX, "GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX");
#endif
#if defined(GL_FRAMEZOOM_SGIX)
defconsti(env, "GL-FRAMEZOOM-SGIX", (GLenum) GL_FRAMEZOOM_SGIX, "GL_FRAMEZOOM_SGIX");
#endif
#if defined(GL_FRAMEZOOM_FACTOR_SGIX)
defconsti(env, "GL-FRAMEZOOM-FACTOR-SGIX", (GLenum) GL_FRAMEZOOM_FACTOR_SGIX, "GL_FRAMEZOOM_FACTOR_SGIX");
#endif
#if defined(GL_MAX_FRAMEZOOM_FACTOR_SGIX)
defconsti(env, "GL-MAX-FRAMEZOOM-FACTOR-SGIX", (GLenum) GL_MAX_FRAMEZOOM_FACTOR_SGIX, "GL_MAX_FRAMEZOOM_FACTOR_SGIX");
#endif
#if defined(GL_TEXTURE_LOD_BIAS_S_SGIX)
defconsti(env, "GL-TEXTURE-LOD-BIAS-S-SGIX", (GLenum) GL_TEXTURE_LOD_BIAS_S_SGIX, "GL_TEXTURE_LOD_BIAS_S_SGIX");
#endif
#if defined(GL_TEXTURE_LOD_BIAS_T_SGIX)
defconsti(env, "GL-TEXTURE-LOD-BIAS-T-SGIX", (GLenum) GL_TEXTURE_LOD_BIAS_T_SGIX, "GL_TEXTURE_LOD_BIAS_T_SGIX");
#endif
#if defined(GL_TEXTURE_LOD_BIAS_R_SGIX)
defconsti(env, "GL-TEXTURE-LOD-BIAS-R-SGIX", (GLenum) GL_TEXTURE_LOD_BIAS_R_SGIX, "GL_TEXTURE_LOD_BIAS_R_SGIX");
#endif
#if defined(GL_GENERATE_MIPMAP)
defconsti(env, "GL-GENERATE-MIPMAP", (GLenum) GL_GENERATE_MIPMAP, "GL_GENERATE_MIPMAP");
#endif
#if defined(GL_GENERATE_MIPMAP_SGIS)
defconsti(env, "GL-GENERATE-MIPMAP-SGIS", (GLenum) GL_GENERATE_MIPMAP_SGIS, "GL_GENERATE_MIPMAP_SGIS");
#endif
#if defined(GL_GENERATE_MIPMAP_HINT)
defconsti(env, "GL-GENERATE-MIPMAP-HINT", (GLenum) GL_GENERATE_MIPMAP_HINT, "GL_GENERATE_MIPMAP_HINT");
#endif
#if defined(GL_GENERATE_MIPMAP_HINT_SGIS)
defconsti(env, "GL-GENERATE-MIPMAP-HINT-SGIS", (GLenum) GL_GENERATE_MIPMAP_HINT_SGIS, "GL_GENERATE_MIPMAP_HINT_SGIS");
#endif
#if defined(GL_GEOMETRY_DEFORMATION_SGIX)
defconsti(env, "GL-GEOMETRY-DEFORMATION-SGIX", (GLenum) GL_GEOMETRY_DEFORMATION_SGIX, "GL_GEOMETRY_DEFORMATION_SGIX");
#endif
#if defined(GL_TEXTURE_DEFORMATION_SGIX)
defconsti(env, "GL-TEXTURE-DEFORMATION-SGIX", (GLenum) GL_TEXTURE_DEFORMATION_SGIX, "GL_TEXTURE_DEFORMATION_SGIX");
#endif
#if defined(GL_DEFORMATIONS_MASK_SGIX)
defconsti(env, "GL-DEFORMATIONS-MASK-SGIX", (GLenum) GL_DEFORMATIONS_MASK_SGIX, "GL_DEFORMATIONS_MASK_SGIX");
#endif
#if defined(GL_MAX_DEFORMATION_ORDER_SGIX)
defconsti(env, "GL-MAX-DEFORMATION-ORDER-SGIX", (GLenum) GL_MAX_DEFORMATION_ORDER_SGIX, "GL_MAX_DEFORMATION_ORDER_SGIX");
#endif
#if defined(GL_FOG_OFFSET_SGIX)
defconsti(env, "GL-FOG-OFFSET-SGIX", (GLenum) GL_FOG_OFFSET_SGIX, "GL_FOG_OFFSET_SGIX");
#endif
#if defined(GL_FOG_OFFSET_VALUE_SGIX)
defconsti(env, "GL-FOG-OFFSET-VALUE-SGIX", (GLenum) GL_FOG_OFFSET_VALUE_SGIX, "GL_FOG_OFFSET_VALUE_SGIX");
#endif
#if defined(GL_TEXTURE_COMPARE_SGIX)
defconsti(env, "GL-TEXTURE-COMPARE-SGIX", (GLenum) GL_TEXTURE_COMPARE_SGIX, "GL_TEXTURE_COMPARE_SGIX");
#endif
#if defined(GL_TEXTURE_COMPARE_OPERATOR_SGIX)
defconsti(env, "GL-TEXTURE-COMPARE-OPERATOR-SGIX", (GLenum) GL_TEXTURE_COMPARE_OPERATOR_SGIX, "GL_TEXTURE_COMPARE_OPERATOR_SGIX");
#endif
#if defined(GL_TEXTURE_LEQUAL_R_SGIX)
defconsti(env, "GL-TEXTURE-LEQUAL-R-SGIX", (GLenum) GL_TEXTURE_LEQUAL_R_SGIX, "GL_TEXTURE_LEQUAL_R_SGIX");
#endif
#if defined(GL_TEXTURE_GEQUAL_R_SGIX)
defconsti(env, "GL-TEXTURE-GEQUAL-R-SGIX", (GLenum) GL_TEXTURE_GEQUAL_R_SGIX, "GL_TEXTURE_GEQUAL_R_SGIX");
#endif
#if defined(GL_DEPTH_COMPONENT16)
defconsti(env, "GL-DEPTH-COMPONENT16", (GLenum) GL_DEPTH_COMPONENT16, "GL_DEPTH_COMPONENT16");
#endif
#if defined(GL_DEPTH_COMPONENT16_ARB)
defconsti(env, "GL-DEPTH-COMPONENT16-ARB", (GLenum) GL_DEPTH_COMPONENT16_ARB, "GL_DEPTH_COMPONENT16_ARB");
#endif
#if defined(GL_DEPTH_COMPONENT16_OES)
defconsti(env, "GL-DEPTH-COMPONENT16-OES", (GLenum) GL_DEPTH_COMPONENT16_OES, "GL_DEPTH_COMPONENT16_OES");
#endif
#if defined(GL_DEPTH_COMPONENT16_SGIX)
defconsti(env, "GL-DEPTH-COMPONENT16-SGIX", (GLenum) GL_DEPTH_COMPONENT16_SGIX, "GL_DEPTH_COMPONENT16_SGIX");
#endif
#if defined(GL_DEPTH_COMPONENT24)
defconsti(env, "GL-DEPTH-COMPONENT24", (GLenum) GL_DEPTH_COMPONENT24, "GL_DEPTH_COMPONENT24");
#endif
#if defined(GL_DEPTH_COMPONENT24_ARB)
defconsti(env, "GL-DEPTH-COMPONENT24-ARB", (GLenum) GL_DEPTH_COMPONENT24_ARB, "GL_DEPTH_COMPONENT24_ARB");
#endif
#if defined(GL_DEPTH_COMPONENT24_OES)
defconsti(env, "GL-DEPTH-COMPONENT24-OES", (GLenum) GL_DEPTH_COMPONENT24_OES, "GL_DEPTH_COMPONENT24_OES");
#endif
#if defined(GL_DEPTH_COMPONENT24_SGIX)
defconsti(env, "GL-DEPTH-COMPONENT24-SGIX", (GLenum) GL_DEPTH_COMPONENT24_SGIX, "GL_DEPTH_COMPONENT24_SGIX");
#endif
#if defined(GL_DEPTH_COMPONENT32)
defconsti(env, "GL-DEPTH-COMPONENT32", (GLenum) GL_DEPTH_COMPONENT32, "GL_DEPTH_COMPONENT32");
#endif
#if defined(GL_DEPTH_COMPONENT32_ARB)
defconsti(env, "GL-DEPTH-COMPONENT32-ARB", (GLenum) GL_DEPTH_COMPONENT32_ARB, "GL_DEPTH_COMPONENT32_ARB");
#endif
#if defined(GL_DEPTH_COMPONENT32_OES)
defconsti(env, "GL-DEPTH-COMPONENT32-OES", (GLenum) GL_DEPTH_COMPONENT32_OES, "GL_DEPTH_COMPONENT32_OES");
#endif
#if defined(GL_DEPTH_COMPONENT32_SGIX)
defconsti(env, "GL-DEPTH-COMPONENT32-SGIX", (GLenum) GL_DEPTH_COMPONENT32_SGIX, "GL_DEPTH_COMPONENT32_SGIX");
#endif
#if defined(GL_ARRAY_ELEMENT_LOCK_FIRST_EXT)
defconsti(env, "GL-ARRAY-ELEMENT-LOCK-FIRST-EXT", (GLenum) GL_ARRAY_ELEMENT_LOCK_FIRST_EXT, "GL_ARRAY_ELEMENT_LOCK_FIRST_EXT");
#endif
#if defined(GL_ARRAY_ELEMENT_LOCK_COUNT_EXT)
defconsti(env, "GL-ARRAY-ELEMENT-LOCK-COUNT-EXT", (GLenum) GL_ARRAY_ELEMENT_LOCK_COUNT_EXT, "GL_ARRAY_ELEMENT_LOCK_COUNT_EXT");
#endif
#if defined(GL_CULL_VERTEX_EXT)
defconsti(env, "GL-CULL-VERTEX-EXT", (GLenum) GL_CULL_VERTEX_EXT, "GL_CULL_VERTEX_EXT");
#endif
#if defined(GL_CULL_VERTEX_EYE_POSITION_EXT)
defconsti(env, "GL-CULL-VERTEX-EYE-POSITION-EXT", (GLenum) GL_CULL_VERTEX_EYE_POSITION_EXT, "GL_CULL_VERTEX_EYE_POSITION_EXT");
#endif
#if defined(GL_CULL_VERTEX_OBJECT_POSITION_EXT)
defconsti(env, "GL-CULL-VERTEX-OBJECT-POSITION-EXT", (GLenum) GL_CULL_VERTEX_OBJECT_POSITION_EXT, "GL_CULL_VERTEX_OBJECT_POSITION_EXT");
#endif
#if defined(GL_IUI_V2F_EXT)
defconsti(env, "GL-IUI-V2F-EXT", (GLenum) GL_IUI_V2F_EXT, "GL_IUI_V2F_EXT");
#endif
#if defined(GL_IUI_V3F_EXT)
defconsti(env, "GL-IUI-V3F-EXT", (GLenum) GL_IUI_V3F_EXT, "GL_IUI_V3F_EXT");
#endif
#if defined(GL_IUI_N3F_V2F_EXT)
defconsti(env, "GL-IUI-N3F-V2F-EXT", (GLenum) GL_IUI_N3F_V2F_EXT, "GL_IUI_N3F_V2F_EXT");
#endif
#if defined(GL_IUI_N3F_V3F_EXT)
defconsti(env, "GL-IUI-N3F-V3F-EXT", (GLenum) GL_IUI_N3F_V3F_EXT, "GL_IUI_N3F_V3F_EXT");
#endif
#if defined(GL_T2F_IUI_V2F_EXT)
defconsti(env, "GL-T2F-IUI-V2F-EXT", (GLenum) GL_T2F_IUI_V2F_EXT, "GL_T2F_IUI_V2F_EXT");
#endif
#if defined(GL_T2F_IUI_V3F_EXT)
defconsti(env, "GL-T2F-IUI-V3F-EXT", (GLenum) GL_T2F_IUI_V3F_EXT, "GL_T2F_IUI_V3F_EXT");
#endif
#if defined(GL_T2F_IUI_N3F_V2F_EXT)
defconsti(env, "GL-T2F-IUI-N3F-V2F-EXT", (GLenum) GL_T2F_IUI_N3F_V2F_EXT, "GL_T2F_IUI_N3F_V2F_EXT");
#endif
#if defined(GL_T2F_IUI_N3F_V3F_EXT)
defconsti(env, "GL-T2F-IUI-N3F-V3F-EXT", (GLenum) GL_T2F_IUI_N3F_V3F_EXT, "GL_T2F_IUI_N3F_V3F_EXT");
#endif
#if defined(GL_INDEX_TEST_EXT)
defconsti(env, "GL-INDEX-TEST-EXT", (GLenum) GL_INDEX_TEST_EXT, "GL_INDEX_TEST_EXT");
#endif
#if defined(GL_INDEX_TEST_FUNC_EXT)
defconsti(env, "GL-INDEX-TEST-FUNC-EXT", (GLenum) GL_INDEX_TEST_FUNC_EXT, "GL_INDEX_TEST_FUNC_EXT");
#endif
#if defined(GL_INDEX_TEST_REF_EXT)
defconsti(env, "GL-INDEX-TEST-REF-EXT", (GLenum) GL_INDEX_TEST_REF_EXT, "GL_INDEX_TEST_REF_EXT");
#endif
#if defined(GL_INDEX_MATERIAL_EXT)
defconsti(env, "GL-INDEX-MATERIAL-EXT", (GLenum) GL_INDEX_MATERIAL_EXT, "GL_INDEX_MATERIAL_EXT");
#endif
#if defined(GL_INDEX_MATERIAL_PARAMETER_EXT)
defconsti(env, "GL-INDEX-MATERIAL-PARAMETER-EXT", (GLenum) GL_INDEX_MATERIAL_PARAMETER_EXT, "GL_INDEX_MATERIAL_PARAMETER_EXT");
#endif
#if defined(GL_INDEX_MATERIAL_FACE_EXT)
defconsti(env, "GL-INDEX-MATERIAL-FACE-EXT", (GLenum) GL_INDEX_MATERIAL_FACE_EXT, "GL_INDEX_MATERIAL_FACE_EXT");
#endif
#if defined(GL_YCRCB_422_SGIX)
defconsti(env, "GL-YCRCB-422-SGIX", (GLenum) GL_YCRCB_422_SGIX, "GL_YCRCB_422_SGIX");
#endif
#if defined(GL_YCRCB_444_SGIX)
defconsti(env, "GL-YCRCB-444-SGIX", (GLenum) GL_YCRCB_444_SGIX, "GL_YCRCB_444_SGIX");
#endif
#if defined(GL_WRAP_BORDER_SUN)
defconsti(env, "GL-WRAP-BORDER-SUN", (GLenum) GL_WRAP_BORDER_SUN, "GL_WRAP_BORDER_SUN");
#endif
#if defined(GL_UNPACK_CONSTANT_DATA_SUNX)
defconsti(env, "GL-UNPACK-CONSTANT-DATA-SUNX", (GLenum) GL_UNPACK_CONSTANT_DATA_SUNX, "GL_UNPACK_CONSTANT_DATA_SUNX");
#endif
#if defined(GL_TEXTURE_CONSTANT_DATA_SUNX)
defconsti(env, "GL-TEXTURE-CONSTANT-DATA-SUNX", (GLenum) GL_TEXTURE_CONSTANT_DATA_SUNX, "GL_TEXTURE_CONSTANT_DATA_SUNX");
#endif
#if defined(GL_TRIANGLE_LIST_SUN)
defconsti(env, "GL-TRIANGLE-LIST-SUN", (GLenum) GL_TRIANGLE_LIST_SUN, "GL_TRIANGLE_LIST_SUN");
#endif
#if defined(GL_REPLACEMENT_CODE_SUN)
defconsti(env, "GL-REPLACEMENT-CODE-SUN", (GLenum) GL_REPLACEMENT_CODE_SUN, "GL_REPLACEMENT_CODE_SUN");
#endif
#if defined(GL_GLOBAL_ALPHA_SUN)
defconsti(env, "GL-GLOBAL-ALPHA-SUN", (GLenum) GL_GLOBAL_ALPHA_SUN, "GL_GLOBAL_ALPHA_SUN");
#endif
#if defined(GL_GLOBAL_ALPHA_FACTOR_SUN)
defconsti(env, "GL-GLOBAL-ALPHA-FACTOR-SUN", (GLenum) GL_GLOBAL_ALPHA_FACTOR_SUN, "GL_GLOBAL_ALPHA_FACTOR_SUN");
#endif
#if defined(GL_TEXTURE_COLOR_WRITEMASK_SGIS)
defconsti(env, "GL-TEXTURE-COLOR-WRITEMASK-SGIS", (GLenum) GL_TEXTURE_COLOR_WRITEMASK_SGIS, "GL_TEXTURE_COLOR_WRITEMASK_SGIS");
#endif
#if defined(GL_EYE_DISTANCE_TO_POINT_SGIS)
defconsti(env, "GL-EYE-DISTANCE-TO-POINT-SGIS", (GLenum) GL_EYE_DISTANCE_TO_POINT_SGIS, "GL_EYE_DISTANCE_TO_POINT_SGIS");
#endif
#if defined(GL_OBJECT_DISTANCE_TO_POINT_SGIS)
defconsti(env, "GL-OBJECT-DISTANCE-TO-POINT-SGIS", (GLenum) GL_OBJECT_DISTANCE_TO_POINT_SGIS, "GL_OBJECT_DISTANCE_TO_POINT_SGIS");
#endif
#if defined(GL_EYE_DISTANCE_TO_LINE_SGIS)
defconsti(env, "GL-EYE-DISTANCE-TO-LINE-SGIS", (GLenum) GL_EYE_DISTANCE_TO_LINE_SGIS, "GL_EYE_DISTANCE_TO_LINE_SGIS");
#endif
#if defined(GL_OBJECT_DISTANCE_TO_LINE_SGIS)
defconsti(env, "GL-OBJECT-DISTANCE-TO-LINE-SGIS", (GLenum) GL_OBJECT_DISTANCE_TO_LINE_SGIS, "GL_OBJECT_DISTANCE_TO_LINE_SGIS");
#endif
#if defined(GL_EYE_POINT_SGIS)
defconsti(env, "GL-EYE-POINT-SGIS", (GLenum) GL_EYE_POINT_SGIS, "GL_EYE_POINT_SGIS");
#endif
#if defined(GL_OBJECT_POINT_SGIS)
defconsti(env, "GL-OBJECT-POINT-SGIS", (GLenum) GL_OBJECT_POINT_SGIS, "GL_OBJECT_POINT_SGIS");
#endif
#if defined(GL_EYE_LINE_SGIS)
defconsti(env, "GL-EYE-LINE-SGIS", (GLenum) GL_EYE_LINE_SGIS, "GL_EYE_LINE_SGIS");
#endif
#if defined(GL_OBJECT_LINE_SGIS)
defconsti(env, "GL-OBJECT-LINE-SGIS", (GLenum) GL_OBJECT_LINE_SGIS, "GL_OBJECT_LINE_SGIS");
#endif
#if defined(GL_LIGHT_MODEL_COLOR_CONTROL)
defconsti(env, "GL-LIGHT-MODEL-COLOR-CONTROL", (GLenum) GL_LIGHT_MODEL_COLOR_CONTROL, "GL_LIGHT_MODEL_COLOR_CONTROL");
#endif
#if defined(GL_LIGHT_MODEL_COLOR_CONTROL_EXT)
defconsti(env, "GL-LIGHT-MODEL-COLOR-CONTROL-EXT", (GLenum) GL_LIGHT_MODEL_COLOR_CONTROL_EXT, "GL_LIGHT_MODEL_COLOR_CONTROL_EXT");
#endif
#if defined(GL_SINGLE_COLOR)
defconsti(env, "GL-SINGLE-COLOR", (GLenum) GL_SINGLE_COLOR, "GL_SINGLE_COLOR");
#endif
#if defined(GL_SINGLE_COLOR_EXT)
defconsti(env, "GL-SINGLE-COLOR-EXT", (GLenum) GL_SINGLE_COLOR_EXT, "GL_SINGLE_COLOR_EXT");
#endif
#if defined(GL_SEPARATE_SPECULAR_COLOR)
defconsti(env, "GL-SEPARATE-SPECULAR-COLOR", (GLenum) GL_SEPARATE_SPECULAR_COLOR, "GL_SEPARATE_SPECULAR_COLOR");
#endif
#if defined(GL_SEPARATE_SPECULAR_COLOR_EXT)
defconsti(env, "GL-SEPARATE-SPECULAR-COLOR-EXT", (GLenum) GL_SEPARATE_SPECULAR_COLOR_EXT, "GL_SEPARATE_SPECULAR_COLOR_EXT");
#endif
#if defined(GL_SHARED_TEXTURE_PALETTE_EXT)
defconsti(env, "GL-SHARED-TEXTURE-PALETTE-EXT", (GLenum) GL_SHARED_TEXTURE_PALETTE_EXT, "GL_SHARED_TEXTURE_PALETTE_EXT");
#endif
#if defined(GL_TEXT_FRAGMENT_SHADER_ATI)
defconsti(env, "GL-TEXT-FRAGMENT-SHADER-ATI", (GLenum) GL_TEXT_FRAGMENT_SHADER_ATI, "GL_TEXT_FRAGMENT_SHADER_ATI");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-COLOR-ENCODING", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING, "GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-COLOR-ENCODING-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT, "GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-COMPONENT-TYPE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE, "GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-COMPONENT-TYPE-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT, "GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-RED-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-GREEN-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-BLUE-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-ALPHA-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-DEPTH-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-STENCIL-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT", (GLenum) GL_FRAMEBUFFER_DEFAULT, "GL_FRAMEBUFFER_DEFAULT");
#endif
#if defined(GL_FRAMEBUFFER_UNDEFINED)
defconsti(env, "GL-FRAMEBUFFER-UNDEFINED", (GLenum) GL_FRAMEBUFFER_UNDEFINED, "GL_FRAMEBUFFER_UNDEFINED");
#endif
#if defined(GL_FRAMEBUFFER_UNDEFINED_OES)
defconsti(env, "GL-FRAMEBUFFER-UNDEFINED-OES", (GLenum) GL_FRAMEBUFFER_UNDEFINED_OES, "GL_FRAMEBUFFER_UNDEFINED_OES");
#endif
#if defined(GL_DEPTH_STENCIL_ATTACHMENT)
defconsti(env, "GL-DEPTH-STENCIL-ATTACHMENT", (GLenum) GL_DEPTH_STENCIL_ATTACHMENT, "GL_DEPTH_STENCIL_ATTACHMENT");
#endif
#if defined(GL_MAJOR_VERSION)
defconsti(env, "GL-MAJOR-VERSION", (GLenum) GL_MAJOR_VERSION, "GL_MAJOR_VERSION");
#endif
#if defined(GL_MINOR_VERSION)
defconsti(env, "GL-MINOR-VERSION", (GLenum) GL_MINOR_VERSION, "GL_MINOR_VERSION");
#endif
#if defined(GL_NUM_EXTENSIONS)
defconsti(env, "GL-NUM-EXTENSIONS", (GLenum) GL_NUM_EXTENSIONS, "GL_NUM_EXTENSIONS");
#endif
#if defined(GL_CONTEXT_FLAGS)
defconsti(env, "GL-CONTEXT-FLAGS", (GLenum) GL_CONTEXT_FLAGS, "GL_CONTEXT_FLAGS");
#endif
#if defined(GL_BUFFER_IMMUTABLE_STORAGE)
defconsti(env, "GL-BUFFER-IMMUTABLE-STORAGE", (GLenum) GL_BUFFER_IMMUTABLE_STORAGE, "GL_BUFFER_IMMUTABLE_STORAGE");
#endif
#if defined(GL_BUFFER_IMMUTABLE_STORAGE_EXT)
defconsti(env, "GL-BUFFER-IMMUTABLE-STORAGE-EXT", (GLenum) GL_BUFFER_IMMUTABLE_STORAGE_EXT, "GL_BUFFER_IMMUTABLE_STORAGE_EXT");
#endif
#if defined(GL_BUFFER_STORAGE_FLAGS)
defconsti(env, "GL-BUFFER-STORAGE-FLAGS", (GLenum) GL_BUFFER_STORAGE_FLAGS, "GL_BUFFER_STORAGE_FLAGS");
#endif
#if defined(GL_BUFFER_STORAGE_FLAGS_EXT)
defconsti(env, "GL-BUFFER-STORAGE-FLAGS-EXT", (GLenum) GL_BUFFER_STORAGE_FLAGS_EXT, "GL_BUFFER_STORAGE_FLAGS_EXT");
#endif
#if defined(GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED)
defconsti(env, "GL-PRIMITIVE-RESTART-FOR-PATCHES-SUPPORTED", (GLenum) GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED, "GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED");
#endif
#if defined(GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES)
defconsti(env, "GL-PRIMITIVE-RESTART-FOR-PATCHES-SUPPORTED-OES", (GLenum) GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES, "GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES");
#endif
#if defined(GL_INDEX)
defconsti(env, "GL-INDEX", (GLenum) GL_INDEX, "GL_INDEX");
#endif
#if defined(GL_COMPRESSED_RED)
defconsti(env, "GL-COMPRESSED-RED", (GLenum) GL_COMPRESSED_RED, "GL_COMPRESSED_RED");
#endif
#if defined(GL_COMPRESSED_RG)
defconsti(env, "GL-COMPRESSED-RG", (GLenum) GL_COMPRESSED_RG, "GL_COMPRESSED_RG");
#endif
#if defined(GL_RG)
defconsti(env, "GL-RG", (GLenum) GL_RG, "GL_RG");
#endif
#if defined(GL_RG_EXT)
defconsti(env, "GL-RG-EXT", (GLenum) GL_RG_EXT, "GL_RG_EXT");
#endif
#if defined(GL_RG_INTEGER)
defconsti(env, "GL-RG-INTEGER", (GLenum) GL_RG_INTEGER, "GL_RG_INTEGER");
#endif
#if defined(GL_R8)
defconsti(env, "GL-R8", (GLenum) GL_R8, "GL_R8");
#endif
#if defined(GL_R8_EXT)
defconsti(env, "GL-R8-EXT", (GLenum) GL_R8_EXT, "GL_R8_EXT");
#endif
#if defined(GL_R16)
defconsti(env, "GL-R16", (GLenum) GL_R16, "GL_R16");
#endif
#if defined(GL_R16_EXT)
defconsti(env, "GL-R16-EXT", (GLenum) GL_R16_EXT, "GL_R16_EXT");
#endif
#if defined(GL_RG8)
defconsti(env, "GL-RG8", (GLenum) GL_RG8, "GL_RG8");
#endif
#if defined(GL_RG8_EXT)
defconsti(env, "GL-RG8-EXT", (GLenum) GL_RG8_EXT, "GL_RG8_EXT");
#endif
#if defined(GL_RG16)
defconsti(env, "GL-RG16", (GLenum) GL_RG16, "GL_RG16");
#endif
#if defined(GL_RG16_EXT)
defconsti(env, "GL-RG16-EXT", (GLenum) GL_RG16_EXT, "GL_RG16_EXT");
#endif
#if defined(GL_R16F)
defconsti(env, "GL-R16F", (GLenum) GL_R16F, "GL_R16F");
#endif
#if defined(GL_R16F_EXT)
defconsti(env, "GL-R16F-EXT", (GLenum) GL_R16F_EXT, "GL_R16F_EXT");
#endif
#if defined(GL_R32F)
defconsti(env, "GL-R32F", (GLenum) GL_R32F, "GL_R32F");
#endif
#if defined(GL_R32F_EXT)
defconsti(env, "GL-R32F-EXT", (GLenum) GL_R32F_EXT, "GL_R32F_EXT");
#endif
#if defined(GL_RG16F)
defconsti(env, "GL-RG16F", (GLenum) GL_RG16F, "GL_RG16F");
#endif
#if defined(GL_RG16F_EXT)
defconsti(env, "GL-RG16F-EXT", (GLenum) GL_RG16F_EXT, "GL_RG16F_EXT");
#endif
#if defined(GL_RG32F)
defconsti(env, "GL-RG32F", (GLenum) GL_RG32F, "GL_RG32F");
#endif
#if defined(GL_RG32F_EXT)
defconsti(env, "GL-RG32F-EXT", (GLenum) GL_RG32F_EXT, "GL_RG32F_EXT");
#endif
#if defined(GL_R8I)
defconsti(env, "GL-R8I", (GLenum) GL_R8I, "GL_R8I");
#endif
#if defined(GL_R8UI)
defconsti(env, "GL-R8UI", (GLenum) GL_R8UI, "GL_R8UI");
#endif
#if defined(GL_R16I)
defconsti(env, "GL-R16I", (GLenum) GL_R16I, "GL_R16I");
#endif
#if defined(GL_R16UI)
defconsti(env, "GL-R16UI", (GLenum) GL_R16UI, "GL_R16UI");
#endif
#if defined(GL_R32I)
defconsti(env, "GL-R32I", (GLenum) GL_R32I, "GL_R32I");
#endif
#if defined(GL_R32UI)
defconsti(env, "GL-R32UI", (GLenum) GL_R32UI, "GL_R32UI");
#endif
#if defined(GL_RG8I)
defconsti(env, "GL-RG8I", (GLenum) GL_RG8I, "GL_RG8I");
#endif
#if defined(GL_RG8UI)
defconsti(env, "GL-RG8UI", (GLenum) GL_RG8UI, "GL_RG8UI");
#endif
#if defined(GL_RG16I)
defconsti(env, "GL-RG16I", (GLenum) GL_RG16I, "GL_RG16I");
#endif
#if defined(GL_RG16UI)
defconsti(env, "GL-RG16UI", (GLenum) GL_RG16UI, "GL_RG16UI");
#endif
#if defined(GL_RG32I)
defconsti(env, "GL-RG32I", (GLenum) GL_RG32I, "GL_RG32I");
#endif
#if defined(GL_RG32UI)
defconsti(env, "GL-RG32UI", (GLenum) GL_RG32UI, "GL_RG32UI");
#endif
#if defined(GL_SYNC_CL_EVENT_ARB)
defconsti(env, "GL-SYNC-CL-EVENT-ARB", (GLenum) GL_SYNC_CL_EVENT_ARB, "GL_SYNC_CL_EVENT_ARB");
#endif
#if defined(GL_SYNC_CL_EVENT_COMPLETE_ARB)
defconsti(env, "GL-SYNC-CL-EVENT-COMPLETE-ARB", (GLenum) GL_SYNC_CL_EVENT_COMPLETE_ARB, "GL_SYNC_CL_EVENT_COMPLETE_ARB");
#endif
#if defined(GL_DEBUG_OUTPUT_SYNCHRONOUS)
defconsti(env, "GL-DEBUG-OUTPUT-SYNCHRONOUS", (GLenum) GL_DEBUG_OUTPUT_SYNCHRONOUS, "GL_DEBUG_OUTPUT_SYNCHRONOUS");
#endif
#if defined(GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB)
defconsti(env, "GL-DEBUG-OUTPUT-SYNCHRONOUS-ARB", (GLenum) GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB, "GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB");
#endif
#if defined(GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR)
defconsti(env, "GL-DEBUG-OUTPUT-SYNCHRONOUS-KHR", (GLenum) GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR, "GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR");
#endif
#if defined(GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH)
defconsti(env, "GL-DEBUG-NEXT-LOGGED-MESSAGE-LENGTH", (GLenum) GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH, "GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH");
#endif
#if defined(GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB)
defconsti(env, "GL-DEBUG-NEXT-LOGGED-MESSAGE-LENGTH-ARB", (GLenum) GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB, "GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB");
#endif
#if defined(GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR)
defconsti(env, "GL-DEBUG-NEXT-LOGGED-MESSAGE-LENGTH-KHR", (GLenum) GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR, "GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR");
#endif
#if defined(GL_DEBUG_CALLBACK_FUNCTION)
defconsti(env, "GL-DEBUG-CALLBACK-FUNCTION", (GLenum) GL_DEBUG_CALLBACK_FUNCTION, "GL_DEBUG_CALLBACK_FUNCTION");
#endif
#if defined(GL_DEBUG_CALLBACK_FUNCTION_ARB)
defconsti(env, "GL-DEBUG-CALLBACK-FUNCTION-ARB", (GLenum) GL_DEBUG_CALLBACK_FUNCTION_ARB, "GL_DEBUG_CALLBACK_FUNCTION_ARB");
#endif
#if defined(GL_DEBUG_CALLBACK_FUNCTION_KHR)
defconsti(env, "GL-DEBUG-CALLBACK-FUNCTION-KHR", (GLenum) GL_DEBUG_CALLBACK_FUNCTION_KHR, "GL_DEBUG_CALLBACK_FUNCTION_KHR");
#endif
#if defined(GL_DEBUG_CALLBACK_USER_PARAM)
defconsti(env, "GL-DEBUG-CALLBACK-USER-PARAM", (GLenum) GL_DEBUG_CALLBACK_USER_PARAM, "GL_DEBUG_CALLBACK_USER_PARAM");
#endif
#if defined(GL_DEBUG_CALLBACK_USER_PARAM_ARB)
defconsti(env, "GL-DEBUG-CALLBACK-USER-PARAM-ARB", (GLenum) GL_DEBUG_CALLBACK_USER_PARAM_ARB, "GL_DEBUG_CALLBACK_USER_PARAM_ARB");
#endif
#if defined(GL_DEBUG_CALLBACK_USER_PARAM_KHR)
defconsti(env, "GL-DEBUG-CALLBACK-USER-PARAM-KHR", (GLenum) GL_DEBUG_CALLBACK_USER_PARAM_KHR, "GL_DEBUG_CALLBACK_USER_PARAM_KHR");
#endif
#if defined(GL_DEBUG_SOURCE_API)
defconsti(env, "GL-DEBUG-SOURCE-API", (GLenum) GL_DEBUG_SOURCE_API, "GL_DEBUG_SOURCE_API");
#endif
#if defined(GL_DEBUG_SOURCE_API_ARB)
defconsti(env, "GL-DEBUG-SOURCE-API-ARB", (GLenum) GL_DEBUG_SOURCE_API_ARB, "GL_DEBUG_SOURCE_API_ARB");
#endif
#if defined(GL_DEBUG_SOURCE_API_KHR)
defconsti(env, "GL-DEBUG-SOURCE-API-KHR", (GLenum) GL_DEBUG_SOURCE_API_KHR, "GL_DEBUG_SOURCE_API_KHR");
#endif
#if defined(GL_DEBUG_SOURCE_WINDOW_SYSTEM)
defconsti(env, "GL-DEBUG-SOURCE-WINDOW-SYSTEM", (GLenum) GL_DEBUG_SOURCE_WINDOW_SYSTEM, "GL_DEBUG_SOURCE_WINDOW_SYSTEM");
#endif
#if defined(GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB)
defconsti(env, "GL-DEBUG-SOURCE-WINDOW-SYSTEM-ARB", (GLenum) GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB, "GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB");
#endif
#if defined(GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR)
defconsti(env, "GL-DEBUG-SOURCE-WINDOW-SYSTEM-KHR", (GLenum) GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR, "GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR");
#endif
#if defined(GL_DEBUG_SOURCE_SHADER_COMPILER)
defconsti(env, "GL-DEBUG-SOURCE-SHADER-COMPILER", (GLenum) GL_DEBUG_SOURCE_SHADER_COMPILER, "GL_DEBUG_SOURCE_SHADER_COMPILER");
#endif
#if defined(GL_DEBUG_SOURCE_SHADER_COMPILER_ARB)
defconsti(env, "GL-DEBUG-SOURCE-SHADER-COMPILER-ARB", (GLenum) GL_DEBUG_SOURCE_SHADER_COMPILER_ARB, "GL_DEBUG_SOURCE_SHADER_COMPILER_ARB");
#endif
#if defined(GL_DEBUG_SOURCE_SHADER_COMPILER_KHR)
defconsti(env, "GL-DEBUG-SOURCE-SHADER-COMPILER-KHR", (GLenum) GL_DEBUG_SOURCE_SHADER_COMPILER_KHR, "GL_DEBUG_SOURCE_SHADER_COMPILER_KHR");
#endif
#if defined(GL_DEBUG_SOURCE_THIRD_PARTY)
defconsti(env, "GL-DEBUG-SOURCE-THIRD-PARTY", (GLenum) GL_DEBUG_SOURCE_THIRD_PARTY, "GL_DEBUG_SOURCE_THIRD_PARTY");
#endif
#if defined(GL_DEBUG_SOURCE_THIRD_PARTY_ARB)
defconsti(env, "GL-DEBUG-SOURCE-THIRD-PARTY-ARB", (GLenum) GL_DEBUG_SOURCE_THIRD_PARTY_ARB, "GL_DEBUG_SOURCE_THIRD_PARTY_ARB");
#endif
#if defined(GL_DEBUG_SOURCE_THIRD_PARTY_KHR)
defconsti(env, "GL-DEBUG-SOURCE-THIRD-PARTY-KHR", (GLenum) GL_DEBUG_SOURCE_THIRD_PARTY_KHR, "GL_DEBUG_SOURCE_THIRD_PARTY_KHR");
#endif
#if defined(GL_DEBUG_SOURCE_APPLICATION)
defconsti(env, "GL-DEBUG-SOURCE-APPLICATION", (GLenum) GL_DEBUG_SOURCE_APPLICATION, "GL_DEBUG_SOURCE_APPLICATION");
#endif
#if defined(GL_DEBUG_SOURCE_APPLICATION_ARB)
defconsti(env, "GL-DEBUG-SOURCE-APPLICATION-ARB", (GLenum) GL_DEBUG_SOURCE_APPLICATION_ARB, "GL_DEBUG_SOURCE_APPLICATION_ARB");
#endif
#if defined(GL_DEBUG_SOURCE_APPLICATION_KHR)
defconsti(env, "GL-DEBUG-SOURCE-APPLICATION-KHR", (GLenum) GL_DEBUG_SOURCE_APPLICATION_KHR, "GL_DEBUG_SOURCE_APPLICATION_KHR");
#endif
#if defined(GL_DEBUG_SOURCE_OTHER)
defconsti(env, "GL-DEBUG-SOURCE-OTHER", (GLenum) GL_DEBUG_SOURCE_OTHER, "GL_DEBUG_SOURCE_OTHER");
#endif
#if defined(GL_DEBUG_SOURCE_OTHER_ARB)
defconsti(env, "GL-DEBUG-SOURCE-OTHER-ARB", (GLenum) GL_DEBUG_SOURCE_OTHER_ARB, "GL_DEBUG_SOURCE_OTHER_ARB");
#endif
#if defined(GL_DEBUG_SOURCE_OTHER_KHR)
defconsti(env, "GL-DEBUG-SOURCE-OTHER-KHR", (GLenum) GL_DEBUG_SOURCE_OTHER_KHR, "GL_DEBUG_SOURCE_OTHER_KHR");
#endif
#if defined(GL_DEBUG_TYPE_ERROR)
defconsti(env, "GL-DEBUG-TYPE-ERROR", (GLenum) GL_DEBUG_TYPE_ERROR, "GL_DEBUG_TYPE_ERROR");
#endif
#if defined(GL_DEBUG_TYPE_ERROR_ARB)
defconsti(env, "GL-DEBUG-TYPE-ERROR-ARB", (GLenum) GL_DEBUG_TYPE_ERROR_ARB, "GL_DEBUG_TYPE_ERROR_ARB");
#endif
#if defined(GL_DEBUG_TYPE_ERROR_KHR)
defconsti(env, "GL-DEBUG-TYPE-ERROR-KHR", (GLenum) GL_DEBUG_TYPE_ERROR_KHR, "GL_DEBUG_TYPE_ERROR_KHR");
#endif
#if defined(GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR)
defconsti(env, "GL-DEBUG-TYPE-DEPRECATED-BEHAVIOR", (GLenum) GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR, "GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR");
#endif
#if defined(GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB)
defconsti(env, "GL-DEBUG-TYPE-DEPRECATED-BEHAVIOR-ARB", (GLenum) GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB, "GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB");
#endif
#if defined(GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR)
defconsti(env, "GL-DEBUG-TYPE-DEPRECATED-BEHAVIOR-KHR", (GLenum) GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR, "GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR");
#endif
#if defined(GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR)
defconsti(env, "GL-DEBUG-TYPE-UNDEFINED-BEHAVIOR", (GLenum) GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR, "GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR");
#endif
#if defined(GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB)
defconsti(env, "GL-DEBUG-TYPE-UNDEFINED-BEHAVIOR-ARB", (GLenum) GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB, "GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB");
#endif
#if defined(GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR)
defconsti(env, "GL-DEBUG-TYPE-UNDEFINED-BEHAVIOR-KHR", (GLenum) GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR, "GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR");
#endif
#if defined(GL_DEBUG_TYPE_PORTABILITY)
defconsti(env, "GL-DEBUG-TYPE-PORTABILITY", (GLenum) GL_DEBUG_TYPE_PORTABILITY, "GL_DEBUG_TYPE_PORTABILITY");
#endif
#if defined(GL_DEBUG_TYPE_PORTABILITY_ARB)
defconsti(env, "GL-DEBUG-TYPE-PORTABILITY-ARB", (GLenum) GL_DEBUG_TYPE_PORTABILITY_ARB, "GL_DEBUG_TYPE_PORTABILITY_ARB");
#endif
#if defined(GL_DEBUG_TYPE_PORTABILITY_KHR)
defconsti(env, "GL-DEBUG-TYPE-PORTABILITY-KHR", (GLenum) GL_DEBUG_TYPE_PORTABILITY_KHR, "GL_DEBUG_TYPE_PORTABILITY_KHR");
#endif
#if defined(GL_DEBUG_TYPE_PERFORMANCE)
defconsti(env, "GL-DEBUG-TYPE-PERFORMANCE", (GLenum) GL_DEBUG_TYPE_PERFORMANCE, "GL_DEBUG_TYPE_PERFORMANCE");
#endif
#if defined(GL_DEBUG_TYPE_PERFORMANCE_ARB)
defconsti(env, "GL-DEBUG-TYPE-PERFORMANCE-ARB", (GLenum) GL_DEBUG_TYPE_PERFORMANCE_ARB, "GL_DEBUG_TYPE_PERFORMANCE_ARB");
#endif
#if defined(GL_DEBUG_TYPE_PERFORMANCE_KHR)
defconsti(env, "GL-DEBUG-TYPE-PERFORMANCE-KHR", (GLenum) GL_DEBUG_TYPE_PERFORMANCE_KHR, "GL_DEBUG_TYPE_PERFORMANCE_KHR");
#endif
#if defined(GL_DEBUG_TYPE_OTHER)
defconsti(env, "GL-DEBUG-TYPE-OTHER", (GLenum) GL_DEBUG_TYPE_OTHER, "GL_DEBUG_TYPE_OTHER");
#endif
#if defined(GL_DEBUG_TYPE_OTHER_ARB)
defconsti(env, "GL-DEBUG-TYPE-OTHER-ARB", (GLenum) GL_DEBUG_TYPE_OTHER_ARB, "GL_DEBUG_TYPE_OTHER_ARB");
#endif
#if defined(GL_DEBUG_TYPE_OTHER_KHR)
defconsti(env, "GL-DEBUG-TYPE-OTHER-KHR", (GLenum) GL_DEBUG_TYPE_OTHER_KHR, "GL_DEBUG_TYPE_OTHER_KHR");
#endif
#if defined(GL_LOSE_CONTEXT_ON_RESET)
defconsti(env, "GL-LOSE-CONTEXT-ON-RESET", (GLenum) GL_LOSE_CONTEXT_ON_RESET, "GL_LOSE_CONTEXT_ON_RESET");
#endif
#if defined(GL_LOSE_CONTEXT_ON_RESET_ARB)
defconsti(env, "GL-LOSE-CONTEXT-ON-RESET-ARB", (GLenum) GL_LOSE_CONTEXT_ON_RESET_ARB, "GL_LOSE_CONTEXT_ON_RESET_ARB");
#endif
#if defined(GL_LOSE_CONTEXT_ON_RESET_EXT)
defconsti(env, "GL-LOSE-CONTEXT-ON-RESET-EXT", (GLenum) GL_LOSE_CONTEXT_ON_RESET_EXT, "GL_LOSE_CONTEXT_ON_RESET_EXT");
#endif
#if defined(GL_LOSE_CONTEXT_ON_RESET_KHR)
defconsti(env, "GL-LOSE-CONTEXT-ON-RESET-KHR", (GLenum) GL_LOSE_CONTEXT_ON_RESET_KHR, "GL_LOSE_CONTEXT_ON_RESET_KHR");
#endif
#if defined(GL_GUILTY_CONTEXT_RESET)
defconsti(env, "GL-GUILTY-CONTEXT-RESET", (GLenum) GL_GUILTY_CONTEXT_RESET, "GL_GUILTY_CONTEXT_RESET");
#endif
#if defined(GL_GUILTY_CONTEXT_RESET_ARB)
defconsti(env, "GL-GUILTY-CONTEXT-RESET-ARB", (GLenum) GL_GUILTY_CONTEXT_RESET_ARB, "GL_GUILTY_CONTEXT_RESET_ARB");
#endif
#if defined(GL_GUILTY_CONTEXT_RESET_EXT)
defconsti(env, "GL-GUILTY-CONTEXT-RESET-EXT", (GLenum) GL_GUILTY_CONTEXT_RESET_EXT, "GL_GUILTY_CONTEXT_RESET_EXT");
#endif
#if defined(GL_GUILTY_CONTEXT_RESET_KHR)
defconsti(env, "GL-GUILTY-CONTEXT-RESET-KHR", (GLenum) GL_GUILTY_CONTEXT_RESET_KHR, "GL_GUILTY_CONTEXT_RESET_KHR");
#endif
#if defined(GL_INNOCENT_CONTEXT_RESET)
defconsti(env, "GL-INNOCENT-CONTEXT-RESET", (GLenum) GL_INNOCENT_CONTEXT_RESET, "GL_INNOCENT_CONTEXT_RESET");
#endif
#if defined(GL_INNOCENT_CONTEXT_RESET_ARB)
defconsti(env, "GL-INNOCENT-CONTEXT-RESET-ARB", (GLenum) GL_INNOCENT_CONTEXT_RESET_ARB, "GL_INNOCENT_CONTEXT_RESET_ARB");
#endif
#if defined(GL_INNOCENT_CONTEXT_RESET_EXT)
defconsti(env, "GL-INNOCENT-CONTEXT-RESET-EXT", (GLenum) GL_INNOCENT_CONTEXT_RESET_EXT, "GL_INNOCENT_CONTEXT_RESET_EXT");
#endif
#if defined(GL_INNOCENT_CONTEXT_RESET_KHR)
defconsti(env, "GL-INNOCENT-CONTEXT-RESET-KHR", (GLenum) GL_INNOCENT_CONTEXT_RESET_KHR, "GL_INNOCENT_CONTEXT_RESET_KHR");
#endif
#if defined(GL_UNKNOWN_CONTEXT_RESET)
defconsti(env, "GL-UNKNOWN-CONTEXT-RESET", (GLenum) GL_UNKNOWN_CONTEXT_RESET, "GL_UNKNOWN_CONTEXT_RESET");
#endif
#if defined(GL_UNKNOWN_CONTEXT_RESET_ARB)
defconsti(env, "GL-UNKNOWN-CONTEXT-RESET-ARB", (GLenum) GL_UNKNOWN_CONTEXT_RESET_ARB, "GL_UNKNOWN_CONTEXT_RESET_ARB");
#endif
#if defined(GL_UNKNOWN_CONTEXT_RESET_EXT)
defconsti(env, "GL-UNKNOWN-CONTEXT-RESET-EXT", (GLenum) GL_UNKNOWN_CONTEXT_RESET_EXT, "GL_UNKNOWN_CONTEXT_RESET_EXT");
#endif
#if defined(GL_UNKNOWN_CONTEXT_RESET_KHR)
defconsti(env, "GL-UNKNOWN-CONTEXT-RESET-KHR", (GLenum) GL_UNKNOWN_CONTEXT_RESET_KHR, "GL_UNKNOWN_CONTEXT_RESET_KHR");
#endif
#if defined(GL_RESET_NOTIFICATION_STRATEGY)
defconsti(env, "GL-RESET-NOTIFICATION-STRATEGY", (GLenum) GL_RESET_NOTIFICATION_STRATEGY, "GL_RESET_NOTIFICATION_STRATEGY");
#endif
#if defined(GL_RESET_NOTIFICATION_STRATEGY_ARB)
defconsti(env, "GL-RESET-NOTIFICATION-STRATEGY-ARB", (GLenum) GL_RESET_NOTIFICATION_STRATEGY_ARB, "GL_RESET_NOTIFICATION_STRATEGY_ARB");
#endif
#if defined(GL_RESET_NOTIFICATION_STRATEGY_EXT)
defconsti(env, "GL-RESET-NOTIFICATION-STRATEGY-EXT", (GLenum) GL_RESET_NOTIFICATION_STRATEGY_EXT, "GL_RESET_NOTIFICATION_STRATEGY_EXT");
#endif
#if defined(GL_RESET_NOTIFICATION_STRATEGY_KHR)
defconsti(env, "GL-RESET-NOTIFICATION-STRATEGY-KHR", (GLenum) GL_RESET_NOTIFICATION_STRATEGY_KHR, "GL_RESET_NOTIFICATION_STRATEGY_KHR");
#endif
#if defined(GL_PROGRAM_BINARY_RETRIEVABLE_HINT)
defconsti(env, "GL-PROGRAM-BINARY-RETRIEVABLE-HINT", (GLenum) GL_PROGRAM_BINARY_RETRIEVABLE_HINT, "GL_PROGRAM_BINARY_RETRIEVABLE_HINT");
#endif
#if defined(GL_PROGRAM_SEPARABLE)
defconsti(env, "GL-PROGRAM-SEPARABLE", (GLenum) GL_PROGRAM_SEPARABLE, "GL_PROGRAM_SEPARABLE");
#endif
#if defined(GL_PROGRAM_SEPARABLE_EXT)
defconsti(env, "GL-PROGRAM-SEPARABLE-EXT", (GLenum) GL_PROGRAM_SEPARABLE_EXT, "GL_PROGRAM_SEPARABLE_EXT");
#endif
#if defined(GL_ACTIVE_PROGRAM)
defconsti(env, "GL-ACTIVE-PROGRAM", (GLenum) GL_ACTIVE_PROGRAM, "GL_ACTIVE_PROGRAM");
#endif
#if defined(GL_ACTIVE_PROGRAM_EXT)
defconsti(env, "GL-ACTIVE-PROGRAM-EXT", (GLenum) GL_ACTIVE_PROGRAM_EXT, "GL_ACTIVE_PROGRAM_EXT");
#endif
#if defined(GL_PROGRAM_PIPELINE_BINDING)
defconsti(env, "GL-PROGRAM-PIPELINE-BINDING", (GLenum) GL_PROGRAM_PIPELINE_BINDING, "GL_PROGRAM_PIPELINE_BINDING");
#endif
#if defined(GL_PROGRAM_PIPELINE_BINDING_EXT)
defconsti(env, "GL-PROGRAM-PIPELINE-BINDING-EXT", (GLenum) GL_PROGRAM_PIPELINE_BINDING_EXT, "GL_PROGRAM_PIPELINE_BINDING_EXT");
#endif
#if defined(GL_MAX_VIEWPORTS)
defconsti(env, "GL-MAX-VIEWPORTS", (GLenum) GL_MAX_VIEWPORTS, "GL_MAX_VIEWPORTS");
#endif
#if defined(GL_MAX_VIEWPORTS_NV)
defconsti(env, "GL-MAX-VIEWPORTS-NV", (GLenum) GL_MAX_VIEWPORTS_NV, "GL_MAX_VIEWPORTS_NV");
#endif
#if defined(GL_MAX_VIEWPORTS_OES)
defconsti(env, "GL-MAX-VIEWPORTS-OES", (GLenum) GL_MAX_VIEWPORTS_OES, "GL_MAX_VIEWPORTS_OES");
#endif
#if defined(GL_VIEWPORT_SUBPIXEL_BITS)
defconsti(env, "GL-VIEWPORT-SUBPIXEL-BITS", (GLenum) GL_VIEWPORT_SUBPIXEL_BITS, "GL_VIEWPORT_SUBPIXEL_BITS");
#endif
#if defined(GL_VIEWPORT_SUBPIXEL_BITS_EXT)
defconsti(env, "GL-VIEWPORT-SUBPIXEL-BITS-EXT", (GLenum) GL_VIEWPORT_SUBPIXEL_BITS_EXT, "GL_VIEWPORT_SUBPIXEL_BITS_EXT");
#endif
#if defined(GL_VIEWPORT_SUBPIXEL_BITS_NV)
defconsti(env, "GL-VIEWPORT-SUBPIXEL-BITS-NV", (GLenum) GL_VIEWPORT_SUBPIXEL_BITS_NV, "GL_VIEWPORT_SUBPIXEL_BITS_NV");
#endif
#if defined(GL_VIEWPORT_SUBPIXEL_BITS_OES)
defconsti(env, "GL-VIEWPORT-SUBPIXEL-BITS-OES", (GLenum) GL_VIEWPORT_SUBPIXEL_BITS_OES, "GL_VIEWPORT_SUBPIXEL_BITS_OES");
#endif
#if defined(GL_VIEWPORT_BOUNDS_RANGE)
defconsti(env, "GL-VIEWPORT-BOUNDS-RANGE", (GLenum) GL_VIEWPORT_BOUNDS_RANGE, "GL_VIEWPORT_BOUNDS_RANGE");
#endif
#if defined(GL_VIEWPORT_BOUNDS_RANGE_EXT)
defconsti(env, "GL-VIEWPORT-BOUNDS-RANGE-EXT", (GLenum) GL_VIEWPORT_BOUNDS_RANGE_EXT, "GL_VIEWPORT_BOUNDS_RANGE_EXT");
#endif
#if defined(GL_VIEWPORT_BOUNDS_RANGE_NV)
defconsti(env, "GL-VIEWPORT-BOUNDS-RANGE-NV", (GLenum) GL_VIEWPORT_BOUNDS_RANGE_NV, "GL_VIEWPORT_BOUNDS_RANGE_NV");
#endif
#if defined(GL_VIEWPORT_BOUNDS_RANGE_OES)
defconsti(env, "GL-VIEWPORT-BOUNDS-RANGE-OES", (GLenum) GL_VIEWPORT_BOUNDS_RANGE_OES, "GL_VIEWPORT_BOUNDS_RANGE_OES");
#endif
#if defined(GL_LAYER_PROVOKING_VERTEX)
defconsti(env, "GL-LAYER-PROVOKING-VERTEX", (GLenum) GL_LAYER_PROVOKING_VERTEX, "GL_LAYER_PROVOKING_VERTEX");
#endif
#if defined(GL_LAYER_PROVOKING_VERTEX_EXT)
defconsti(env, "GL-LAYER-PROVOKING-VERTEX-EXT", (GLenum) GL_LAYER_PROVOKING_VERTEX_EXT, "GL_LAYER_PROVOKING_VERTEX_EXT");
#endif
#if defined(GL_LAYER_PROVOKING_VERTEX_OES)
defconsti(env, "GL-LAYER-PROVOKING-VERTEX-OES", (GLenum) GL_LAYER_PROVOKING_VERTEX_OES, "GL_LAYER_PROVOKING_VERTEX_OES");
#endif
#if defined(GL_VIEWPORT_INDEX_PROVOKING_VERTEX)
defconsti(env, "GL-VIEWPORT-INDEX-PROVOKING-VERTEX", (GLenum) GL_VIEWPORT_INDEX_PROVOKING_VERTEX, "GL_VIEWPORT_INDEX_PROVOKING_VERTEX");
#endif
#if defined(GL_VIEWPORT_INDEX_PROVOKING_VERTEX_EXT)
defconsti(env, "GL-VIEWPORT-INDEX-PROVOKING-VERTEX-EXT", (GLenum) GL_VIEWPORT_INDEX_PROVOKING_VERTEX_EXT, "GL_VIEWPORT_INDEX_PROVOKING_VERTEX_EXT");
#endif
#if defined(GL_VIEWPORT_INDEX_PROVOKING_VERTEX_NV)
defconsti(env, "GL-VIEWPORT-INDEX-PROVOKING-VERTEX-NV", (GLenum) GL_VIEWPORT_INDEX_PROVOKING_VERTEX_NV, "GL_VIEWPORT_INDEX_PROVOKING_VERTEX_NV");
#endif
#if defined(GL_VIEWPORT_INDEX_PROVOKING_VERTEX_OES)
defconsti(env, "GL-VIEWPORT-INDEX-PROVOKING-VERTEX-OES", (GLenum) GL_VIEWPORT_INDEX_PROVOKING_VERTEX_OES, "GL_VIEWPORT_INDEX_PROVOKING_VERTEX_OES");
#endif
#if defined(GL_UNDEFINED_VERTEX)
defconsti(env, "GL-UNDEFINED-VERTEX", (GLenum) GL_UNDEFINED_VERTEX, "GL_UNDEFINED_VERTEX");
#endif
#if defined(GL_UNDEFINED_VERTEX_EXT)
defconsti(env, "GL-UNDEFINED-VERTEX-EXT", (GLenum) GL_UNDEFINED_VERTEX_EXT, "GL_UNDEFINED_VERTEX_EXT");
#endif
#if defined(GL_UNDEFINED_VERTEX_OES)
defconsti(env, "GL-UNDEFINED-VERTEX-OES", (GLenum) GL_UNDEFINED_VERTEX_OES, "GL_UNDEFINED_VERTEX_OES");
#endif
#if defined(GL_NO_RESET_NOTIFICATION)
defconsti(env, "GL-NO-RESET-NOTIFICATION", (GLenum) GL_NO_RESET_NOTIFICATION, "GL_NO_RESET_NOTIFICATION");
#endif
#if defined(GL_NO_RESET_NOTIFICATION_ARB)
defconsti(env, "GL-NO-RESET-NOTIFICATION-ARB", (GLenum) GL_NO_RESET_NOTIFICATION_ARB, "GL_NO_RESET_NOTIFICATION_ARB");
#endif
#if defined(GL_NO_RESET_NOTIFICATION_EXT)
defconsti(env, "GL-NO-RESET-NOTIFICATION-EXT", (GLenum) GL_NO_RESET_NOTIFICATION_EXT, "GL_NO_RESET_NOTIFICATION_EXT");
#endif
#if defined(GL_NO_RESET_NOTIFICATION_KHR)
defconsti(env, "GL-NO-RESET-NOTIFICATION-KHR", (GLenum) GL_NO_RESET_NOTIFICATION_KHR, "GL_NO_RESET_NOTIFICATION_KHR");
#endif
#if defined(GL_MAX_COMPUTE_SHARED_MEMORY_SIZE)
defconsti(env, "GL-MAX-COMPUTE-SHARED-MEMORY-SIZE", (GLenum) GL_MAX_COMPUTE_SHARED_MEMORY_SIZE, "GL_MAX_COMPUTE_SHARED_MEMORY_SIZE");
#endif
#if defined(GL_MAX_COMPUTE_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMPUTE-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMPUTE_UNIFORM_COMPONENTS, "GL_MAX_COMPUTE_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-COMPUTE-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS, "GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_COMPUTE_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-COMPUTE-ATOMIC-COUNTERS", (GLenum) GL_MAX_COMPUTE_ATOMIC_COUNTERS, "GL_MAX_COMPUTE_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-COMPUTE-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS");
#endif
#if defined(GL_COMPUTE_WORK_GROUP_SIZE)
defconsti(env, "GL-COMPUTE-WORK-GROUP-SIZE", (GLenum) GL_COMPUTE_WORK_GROUP_SIZE, "GL_COMPUTE_WORK_GROUP_SIZE");
#endif
#if defined(GL_DEBUG_TYPE_MARKER)
defconsti(env, "GL-DEBUG-TYPE-MARKER", (GLenum) GL_DEBUG_TYPE_MARKER, "GL_DEBUG_TYPE_MARKER");
#endif
#if defined(GL_DEBUG_TYPE_MARKER_KHR)
defconsti(env, "GL-DEBUG-TYPE-MARKER-KHR", (GLenum) GL_DEBUG_TYPE_MARKER_KHR, "GL_DEBUG_TYPE_MARKER_KHR");
#endif
#if defined(GL_DEBUG_TYPE_PUSH_GROUP)
defconsti(env, "GL-DEBUG-TYPE-PUSH-GROUP", (GLenum) GL_DEBUG_TYPE_PUSH_GROUP, "GL_DEBUG_TYPE_PUSH_GROUP");
#endif
#if defined(GL_DEBUG_TYPE_PUSH_GROUP_KHR)
defconsti(env, "GL-DEBUG-TYPE-PUSH-GROUP-KHR", (GLenum) GL_DEBUG_TYPE_PUSH_GROUP_KHR, "GL_DEBUG_TYPE_PUSH_GROUP_KHR");
#endif
#if defined(GL_DEBUG_TYPE_POP_GROUP)
defconsti(env, "GL-DEBUG-TYPE-POP-GROUP", (GLenum) GL_DEBUG_TYPE_POP_GROUP, "GL_DEBUG_TYPE_POP_GROUP");
#endif
#if defined(GL_DEBUG_TYPE_POP_GROUP_KHR)
defconsti(env, "GL-DEBUG-TYPE-POP-GROUP-KHR", (GLenum) GL_DEBUG_TYPE_POP_GROUP_KHR, "GL_DEBUG_TYPE_POP_GROUP_KHR");
#endif
#if defined(GL_DEBUG_SEVERITY_NOTIFICATION)
defconsti(env, "GL-DEBUG-SEVERITY-NOTIFICATION", (GLenum) GL_DEBUG_SEVERITY_NOTIFICATION, "GL_DEBUG_SEVERITY_NOTIFICATION");
#endif
#if defined(GL_DEBUG_SEVERITY_NOTIFICATION_KHR)
defconsti(env, "GL-DEBUG-SEVERITY-NOTIFICATION-KHR", (GLenum) GL_DEBUG_SEVERITY_NOTIFICATION_KHR, "GL_DEBUG_SEVERITY_NOTIFICATION_KHR");
#endif
#if defined(GL_MAX_DEBUG_GROUP_STACK_DEPTH)
defconsti(env, "GL-MAX-DEBUG-GROUP-STACK-DEPTH", (GLenum) GL_MAX_DEBUG_GROUP_STACK_DEPTH, "GL_MAX_DEBUG_GROUP_STACK_DEPTH");
#endif
#if defined(GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR)
defconsti(env, "GL-MAX-DEBUG-GROUP-STACK-DEPTH-KHR", (GLenum) GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR, "GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR");
#endif
#if defined(GL_DEBUG_GROUP_STACK_DEPTH)
defconsti(env, "GL-DEBUG-GROUP-STACK-DEPTH", (GLenum) GL_DEBUG_GROUP_STACK_DEPTH, "GL_DEBUG_GROUP_STACK_DEPTH");
#endif
#if defined(GL_DEBUG_GROUP_STACK_DEPTH_KHR)
defconsti(env, "GL-DEBUG-GROUP-STACK-DEPTH-KHR", (GLenum) GL_DEBUG_GROUP_STACK_DEPTH_KHR, "GL_DEBUG_GROUP_STACK_DEPTH_KHR");
#endif
#if defined(GL_MAX_UNIFORM_LOCATIONS)
defconsti(env, "GL-MAX-UNIFORM-LOCATIONS", (GLenum) GL_MAX_UNIFORM_LOCATIONS, "GL_MAX_UNIFORM_LOCATIONS");
#endif
#if defined(GL_INTERNALFORMAT_SUPPORTED)
defconsti(env, "GL-INTERNALFORMAT-SUPPORTED", (GLenum) GL_INTERNALFORMAT_SUPPORTED, "GL_INTERNALFORMAT_SUPPORTED");
#endif
#if defined(GL_INTERNALFORMAT_PREFERRED)
defconsti(env, "GL-INTERNALFORMAT-PREFERRED", (GLenum) GL_INTERNALFORMAT_PREFERRED, "GL_INTERNALFORMAT_PREFERRED");
#endif
#if defined(GL_INTERNALFORMAT_RED_SIZE)
defconsti(env, "GL-INTERNALFORMAT-RED-SIZE", (GLenum) GL_INTERNALFORMAT_RED_SIZE, "GL_INTERNALFORMAT_RED_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_GREEN_SIZE)
defconsti(env, "GL-INTERNALFORMAT-GREEN-SIZE", (GLenum) GL_INTERNALFORMAT_GREEN_SIZE, "GL_INTERNALFORMAT_GREEN_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_BLUE_SIZE)
defconsti(env, "GL-INTERNALFORMAT-BLUE-SIZE", (GLenum) GL_INTERNALFORMAT_BLUE_SIZE, "GL_INTERNALFORMAT_BLUE_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_ALPHA_SIZE)
defconsti(env, "GL-INTERNALFORMAT-ALPHA-SIZE", (GLenum) GL_INTERNALFORMAT_ALPHA_SIZE, "GL_INTERNALFORMAT_ALPHA_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_DEPTH_SIZE)
defconsti(env, "GL-INTERNALFORMAT-DEPTH-SIZE", (GLenum) GL_INTERNALFORMAT_DEPTH_SIZE, "GL_INTERNALFORMAT_DEPTH_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_STENCIL_SIZE)
defconsti(env, "GL-INTERNALFORMAT-STENCIL-SIZE", (GLenum) GL_INTERNALFORMAT_STENCIL_SIZE, "GL_INTERNALFORMAT_STENCIL_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_SHARED_SIZE)
defconsti(env, "GL-INTERNALFORMAT-SHARED-SIZE", (GLenum) GL_INTERNALFORMAT_SHARED_SIZE, "GL_INTERNALFORMAT_SHARED_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_RED_TYPE)
defconsti(env, "GL-INTERNALFORMAT-RED-TYPE", (GLenum) GL_INTERNALFORMAT_RED_TYPE, "GL_INTERNALFORMAT_RED_TYPE");
#endif
#if defined(GL_INTERNALFORMAT_GREEN_TYPE)
defconsti(env, "GL-INTERNALFORMAT-GREEN-TYPE", (GLenum) GL_INTERNALFORMAT_GREEN_TYPE, "GL_INTERNALFORMAT_GREEN_TYPE");
#endif
#if defined(GL_INTERNALFORMAT_BLUE_TYPE)
defconsti(env, "GL-INTERNALFORMAT-BLUE-TYPE", (GLenum) GL_INTERNALFORMAT_BLUE_TYPE, "GL_INTERNALFORMAT_BLUE_TYPE");
#endif
#if defined(GL_INTERNALFORMAT_ALPHA_TYPE)
defconsti(env, "GL-INTERNALFORMAT-ALPHA-TYPE", (GLenum) GL_INTERNALFORMAT_ALPHA_TYPE, "GL_INTERNALFORMAT_ALPHA_TYPE");
#endif
#if defined(GL_INTERNALFORMAT_DEPTH_TYPE)
defconsti(env, "GL-INTERNALFORMAT-DEPTH-TYPE", (GLenum) GL_INTERNALFORMAT_DEPTH_TYPE, "GL_INTERNALFORMAT_DEPTH_TYPE");
#endif
#if defined(GL_INTERNALFORMAT_STENCIL_TYPE)
defconsti(env, "GL-INTERNALFORMAT-STENCIL-TYPE", (GLenum) GL_INTERNALFORMAT_STENCIL_TYPE, "GL_INTERNALFORMAT_STENCIL_TYPE");
#endif
#if defined(GL_MAX_WIDTH)
defconsti(env, "GL-MAX-WIDTH", (GLenum) GL_MAX_WIDTH, "GL_MAX_WIDTH");
#endif
#if defined(GL_MAX_HEIGHT)
defconsti(env, "GL-MAX-HEIGHT", (GLenum) GL_MAX_HEIGHT, "GL_MAX_HEIGHT");
#endif
#if defined(GL_MAX_DEPTH)
defconsti(env, "GL-MAX-DEPTH", (GLenum) GL_MAX_DEPTH, "GL_MAX_DEPTH");
#endif
#if defined(GL_MAX_LAYERS)
defconsti(env, "GL-MAX-LAYERS", (GLenum) GL_MAX_LAYERS, "GL_MAX_LAYERS");
#endif
#if defined(GL_MAX_COMBINED_DIMENSIONS)
defconsti(env, "GL-MAX-COMBINED-DIMENSIONS", (GLenum) GL_MAX_COMBINED_DIMENSIONS, "GL_MAX_COMBINED_DIMENSIONS");
#endif
#if defined(GL_COLOR_COMPONENTS)
defconsti(env, "GL-COLOR-COMPONENTS", (GLenum) GL_COLOR_COMPONENTS, "GL_COLOR_COMPONENTS");
#endif
#if defined(GL_DEPTH_COMPONENTS)
defconsti(env, "GL-DEPTH-COMPONENTS", (GLenum) GL_DEPTH_COMPONENTS, "GL_DEPTH_COMPONENTS");
#endif
#if defined(GL_STENCIL_COMPONENTS)
defconsti(env, "GL-STENCIL-COMPONENTS", (GLenum) GL_STENCIL_COMPONENTS, "GL_STENCIL_COMPONENTS");
#endif
#if defined(GL_COLOR_RENDERABLE)
defconsti(env, "GL-COLOR-RENDERABLE", (GLenum) GL_COLOR_RENDERABLE, "GL_COLOR_RENDERABLE");
#endif
#if defined(GL_DEPTH_RENDERABLE)
defconsti(env, "GL-DEPTH-RENDERABLE", (GLenum) GL_DEPTH_RENDERABLE, "GL_DEPTH_RENDERABLE");
#endif
#if defined(GL_STENCIL_RENDERABLE)
defconsti(env, "GL-STENCIL-RENDERABLE", (GLenum) GL_STENCIL_RENDERABLE, "GL_STENCIL_RENDERABLE");
#endif
#if defined(GL_FRAMEBUFFER_RENDERABLE)
defconsti(env, "GL-FRAMEBUFFER-RENDERABLE", (GLenum) GL_FRAMEBUFFER_RENDERABLE, "GL_FRAMEBUFFER_RENDERABLE");
#endif
#if defined(GL_FRAMEBUFFER_RENDERABLE_LAYERED)
defconsti(env, "GL-FRAMEBUFFER-RENDERABLE-LAYERED", (GLenum) GL_FRAMEBUFFER_RENDERABLE_LAYERED, "GL_FRAMEBUFFER_RENDERABLE_LAYERED");
#endif
#if defined(GL_FRAMEBUFFER_BLEND)
defconsti(env, "GL-FRAMEBUFFER-BLEND", (GLenum) GL_FRAMEBUFFER_BLEND, "GL_FRAMEBUFFER_BLEND");
#endif
#if defined(GL_READ_PIXELS)
defconsti(env, "GL-READ-PIXELS", (GLenum) GL_READ_PIXELS, "GL_READ_PIXELS");
#endif
#if defined(GL_READ_PIXELS_FORMAT)
defconsti(env, "GL-READ-PIXELS-FORMAT", (GLenum) GL_READ_PIXELS_FORMAT, "GL_READ_PIXELS_FORMAT");
#endif
#if defined(GL_READ_PIXELS_TYPE)
defconsti(env, "GL-READ-PIXELS-TYPE", (GLenum) GL_READ_PIXELS_TYPE, "GL_READ_PIXELS_TYPE");
#endif
#if defined(GL_TEXTURE_IMAGE_FORMAT)
defconsti(env, "GL-TEXTURE-IMAGE-FORMAT", (GLenum) GL_TEXTURE_IMAGE_FORMAT, "GL_TEXTURE_IMAGE_FORMAT");
#endif
#if defined(GL_TEXTURE_IMAGE_TYPE)
defconsti(env, "GL-TEXTURE-IMAGE-TYPE", (GLenum) GL_TEXTURE_IMAGE_TYPE, "GL_TEXTURE_IMAGE_TYPE");
#endif
#if defined(GL_GET_TEXTURE_IMAGE_FORMAT)
defconsti(env, "GL-GET-TEXTURE-IMAGE-FORMAT", (GLenum) GL_GET_TEXTURE_IMAGE_FORMAT, "GL_GET_TEXTURE_IMAGE_FORMAT");
#endif
#if defined(GL_GET_TEXTURE_IMAGE_TYPE)
defconsti(env, "GL-GET-TEXTURE-IMAGE-TYPE", (GLenum) GL_GET_TEXTURE_IMAGE_TYPE, "GL_GET_TEXTURE_IMAGE_TYPE");
#endif
#if defined(GL_MIPMAP)
defconsti(env, "GL-MIPMAP", (GLenum) GL_MIPMAP, "GL_MIPMAP");
#endif
#if defined(GL_MANUAL_GENERATE_MIPMAP)
defconsti(env, "GL-MANUAL-GENERATE-MIPMAP", (GLenum) GL_MANUAL_GENERATE_MIPMAP, "GL_MANUAL_GENERATE_MIPMAP");
#endif
#if defined(GL_AUTO_GENERATE_MIPMAP)
defconsti(env, "GL-AUTO-GENERATE-MIPMAP", (GLenum) GL_AUTO_GENERATE_MIPMAP, "GL_AUTO_GENERATE_MIPMAP");
#endif
#if defined(GL_COLOR_ENCODING)
defconsti(env, "GL-COLOR-ENCODING", (GLenum) GL_COLOR_ENCODING, "GL_COLOR_ENCODING");
#endif
#if defined(GL_SRGB_READ)
defconsti(env, "GL-SRGB-READ", (GLenum) GL_SRGB_READ, "GL_SRGB_READ");
#endif
#if defined(GL_SRGB_WRITE)
defconsti(env, "GL-SRGB-WRITE", (GLenum) GL_SRGB_WRITE, "GL_SRGB_WRITE");
#endif
#if defined(GL_SRGB_DECODE_ARB)
defconsti(env, "GL-SRGB-DECODE-ARB", (GLenum) GL_SRGB_DECODE_ARB, "GL_SRGB_DECODE_ARB");
#endif
#if defined(GL_FILTER)
defconsti(env, "GL-FILTER", (GLenum) GL_FILTER, "GL_FILTER");
#endif
#if defined(GL_VERTEX_TEXTURE)
defconsti(env, "GL-VERTEX-TEXTURE", (GLenum) GL_VERTEX_TEXTURE, "GL_VERTEX_TEXTURE");
#endif
#if defined(GL_TESS_CONTROL_TEXTURE)
defconsti(env, "GL-TESS-CONTROL-TEXTURE", (GLenum) GL_TESS_CONTROL_TEXTURE, "GL_TESS_CONTROL_TEXTURE");
#endif
#if defined(GL_TESS_EVALUATION_TEXTURE)
defconsti(env, "GL-TESS-EVALUATION-TEXTURE", (GLenum) GL_TESS_EVALUATION_TEXTURE, "GL_TESS_EVALUATION_TEXTURE");
#endif
#if defined(GL_GEOMETRY_TEXTURE)
defconsti(env, "GL-GEOMETRY-TEXTURE", (GLenum) GL_GEOMETRY_TEXTURE, "GL_GEOMETRY_TEXTURE");
#endif
#if defined(GL_FRAGMENT_TEXTURE)
defconsti(env, "GL-FRAGMENT-TEXTURE", (GLenum) GL_FRAGMENT_TEXTURE, "GL_FRAGMENT_TEXTURE");
#endif
#if defined(GL_COMPUTE_TEXTURE)
defconsti(env, "GL-COMPUTE-TEXTURE", (GLenum) GL_COMPUTE_TEXTURE, "GL_COMPUTE_TEXTURE");
#endif
#if defined(GL_TEXTURE_SHADOW)
defconsti(env, "GL-TEXTURE-SHADOW", (GLenum) GL_TEXTURE_SHADOW, "GL_TEXTURE_SHADOW");
#endif
#if defined(GL_TEXTURE_GATHER)
defconsti(env, "GL-TEXTURE-GATHER", (GLenum) GL_TEXTURE_GATHER, "GL_TEXTURE_GATHER");
#endif
#if defined(GL_TEXTURE_GATHER_SHADOW)
defconsti(env, "GL-TEXTURE-GATHER-SHADOW", (GLenum) GL_TEXTURE_GATHER_SHADOW, "GL_TEXTURE_GATHER_SHADOW");
#endif
#if defined(GL_SHADER_IMAGE_LOAD)
defconsti(env, "GL-SHADER-IMAGE-LOAD", (GLenum) GL_SHADER_IMAGE_LOAD, "GL_SHADER_IMAGE_LOAD");
#endif
#if defined(GL_SHADER_IMAGE_STORE)
defconsti(env, "GL-SHADER-IMAGE-STORE", (GLenum) GL_SHADER_IMAGE_STORE, "GL_SHADER_IMAGE_STORE");
#endif
#if defined(GL_SHADER_IMAGE_ATOMIC)
defconsti(env, "GL-SHADER-IMAGE-ATOMIC", (GLenum) GL_SHADER_IMAGE_ATOMIC, "GL_SHADER_IMAGE_ATOMIC");
#endif
#if defined(GL_IMAGE_TEXEL_SIZE)
defconsti(env, "GL-IMAGE-TEXEL-SIZE", (GLenum) GL_IMAGE_TEXEL_SIZE, "GL_IMAGE_TEXEL_SIZE");
#endif
#if defined(GL_IMAGE_COMPATIBILITY_CLASS)
defconsti(env, "GL-IMAGE-COMPATIBILITY-CLASS", (GLenum) GL_IMAGE_COMPATIBILITY_CLASS, "GL_IMAGE_COMPATIBILITY_CLASS");
#endif
#if defined(GL_IMAGE_PIXEL_FORMAT)
defconsti(env, "GL-IMAGE-PIXEL-FORMAT", (GLenum) GL_IMAGE_PIXEL_FORMAT, "GL_IMAGE_PIXEL_FORMAT");
#endif
#if defined(GL_IMAGE_PIXEL_TYPE)
defconsti(env, "GL-IMAGE-PIXEL-TYPE", (GLenum) GL_IMAGE_PIXEL_TYPE, "GL_IMAGE_PIXEL_TYPE");
#endif
#if defined(GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST)
defconsti(env, "GL-SIMULTANEOUS-TEXTURE-AND-DEPTH-TEST", (GLenum) GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST, "GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST");
#endif
#if defined(GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST)
defconsti(env, "GL-SIMULTANEOUS-TEXTURE-AND-STENCIL-TEST", (GLenum) GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST, "GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST");
#endif
#if defined(GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE)
defconsti(env, "GL-SIMULTANEOUS-TEXTURE-AND-DEPTH-WRITE", (GLenum) GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE, "GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE");
#endif
#if defined(GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE)
defconsti(env, "GL-SIMULTANEOUS-TEXTURE-AND-STENCIL-WRITE", (GLenum) GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE, "GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE");
#endif
#if defined(GL_TEXTURE_COMPRESSED_BLOCK_WIDTH)
defconsti(env, "GL-TEXTURE-COMPRESSED-BLOCK-WIDTH", (GLenum) GL_TEXTURE_COMPRESSED_BLOCK_WIDTH, "GL_TEXTURE_COMPRESSED_BLOCK_WIDTH");
#endif
#if defined(GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT)
defconsti(env, "GL-TEXTURE-COMPRESSED-BLOCK-HEIGHT", (GLenum) GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT, "GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT");
#endif
#if defined(GL_TEXTURE_COMPRESSED_BLOCK_SIZE)
defconsti(env, "GL-TEXTURE-COMPRESSED-BLOCK-SIZE", (GLenum) GL_TEXTURE_COMPRESSED_BLOCK_SIZE, "GL_TEXTURE_COMPRESSED_BLOCK_SIZE");
#endif
#if defined(GL_CLEAR_BUFFER)
defconsti(env, "GL-CLEAR-BUFFER", (GLenum) GL_CLEAR_BUFFER, "GL_CLEAR_BUFFER");
#endif
#if defined(GL_TEXTURE_VIEW)
defconsti(env, "GL-TEXTURE-VIEW", (GLenum) GL_TEXTURE_VIEW, "GL_TEXTURE_VIEW");
#endif
#if defined(GL_VIEW_COMPATIBILITY_CLASS)
defconsti(env, "GL-VIEW-COMPATIBILITY-CLASS", (GLenum) GL_VIEW_COMPATIBILITY_CLASS, "GL_VIEW_COMPATIBILITY_CLASS");
#endif
#if defined(GL_FULL_SUPPORT)
defconsti(env, "GL-FULL-SUPPORT", (GLenum) GL_FULL_SUPPORT, "GL_FULL_SUPPORT");
#endif
#if defined(GL_CAVEAT_SUPPORT)
defconsti(env, "GL-CAVEAT-SUPPORT", (GLenum) GL_CAVEAT_SUPPORT, "GL_CAVEAT_SUPPORT");
#endif
#if defined(GL_IMAGE_CLASS_4_X_32)
defconsti(env, "GL-IMAGE-CLASS-4-X-32", (GLenum) GL_IMAGE_CLASS_4_X_32, "GL_IMAGE_CLASS_4_X_32");
#endif
#if defined(GL_IMAGE_CLASS_2_X_32)
defconsti(env, "GL-IMAGE-CLASS-2-X-32", (GLenum) GL_IMAGE_CLASS_2_X_32, "GL_IMAGE_CLASS_2_X_32");
#endif
#if defined(GL_IMAGE_CLASS_1_X_32)
defconsti(env, "GL-IMAGE-CLASS-1-X-32", (GLenum) GL_IMAGE_CLASS_1_X_32, "GL_IMAGE_CLASS_1_X_32");
#endif
#if defined(GL_IMAGE_CLASS_4_X_16)
defconsti(env, "GL-IMAGE-CLASS-4-X-16", (GLenum) GL_IMAGE_CLASS_4_X_16, "GL_IMAGE_CLASS_4_X_16");
#endif
#if defined(GL_IMAGE_CLASS_2_X_16)
defconsti(env, "GL-IMAGE-CLASS-2-X-16", (GLenum) GL_IMAGE_CLASS_2_X_16, "GL_IMAGE_CLASS_2_X_16");
#endif
#if defined(GL_IMAGE_CLASS_1_X_16)
defconsti(env, "GL-IMAGE-CLASS-1-X-16", (GLenum) GL_IMAGE_CLASS_1_X_16, "GL_IMAGE_CLASS_1_X_16");
#endif
#if defined(GL_IMAGE_CLASS_4_X_8)
defconsti(env, "GL-IMAGE-CLASS-4-X-8", (GLenum) GL_IMAGE_CLASS_4_X_8, "GL_IMAGE_CLASS_4_X_8");
#endif
#if defined(GL_IMAGE_CLASS_2_X_8)
defconsti(env, "GL-IMAGE-CLASS-2-X-8", (GLenum) GL_IMAGE_CLASS_2_X_8, "GL_IMAGE_CLASS_2_X_8");
#endif
#if defined(GL_IMAGE_CLASS_1_X_8)
defconsti(env, "GL-IMAGE-CLASS-1-X-8", (GLenum) GL_IMAGE_CLASS_1_X_8, "GL_IMAGE_CLASS_1_X_8");
#endif
#if defined(GL_IMAGE_CLASS_11_11_10)
defconsti(env, "GL-IMAGE-CLASS-11-11-10", (GLenum) GL_IMAGE_CLASS_11_11_10, "GL_IMAGE_CLASS_11_11_10");
#endif
#if defined(GL_IMAGE_CLASS_10_10_10_2)
defconsti(env, "GL-IMAGE-CLASS-10-10-10-2", (GLenum) GL_IMAGE_CLASS_10_10_10_2, "GL_IMAGE_CLASS_10_10_10_2");
#endif
#if defined(GL_VIEW_CLASS_128_BITS)
defconsti(env, "GL-VIEW-CLASS-128-BITS", (GLenum) GL_VIEW_CLASS_128_BITS, "GL_VIEW_CLASS_128_BITS");
#endif
#if defined(GL_VIEW_CLASS_96_BITS)
defconsti(env, "GL-VIEW-CLASS-96-BITS", (GLenum) GL_VIEW_CLASS_96_BITS, "GL_VIEW_CLASS_96_BITS");
#endif
#if defined(GL_VIEW_CLASS_64_BITS)
defconsti(env, "GL-VIEW-CLASS-64-BITS", (GLenum) GL_VIEW_CLASS_64_BITS, "GL_VIEW_CLASS_64_BITS");
#endif
#if defined(GL_VIEW_CLASS_48_BITS)
defconsti(env, "GL-VIEW-CLASS-48-BITS", (GLenum) GL_VIEW_CLASS_48_BITS, "GL_VIEW_CLASS_48_BITS");
#endif
#if defined(GL_VIEW_CLASS_32_BITS)
defconsti(env, "GL-VIEW-CLASS-32-BITS", (GLenum) GL_VIEW_CLASS_32_BITS, "GL_VIEW_CLASS_32_BITS");
#endif
#if defined(GL_VIEW_CLASS_24_BITS)
defconsti(env, "GL-VIEW-CLASS-24-BITS", (GLenum) GL_VIEW_CLASS_24_BITS, "GL_VIEW_CLASS_24_BITS");
#endif
#if defined(GL_VIEW_CLASS_16_BITS)
defconsti(env, "GL-VIEW-CLASS-16-BITS", (GLenum) GL_VIEW_CLASS_16_BITS, "GL_VIEW_CLASS_16_BITS");
#endif
#if defined(GL_VIEW_CLASS_8_BITS)
defconsti(env, "GL-VIEW-CLASS-8-BITS", (GLenum) GL_VIEW_CLASS_8_BITS, "GL_VIEW_CLASS_8_BITS");
#endif
#if defined(GL_VIEW_CLASS_S3TC_DXT1_RGB)
defconsti(env, "GL-VIEW-CLASS-S3TC-DXT1-RGB", (GLenum) GL_VIEW_CLASS_S3TC_DXT1_RGB, "GL_VIEW_CLASS_S3TC_DXT1_RGB");
#endif
#if defined(GL_VIEW_CLASS_S3TC_DXT1_RGBA)
defconsti(env, "GL-VIEW-CLASS-S3TC-DXT1-RGBA", (GLenum) GL_VIEW_CLASS_S3TC_DXT1_RGBA, "GL_VIEW_CLASS_S3TC_DXT1_RGBA");
#endif
#if defined(GL_VIEW_CLASS_S3TC_DXT3_RGBA)
defconsti(env, "GL-VIEW-CLASS-S3TC-DXT3-RGBA", (GLenum) GL_VIEW_CLASS_S3TC_DXT3_RGBA, "GL_VIEW_CLASS_S3TC_DXT3_RGBA");
#endif
#if defined(GL_VIEW_CLASS_S3TC_DXT5_RGBA)
defconsti(env, "GL-VIEW-CLASS-S3TC-DXT5-RGBA", (GLenum) GL_VIEW_CLASS_S3TC_DXT5_RGBA, "GL_VIEW_CLASS_S3TC_DXT5_RGBA");
#endif
#if defined(GL_VIEW_CLASS_RGTC1_RED)
defconsti(env, "GL-VIEW-CLASS-RGTC1-RED", (GLenum) GL_VIEW_CLASS_RGTC1_RED, "GL_VIEW_CLASS_RGTC1_RED");
#endif
#if defined(GL_VIEW_CLASS_RGTC2_RG)
defconsti(env, "GL-VIEW-CLASS-RGTC2-RG", (GLenum) GL_VIEW_CLASS_RGTC2_RG, "GL_VIEW_CLASS_RGTC2_RG");
#endif
#if defined(GL_VIEW_CLASS_BPTC_UNORM)
defconsti(env, "GL-VIEW-CLASS-BPTC-UNORM", (GLenum) GL_VIEW_CLASS_BPTC_UNORM, "GL_VIEW_CLASS_BPTC_UNORM");
#endif
#if defined(GL_VIEW_CLASS_BPTC_FLOAT)
defconsti(env, "GL-VIEW-CLASS-BPTC-FLOAT", (GLenum) GL_VIEW_CLASS_BPTC_FLOAT, "GL_VIEW_CLASS_BPTC_FLOAT");
#endif
#if defined(GL_VERTEX_ATTRIB_BINDING)
defconsti(env, "GL-VERTEX-ATTRIB-BINDING", (GLenum) GL_VERTEX_ATTRIB_BINDING, "GL_VERTEX_ATTRIB_BINDING");
#endif
#if defined(GL_VERTEX_ATTRIB_RELATIVE_OFFSET)
defconsti(env, "GL-VERTEX-ATTRIB-RELATIVE-OFFSET", (GLenum) GL_VERTEX_ATTRIB_RELATIVE_OFFSET, "GL_VERTEX_ATTRIB_RELATIVE_OFFSET");
#endif
#if defined(GL_VERTEX_BINDING_DIVISOR)
defconsti(env, "GL-VERTEX-BINDING-DIVISOR", (GLenum) GL_VERTEX_BINDING_DIVISOR, "GL_VERTEX_BINDING_DIVISOR");
#endif
#if defined(GL_VERTEX_BINDING_OFFSET)
defconsti(env, "GL-VERTEX-BINDING-OFFSET", (GLenum) GL_VERTEX_BINDING_OFFSET, "GL_VERTEX_BINDING_OFFSET");
#endif
#if defined(GL_VERTEX_BINDING_STRIDE)
defconsti(env, "GL-VERTEX-BINDING-STRIDE", (GLenum) GL_VERTEX_BINDING_STRIDE, "GL_VERTEX_BINDING_STRIDE");
#endif
#if defined(GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET)
defconsti(env, "GL-MAX-VERTEX-ATTRIB-RELATIVE-OFFSET", (GLenum) GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET, "GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET");
#endif
#if defined(GL_MAX_VERTEX_ATTRIB_BINDINGS)
defconsti(env, "GL-MAX-VERTEX-ATTRIB-BINDINGS", (GLenum) GL_MAX_VERTEX_ATTRIB_BINDINGS, "GL_MAX_VERTEX_ATTRIB_BINDINGS");
#endif
#if defined(GL_TEXTURE_VIEW_MIN_LEVEL)
defconsti(env, "GL-TEXTURE-VIEW-MIN-LEVEL", (GLenum) GL_TEXTURE_VIEW_MIN_LEVEL, "GL_TEXTURE_VIEW_MIN_LEVEL");
#endif
#if defined(GL_TEXTURE_VIEW_MIN_LEVEL_EXT)
defconsti(env, "GL-TEXTURE-VIEW-MIN-LEVEL-EXT", (GLenum) GL_TEXTURE_VIEW_MIN_LEVEL_EXT, "GL_TEXTURE_VIEW_MIN_LEVEL_EXT");
#endif
#if defined(GL_TEXTURE_VIEW_MIN_LEVEL_OES)
defconsti(env, "GL-TEXTURE-VIEW-MIN-LEVEL-OES", (GLenum) GL_TEXTURE_VIEW_MIN_LEVEL_OES, "GL_TEXTURE_VIEW_MIN_LEVEL_OES");
#endif
#if defined(GL_TEXTURE_VIEW_NUM_LEVELS)
defconsti(env, "GL-TEXTURE-VIEW-NUM-LEVELS", (GLenum) GL_TEXTURE_VIEW_NUM_LEVELS, "GL_TEXTURE_VIEW_NUM_LEVELS");
#endif
#if defined(GL_TEXTURE_VIEW_NUM_LEVELS_EXT)
defconsti(env, "GL-TEXTURE-VIEW-NUM-LEVELS-EXT", (GLenum) GL_TEXTURE_VIEW_NUM_LEVELS_EXT, "GL_TEXTURE_VIEW_NUM_LEVELS_EXT");
#endif
#if defined(GL_TEXTURE_VIEW_NUM_LEVELS_OES)
defconsti(env, "GL-TEXTURE-VIEW-NUM-LEVELS-OES", (GLenum) GL_TEXTURE_VIEW_NUM_LEVELS_OES, "GL_TEXTURE_VIEW_NUM_LEVELS_OES");
#endif
#if defined(GL_TEXTURE_VIEW_MIN_LAYER)
defconsti(env, "GL-TEXTURE-VIEW-MIN-LAYER", (GLenum) GL_TEXTURE_VIEW_MIN_LAYER, "GL_TEXTURE_VIEW_MIN_LAYER");
#endif
#if defined(GL_TEXTURE_VIEW_MIN_LAYER_EXT)
defconsti(env, "GL-TEXTURE-VIEW-MIN-LAYER-EXT", (GLenum) GL_TEXTURE_VIEW_MIN_LAYER_EXT, "GL_TEXTURE_VIEW_MIN_LAYER_EXT");
#endif
#if defined(GL_TEXTURE_VIEW_MIN_LAYER_OES)
defconsti(env, "GL-TEXTURE-VIEW-MIN-LAYER-OES", (GLenum) GL_TEXTURE_VIEW_MIN_LAYER_OES, "GL_TEXTURE_VIEW_MIN_LAYER_OES");
#endif
#if defined(GL_TEXTURE_VIEW_NUM_LAYERS)
defconsti(env, "GL-TEXTURE-VIEW-NUM-LAYERS", (GLenum) GL_TEXTURE_VIEW_NUM_LAYERS, "GL_TEXTURE_VIEW_NUM_LAYERS");
#endif
#if defined(GL_TEXTURE_VIEW_NUM_LAYERS_EXT)
defconsti(env, "GL-TEXTURE-VIEW-NUM-LAYERS-EXT", (GLenum) GL_TEXTURE_VIEW_NUM_LAYERS_EXT, "GL_TEXTURE_VIEW_NUM_LAYERS_EXT");
#endif
#if defined(GL_TEXTURE_VIEW_NUM_LAYERS_OES)
defconsti(env, "GL-TEXTURE-VIEW-NUM-LAYERS-OES", (GLenum) GL_TEXTURE_VIEW_NUM_LAYERS_OES, "GL_TEXTURE_VIEW_NUM_LAYERS_OES");
#endif
#if defined(GL_TEXTURE_IMMUTABLE_LEVELS)
defconsti(env, "GL-TEXTURE-IMMUTABLE-LEVELS", (GLenum) GL_TEXTURE_IMMUTABLE_LEVELS, "GL_TEXTURE_IMMUTABLE_LEVELS");
#endif
#if defined(GL_BUFFER)
defconsti(env, "GL-BUFFER", (GLenum) GL_BUFFER, "GL_BUFFER");
#endif
#if defined(GL_BUFFER_KHR)
defconsti(env, "GL-BUFFER-KHR", (GLenum) GL_BUFFER_KHR, "GL_BUFFER_KHR");
#endif
#if defined(GL_SHADER)
defconsti(env, "GL-SHADER", (GLenum) GL_SHADER, "GL_SHADER");
#endif
#if defined(GL_SHADER_KHR)
defconsti(env, "GL-SHADER-KHR", (GLenum) GL_SHADER_KHR, "GL_SHADER_KHR");
#endif
#if defined(GL_PROGRAM)
defconsti(env, "GL-PROGRAM", (GLenum) GL_PROGRAM, "GL_PROGRAM");
#endif
#if defined(GL_PROGRAM_KHR)
defconsti(env, "GL-PROGRAM-KHR", (GLenum) GL_PROGRAM_KHR, "GL_PROGRAM_KHR");
#endif
#if defined(GL_QUERY)
defconsti(env, "GL-QUERY", (GLenum) GL_QUERY, "GL_QUERY");
#endif
#if defined(GL_QUERY_KHR)
defconsti(env, "GL-QUERY-KHR", (GLenum) GL_QUERY_KHR, "GL_QUERY_KHR");
#endif
#if defined(GL_PROGRAM_PIPELINE)
defconsti(env, "GL-PROGRAM-PIPELINE", (GLenum) GL_PROGRAM_PIPELINE, "GL_PROGRAM_PIPELINE");
#endif
#if defined(GL_PROGRAM_PIPELINE_KHR)
defconsti(env, "GL-PROGRAM-PIPELINE-KHR", (GLenum) GL_PROGRAM_PIPELINE_KHR, "GL_PROGRAM_PIPELINE_KHR");
#endif
#if defined(GL_MAX_VERTEX_ATTRIB_STRIDE)
defconsti(env, "GL-MAX-VERTEX-ATTRIB-STRIDE", (GLenum) GL_MAX_VERTEX_ATTRIB_STRIDE, "GL_MAX_VERTEX_ATTRIB_STRIDE");
#endif
#if defined(GL_SAMPLER)
defconsti(env, "GL-SAMPLER", (GLenum) GL_SAMPLER, "GL_SAMPLER");
#endif
#if defined(GL_SAMPLER_KHR)
defconsti(env, "GL-SAMPLER-KHR", (GLenum) GL_SAMPLER_KHR, "GL_SAMPLER_KHR");
#endif
#if defined(GL_DISPLAY_LIST)
defconsti(env, "GL-DISPLAY-LIST", (GLenum) GL_DISPLAY_LIST, "GL_DISPLAY_LIST");
#endif
#if defined(GL_MAX_LABEL_LENGTH)
defconsti(env, "GL-MAX-LABEL-LENGTH", (GLenum) GL_MAX_LABEL_LENGTH, "GL_MAX_LABEL_LENGTH");
#endif
#if defined(GL_MAX_LABEL_LENGTH_KHR)
defconsti(env, "GL-MAX-LABEL-LENGTH-KHR", (GLenum) GL_MAX_LABEL_LENGTH_KHR, "GL_MAX_LABEL_LENGTH_KHR");
#endif
#if defined(GL_NUM_SHADING_LANGUAGE_VERSIONS)
defconsti(env, "GL-NUM-SHADING-LANGUAGE-VERSIONS", (GLenum) GL_NUM_SHADING_LANGUAGE_VERSIONS, "GL_NUM_SHADING_LANGUAGE_VERSIONS");
#endif
#if defined(GL_QUERY_TARGET)
defconsti(env, "GL-QUERY-TARGET", (GLenum) GL_QUERY_TARGET, "GL_QUERY_TARGET");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_OVERFLOW)
defconsti(env, "GL-TRANSFORM-FEEDBACK-OVERFLOW", (GLenum) GL_TRANSFORM_FEEDBACK_OVERFLOW, "GL_TRANSFORM_FEEDBACK_OVERFLOW");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB)
defconsti(env, "GL-TRANSFORM-FEEDBACK-OVERFLOW-ARB", (GLenum) GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB, "GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW)
defconsti(env, "GL-TRANSFORM-FEEDBACK-STREAM-OVERFLOW", (GLenum) GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW, "GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB)
defconsti(env, "GL-TRANSFORM-FEEDBACK-STREAM-OVERFLOW-ARB", (GLenum) GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB, "GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB");
#endif
#if defined(GL_VERTICES_SUBMITTED)
defconsti(env, "GL-VERTICES-SUBMITTED", (GLenum) GL_VERTICES_SUBMITTED, "GL_VERTICES_SUBMITTED");
#endif
#if defined(GL_VERTICES_SUBMITTED_ARB)
defconsti(env, "GL-VERTICES-SUBMITTED-ARB", (GLenum) GL_VERTICES_SUBMITTED_ARB, "GL_VERTICES_SUBMITTED_ARB");
#endif
#if defined(GL_PRIMITIVES_SUBMITTED)
defconsti(env, "GL-PRIMITIVES-SUBMITTED", (GLenum) GL_PRIMITIVES_SUBMITTED, "GL_PRIMITIVES_SUBMITTED");
#endif
#if defined(GL_PRIMITIVES_SUBMITTED_ARB)
defconsti(env, "GL-PRIMITIVES-SUBMITTED-ARB", (GLenum) GL_PRIMITIVES_SUBMITTED_ARB, "GL_PRIMITIVES_SUBMITTED_ARB");
#endif
#if defined(GL_VERTEX_SHADER_INVOCATIONS)
defconsti(env, "GL-VERTEX-SHADER-INVOCATIONS", (GLenum) GL_VERTEX_SHADER_INVOCATIONS, "GL_VERTEX_SHADER_INVOCATIONS");
#endif
#if defined(GL_VERTEX_SHADER_INVOCATIONS_ARB)
defconsti(env, "GL-VERTEX-SHADER-INVOCATIONS-ARB", (GLenum) GL_VERTEX_SHADER_INVOCATIONS_ARB, "GL_VERTEX_SHADER_INVOCATIONS_ARB");
#endif
#if defined(GL_TESS_CONTROL_SHADER_PATCHES)
defconsti(env, "GL-TESS-CONTROL-SHADER-PATCHES", (GLenum) GL_TESS_CONTROL_SHADER_PATCHES, "GL_TESS_CONTROL_SHADER_PATCHES");
#endif
#if defined(GL_TESS_CONTROL_SHADER_PATCHES_ARB)
defconsti(env, "GL-TESS-CONTROL-SHADER-PATCHES-ARB", (GLenum) GL_TESS_CONTROL_SHADER_PATCHES_ARB, "GL_TESS_CONTROL_SHADER_PATCHES_ARB");
#endif
#if defined(GL_TESS_EVALUATION_SHADER_INVOCATIONS)
defconsti(env, "GL-TESS-EVALUATION-SHADER-INVOCATIONS", (GLenum) GL_TESS_EVALUATION_SHADER_INVOCATIONS, "GL_TESS_EVALUATION_SHADER_INVOCATIONS");
#endif
#if defined(GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB)
defconsti(env, "GL-TESS-EVALUATION-SHADER-INVOCATIONS-ARB", (GLenum) GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB, "GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB");
#endif
#if defined(GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED)
defconsti(env, "GL-GEOMETRY-SHADER-PRIMITIVES-EMITTED", (GLenum) GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED, "GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED");
#endif
#if defined(GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB)
defconsti(env, "GL-GEOMETRY-SHADER-PRIMITIVES-EMITTED-ARB", (GLenum) GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB, "GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB");
#endif
#if defined(GL_FRAGMENT_SHADER_INVOCATIONS)
defconsti(env, "GL-FRAGMENT-SHADER-INVOCATIONS", (GLenum) GL_FRAGMENT_SHADER_INVOCATIONS, "GL_FRAGMENT_SHADER_INVOCATIONS");
#endif
#if defined(GL_FRAGMENT_SHADER_INVOCATIONS_ARB)
defconsti(env, "GL-FRAGMENT-SHADER-INVOCATIONS-ARB", (GLenum) GL_FRAGMENT_SHADER_INVOCATIONS_ARB, "GL_FRAGMENT_SHADER_INVOCATIONS_ARB");
#endif
#if defined(GL_COMPUTE_SHADER_INVOCATIONS)
defconsti(env, "GL-COMPUTE-SHADER-INVOCATIONS", (GLenum) GL_COMPUTE_SHADER_INVOCATIONS, "GL_COMPUTE_SHADER_INVOCATIONS");
#endif
#if defined(GL_COMPUTE_SHADER_INVOCATIONS_ARB)
defconsti(env, "GL-COMPUTE-SHADER-INVOCATIONS-ARB", (GLenum) GL_COMPUTE_SHADER_INVOCATIONS_ARB, "GL_COMPUTE_SHADER_INVOCATIONS_ARB");
#endif
#if defined(GL_CLIPPING_INPUT_PRIMITIVES)
defconsti(env, "GL-CLIPPING-INPUT-PRIMITIVES", (GLenum) GL_CLIPPING_INPUT_PRIMITIVES, "GL_CLIPPING_INPUT_PRIMITIVES");
#endif
#if defined(GL_CLIPPING_INPUT_PRIMITIVES_ARB)
defconsti(env, "GL-CLIPPING-INPUT-PRIMITIVES-ARB", (GLenum) GL_CLIPPING_INPUT_PRIMITIVES_ARB, "GL_CLIPPING_INPUT_PRIMITIVES_ARB");
#endif
#if defined(GL_CLIPPING_OUTPUT_PRIMITIVES)
defconsti(env, "GL-CLIPPING-OUTPUT-PRIMITIVES", (GLenum) GL_CLIPPING_OUTPUT_PRIMITIVES, "GL_CLIPPING_OUTPUT_PRIMITIVES");
#endif
#if defined(GL_CLIPPING_OUTPUT_PRIMITIVES_ARB)
defconsti(env, "GL-CLIPPING-OUTPUT-PRIMITIVES-ARB", (GLenum) GL_CLIPPING_OUTPUT_PRIMITIVES_ARB, "GL_CLIPPING_OUTPUT_PRIMITIVES_ARB");
#endif
#if defined(GL_SPARSE_BUFFER_PAGE_SIZE_ARB)
defconsti(env, "GL-SPARSE-BUFFER-PAGE-SIZE-ARB", (GLenum) GL_SPARSE_BUFFER_PAGE_SIZE_ARB, "GL_SPARSE_BUFFER_PAGE_SIZE_ARB");
#endif
#if defined(GL_MAX_CULL_DISTANCES)
defconsti(env, "GL-MAX-CULL-DISTANCES", (GLenum) GL_MAX_CULL_DISTANCES, "GL_MAX_CULL_DISTANCES");
#endif
#if defined(GL_MAX_CULL_DISTANCES_EXT)
defconsti(env, "GL-MAX-CULL-DISTANCES-EXT", (GLenum) GL_MAX_CULL_DISTANCES_EXT, "GL_MAX_CULL_DISTANCES_EXT");
#endif
#if defined(GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES)
defconsti(env, "GL-MAX-COMBINED-CLIP-AND-CULL-DISTANCES", (GLenum) GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES, "GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES");
#endif
#if defined(GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES_EXT)
defconsti(env, "GL-MAX-COMBINED-CLIP-AND-CULL-DISTANCES-EXT", (GLenum) GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES_EXT, "GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES_EXT");
#endif
#if defined(GL_CONTEXT_RELEASE_BEHAVIOR)
defconsti(env, "GL-CONTEXT-RELEASE-BEHAVIOR", (GLenum) GL_CONTEXT_RELEASE_BEHAVIOR, "GL_CONTEXT_RELEASE_BEHAVIOR");
#endif
#if defined(GL_CONTEXT_RELEASE_BEHAVIOR_KHR)
defconsti(env, "GL-CONTEXT-RELEASE-BEHAVIOR-KHR", (GLenum) GL_CONTEXT_RELEASE_BEHAVIOR_KHR, "GL_CONTEXT_RELEASE_BEHAVIOR_KHR");
#endif
#if defined(GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH)
defconsti(env, "GL-CONTEXT-RELEASE-BEHAVIOR-FLUSH", (GLenum) GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH, "GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH");
#endif
#if defined(GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR)
defconsti(env, "GL-CONTEXT-RELEASE-BEHAVIOR-FLUSH-KHR", (GLenum) GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR, "GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR");
#endif
#if defined(GL_ROBUST_GPU_TIMEOUT_MS_KHR)
defconsti(env, "GL-ROBUST-GPU-TIMEOUT-MS-KHR", (GLenum) GL_ROBUST_GPU_TIMEOUT_MS_KHR, "GL_ROBUST_GPU_TIMEOUT_MS_KHR");
#endif
#if defined(GL_DEPTH_PASS_INSTRUMENT_SGIX)
defconsti(env, "GL-DEPTH-PASS-INSTRUMENT-SGIX", (GLenum) GL_DEPTH_PASS_INSTRUMENT_SGIX, "GL_DEPTH_PASS_INSTRUMENT_SGIX");
#endif
#if defined(GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX)
defconsti(env, "GL-DEPTH-PASS-INSTRUMENT-COUNTERS-SGIX", (GLenum) GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX, "GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX");
#endif
#if defined(GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX)
defconsti(env, "GL-DEPTH-PASS-INSTRUMENT-MAX-SGIX", (GLenum) GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX, "GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX");
#endif
#if defined(GL_FRAGMENTS_INSTRUMENT_SGIX)
defconsti(env, "GL-FRAGMENTS-INSTRUMENT-SGIX", (GLenum) GL_FRAGMENTS_INSTRUMENT_SGIX, "GL_FRAGMENTS_INSTRUMENT_SGIX");
#endif
#if defined(GL_FRAGMENTS_INSTRUMENT_COUNTERS_SGIX)
defconsti(env, "GL-FRAGMENTS-INSTRUMENT-COUNTERS-SGIX", (GLenum) GL_FRAGMENTS_INSTRUMENT_COUNTERS_SGIX, "GL_FRAGMENTS_INSTRUMENT_COUNTERS_SGIX");
#endif
#if defined(GL_FRAGMENTS_INSTRUMENT_MAX_SGIX)
defconsti(env, "GL-FRAGMENTS-INSTRUMENT-MAX-SGIX", (GLenum) GL_FRAGMENTS_INSTRUMENT_MAX_SGIX, "GL_FRAGMENTS_INSTRUMENT_MAX_SGIX");
#endif
#if defined(GL_CONVOLUTION_HINT_SGIX)
defconsti(env, "GL-CONVOLUTION-HINT-SGIX", (GLenum) GL_CONVOLUTION_HINT_SGIX, "GL_CONVOLUTION_HINT_SGIX");
#endif
#if defined(GL_YCRCB_SGIX)
defconsti(env, "GL-YCRCB-SGIX", (GLenum) GL_YCRCB_SGIX, "GL_YCRCB_SGIX");
#endif
#if defined(GL_YCRCBA_SGIX)
defconsti(env, "GL-YCRCBA-SGIX", (GLenum) GL_YCRCBA_SGIX, "GL_YCRCBA_SGIX");
#endif
#if defined(GL_UNPACK_COMPRESSED_SIZE_SGIX)
defconsti(env, "GL-UNPACK-COMPRESSED-SIZE-SGIX", (GLenum) GL_UNPACK_COMPRESSED_SIZE_SGIX, "GL_UNPACK_COMPRESSED_SIZE_SGIX");
#endif
#if defined(GL_PACK_MAX_COMPRESSED_SIZE_SGIX)
defconsti(env, "GL-PACK-MAX-COMPRESSED-SIZE-SGIX", (GLenum) GL_PACK_MAX_COMPRESSED_SIZE_SGIX, "GL_PACK_MAX_COMPRESSED_SIZE_SGIX");
#endif
#if defined(GL_PACK_COMPRESSED_SIZE_SGIX)
defconsti(env, "GL-PACK-COMPRESSED-SIZE-SGIX", (GLenum) GL_PACK_COMPRESSED_SIZE_SGIX, "GL_PACK_COMPRESSED_SIZE_SGIX");
#endif
#if defined(GL_SLIM8U_SGIX)
defconsti(env, "GL-SLIM8U-SGIX", (GLenum) GL_SLIM8U_SGIX, "GL_SLIM8U_SGIX");
#endif
#if defined(GL_SLIM10U_SGIX)
defconsti(env, "GL-SLIM10U-SGIX", (GLenum) GL_SLIM10U_SGIX, "GL_SLIM10U_SGIX");
#endif
#if defined(GL_SLIM12S_SGIX)
defconsti(env, "GL-SLIM12S-SGIX", (GLenum) GL_SLIM12S_SGIX, "GL_SLIM12S_SGIX");
#endif
#if defined(GL_ALPHA_MIN_SGIX)
defconsti(env, "GL-ALPHA-MIN-SGIX", (GLenum) GL_ALPHA_MIN_SGIX, "GL_ALPHA_MIN_SGIX");
#endif
#if defined(GL_ALPHA_MAX_SGIX)
defconsti(env, "GL-ALPHA-MAX-SGIX", (GLenum) GL_ALPHA_MAX_SGIX, "GL_ALPHA_MAX_SGIX");
#endif
#if defined(GL_SCALEBIAS_HINT_SGIX)
defconsti(env, "GL-SCALEBIAS-HINT-SGIX", (GLenum) GL_SCALEBIAS_HINT_SGIX, "GL_SCALEBIAS_HINT_SGIX");
#endif
#if defined(GL_ASYNC_MARKER_SGIX)
defconsti(env, "GL-ASYNC-MARKER-SGIX", (GLenum) GL_ASYNC_MARKER_SGIX, "GL_ASYNC_MARKER_SGIX");
#endif
#if defined(GL_PIXEL_TEX_GEN_MODE_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-MODE-SGIX", (GLenum) GL_PIXEL_TEX_GEN_MODE_SGIX, "GL_PIXEL_TEX_GEN_MODE_SGIX");
#endif
#if defined(GL_ASYNC_HISTOGRAM_SGIX)
defconsti(env, "GL-ASYNC-HISTOGRAM-SGIX", (GLenum) GL_ASYNC_HISTOGRAM_SGIX, "GL_ASYNC_HISTOGRAM_SGIX");
#endif
#if defined(GL_MAX_ASYNC_HISTOGRAM_SGIX)
defconsti(env, "GL-MAX-ASYNC-HISTOGRAM-SGIX", (GLenum) GL_MAX_ASYNC_HISTOGRAM_SGIX, "GL_MAX_ASYNC_HISTOGRAM_SGIX");
#endif
#if defined(GL_PIXEL_TRANSFORM_2D_EXT)
defconsti(env, "GL-PIXEL-TRANSFORM-2D-EXT", (GLenum) GL_PIXEL_TRANSFORM_2D_EXT, "GL_PIXEL_TRANSFORM_2D_EXT");
#endif
#if defined(GL_PIXEL_MAG_FILTER_EXT)
defconsti(env, "GL-PIXEL-MAG-FILTER-EXT", (GLenum) GL_PIXEL_MAG_FILTER_EXT, "GL_PIXEL_MAG_FILTER_EXT");
#endif
#if defined(GL_PIXEL_MIN_FILTER_EXT)
defconsti(env, "GL-PIXEL-MIN-FILTER-EXT", (GLenum) GL_PIXEL_MIN_FILTER_EXT, "GL_PIXEL_MIN_FILTER_EXT");
#endif
#if defined(GL_PIXEL_CUBIC_WEIGHT_EXT)
defconsti(env, "GL-PIXEL-CUBIC-WEIGHT-EXT", (GLenum) GL_PIXEL_CUBIC_WEIGHT_EXT, "GL_PIXEL_CUBIC_WEIGHT_EXT");
#endif
#if defined(GL_CUBIC_EXT)
defconsti(env, "GL-CUBIC-EXT", (GLenum) GL_CUBIC_EXT, "GL_CUBIC_EXT");
#endif
#if defined(GL_AVERAGE_EXT)
defconsti(env, "GL-AVERAGE-EXT", (GLenum) GL_AVERAGE_EXT, "GL_AVERAGE_EXT");
#endif
#if defined(GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT)
defconsti(env, "GL-PIXEL-TRANSFORM-2D-STACK-DEPTH-EXT", (GLenum) GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT, "GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT");
#endif
#if defined(GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT)
defconsti(env, "GL-MAX-PIXEL-TRANSFORM-2D-STACK-DEPTH-EXT", (GLenum) GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT, "GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT");
#endif
#if defined(GL_PIXEL_TRANSFORM_2D_MATRIX_EXT)
defconsti(env, "GL-PIXEL-TRANSFORM-2D-MATRIX-EXT", (GLenum) GL_PIXEL_TRANSFORM_2D_MATRIX_EXT, "GL_PIXEL_TRANSFORM_2D_MATRIX_EXT");
#endif
#if defined(GL_FRAGMENT_MATERIAL_EXT)
defconsti(env, "GL-FRAGMENT-MATERIAL-EXT", (GLenum) GL_FRAGMENT_MATERIAL_EXT, "GL_FRAGMENT_MATERIAL_EXT");
#endif
#if defined(GL_FRAGMENT_NORMAL_EXT)
defconsti(env, "GL-FRAGMENT-NORMAL-EXT", (GLenum) GL_FRAGMENT_NORMAL_EXT, "GL_FRAGMENT_NORMAL_EXT");
#endif
#if defined(GL_FRAGMENT_COLOR_EXT)
defconsti(env, "GL-FRAGMENT-COLOR-EXT", (GLenum) GL_FRAGMENT_COLOR_EXT, "GL_FRAGMENT_COLOR_EXT");
#endif
#if defined(GL_ATTENUATION_EXT)
defconsti(env, "GL-ATTENUATION-EXT", (GLenum) GL_ATTENUATION_EXT, "GL_ATTENUATION_EXT");
#endif
#if defined(GL_SHADOW_ATTENUATION_EXT)
defconsti(env, "GL-SHADOW-ATTENUATION-EXT", (GLenum) GL_SHADOW_ATTENUATION_EXT, "GL_SHADOW_ATTENUATION_EXT");
#endif
#if defined(GL_TEXTURE_APPLICATION_MODE_EXT)
defconsti(env, "GL-TEXTURE-APPLICATION-MODE-EXT", (GLenum) GL_TEXTURE_APPLICATION_MODE_EXT, "GL_TEXTURE_APPLICATION_MODE_EXT");
#endif
#if defined(GL_TEXTURE_LIGHT_EXT)
defconsti(env, "GL-TEXTURE-LIGHT-EXT", (GLenum) GL_TEXTURE_LIGHT_EXT, "GL_TEXTURE_LIGHT_EXT");
#endif
#if defined(GL_TEXTURE_MATERIAL_FACE_EXT)
defconsti(env, "GL-TEXTURE-MATERIAL-FACE-EXT", (GLenum) GL_TEXTURE_MATERIAL_FACE_EXT, "GL_TEXTURE_MATERIAL_FACE_EXT");
#endif
#if defined(GL_TEXTURE_MATERIAL_PARAMETER_EXT)
defconsti(env, "GL-TEXTURE-MATERIAL-PARAMETER-EXT", (GLenum) GL_TEXTURE_MATERIAL_PARAMETER_EXT, "GL_TEXTURE_MATERIAL_PARAMETER_EXT");
#endif
#if defined(GL_PIXEL_TEXTURE_SGIS)
defconsti(env, "GL-PIXEL-TEXTURE-SGIS", (GLenum) GL_PIXEL_TEXTURE_SGIS, "GL_PIXEL_TEXTURE_SGIS");
#endif
#if defined(GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS)
defconsti(env, "GL-PIXEL-FRAGMENT-RGB-SOURCE-SGIS", (GLenum) GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS, "GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS");
#endif
#if defined(GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS)
defconsti(env, "GL-PIXEL-FRAGMENT-ALPHA-SOURCE-SGIS", (GLenum) GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS, "GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS");
#endif
#if defined(GL_PIXEL_GROUP_COLOR_SGIS)
defconsti(env, "GL-PIXEL-GROUP-COLOR-SGIS", (GLenum) GL_PIXEL_GROUP_COLOR_SGIS, "GL_PIXEL_GROUP_COLOR_SGIS");
#endif
#if defined(GL_LINE_QUALITY_HINT_SGIX)
defconsti(env, "GL-LINE-QUALITY-HINT-SGIX", (GLenum) GL_LINE_QUALITY_HINT_SGIX, "GL_LINE_QUALITY_HINT_SGIX");
#endif
#if defined(GL_ASYNC_TEX_IMAGE_SGIX)
defconsti(env, "GL-ASYNC-TEX-IMAGE-SGIX", (GLenum) GL_ASYNC_TEX_IMAGE_SGIX, "GL_ASYNC_TEX_IMAGE_SGIX");
#endif
#if defined(GL_ASYNC_DRAW_PIXELS_SGIX)
defconsti(env, "GL-ASYNC-DRAW-PIXELS-SGIX", (GLenum) GL_ASYNC_DRAW_PIXELS_SGIX, "GL_ASYNC_DRAW_PIXELS_SGIX");
#endif
#if defined(GL_ASYNC_READ_PIXELS_SGIX)
defconsti(env, "GL-ASYNC-READ-PIXELS-SGIX", (GLenum) GL_ASYNC_READ_PIXELS_SGIX, "GL_ASYNC_READ_PIXELS_SGIX");
#endif
#if defined(GL_MAX_ASYNC_TEX_IMAGE_SGIX)
defconsti(env, "GL-MAX-ASYNC-TEX-IMAGE-SGIX", (GLenum) GL_MAX_ASYNC_TEX_IMAGE_SGIX, "GL_MAX_ASYNC_TEX_IMAGE_SGIX");
#endif
#if defined(GL_MAX_ASYNC_DRAW_PIXELS_SGIX)
defconsti(env, "GL-MAX-ASYNC-DRAW-PIXELS-SGIX", (GLenum) GL_MAX_ASYNC_DRAW_PIXELS_SGIX, "GL_MAX_ASYNC_DRAW_PIXELS_SGIX");
#endif
#if defined(GL_MAX_ASYNC_READ_PIXELS_SGIX)
defconsti(env, "GL-MAX-ASYNC-READ-PIXELS-SGIX", (GLenum) GL_MAX_ASYNC_READ_PIXELS_SGIX, "GL_MAX_ASYNC_READ_PIXELS_SGIX");
#endif
#if defined(GL_UNSIGNED_BYTE_2_3_3_REV)
defconsti(env, "GL-UNSIGNED-BYTE-2-3-3-REV", (GLenum) GL_UNSIGNED_BYTE_2_3_3_REV, "GL_UNSIGNED_BYTE_2_3_3_REV");
#endif
#if defined(GL_UNSIGNED_BYTE_2_3_3_REV_EXT)
defconsti(env, "GL-UNSIGNED-BYTE-2-3-3-REV-EXT", (GLenum) GL_UNSIGNED_BYTE_2_3_3_REV_EXT, "GL_UNSIGNED_BYTE_2_3_3_REV_EXT");
#endif
#if defined(GL_UNSIGNED_SHORT_5_6_5)
defconsti(env, "GL-UNSIGNED-SHORT-5-6-5", (GLenum) GL_UNSIGNED_SHORT_5_6_5, "GL_UNSIGNED_SHORT_5_6_5");
#endif
#if defined(GL_UNSIGNED_SHORT_5_6_5_EXT)
defconsti(env, "GL-UNSIGNED-SHORT-5-6-5-EXT", (GLenum) GL_UNSIGNED_SHORT_5_6_5_EXT, "GL_UNSIGNED_SHORT_5_6_5_EXT");
#endif
#if defined(GL_UNSIGNED_SHORT_5_6_5_REV)
defconsti(env, "GL-UNSIGNED-SHORT-5-6-5-REV", (GLenum) GL_UNSIGNED_SHORT_5_6_5_REV, "GL_UNSIGNED_SHORT_5_6_5_REV");
#endif
#if defined(GL_UNSIGNED_SHORT_5_6_5_REV_EXT)
defconsti(env, "GL-UNSIGNED-SHORT-5-6-5-REV-EXT", (GLenum) GL_UNSIGNED_SHORT_5_6_5_REV_EXT, "GL_UNSIGNED_SHORT_5_6_5_REV_EXT");
#endif
#if defined(GL_UNSIGNED_SHORT_4_4_4_4_REV)
defconsti(env, "GL-UNSIGNED-SHORT-4-4-4-4-REV", (GLenum) GL_UNSIGNED_SHORT_4_4_4_4_REV, "GL_UNSIGNED_SHORT_4_4_4_4_REV");
#endif
#if defined(GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT)
defconsti(env, "GL-UNSIGNED-SHORT-4-4-4-4-REV-EXT", (GLenum) GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT, "GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT");
#endif
#if defined(GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG)
defconsti(env, "GL-UNSIGNED-SHORT-4-4-4-4-REV-IMG", (GLenum) GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG, "GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG");
#endif
#if defined(GL_UNSIGNED_SHORT_1_5_5_5_REV)
defconsti(env, "GL-UNSIGNED-SHORT-1-5-5-5-REV", (GLenum) GL_UNSIGNED_SHORT_1_5_5_5_REV, "GL_UNSIGNED_SHORT_1_5_5_5_REV");
#endif
#if defined(GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT)
defconsti(env, "GL-UNSIGNED-SHORT-1-5-5-5-REV-EXT", (GLenum) GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT, "GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT");
#endif
#if defined(GL_UNSIGNED_INT_8_8_8_8_REV)
defconsti(env, "GL-UNSIGNED-INT-8-8-8-8-REV", (GLenum) GL_UNSIGNED_INT_8_8_8_8_REV, "GL_UNSIGNED_INT_8_8_8_8_REV");
#endif
#if defined(GL_UNSIGNED_INT_8_8_8_8_REV_EXT)
defconsti(env, "GL-UNSIGNED-INT-8-8-8-8-REV-EXT", (GLenum) GL_UNSIGNED_INT_8_8_8_8_REV_EXT, "GL_UNSIGNED_INT_8_8_8_8_REV_EXT");
#endif
#if defined(GL_UNSIGNED_INT_2_10_10_10_REV)
defconsti(env, "GL-UNSIGNED-INT-2-10-10-10-REV", (GLenum) GL_UNSIGNED_INT_2_10_10_10_REV, "GL_UNSIGNED_INT_2_10_10_10_REV");
#endif
#if defined(GL_UNSIGNED_INT_2_10_10_10_REV_EXT)
defconsti(env, "GL-UNSIGNED-INT-2-10-10-10-REV-EXT", (GLenum) GL_UNSIGNED_INT_2_10_10_10_REV_EXT, "GL_UNSIGNED_INT_2_10_10_10_REV_EXT");
#endif
#if defined(GL_TEXTURE_MAX_CLAMP_S_SGIX)
defconsti(env, "GL-TEXTURE-MAX-CLAMP-S-SGIX", (GLenum) GL_TEXTURE_MAX_CLAMP_S_SGIX, "GL_TEXTURE_MAX_CLAMP_S_SGIX");
#endif
#if defined(GL_TEXTURE_MAX_CLAMP_T_SGIX)
defconsti(env, "GL-TEXTURE-MAX-CLAMP-T-SGIX", (GLenum) GL_TEXTURE_MAX_CLAMP_T_SGIX, "GL_TEXTURE_MAX_CLAMP_T_SGIX");
#endif
#if defined(GL_TEXTURE_MAX_CLAMP_R_SGIX)
defconsti(env, "GL-TEXTURE-MAX-CLAMP-R-SGIX", (GLenum) GL_TEXTURE_MAX_CLAMP_R_SGIX, "GL_TEXTURE_MAX_CLAMP_R_SGIX");
#endif
#if defined(GL_MIRRORED_REPEAT)
defconsti(env, "GL-MIRRORED-REPEAT", (GLenum) GL_MIRRORED_REPEAT, "GL_MIRRORED_REPEAT");
#endif
#if defined(GL_MIRRORED_REPEAT_ARB)
defconsti(env, "GL-MIRRORED-REPEAT-ARB", (GLenum) GL_MIRRORED_REPEAT_ARB, "GL_MIRRORED_REPEAT_ARB");
#endif
#if defined(GL_MIRRORED_REPEAT_IBM)
defconsti(env, "GL-MIRRORED-REPEAT-IBM", (GLenum) GL_MIRRORED_REPEAT_IBM, "GL_MIRRORED_REPEAT_IBM");
#endif
#if defined(GL_MIRRORED_REPEAT_OES)
defconsti(env, "GL-MIRRORED-REPEAT-OES", (GLenum) GL_MIRRORED_REPEAT_OES, "GL_MIRRORED_REPEAT_OES");
#endif
#if defined(GL_RGB_S3TC)
defconsti(env, "GL-RGB-S3TC", (GLenum) GL_RGB_S3TC, "GL_RGB_S3TC");
#endif
#if defined(GL_RGB4_S3TC)
defconsti(env, "GL-RGB4-S3TC", (GLenum) GL_RGB4_S3TC, "GL_RGB4_S3TC");
#endif
#if defined(GL_RGBA_S3TC)
defconsti(env, "GL-RGBA-S3TC", (GLenum) GL_RGBA_S3TC, "GL_RGBA_S3TC");
#endif
#if defined(GL_RGBA4_S3TC)
defconsti(env, "GL-RGBA4-S3TC", (GLenum) GL_RGBA4_S3TC, "GL_RGBA4_S3TC");
#endif
#if defined(GL_RGBA_DXT5_S3TC)
defconsti(env, "GL-RGBA-DXT5-S3TC", (GLenum) GL_RGBA_DXT5_S3TC, "GL_RGBA_DXT5_S3TC");
#endif
#if defined(GL_RGBA4_DXT5_S3TC)
defconsti(env, "GL-RGBA4-DXT5-S3TC", (GLenum) GL_RGBA4_DXT5_S3TC, "GL_RGBA4_DXT5_S3TC");
#endif
#if defined(GL_VERTEX_PRECLIP_SGIX)
defconsti(env, "GL-VERTEX-PRECLIP-SGIX", (GLenum) GL_VERTEX_PRECLIP_SGIX, "GL_VERTEX_PRECLIP_SGIX");
#endif
#if defined(GL_VERTEX_PRECLIP_HINT_SGIX)
defconsti(env, "GL-VERTEX-PRECLIP-HINT-SGIX", (GLenum) GL_VERTEX_PRECLIP_HINT_SGIX, "GL_VERTEX_PRECLIP_HINT_SGIX");
#endif
#if defined(GL_COMPRESSED_RGB_S3TC_DXT1_EXT)
defconsti(env, "GL-COMPRESSED-RGB-S3TC-DXT1-EXT", (GLenum) GL_COMPRESSED_RGB_S3TC_DXT1_EXT, "GL_COMPRESSED_RGB_S3TC_DXT1_EXT");
#endif
#if defined(GL_COMPRESSED_RGBA_S3TC_DXT1_EXT)
defconsti(env, "GL-COMPRESSED-RGBA-S3TC-DXT1-EXT", (GLenum) GL_COMPRESSED_RGBA_S3TC_DXT1_EXT, "GL_COMPRESSED_RGBA_S3TC_DXT1_EXT");
#endif
#if defined(GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE)
defconsti(env, "GL-COMPRESSED-RGBA-S3TC-DXT3-ANGLE", (GLenum) GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE, "GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE");
#endif
#if defined(GL_COMPRESSED_RGBA_S3TC_DXT3_EXT)
defconsti(env, "GL-COMPRESSED-RGBA-S3TC-DXT3-EXT", (GLenum) GL_COMPRESSED_RGBA_S3TC_DXT3_EXT, "GL_COMPRESSED_RGBA_S3TC_DXT3_EXT");
#endif
#if defined(GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE)
defconsti(env, "GL-COMPRESSED-RGBA-S3TC-DXT5-ANGLE", (GLenum) GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE, "GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE");
#endif
#if defined(GL_COMPRESSED_RGBA_S3TC_DXT5_EXT)
defconsti(env, "GL-COMPRESSED-RGBA-S3TC-DXT5-EXT", (GLenum) GL_COMPRESSED_RGBA_S3TC_DXT5_EXT, "GL_COMPRESSED_RGBA_S3TC_DXT5_EXT");
#endif
#if defined(GL_PARALLEL_ARRAYS_INTEL)
defconsti(env, "GL-PARALLEL-ARRAYS-INTEL", (GLenum) GL_PARALLEL_ARRAYS_INTEL, "GL_PARALLEL_ARRAYS_INTEL");
#endif
#if defined(GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL)
defconsti(env, "GL-VERTEX-ARRAY-PARALLEL-POINTERS-INTEL", (GLenum) GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL, "GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL");
#endif
#if defined(GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL)
defconsti(env, "GL-NORMAL-ARRAY-PARALLEL-POINTERS-INTEL", (GLenum) GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL, "GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL");
#endif
#if defined(GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL)
defconsti(env, "GL-COLOR-ARRAY-PARALLEL-POINTERS-INTEL", (GLenum) GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL, "GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-PARALLEL-POINTERS-INTEL", (GLenum) GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL, "GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL");
#endif
#if defined(GL_PERFQUERY_DONOT_FLUSH_INTEL)
defconsti(env, "GL-PERFQUERY-DONOT-FLUSH-INTEL", (GLenum) GL_PERFQUERY_DONOT_FLUSH_INTEL, "GL_PERFQUERY_DONOT_FLUSH_INTEL");
#endif
#if defined(GL_PERFQUERY_FLUSH_INTEL)
defconsti(env, "GL-PERFQUERY-FLUSH-INTEL", (GLenum) GL_PERFQUERY_FLUSH_INTEL, "GL_PERFQUERY_FLUSH_INTEL");
#endif
#if defined(GL_PERFQUERY_WAIT_INTEL)
defconsti(env, "GL-PERFQUERY-WAIT-INTEL", (GLenum) GL_PERFQUERY_WAIT_INTEL, "GL_PERFQUERY_WAIT_INTEL");
#endif
#if defined(GL_BLACKHOLE_RENDER_INTEL)
defconsti(env, "GL-BLACKHOLE-RENDER-INTEL", (GLenum) GL_BLACKHOLE_RENDER_INTEL, "GL_BLACKHOLE_RENDER_INTEL");
#endif
#if defined(GL_CONSERVATIVE_RASTERIZATION_INTEL)
defconsti(env, "GL-CONSERVATIVE-RASTERIZATION-INTEL", (GLenum) GL_CONSERVATIVE_RASTERIZATION_INTEL, "GL_CONSERVATIVE_RASTERIZATION_INTEL");
#endif
#if defined(GL_TEXTURE_MEMORY_LAYOUT_INTEL)
defconsti(env, "GL-TEXTURE-MEMORY-LAYOUT-INTEL", (GLenum) GL_TEXTURE_MEMORY_LAYOUT_INTEL, "GL_TEXTURE_MEMORY_LAYOUT_INTEL");
#endif
#if defined(GL_FRAGMENT_LIGHTING_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHTING-SGIX", (GLenum) GL_FRAGMENT_LIGHTING_SGIX, "GL_FRAGMENT_LIGHTING_SGIX");
#endif
#if defined(GL_FRAGMENT_COLOR_MATERIAL_SGIX)
defconsti(env, "GL-FRAGMENT-COLOR-MATERIAL-SGIX", (GLenum) GL_FRAGMENT_COLOR_MATERIAL_SGIX, "GL_FRAGMENT_COLOR_MATERIAL_SGIX");
#endif
#if defined(GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX)
defconsti(env, "GL-FRAGMENT-COLOR-MATERIAL-FACE-SGIX", (GLenum) GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX, "GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX");
#endif
#if defined(GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX)
defconsti(env, "GL-FRAGMENT-COLOR-MATERIAL-PARAMETER-SGIX", (GLenum) GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX, "GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX");
#endif
#if defined(GL_MAX_FRAGMENT_LIGHTS_SGIX)
defconsti(env, "GL-MAX-FRAGMENT-LIGHTS-SGIX", (GLenum) GL_MAX_FRAGMENT_LIGHTS_SGIX, "GL_MAX_FRAGMENT_LIGHTS_SGIX");
#endif
#if defined(GL_MAX_ACTIVE_LIGHTS_SGIX)
defconsti(env, "GL-MAX-ACTIVE-LIGHTS-SGIX", (GLenum) GL_MAX_ACTIVE_LIGHTS_SGIX, "GL_MAX_ACTIVE_LIGHTS_SGIX");
#endif
#if defined(GL_CURRENT_RASTER_NORMAL_SGIX)
defconsti(env, "GL-CURRENT-RASTER-NORMAL-SGIX", (GLenum) GL_CURRENT_RASTER_NORMAL_SGIX, "GL_CURRENT_RASTER_NORMAL_SGIX");
#endif
#if defined(GL_LIGHT_ENV_MODE_SGIX)
defconsti(env, "GL-LIGHT-ENV-MODE-SGIX", (GLenum) GL_LIGHT_ENV_MODE_SGIX, "GL_LIGHT_ENV_MODE_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT-MODEL-LOCAL-VIEWER-SGIX", (GLenum) GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX, "GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT-MODEL-TWO-SIDE-SGIX", (GLenum) GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX, "GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT-MODEL-AMBIENT-SGIX", (GLenum) GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX, "GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT-MODEL-NORMAL-INTERPOLATION-SGIX", (GLenum) GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX, "GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT0_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT0-SGIX", (GLenum) GL_FRAGMENT_LIGHT0_SGIX, "GL_FRAGMENT_LIGHT0_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT1_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT1-SGIX", (GLenum) GL_FRAGMENT_LIGHT1_SGIX, "GL_FRAGMENT_LIGHT1_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT2_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT2-SGIX", (GLenum) GL_FRAGMENT_LIGHT2_SGIX, "GL_FRAGMENT_LIGHT2_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT3_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT3-SGIX", (GLenum) GL_FRAGMENT_LIGHT3_SGIX, "GL_FRAGMENT_LIGHT3_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT4_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT4-SGIX", (GLenum) GL_FRAGMENT_LIGHT4_SGIX, "GL_FRAGMENT_LIGHT4_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT5_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT5-SGIX", (GLenum) GL_FRAGMENT_LIGHT5_SGIX, "GL_FRAGMENT_LIGHT5_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT6_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT6-SGIX", (GLenum) GL_FRAGMENT_LIGHT6_SGIX, "GL_FRAGMENT_LIGHT6_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT7_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT7-SGIX", (GLenum) GL_FRAGMENT_LIGHT7_SGIX, "GL_FRAGMENT_LIGHT7_SGIX");
#endif
#if defined(GL_PACK_RESAMPLE_SGIX)
defconsti(env, "GL-PACK-RESAMPLE-SGIX", (GLenum) GL_PACK_RESAMPLE_SGIX, "GL_PACK_RESAMPLE_SGIX");
#endif
#if defined(GL_UNPACK_RESAMPLE_SGIX)
defconsti(env, "GL-UNPACK-RESAMPLE-SGIX", (GLenum) GL_UNPACK_RESAMPLE_SGIX, "GL_UNPACK_RESAMPLE_SGIX");
#endif
#if defined(GL_RESAMPLE_DECIMATE_SGIX)
defconsti(env, "GL-RESAMPLE-DECIMATE-SGIX", (GLenum) GL_RESAMPLE_DECIMATE_SGIX, "GL_RESAMPLE_DECIMATE_SGIX");
#endif
#if defined(GL_RESAMPLE_REPLICATE_SGIX)
defconsti(env, "GL-RESAMPLE-REPLICATE-SGIX", (GLenum) GL_RESAMPLE_REPLICATE_SGIX, "GL_RESAMPLE_REPLICATE_SGIX");
#endif
#if defined(GL_RESAMPLE_ZERO_FILL_SGIX)
defconsti(env, "GL-RESAMPLE-ZERO-FILL-SGIX", (GLenum) GL_RESAMPLE_ZERO_FILL_SGIX, "GL_RESAMPLE_ZERO_FILL_SGIX");
#endif
#if defined(GL_TANGENT_ARRAY_EXT)
defconsti(env, "GL-TANGENT-ARRAY-EXT", (GLenum) GL_TANGENT_ARRAY_EXT, "GL_TANGENT_ARRAY_EXT");
#endif
#if defined(GL_BINORMAL_ARRAY_EXT)
defconsti(env, "GL-BINORMAL-ARRAY-EXT", (GLenum) GL_BINORMAL_ARRAY_EXT, "GL_BINORMAL_ARRAY_EXT");
#endif
#if defined(GL_CURRENT_TANGENT_EXT)
defconsti(env, "GL-CURRENT-TANGENT-EXT", (GLenum) GL_CURRENT_TANGENT_EXT, "GL_CURRENT_TANGENT_EXT");
#endif
#if defined(GL_CURRENT_BINORMAL_EXT)
defconsti(env, "GL-CURRENT-BINORMAL-EXT", (GLenum) GL_CURRENT_BINORMAL_EXT, "GL_CURRENT_BINORMAL_EXT");
#endif
#if defined(GL_TANGENT_ARRAY_TYPE_EXT)
defconsti(env, "GL-TANGENT-ARRAY-TYPE-EXT", (GLenum) GL_TANGENT_ARRAY_TYPE_EXT, "GL_TANGENT_ARRAY_TYPE_EXT");
#endif
#if defined(GL_TANGENT_ARRAY_STRIDE_EXT)
defconsti(env, "GL-TANGENT-ARRAY-STRIDE-EXT", (GLenum) GL_TANGENT_ARRAY_STRIDE_EXT, "GL_TANGENT_ARRAY_STRIDE_EXT");
#endif
#if defined(GL_BINORMAL_ARRAY_TYPE_EXT)
defconsti(env, "GL-BINORMAL-ARRAY-TYPE-EXT", (GLenum) GL_BINORMAL_ARRAY_TYPE_EXT, "GL_BINORMAL_ARRAY_TYPE_EXT");
#endif
#if defined(GL_BINORMAL_ARRAY_STRIDE_EXT)
defconsti(env, "GL-BINORMAL-ARRAY-STRIDE-EXT", (GLenum) GL_BINORMAL_ARRAY_STRIDE_EXT, "GL_BINORMAL_ARRAY_STRIDE_EXT");
#endif
#if defined(GL_TANGENT_ARRAY_POINTER_EXT)
defconsti(env, "GL-TANGENT-ARRAY-POINTER-EXT", (GLenum) GL_TANGENT_ARRAY_POINTER_EXT, "GL_TANGENT_ARRAY_POINTER_EXT");
#endif
#if defined(GL_BINORMAL_ARRAY_POINTER_EXT)
defconsti(env, "GL-BINORMAL-ARRAY-POINTER-EXT", (GLenum) GL_BINORMAL_ARRAY_POINTER_EXT, "GL_BINORMAL_ARRAY_POINTER_EXT");
#endif
#if defined(GL_MAP1_TANGENT_EXT)
defconsti(env, "GL-MAP1-TANGENT-EXT", (GLenum) GL_MAP1_TANGENT_EXT, "GL_MAP1_TANGENT_EXT");
#endif
#if defined(GL_MAP2_TANGENT_EXT)
defconsti(env, "GL-MAP2-TANGENT-EXT", (GLenum) GL_MAP2_TANGENT_EXT, "GL_MAP2_TANGENT_EXT");
#endif
#if defined(GL_MAP1_BINORMAL_EXT)
defconsti(env, "GL-MAP1-BINORMAL-EXT", (GLenum) GL_MAP1_BINORMAL_EXT, "GL_MAP1_BINORMAL_EXT");
#endif
#if defined(GL_MAP2_BINORMAL_EXT)
defconsti(env, "GL-MAP2-BINORMAL-EXT", (GLenum) GL_MAP2_BINORMAL_EXT, "GL_MAP2_BINORMAL_EXT");
#endif
#if defined(GL_NEAREST_CLIPMAP_NEAREST_SGIX)
defconsti(env, "GL-NEAREST-CLIPMAP-NEAREST-SGIX", (GLenum) GL_NEAREST_CLIPMAP_NEAREST_SGIX, "GL_NEAREST_CLIPMAP_NEAREST_SGIX");
#endif
#if defined(GL_NEAREST_CLIPMAP_LINEAR_SGIX)
defconsti(env, "GL-NEAREST-CLIPMAP-LINEAR-SGIX", (GLenum) GL_NEAREST_CLIPMAP_LINEAR_SGIX, "GL_NEAREST_CLIPMAP_LINEAR_SGIX");
#endif
#if defined(GL_LINEAR_CLIPMAP_NEAREST_SGIX)
defconsti(env, "GL-LINEAR-CLIPMAP-NEAREST-SGIX", (GLenum) GL_LINEAR_CLIPMAP_NEAREST_SGIX, "GL_LINEAR_CLIPMAP_NEAREST_SGIX");
#endif
#if defined(GL_FOG_COORDINATE_SOURCE)
defconsti(env, "GL-FOG-COORDINATE-SOURCE", (GLenum) GL_FOG_COORDINATE_SOURCE, "GL_FOG_COORDINATE_SOURCE");
#endif
#if defined(GL_FOG_COORDINATE_SOURCE_EXT)
defconsti(env, "GL-FOG-COORDINATE-SOURCE-EXT", (GLenum) GL_FOG_COORDINATE_SOURCE_EXT, "GL_FOG_COORDINATE_SOURCE_EXT");
#endif
#if defined(GL_FOG_COORD_SRC)
defconsti(env, "GL-FOG-COORD-SRC", (GLenum) GL_FOG_COORD_SRC, "GL_FOG_COORD_SRC");
#endif
#if defined(GL_FOG_COORDINATE)
defconsti(env, "GL-FOG-COORDINATE", (GLenum) GL_FOG_COORDINATE, "GL_FOG_COORDINATE");
#endif
#if defined(GL_FOG_COORD)
defconsti(env, "GL-FOG-COORD", (GLenum) GL_FOG_COORD, "GL_FOG_COORD");
#endif
#if defined(GL_FOG_COORDINATE_EXT)
defconsti(env, "GL-FOG-COORDINATE-EXT", (GLenum) GL_FOG_COORDINATE_EXT, "GL_FOG_COORDINATE_EXT");
#endif
#if defined(GL_FRAGMENT_DEPTH)
defconsti(env, "GL-FRAGMENT-DEPTH", (GLenum) GL_FRAGMENT_DEPTH, "GL_FRAGMENT_DEPTH");
#endif
#if defined(GL_FRAGMENT_DEPTH_EXT)
defconsti(env, "GL-FRAGMENT-DEPTH-EXT", (GLenum) GL_FRAGMENT_DEPTH_EXT, "GL_FRAGMENT_DEPTH_EXT");
#endif
#if defined(GL_CURRENT_FOG_COORDINATE)
defconsti(env, "GL-CURRENT-FOG-COORDINATE", (GLenum) GL_CURRENT_FOG_COORDINATE, "GL_CURRENT_FOG_COORDINATE");
#endif
#if defined(GL_CURRENT_FOG_COORD)
defconsti(env, "GL-CURRENT-FOG-COORD", (GLenum) GL_CURRENT_FOG_COORD, "GL_CURRENT_FOG_COORD");
#endif
#if defined(GL_CURRENT_FOG_COORDINATE_EXT)
defconsti(env, "GL-CURRENT-FOG-COORDINATE-EXT", (GLenum) GL_CURRENT_FOG_COORDINATE_EXT, "GL_CURRENT_FOG_COORDINATE_EXT");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY_TYPE)
defconsti(env, "GL-FOG-COORDINATE-ARRAY-TYPE", (GLenum) GL_FOG_COORDINATE_ARRAY_TYPE, "GL_FOG_COORDINATE_ARRAY_TYPE");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY_TYPE_EXT)
defconsti(env, "GL-FOG-COORDINATE-ARRAY-TYPE-EXT", (GLenum) GL_FOG_COORDINATE_ARRAY_TYPE_EXT, "GL_FOG_COORDINATE_ARRAY_TYPE_EXT");
#endif
#if defined(GL_FOG_COORD_ARRAY_TYPE)
defconsti(env, "GL-FOG-COORD-ARRAY-TYPE", (GLenum) GL_FOG_COORD_ARRAY_TYPE, "GL_FOG_COORD_ARRAY_TYPE");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY_STRIDE)
defconsti(env, "GL-FOG-COORDINATE-ARRAY-STRIDE", (GLenum) GL_FOG_COORDINATE_ARRAY_STRIDE, "GL_FOG_COORDINATE_ARRAY_STRIDE");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY_STRIDE_EXT)
defconsti(env, "GL-FOG-COORDINATE-ARRAY-STRIDE-EXT", (GLenum) GL_FOG_COORDINATE_ARRAY_STRIDE_EXT, "GL_FOG_COORDINATE_ARRAY_STRIDE_EXT");
#endif
#if defined(GL_FOG_COORD_ARRAY_STRIDE)
defconsti(env, "GL-FOG-COORD-ARRAY-STRIDE", (GLenum) GL_FOG_COORD_ARRAY_STRIDE, "GL_FOG_COORD_ARRAY_STRIDE");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY_POINTER)
defconsti(env, "GL-FOG-COORDINATE-ARRAY-POINTER", (GLenum) GL_FOG_COORDINATE_ARRAY_POINTER, "GL_FOG_COORDINATE_ARRAY_POINTER");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY_POINTER_EXT)
defconsti(env, "GL-FOG-COORDINATE-ARRAY-POINTER-EXT", (GLenum) GL_FOG_COORDINATE_ARRAY_POINTER_EXT, "GL_FOG_COORDINATE_ARRAY_POINTER_EXT");
#endif
#if defined(GL_FOG_COORD_ARRAY_POINTER)
defconsti(env, "GL-FOG-COORD-ARRAY-POINTER", (GLenum) GL_FOG_COORD_ARRAY_POINTER, "GL_FOG_COORD_ARRAY_POINTER");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY)
defconsti(env, "GL-FOG-COORDINATE-ARRAY", (GLenum) GL_FOG_COORDINATE_ARRAY, "GL_FOG_COORDINATE_ARRAY");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY_EXT)
defconsti(env, "GL-FOG-COORDINATE-ARRAY-EXT", (GLenum) GL_FOG_COORDINATE_ARRAY_EXT, "GL_FOG_COORDINATE_ARRAY_EXT");
#endif
#if defined(GL_FOG_COORD_ARRAY)
defconsti(env, "GL-FOG-COORD-ARRAY", (GLenum) GL_FOG_COORD_ARRAY, "GL_FOG_COORD_ARRAY");
#endif
#if defined(GL_COLOR_SUM)
defconsti(env, "GL-COLOR-SUM", (GLenum) GL_COLOR_SUM, "GL_COLOR_SUM");
#endif
#if defined(GL_COLOR_SUM_ARB)
defconsti(env, "GL-COLOR-SUM-ARB", (GLenum) GL_COLOR_SUM_ARB, "GL_COLOR_SUM_ARB");
#endif
#if defined(GL_COLOR_SUM_EXT)
defconsti(env, "GL-COLOR-SUM-EXT", (GLenum) GL_COLOR_SUM_EXT, "GL_COLOR_SUM_EXT");
#endif
#if defined(GL_CURRENT_SECONDARY_COLOR)
defconsti(env, "GL-CURRENT-SECONDARY-COLOR", (GLenum) GL_CURRENT_SECONDARY_COLOR, "GL_CURRENT_SECONDARY_COLOR");
#endif
#if defined(GL_CURRENT_SECONDARY_COLOR_EXT)
defconsti(env, "GL-CURRENT-SECONDARY-COLOR-EXT", (GLenum) GL_CURRENT_SECONDARY_COLOR_EXT, "GL_CURRENT_SECONDARY_COLOR_EXT");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_SIZE)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-SIZE", (GLenum) GL_SECONDARY_COLOR_ARRAY_SIZE, "GL_SECONDARY_COLOR_ARRAY_SIZE");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_SIZE_EXT)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-SIZE-EXT", (GLenum) GL_SECONDARY_COLOR_ARRAY_SIZE_EXT, "GL_SECONDARY_COLOR_ARRAY_SIZE_EXT");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_TYPE)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-TYPE", (GLenum) GL_SECONDARY_COLOR_ARRAY_TYPE, "GL_SECONDARY_COLOR_ARRAY_TYPE");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_TYPE_EXT)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-TYPE-EXT", (GLenum) GL_SECONDARY_COLOR_ARRAY_TYPE_EXT, "GL_SECONDARY_COLOR_ARRAY_TYPE_EXT");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_STRIDE)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-STRIDE", (GLenum) GL_SECONDARY_COLOR_ARRAY_STRIDE, "GL_SECONDARY_COLOR_ARRAY_STRIDE");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-STRIDE-EXT", (GLenum) GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT, "GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_POINTER)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-POINTER", (GLenum) GL_SECONDARY_COLOR_ARRAY_POINTER, "GL_SECONDARY_COLOR_ARRAY_POINTER");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_POINTER_EXT)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-POINTER-EXT", (GLenum) GL_SECONDARY_COLOR_ARRAY_POINTER_EXT, "GL_SECONDARY_COLOR_ARRAY_POINTER_EXT");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY", (GLenum) GL_SECONDARY_COLOR_ARRAY, "GL_SECONDARY_COLOR_ARRAY");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_EXT)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-EXT", (GLenum) GL_SECONDARY_COLOR_ARRAY_EXT, "GL_SECONDARY_COLOR_ARRAY_EXT");
#endif
#if defined(GL_CURRENT_RASTER_SECONDARY_COLOR)
defconsti(env, "GL-CURRENT-RASTER-SECONDARY-COLOR", (GLenum) GL_CURRENT_RASTER_SECONDARY_COLOR, "GL_CURRENT_RASTER_SECONDARY_COLOR");
#endif
#if defined(GL_ALIASED_POINT_SIZE_RANGE)
defconsti(env, "GL-ALIASED-POINT-SIZE-RANGE", (GLenum) GL_ALIASED_POINT_SIZE_RANGE, "GL_ALIASED_POINT_SIZE_RANGE");
#endif
#if defined(GL_ALIASED_LINE_WIDTH_RANGE)
defconsti(env, "GL-ALIASED-LINE-WIDTH-RANGE", (GLenum) GL_ALIASED_LINE_WIDTH_RANGE, "GL_ALIASED_LINE_WIDTH_RANGE");
#endif
#if defined(GL_SCREEN_COORDINATES_REND)
defconsti(env, "GL-SCREEN-COORDINATES-REND", (GLenum) GL_SCREEN_COORDINATES_REND, "GL_SCREEN_COORDINATES_REND");
#endif
#if defined(GL_INVERTED_SCREEN_W_REND)
defconsti(env, "GL-INVERTED-SCREEN-W-REND", (GLenum) GL_INVERTED_SCREEN_W_REND, "GL_INVERTED_SCREEN_W_REND");
#endif
#if defined(GL_TEXTURE0)
defconsti(env, "GL-TEXTURE0", (GLenum) GL_TEXTURE0, "GL_TEXTURE0");
#endif
#if defined(GL_TEXTURE0_ARB)
defconsti(env, "GL-TEXTURE0-ARB", (GLenum) GL_TEXTURE0_ARB, "GL_TEXTURE0_ARB");
#endif
#if defined(GL_TEXTURE1)
defconsti(env, "GL-TEXTURE1", (GLenum) GL_TEXTURE1, "GL_TEXTURE1");
#endif
#if defined(GL_TEXTURE1_ARB)
defconsti(env, "GL-TEXTURE1-ARB", (GLenum) GL_TEXTURE1_ARB, "GL_TEXTURE1_ARB");
#endif
#if defined(GL_TEXTURE2)
defconsti(env, "GL-TEXTURE2", (GLenum) GL_TEXTURE2, "GL_TEXTURE2");
#endif
#if defined(GL_TEXTURE2_ARB)
defconsti(env, "GL-TEXTURE2-ARB", (GLenum) GL_TEXTURE2_ARB, "GL_TEXTURE2_ARB");
#endif
#if defined(GL_TEXTURE3)
defconsti(env, "GL-TEXTURE3", (GLenum) GL_TEXTURE3, "GL_TEXTURE3");
#endif
#if defined(GL_TEXTURE3_ARB)
defconsti(env, "GL-TEXTURE3-ARB", (GLenum) GL_TEXTURE3_ARB, "GL_TEXTURE3_ARB");
#endif
#if defined(GL_TEXTURE4)
defconsti(env, "GL-TEXTURE4", (GLenum) GL_TEXTURE4, "GL_TEXTURE4");
#endif
#if defined(GL_TEXTURE4_ARB)
defconsti(env, "GL-TEXTURE4-ARB", (GLenum) GL_TEXTURE4_ARB, "GL_TEXTURE4_ARB");
#endif
#if defined(GL_TEXTURE5)
defconsti(env, "GL-TEXTURE5", (GLenum) GL_TEXTURE5, "GL_TEXTURE5");
#endif
#if defined(GL_TEXTURE5_ARB)
defconsti(env, "GL-TEXTURE5-ARB", (GLenum) GL_TEXTURE5_ARB, "GL_TEXTURE5_ARB");
#endif
#if defined(GL_TEXTURE6)
defconsti(env, "GL-TEXTURE6", (GLenum) GL_TEXTURE6, "GL_TEXTURE6");
#endif
#if defined(GL_TEXTURE6_ARB)
defconsti(env, "GL-TEXTURE6-ARB", (GLenum) GL_TEXTURE6_ARB, "GL_TEXTURE6_ARB");
#endif
#if defined(GL_TEXTURE7)
defconsti(env, "GL-TEXTURE7", (GLenum) GL_TEXTURE7, "GL_TEXTURE7");
#endif
#if defined(GL_TEXTURE7_ARB)
defconsti(env, "GL-TEXTURE7-ARB", (GLenum) GL_TEXTURE7_ARB, "GL_TEXTURE7_ARB");
#endif
#if defined(GL_TEXTURE8)
defconsti(env, "GL-TEXTURE8", (GLenum) GL_TEXTURE8, "GL_TEXTURE8");
#endif
#if defined(GL_TEXTURE8_ARB)
defconsti(env, "GL-TEXTURE8-ARB", (GLenum) GL_TEXTURE8_ARB, "GL_TEXTURE8_ARB");
#endif
#if defined(GL_TEXTURE9)
defconsti(env, "GL-TEXTURE9", (GLenum) GL_TEXTURE9, "GL_TEXTURE9");
#endif
#if defined(GL_TEXTURE9_ARB)
defconsti(env, "GL-TEXTURE9-ARB", (GLenum) GL_TEXTURE9_ARB, "GL_TEXTURE9_ARB");
#endif
#if defined(GL_TEXTURE10)
defconsti(env, "GL-TEXTURE10", (GLenum) GL_TEXTURE10, "GL_TEXTURE10");
#endif
#if defined(GL_TEXTURE10_ARB)
defconsti(env, "GL-TEXTURE10-ARB", (GLenum) GL_TEXTURE10_ARB, "GL_TEXTURE10_ARB");
#endif
#if defined(GL_TEXTURE11)
defconsti(env, "GL-TEXTURE11", (GLenum) GL_TEXTURE11, "GL_TEXTURE11");
#endif
#if defined(GL_TEXTURE11_ARB)
defconsti(env, "GL-TEXTURE11-ARB", (GLenum) GL_TEXTURE11_ARB, "GL_TEXTURE11_ARB");
#endif
#if defined(GL_TEXTURE12)
defconsti(env, "GL-TEXTURE12", (GLenum) GL_TEXTURE12, "GL_TEXTURE12");
#endif
#if defined(GL_TEXTURE12_ARB)
defconsti(env, "GL-TEXTURE12-ARB", (GLenum) GL_TEXTURE12_ARB, "GL_TEXTURE12_ARB");
#endif
#if defined(GL_TEXTURE13)
defconsti(env, "GL-TEXTURE13", (GLenum) GL_TEXTURE13, "GL_TEXTURE13");
#endif
#if defined(GL_TEXTURE13_ARB)
defconsti(env, "GL-TEXTURE13-ARB", (GLenum) GL_TEXTURE13_ARB, "GL_TEXTURE13_ARB");
#endif
#if defined(GL_TEXTURE14)
defconsti(env, "GL-TEXTURE14", (GLenum) GL_TEXTURE14, "GL_TEXTURE14");
#endif
#if defined(GL_TEXTURE14_ARB)
defconsti(env, "GL-TEXTURE14-ARB", (GLenum) GL_TEXTURE14_ARB, "GL_TEXTURE14_ARB");
#endif
#if defined(GL_TEXTURE15)
defconsti(env, "GL-TEXTURE15", (GLenum) GL_TEXTURE15, "GL_TEXTURE15");
#endif
#if defined(GL_TEXTURE15_ARB)
defconsti(env, "GL-TEXTURE15-ARB", (GLenum) GL_TEXTURE15_ARB, "GL_TEXTURE15_ARB");
#endif
#if defined(GL_TEXTURE16)
defconsti(env, "GL-TEXTURE16", (GLenum) GL_TEXTURE16, "GL_TEXTURE16");
#endif
#if defined(GL_TEXTURE16_ARB)
defconsti(env, "GL-TEXTURE16-ARB", (GLenum) GL_TEXTURE16_ARB, "GL_TEXTURE16_ARB");
#endif
#if defined(GL_TEXTURE17)
defconsti(env, "GL-TEXTURE17", (GLenum) GL_TEXTURE17, "GL_TEXTURE17");
#endif
#if defined(GL_TEXTURE17_ARB)
defconsti(env, "GL-TEXTURE17-ARB", (GLenum) GL_TEXTURE17_ARB, "GL_TEXTURE17_ARB");
#endif
#if defined(GL_TEXTURE18)
defconsti(env, "GL-TEXTURE18", (GLenum) GL_TEXTURE18, "GL_TEXTURE18");
#endif
#if defined(GL_TEXTURE18_ARB)
defconsti(env, "GL-TEXTURE18-ARB", (GLenum) GL_TEXTURE18_ARB, "GL_TEXTURE18_ARB");
#endif
#if defined(GL_TEXTURE19)
defconsti(env, "GL-TEXTURE19", (GLenum) GL_TEXTURE19, "GL_TEXTURE19");
#endif
#if defined(GL_TEXTURE19_ARB)
defconsti(env, "GL-TEXTURE19-ARB", (GLenum) GL_TEXTURE19_ARB, "GL_TEXTURE19_ARB");
#endif
#if defined(GL_TEXTURE20)
defconsti(env, "GL-TEXTURE20", (GLenum) GL_TEXTURE20, "GL_TEXTURE20");
#endif
#if defined(GL_TEXTURE20_ARB)
defconsti(env, "GL-TEXTURE20-ARB", (GLenum) GL_TEXTURE20_ARB, "GL_TEXTURE20_ARB");
#endif
#if defined(GL_TEXTURE21)
defconsti(env, "GL-TEXTURE21", (GLenum) GL_TEXTURE21, "GL_TEXTURE21");
#endif
#if defined(GL_TEXTURE21_ARB)
defconsti(env, "GL-TEXTURE21-ARB", (GLenum) GL_TEXTURE21_ARB, "GL_TEXTURE21_ARB");
#endif
#if defined(GL_TEXTURE22)
defconsti(env, "GL-TEXTURE22", (GLenum) GL_TEXTURE22, "GL_TEXTURE22");
#endif
#if defined(GL_TEXTURE22_ARB)
defconsti(env, "GL-TEXTURE22-ARB", (GLenum) GL_TEXTURE22_ARB, "GL_TEXTURE22_ARB");
#endif
#if defined(GL_TEXTURE23)
defconsti(env, "GL-TEXTURE23", (GLenum) GL_TEXTURE23, "GL_TEXTURE23");
#endif
#if defined(GL_TEXTURE23_ARB)
defconsti(env, "GL-TEXTURE23-ARB", (GLenum) GL_TEXTURE23_ARB, "GL_TEXTURE23_ARB");
#endif
#if defined(GL_TEXTURE24)
defconsti(env, "GL-TEXTURE24", (GLenum) GL_TEXTURE24, "GL_TEXTURE24");
#endif
#if defined(GL_TEXTURE24_ARB)
defconsti(env, "GL-TEXTURE24-ARB", (GLenum) GL_TEXTURE24_ARB, "GL_TEXTURE24_ARB");
#endif
#if defined(GL_TEXTURE25)
defconsti(env, "GL-TEXTURE25", (GLenum) GL_TEXTURE25, "GL_TEXTURE25");
#endif
#if defined(GL_TEXTURE25_ARB)
defconsti(env, "GL-TEXTURE25-ARB", (GLenum) GL_TEXTURE25_ARB, "GL_TEXTURE25_ARB");
#endif
#if defined(GL_TEXTURE26)
defconsti(env, "GL-TEXTURE26", (GLenum) GL_TEXTURE26, "GL_TEXTURE26");
#endif
#if defined(GL_TEXTURE26_ARB)
defconsti(env, "GL-TEXTURE26-ARB", (GLenum) GL_TEXTURE26_ARB, "GL_TEXTURE26_ARB");
#endif
#if defined(GL_TEXTURE27)
defconsti(env, "GL-TEXTURE27", (GLenum) GL_TEXTURE27, "GL_TEXTURE27");
#endif
#if defined(GL_TEXTURE27_ARB)
defconsti(env, "GL-TEXTURE27-ARB", (GLenum) GL_TEXTURE27_ARB, "GL_TEXTURE27_ARB");
#endif
#if defined(GL_TEXTURE28)
defconsti(env, "GL-TEXTURE28", (GLenum) GL_TEXTURE28, "GL_TEXTURE28");
#endif
#if defined(GL_TEXTURE28_ARB)
defconsti(env, "GL-TEXTURE28-ARB", (GLenum) GL_TEXTURE28_ARB, "GL_TEXTURE28_ARB");
#endif
#if defined(GL_TEXTURE29)
defconsti(env, "GL-TEXTURE29", (GLenum) GL_TEXTURE29, "GL_TEXTURE29");
#endif
#if defined(GL_TEXTURE29_ARB)
defconsti(env, "GL-TEXTURE29-ARB", (GLenum) GL_TEXTURE29_ARB, "GL_TEXTURE29_ARB");
#endif
#if defined(GL_TEXTURE30)
defconsti(env, "GL-TEXTURE30", (GLenum) GL_TEXTURE30, "GL_TEXTURE30");
#endif
#if defined(GL_TEXTURE30_ARB)
defconsti(env, "GL-TEXTURE30-ARB", (GLenum) GL_TEXTURE30_ARB, "GL_TEXTURE30_ARB");
#endif
#if defined(GL_TEXTURE31)
defconsti(env, "GL-TEXTURE31", (GLenum) GL_TEXTURE31, "GL_TEXTURE31");
#endif
#if defined(GL_TEXTURE31_ARB)
defconsti(env, "GL-TEXTURE31-ARB", (GLenum) GL_TEXTURE31_ARB, "GL_TEXTURE31_ARB");
#endif
#if defined(GL_ACTIVE_TEXTURE)
defconsti(env, "GL-ACTIVE-TEXTURE", (GLenum) GL_ACTIVE_TEXTURE, "GL_ACTIVE_TEXTURE");
#endif
#if defined(GL_ACTIVE_TEXTURE_ARB)
defconsti(env, "GL-ACTIVE-TEXTURE-ARB", (GLenum) GL_ACTIVE_TEXTURE_ARB, "GL_ACTIVE_TEXTURE_ARB");
#endif
#if defined(GL_CLIENT_ACTIVE_TEXTURE)
defconsti(env, "GL-CLIENT-ACTIVE-TEXTURE", (GLenum) GL_CLIENT_ACTIVE_TEXTURE, "GL_CLIENT_ACTIVE_TEXTURE");
#endif
#if defined(GL_CLIENT_ACTIVE_TEXTURE_ARB)
defconsti(env, "GL-CLIENT-ACTIVE-TEXTURE-ARB", (GLenum) GL_CLIENT_ACTIVE_TEXTURE_ARB, "GL_CLIENT_ACTIVE_TEXTURE_ARB");
#endif
#if defined(GL_MAX_TEXTURE_UNITS)
defconsti(env, "GL-MAX-TEXTURE-UNITS", (GLenum) GL_MAX_TEXTURE_UNITS, "GL_MAX_TEXTURE_UNITS");
#endif
#if defined(GL_MAX_TEXTURE_UNITS_ARB)
defconsti(env, "GL-MAX-TEXTURE-UNITS-ARB", (GLenum) GL_MAX_TEXTURE_UNITS_ARB, "GL_MAX_TEXTURE_UNITS_ARB");
#endif
#if defined(GL_TRANSPOSE_MODELVIEW_MATRIX)
defconsti(env, "GL-TRANSPOSE-MODELVIEW-MATRIX", (GLenum) GL_TRANSPOSE_MODELVIEW_MATRIX, "GL_TRANSPOSE_MODELVIEW_MATRIX");
#endif
#if defined(GL_TRANSPOSE_MODELVIEW_MATRIX_ARB)
defconsti(env, "GL-TRANSPOSE-MODELVIEW-MATRIX-ARB", (GLenum) GL_TRANSPOSE_MODELVIEW_MATRIX_ARB, "GL_TRANSPOSE_MODELVIEW_MATRIX_ARB");
#endif
#if defined(GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV)
defconsti(env, "GL-PATH-TRANSPOSE-MODELVIEW-MATRIX-NV", (GLenum) GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV, "GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV");
#endif
#if defined(GL_TRANSPOSE_PROJECTION_MATRIX)
defconsti(env, "GL-TRANSPOSE-PROJECTION-MATRIX", (GLenum) GL_TRANSPOSE_PROJECTION_MATRIX, "GL_TRANSPOSE_PROJECTION_MATRIX");
#endif
#if defined(GL_TRANSPOSE_PROJECTION_MATRIX_ARB)
defconsti(env, "GL-TRANSPOSE-PROJECTION-MATRIX-ARB", (GLenum) GL_TRANSPOSE_PROJECTION_MATRIX_ARB, "GL_TRANSPOSE_PROJECTION_MATRIX_ARB");
#endif
#if defined(GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV)
defconsti(env, "GL-PATH-TRANSPOSE-PROJECTION-MATRIX-NV", (GLenum) GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV, "GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV");
#endif
#if defined(GL_TRANSPOSE_TEXTURE_MATRIX)
defconsti(env, "GL-TRANSPOSE-TEXTURE-MATRIX", (GLenum) GL_TRANSPOSE_TEXTURE_MATRIX, "GL_TRANSPOSE_TEXTURE_MATRIX");
#endif
#if defined(GL_TRANSPOSE_TEXTURE_MATRIX_ARB)
defconsti(env, "GL-TRANSPOSE-TEXTURE-MATRIX-ARB", (GLenum) GL_TRANSPOSE_TEXTURE_MATRIX_ARB, "GL_TRANSPOSE_TEXTURE_MATRIX_ARB");
#endif
#if defined(GL_TRANSPOSE_COLOR_MATRIX)
defconsti(env, "GL-TRANSPOSE-COLOR-MATRIX", (GLenum) GL_TRANSPOSE_COLOR_MATRIX, "GL_TRANSPOSE_COLOR_MATRIX");
#endif
#if defined(GL_TRANSPOSE_COLOR_MATRIX_ARB)
defconsti(env, "GL-TRANSPOSE-COLOR-MATRIX-ARB", (GLenum) GL_TRANSPOSE_COLOR_MATRIX_ARB, "GL_TRANSPOSE_COLOR_MATRIX_ARB");
#endif
#if defined(GL_SUBTRACT)
defconsti(env, "GL-SUBTRACT", (GLenum) GL_SUBTRACT, "GL_SUBTRACT");
#endif
#if defined(GL_SUBTRACT_ARB)
defconsti(env, "GL-SUBTRACT-ARB", (GLenum) GL_SUBTRACT_ARB, "GL_SUBTRACT_ARB");
#endif
#if defined(GL_MAX_RENDERBUFFER_SIZE)
defconsti(env, "GL-MAX-RENDERBUFFER-SIZE", (GLenum) GL_MAX_RENDERBUFFER_SIZE, "GL_MAX_RENDERBUFFER_SIZE");
#endif
#if defined(GL_MAX_RENDERBUFFER_SIZE_EXT)
defconsti(env, "GL-MAX-RENDERBUFFER-SIZE-EXT", (GLenum) GL_MAX_RENDERBUFFER_SIZE_EXT, "GL_MAX_RENDERBUFFER_SIZE_EXT");
#endif
#if defined(GL_MAX_RENDERBUFFER_SIZE_OES)
defconsti(env, "GL-MAX-RENDERBUFFER-SIZE-OES", (GLenum) GL_MAX_RENDERBUFFER_SIZE_OES, "GL_MAX_RENDERBUFFER_SIZE_OES");
#endif
#if defined(GL_COMPRESSED_ALPHA)
defconsti(env, "GL-COMPRESSED-ALPHA", (GLenum) GL_COMPRESSED_ALPHA, "GL_COMPRESSED_ALPHA");
#endif
#if defined(GL_COMPRESSED_ALPHA_ARB)
defconsti(env, "GL-COMPRESSED-ALPHA-ARB", (GLenum) GL_COMPRESSED_ALPHA_ARB, "GL_COMPRESSED_ALPHA_ARB");
#endif
#if defined(GL_COMPRESSED_LUMINANCE)
defconsti(env, "GL-COMPRESSED-LUMINANCE", (GLenum) GL_COMPRESSED_LUMINANCE, "GL_COMPRESSED_LUMINANCE");
#endif
#if defined(GL_COMPRESSED_LUMINANCE_ARB)
defconsti(env, "GL-COMPRESSED-LUMINANCE-ARB", (GLenum) GL_COMPRESSED_LUMINANCE_ARB, "GL_COMPRESSED_LUMINANCE_ARB");
#endif
#if defined(GL_COMPRESSED_LUMINANCE_ALPHA)
defconsti(env, "GL-COMPRESSED-LUMINANCE-ALPHA", (GLenum) GL_COMPRESSED_LUMINANCE_ALPHA, "GL_COMPRESSED_LUMINANCE_ALPHA");
#endif
#if defined(GL_COMPRESSED_LUMINANCE_ALPHA_ARB)
defconsti(env, "GL-COMPRESSED-LUMINANCE-ALPHA-ARB", (GLenum) GL_COMPRESSED_LUMINANCE_ALPHA_ARB, "GL_COMPRESSED_LUMINANCE_ALPHA_ARB");
#endif
#if defined(GL_COMPRESSED_INTENSITY)
defconsti(env, "GL-COMPRESSED-INTENSITY", (GLenum) GL_COMPRESSED_INTENSITY, "GL_COMPRESSED_INTENSITY");
#endif
#if defined(GL_COMPRESSED_INTENSITY_ARB)
defconsti(env, "GL-COMPRESSED-INTENSITY-ARB", (GLenum) GL_COMPRESSED_INTENSITY_ARB, "GL_COMPRESSED_INTENSITY_ARB");
#endif
#if defined(GL_COMPRESSED_RGB)
defconsti(env, "GL-COMPRESSED-RGB", (GLenum) GL_COMPRESSED_RGB, "GL_COMPRESSED_RGB");
#endif
#if defined(GL_COMPRESSED_RGB_ARB)
defconsti(env, "GL-COMPRESSED-RGB-ARB", (GLenum) GL_COMPRESSED_RGB_ARB, "GL_COMPRESSED_RGB_ARB");
#endif
#if defined(GL_COMPRESSED_RGBA)
defconsti(env, "GL-COMPRESSED-RGBA", (GLenum) GL_COMPRESSED_RGBA, "GL_COMPRESSED_RGBA");
#endif
#if defined(GL_COMPRESSED_RGBA_ARB)
defconsti(env, "GL-COMPRESSED-RGBA-ARB", (GLenum) GL_COMPRESSED_RGBA_ARB, "GL_COMPRESSED_RGBA_ARB");
#endif
#if defined(GL_TEXTURE_COMPRESSION_HINT)
defconsti(env, "GL-TEXTURE-COMPRESSION-HINT", (GLenum) GL_TEXTURE_COMPRESSION_HINT, "GL_TEXTURE_COMPRESSION_HINT");
#endif
#if defined(GL_TEXTURE_COMPRESSION_HINT_ARB)
defconsti(env, "GL-TEXTURE-COMPRESSION-HINT-ARB", (GLenum) GL_TEXTURE_COMPRESSION_HINT_ARB, "GL_TEXTURE_COMPRESSION_HINT_ARB");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-TESS-CONTROL-SHADER", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER, "GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-TESS-EVALUATION-SHADER", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER, "GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER");
#endif
#if defined(GL_ALL_COMPLETED_NV)
defconsti(env, "GL-ALL-COMPLETED-NV", (GLenum) GL_ALL_COMPLETED_NV, "GL_ALL_COMPLETED_NV");
#endif
#if defined(GL_FENCE_STATUS_NV)
defconsti(env, "GL-FENCE-STATUS-NV", (GLenum) GL_FENCE_STATUS_NV, "GL_FENCE_STATUS_NV");
#endif
#if defined(GL_FENCE_CONDITION_NV)
defconsti(env, "GL-FENCE-CONDITION-NV", (GLenum) GL_FENCE_CONDITION_NV, "GL_FENCE_CONDITION_NV");
#endif
#if defined(GL_TEXTURE_RECTANGLE)
defconsti(env, "GL-TEXTURE-RECTANGLE", (GLenum) GL_TEXTURE_RECTANGLE, "GL_TEXTURE_RECTANGLE");
#endif
#if defined(GL_TEXTURE_RECTANGLE_ARB)
defconsti(env, "GL-TEXTURE-RECTANGLE-ARB", (GLenum) GL_TEXTURE_RECTANGLE_ARB, "GL_TEXTURE_RECTANGLE_ARB");
#endif
#if defined(GL_TEXTURE_RECTANGLE_NV)
defconsti(env, "GL-TEXTURE-RECTANGLE-NV", (GLenum) GL_TEXTURE_RECTANGLE_NV, "GL_TEXTURE_RECTANGLE_NV");
#endif
#if defined(GL_TEXTURE_BINDING_RECTANGLE)
defconsti(env, "GL-TEXTURE-BINDING-RECTANGLE", (GLenum) GL_TEXTURE_BINDING_RECTANGLE, "GL_TEXTURE_BINDING_RECTANGLE");
#endif
#if defined(GL_TEXTURE_BINDING_RECTANGLE_ARB)
defconsti(env, "GL-TEXTURE-BINDING-RECTANGLE-ARB", (GLenum) GL_TEXTURE_BINDING_RECTANGLE_ARB, "GL_TEXTURE_BINDING_RECTANGLE_ARB");
#endif
#if defined(GL_TEXTURE_BINDING_RECTANGLE_NV)
defconsti(env, "GL-TEXTURE-BINDING-RECTANGLE-NV", (GLenum) GL_TEXTURE_BINDING_RECTANGLE_NV, "GL_TEXTURE_BINDING_RECTANGLE_NV");
#endif
#if defined(GL_PROXY_TEXTURE_RECTANGLE)
defconsti(env, "GL-PROXY-TEXTURE-RECTANGLE", (GLenum) GL_PROXY_TEXTURE_RECTANGLE, "GL_PROXY_TEXTURE_RECTANGLE");
#endif
#if defined(GL_PROXY_TEXTURE_RECTANGLE_ARB)
defconsti(env, "GL-PROXY-TEXTURE-RECTANGLE-ARB", (GLenum) GL_PROXY_TEXTURE_RECTANGLE_ARB, "GL_PROXY_TEXTURE_RECTANGLE_ARB");
#endif
#if defined(GL_PROXY_TEXTURE_RECTANGLE_NV)
defconsti(env, "GL-PROXY-TEXTURE-RECTANGLE-NV", (GLenum) GL_PROXY_TEXTURE_RECTANGLE_NV, "GL_PROXY_TEXTURE_RECTANGLE_NV");
#endif
#if defined(GL_MAX_RECTANGLE_TEXTURE_SIZE)
defconsti(env, "GL-MAX-RECTANGLE-TEXTURE-SIZE", (GLenum) GL_MAX_RECTANGLE_TEXTURE_SIZE, "GL_MAX_RECTANGLE_TEXTURE_SIZE");
#endif
#if defined(GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB)
defconsti(env, "GL-MAX-RECTANGLE-TEXTURE-SIZE-ARB", (GLenum) GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB, "GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB");
#endif
#if defined(GL_MAX_RECTANGLE_TEXTURE_SIZE_NV)
defconsti(env, "GL-MAX-RECTANGLE-TEXTURE-SIZE-NV", (GLenum) GL_MAX_RECTANGLE_TEXTURE_SIZE_NV, "GL_MAX_RECTANGLE_TEXTURE_SIZE_NV");
#endif
#if defined(GL_DEPTH_STENCIL)
defconsti(env, "GL-DEPTH-STENCIL", (GLenum) GL_DEPTH_STENCIL, "GL_DEPTH_STENCIL");
#endif
#if defined(GL_DEPTH_STENCIL_EXT)
defconsti(env, "GL-DEPTH-STENCIL-EXT", (GLenum) GL_DEPTH_STENCIL_EXT, "GL_DEPTH_STENCIL_EXT");
#endif
#if defined(GL_DEPTH_STENCIL_NV)
defconsti(env, "GL-DEPTH-STENCIL-NV", (GLenum) GL_DEPTH_STENCIL_NV, "GL_DEPTH_STENCIL_NV");
#endif
#if defined(GL_DEPTH_STENCIL_OES)
defconsti(env, "GL-DEPTH-STENCIL-OES", (GLenum) GL_DEPTH_STENCIL_OES, "GL_DEPTH_STENCIL_OES");
#endif
#if defined(GL_UNSIGNED_INT_24_8)
defconsti(env, "GL-UNSIGNED-INT-24-8", (GLenum) GL_UNSIGNED_INT_24_8, "GL_UNSIGNED_INT_24_8");
#endif
#if defined(GL_UNSIGNED_INT_24_8_EXT)
defconsti(env, "GL-UNSIGNED-INT-24-8-EXT", (GLenum) GL_UNSIGNED_INT_24_8_EXT, "GL_UNSIGNED_INT_24_8_EXT");
#endif
#if defined(GL_UNSIGNED_INT_24_8_NV)
defconsti(env, "GL-UNSIGNED-INT-24-8-NV", (GLenum) GL_UNSIGNED_INT_24_8_NV, "GL_UNSIGNED_INT_24_8_NV");
#endif
#if defined(GL_UNSIGNED_INT_24_8_OES)
defconsti(env, "GL-UNSIGNED-INT-24-8-OES", (GLenum) GL_UNSIGNED_INT_24_8_OES, "GL_UNSIGNED_INT_24_8_OES");
#endif
#if defined(GL_MAX_TEXTURE_LOD_BIAS)
defconsti(env, "GL-MAX-TEXTURE-LOD-BIAS", (GLenum) GL_MAX_TEXTURE_LOD_BIAS, "GL_MAX_TEXTURE_LOD_BIAS");
#endif
#if defined(GL_MAX_TEXTURE_LOD_BIAS_EXT)
defconsti(env, "GL-MAX-TEXTURE-LOD-BIAS-EXT", (GLenum) GL_MAX_TEXTURE_LOD_BIAS_EXT, "GL_MAX_TEXTURE_LOD_BIAS_EXT");
#endif
#if defined(GL_TEXTURE_MAX_ANISOTROPY)
defconsti(env, "GL-TEXTURE-MAX-ANISOTROPY", (GLenum) GL_TEXTURE_MAX_ANISOTROPY, "GL_TEXTURE_MAX_ANISOTROPY");
#endif
#if defined(GL_TEXTURE_MAX_ANISOTROPY_EXT)
defconsti(env, "GL-TEXTURE-MAX-ANISOTROPY-EXT", (GLenum) GL_TEXTURE_MAX_ANISOTROPY_EXT, "GL_TEXTURE_MAX_ANISOTROPY_EXT");
#endif
#if defined(GL_MAX_TEXTURE_MAX_ANISOTROPY)
defconsti(env, "GL-MAX-TEXTURE-MAX-ANISOTROPY", (GLenum) GL_MAX_TEXTURE_MAX_ANISOTROPY, "GL_MAX_TEXTURE_MAX_ANISOTROPY");
#endif
#if defined(GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT)
defconsti(env, "GL-MAX-TEXTURE-MAX-ANISOTROPY-EXT", (GLenum) GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT, "GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT");
#endif
#if defined(GL_TEXTURE_FILTER_CONTROL)
defconsti(env, "GL-TEXTURE-FILTER-CONTROL", (GLenum) GL_TEXTURE_FILTER_CONTROL, "GL_TEXTURE_FILTER_CONTROL");
#endif
#if defined(GL_TEXTURE_FILTER_CONTROL_EXT)
defconsti(env, "GL-TEXTURE-FILTER-CONTROL-EXT", (GLenum) GL_TEXTURE_FILTER_CONTROL_EXT, "GL_TEXTURE_FILTER_CONTROL_EXT");
#endif
#if defined(GL_TEXTURE_LOD_BIAS)
defconsti(env, "GL-TEXTURE-LOD-BIAS", (GLenum) GL_TEXTURE_LOD_BIAS, "GL_TEXTURE_LOD_BIAS");
#endif
#if defined(GL_TEXTURE_LOD_BIAS_EXT)
defconsti(env, "GL-TEXTURE-LOD-BIAS-EXT", (GLenum) GL_TEXTURE_LOD_BIAS_EXT, "GL_TEXTURE_LOD_BIAS_EXT");
#endif
#if defined(GL_MODELVIEW1_STACK_DEPTH_EXT)
defconsti(env, "GL-MODELVIEW1-STACK-DEPTH-EXT", (GLenum) GL_MODELVIEW1_STACK_DEPTH_EXT, "GL_MODELVIEW1_STACK_DEPTH_EXT");
#endif
#if defined(GL_COMBINE4_NV)
defconsti(env, "GL-COMBINE4-NV", (GLenum) GL_COMBINE4_NV, "GL_COMBINE4_NV");
#endif
#if defined(GL_MAX_SHININESS_NV)
defconsti(env, "GL-MAX-SHININESS-NV", (GLenum) GL_MAX_SHININESS_NV, "GL_MAX_SHININESS_NV");
#endif
#if defined(GL_MAX_SPOT_EXPONENT_NV)
defconsti(env, "GL-MAX-SPOT-EXPONENT-NV", (GLenum) GL_MAX_SPOT_EXPONENT_NV, "GL_MAX_SPOT_EXPONENT_NV");
#endif
#if defined(GL_MODELVIEW1_MATRIX_EXT)
defconsti(env, "GL-MODELVIEW1-MATRIX-EXT", (GLenum) GL_MODELVIEW1_MATRIX_EXT, "GL_MODELVIEW1_MATRIX_EXT");
#endif
#if defined(GL_INCR_WRAP)
defconsti(env, "GL-INCR-WRAP", (GLenum) GL_INCR_WRAP, "GL_INCR_WRAP");
#endif
#if defined(GL_INCR_WRAP_EXT)
defconsti(env, "GL-INCR-WRAP-EXT", (GLenum) GL_INCR_WRAP_EXT, "GL_INCR_WRAP_EXT");
#endif
#if defined(GL_INCR_WRAP_OES)
defconsti(env, "GL-INCR-WRAP-OES", (GLenum) GL_INCR_WRAP_OES, "GL_INCR_WRAP_OES");
#endif
#if defined(GL_DECR_WRAP)
defconsti(env, "GL-DECR-WRAP", (GLenum) GL_DECR_WRAP, "GL_DECR_WRAP");
#endif
#if defined(GL_DECR_WRAP_EXT)
defconsti(env, "GL-DECR-WRAP-EXT", (GLenum) GL_DECR_WRAP_EXT, "GL_DECR_WRAP_EXT");
#endif
#if defined(GL_DECR_WRAP_OES)
defconsti(env, "GL-DECR-WRAP-OES", (GLenum) GL_DECR_WRAP_OES, "GL_DECR_WRAP_OES");
#endif
#if defined(GL_VERTEX_WEIGHTING_EXT)
defconsti(env, "GL-VERTEX-WEIGHTING-EXT", (GLenum) GL_VERTEX_WEIGHTING_EXT, "GL_VERTEX_WEIGHTING_EXT");
#endif
#if defined(GL_MODELVIEW1_ARB)
defconsti(env, "GL-MODELVIEW1-ARB", (GLenum) GL_MODELVIEW1_ARB, "GL_MODELVIEW1_ARB");
#endif
#if defined(GL_MODELVIEW1_EXT)
defconsti(env, "GL-MODELVIEW1-EXT", (GLenum) GL_MODELVIEW1_EXT, "GL_MODELVIEW1_EXT");
#endif
#if defined(GL_CURRENT_VERTEX_WEIGHT_EXT)
defconsti(env, "GL-CURRENT-VERTEX-WEIGHT-EXT", (GLenum) GL_CURRENT_VERTEX_WEIGHT_EXT, "GL_CURRENT_VERTEX_WEIGHT_EXT");
#endif
#if defined(GL_VERTEX_WEIGHT_ARRAY_EXT)
defconsti(env, "GL-VERTEX-WEIGHT-ARRAY-EXT", (GLenum) GL_VERTEX_WEIGHT_ARRAY_EXT, "GL_VERTEX_WEIGHT_ARRAY_EXT");
#endif
#if defined(GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT)
defconsti(env, "GL-VERTEX-WEIGHT-ARRAY-SIZE-EXT", (GLenum) GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT, "GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT");
#endif
#if defined(GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT)
defconsti(env, "GL-VERTEX-WEIGHT-ARRAY-TYPE-EXT", (GLenum) GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT, "GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT");
#endif
#if defined(GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT)
defconsti(env, "GL-VERTEX-WEIGHT-ARRAY-STRIDE-EXT", (GLenum) GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT, "GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT");
#endif
#if defined(GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT)
defconsti(env, "GL-VERTEX-WEIGHT-ARRAY-POINTER-EXT", (GLenum) GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT, "GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT");
#endif
#if defined(GL_NORMAL_MAP)
defconsti(env, "GL-NORMAL-MAP", (GLenum) GL_NORMAL_MAP, "GL_NORMAL_MAP");
#endif
#if defined(GL_NORMAL_MAP_ARB)
defconsti(env, "GL-NORMAL-MAP-ARB", (GLenum) GL_NORMAL_MAP_ARB, "GL_NORMAL_MAP_ARB");
#endif
#if defined(GL_NORMAL_MAP_EXT)
defconsti(env, "GL-NORMAL-MAP-EXT", (GLenum) GL_NORMAL_MAP_EXT, "GL_NORMAL_MAP_EXT");
#endif
#if defined(GL_NORMAL_MAP_NV)
defconsti(env, "GL-NORMAL-MAP-NV", (GLenum) GL_NORMAL_MAP_NV, "GL_NORMAL_MAP_NV");
#endif
#if defined(GL_NORMAL_MAP_OES)
defconsti(env, "GL-NORMAL-MAP-OES", (GLenum) GL_NORMAL_MAP_OES, "GL_NORMAL_MAP_OES");
#endif
#if defined(GL_REFLECTION_MAP)
defconsti(env, "GL-REFLECTION-MAP", (GLenum) GL_REFLECTION_MAP, "GL_REFLECTION_MAP");
#endif
#if defined(GL_REFLECTION_MAP_ARB)
defconsti(env, "GL-REFLECTION-MAP-ARB", (GLenum) GL_REFLECTION_MAP_ARB, "GL_REFLECTION_MAP_ARB");
#endif
#if defined(GL_REFLECTION_MAP_EXT)
defconsti(env, "GL-REFLECTION-MAP-EXT", (GLenum) GL_REFLECTION_MAP_EXT, "GL_REFLECTION_MAP_EXT");
#endif
#if defined(GL_REFLECTION_MAP_NV)
defconsti(env, "GL-REFLECTION-MAP-NV", (GLenum) GL_REFLECTION_MAP_NV, "GL_REFLECTION_MAP_NV");
#endif
#if defined(GL_REFLECTION_MAP_OES)
defconsti(env, "GL-REFLECTION-MAP-OES", (GLenum) GL_REFLECTION_MAP_OES, "GL_REFLECTION_MAP_OES");
#endif
#if defined(GL_TEXTURE_CUBE_MAP)
defconsti(env, "GL-TEXTURE-CUBE-MAP", (GLenum) GL_TEXTURE_CUBE_MAP, "GL_TEXTURE_CUBE_MAP");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_ARB)
defconsti(env, "GL-TEXTURE-CUBE-MAP-ARB", (GLenum) GL_TEXTURE_CUBE_MAP_ARB, "GL_TEXTURE_CUBE_MAP_ARB");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_EXT)
defconsti(env, "GL-TEXTURE-CUBE-MAP-EXT", (GLenum) GL_TEXTURE_CUBE_MAP_EXT, "GL_TEXTURE_CUBE_MAP_EXT");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_OES)
defconsti(env, "GL-TEXTURE-CUBE-MAP-OES", (GLenum) GL_TEXTURE_CUBE_MAP_OES, "GL_TEXTURE_CUBE_MAP_OES");
#endif
#if defined(GL_TEXTURE_BINDING_CUBE_MAP)
defconsti(env, "GL-TEXTURE-BINDING-CUBE-MAP", (GLenum) GL_TEXTURE_BINDING_CUBE_MAP, "GL_TEXTURE_BINDING_CUBE_MAP");
#endif
#if defined(GL_TEXTURE_BINDING_CUBE_MAP_ARB)
defconsti(env, "GL-TEXTURE-BINDING-CUBE-MAP-ARB", (GLenum) GL_TEXTURE_BINDING_CUBE_MAP_ARB, "GL_TEXTURE_BINDING_CUBE_MAP_ARB");
#endif
#if defined(GL_TEXTURE_BINDING_CUBE_MAP_EXT)
defconsti(env, "GL-TEXTURE-BINDING-CUBE-MAP-EXT", (GLenum) GL_TEXTURE_BINDING_CUBE_MAP_EXT, "GL_TEXTURE_BINDING_CUBE_MAP_EXT");
#endif
#if defined(GL_TEXTURE_BINDING_CUBE_MAP_OES)
defconsti(env, "GL-TEXTURE-BINDING-CUBE-MAP-OES", (GLenum) GL_TEXTURE_BINDING_CUBE_MAP_OES, "GL_TEXTURE_BINDING_CUBE_MAP_OES");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_X)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-X", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_X, "GL_TEXTURE_CUBE_MAP_POSITIVE_X");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-X-ARB", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB, "GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-X-EXT", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT, "GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-X-OES", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES, "GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_X)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-X", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_X, "GL_TEXTURE_CUBE_MAP_NEGATIVE_X");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-X-ARB", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB, "GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-X-EXT", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT, "GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-X-OES", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES, "GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_Y)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-Y", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_Y, "GL_TEXTURE_CUBE_MAP_POSITIVE_Y");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-Y-ARB", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB, "GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-Y-EXT", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT, "GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-Y-OES", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES, "GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_Y)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-Y", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-Y-ARB", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-Y-EXT", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-Y-OES", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_Z)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-Z", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_Z, "GL_TEXTURE_CUBE_MAP_POSITIVE_Z");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-Z-ARB", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB, "GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-Z-EXT", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT, "GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-Z-OES", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES, "GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_Z)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-Z", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-Z-ARB", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-Z-EXT", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-Z-OES", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES");
#endif
#if defined(GL_PROXY_TEXTURE_CUBE_MAP)
defconsti(env, "GL-PROXY-TEXTURE-CUBE-MAP", (GLenum) GL_PROXY_TEXTURE_CUBE_MAP, "GL_PROXY_TEXTURE_CUBE_MAP");
#endif
#if defined(GL_PROXY_TEXTURE_CUBE_MAP_ARB)
defconsti(env, "GL-PROXY-TEXTURE-CUBE-MAP-ARB", (GLenum) GL_PROXY_TEXTURE_CUBE_MAP_ARB, "GL_PROXY_TEXTURE_CUBE_MAP_ARB");
#endif
#if defined(GL_PROXY_TEXTURE_CUBE_MAP_EXT)
defconsti(env, "GL-PROXY-TEXTURE-CUBE-MAP-EXT", (GLenum) GL_PROXY_TEXTURE_CUBE_MAP_EXT, "GL_PROXY_TEXTURE_CUBE_MAP_EXT");
#endif
#if defined(GL_MAX_CUBE_MAP_TEXTURE_SIZE)
defconsti(env, "GL-MAX-CUBE-MAP-TEXTURE-SIZE", (GLenum) GL_MAX_CUBE_MAP_TEXTURE_SIZE, "GL_MAX_CUBE_MAP_TEXTURE_SIZE");
#endif
#if defined(GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB)
defconsti(env, "GL-MAX-CUBE-MAP-TEXTURE-SIZE-ARB", (GLenum) GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB, "GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB");
#endif
#if defined(GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT)
defconsti(env, "GL-MAX-CUBE-MAP-TEXTURE-SIZE-EXT", (GLenum) GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT, "GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT");
#endif
#if defined(GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES)
defconsti(env, "GL-MAX-CUBE-MAP-TEXTURE-SIZE-OES", (GLenum) GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES, "GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES");
#endif
#if defined(GL_VERTEX_ARRAY_RANGE_APPLE)
defconsti(env, "GL-VERTEX-ARRAY-RANGE-APPLE", (GLenum) GL_VERTEX_ARRAY_RANGE_APPLE, "GL_VERTEX_ARRAY_RANGE_APPLE");
#endif
#if defined(GL_VERTEX_ARRAY_RANGE_NV)
defconsti(env, "GL-VERTEX-ARRAY-RANGE-NV", (GLenum) GL_VERTEX_ARRAY_RANGE_NV, "GL_VERTEX_ARRAY_RANGE_NV");
#endif
#if defined(GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE)
defconsti(env, "GL-VERTEX-ARRAY-RANGE-LENGTH-APPLE", (GLenum) GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE, "GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE");
#endif
#if defined(GL_VERTEX_ARRAY_RANGE_LENGTH_NV)
defconsti(env, "GL-VERTEX-ARRAY-RANGE-LENGTH-NV", (GLenum) GL_VERTEX_ARRAY_RANGE_LENGTH_NV, "GL_VERTEX_ARRAY_RANGE_LENGTH_NV");
#endif
#if defined(GL_VERTEX_ARRAY_RANGE_VALID_NV)
defconsti(env, "GL-VERTEX-ARRAY-RANGE-VALID-NV", (GLenum) GL_VERTEX_ARRAY_RANGE_VALID_NV, "GL_VERTEX_ARRAY_RANGE_VALID_NV");
#endif
#if defined(GL_VERTEX_ARRAY_STORAGE_HINT_APPLE)
defconsti(env, "GL-VERTEX-ARRAY-STORAGE-HINT-APPLE", (GLenum) GL_VERTEX_ARRAY_STORAGE_HINT_APPLE, "GL_VERTEX_ARRAY_STORAGE_HINT_APPLE");
#endif
#if defined(GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV)
defconsti(env, "GL-MAX-VERTEX-ARRAY-RANGE-ELEMENT-NV", (GLenum) GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV, "GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV");
#endif
#if defined(GL_VERTEX_ARRAY_RANGE_POINTER_APPLE)
defconsti(env, "GL-VERTEX-ARRAY-RANGE-POINTER-APPLE", (GLenum) GL_VERTEX_ARRAY_RANGE_POINTER_APPLE, "GL_VERTEX_ARRAY_RANGE_POINTER_APPLE");
#endif
#if defined(GL_VERTEX_ARRAY_RANGE_POINTER_NV)
defconsti(env, "GL-VERTEX-ARRAY-RANGE-POINTER-NV", (GLenum) GL_VERTEX_ARRAY_RANGE_POINTER_NV, "GL_VERTEX_ARRAY_RANGE_POINTER_NV");
#endif
#if defined(GL_REGISTER_COMBINERS_NV)
defconsti(env, "GL-REGISTER-COMBINERS-NV", (GLenum) GL_REGISTER_COMBINERS_NV, "GL_REGISTER_COMBINERS_NV");
#endif
#if defined(GL_VARIABLE_A_NV)
defconsti(env, "GL-VARIABLE-A-NV", (GLenum) GL_VARIABLE_A_NV, "GL_VARIABLE_A_NV");
#endif
#if defined(GL_VARIABLE_B_NV)
defconsti(env, "GL-VARIABLE-B-NV", (GLenum) GL_VARIABLE_B_NV, "GL_VARIABLE_B_NV");
#endif
#if defined(GL_VARIABLE_C_NV)
defconsti(env, "GL-VARIABLE-C-NV", (GLenum) GL_VARIABLE_C_NV, "GL_VARIABLE_C_NV");
#endif
#if defined(GL_VARIABLE_D_NV)
defconsti(env, "GL-VARIABLE-D-NV", (GLenum) GL_VARIABLE_D_NV, "GL_VARIABLE_D_NV");
#endif
#if defined(GL_VARIABLE_E_NV)
defconsti(env, "GL-VARIABLE-E-NV", (GLenum) GL_VARIABLE_E_NV, "GL_VARIABLE_E_NV");
#endif
#if defined(GL_VARIABLE_F_NV)
defconsti(env, "GL-VARIABLE-F-NV", (GLenum) GL_VARIABLE_F_NV, "GL_VARIABLE_F_NV");
#endif
#if defined(GL_VARIABLE_G_NV)
defconsti(env, "GL-VARIABLE-G-NV", (GLenum) GL_VARIABLE_G_NV, "GL_VARIABLE_G_NV");
#endif
#if defined(GL_CONSTANT_COLOR0_NV)
defconsti(env, "GL-CONSTANT-COLOR0-NV", (GLenum) GL_CONSTANT_COLOR0_NV, "GL_CONSTANT_COLOR0_NV");
#endif
#if defined(GL_CONSTANT_COLOR1_NV)
defconsti(env, "GL-CONSTANT-COLOR1-NV", (GLenum) GL_CONSTANT_COLOR1_NV, "GL_CONSTANT_COLOR1_NV");
#endif
#if defined(GL_PRIMARY_COLOR_NV)
defconsti(env, "GL-PRIMARY-COLOR-NV", (GLenum) GL_PRIMARY_COLOR_NV, "GL_PRIMARY_COLOR_NV");
#endif
#if defined(GL_SECONDARY_COLOR_NV)
defconsti(env, "GL-SECONDARY-COLOR-NV", (GLenum) GL_SECONDARY_COLOR_NV, "GL_SECONDARY_COLOR_NV");
#endif
#if defined(GL_SPARE0_NV)
defconsti(env, "GL-SPARE0-NV", (GLenum) GL_SPARE0_NV, "GL_SPARE0_NV");
#endif
#if defined(GL_SPARE1_NV)
defconsti(env, "GL-SPARE1-NV", (GLenum) GL_SPARE1_NV, "GL_SPARE1_NV");
#endif
#if defined(GL_DISCARD_NV)
defconsti(env, "GL-DISCARD-NV", (GLenum) GL_DISCARD_NV, "GL_DISCARD_NV");
#endif
#if defined(GL_E_TIMES_F_NV)
defconsti(env, "GL-E-TIMES-F-NV", (GLenum) GL_E_TIMES_F_NV, "GL_E_TIMES_F_NV");
#endif
#if defined(GL_SPARE0_PLUS_SECONDARY_COLOR_NV)
defconsti(env, "GL-SPARE0-PLUS-SECONDARY-COLOR-NV", (GLenum) GL_SPARE0_PLUS_SECONDARY_COLOR_NV, "GL_SPARE0_PLUS_SECONDARY_COLOR_NV");
#endif
#if defined(GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV)
defconsti(env, "GL-VERTEX-ARRAY-RANGE-WITHOUT-FLUSH-NV", (GLenum) GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV, "GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV");
#endif
#if defined(GL_MULTISAMPLE_FILTER_HINT_NV)
defconsti(env, "GL-MULTISAMPLE-FILTER-HINT-NV", (GLenum) GL_MULTISAMPLE_FILTER_HINT_NV, "GL_MULTISAMPLE_FILTER_HINT_NV");
#endif
#if defined(GL_PER_STAGE_CONSTANTS_NV)
defconsti(env, "GL-PER-STAGE-CONSTANTS-NV", (GLenum) GL_PER_STAGE_CONSTANTS_NV, "GL_PER_STAGE_CONSTANTS_NV");
#endif
#if defined(GL_UNSIGNED_IDENTITY_NV)
defconsti(env, "GL-UNSIGNED-IDENTITY-NV", (GLenum) GL_UNSIGNED_IDENTITY_NV, "GL_UNSIGNED_IDENTITY_NV");
#endif
#if defined(GL_UNSIGNED_INVERT_NV)
defconsti(env, "GL-UNSIGNED-INVERT-NV", (GLenum) GL_UNSIGNED_INVERT_NV, "GL_UNSIGNED_INVERT_NV");
#endif
#if defined(GL_EXPAND_NORMAL_NV)
defconsti(env, "GL-EXPAND-NORMAL-NV", (GLenum) GL_EXPAND_NORMAL_NV, "GL_EXPAND_NORMAL_NV");
#endif
#if defined(GL_EXPAND_NEGATE_NV)
defconsti(env, "GL-EXPAND-NEGATE-NV", (GLenum) GL_EXPAND_NEGATE_NV, "GL_EXPAND_NEGATE_NV");
#endif
#if defined(GL_HALF_BIAS_NORMAL_NV)
defconsti(env, "GL-HALF-BIAS-NORMAL-NV", (GLenum) GL_HALF_BIAS_NORMAL_NV, "GL_HALF_BIAS_NORMAL_NV");
#endif
#if defined(GL_HALF_BIAS_NEGATE_NV)
defconsti(env, "GL-HALF-BIAS-NEGATE-NV", (GLenum) GL_HALF_BIAS_NEGATE_NV, "GL_HALF_BIAS_NEGATE_NV");
#endif
#if defined(GL_SIGNED_IDENTITY_NV)
defconsti(env, "GL-SIGNED-IDENTITY-NV", (GLenum) GL_SIGNED_IDENTITY_NV, "GL_SIGNED_IDENTITY_NV");
#endif
#if defined(GL_SIGNED_NEGATE_NV)
defconsti(env, "GL-SIGNED-NEGATE-NV", (GLenum) GL_SIGNED_NEGATE_NV, "GL_SIGNED_NEGATE_NV");
#endif
#if defined(GL_SCALE_BY_TWO_NV)
defconsti(env, "GL-SCALE-BY-TWO-NV", (GLenum) GL_SCALE_BY_TWO_NV, "GL_SCALE_BY_TWO_NV");
#endif
#if defined(GL_SCALE_BY_FOUR_NV)
defconsti(env, "GL-SCALE-BY-FOUR-NV", (GLenum) GL_SCALE_BY_FOUR_NV, "GL_SCALE_BY_FOUR_NV");
#endif
#if defined(GL_SCALE_BY_ONE_HALF_NV)
defconsti(env, "GL-SCALE-BY-ONE-HALF-NV", (GLenum) GL_SCALE_BY_ONE_HALF_NV, "GL_SCALE_BY_ONE_HALF_NV");
#endif
#if defined(GL_BIAS_BY_NEGATIVE_ONE_HALF_NV)
defconsti(env, "GL-BIAS-BY-NEGATIVE-ONE-HALF-NV", (GLenum) GL_BIAS_BY_NEGATIVE_ONE_HALF_NV, "GL_BIAS_BY_NEGATIVE_ONE_HALF_NV");
#endif
#if defined(GL_COMBINER_INPUT_NV)
defconsti(env, "GL-COMBINER-INPUT-NV", (GLenum) GL_COMBINER_INPUT_NV, "GL_COMBINER_INPUT_NV");
#endif
#if defined(GL_COMBINER_MAPPING_NV)
defconsti(env, "GL-COMBINER-MAPPING-NV", (GLenum) GL_COMBINER_MAPPING_NV, "GL_COMBINER_MAPPING_NV");
#endif
#if defined(GL_COMBINER_COMPONENT_USAGE_NV)
defconsti(env, "GL-COMBINER-COMPONENT-USAGE-NV", (GLenum) GL_COMBINER_COMPONENT_USAGE_NV, "GL_COMBINER_COMPONENT_USAGE_NV");
#endif
#if defined(GL_COMBINER_AB_DOT_PRODUCT_NV)
defconsti(env, "GL-COMBINER-AB-DOT-PRODUCT-NV", (GLenum) GL_COMBINER_AB_DOT_PRODUCT_NV, "GL_COMBINER_AB_DOT_PRODUCT_NV");
#endif
#if defined(GL_COMBINER_CD_DOT_PRODUCT_NV)
defconsti(env, "GL-COMBINER-CD-DOT-PRODUCT-NV", (GLenum) GL_COMBINER_CD_DOT_PRODUCT_NV, "GL_COMBINER_CD_DOT_PRODUCT_NV");
#endif
#if defined(GL_COMBINER_MUX_SUM_NV)
defconsti(env, "GL-COMBINER-MUX-SUM-NV", (GLenum) GL_COMBINER_MUX_SUM_NV, "GL_COMBINER_MUX_SUM_NV");
#endif
#if defined(GL_COMBINER_SCALE_NV)
defconsti(env, "GL-COMBINER-SCALE-NV", (GLenum) GL_COMBINER_SCALE_NV, "GL_COMBINER_SCALE_NV");
#endif
#if defined(GL_COMBINER_BIAS_NV)
defconsti(env, "GL-COMBINER-BIAS-NV", (GLenum) GL_COMBINER_BIAS_NV, "GL_COMBINER_BIAS_NV");
#endif
#if defined(GL_COMBINER_AB_OUTPUT_NV)
defconsti(env, "GL-COMBINER-AB-OUTPUT-NV", (GLenum) GL_COMBINER_AB_OUTPUT_NV, "GL_COMBINER_AB_OUTPUT_NV");
#endif
#if defined(GL_COMBINER_CD_OUTPUT_NV)
defconsti(env, "GL-COMBINER-CD-OUTPUT-NV", (GLenum) GL_COMBINER_CD_OUTPUT_NV, "GL_COMBINER_CD_OUTPUT_NV");
#endif
#if defined(GL_COMBINER_SUM_OUTPUT_NV)
defconsti(env, "GL-COMBINER-SUM-OUTPUT-NV", (GLenum) GL_COMBINER_SUM_OUTPUT_NV, "GL_COMBINER_SUM_OUTPUT_NV");
#endif
#if defined(GL_MAX_GENERAL_COMBINERS_NV)
defconsti(env, "GL-MAX-GENERAL-COMBINERS-NV", (GLenum) GL_MAX_GENERAL_COMBINERS_NV, "GL_MAX_GENERAL_COMBINERS_NV");
#endif
#if defined(GL_NUM_GENERAL_COMBINERS_NV)
defconsti(env, "GL-NUM-GENERAL-COMBINERS-NV", (GLenum) GL_NUM_GENERAL_COMBINERS_NV, "GL_NUM_GENERAL_COMBINERS_NV");
#endif
#if defined(GL_COLOR_SUM_CLAMP_NV)
defconsti(env, "GL-COLOR-SUM-CLAMP-NV", (GLenum) GL_COLOR_SUM_CLAMP_NV, "GL_COLOR_SUM_CLAMP_NV");
#endif
#if defined(GL_COMBINER0_NV)
defconsti(env, "GL-COMBINER0-NV", (GLenum) GL_COMBINER0_NV, "GL_COMBINER0_NV");
#endif
#if defined(GL_COMBINER1_NV)
defconsti(env, "GL-COMBINER1-NV", (GLenum) GL_COMBINER1_NV, "GL_COMBINER1_NV");
#endif
#if defined(GL_COMBINER2_NV)
defconsti(env, "GL-COMBINER2-NV", (GLenum) GL_COMBINER2_NV, "GL_COMBINER2_NV");
#endif
#if defined(GL_COMBINER3_NV)
defconsti(env, "GL-COMBINER3-NV", (GLenum) GL_COMBINER3_NV, "GL_COMBINER3_NV");
#endif
#if defined(GL_COMBINER4_NV)
defconsti(env, "GL-COMBINER4-NV", (GLenum) GL_COMBINER4_NV, "GL_COMBINER4_NV");
#endif
#if defined(GL_COMBINER5_NV)
defconsti(env, "GL-COMBINER5-NV", (GLenum) GL_COMBINER5_NV, "GL_COMBINER5_NV");
#endif
#if defined(GL_COMBINER6_NV)
defconsti(env, "GL-COMBINER6-NV", (GLenum) GL_COMBINER6_NV, "GL_COMBINER6_NV");
#endif
#if defined(GL_COMBINER7_NV)
defconsti(env, "GL-COMBINER7-NV", (GLenum) GL_COMBINER7_NV, "GL_COMBINER7_NV");
#endif
#if defined(GL_PRIMITIVE_RESTART_NV)
defconsti(env, "GL-PRIMITIVE-RESTART-NV", (GLenum) GL_PRIMITIVE_RESTART_NV, "GL_PRIMITIVE_RESTART_NV");
#endif
#if defined(GL_PRIMITIVE_RESTART_INDEX_NV)
defconsti(env, "GL-PRIMITIVE-RESTART-INDEX-NV", (GLenum) GL_PRIMITIVE_RESTART_INDEX_NV, "GL_PRIMITIVE_RESTART_INDEX_NV");
#endif
#if defined(GL_FOG_DISTANCE_MODE_NV)
defconsti(env, "GL-FOG-DISTANCE-MODE-NV", (GLenum) GL_FOG_DISTANCE_MODE_NV, "GL_FOG_DISTANCE_MODE_NV");
#endif
#if defined(GL_EYE_RADIAL_NV)
defconsti(env, "GL-EYE-RADIAL-NV", (GLenum) GL_EYE_RADIAL_NV, "GL_EYE_RADIAL_NV");
#endif
#if defined(GL_EYE_PLANE_ABSOLUTE_NV)
defconsti(env, "GL-EYE-PLANE-ABSOLUTE-NV", (GLenum) GL_EYE_PLANE_ABSOLUTE_NV, "GL_EYE_PLANE_ABSOLUTE_NV");
#endif
#if defined(GL_EMBOSS_LIGHT_NV)
defconsti(env, "GL-EMBOSS-LIGHT-NV", (GLenum) GL_EMBOSS_LIGHT_NV, "GL_EMBOSS_LIGHT_NV");
#endif
#if defined(GL_EMBOSS_CONSTANT_NV)
defconsti(env, "GL-EMBOSS-CONSTANT-NV", (GLenum) GL_EMBOSS_CONSTANT_NV, "GL_EMBOSS_CONSTANT_NV");
#endif
#if defined(GL_EMBOSS_MAP_NV)
defconsti(env, "GL-EMBOSS-MAP-NV", (GLenum) GL_EMBOSS_MAP_NV, "GL_EMBOSS_MAP_NV");
#endif
#if defined(GL_RED_MIN_CLAMP_INGR)
defconsti(env, "GL-RED-MIN-CLAMP-INGR", (GLenum) GL_RED_MIN_CLAMP_INGR, "GL_RED_MIN_CLAMP_INGR");
#endif
#if defined(GL_GREEN_MIN_CLAMP_INGR)
defconsti(env, "GL-GREEN-MIN-CLAMP-INGR", (GLenum) GL_GREEN_MIN_CLAMP_INGR, "GL_GREEN_MIN_CLAMP_INGR");
#endif
#if defined(GL_BLUE_MIN_CLAMP_INGR)
defconsti(env, "GL-BLUE-MIN-CLAMP-INGR", (GLenum) GL_BLUE_MIN_CLAMP_INGR, "GL_BLUE_MIN_CLAMP_INGR");
#endif
#if defined(GL_ALPHA_MIN_CLAMP_INGR)
defconsti(env, "GL-ALPHA-MIN-CLAMP-INGR", (GLenum) GL_ALPHA_MIN_CLAMP_INGR, "GL_ALPHA_MIN_CLAMP_INGR");
#endif
#if defined(GL_RED_MAX_CLAMP_INGR)
defconsti(env, "GL-RED-MAX-CLAMP-INGR", (GLenum) GL_RED_MAX_CLAMP_INGR, "GL_RED_MAX_CLAMP_INGR");
#endif
#if defined(GL_GREEN_MAX_CLAMP_INGR)
defconsti(env, "GL-GREEN-MAX-CLAMP-INGR", (GLenum) GL_GREEN_MAX_CLAMP_INGR, "GL_GREEN_MAX_CLAMP_INGR");
#endif
#if defined(GL_BLUE_MAX_CLAMP_INGR)
defconsti(env, "GL-BLUE-MAX-CLAMP-INGR", (GLenum) GL_BLUE_MAX_CLAMP_INGR, "GL_BLUE_MAX_CLAMP_INGR");
#endif
#if defined(GL_ALPHA_MAX_CLAMP_INGR)
defconsti(env, "GL-ALPHA-MAX-CLAMP-INGR", (GLenum) GL_ALPHA_MAX_CLAMP_INGR, "GL_ALPHA_MAX_CLAMP_INGR");
#endif
#if defined(GL_INTERLACE_READ_INGR)
defconsti(env, "GL-INTERLACE-READ-INGR", (GLenum) GL_INTERLACE_READ_INGR, "GL_INTERLACE_READ_INGR");
#endif
#if defined(GL_COMBINE)
defconsti(env, "GL-COMBINE", (GLenum) GL_COMBINE, "GL_COMBINE");
#endif
#if defined(GL_COMBINE_ARB)
defconsti(env, "GL-COMBINE-ARB", (GLenum) GL_COMBINE_ARB, "GL_COMBINE_ARB");
#endif
#if defined(GL_COMBINE_EXT)
defconsti(env, "GL-COMBINE-EXT", (GLenum) GL_COMBINE_EXT, "GL_COMBINE_EXT");
#endif
#if defined(GL_COMBINE_RGB)
defconsti(env, "GL-COMBINE-RGB", (GLenum) GL_COMBINE_RGB, "GL_COMBINE_RGB");
#endif
#if defined(GL_COMBINE_RGB_ARB)
defconsti(env, "GL-COMBINE-RGB-ARB", (GLenum) GL_COMBINE_RGB_ARB, "GL_COMBINE_RGB_ARB");
#endif
#if defined(GL_COMBINE_RGB_EXT)
defconsti(env, "GL-COMBINE-RGB-EXT", (GLenum) GL_COMBINE_RGB_EXT, "GL_COMBINE_RGB_EXT");
#endif
#if defined(GL_COMBINE_ALPHA)
defconsti(env, "GL-COMBINE-ALPHA", (GLenum) GL_COMBINE_ALPHA, "GL_COMBINE_ALPHA");
#endif
#if defined(GL_COMBINE_ALPHA_ARB)
defconsti(env, "GL-COMBINE-ALPHA-ARB", (GLenum) GL_COMBINE_ALPHA_ARB, "GL_COMBINE_ALPHA_ARB");
#endif
#if defined(GL_COMBINE_ALPHA_EXT)
defconsti(env, "GL-COMBINE-ALPHA-EXT", (GLenum) GL_COMBINE_ALPHA_EXT, "GL_COMBINE_ALPHA_EXT");
#endif
#if defined(GL_RGB_SCALE)
defconsti(env, "GL-RGB-SCALE", (GLenum) GL_RGB_SCALE, "GL_RGB_SCALE");
#endif
#if defined(GL_RGB_SCALE_ARB)
defconsti(env, "GL-RGB-SCALE-ARB", (GLenum) GL_RGB_SCALE_ARB, "GL_RGB_SCALE_ARB");
#endif
#if defined(GL_RGB_SCALE_EXT)
defconsti(env, "GL-RGB-SCALE-EXT", (GLenum) GL_RGB_SCALE_EXT, "GL_RGB_SCALE_EXT");
#endif
#if defined(GL_ADD_SIGNED)
defconsti(env, "GL-ADD-SIGNED", (GLenum) GL_ADD_SIGNED, "GL_ADD_SIGNED");
#endif
#if defined(GL_ADD_SIGNED_ARB)
defconsti(env, "GL-ADD-SIGNED-ARB", (GLenum) GL_ADD_SIGNED_ARB, "GL_ADD_SIGNED_ARB");
#endif
#if defined(GL_ADD_SIGNED_EXT)
defconsti(env, "GL-ADD-SIGNED-EXT", (GLenum) GL_ADD_SIGNED_EXT, "GL_ADD_SIGNED_EXT");
#endif
#if defined(GL_INTERPOLATE)
defconsti(env, "GL-INTERPOLATE", (GLenum) GL_INTERPOLATE, "GL_INTERPOLATE");
#endif
#if defined(GL_INTERPOLATE_ARB)
defconsti(env, "GL-INTERPOLATE-ARB", (GLenum) GL_INTERPOLATE_ARB, "GL_INTERPOLATE_ARB");
#endif
#if defined(GL_INTERPOLATE_EXT)
defconsti(env, "GL-INTERPOLATE-EXT", (GLenum) GL_INTERPOLATE_EXT, "GL_INTERPOLATE_EXT");
#endif
#if defined(GL_CONSTANT)
defconsti(env, "GL-CONSTANT", (GLenum) GL_CONSTANT, "GL_CONSTANT");
#endif
#if defined(GL_CONSTANT_ARB)
defconsti(env, "GL-CONSTANT-ARB", (GLenum) GL_CONSTANT_ARB, "GL_CONSTANT_ARB");
#endif
#if defined(GL_CONSTANT_EXT)
defconsti(env, "GL-CONSTANT-EXT", (GLenum) GL_CONSTANT_EXT, "GL_CONSTANT_EXT");
#endif
#if defined(GL_CONSTANT_NV)
defconsti(env, "GL-CONSTANT-NV", (GLenum) GL_CONSTANT_NV, "GL_CONSTANT_NV");
#endif
#if defined(GL_PRIMARY_COLOR)
defconsti(env, "GL-PRIMARY-COLOR", (GLenum) GL_PRIMARY_COLOR, "GL_PRIMARY_COLOR");
#endif
#if defined(GL_PRIMARY_COLOR_ARB)
defconsti(env, "GL-PRIMARY-COLOR-ARB", (GLenum) GL_PRIMARY_COLOR_ARB, "GL_PRIMARY_COLOR_ARB");
#endif
#if defined(GL_PRIMARY_COLOR_EXT)
defconsti(env, "GL-PRIMARY-COLOR-EXT", (GLenum) GL_PRIMARY_COLOR_EXT, "GL_PRIMARY_COLOR_EXT");
#endif
#if defined(GL_PREVIOUS)
defconsti(env, "GL-PREVIOUS", (GLenum) GL_PREVIOUS, "GL_PREVIOUS");
#endif
#if defined(GL_PREVIOUS_ARB)
defconsti(env, "GL-PREVIOUS-ARB", (GLenum) GL_PREVIOUS_ARB, "GL_PREVIOUS_ARB");
#endif
#if defined(GL_PREVIOUS_EXT)
defconsti(env, "GL-PREVIOUS-EXT", (GLenum) GL_PREVIOUS_EXT, "GL_PREVIOUS_EXT");
#endif
#if defined(GL_SOURCE0_RGB)
defconsti(env, "GL-SOURCE0-RGB", (GLenum) GL_SOURCE0_RGB, "GL_SOURCE0_RGB");
#endif
#if defined(GL_SOURCE0_RGB_ARB)
defconsti(env, "GL-SOURCE0-RGB-ARB", (GLenum) GL_SOURCE0_RGB_ARB, "GL_SOURCE0_RGB_ARB");
#endif
#if defined(GL_SOURCE0_RGB_EXT)
defconsti(env, "GL-SOURCE0-RGB-EXT", (GLenum) GL_SOURCE0_RGB_EXT, "GL_SOURCE0_RGB_EXT");
#endif
#if defined(GL_SRC0_RGB)
defconsti(env, "GL-SRC0-RGB", (GLenum) GL_SRC0_RGB, "GL_SRC0_RGB");
#endif
#if defined(GL_SOURCE1_RGB)
defconsti(env, "GL-SOURCE1-RGB", (GLenum) GL_SOURCE1_RGB, "GL_SOURCE1_RGB");
#endif
#if defined(GL_SOURCE1_RGB_ARB)
defconsti(env, "GL-SOURCE1-RGB-ARB", (GLenum) GL_SOURCE1_RGB_ARB, "GL_SOURCE1_RGB_ARB");
#endif
#if defined(GL_SOURCE1_RGB_EXT)
defconsti(env, "GL-SOURCE1-RGB-EXT", (GLenum) GL_SOURCE1_RGB_EXT, "GL_SOURCE1_RGB_EXT");
#endif
#if defined(GL_SRC1_RGB)
defconsti(env, "GL-SRC1-RGB", (GLenum) GL_SRC1_RGB, "GL_SRC1_RGB");
#endif
#if defined(GL_SOURCE2_RGB)
defconsti(env, "GL-SOURCE2-RGB", (GLenum) GL_SOURCE2_RGB, "GL_SOURCE2_RGB");
#endif
#if defined(GL_SOURCE2_RGB_ARB)
defconsti(env, "GL-SOURCE2-RGB-ARB", (GLenum) GL_SOURCE2_RGB_ARB, "GL_SOURCE2_RGB_ARB");
#endif
#if defined(GL_SOURCE2_RGB_EXT)
defconsti(env, "GL-SOURCE2-RGB-EXT", (GLenum) GL_SOURCE2_RGB_EXT, "GL_SOURCE2_RGB_EXT");
#endif
#if defined(GL_SRC2_RGB)
defconsti(env, "GL-SRC2-RGB", (GLenum) GL_SRC2_RGB, "GL_SRC2_RGB");
#endif
#if defined(GL_SOURCE3_RGB_NV)
defconsti(env, "GL-SOURCE3-RGB-NV", (GLenum) GL_SOURCE3_RGB_NV, "GL_SOURCE3_RGB_NV");
#endif
#if defined(GL_SOURCE0_ALPHA)
defconsti(env, "GL-SOURCE0-ALPHA", (GLenum) GL_SOURCE0_ALPHA, "GL_SOURCE0_ALPHA");
#endif
#if defined(GL_SOURCE0_ALPHA_ARB)
defconsti(env, "GL-SOURCE0-ALPHA-ARB", (GLenum) GL_SOURCE0_ALPHA_ARB, "GL_SOURCE0_ALPHA_ARB");
#endif
#if defined(GL_SOURCE0_ALPHA_EXT)
defconsti(env, "GL-SOURCE0-ALPHA-EXT", (GLenum) GL_SOURCE0_ALPHA_EXT, "GL_SOURCE0_ALPHA_EXT");
#endif
#if defined(GL_SRC0_ALPHA)
defconsti(env, "GL-SRC0-ALPHA", (GLenum) GL_SRC0_ALPHA, "GL_SRC0_ALPHA");
#endif
#if defined(GL_SOURCE1_ALPHA)
defconsti(env, "GL-SOURCE1-ALPHA", (GLenum) GL_SOURCE1_ALPHA, "GL_SOURCE1_ALPHA");
#endif
#if defined(GL_SOURCE1_ALPHA_ARB)
defconsti(env, "GL-SOURCE1-ALPHA-ARB", (GLenum) GL_SOURCE1_ALPHA_ARB, "GL_SOURCE1_ALPHA_ARB");
#endif
#if defined(GL_SOURCE1_ALPHA_EXT)
defconsti(env, "GL-SOURCE1-ALPHA-EXT", (GLenum) GL_SOURCE1_ALPHA_EXT, "GL_SOURCE1_ALPHA_EXT");
#endif
#if defined(GL_SRC1_ALPHA)
defconsti(env, "GL-SRC1-ALPHA", (GLenum) GL_SRC1_ALPHA, "GL_SRC1_ALPHA");
#endif
#if defined(GL_SRC1_ALPHA_EXT)
defconsti(env, "GL-SRC1-ALPHA-EXT", (GLenum) GL_SRC1_ALPHA_EXT, "GL_SRC1_ALPHA_EXT");
#endif
#if defined(GL_SOURCE2_ALPHA)
defconsti(env, "GL-SOURCE2-ALPHA", (GLenum) GL_SOURCE2_ALPHA, "GL_SOURCE2_ALPHA");
#endif
#if defined(GL_SOURCE2_ALPHA_ARB)
defconsti(env, "GL-SOURCE2-ALPHA-ARB", (GLenum) GL_SOURCE2_ALPHA_ARB, "GL_SOURCE2_ALPHA_ARB");
#endif
#if defined(GL_SOURCE2_ALPHA_EXT)
defconsti(env, "GL-SOURCE2-ALPHA-EXT", (GLenum) GL_SOURCE2_ALPHA_EXT, "GL_SOURCE2_ALPHA_EXT");
#endif
#if defined(GL_SRC2_ALPHA)
defconsti(env, "GL-SRC2-ALPHA", (GLenum) GL_SRC2_ALPHA, "GL_SRC2_ALPHA");
#endif
#if defined(GL_SOURCE3_ALPHA_NV)
defconsti(env, "GL-SOURCE3-ALPHA-NV", (GLenum) GL_SOURCE3_ALPHA_NV, "GL_SOURCE3_ALPHA_NV");
#endif
#if defined(GL_OPERAND0_RGB)
defconsti(env, "GL-OPERAND0-RGB", (GLenum) GL_OPERAND0_RGB, "GL_OPERAND0_RGB");
#endif
#if defined(GL_OPERAND0_RGB_ARB)
defconsti(env, "GL-OPERAND0-RGB-ARB", (GLenum) GL_OPERAND0_RGB_ARB, "GL_OPERAND0_RGB_ARB");
#endif
#if defined(GL_OPERAND0_RGB_EXT)
defconsti(env, "GL-OPERAND0-RGB-EXT", (GLenum) GL_OPERAND0_RGB_EXT, "GL_OPERAND0_RGB_EXT");
#endif
#if defined(GL_OPERAND1_RGB)
defconsti(env, "GL-OPERAND1-RGB", (GLenum) GL_OPERAND1_RGB, "GL_OPERAND1_RGB");
#endif
#if defined(GL_OPERAND1_RGB_ARB)
defconsti(env, "GL-OPERAND1-RGB-ARB", (GLenum) GL_OPERAND1_RGB_ARB, "GL_OPERAND1_RGB_ARB");
#endif
#if defined(GL_OPERAND1_RGB_EXT)
defconsti(env, "GL-OPERAND1-RGB-EXT", (GLenum) GL_OPERAND1_RGB_EXT, "GL_OPERAND1_RGB_EXT");
#endif
#if defined(GL_OPERAND2_RGB)
defconsti(env, "GL-OPERAND2-RGB", (GLenum) GL_OPERAND2_RGB, "GL_OPERAND2_RGB");
#endif
#if defined(GL_OPERAND2_RGB_ARB)
defconsti(env, "GL-OPERAND2-RGB-ARB", (GLenum) GL_OPERAND2_RGB_ARB, "GL_OPERAND2_RGB_ARB");
#endif
#if defined(GL_OPERAND2_RGB_EXT)
defconsti(env, "GL-OPERAND2-RGB-EXT", (GLenum) GL_OPERAND2_RGB_EXT, "GL_OPERAND2_RGB_EXT");
#endif
#if defined(GL_OPERAND3_RGB_NV)
defconsti(env, "GL-OPERAND3-RGB-NV", (GLenum) GL_OPERAND3_RGB_NV, "GL_OPERAND3_RGB_NV");
#endif
#if defined(GL_OPERAND0_ALPHA)
defconsti(env, "GL-OPERAND0-ALPHA", (GLenum) GL_OPERAND0_ALPHA, "GL_OPERAND0_ALPHA");
#endif
#if defined(GL_OPERAND0_ALPHA_ARB)
defconsti(env, "GL-OPERAND0-ALPHA-ARB", (GLenum) GL_OPERAND0_ALPHA_ARB, "GL_OPERAND0_ALPHA_ARB");
#endif
#if defined(GL_OPERAND0_ALPHA_EXT)
defconsti(env, "GL-OPERAND0-ALPHA-EXT", (GLenum) GL_OPERAND0_ALPHA_EXT, "GL_OPERAND0_ALPHA_EXT");
#endif
#if defined(GL_OPERAND1_ALPHA)
defconsti(env, "GL-OPERAND1-ALPHA", (GLenum) GL_OPERAND1_ALPHA, "GL_OPERAND1_ALPHA");
#endif
#if defined(GL_OPERAND1_ALPHA_ARB)
defconsti(env, "GL-OPERAND1-ALPHA-ARB", (GLenum) GL_OPERAND1_ALPHA_ARB, "GL_OPERAND1_ALPHA_ARB");
#endif
#if defined(GL_OPERAND1_ALPHA_EXT)
defconsti(env, "GL-OPERAND1-ALPHA-EXT", (GLenum) GL_OPERAND1_ALPHA_EXT, "GL_OPERAND1_ALPHA_EXT");
#endif
#if defined(GL_OPERAND2_ALPHA)
defconsti(env, "GL-OPERAND2-ALPHA", (GLenum) GL_OPERAND2_ALPHA, "GL_OPERAND2_ALPHA");
#endif
#if defined(GL_OPERAND2_ALPHA_ARB)
defconsti(env, "GL-OPERAND2-ALPHA-ARB", (GLenum) GL_OPERAND2_ALPHA_ARB, "GL_OPERAND2_ALPHA_ARB");
#endif
#if defined(GL_OPERAND2_ALPHA_EXT)
defconsti(env, "GL-OPERAND2-ALPHA-EXT", (GLenum) GL_OPERAND2_ALPHA_EXT, "GL_OPERAND2_ALPHA_EXT");
#endif
#if defined(GL_OPERAND3_ALPHA_NV)
defconsti(env, "GL-OPERAND3-ALPHA-NV", (GLenum) GL_OPERAND3_ALPHA_NV, "GL_OPERAND3_ALPHA_NV");
#endif
#if defined(GL_PACK_SUBSAMPLE_RATE_SGIX)
defconsti(env, "GL-PACK-SUBSAMPLE-RATE-SGIX", (GLenum) GL_PACK_SUBSAMPLE_RATE_SGIX, "GL_PACK_SUBSAMPLE_RATE_SGIX");
#endif
#if defined(GL_UNPACK_SUBSAMPLE_RATE_SGIX)
defconsti(env, "GL-UNPACK-SUBSAMPLE-RATE-SGIX", (GLenum) GL_UNPACK_SUBSAMPLE_RATE_SGIX, "GL_UNPACK_SUBSAMPLE_RATE_SGIX");
#endif
#if defined(GL_PIXEL_SUBSAMPLE_4444_SGIX)
defconsti(env, "GL-PIXEL-SUBSAMPLE-4444-SGIX", (GLenum) GL_PIXEL_SUBSAMPLE_4444_SGIX, "GL_PIXEL_SUBSAMPLE_4444_SGIX");
#endif
#if defined(GL_PIXEL_SUBSAMPLE_2424_SGIX)
defconsti(env, "GL-PIXEL-SUBSAMPLE-2424-SGIX", (GLenum) GL_PIXEL_SUBSAMPLE_2424_SGIX, "GL_PIXEL_SUBSAMPLE_2424_SGIX");
#endif
#if defined(GL_PIXEL_SUBSAMPLE_4242_SGIX)
defconsti(env, "GL-PIXEL-SUBSAMPLE-4242-SGIX", (GLenum) GL_PIXEL_SUBSAMPLE_4242_SGIX, "GL_PIXEL_SUBSAMPLE_4242_SGIX");
#endif
#if defined(GL_PERTURB_EXT)
defconsti(env, "GL-PERTURB-EXT", (GLenum) GL_PERTURB_EXT, "GL_PERTURB_EXT");
#endif
#if defined(GL_TEXTURE_NORMAL_EXT)
defconsti(env, "GL-TEXTURE-NORMAL-EXT", (GLenum) GL_TEXTURE_NORMAL_EXT, "GL_TEXTURE_NORMAL_EXT");
#endif
#if defined(GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE)
defconsti(env, "GL-LIGHT-MODEL-SPECULAR-VECTOR-APPLE", (GLenum) GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE, "GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE");
#endif
#if defined(GL_TRANSFORM_HINT_APPLE)
defconsti(env, "GL-TRANSFORM-HINT-APPLE", (GLenum) GL_TRANSFORM_HINT_APPLE, "GL_TRANSFORM_HINT_APPLE");
#endif
#if defined(GL_UNPACK_CLIENT_STORAGE_APPLE)
defconsti(env, "GL-UNPACK-CLIENT-STORAGE-APPLE", (GLenum) GL_UNPACK_CLIENT_STORAGE_APPLE, "GL_UNPACK_CLIENT_STORAGE_APPLE");
#endif
#if defined(GL_BUFFER_OBJECT_APPLE)
defconsti(env, "GL-BUFFER-OBJECT-APPLE", (GLenum) GL_BUFFER_OBJECT_APPLE, "GL_BUFFER_OBJECT_APPLE");
#endif
#if defined(GL_STORAGE_CLIENT_APPLE)
defconsti(env, "GL-STORAGE-CLIENT-APPLE", (GLenum) GL_STORAGE_CLIENT_APPLE, "GL_STORAGE_CLIENT_APPLE");
#endif
#if defined(GL_VERTEX_ARRAY_BINDING)
defconsti(env, "GL-VERTEX-ARRAY-BINDING", (GLenum) GL_VERTEX_ARRAY_BINDING, "GL_VERTEX_ARRAY_BINDING");
#endif
#if defined(GL_VERTEX_ARRAY_BINDING_APPLE)
defconsti(env, "GL-VERTEX-ARRAY-BINDING-APPLE", (GLenum) GL_VERTEX_ARRAY_BINDING_APPLE, "GL_VERTEX_ARRAY_BINDING_APPLE");
#endif
#if defined(GL_VERTEX_ARRAY_BINDING_OES)
defconsti(env, "GL-VERTEX-ARRAY-BINDING-OES", (GLenum) GL_VERTEX_ARRAY_BINDING_OES, "GL_VERTEX_ARRAY_BINDING_OES");
#endif
#if defined(GL_TEXTURE_RANGE_LENGTH_APPLE)
defconsti(env, "GL-TEXTURE-RANGE-LENGTH-APPLE", (GLenum) GL_TEXTURE_RANGE_LENGTH_APPLE, "GL_TEXTURE_RANGE_LENGTH_APPLE");
#endif
#if defined(GL_TEXTURE_RANGE_POINTER_APPLE)
defconsti(env, "GL-TEXTURE-RANGE-POINTER-APPLE", (GLenum) GL_TEXTURE_RANGE_POINTER_APPLE, "GL_TEXTURE_RANGE_POINTER_APPLE");
#endif
#if defined(GL_YCBCR_422_APPLE)
defconsti(env, "GL-YCBCR-422-APPLE", (GLenum) GL_YCBCR_422_APPLE, "GL_YCBCR_422_APPLE");
#endif
#if defined(GL_UNSIGNED_SHORT_8_8_APPLE)
defconsti(env, "GL-UNSIGNED-SHORT-8-8-APPLE", (GLenum) GL_UNSIGNED_SHORT_8_8_APPLE, "GL_UNSIGNED_SHORT_8_8_APPLE");
#endif
#if defined(GL_UNSIGNED_SHORT_8_8_MESA)
defconsti(env, "GL-UNSIGNED-SHORT-8-8-MESA", (GLenum) GL_UNSIGNED_SHORT_8_8_MESA, "GL_UNSIGNED_SHORT_8_8_MESA");
#endif
#if defined(GL_UNSIGNED_SHORT_8_8_REV_APPLE)
defconsti(env, "GL-UNSIGNED-SHORT-8-8-REV-APPLE", (GLenum) GL_UNSIGNED_SHORT_8_8_REV_APPLE, "GL_UNSIGNED_SHORT_8_8_REV_APPLE");
#endif
#if defined(GL_UNSIGNED_SHORT_8_8_REV_MESA)
defconsti(env, "GL-UNSIGNED-SHORT-8-8-REV-MESA", (GLenum) GL_UNSIGNED_SHORT_8_8_REV_MESA, "GL_UNSIGNED_SHORT_8_8_REV_MESA");
#endif
#if defined(GL_TEXTURE_STORAGE_HINT_APPLE)
defconsti(env, "GL-TEXTURE-STORAGE-HINT-APPLE", (GLenum) GL_TEXTURE_STORAGE_HINT_APPLE, "GL_TEXTURE_STORAGE_HINT_APPLE");
#endif
#if defined(GL_STORAGE_PRIVATE_APPLE)
defconsti(env, "GL-STORAGE-PRIVATE-APPLE", (GLenum) GL_STORAGE_PRIVATE_APPLE, "GL_STORAGE_PRIVATE_APPLE");
#endif
#if defined(GL_STORAGE_CACHED_APPLE)
defconsti(env, "GL-STORAGE-CACHED-APPLE", (GLenum) GL_STORAGE_CACHED_APPLE, "GL_STORAGE_CACHED_APPLE");
#endif
#if defined(GL_STORAGE_SHARED_APPLE)
defconsti(env, "GL-STORAGE-SHARED-APPLE", (GLenum) GL_STORAGE_SHARED_APPLE, "GL_STORAGE_SHARED_APPLE");
#endif
#if defined(GL_REPLACEMENT_CODE_ARRAY_SUN)
defconsti(env, "GL-REPLACEMENT-CODE-ARRAY-SUN", (GLenum) GL_REPLACEMENT_CODE_ARRAY_SUN, "GL_REPLACEMENT_CODE_ARRAY_SUN");
#endif
#if defined(GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN)
defconsti(env, "GL-REPLACEMENT-CODE-ARRAY-TYPE-SUN", (GLenum) GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN, "GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN");
#endif
#if defined(GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN)
defconsti(env, "GL-REPLACEMENT-CODE-ARRAY-STRIDE-SUN", (GLenum) GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN, "GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN");
#endif
#if defined(GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN)
defconsti(env, "GL-REPLACEMENT-CODE-ARRAY-POINTER-SUN", (GLenum) GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN, "GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN");
#endif
#if defined(GL_R1UI_V3F_SUN)
defconsti(env, "GL-R1UI-V3F-SUN", (GLenum) GL_R1UI_V3F_SUN, "GL_R1UI_V3F_SUN");
#endif
#if defined(GL_R1UI_C4UB_V3F_SUN)
defconsti(env, "GL-R1UI-C4UB-V3F-SUN", (GLenum) GL_R1UI_C4UB_V3F_SUN, "GL_R1UI_C4UB_V3F_SUN");
#endif
#if defined(GL_R1UI_C3F_V3F_SUN)
defconsti(env, "GL-R1UI-C3F-V3F-SUN", (GLenum) GL_R1UI_C3F_V3F_SUN, "GL_R1UI_C3F_V3F_SUN");
#endif
#if defined(GL_R1UI_N3F_V3F_SUN)
defconsti(env, "GL-R1UI-N3F-V3F-SUN", (GLenum) GL_R1UI_N3F_V3F_SUN, "GL_R1UI_N3F_V3F_SUN");
#endif
#if defined(GL_R1UI_C4F_N3F_V3F_SUN)
defconsti(env, "GL-R1UI-C4F-N3F-V3F-SUN", (GLenum) GL_R1UI_C4F_N3F_V3F_SUN, "GL_R1UI_C4F_N3F_V3F_SUN");
#endif
#if defined(GL_R1UI_T2F_V3F_SUN)
defconsti(env, "GL-R1UI-T2F-V3F-SUN", (GLenum) GL_R1UI_T2F_V3F_SUN, "GL_R1UI_T2F_V3F_SUN");
#endif
#if defined(GL_R1UI_T2F_N3F_V3F_SUN)
defconsti(env, "GL-R1UI-T2F-N3F-V3F-SUN", (GLenum) GL_R1UI_T2F_N3F_V3F_SUN, "GL_R1UI_T2F_N3F_V3F_SUN");
#endif
#if defined(GL_R1UI_T2F_C4F_N3F_V3F_SUN)
defconsti(env, "GL-R1UI-T2F-C4F-N3F-V3F-SUN", (GLenum) GL_R1UI_T2F_C4F_N3F_V3F_SUN, "GL_R1UI_T2F_C4F_N3F_V3F_SUN");
#endif
#if defined(GL_SLICE_ACCUM_SUN)
defconsti(env, "GL-SLICE-ACCUM-SUN", (GLenum) GL_SLICE_ACCUM_SUN, "GL_SLICE_ACCUM_SUN");
#endif
#if defined(GL_QUAD_MESH_SUN)
defconsti(env, "GL-QUAD-MESH-SUN", (GLenum) GL_QUAD_MESH_SUN, "GL_QUAD_MESH_SUN");
#endif
#if defined(GL_TRIANGLE_MESH_SUN)
defconsti(env, "GL-TRIANGLE-MESH-SUN", (GLenum) GL_TRIANGLE_MESH_SUN, "GL_TRIANGLE_MESH_SUN");
#endif
#if defined(GL_VERTEX_PROGRAM_ARB)
defconsti(env, "GL-VERTEX-PROGRAM-ARB", (GLenum) GL_VERTEX_PROGRAM_ARB, "GL_VERTEX_PROGRAM_ARB");
#endif
#if defined(GL_VERTEX_PROGRAM_NV)
defconsti(env, "GL-VERTEX-PROGRAM-NV", (GLenum) GL_VERTEX_PROGRAM_NV, "GL_VERTEX_PROGRAM_NV");
#endif
#if defined(GL_VERTEX_STATE_PROGRAM_NV)
defconsti(env, "GL-VERTEX-STATE-PROGRAM-NV", (GLenum) GL_VERTEX_STATE_PROGRAM_NV, "GL_VERTEX_STATE_PROGRAM_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_ENABLED)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-ENABLED", (GLenum) GL_VERTEX_ATTRIB_ARRAY_ENABLED, "GL_VERTEX_ATTRIB_ARRAY_ENABLED");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-ENABLED-ARB", (GLenum) GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB, "GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB");
#endif
#if defined(GL_ATTRIB_ARRAY_SIZE_NV)
defconsti(env, "GL-ATTRIB-ARRAY-SIZE-NV", (GLenum) GL_ATTRIB_ARRAY_SIZE_NV, "GL_ATTRIB_ARRAY_SIZE_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_SIZE)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-SIZE", (GLenum) GL_VERTEX_ATTRIB_ARRAY_SIZE, "GL_VERTEX_ATTRIB_ARRAY_SIZE");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-SIZE-ARB", (GLenum) GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB, "GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB");
#endif
#if defined(GL_ATTRIB_ARRAY_STRIDE_NV)
defconsti(env, "GL-ATTRIB-ARRAY-STRIDE-NV", (GLenum) GL_ATTRIB_ARRAY_STRIDE_NV, "GL_ATTRIB_ARRAY_STRIDE_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_STRIDE)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-STRIDE", (GLenum) GL_VERTEX_ATTRIB_ARRAY_STRIDE, "GL_VERTEX_ATTRIB_ARRAY_STRIDE");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-STRIDE-ARB", (GLenum) GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB, "GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB");
#endif
#if defined(GL_ATTRIB_ARRAY_TYPE_NV)
defconsti(env, "GL-ATTRIB-ARRAY-TYPE-NV", (GLenum) GL_ATTRIB_ARRAY_TYPE_NV, "GL_ATTRIB_ARRAY_TYPE_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_TYPE)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-TYPE", (GLenum) GL_VERTEX_ATTRIB_ARRAY_TYPE, "GL_VERTEX_ATTRIB_ARRAY_TYPE");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-TYPE-ARB", (GLenum) GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB, "GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB");
#endif
#if defined(GL_CURRENT_ATTRIB_NV)
defconsti(env, "GL-CURRENT-ATTRIB-NV", (GLenum) GL_CURRENT_ATTRIB_NV, "GL_CURRENT_ATTRIB_NV");
#endif
#if defined(GL_CURRENT_VERTEX_ATTRIB)
defconsti(env, "GL-CURRENT-VERTEX-ATTRIB", (GLenum) GL_CURRENT_VERTEX_ATTRIB, "GL_CURRENT_VERTEX_ATTRIB");
#endif
#if defined(GL_CURRENT_VERTEX_ATTRIB_ARB)
defconsti(env, "GL-CURRENT-VERTEX-ATTRIB-ARB", (GLenum) GL_CURRENT_VERTEX_ATTRIB_ARB, "GL_CURRENT_VERTEX_ATTRIB_ARB");
#endif
#if defined(GL_PROGRAM_LENGTH_ARB)
defconsti(env, "GL-PROGRAM-LENGTH-ARB", (GLenum) GL_PROGRAM_LENGTH_ARB, "GL_PROGRAM_LENGTH_ARB");
#endif
#if defined(GL_PROGRAM_LENGTH_NV)
defconsti(env, "GL-PROGRAM-LENGTH-NV", (GLenum) GL_PROGRAM_LENGTH_NV, "GL_PROGRAM_LENGTH_NV");
#endif
#if defined(GL_PROGRAM_STRING_ARB)
defconsti(env, "GL-PROGRAM-STRING-ARB", (GLenum) GL_PROGRAM_STRING_ARB, "GL_PROGRAM_STRING_ARB");
#endif
#if defined(GL_PROGRAM_STRING_NV)
defconsti(env, "GL-PROGRAM-STRING-NV", (GLenum) GL_PROGRAM_STRING_NV, "GL_PROGRAM_STRING_NV");
#endif
#if defined(GL_MODELVIEW_PROJECTION_NV)
defconsti(env, "GL-MODELVIEW-PROJECTION-NV", (GLenum) GL_MODELVIEW_PROJECTION_NV, "GL_MODELVIEW_PROJECTION_NV");
#endif
#if defined(GL_IDENTITY_NV)
defconsti(env, "GL-IDENTITY-NV", (GLenum) GL_IDENTITY_NV, "GL_IDENTITY_NV");
#endif
#if defined(GL_INVERSE_NV)
defconsti(env, "GL-INVERSE-NV", (GLenum) GL_INVERSE_NV, "GL_INVERSE_NV");
#endif
#if defined(GL_TRANSPOSE_NV)
defconsti(env, "GL-TRANSPOSE-NV", (GLenum) GL_TRANSPOSE_NV, "GL_TRANSPOSE_NV");
#endif
#if defined(GL_INVERSE_TRANSPOSE_NV)
defconsti(env, "GL-INVERSE-TRANSPOSE-NV", (GLenum) GL_INVERSE_TRANSPOSE_NV, "GL_INVERSE_TRANSPOSE_NV");
#endif
#if defined(GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB)
defconsti(env, "GL-MAX-PROGRAM-MATRIX-STACK-DEPTH-ARB", (GLenum) GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB, "GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB");
#endif
#if defined(GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV)
defconsti(env, "GL-MAX-TRACK-MATRIX-STACK-DEPTH-NV", (GLenum) GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV, "GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV");
#endif
#if defined(GL_MAX_PROGRAM_MATRICES_ARB)
defconsti(env, "GL-MAX-PROGRAM-MATRICES-ARB", (GLenum) GL_MAX_PROGRAM_MATRICES_ARB, "GL_MAX_PROGRAM_MATRICES_ARB");
#endif
#if defined(GL_MAX_TRACK_MATRICES_NV)
defconsti(env, "GL-MAX-TRACK-MATRICES-NV", (GLenum) GL_MAX_TRACK_MATRICES_NV, "GL_MAX_TRACK_MATRICES_NV");
#endif
#if defined(GL_MATRIX0_NV)
defconsti(env, "GL-MATRIX0-NV", (GLenum) GL_MATRIX0_NV, "GL_MATRIX0_NV");
#endif
#if defined(GL_MATRIX1_NV)
defconsti(env, "GL-MATRIX1-NV", (GLenum) GL_MATRIX1_NV, "GL_MATRIX1_NV");
#endif
#if defined(GL_MATRIX2_NV)
defconsti(env, "GL-MATRIX2-NV", (GLenum) GL_MATRIX2_NV, "GL_MATRIX2_NV");
#endif
#if defined(GL_MATRIX3_NV)
defconsti(env, "GL-MATRIX3-NV", (GLenum) GL_MATRIX3_NV, "GL_MATRIX3_NV");
#endif
#if defined(GL_MATRIX4_NV)
defconsti(env, "GL-MATRIX4-NV", (GLenum) GL_MATRIX4_NV, "GL_MATRIX4_NV");
#endif
#if defined(GL_MATRIX5_NV)
defconsti(env, "GL-MATRIX5-NV", (GLenum) GL_MATRIX5_NV, "GL_MATRIX5_NV");
#endif
#if defined(GL_MATRIX6_NV)
defconsti(env, "GL-MATRIX6-NV", (GLenum) GL_MATRIX6_NV, "GL_MATRIX6_NV");
#endif
#if defined(GL_MATRIX7_NV)
defconsti(env, "GL-MATRIX7-NV", (GLenum) GL_MATRIX7_NV, "GL_MATRIX7_NV");
#endif
#if defined(GL_CURRENT_MATRIX_STACK_DEPTH_ARB)
defconsti(env, "GL-CURRENT-MATRIX-STACK-DEPTH-ARB", (GLenum) GL_CURRENT_MATRIX_STACK_DEPTH_ARB, "GL_CURRENT_MATRIX_STACK_DEPTH_ARB");
#endif
#if defined(GL_CURRENT_MATRIX_STACK_DEPTH_NV)
defconsti(env, "GL-CURRENT-MATRIX-STACK-DEPTH-NV", (GLenum) GL_CURRENT_MATRIX_STACK_DEPTH_NV, "GL_CURRENT_MATRIX_STACK_DEPTH_NV");
#endif
#if defined(GL_CURRENT_MATRIX_ARB)
defconsti(env, "GL-CURRENT-MATRIX-ARB", (GLenum) GL_CURRENT_MATRIX_ARB, "GL_CURRENT_MATRIX_ARB");
#endif
#if defined(GL_CURRENT_MATRIX_NV)
defconsti(env, "GL-CURRENT-MATRIX-NV", (GLenum) GL_CURRENT_MATRIX_NV, "GL_CURRENT_MATRIX_NV");
#endif
#if defined(GL_VERTEX_PROGRAM_POINT_SIZE)
defconsti(env, "GL-VERTEX-PROGRAM-POINT-SIZE", (GLenum) GL_VERTEX_PROGRAM_POINT_SIZE, "GL_VERTEX_PROGRAM_POINT_SIZE");
#endif
#if defined(GL_VERTEX_PROGRAM_POINT_SIZE_ARB)
defconsti(env, "GL-VERTEX-PROGRAM-POINT-SIZE-ARB", (GLenum) GL_VERTEX_PROGRAM_POINT_SIZE_ARB, "GL_VERTEX_PROGRAM_POINT_SIZE_ARB");
#endif
#if defined(GL_VERTEX_PROGRAM_POINT_SIZE_NV)
defconsti(env, "GL-VERTEX-PROGRAM-POINT-SIZE-NV", (GLenum) GL_VERTEX_PROGRAM_POINT_SIZE_NV, "GL_VERTEX_PROGRAM_POINT_SIZE_NV");
#endif
#if defined(GL_PROGRAM_POINT_SIZE)
defconsti(env, "GL-PROGRAM-POINT-SIZE", (GLenum) GL_PROGRAM_POINT_SIZE, "GL_PROGRAM_POINT_SIZE");
#endif
#if defined(GL_PROGRAM_POINT_SIZE_ARB)
defconsti(env, "GL-PROGRAM-POINT-SIZE-ARB", (GLenum) GL_PROGRAM_POINT_SIZE_ARB, "GL_PROGRAM_POINT_SIZE_ARB");
#endif
#if defined(GL_PROGRAM_POINT_SIZE_EXT)
defconsti(env, "GL-PROGRAM-POINT-SIZE-EXT", (GLenum) GL_PROGRAM_POINT_SIZE_EXT, "GL_PROGRAM_POINT_SIZE_EXT");
#endif
#if defined(GL_VERTEX_PROGRAM_TWO_SIDE)
defconsti(env, "GL-VERTEX-PROGRAM-TWO-SIDE", (GLenum) GL_VERTEX_PROGRAM_TWO_SIDE, "GL_VERTEX_PROGRAM_TWO_SIDE");
#endif
#if defined(GL_VERTEX_PROGRAM_TWO_SIDE_ARB)
defconsti(env, "GL-VERTEX-PROGRAM-TWO-SIDE-ARB", (GLenum) GL_VERTEX_PROGRAM_TWO_SIDE_ARB, "GL_VERTEX_PROGRAM_TWO_SIDE_ARB");
#endif
#if defined(GL_VERTEX_PROGRAM_TWO_SIDE_NV)
defconsti(env, "GL-VERTEX-PROGRAM-TWO-SIDE-NV", (GLenum) GL_VERTEX_PROGRAM_TWO_SIDE_NV, "GL_VERTEX_PROGRAM_TWO_SIDE_NV");
#endif
#if defined(GL_PROGRAM_PARAMETER_NV)
defconsti(env, "GL-PROGRAM-PARAMETER-NV", (GLenum) GL_PROGRAM_PARAMETER_NV, "GL_PROGRAM_PARAMETER_NV");
#endif
#if defined(GL_ATTRIB_ARRAY_POINTER_NV)
defconsti(env, "GL-ATTRIB-ARRAY-POINTER-NV", (GLenum) GL_ATTRIB_ARRAY_POINTER_NV, "GL_ATTRIB_ARRAY_POINTER_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_POINTER)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-POINTER", (GLenum) GL_VERTEX_ATTRIB_ARRAY_POINTER, "GL_VERTEX_ATTRIB_ARRAY_POINTER");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-POINTER-ARB", (GLenum) GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB, "GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB");
#endif
#if defined(GL_PROGRAM_TARGET_NV)
defconsti(env, "GL-PROGRAM-TARGET-NV", (GLenum) GL_PROGRAM_TARGET_NV, "GL_PROGRAM_TARGET_NV");
#endif
#if defined(GL_PROGRAM_RESIDENT_NV)
defconsti(env, "GL-PROGRAM-RESIDENT-NV", (GLenum) GL_PROGRAM_RESIDENT_NV, "GL_PROGRAM_RESIDENT_NV");
#endif
#if defined(GL_TRACK_MATRIX_NV)
defconsti(env, "GL-TRACK-MATRIX-NV", (GLenum) GL_TRACK_MATRIX_NV, "GL_TRACK_MATRIX_NV");
#endif
#if defined(GL_TRACK_MATRIX_TRANSFORM_NV)
defconsti(env, "GL-TRACK-MATRIX-TRANSFORM-NV", (GLenum) GL_TRACK_MATRIX_TRANSFORM_NV, "GL_TRACK_MATRIX_TRANSFORM_NV");
#endif
#if defined(GL_VERTEX_PROGRAM_BINDING_NV)
defconsti(env, "GL-VERTEX-PROGRAM-BINDING-NV", (GLenum) GL_VERTEX_PROGRAM_BINDING_NV, "GL_VERTEX_PROGRAM_BINDING_NV");
#endif
#if defined(GL_PROGRAM_ERROR_POSITION_ARB)
defconsti(env, "GL-PROGRAM-ERROR-POSITION-ARB", (GLenum) GL_PROGRAM_ERROR_POSITION_ARB, "GL_PROGRAM_ERROR_POSITION_ARB");
#endif
#if defined(GL_PROGRAM_ERROR_POSITION_NV)
defconsti(env, "GL-PROGRAM-ERROR-POSITION-NV", (GLenum) GL_PROGRAM_ERROR_POSITION_NV, "GL_PROGRAM_ERROR_POSITION_NV");
#endif
#if defined(GL_OFFSET_TEXTURE_RECTANGLE_NV)
defconsti(env, "GL-OFFSET-TEXTURE-RECTANGLE-NV", (GLenum) GL_OFFSET_TEXTURE_RECTANGLE_NV, "GL_OFFSET_TEXTURE_RECTANGLE_NV");
#endif
#if defined(GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV)
defconsti(env, "GL-OFFSET-TEXTURE-RECTANGLE-SCALE-NV", (GLenum) GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV, "GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV");
#endif
#if defined(GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV)
defconsti(env, "GL-DOT-PRODUCT-TEXTURE-RECTANGLE-NV", (GLenum) GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV, "GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV");
#endif
#if defined(GL_DEPTH_CLAMP)
defconsti(env, "GL-DEPTH-CLAMP", (GLenum) GL_DEPTH_CLAMP, "GL_DEPTH_CLAMP");
#endif
#if defined(GL_DEPTH_CLAMP_NV)
defconsti(env, "GL-DEPTH-CLAMP-NV", (GLenum) GL_DEPTH_CLAMP_NV, "GL_DEPTH_CLAMP_NV");
#endif
#if defined(GL_DEPTH_CLAMP_EXT)
defconsti(env, "GL-DEPTH-CLAMP-EXT", (GLenum) GL_DEPTH_CLAMP_EXT, "GL_DEPTH_CLAMP_EXT");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY0_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY0-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY0_NV, "GL_VERTEX_ATTRIB_ARRAY0_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY1_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY1-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY1_NV, "GL_VERTEX_ATTRIB_ARRAY1_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY2_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY2-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY2_NV, "GL_VERTEX_ATTRIB_ARRAY2_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY3_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY3-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY3_NV, "GL_VERTEX_ATTRIB_ARRAY3_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY4_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY4-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY4_NV, "GL_VERTEX_ATTRIB_ARRAY4_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY5_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY5-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY5_NV, "GL_VERTEX_ATTRIB_ARRAY5_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY6_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY6-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY6_NV, "GL_VERTEX_ATTRIB_ARRAY6_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY7_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY7-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY7_NV, "GL_VERTEX_ATTRIB_ARRAY7_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY8_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY8-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY8_NV, "GL_VERTEX_ATTRIB_ARRAY8_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY9_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY9-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY9_NV, "GL_VERTEX_ATTRIB_ARRAY9_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY10_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY10-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY10_NV, "GL_VERTEX_ATTRIB_ARRAY10_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY11_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY11-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY11_NV, "GL_VERTEX_ATTRIB_ARRAY11_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY12_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY12-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY12_NV, "GL_VERTEX_ATTRIB_ARRAY12_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY13_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY13-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY13_NV, "GL_VERTEX_ATTRIB_ARRAY13_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY14_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY14-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY14_NV, "GL_VERTEX_ATTRIB_ARRAY14_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY15_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY15-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY15_NV, "GL_VERTEX_ATTRIB_ARRAY15_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB0_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB0-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB0_4_NV, "GL_MAP1_VERTEX_ATTRIB0_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB1_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB1-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB1_4_NV, "GL_MAP1_VERTEX_ATTRIB1_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB2_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB2-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB2_4_NV, "GL_MAP1_VERTEX_ATTRIB2_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB3_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB3-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB3_4_NV, "GL_MAP1_VERTEX_ATTRIB3_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB4_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB4-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB4_4_NV, "GL_MAP1_VERTEX_ATTRIB4_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB5_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB5-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB5_4_NV, "GL_MAP1_VERTEX_ATTRIB5_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB6_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB6-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB6_4_NV, "GL_MAP1_VERTEX_ATTRIB6_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB7_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB7-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB7_4_NV, "GL_MAP1_VERTEX_ATTRIB7_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB8_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB8-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB8_4_NV, "GL_MAP1_VERTEX_ATTRIB8_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB9_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB9-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB9_4_NV, "GL_MAP1_VERTEX_ATTRIB9_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB10_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB10-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB10_4_NV, "GL_MAP1_VERTEX_ATTRIB10_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB11_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB11-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB11_4_NV, "GL_MAP1_VERTEX_ATTRIB11_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB12_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB12-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB12_4_NV, "GL_MAP1_VERTEX_ATTRIB12_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB13_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB13-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB13_4_NV, "GL_MAP1_VERTEX_ATTRIB13_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB14_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB14-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB14_4_NV, "GL_MAP1_VERTEX_ATTRIB14_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB15_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB15-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB15_4_NV, "GL_MAP1_VERTEX_ATTRIB15_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB0_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB0-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB0_4_NV, "GL_MAP2_VERTEX_ATTRIB0_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB1_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB1-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB1_4_NV, "GL_MAP2_VERTEX_ATTRIB1_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB2_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB2-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB2_4_NV, "GL_MAP2_VERTEX_ATTRIB2_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB3_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB3-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB3_4_NV, "GL_MAP2_VERTEX_ATTRIB3_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB4_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB4-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB4_4_NV, "GL_MAP2_VERTEX_ATTRIB4_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB5_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB5-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB5_4_NV, "GL_MAP2_VERTEX_ATTRIB5_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB6_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB6-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB6_4_NV, "GL_MAP2_VERTEX_ATTRIB6_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB7_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB7-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB7_4_NV, "GL_MAP2_VERTEX_ATTRIB7_4_NV");
#endif
#if defined(GL_PROGRAM_BINDING_ARB)
defconsti(env, "GL-PROGRAM-BINDING-ARB", (GLenum) GL_PROGRAM_BINDING_ARB, "GL_PROGRAM_BINDING_ARB");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB8_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB8-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB8_4_NV, "GL_MAP2_VERTEX_ATTRIB8_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB9_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB9-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB9_4_NV, "GL_MAP2_VERTEX_ATTRIB9_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB10_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB10-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB10_4_NV, "GL_MAP2_VERTEX_ATTRIB10_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB11_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB11-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB11_4_NV, "GL_MAP2_VERTEX_ATTRIB11_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB12_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB12-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB12_4_NV, "GL_MAP2_VERTEX_ATTRIB12_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB13_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB13-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB13_4_NV, "GL_MAP2_VERTEX_ATTRIB13_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB14_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB14-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB14_4_NV, "GL_MAP2_VERTEX_ATTRIB14_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB15_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB15-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB15_4_NV, "GL_MAP2_VERTEX_ATTRIB15_4_NV");
#endif
#if defined(GL_TEXTURE_COMPRESSED_IMAGE_SIZE)
defconsti(env, "GL-TEXTURE-COMPRESSED-IMAGE-SIZE", (GLenum) GL_TEXTURE_COMPRESSED_IMAGE_SIZE, "GL_TEXTURE_COMPRESSED_IMAGE_SIZE");
#endif
#if defined(GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB)
defconsti(env, "GL-TEXTURE-COMPRESSED-IMAGE-SIZE-ARB", (GLenum) GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB, "GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB");
#endif
#if defined(GL_TEXTURE_COMPRESSED)
defconsti(env, "GL-TEXTURE-COMPRESSED", (GLenum) GL_TEXTURE_COMPRESSED, "GL_TEXTURE_COMPRESSED");
#endif
#if defined(GL_TEXTURE_COMPRESSED_ARB)
defconsti(env, "GL-TEXTURE-COMPRESSED-ARB", (GLenum) GL_TEXTURE_COMPRESSED_ARB, "GL_TEXTURE_COMPRESSED_ARB");
#endif
#if defined(GL_NUM_COMPRESSED_TEXTURE_FORMATS)
defconsti(env, "GL-NUM-COMPRESSED-TEXTURE-FORMATS", (GLenum) GL_NUM_COMPRESSED_TEXTURE_FORMATS, "GL_NUM_COMPRESSED_TEXTURE_FORMATS");
#endif
#if defined(GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB)
defconsti(env, "GL-NUM-COMPRESSED-TEXTURE-FORMATS-ARB", (GLenum) GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB, "GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB");
#endif
#if defined(GL_COMPRESSED_TEXTURE_FORMATS)
defconsti(env, "GL-COMPRESSED-TEXTURE-FORMATS", (GLenum) GL_COMPRESSED_TEXTURE_FORMATS, "GL_COMPRESSED_TEXTURE_FORMATS");
#endif
#if defined(GL_COMPRESSED_TEXTURE_FORMATS_ARB)
defconsti(env, "GL-COMPRESSED-TEXTURE-FORMATS-ARB", (GLenum) GL_COMPRESSED_TEXTURE_FORMATS_ARB, "GL_COMPRESSED_TEXTURE_FORMATS_ARB");
#endif
#if defined(GL_MAX_VERTEX_UNITS_ARB)
defconsti(env, "GL-MAX-VERTEX-UNITS-ARB", (GLenum) GL_MAX_VERTEX_UNITS_ARB, "GL_MAX_VERTEX_UNITS_ARB");
#endif
#if defined(GL_MAX_VERTEX_UNITS_OES)
defconsti(env, "GL-MAX-VERTEX-UNITS-OES", (GLenum) GL_MAX_VERTEX_UNITS_OES, "GL_MAX_VERTEX_UNITS_OES");
#endif
#if defined(GL_ACTIVE_VERTEX_UNITS_ARB)
defconsti(env, "GL-ACTIVE-VERTEX-UNITS-ARB", (GLenum) GL_ACTIVE_VERTEX_UNITS_ARB, "GL_ACTIVE_VERTEX_UNITS_ARB");
#endif
#if defined(GL_WEIGHT_SUM_UNITY_ARB)
defconsti(env, "GL-WEIGHT-SUM-UNITY-ARB", (GLenum) GL_WEIGHT_SUM_UNITY_ARB, "GL_WEIGHT_SUM_UNITY_ARB");
#endif
#if defined(GL_VERTEX_BLEND_ARB)
defconsti(env, "GL-VERTEX-BLEND-ARB", (GLenum) GL_VERTEX_BLEND_ARB, "GL_VERTEX_BLEND_ARB");
#endif
#if defined(GL_CURRENT_WEIGHT_ARB)
defconsti(env, "GL-CURRENT-WEIGHT-ARB", (GLenum) GL_CURRENT_WEIGHT_ARB, "GL_CURRENT_WEIGHT_ARB");
#endif
#if defined(GL_WEIGHT_ARRAY_TYPE_ARB)
defconsti(env, "GL-WEIGHT-ARRAY-TYPE-ARB", (GLenum) GL_WEIGHT_ARRAY_TYPE_ARB, "GL_WEIGHT_ARRAY_TYPE_ARB");
#endif
#if defined(GL_WEIGHT_ARRAY_TYPE_OES)
defconsti(env, "GL-WEIGHT-ARRAY-TYPE-OES", (GLenum) GL_WEIGHT_ARRAY_TYPE_OES, "GL_WEIGHT_ARRAY_TYPE_OES");
#endif
#if defined(GL_WEIGHT_ARRAY_STRIDE_ARB)
defconsti(env, "GL-WEIGHT-ARRAY-STRIDE-ARB", (GLenum) GL_WEIGHT_ARRAY_STRIDE_ARB, "GL_WEIGHT_ARRAY_STRIDE_ARB");
#endif
#if defined(GL_WEIGHT_ARRAY_STRIDE_OES)
defconsti(env, "GL-WEIGHT-ARRAY-STRIDE-OES", (GLenum) GL_WEIGHT_ARRAY_STRIDE_OES, "GL_WEIGHT_ARRAY_STRIDE_OES");
#endif
#if defined(GL_WEIGHT_ARRAY_SIZE_ARB)
defconsti(env, "GL-WEIGHT-ARRAY-SIZE-ARB", (GLenum) GL_WEIGHT_ARRAY_SIZE_ARB, "GL_WEIGHT_ARRAY_SIZE_ARB");
#endif
#if defined(GL_WEIGHT_ARRAY_SIZE_OES)
defconsti(env, "GL-WEIGHT-ARRAY-SIZE-OES", (GLenum) GL_WEIGHT_ARRAY_SIZE_OES, "GL_WEIGHT_ARRAY_SIZE_OES");
#endif
#if defined(GL_WEIGHT_ARRAY_POINTER_ARB)
defconsti(env, "GL-WEIGHT-ARRAY-POINTER-ARB", (GLenum) GL_WEIGHT_ARRAY_POINTER_ARB, "GL_WEIGHT_ARRAY_POINTER_ARB");
#endif
#if defined(GL_WEIGHT_ARRAY_POINTER_OES)
defconsti(env, "GL-WEIGHT-ARRAY-POINTER-OES", (GLenum) GL_WEIGHT_ARRAY_POINTER_OES, "GL_WEIGHT_ARRAY_POINTER_OES");
#endif
#if defined(GL_WEIGHT_ARRAY_ARB)
defconsti(env, "GL-WEIGHT-ARRAY-ARB", (GLenum) GL_WEIGHT_ARRAY_ARB, "GL_WEIGHT_ARRAY_ARB");
#endif
#if defined(GL_WEIGHT_ARRAY_OES)
defconsti(env, "GL-WEIGHT-ARRAY-OES", (GLenum) GL_WEIGHT_ARRAY_OES, "GL_WEIGHT_ARRAY_OES");
#endif
#if defined(GL_DOT3_RGB)
defconsti(env, "GL-DOT3-RGB", (GLenum) GL_DOT3_RGB, "GL_DOT3_RGB");
#endif
#if defined(GL_DOT3_RGB_ARB)
defconsti(env, "GL-DOT3-RGB-ARB", (GLenum) GL_DOT3_RGB_ARB, "GL_DOT3_RGB_ARB");
#endif
#if defined(GL_DOT3_RGBA)
defconsti(env, "GL-DOT3-RGBA", (GLenum) GL_DOT3_RGBA, "GL_DOT3_RGBA");
#endif
#if defined(GL_DOT3_RGBA_ARB)
defconsti(env, "GL-DOT3-RGBA-ARB", (GLenum) GL_DOT3_RGBA_ARB, "GL_DOT3_RGBA_ARB");
#endif
#if defined(GL_DOT3_RGBA_IMG)
defconsti(env, "GL-DOT3-RGBA-IMG", (GLenum) GL_DOT3_RGBA_IMG, "GL_DOT3_RGBA_IMG");
#endif
#if defined(GL_COMPRESSED_RGB_FXT1_3DFX)
defconsti(env, "GL-COMPRESSED-RGB-FXT1-3DFX", (GLenum) GL_COMPRESSED_RGB_FXT1_3DFX, "GL_COMPRESSED_RGB_FXT1_3DFX");
#endif
#if defined(GL_COMPRESSED_RGBA_FXT1_3DFX)
defconsti(env, "GL-COMPRESSED-RGBA-FXT1-3DFX", (GLenum) GL_COMPRESSED_RGBA_FXT1_3DFX, "GL_COMPRESSED_RGBA_FXT1_3DFX");
#endif
#if defined(GL_MULTISAMPLE_3DFX)
defconsti(env, "GL-MULTISAMPLE-3DFX", (GLenum) GL_MULTISAMPLE_3DFX, "GL_MULTISAMPLE_3DFX");
#endif
#if defined(GL_SAMPLE_BUFFERS_3DFX)
defconsti(env, "GL-SAMPLE-BUFFERS-3DFX", (GLenum) GL_SAMPLE_BUFFERS_3DFX, "GL_SAMPLE_BUFFERS_3DFX");
#endif
#if defined(GL_SAMPLES_3DFX)
defconsti(env, "GL-SAMPLES-3DFX", (GLenum) GL_SAMPLES_3DFX, "GL_SAMPLES_3DFX");
#endif
#if defined(GL_EVAL_2D_NV)
defconsti(env, "GL-EVAL-2D-NV", (GLenum) GL_EVAL_2D_NV, "GL_EVAL_2D_NV");
#endif
#if defined(GL_EVAL_TRIANGULAR_2D_NV)
defconsti(env, "GL-EVAL-TRIANGULAR-2D-NV", (GLenum) GL_EVAL_TRIANGULAR_2D_NV, "GL_EVAL_TRIANGULAR_2D_NV");
#endif
#if defined(GL_MAP_TESSELLATION_NV)
defconsti(env, "GL-MAP-TESSELLATION-NV", (GLenum) GL_MAP_TESSELLATION_NV, "GL_MAP_TESSELLATION_NV");
#endif
#if defined(GL_MAP_ATTRIB_U_ORDER_NV)
defconsti(env, "GL-MAP-ATTRIB-U-ORDER-NV", (GLenum) GL_MAP_ATTRIB_U_ORDER_NV, "GL_MAP_ATTRIB_U_ORDER_NV");
#endif
#if defined(GL_MAP_ATTRIB_V_ORDER_NV)
defconsti(env, "GL-MAP-ATTRIB-V-ORDER-NV", (GLenum) GL_MAP_ATTRIB_V_ORDER_NV, "GL_MAP_ATTRIB_V_ORDER_NV");
#endif
#if defined(GL_EVAL_FRACTIONAL_TESSELLATION_NV)
defconsti(env, "GL-EVAL-FRACTIONAL-TESSELLATION-NV", (GLenum) GL_EVAL_FRACTIONAL_TESSELLATION_NV, "GL_EVAL_FRACTIONAL_TESSELLATION_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB0_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB0-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB0_NV, "GL_EVAL_VERTEX_ATTRIB0_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB1_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB1-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB1_NV, "GL_EVAL_VERTEX_ATTRIB1_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB2_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB2-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB2_NV, "GL_EVAL_VERTEX_ATTRIB2_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB3_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB3-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB3_NV, "GL_EVAL_VERTEX_ATTRIB3_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB4_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB4-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB4_NV, "GL_EVAL_VERTEX_ATTRIB4_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB5_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB5-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB5_NV, "GL_EVAL_VERTEX_ATTRIB5_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB6_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB6-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB6_NV, "GL_EVAL_VERTEX_ATTRIB6_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB7_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB7-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB7_NV, "GL_EVAL_VERTEX_ATTRIB7_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB8_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB8-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB8_NV, "GL_EVAL_VERTEX_ATTRIB8_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB9_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB9-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB9_NV, "GL_EVAL_VERTEX_ATTRIB9_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB10_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB10-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB10_NV, "GL_EVAL_VERTEX_ATTRIB10_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB11_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB11-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB11_NV, "GL_EVAL_VERTEX_ATTRIB11_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB12_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB12-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB12_NV, "GL_EVAL_VERTEX_ATTRIB12_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB13_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB13-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB13_NV, "GL_EVAL_VERTEX_ATTRIB13_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB14_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB14-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB14_NV, "GL_EVAL_VERTEX_ATTRIB14_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB15_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB15-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB15_NV, "GL_EVAL_VERTEX_ATTRIB15_NV");
#endif
#if defined(GL_MAX_MAP_TESSELLATION_NV)
defconsti(env, "GL-MAX-MAP-TESSELLATION-NV", (GLenum) GL_MAX_MAP_TESSELLATION_NV, "GL_MAX_MAP_TESSELLATION_NV");
#endif
#if defined(GL_MAX_RATIONAL_EVAL_ORDER_NV)
defconsti(env, "GL-MAX-RATIONAL-EVAL-ORDER-NV", (GLenum) GL_MAX_RATIONAL_EVAL_ORDER_NV, "GL_MAX_RATIONAL_EVAL_ORDER_NV");
#endif
#if defined(GL_MAX_PROGRAM_PATCH_ATTRIBS_NV)
defconsti(env, "GL-MAX-PROGRAM-PATCH-ATTRIBS-NV", (GLenum) GL_MAX_PROGRAM_PATCH_ATTRIBS_NV, "GL_MAX_PROGRAM_PATCH_ATTRIBS_NV");
#endif
#if defined(GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV)
defconsti(env, "GL-RGBA-UNSIGNED-DOT-PRODUCT-MAPPING-NV", (GLenum) GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV, "GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV");
#endif
#if defined(GL_UNSIGNED_INT_S8_S8_8_8_NV)
defconsti(env, "GL-UNSIGNED-INT-S8-S8-8-8-NV", (GLenum) GL_UNSIGNED_INT_S8_S8_8_8_NV, "GL_UNSIGNED_INT_S8_S8_8_8_NV");
#endif
#if defined(GL_UNSIGNED_INT_8_8_S8_S8_REV_NV)
defconsti(env, "GL-UNSIGNED-INT-8-8-S8-S8-REV-NV", (GLenum) GL_UNSIGNED_INT_8_8_S8_S8_REV_NV, "GL_UNSIGNED_INT_8_8_S8_S8_REV_NV");
#endif
#if defined(GL_DSDT_MAG_INTENSITY_NV)
defconsti(env, "GL-DSDT-MAG-INTENSITY-NV", (GLenum) GL_DSDT_MAG_INTENSITY_NV, "GL_DSDT_MAG_INTENSITY_NV");
#endif
#if defined(GL_SHADER_CONSISTENT_NV)
defconsti(env, "GL-SHADER-CONSISTENT-NV", (GLenum) GL_SHADER_CONSISTENT_NV, "GL_SHADER_CONSISTENT_NV");
#endif
#if defined(GL_TEXTURE_SHADER_NV)
defconsti(env, "GL-TEXTURE-SHADER-NV", (GLenum) GL_TEXTURE_SHADER_NV, "GL_TEXTURE_SHADER_NV");
#endif
#if defined(GL_SHADER_OPERATION_NV)
defconsti(env, "GL-SHADER-OPERATION-NV", (GLenum) GL_SHADER_OPERATION_NV, "GL_SHADER_OPERATION_NV");
#endif
#if defined(GL_CULL_MODES_NV)
defconsti(env, "GL-CULL-MODES-NV", (GLenum) GL_CULL_MODES_NV, "GL_CULL_MODES_NV");
#endif
#if defined(GL_OFFSET_TEXTURE_MATRIX_NV)
defconsti(env, "GL-OFFSET-TEXTURE-MATRIX-NV", (GLenum) GL_OFFSET_TEXTURE_MATRIX_NV, "GL_OFFSET_TEXTURE_MATRIX_NV");
#endif
#if defined(GL_OFFSET_TEXTURE_2D_MATRIX_NV)
defconsti(env, "GL-OFFSET-TEXTURE-2D-MATRIX-NV", (GLenum) GL_OFFSET_TEXTURE_2D_MATRIX_NV, "GL_OFFSET_TEXTURE_2D_MATRIX_NV");
#endif
#if defined(GL_OFFSET_TEXTURE_SCALE_NV)
defconsti(env, "GL-OFFSET-TEXTURE-SCALE-NV", (GLenum) GL_OFFSET_TEXTURE_SCALE_NV, "GL_OFFSET_TEXTURE_SCALE_NV");
#endif
#if defined(GL_OFFSET_TEXTURE_2D_SCALE_NV)
defconsti(env, "GL-OFFSET-TEXTURE-2D-SCALE-NV", (GLenum) GL_OFFSET_TEXTURE_2D_SCALE_NV, "GL_OFFSET_TEXTURE_2D_SCALE_NV");
#endif
#if defined(GL_OFFSET_TEXTURE_BIAS_NV)
defconsti(env, "GL-OFFSET-TEXTURE-BIAS-NV", (GLenum) GL_OFFSET_TEXTURE_BIAS_NV, "GL_OFFSET_TEXTURE_BIAS_NV");
#endif
#if defined(GL_OFFSET_TEXTURE_2D_BIAS_NV)
defconsti(env, "GL-OFFSET-TEXTURE-2D-BIAS-NV", (GLenum) GL_OFFSET_TEXTURE_2D_BIAS_NV, "GL_OFFSET_TEXTURE_2D_BIAS_NV");
#endif
#if defined(GL_PREVIOUS_TEXTURE_INPUT_NV)
defconsti(env, "GL-PREVIOUS-TEXTURE-INPUT-NV", (GLenum) GL_PREVIOUS_TEXTURE_INPUT_NV, "GL_PREVIOUS_TEXTURE_INPUT_NV");
#endif
#if defined(GL_CONST_EYE_NV)
defconsti(env, "GL-CONST-EYE-NV", (GLenum) GL_CONST_EYE_NV, "GL_CONST_EYE_NV");
#endif
#if defined(GL_PASS_THROUGH_NV)
defconsti(env, "GL-PASS-THROUGH-NV", (GLenum) GL_PASS_THROUGH_NV, "GL_PASS_THROUGH_NV");
#endif
#if defined(GL_CULL_FRAGMENT_NV)
defconsti(env, "GL-CULL-FRAGMENT-NV", (GLenum) GL_CULL_FRAGMENT_NV, "GL_CULL_FRAGMENT_NV");
#endif
#if defined(GL_OFFSET_TEXTURE_2D_NV)
defconsti(env, "GL-OFFSET-TEXTURE-2D-NV", (GLenum) GL_OFFSET_TEXTURE_2D_NV, "GL_OFFSET_TEXTURE_2D_NV");
#endif
#if defined(GL_DEPENDENT_AR_TEXTURE_2D_NV)
defconsti(env, "GL-DEPENDENT-AR-TEXTURE-2D-NV", (GLenum) GL_DEPENDENT_AR_TEXTURE_2D_NV, "GL_DEPENDENT_AR_TEXTURE_2D_NV");
#endif
#if defined(GL_DEPENDENT_GB_TEXTURE_2D_NV)
defconsti(env, "GL-DEPENDENT-GB-TEXTURE-2D-NV", (GLenum) GL_DEPENDENT_GB_TEXTURE_2D_NV, "GL_DEPENDENT_GB_TEXTURE_2D_NV");
#endif
#if defined(GL_SURFACE_STATE_NV)
defconsti(env, "GL-SURFACE-STATE-NV", (GLenum) GL_SURFACE_STATE_NV, "GL_SURFACE_STATE_NV");
#endif
#if defined(GL_DOT_PRODUCT_NV)
defconsti(env, "GL-DOT-PRODUCT-NV", (GLenum) GL_DOT_PRODUCT_NV, "GL_DOT_PRODUCT_NV");
#endif
#if defined(GL_DOT_PRODUCT_DEPTH_REPLACE_NV)
defconsti(env, "GL-DOT-PRODUCT-DEPTH-REPLACE-NV", (GLenum) GL_DOT_PRODUCT_DEPTH_REPLACE_NV, "GL_DOT_PRODUCT_DEPTH_REPLACE_NV");
#endif
#if defined(GL_DOT_PRODUCT_TEXTURE_2D_NV)
defconsti(env, "GL-DOT-PRODUCT-TEXTURE-2D-NV", (GLenum) GL_DOT_PRODUCT_TEXTURE_2D_NV, "GL_DOT_PRODUCT_TEXTURE_2D_NV");
#endif
#if defined(GL_DOT_PRODUCT_TEXTURE_3D_NV)
defconsti(env, "GL-DOT-PRODUCT-TEXTURE-3D-NV", (GLenum) GL_DOT_PRODUCT_TEXTURE_3D_NV, "GL_DOT_PRODUCT_TEXTURE_3D_NV");
#endif
#if defined(GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV)
defconsti(env, "GL-DOT-PRODUCT-TEXTURE-CUBE-MAP-NV", (GLenum) GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV, "GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV");
#endif
#if defined(GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV)
defconsti(env, "GL-DOT-PRODUCT-DIFFUSE-CUBE-MAP-NV", (GLenum) GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV, "GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV");
#endif
#if defined(GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV)
defconsti(env, "GL-DOT-PRODUCT-REFLECT-CUBE-MAP-NV", (GLenum) GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV, "GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV");
#endif
#if defined(GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV)
defconsti(env, "GL-DOT-PRODUCT-CONST-EYE-REFLECT-CUBE-MAP-NV", (GLenum) GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV, "GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV");
#endif
#if defined(GL_HILO_NV)
defconsti(env, "GL-HILO-NV", (GLenum) GL_HILO_NV, "GL_HILO_NV");
#endif
#if defined(GL_DSDT_NV)
defconsti(env, "GL-DSDT-NV", (GLenum) GL_DSDT_NV, "GL_DSDT_NV");
#endif
#if defined(GL_DSDT_MAG_NV)
defconsti(env, "GL-DSDT-MAG-NV", (GLenum) GL_DSDT_MAG_NV, "GL_DSDT_MAG_NV");
#endif
#if defined(GL_DSDT_MAG_VIB_NV)
defconsti(env, "GL-DSDT-MAG-VIB-NV", (GLenum) GL_DSDT_MAG_VIB_NV, "GL_DSDT_MAG_VIB_NV");
#endif
#if defined(GL_HILO16_NV)
defconsti(env, "GL-HILO16-NV", (GLenum) GL_HILO16_NV, "GL_HILO16_NV");
#endif
#if defined(GL_SIGNED_HILO_NV)
defconsti(env, "GL-SIGNED-HILO-NV", (GLenum) GL_SIGNED_HILO_NV, "GL_SIGNED_HILO_NV");
#endif
#if defined(GL_SIGNED_HILO16_NV)
defconsti(env, "GL-SIGNED-HILO16-NV", (GLenum) GL_SIGNED_HILO16_NV, "GL_SIGNED_HILO16_NV");
#endif
#if defined(GL_SIGNED_RGBA_NV)
defconsti(env, "GL-SIGNED-RGBA-NV", (GLenum) GL_SIGNED_RGBA_NV, "GL_SIGNED_RGBA_NV");
#endif
#if defined(GL_SIGNED_RGBA8_NV)
defconsti(env, "GL-SIGNED-RGBA8-NV", (GLenum) GL_SIGNED_RGBA8_NV, "GL_SIGNED_RGBA8_NV");
#endif
#if defined(GL_SURFACE_REGISTERED_NV)
defconsti(env, "GL-SURFACE-REGISTERED-NV", (GLenum) GL_SURFACE_REGISTERED_NV, "GL_SURFACE_REGISTERED_NV");
#endif
#if defined(GL_SIGNED_RGB_NV)
defconsti(env, "GL-SIGNED-RGB-NV", (GLenum) GL_SIGNED_RGB_NV, "GL_SIGNED_RGB_NV");
#endif
#if defined(GL_SIGNED_RGB8_NV)
defconsti(env, "GL-SIGNED-RGB8-NV", (GLenum) GL_SIGNED_RGB8_NV, "GL_SIGNED_RGB8_NV");
#endif
#if defined(GL_SURFACE_MAPPED_NV)
defconsti(env, "GL-SURFACE-MAPPED-NV", (GLenum) GL_SURFACE_MAPPED_NV, "GL_SURFACE_MAPPED_NV");
#endif
#if defined(GL_SIGNED_LUMINANCE_NV)
defconsti(env, "GL-SIGNED-LUMINANCE-NV", (GLenum) GL_SIGNED_LUMINANCE_NV, "GL_SIGNED_LUMINANCE_NV");
#endif
#if defined(GL_SIGNED_LUMINANCE8_NV)
defconsti(env, "GL-SIGNED-LUMINANCE8-NV", (GLenum) GL_SIGNED_LUMINANCE8_NV, "GL_SIGNED_LUMINANCE8_NV");
#endif
#if defined(GL_SIGNED_LUMINANCE_ALPHA_NV)
defconsti(env, "GL-SIGNED-LUMINANCE-ALPHA-NV", (GLenum) GL_SIGNED_LUMINANCE_ALPHA_NV, "GL_SIGNED_LUMINANCE_ALPHA_NV");
#endif
#if defined(GL_SIGNED_LUMINANCE8_ALPHA8_NV)
defconsti(env, "GL-SIGNED-LUMINANCE8-ALPHA8-NV", (GLenum) GL_SIGNED_LUMINANCE8_ALPHA8_NV, "GL_SIGNED_LUMINANCE8_ALPHA8_NV");
#endif
#if defined(GL_SIGNED_ALPHA_NV)
defconsti(env, "GL-SIGNED-ALPHA-NV", (GLenum) GL_SIGNED_ALPHA_NV, "GL_SIGNED_ALPHA_NV");
#endif
#if defined(GL_SIGNED_ALPHA8_NV)
defconsti(env, "GL-SIGNED-ALPHA8-NV", (GLenum) GL_SIGNED_ALPHA8_NV, "GL_SIGNED_ALPHA8_NV");
#endif
#if defined(GL_SIGNED_INTENSITY_NV)
defconsti(env, "GL-SIGNED-INTENSITY-NV", (GLenum) GL_SIGNED_INTENSITY_NV, "GL_SIGNED_INTENSITY_NV");
#endif
#if defined(GL_SIGNED_INTENSITY8_NV)
defconsti(env, "GL-SIGNED-INTENSITY8-NV", (GLenum) GL_SIGNED_INTENSITY8_NV, "GL_SIGNED_INTENSITY8_NV");
#endif
#if defined(GL_DSDT8_NV)
defconsti(env, "GL-DSDT8-NV", (GLenum) GL_DSDT8_NV, "GL_DSDT8_NV");
#endif
#if defined(GL_DSDT8_MAG8_NV)
defconsti(env, "GL-DSDT8-MAG8-NV", (GLenum) GL_DSDT8_MAG8_NV, "GL_DSDT8_MAG8_NV");
#endif
#if defined(GL_DSDT8_MAG8_INTENSITY8_NV)
defconsti(env, "GL-DSDT8-MAG8-INTENSITY8-NV", (GLenum) GL_DSDT8_MAG8_INTENSITY8_NV, "GL_DSDT8_MAG8_INTENSITY8_NV");
#endif
#if defined(GL_SIGNED_RGB_UNSIGNED_ALPHA_NV)
defconsti(env, "GL-SIGNED-RGB-UNSIGNED-ALPHA-NV", (GLenum) GL_SIGNED_RGB_UNSIGNED_ALPHA_NV, "GL_SIGNED_RGB_UNSIGNED_ALPHA_NV");
#endif
#if defined(GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV)
defconsti(env, "GL-SIGNED-RGB8-UNSIGNED-ALPHA8-NV", (GLenum) GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV, "GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV");
#endif
#if defined(GL_HI_SCALE_NV)
defconsti(env, "GL-HI-SCALE-NV", (GLenum) GL_HI_SCALE_NV, "GL_HI_SCALE_NV");
#endif
#if defined(GL_LO_SCALE_NV)
defconsti(env, "GL-LO-SCALE-NV", (GLenum) GL_LO_SCALE_NV, "GL_LO_SCALE_NV");
#endif
#if defined(GL_DS_SCALE_NV)
defconsti(env, "GL-DS-SCALE-NV", (GLenum) GL_DS_SCALE_NV, "GL_DS_SCALE_NV");
#endif
#if defined(GL_DT_SCALE_NV)
defconsti(env, "GL-DT-SCALE-NV", (GLenum) GL_DT_SCALE_NV, "GL_DT_SCALE_NV");
#endif
#if defined(GL_MAGNITUDE_SCALE_NV)
defconsti(env, "GL-MAGNITUDE-SCALE-NV", (GLenum) GL_MAGNITUDE_SCALE_NV, "GL_MAGNITUDE_SCALE_NV");
#endif
#if defined(GL_VIBRANCE_SCALE_NV)
defconsti(env, "GL-VIBRANCE-SCALE-NV", (GLenum) GL_VIBRANCE_SCALE_NV, "GL_VIBRANCE_SCALE_NV");
#endif
#if defined(GL_HI_BIAS_NV)
defconsti(env, "GL-HI-BIAS-NV", (GLenum) GL_HI_BIAS_NV, "GL_HI_BIAS_NV");
#endif
#if defined(GL_LO_BIAS_NV)
defconsti(env, "GL-LO-BIAS-NV", (GLenum) GL_LO_BIAS_NV, "GL_LO_BIAS_NV");
#endif
#if defined(GL_DS_BIAS_NV)
defconsti(env, "GL-DS-BIAS-NV", (GLenum) GL_DS_BIAS_NV, "GL_DS_BIAS_NV");
#endif
#if defined(GL_DT_BIAS_NV)
defconsti(env, "GL-DT-BIAS-NV", (GLenum) GL_DT_BIAS_NV, "GL_DT_BIAS_NV");
#endif
#if defined(GL_MAGNITUDE_BIAS_NV)
defconsti(env, "GL-MAGNITUDE-BIAS-NV", (GLenum) GL_MAGNITUDE_BIAS_NV, "GL_MAGNITUDE_BIAS_NV");
#endif
#if defined(GL_VIBRANCE_BIAS_NV)
defconsti(env, "GL-VIBRANCE-BIAS-NV", (GLenum) GL_VIBRANCE_BIAS_NV, "GL_VIBRANCE_BIAS_NV");
#endif
#if defined(GL_TEXTURE_BORDER_VALUES_NV)
defconsti(env, "GL-TEXTURE-BORDER-VALUES-NV", (GLenum) GL_TEXTURE_BORDER_VALUES_NV, "GL_TEXTURE_BORDER_VALUES_NV");
#endif
#if defined(GL_TEXTURE_HI_SIZE_NV)
defconsti(env, "GL-TEXTURE-HI-SIZE-NV", (GLenum) GL_TEXTURE_HI_SIZE_NV, "GL_TEXTURE_HI_SIZE_NV");
#endif
#if defined(GL_TEXTURE_LO_SIZE_NV)
defconsti(env, "GL-TEXTURE-LO-SIZE-NV", (GLenum) GL_TEXTURE_LO_SIZE_NV, "GL_TEXTURE_LO_SIZE_NV");
#endif
#if defined(GL_TEXTURE_DS_SIZE_NV)
defconsti(env, "GL-TEXTURE-DS-SIZE-NV", (GLenum) GL_TEXTURE_DS_SIZE_NV, "GL_TEXTURE_DS_SIZE_NV");
#endif
#if defined(GL_TEXTURE_DT_SIZE_NV)
defconsti(env, "GL-TEXTURE-DT-SIZE-NV", (GLenum) GL_TEXTURE_DT_SIZE_NV, "GL_TEXTURE_DT_SIZE_NV");
#endif
#if defined(GL_TEXTURE_MAG_SIZE_NV)
defconsti(env, "GL-TEXTURE-MAG-SIZE-NV", (GLenum) GL_TEXTURE_MAG_SIZE_NV, "GL_TEXTURE_MAG_SIZE_NV");
#endif
#if defined(GL_MODELVIEW2_ARB)
defconsti(env, "GL-MODELVIEW2-ARB", (GLenum) GL_MODELVIEW2_ARB, "GL_MODELVIEW2_ARB");
#endif
#if defined(GL_MODELVIEW3_ARB)
defconsti(env, "GL-MODELVIEW3-ARB", (GLenum) GL_MODELVIEW3_ARB, "GL_MODELVIEW3_ARB");
#endif
#if defined(GL_MODELVIEW4_ARB)
defconsti(env, "GL-MODELVIEW4-ARB", (GLenum) GL_MODELVIEW4_ARB, "GL_MODELVIEW4_ARB");
#endif
#if defined(GL_MODELVIEW5_ARB)
defconsti(env, "GL-MODELVIEW5-ARB", (GLenum) GL_MODELVIEW5_ARB, "GL_MODELVIEW5_ARB");
#endif
#if defined(GL_MODELVIEW6_ARB)
defconsti(env, "GL-MODELVIEW6-ARB", (GLenum) GL_MODELVIEW6_ARB, "GL_MODELVIEW6_ARB");
#endif
#if defined(GL_MODELVIEW7_ARB)
defconsti(env, "GL-MODELVIEW7-ARB", (GLenum) GL_MODELVIEW7_ARB, "GL_MODELVIEW7_ARB");
#endif
#if defined(GL_MODELVIEW8_ARB)
defconsti(env, "GL-MODELVIEW8-ARB", (GLenum) GL_MODELVIEW8_ARB, "GL_MODELVIEW8_ARB");
#endif
#if defined(GL_MODELVIEW9_ARB)
defconsti(env, "GL-MODELVIEW9-ARB", (GLenum) GL_MODELVIEW9_ARB, "GL_MODELVIEW9_ARB");
#endif
#if defined(GL_MODELVIEW10_ARB)
defconsti(env, "GL-MODELVIEW10-ARB", (GLenum) GL_MODELVIEW10_ARB, "GL_MODELVIEW10_ARB");
#endif
#if defined(GL_MODELVIEW11_ARB)
defconsti(env, "GL-MODELVIEW11-ARB", (GLenum) GL_MODELVIEW11_ARB, "GL_MODELVIEW11_ARB");
#endif
#if defined(GL_MODELVIEW12_ARB)
defconsti(env, "GL-MODELVIEW12-ARB", (GLenum) GL_MODELVIEW12_ARB, "GL_MODELVIEW12_ARB");
#endif
#if defined(GL_MODELVIEW13_ARB)
defconsti(env, "GL-MODELVIEW13-ARB", (GLenum) GL_MODELVIEW13_ARB, "GL_MODELVIEW13_ARB");
#endif
#if defined(GL_MODELVIEW14_ARB)
defconsti(env, "GL-MODELVIEW14-ARB", (GLenum) GL_MODELVIEW14_ARB, "GL_MODELVIEW14_ARB");
#endif
#if defined(GL_MODELVIEW15_ARB)
defconsti(env, "GL-MODELVIEW15-ARB", (GLenum) GL_MODELVIEW15_ARB, "GL_MODELVIEW15_ARB");
#endif
#if defined(GL_MODELVIEW16_ARB)
defconsti(env, "GL-MODELVIEW16-ARB", (GLenum) GL_MODELVIEW16_ARB, "GL_MODELVIEW16_ARB");
#endif
#if defined(GL_MODELVIEW17_ARB)
defconsti(env, "GL-MODELVIEW17-ARB", (GLenum) GL_MODELVIEW17_ARB, "GL_MODELVIEW17_ARB");
#endif
#if defined(GL_MODELVIEW18_ARB)
defconsti(env, "GL-MODELVIEW18-ARB", (GLenum) GL_MODELVIEW18_ARB, "GL_MODELVIEW18_ARB");
#endif
#if defined(GL_MODELVIEW19_ARB)
defconsti(env, "GL-MODELVIEW19-ARB", (GLenum) GL_MODELVIEW19_ARB, "GL_MODELVIEW19_ARB");
#endif
#if defined(GL_MODELVIEW20_ARB)
defconsti(env, "GL-MODELVIEW20-ARB", (GLenum) GL_MODELVIEW20_ARB, "GL_MODELVIEW20_ARB");
#endif
#if defined(GL_MODELVIEW21_ARB)
defconsti(env, "GL-MODELVIEW21-ARB", (GLenum) GL_MODELVIEW21_ARB, "GL_MODELVIEW21_ARB");
#endif
#if defined(GL_MODELVIEW22_ARB)
defconsti(env, "GL-MODELVIEW22-ARB", (GLenum) GL_MODELVIEW22_ARB, "GL_MODELVIEW22_ARB");
#endif
#if defined(GL_MODELVIEW23_ARB)
defconsti(env, "GL-MODELVIEW23-ARB", (GLenum) GL_MODELVIEW23_ARB, "GL_MODELVIEW23_ARB");
#endif
#if defined(GL_MODELVIEW24_ARB)
defconsti(env, "GL-MODELVIEW24-ARB", (GLenum) GL_MODELVIEW24_ARB, "GL_MODELVIEW24_ARB");
#endif
#if defined(GL_MODELVIEW25_ARB)
defconsti(env, "GL-MODELVIEW25-ARB", (GLenum) GL_MODELVIEW25_ARB, "GL_MODELVIEW25_ARB");
#endif
#if defined(GL_MODELVIEW26_ARB)
defconsti(env, "GL-MODELVIEW26-ARB", (GLenum) GL_MODELVIEW26_ARB, "GL_MODELVIEW26_ARB");
#endif
#if defined(GL_MODELVIEW27_ARB)
defconsti(env, "GL-MODELVIEW27-ARB", (GLenum) GL_MODELVIEW27_ARB, "GL_MODELVIEW27_ARB");
#endif
#if defined(GL_MODELVIEW28_ARB)
defconsti(env, "GL-MODELVIEW28-ARB", (GLenum) GL_MODELVIEW28_ARB, "GL_MODELVIEW28_ARB");
#endif
#if defined(GL_MODELVIEW29_ARB)
defconsti(env, "GL-MODELVIEW29-ARB", (GLenum) GL_MODELVIEW29_ARB, "GL_MODELVIEW29_ARB");
#endif
#if defined(GL_MODELVIEW30_ARB)
defconsti(env, "GL-MODELVIEW30-ARB", (GLenum) GL_MODELVIEW30_ARB, "GL_MODELVIEW30_ARB");
#endif
#if defined(GL_MODELVIEW31_ARB)
defconsti(env, "GL-MODELVIEW31-ARB", (GLenum) GL_MODELVIEW31_ARB, "GL_MODELVIEW31_ARB");
#endif
#if defined(GL_DOT3_RGB_EXT)
defconsti(env, "GL-DOT3-RGB-EXT", (GLenum) GL_DOT3_RGB_EXT, "GL_DOT3_RGB_EXT");
#endif
#if defined(GL_Z400_BINARY_AMD)
defconsti(env, "GL-Z400-BINARY-AMD", (GLenum) GL_Z400_BINARY_AMD, "GL_Z400_BINARY_AMD");
#endif
#if defined(GL_DOT3_RGBA_EXT)
defconsti(env, "GL-DOT3-RGBA-EXT", (GLenum) GL_DOT3_RGBA_EXT, "GL_DOT3_RGBA_EXT");
#endif
#if defined(GL_PROGRAM_BINARY_LENGTH_OES)
defconsti(env, "GL-PROGRAM-BINARY-LENGTH-OES", (GLenum) GL_PROGRAM_BINARY_LENGTH_OES, "GL_PROGRAM_BINARY_LENGTH_OES");
#endif
#if defined(GL_PROGRAM_BINARY_LENGTH)
defconsti(env, "GL-PROGRAM-BINARY-LENGTH", (GLenum) GL_PROGRAM_BINARY_LENGTH, "GL_PROGRAM_BINARY_LENGTH");
#endif
#if defined(GL_MIRROR_CLAMP_ATI)
defconsti(env, "GL-MIRROR-CLAMP-ATI", (GLenum) GL_MIRROR_CLAMP_ATI, "GL_MIRROR_CLAMP_ATI");
#endif
#if defined(GL_MIRROR_CLAMP_EXT)
defconsti(env, "GL-MIRROR-CLAMP-EXT", (GLenum) GL_MIRROR_CLAMP_EXT, "GL_MIRROR_CLAMP_EXT");
#endif
#if defined(GL_MIRROR_CLAMP_TO_EDGE)
defconsti(env, "GL-MIRROR-CLAMP-TO-EDGE", (GLenum) GL_MIRROR_CLAMP_TO_EDGE, "GL_MIRROR_CLAMP_TO_EDGE");
#endif
#if defined(GL_MIRROR_CLAMP_TO_EDGE_ATI)
defconsti(env, "GL-MIRROR-CLAMP-TO-EDGE-ATI", (GLenum) GL_MIRROR_CLAMP_TO_EDGE_ATI, "GL_MIRROR_CLAMP_TO_EDGE_ATI");
#endif
#if defined(GL_MIRROR_CLAMP_TO_EDGE_EXT)
defconsti(env, "GL-MIRROR-CLAMP-TO-EDGE-EXT", (GLenum) GL_MIRROR_CLAMP_TO_EDGE_EXT, "GL_MIRROR_CLAMP_TO_EDGE_EXT");
#endif
#if defined(GL_MODULATE_ADD_ATI)
defconsti(env, "GL-MODULATE-ADD-ATI", (GLenum) GL_MODULATE_ADD_ATI, "GL_MODULATE_ADD_ATI");
#endif
#if defined(GL_MODULATE_SIGNED_ADD_ATI)
defconsti(env, "GL-MODULATE-SIGNED-ADD-ATI", (GLenum) GL_MODULATE_SIGNED_ADD_ATI, "GL_MODULATE_SIGNED_ADD_ATI");
#endif
#if defined(GL_MODULATE_SUBTRACT_ATI)
defconsti(env, "GL-MODULATE-SUBTRACT-ATI", (GLenum) GL_MODULATE_SUBTRACT_ATI, "GL_MODULATE_SUBTRACT_ATI");
#endif
#if defined(GL_SET_AMD)
defconsti(env, "GL-SET-AMD", (GLenum) GL_SET_AMD, "GL_SET_AMD");
#endif
#if defined(GL_REPLACE_VALUE_AMD)
defconsti(env, "GL-REPLACE-VALUE-AMD", (GLenum) GL_REPLACE_VALUE_AMD, "GL_REPLACE_VALUE_AMD");
#endif
#if defined(GL_STENCIL_OP_VALUE_AMD)
defconsti(env, "GL-STENCIL-OP-VALUE-AMD", (GLenum) GL_STENCIL_OP_VALUE_AMD, "GL_STENCIL_OP_VALUE_AMD");
#endif
#if defined(GL_STENCIL_BACK_OP_VALUE_AMD)
defconsti(env, "GL-STENCIL-BACK-OP-VALUE-AMD", (GLenum) GL_STENCIL_BACK_OP_VALUE_AMD, "GL_STENCIL_BACK_OP_VALUE_AMD");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_LONG)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-LONG", (GLenum) GL_VERTEX_ATTRIB_ARRAY_LONG, "GL_VERTEX_ATTRIB_ARRAY_LONG");
#endif
#if defined(GL_OCCLUSION_QUERY_EVENT_MASK_AMD)
defconsti(env, "GL-OCCLUSION-QUERY-EVENT-MASK-AMD", (GLenum) GL_OCCLUSION_QUERY_EVENT_MASK_AMD, "GL_OCCLUSION_QUERY_EVENT_MASK_AMD");
#endif
#if defined(GL_DEPTH_STENCIL_MESA)
defconsti(env, "GL-DEPTH-STENCIL-MESA", (GLenum) GL_DEPTH_STENCIL_MESA, "GL_DEPTH_STENCIL_MESA");
#endif
#if defined(GL_UNSIGNED_INT_24_8_MESA)
defconsti(env, "GL-UNSIGNED-INT-24-8-MESA", (GLenum) GL_UNSIGNED_INT_24_8_MESA, "GL_UNSIGNED_INT_24_8_MESA");
#endif
#if defined(GL_UNSIGNED_INT_8_24_REV_MESA)
defconsti(env, "GL-UNSIGNED-INT-8-24-REV-MESA", (GLenum) GL_UNSIGNED_INT_8_24_REV_MESA, "GL_UNSIGNED_INT_8_24_REV_MESA");
#endif
#if defined(GL_UNSIGNED_SHORT_15_1_MESA)
defconsti(env, "GL-UNSIGNED-SHORT-15-1-MESA", (GLenum) GL_UNSIGNED_SHORT_15_1_MESA, "GL_UNSIGNED_SHORT_15_1_MESA");
#endif
#if defined(GL_UNSIGNED_SHORT_1_15_REV_MESA)
defconsti(env, "GL-UNSIGNED-SHORT-1-15-REV-MESA", (GLenum) GL_UNSIGNED_SHORT_1_15_REV_MESA, "GL_UNSIGNED_SHORT_1_15_REV_MESA");
#endif
#if defined(GL_TRACE_MASK_MESA)
defconsti(env, "GL-TRACE-MASK-MESA", (GLenum) GL_TRACE_MASK_MESA, "GL_TRACE_MASK_MESA");
#endif
#if defined(GL_TRACE_NAME_MESA)
defconsti(env, "GL-TRACE-NAME-MESA", (GLenum) GL_TRACE_NAME_MESA, "GL_TRACE_NAME_MESA");
#endif
#if defined(GL_YCBCR_MESA)
defconsti(env, "GL-YCBCR-MESA", (GLenum) GL_YCBCR_MESA, "GL_YCBCR_MESA");
#endif
#if defined(GL_PACK_INVERT_MESA)
defconsti(env, "GL-PACK-INVERT-MESA", (GLenum) GL_PACK_INVERT_MESA, "GL_PACK_INVERT_MESA");
#endif
#if defined(GL_DEBUG_OBJECT_MESA)
defconsti(env, "GL-DEBUG-OBJECT-MESA", (GLenum) GL_DEBUG_OBJECT_MESA, "GL_DEBUG_OBJECT_MESA");
#endif
#if defined(GL_TEXTURE_1D_STACK_MESAX)
defconsti(env, "GL-TEXTURE-1D-STACK-MESAX", (GLenum) GL_TEXTURE_1D_STACK_MESAX, "GL_TEXTURE_1D_STACK_MESAX");
#endif
#if defined(GL_DEBUG_PRINT_MESA)
defconsti(env, "GL-DEBUG-PRINT-MESA", (GLenum) GL_DEBUG_PRINT_MESA, "GL_DEBUG_PRINT_MESA");
#endif
#if defined(GL_TEXTURE_2D_STACK_MESAX)
defconsti(env, "GL-TEXTURE-2D-STACK-MESAX", (GLenum) GL_TEXTURE_2D_STACK_MESAX, "GL_TEXTURE_2D_STACK_MESAX");
#endif
#if defined(GL_DEBUG_ASSERT_MESA)
defconsti(env, "GL-DEBUG-ASSERT-MESA", (GLenum) GL_DEBUG_ASSERT_MESA, "GL_DEBUG_ASSERT_MESA");
#endif
#if defined(GL_PROXY_TEXTURE_1D_STACK_MESAX)
defconsti(env, "GL-PROXY-TEXTURE-1D-STACK-MESAX", (GLenum) GL_PROXY_TEXTURE_1D_STACK_MESAX, "GL_PROXY_TEXTURE_1D_STACK_MESAX");
#endif
#if defined(GL_PROXY_TEXTURE_2D_STACK_MESAX)
defconsti(env, "GL-PROXY-TEXTURE-2D-STACK-MESAX", (GLenum) GL_PROXY_TEXTURE_2D_STACK_MESAX, "GL_PROXY_TEXTURE_2D_STACK_MESAX");
#endif
#if defined(GL_TEXTURE_1D_STACK_BINDING_MESAX)
defconsti(env, "GL-TEXTURE-1D-STACK-BINDING-MESAX", (GLenum) GL_TEXTURE_1D_STACK_BINDING_MESAX, "GL_TEXTURE_1D_STACK_BINDING_MESAX");
#endif
#if defined(GL_TEXTURE_2D_STACK_BINDING_MESAX)
defconsti(env, "GL-TEXTURE-2D-STACK-BINDING-MESAX", (GLenum) GL_TEXTURE_2D_STACK_BINDING_MESAX, "GL_TEXTURE_2D_STACK_BINDING_MESAX");
#endif
#if defined(GL_PROGRAM_BINARY_FORMAT_MESA)
defconsti(env, "GL-PROGRAM-BINARY-FORMAT-MESA", (GLenum) GL_PROGRAM_BINARY_FORMAT_MESA, "GL_PROGRAM_BINARY_FORMAT_MESA");
#endif
#if defined(GL_STATIC_ATI)
defconsti(env, "GL-STATIC-ATI", (GLenum) GL_STATIC_ATI, "GL_STATIC_ATI");
#endif
#if defined(GL_DYNAMIC_ATI)
defconsti(env, "GL-DYNAMIC-ATI", (GLenum) GL_DYNAMIC_ATI, "GL_DYNAMIC_ATI");
#endif
#if defined(GL_PRESERVE_ATI)
defconsti(env, "GL-PRESERVE-ATI", (GLenum) GL_PRESERVE_ATI, "GL_PRESERVE_ATI");
#endif
#if defined(GL_DISCARD_ATI)
defconsti(env, "GL-DISCARD-ATI", (GLenum) GL_DISCARD_ATI, "GL_DISCARD_ATI");
#endif
#if defined(GL_BUFFER_SIZE)
defconsti(env, "GL-BUFFER-SIZE", (GLenum) GL_BUFFER_SIZE, "GL_BUFFER_SIZE");
#endif
#if defined(GL_BUFFER_SIZE_ARB)
defconsti(env, "GL-BUFFER-SIZE-ARB", (GLenum) GL_BUFFER_SIZE_ARB, "GL_BUFFER_SIZE_ARB");
#endif
#if defined(GL_OBJECT_BUFFER_SIZE_ATI)
defconsti(env, "GL-OBJECT-BUFFER-SIZE-ATI", (GLenum) GL_OBJECT_BUFFER_SIZE_ATI, "GL_OBJECT_BUFFER_SIZE_ATI");
#endif
#if defined(GL_BUFFER_USAGE)
defconsti(env, "GL-BUFFER-USAGE", (GLenum) GL_BUFFER_USAGE, "GL_BUFFER_USAGE");
#endif
#if defined(GL_BUFFER_USAGE_ARB)
defconsti(env, "GL-BUFFER-USAGE-ARB", (GLenum) GL_BUFFER_USAGE_ARB, "GL_BUFFER_USAGE_ARB");
#endif
#if defined(GL_OBJECT_BUFFER_USAGE_ATI)
defconsti(env, "GL-OBJECT-BUFFER-USAGE-ATI", (GLenum) GL_OBJECT_BUFFER_USAGE_ATI, "GL_OBJECT_BUFFER_USAGE_ATI");
#endif
#if defined(GL_ARRAY_OBJECT_BUFFER_ATI)
defconsti(env, "GL-ARRAY-OBJECT-BUFFER-ATI", (GLenum) GL_ARRAY_OBJECT_BUFFER_ATI, "GL_ARRAY_OBJECT_BUFFER_ATI");
#endif
#if defined(GL_ARRAY_OBJECT_OFFSET_ATI)
defconsti(env, "GL-ARRAY-OBJECT-OFFSET-ATI", (GLenum) GL_ARRAY_OBJECT_OFFSET_ATI, "GL_ARRAY_OBJECT_OFFSET_ATI");
#endif
#if defined(GL_ELEMENT_ARRAY_ATI)
defconsti(env, "GL-ELEMENT-ARRAY-ATI", (GLenum) GL_ELEMENT_ARRAY_ATI, "GL_ELEMENT_ARRAY_ATI");
#endif
#if defined(GL_ELEMENT_ARRAY_TYPE_ATI)
defconsti(env, "GL-ELEMENT-ARRAY-TYPE-ATI", (GLenum) GL_ELEMENT_ARRAY_TYPE_ATI, "GL_ELEMENT_ARRAY_TYPE_ATI");
#endif
#if defined(GL_ELEMENT_ARRAY_POINTER_ATI)
defconsti(env, "GL-ELEMENT-ARRAY-POINTER-ATI", (GLenum) GL_ELEMENT_ARRAY_POINTER_ATI, "GL_ELEMENT_ARRAY_POINTER_ATI");
#endif
#if defined(GL_MAX_VERTEX_STREAMS_ATI)
defconsti(env, "GL-MAX-VERTEX-STREAMS-ATI", (GLenum) GL_MAX_VERTEX_STREAMS_ATI, "GL_MAX_VERTEX_STREAMS_ATI");
#endif
#if defined(GL_VERTEX_STREAM0_ATI)
defconsti(env, "GL-VERTEX-STREAM0-ATI", (GLenum) GL_VERTEX_STREAM0_ATI, "GL_VERTEX_STREAM0_ATI");
#endif
#if defined(GL_VERTEX_STREAM1_ATI)
defconsti(env, "GL-VERTEX-STREAM1-ATI", (GLenum) GL_VERTEX_STREAM1_ATI, "GL_VERTEX_STREAM1_ATI");
#endif
#if defined(GL_VERTEX_STREAM2_ATI)
defconsti(env, "GL-VERTEX-STREAM2-ATI", (GLenum) GL_VERTEX_STREAM2_ATI, "GL_VERTEX_STREAM2_ATI");
#endif
#if defined(GL_VERTEX_STREAM3_ATI)
defconsti(env, "GL-VERTEX-STREAM3-ATI", (GLenum) GL_VERTEX_STREAM3_ATI, "GL_VERTEX_STREAM3_ATI");
#endif
#if defined(GL_VERTEX_STREAM4_ATI)
defconsti(env, "GL-VERTEX-STREAM4-ATI", (GLenum) GL_VERTEX_STREAM4_ATI, "GL_VERTEX_STREAM4_ATI");
#endif
#if defined(GL_VERTEX_STREAM5_ATI)
defconsti(env, "GL-VERTEX-STREAM5-ATI", (GLenum) GL_VERTEX_STREAM5_ATI, "GL_VERTEX_STREAM5_ATI");
#endif
#if defined(GL_VERTEX_STREAM6_ATI)
defconsti(env, "GL-VERTEX-STREAM6-ATI", (GLenum) GL_VERTEX_STREAM6_ATI, "GL_VERTEX_STREAM6_ATI");
#endif
#if defined(GL_VERTEX_STREAM7_ATI)
defconsti(env, "GL-VERTEX-STREAM7-ATI", (GLenum) GL_VERTEX_STREAM7_ATI, "GL_VERTEX_STREAM7_ATI");
#endif
#if defined(GL_VERTEX_SOURCE_ATI)
defconsti(env, "GL-VERTEX-SOURCE-ATI", (GLenum) GL_VERTEX_SOURCE_ATI, "GL_VERTEX_SOURCE_ATI");
#endif
#if defined(GL_BUMP_ROT_MATRIX_ATI)
defconsti(env, "GL-BUMP-ROT-MATRIX-ATI", (GLenum) GL_BUMP_ROT_MATRIX_ATI, "GL_BUMP_ROT_MATRIX_ATI");
#endif
#if defined(GL_BUMP_ROT_MATRIX_SIZE_ATI)
defconsti(env, "GL-BUMP-ROT-MATRIX-SIZE-ATI", (GLenum) GL_BUMP_ROT_MATRIX_SIZE_ATI, "GL_BUMP_ROT_MATRIX_SIZE_ATI");
#endif
#if defined(GL_BUMP_NUM_TEX_UNITS_ATI)
defconsti(env, "GL-BUMP-NUM-TEX-UNITS-ATI", (GLenum) GL_BUMP_NUM_TEX_UNITS_ATI, "GL_BUMP_NUM_TEX_UNITS_ATI");
#endif
#if defined(GL_BUMP_TEX_UNITS_ATI)
defconsti(env, "GL-BUMP-TEX-UNITS-ATI", (GLenum) GL_BUMP_TEX_UNITS_ATI, "GL_BUMP_TEX_UNITS_ATI");
#endif
#if defined(GL_DUDV_ATI)
defconsti(env, "GL-DUDV-ATI", (GLenum) GL_DUDV_ATI, "GL_DUDV_ATI");
#endif
#if defined(GL_DU8DV8_ATI)
defconsti(env, "GL-DU8DV8-ATI", (GLenum) GL_DU8DV8_ATI, "GL_DU8DV8_ATI");
#endif
#if defined(GL_BUMP_ENVMAP_ATI)
defconsti(env, "GL-BUMP-ENVMAP-ATI", (GLenum) GL_BUMP_ENVMAP_ATI, "GL_BUMP_ENVMAP_ATI");
#endif
#if defined(GL_BUMP_TARGET_ATI)
defconsti(env, "GL-BUMP-TARGET-ATI", (GLenum) GL_BUMP_TARGET_ATI, "GL_BUMP_TARGET_ATI");
#endif
#if defined(GL_VERTEX_SHADER_EXT)
defconsti(env, "GL-VERTEX-SHADER-EXT", (GLenum) GL_VERTEX_SHADER_EXT, "GL_VERTEX_SHADER_EXT");
#endif
#if defined(GL_VERTEX_SHADER_BINDING_EXT)
defconsti(env, "GL-VERTEX-SHADER-BINDING-EXT", (GLenum) GL_VERTEX_SHADER_BINDING_EXT, "GL_VERTEX_SHADER_BINDING_EXT");
#endif
#if defined(GL_OP_INDEX_EXT)
defconsti(env, "GL-OP-INDEX-EXT", (GLenum) GL_OP_INDEX_EXT, "GL_OP_INDEX_EXT");
#endif
#if defined(GL_OP_NEGATE_EXT)
defconsti(env, "GL-OP-NEGATE-EXT", (GLenum) GL_OP_NEGATE_EXT, "GL_OP_NEGATE_EXT");
#endif
#if defined(GL_OP_DOT3_EXT)
defconsti(env, "GL-OP-DOT3-EXT", (GLenum) GL_OP_DOT3_EXT, "GL_OP_DOT3_EXT");
#endif
#if defined(GL_OP_DOT4_EXT)
defconsti(env, "GL-OP-DOT4-EXT", (GLenum) GL_OP_DOT4_EXT, "GL_OP_DOT4_EXT");
#endif
#if defined(GL_OP_MUL_EXT)
defconsti(env, "GL-OP-MUL-EXT", (GLenum) GL_OP_MUL_EXT, "GL_OP_MUL_EXT");
#endif
#if defined(GL_OP_ADD_EXT)
defconsti(env, "GL-OP-ADD-EXT", (GLenum) GL_OP_ADD_EXT, "GL_OP_ADD_EXT");
#endif
#if defined(GL_OP_MADD_EXT)
defconsti(env, "GL-OP-MADD-EXT", (GLenum) GL_OP_MADD_EXT, "GL_OP_MADD_EXT");
#endif
#if defined(GL_OP_FRAC_EXT)
defconsti(env, "GL-OP-FRAC-EXT", (GLenum) GL_OP_FRAC_EXT, "GL_OP_FRAC_EXT");
#endif
#if defined(GL_OP_MAX_EXT)
defconsti(env, "GL-OP-MAX-EXT", (GLenum) GL_OP_MAX_EXT, "GL_OP_MAX_EXT");
#endif
#if defined(GL_OP_MIN_EXT)
defconsti(env, "GL-OP-MIN-EXT", (GLenum) GL_OP_MIN_EXT, "GL_OP_MIN_EXT");
#endif
#if defined(GL_OP_SET_GE_EXT)
defconsti(env, "GL-OP-SET-GE-EXT", (GLenum) GL_OP_SET_GE_EXT, "GL_OP_SET_GE_EXT");
#endif
#if defined(GL_OP_SET_LT_EXT)
defconsti(env, "GL-OP-SET-LT-EXT", (GLenum) GL_OP_SET_LT_EXT, "GL_OP_SET_LT_EXT");
#endif
#if defined(GL_OP_CLAMP_EXT)
defconsti(env, "GL-OP-CLAMP-EXT", (GLenum) GL_OP_CLAMP_EXT, "GL_OP_CLAMP_EXT");
#endif
#if defined(GL_OP_FLOOR_EXT)
defconsti(env, "GL-OP-FLOOR-EXT", (GLenum) GL_OP_FLOOR_EXT, "GL_OP_FLOOR_EXT");
#endif
#if defined(GL_OP_ROUND_EXT)
defconsti(env, "GL-OP-ROUND-EXT", (GLenum) GL_OP_ROUND_EXT, "GL_OP_ROUND_EXT");
#endif
#if defined(GL_OP_EXP_BASE_2_EXT)
defconsti(env, "GL-OP-EXP-BASE-2-EXT", (GLenum) GL_OP_EXP_BASE_2_EXT, "GL_OP_EXP_BASE_2_EXT");
#endif
#if defined(GL_OP_LOG_BASE_2_EXT)
defconsti(env, "GL-OP-LOG-BASE-2-EXT", (GLenum) GL_OP_LOG_BASE_2_EXT, "GL_OP_LOG_BASE_2_EXT");
#endif
#if defined(GL_OP_POWER_EXT)
defconsti(env, "GL-OP-POWER-EXT", (GLenum) GL_OP_POWER_EXT, "GL_OP_POWER_EXT");
#endif
#if defined(GL_OP_RECIP_EXT)
defconsti(env, "GL-OP-RECIP-EXT", (GLenum) GL_OP_RECIP_EXT, "GL_OP_RECIP_EXT");
#endif
#if defined(GL_OP_RECIP_SQRT_EXT)
defconsti(env, "GL-OP-RECIP-SQRT-EXT", (GLenum) GL_OP_RECIP_SQRT_EXT, "GL_OP_RECIP_SQRT_EXT");
#endif
#if defined(GL_OP_SUB_EXT)
defconsti(env, "GL-OP-SUB-EXT", (GLenum) GL_OP_SUB_EXT, "GL_OP_SUB_EXT");
#endif
#if defined(GL_OP_CROSS_PRODUCT_EXT)
defconsti(env, "GL-OP-CROSS-PRODUCT-EXT", (GLenum) GL_OP_CROSS_PRODUCT_EXT, "GL_OP_CROSS_PRODUCT_EXT");
#endif
#if defined(GL_OP_MULTIPLY_MATRIX_EXT)
defconsti(env, "GL-OP-MULTIPLY-MATRIX-EXT", (GLenum) GL_OP_MULTIPLY_MATRIX_EXT, "GL_OP_MULTIPLY_MATRIX_EXT");
#endif
#if defined(GL_OP_MOV_EXT)
defconsti(env, "GL-OP-MOV-EXT", (GLenum) GL_OP_MOV_EXT, "GL_OP_MOV_EXT");
#endif
#if defined(GL_OUTPUT_VERTEX_EXT)
defconsti(env, "GL-OUTPUT-VERTEX-EXT", (GLenum) GL_OUTPUT_VERTEX_EXT, "GL_OUTPUT_VERTEX_EXT");
#endif
#if defined(GL_OUTPUT_COLOR0_EXT)
defconsti(env, "GL-OUTPUT-COLOR0-EXT", (GLenum) GL_OUTPUT_COLOR0_EXT, "GL_OUTPUT_COLOR0_EXT");
#endif
#if defined(GL_OUTPUT_COLOR1_EXT)
defconsti(env, "GL-OUTPUT-COLOR1-EXT", (GLenum) GL_OUTPUT_COLOR1_EXT, "GL_OUTPUT_COLOR1_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD0_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD0-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD0_EXT, "GL_OUTPUT_TEXTURE_COORD0_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD1_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD1-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD1_EXT, "GL_OUTPUT_TEXTURE_COORD1_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD2_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD2-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD2_EXT, "GL_OUTPUT_TEXTURE_COORD2_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD3_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD3-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD3_EXT, "GL_OUTPUT_TEXTURE_COORD3_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD4_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD4-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD4_EXT, "GL_OUTPUT_TEXTURE_COORD4_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD5_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD5-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD5_EXT, "GL_OUTPUT_TEXTURE_COORD5_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD6_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD6-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD6_EXT, "GL_OUTPUT_TEXTURE_COORD6_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD7_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD7-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD7_EXT, "GL_OUTPUT_TEXTURE_COORD7_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD8_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD8-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD8_EXT, "GL_OUTPUT_TEXTURE_COORD8_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD9_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD9-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD9_EXT, "GL_OUTPUT_TEXTURE_COORD9_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD10_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD10-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD10_EXT, "GL_OUTPUT_TEXTURE_COORD10_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD11_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD11-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD11_EXT, "GL_OUTPUT_TEXTURE_COORD11_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD12_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD12-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD12_EXT, "GL_OUTPUT_TEXTURE_COORD12_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD13_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD13-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD13_EXT, "GL_OUTPUT_TEXTURE_COORD13_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD14_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD14-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD14_EXT, "GL_OUTPUT_TEXTURE_COORD14_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD15_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD15-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD15_EXT, "GL_OUTPUT_TEXTURE_COORD15_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD16_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD16-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD16_EXT, "GL_OUTPUT_TEXTURE_COORD16_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD17_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD17-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD17_EXT, "GL_OUTPUT_TEXTURE_COORD17_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD18_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD18-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD18_EXT, "GL_OUTPUT_TEXTURE_COORD18_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD19_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD19-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD19_EXT, "GL_OUTPUT_TEXTURE_COORD19_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD20_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD20-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD20_EXT, "GL_OUTPUT_TEXTURE_COORD20_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD21_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD21-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD21_EXT, "GL_OUTPUT_TEXTURE_COORD21_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD22_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD22-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD22_EXT, "GL_OUTPUT_TEXTURE_COORD22_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD23_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD23-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD23_EXT, "GL_OUTPUT_TEXTURE_COORD23_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD24_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD24-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD24_EXT, "GL_OUTPUT_TEXTURE_COORD24_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD25_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD25-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD25_EXT, "GL_OUTPUT_TEXTURE_COORD25_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD26_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD26-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD26_EXT, "GL_OUTPUT_TEXTURE_COORD26_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD27_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD27-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD27_EXT, "GL_OUTPUT_TEXTURE_COORD27_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD28_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD28-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD28_EXT, "GL_OUTPUT_TEXTURE_COORD28_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD29_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD29-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD29_EXT, "GL_OUTPUT_TEXTURE_COORD29_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD30_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD30-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD30_EXT, "GL_OUTPUT_TEXTURE_COORD30_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD31_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD31-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD31_EXT, "GL_OUTPUT_TEXTURE_COORD31_EXT");
#endif
#if defined(GL_OUTPUT_FOG_EXT)
defconsti(env, "GL-OUTPUT-FOG-EXT", (GLenum) GL_OUTPUT_FOG_EXT, "GL_OUTPUT_FOG_EXT");
#endif
#if defined(GL_SCALAR_EXT)
defconsti(env, "GL-SCALAR-EXT", (GLenum) GL_SCALAR_EXT, "GL_SCALAR_EXT");
#endif
#if defined(GL_VECTOR_EXT)
defconsti(env, "GL-VECTOR-EXT", (GLenum) GL_VECTOR_EXT, "GL_VECTOR_EXT");
#endif
#if defined(GL_MATRIX_EXT)
defconsti(env, "GL-MATRIX-EXT", (GLenum) GL_MATRIX_EXT, "GL_MATRIX_EXT");
#endif
#if defined(GL_VARIANT_EXT)
defconsti(env, "GL-VARIANT-EXT", (GLenum) GL_VARIANT_EXT, "GL_VARIANT_EXT");
#endif
#if defined(GL_INVARIANT_EXT)
defconsti(env, "GL-INVARIANT-EXT", (GLenum) GL_INVARIANT_EXT, "GL_INVARIANT_EXT");
#endif
#if defined(GL_LOCAL_CONSTANT_EXT)
defconsti(env, "GL-LOCAL-CONSTANT-EXT", (GLenum) GL_LOCAL_CONSTANT_EXT, "GL_LOCAL_CONSTANT_EXT");
#endif
#if defined(GL_LOCAL_EXT)
defconsti(env, "GL-LOCAL-EXT", (GLenum) GL_LOCAL_EXT, "GL_LOCAL_EXT");
#endif
#if defined(GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT)
defconsti(env, "GL-MAX-VERTEX-SHADER-INSTRUCTIONS-EXT", (GLenum) GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT, "GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT");
#endif
#if defined(GL_MAX_VERTEX_SHADER_VARIANTS_EXT)
defconsti(env, "GL-MAX-VERTEX-SHADER-VARIANTS-EXT", (GLenum) GL_MAX_VERTEX_SHADER_VARIANTS_EXT, "GL_MAX_VERTEX_SHADER_VARIANTS_EXT");
#endif
#if defined(GL_MAX_VERTEX_SHADER_INVARIANTS_EXT)
defconsti(env, "GL-MAX-VERTEX-SHADER-INVARIANTS-EXT", (GLenum) GL_MAX_VERTEX_SHADER_INVARIANTS_EXT, "GL_MAX_VERTEX_SHADER_INVARIANTS_EXT");
#endif
#if defined(GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT)
defconsti(env, "GL-MAX-VERTEX-SHADER-LOCAL-CONSTANTS-EXT", (GLenum) GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT, "GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT");
#endif
#if defined(GL_MAX_VERTEX_SHADER_LOCALS_EXT)
defconsti(env, "GL-MAX-VERTEX-SHADER-LOCALS-EXT", (GLenum) GL_MAX_VERTEX_SHADER_LOCALS_EXT, "GL_MAX_VERTEX_SHADER_LOCALS_EXT");
#endif
#if defined(GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT)
defconsti(env, "GL-MAX-OPTIMIZED-VERTEX-SHADER-INSTRUCTIONS-EXT", (GLenum) GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT, "GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT");
#endif
#if defined(GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT)
defconsti(env, "GL-MAX-OPTIMIZED-VERTEX-SHADER-VARIANTS-EXT", (GLenum) GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT, "GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT");
#endif
#if defined(GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT)
defconsti(env, "GL-MAX-OPTIMIZED-VERTEX-SHADER-LOCAL-CONSTANTS-EXT", (GLenum) GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT, "GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT");
#endif
#if defined(GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT)
defconsti(env, "GL-MAX-OPTIMIZED-VERTEX-SHADER-INVARIANTS-EXT", (GLenum) GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT, "GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT");
#endif
#if defined(GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT)
defconsti(env, "GL-MAX-OPTIMIZED-VERTEX-SHADER-LOCALS-EXT", (GLenum) GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT, "GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT");
#endif
#if defined(GL_VERTEX_SHADER_INSTRUCTIONS_EXT)
defconsti(env, "GL-VERTEX-SHADER-INSTRUCTIONS-EXT", (GLenum) GL_VERTEX_SHADER_INSTRUCTIONS_EXT, "GL_VERTEX_SHADER_INSTRUCTIONS_EXT");
#endif
#if defined(GL_VERTEX_SHADER_VARIANTS_EXT)
defconsti(env, "GL-VERTEX-SHADER-VARIANTS-EXT", (GLenum) GL_VERTEX_SHADER_VARIANTS_EXT, "GL_VERTEX_SHADER_VARIANTS_EXT");
#endif
#if defined(GL_VERTEX_SHADER_INVARIANTS_EXT)
defconsti(env, "GL-VERTEX-SHADER-INVARIANTS-EXT", (GLenum) GL_VERTEX_SHADER_INVARIANTS_EXT, "GL_VERTEX_SHADER_INVARIANTS_EXT");
#endif
#if defined(GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT)
defconsti(env, "GL-VERTEX-SHADER-LOCAL-CONSTANTS-EXT", (GLenum) GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT, "GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT");
#endif
#if defined(GL_VERTEX_SHADER_LOCALS_EXT)
defconsti(env, "GL-VERTEX-SHADER-LOCALS-EXT", (GLenum) GL_VERTEX_SHADER_LOCALS_EXT, "GL_VERTEX_SHADER_LOCALS_EXT");
#endif
#if defined(GL_VERTEX_SHADER_OPTIMIZED_EXT)
defconsti(env, "GL-VERTEX-SHADER-OPTIMIZED-EXT", (GLenum) GL_VERTEX_SHADER_OPTIMIZED_EXT, "GL_VERTEX_SHADER_OPTIMIZED_EXT");
#endif
#if defined(GL_X_EXT)
defconsti(env, "GL-X-EXT", (GLenum) GL_X_EXT, "GL_X_EXT");
#endif
#if defined(GL_Y_EXT)
defconsti(env, "GL-Y-EXT", (GLenum) GL_Y_EXT, "GL_Y_EXT");
#endif
#if defined(GL_Z_EXT)
defconsti(env, "GL-Z-EXT", (GLenum) GL_Z_EXT, "GL_Z_EXT");
#endif
#if defined(GL_W_EXT)
defconsti(env, "GL-W-EXT", (GLenum) GL_W_EXT, "GL_W_EXT");
#endif
#if defined(GL_NEGATIVE_X_EXT)
defconsti(env, "GL-NEGATIVE-X-EXT", (GLenum) GL_NEGATIVE_X_EXT, "GL_NEGATIVE_X_EXT");
#endif
#if defined(GL_NEGATIVE_Y_EXT)
defconsti(env, "GL-NEGATIVE-Y-EXT", (GLenum) GL_NEGATIVE_Y_EXT, "GL_NEGATIVE_Y_EXT");
#endif
#if defined(GL_NEGATIVE_Z_EXT)
defconsti(env, "GL-NEGATIVE-Z-EXT", (GLenum) GL_NEGATIVE_Z_EXT, "GL_NEGATIVE_Z_EXT");
#endif
#if defined(GL_NEGATIVE_W_EXT)
defconsti(env, "GL-NEGATIVE-W-EXT", (GLenum) GL_NEGATIVE_W_EXT, "GL_NEGATIVE_W_EXT");
#endif
#if defined(GL_ZERO_EXT)
defconsti(env, "GL-ZERO-EXT", (GLenum) GL_ZERO_EXT, "GL_ZERO_EXT");
#endif
#if defined(GL_ONE_EXT)
defconsti(env, "GL-ONE-EXT", (GLenum) GL_ONE_EXT, "GL_ONE_EXT");
#endif
#if defined(GL_NEGATIVE_ONE_EXT)
defconsti(env, "GL-NEGATIVE-ONE-EXT", (GLenum) GL_NEGATIVE_ONE_EXT, "GL_NEGATIVE_ONE_EXT");
#endif
#if defined(GL_NORMALIZED_RANGE_EXT)
defconsti(env, "GL-NORMALIZED-RANGE-EXT", (GLenum) GL_NORMALIZED_RANGE_EXT, "GL_NORMALIZED_RANGE_EXT");
#endif
#if defined(GL_FULL_RANGE_EXT)
defconsti(env, "GL-FULL-RANGE-EXT", (GLenum) GL_FULL_RANGE_EXT, "GL_FULL_RANGE_EXT");
#endif
#if defined(GL_CURRENT_VERTEX_EXT)
defconsti(env, "GL-CURRENT-VERTEX-EXT", (GLenum) GL_CURRENT_VERTEX_EXT, "GL_CURRENT_VERTEX_EXT");
#endif
#if defined(GL_MVP_MATRIX_EXT)
defconsti(env, "GL-MVP-MATRIX-EXT", (GLenum) GL_MVP_MATRIX_EXT, "GL_MVP_MATRIX_EXT");
#endif
#if defined(GL_VARIANT_VALUE_EXT)
defconsti(env, "GL-VARIANT-VALUE-EXT", (GLenum) GL_VARIANT_VALUE_EXT, "GL_VARIANT_VALUE_EXT");
#endif
#if defined(GL_VARIANT_DATATYPE_EXT)
defconsti(env, "GL-VARIANT-DATATYPE-EXT", (GLenum) GL_VARIANT_DATATYPE_EXT, "GL_VARIANT_DATATYPE_EXT");
#endif
#if defined(GL_VARIANT_ARRAY_STRIDE_EXT)
defconsti(env, "GL-VARIANT-ARRAY-STRIDE-EXT", (GLenum) GL_VARIANT_ARRAY_STRIDE_EXT, "GL_VARIANT_ARRAY_STRIDE_EXT");
#endif
#if defined(GL_VARIANT_ARRAY_TYPE_EXT)
defconsti(env, "GL-VARIANT-ARRAY-TYPE-EXT", (GLenum) GL_VARIANT_ARRAY_TYPE_EXT, "GL_VARIANT_ARRAY_TYPE_EXT");
#endif
#if defined(GL_VARIANT_ARRAY_EXT)
defconsti(env, "GL-VARIANT-ARRAY-EXT", (GLenum) GL_VARIANT_ARRAY_EXT, "GL_VARIANT_ARRAY_EXT");
#endif
#if defined(GL_VARIANT_ARRAY_POINTER_EXT)
defconsti(env, "GL-VARIANT-ARRAY-POINTER-EXT", (GLenum) GL_VARIANT_ARRAY_POINTER_EXT, "GL_VARIANT_ARRAY_POINTER_EXT");
#endif
#if defined(GL_INVARIANT_VALUE_EXT)
defconsti(env, "GL-INVARIANT-VALUE-EXT", (GLenum) GL_INVARIANT_VALUE_EXT, "GL_INVARIANT_VALUE_EXT");
#endif
#if defined(GL_INVARIANT_DATATYPE_EXT)
defconsti(env, "GL-INVARIANT-DATATYPE-EXT", (GLenum) GL_INVARIANT_DATATYPE_EXT, "GL_INVARIANT_DATATYPE_EXT");
#endif
#if defined(GL_LOCAL_CONSTANT_VALUE_EXT)
defconsti(env, "GL-LOCAL-CONSTANT-VALUE-EXT", (GLenum) GL_LOCAL_CONSTANT_VALUE_EXT, "GL_LOCAL_CONSTANT_VALUE_EXT");
#endif
#if defined(GL_LOCAL_CONSTANT_DATATYPE_EXT)
defconsti(env, "GL-LOCAL-CONSTANT-DATATYPE-EXT", (GLenum) GL_LOCAL_CONSTANT_DATATYPE_EXT, "GL_LOCAL_CONSTANT_DATATYPE_EXT");
#endif
#if defined(GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD)
defconsti(env, "GL-ATC-RGBA-INTERPOLATED-ALPHA-AMD", (GLenum) GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD, "GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD");
#endif
#if defined(GL_PN_TRIANGLES_ATI)
defconsti(env, "GL-PN-TRIANGLES-ATI", (GLenum) GL_PN_TRIANGLES_ATI, "GL_PN_TRIANGLES_ATI");
#endif
#if defined(GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI)
defconsti(env, "GL-MAX-PN-TRIANGLES-TESSELATION-LEVEL-ATI", (GLenum) GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI, "GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI");
#endif
#if defined(GL_PN_TRIANGLES_POINT_MODE_ATI)
defconsti(env, "GL-PN-TRIANGLES-POINT-MODE-ATI", (GLenum) GL_PN_TRIANGLES_POINT_MODE_ATI, "GL_PN_TRIANGLES_POINT_MODE_ATI");
#endif
#if defined(GL_PN_TRIANGLES_NORMAL_MODE_ATI)
defconsti(env, "GL-PN-TRIANGLES-NORMAL-MODE-ATI", (GLenum) GL_PN_TRIANGLES_NORMAL_MODE_ATI, "GL_PN_TRIANGLES_NORMAL_MODE_ATI");
#endif
#if defined(GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI)
defconsti(env, "GL-PN-TRIANGLES-TESSELATION-LEVEL-ATI", (GLenum) GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI, "GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI");
#endif
#if defined(GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI)
defconsti(env, "GL-PN-TRIANGLES-POINT-MODE-LINEAR-ATI", (GLenum) GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI, "GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI");
#endif
#if defined(GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI)
defconsti(env, "GL-PN-TRIANGLES-POINT-MODE-CUBIC-ATI", (GLenum) GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI, "GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI");
#endif
#if defined(GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI)
defconsti(env, "GL-PN-TRIANGLES-NORMAL-MODE-LINEAR-ATI", (GLenum) GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI, "GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI");
#endif
#if defined(GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI)
defconsti(env, "GL-PN-TRIANGLES-NORMAL-MODE-QUADRATIC-ATI", (GLenum) GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI, "GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI");
#endif
#if defined(GL_3DC_X_AMD)
defconsti(env, "GL-3DC-X-AMD", (GLenum) GL_3DC_X_AMD, "GL_3DC_X_AMD");
#endif
#if defined(GL_3DC_XY_AMD)
defconsti(env, "GL-3DC-XY-AMD", (GLenum) GL_3DC_XY_AMD, "GL_3DC_XY_AMD");
#endif
#if defined(GL_VBO_FREE_MEMORY_ATI)
defconsti(env, "GL-VBO-FREE-MEMORY-ATI", (GLenum) GL_VBO_FREE_MEMORY_ATI, "GL_VBO_FREE_MEMORY_ATI");
#endif
#if defined(GL_TEXTURE_FREE_MEMORY_ATI)
defconsti(env, "GL-TEXTURE-FREE-MEMORY-ATI", (GLenum) GL_TEXTURE_FREE_MEMORY_ATI, "GL_TEXTURE_FREE_MEMORY_ATI");
#endif
#if defined(GL_RENDERBUFFER_FREE_MEMORY_ATI)
defconsti(env, "GL-RENDERBUFFER-FREE-MEMORY-ATI", (GLenum) GL_RENDERBUFFER_FREE_MEMORY_ATI, "GL_RENDERBUFFER_FREE_MEMORY_ATI");
#endif
#if defined(GL_NUM_PROGRAM_BINARY_FORMATS)
defconsti(env, "GL-NUM-PROGRAM-BINARY-FORMATS", (GLenum) GL_NUM_PROGRAM_BINARY_FORMATS, "GL_NUM_PROGRAM_BINARY_FORMATS");
#endif
#if defined(GL_NUM_PROGRAM_BINARY_FORMATS_OES)
defconsti(env, "GL-NUM-PROGRAM-BINARY-FORMATS-OES", (GLenum) GL_NUM_PROGRAM_BINARY_FORMATS_OES, "GL_NUM_PROGRAM_BINARY_FORMATS_OES");
#endif
#if defined(GL_PROGRAM_BINARY_FORMATS)
defconsti(env, "GL-PROGRAM-BINARY-FORMATS", (GLenum) GL_PROGRAM_BINARY_FORMATS, "GL_PROGRAM_BINARY_FORMATS");
#endif
#if defined(GL_PROGRAM_BINARY_FORMATS_OES)
defconsti(env, "GL-PROGRAM-BINARY-FORMATS-OES", (GLenum) GL_PROGRAM_BINARY_FORMATS_OES, "GL_PROGRAM_BINARY_FORMATS_OES");
#endif
#if defined(GL_STENCIL_BACK_FUNC)
defconsti(env, "GL-STENCIL-BACK-FUNC", (GLenum) GL_STENCIL_BACK_FUNC, "GL_STENCIL_BACK_FUNC");
#endif
#if defined(GL_STENCIL_BACK_FUNC_ATI)
defconsti(env, "GL-STENCIL-BACK-FUNC-ATI", (GLenum) GL_STENCIL_BACK_FUNC_ATI, "GL_STENCIL_BACK_FUNC_ATI");
#endif
#if defined(GL_STENCIL_BACK_FAIL)
defconsti(env, "GL-STENCIL-BACK-FAIL", (GLenum) GL_STENCIL_BACK_FAIL, "GL_STENCIL_BACK_FAIL");
#endif
#if defined(GL_STENCIL_BACK_FAIL_ATI)
defconsti(env, "GL-STENCIL-BACK-FAIL-ATI", (GLenum) GL_STENCIL_BACK_FAIL_ATI, "GL_STENCIL_BACK_FAIL_ATI");
#endif
#if defined(GL_STENCIL_BACK_PASS_DEPTH_FAIL)
defconsti(env, "GL-STENCIL-BACK-PASS-DEPTH-FAIL", (GLenum) GL_STENCIL_BACK_PASS_DEPTH_FAIL, "GL_STENCIL_BACK_PASS_DEPTH_FAIL");
#endif
#if defined(GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI)
defconsti(env, "GL-STENCIL-BACK-PASS-DEPTH-FAIL-ATI", (GLenum) GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI, "GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI");
#endif
#if defined(GL_STENCIL_BACK_PASS_DEPTH_PASS)
defconsti(env, "GL-STENCIL-BACK-PASS-DEPTH-PASS", (GLenum) GL_STENCIL_BACK_PASS_DEPTH_PASS, "GL_STENCIL_BACK_PASS_DEPTH_PASS");
#endif
#if defined(GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI)
defconsti(env, "GL-STENCIL-BACK-PASS-DEPTH-PASS-ATI", (GLenum) GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI, "GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI");
#endif
#if defined(GL_FRAGMENT_PROGRAM_ARB)
defconsti(env, "GL-FRAGMENT-PROGRAM-ARB", (GLenum) GL_FRAGMENT_PROGRAM_ARB, "GL_FRAGMENT_PROGRAM_ARB");
#endif
#if defined(GL_PROGRAM_ALU_INSTRUCTIONS_ARB)
defconsti(env, "GL-PROGRAM-ALU-INSTRUCTIONS-ARB", (GLenum) GL_PROGRAM_ALU_INSTRUCTIONS_ARB, "GL_PROGRAM_ALU_INSTRUCTIONS_ARB");
#endif
#if defined(GL_PROGRAM_TEX_INSTRUCTIONS_ARB)
defconsti(env, "GL-PROGRAM-TEX-INSTRUCTIONS-ARB", (GLenum) GL_PROGRAM_TEX_INSTRUCTIONS_ARB, "GL_PROGRAM_TEX_INSTRUCTIONS_ARB");
#endif
#if defined(GL_PROGRAM_TEX_INDIRECTIONS_ARB)
defconsti(env, "GL-PROGRAM-TEX-INDIRECTIONS-ARB", (GLenum) GL_PROGRAM_TEX_INDIRECTIONS_ARB, "GL_PROGRAM_TEX_INDIRECTIONS_ARB");
#endif
#if defined(GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB)
defconsti(env, "GL-PROGRAM-NATIVE-ALU-INSTRUCTIONS-ARB", (GLenum) GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB, "GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB");
#endif
#if defined(GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB)
defconsti(env, "GL-PROGRAM-NATIVE-TEX-INSTRUCTIONS-ARB", (GLenum) GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB, "GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB");
#endif
#if defined(GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB)
defconsti(env, "GL-PROGRAM-NATIVE-TEX-INDIRECTIONS-ARB", (GLenum) GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB, "GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB)
defconsti(env, "GL-MAX-PROGRAM-ALU-INSTRUCTIONS-ARB", (GLenum) GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB, "GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB)
defconsti(env, "GL-MAX-PROGRAM-TEX-INSTRUCTIONS-ARB", (GLenum) GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB, "GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB)
defconsti(env, "GL-MAX-PROGRAM-TEX-INDIRECTIONS-ARB", (GLenum) GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB, "GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB)
defconsti(env, "GL-MAX-PROGRAM-NATIVE-ALU-INSTRUCTIONS-ARB", (GLenum) GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB, "GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB)
defconsti(env, "GL-MAX-PROGRAM-NATIVE-TEX-INSTRUCTIONS-ARB", (GLenum) GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB, "GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB)
defconsti(env, "GL-MAX-PROGRAM-NATIVE-TEX-INDIRECTIONS-ARB", (GLenum) GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB, "GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB");
#endif
#if defined(GL_RGBA32F)
defconsti(env, "GL-RGBA32F", (GLenum) GL_RGBA32F, "GL_RGBA32F");
#endif
#if defined(GL_RGBA32F_ARB)
defconsti(env, "GL-RGBA32F-ARB", (GLenum) GL_RGBA32F_ARB, "GL_RGBA32F_ARB");
#endif
#if defined(GL_RGBA32F_EXT)
defconsti(env, "GL-RGBA32F-EXT", (GLenum) GL_RGBA32F_EXT, "GL_RGBA32F_EXT");
#endif
#if defined(GL_RGBA_FLOAT32_APPLE)
defconsti(env, "GL-RGBA-FLOAT32-APPLE", (GLenum) GL_RGBA_FLOAT32_APPLE, "GL_RGBA_FLOAT32_APPLE");
#endif
#if defined(GL_RGBA_FLOAT32_ATI)
defconsti(env, "GL-RGBA-FLOAT32-ATI", (GLenum) GL_RGBA_FLOAT32_ATI, "GL_RGBA_FLOAT32_ATI");
#endif
#if defined(GL_RGB32F)
defconsti(env, "GL-RGB32F", (GLenum) GL_RGB32F, "GL_RGB32F");
#endif
#if defined(GL_RGB32F_ARB)
defconsti(env, "GL-RGB32F-ARB", (GLenum) GL_RGB32F_ARB, "GL_RGB32F_ARB");
#endif
#if defined(GL_RGB32F_EXT)
defconsti(env, "GL-RGB32F-EXT", (GLenum) GL_RGB32F_EXT, "GL_RGB32F_EXT");
#endif
#if defined(GL_RGB_FLOAT32_APPLE)
defconsti(env, "GL-RGB-FLOAT32-APPLE", (GLenum) GL_RGB_FLOAT32_APPLE, "GL_RGB_FLOAT32_APPLE");
#endif
#if defined(GL_RGB_FLOAT32_ATI)
defconsti(env, "GL-RGB-FLOAT32-ATI", (GLenum) GL_RGB_FLOAT32_ATI, "GL_RGB_FLOAT32_ATI");
#endif
#if defined(GL_ALPHA32F_ARB)
defconsti(env, "GL-ALPHA32F-ARB", (GLenum) GL_ALPHA32F_ARB, "GL_ALPHA32F_ARB");
#endif
#if defined(GL_ALPHA32F_EXT)
defconsti(env, "GL-ALPHA32F-EXT", (GLenum) GL_ALPHA32F_EXT, "GL_ALPHA32F_EXT");
#endif
#if defined(GL_ALPHA_FLOAT32_APPLE)
defconsti(env, "GL-ALPHA-FLOAT32-APPLE", (GLenum) GL_ALPHA_FLOAT32_APPLE, "GL_ALPHA_FLOAT32_APPLE");
#endif
#if defined(GL_ALPHA_FLOAT32_ATI)
defconsti(env, "GL-ALPHA-FLOAT32-ATI", (GLenum) GL_ALPHA_FLOAT32_ATI, "GL_ALPHA_FLOAT32_ATI");
#endif
#if defined(GL_INTENSITY32F_ARB)
defconsti(env, "GL-INTENSITY32F-ARB", (GLenum) GL_INTENSITY32F_ARB, "GL_INTENSITY32F_ARB");
#endif
#if defined(GL_INTENSITY_FLOAT32_APPLE)
defconsti(env, "GL-INTENSITY-FLOAT32-APPLE", (GLenum) GL_INTENSITY_FLOAT32_APPLE, "GL_INTENSITY_FLOAT32_APPLE");
#endif
#if defined(GL_INTENSITY_FLOAT32_ATI)
defconsti(env, "GL-INTENSITY-FLOAT32-ATI", (GLenum) GL_INTENSITY_FLOAT32_ATI, "GL_INTENSITY_FLOAT32_ATI");
#endif
#if defined(GL_LUMINANCE32F_ARB)
defconsti(env, "GL-LUMINANCE32F-ARB", (GLenum) GL_LUMINANCE32F_ARB, "GL_LUMINANCE32F_ARB");
#endif
#if defined(GL_LUMINANCE32F_EXT)
defconsti(env, "GL-LUMINANCE32F-EXT", (GLenum) GL_LUMINANCE32F_EXT, "GL_LUMINANCE32F_EXT");
#endif
#if defined(GL_LUMINANCE_FLOAT32_APPLE)
defconsti(env, "GL-LUMINANCE-FLOAT32-APPLE", (GLenum) GL_LUMINANCE_FLOAT32_APPLE, "GL_LUMINANCE_FLOAT32_APPLE");
#endif
#if defined(GL_LUMINANCE_FLOAT32_ATI)
defconsti(env, "GL-LUMINANCE-FLOAT32-ATI", (GLenum) GL_LUMINANCE_FLOAT32_ATI, "GL_LUMINANCE_FLOAT32_ATI");
#endif
#if defined(GL_LUMINANCE_ALPHA32F_ARB)
defconsti(env, "GL-LUMINANCE-ALPHA32F-ARB", (GLenum) GL_LUMINANCE_ALPHA32F_ARB, "GL_LUMINANCE_ALPHA32F_ARB");
#endif
#if defined(GL_LUMINANCE_ALPHA32F_EXT)
defconsti(env, "GL-LUMINANCE-ALPHA32F-EXT", (GLenum) GL_LUMINANCE_ALPHA32F_EXT, "GL_LUMINANCE_ALPHA32F_EXT");
#endif
#if defined(GL_LUMINANCE_ALPHA_FLOAT32_APPLE)
defconsti(env, "GL-LUMINANCE-ALPHA-FLOAT32-APPLE", (GLenum) GL_LUMINANCE_ALPHA_FLOAT32_APPLE, "GL_LUMINANCE_ALPHA_FLOAT32_APPLE");
#endif
#if defined(GL_LUMINANCE_ALPHA_FLOAT32_ATI)
defconsti(env, "GL-LUMINANCE-ALPHA-FLOAT32-ATI", (GLenum) GL_LUMINANCE_ALPHA_FLOAT32_ATI, "GL_LUMINANCE_ALPHA_FLOAT32_ATI");
#endif
#if defined(GL_RGBA16F)
defconsti(env, "GL-RGBA16F", (GLenum) GL_RGBA16F, "GL_RGBA16F");
#endif
#if defined(GL_RGBA16F_ARB)
defconsti(env, "GL-RGBA16F-ARB", (GLenum) GL_RGBA16F_ARB, "GL_RGBA16F_ARB");
#endif
#if defined(GL_RGBA16F_EXT)
defconsti(env, "GL-RGBA16F-EXT", (GLenum) GL_RGBA16F_EXT, "GL_RGBA16F_EXT");
#endif
#if defined(GL_RGBA_FLOAT16_APPLE)
defconsti(env, "GL-RGBA-FLOAT16-APPLE", (GLenum) GL_RGBA_FLOAT16_APPLE, "GL_RGBA_FLOAT16_APPLE");
#endif
#if defined(GL_RGBA_FLOAT16_ATI)
defconsti(env, "GL-RGBA-FLOAT16-ATI", (GLenum) GL_RGBA_FLOAT16_ATI, "GL_RGBA_FLOAT16_ATI");
#endif
#if defined(GL_RGB16F)
defconsti(env, "GL-RGB16F", (GLenum) GL_RGB16F, "GL_RGB16F");
#endif
#if defined(GL_RGB16F_ARB)
defconsti(env, "GL-RGB16F-ARB", (GLenum) GL_RGB16F_ARB, "GL_RGB16F_ARB");
#endif
#if defined(GL_RGB16F_EXT)
defconsti(env, "GL-RGB16F-EXT", (GLenum) GL_RGB16F_EXT, "GL_RGB16F_EXT");
#endif
#if defined(GL_RGB_FLOAT16_APPLE)
defconsti(env, "GL-RGB-FLOAT16-APPLE", (GLenum) GL_RGB_FLOAT16_APPLE, "GL_RGB_FLOAT16_APPLE");
#endif
#if defined(GL_RGB_FLOAT16_ATI)
defconsti(env, "GL-RGB-FLOAT16-ATI", (GLenum) GL_RGB_FLOAT16_ATI, "GL_RGB_FLOAT16_ATI");
#endif
#if defined(GL_ALPHA16F_ARB)
defconsti(env, "GL-ALPHA16F-ARB", (GLenum) GL_ALPHA16F_ARB, "GL_ALPHA16F_ARB");
#endif
#if defined(GL_ALPHA16F_EXT)
defconsti(env, "GL-ALPHA16F-EXT", (GLenum) GL_ALPHA16F_EXT, "GL_ALPHA16F_EXT");
#endif
#if defined(GL_ALPHA_FLOAT16_APPLE)
defconsti(env, "GL-ALPHA-FLOAT16-APPLE", (GLenum) GL_ALPHA_FLOAT16_APPLE, "GL_ALPHA_FLOAT16_APPLE");
#endif
#if defined(GL_ALPHA_FLOAT16_ATI)
defconsti(env, "GL-ALPHA-FLOAT16-ATI", (GLenum) GL_ALPHA_FLOAT16_ATI, "GL_ALPHA_FLOAT16_ATI");
#endif
#if defined(GL_INTENSITY16F_ARB)
defconsti(env, "GL-INTENSITY16F-ARB", (GLenum) GL_INTENSITY16F_ARB, "GL_INTENSITY16F_ARB");
#endif
#if defined(GL_INTENSITY_FLOAT16_APPLE)
defconsti(env, "GL-INTENSITY-FLOAT16-APPLE", (GLenum) GL_INTENSITY_FLOAT16_APPLE, "GL_INTENSITY_FLOAT16_APPLE");
#endif
#if defined(GL_INTENSITY_FLOAT16_ATI)
defconsti(env, "GL-INTENSITY-FLOAT16-ATI", (GLenum) GL_INTENSITY_FLOAT16_ATI, "GL_INTENSITY_FLOAT16_ATI");
#endif
#if defined(GL_LUMINANCE16F_ARB)
defconsti(env, "GL-LUMINANCE16F-ARB", (GLenum) GL_LUMINANCE16F_ARB, "GL_LUMINANCE16F_ARB");
#endif
#if defined(GL_LUMINANCE16F_EXT)
defconsti(env, "GL-LUMINANCE16F-EXT", (GLenum) GL_LUMINANCE16F_EXT, "GL_LUMINANCE16F_EXT");
#endif
#if defined(GL_LUMINANCE_FLOAT16_APPLE)
defconsti(env, "GL-LUMINANCE-FLOAT16-APPLE", (GLenum) GL_LUMINANCE_FLOAT16_APPLE, "GL_LUMINANCE_FLOAT16_APPLE");
#endif
#if defined(GL_LUMINANCE_FLOAT16_ATI)
defconsti(env, "GL-LUMINANCE-FLOAT16-ATI", (GLenum) GL_LUMINANCE_FLOAT16_ATI, "GL_LUMINANCE_FLOAT16_ATI");
#endif
#if defined(GL_LUMINANCE_ALPHA16F_ARB)
defconsti(env, "GL-LUMINANCE-ALPHA16F-ARB", (GLenum) GL_LUMINANCE_ALPHA16F_ARB, "GL_LUMINANCE_ALPHA16F_ARB");
#endif
#if defined(GL_LUMINANCE_ALPHA16F_EXT)
defconsti(env, "GL-LUMINANCE-ALPHA16F-EXT", (GLenum) GL_LUMINANCE_ALPHA16F_EXT, "GL_LUMINANCE_ALPHA16F_EXT");
#endif
#if defined(GL_LUMINANCE_ALPHA_FLOAT16_APPLE)
defconsti(env, "GL-LUMINANCE-ALPHA-FLOAT16-APPLE", (GLenum) GL_LUMINANCE_ALPHA_FLOAT16_APPLE, "GL_LUMINANCE_ALPHA_FLOAT16_APPLE");
#endif
#if defined(GL_LUMINANCE_ALPHA_FLOAT16_ATI)
defconsti(env, "GL-LUMINANCE-ALPHA-FLOAT16-ATI", (GLenum) GL_LUMINANCE_ALPHA_FLOAT16_ATI, "GL_LUMINANCE_ALPHA_FLOAT16_ATI");
#endif
#if defined(GL_RGBA_FLOAT_MODE_ARB)
defconsti(env, "GL-RGBA-FLOAT-MODE-ARB", (GLenum) GL_RGBA_FLOAT_MODE_ARB, "GL_RGBA_FLOAT_MODE_ARB");
#endif
#if defined(GL_RGBA_FLOAT_MODE_ATI)
defconsti(env, "GL-RGBA-FLOAT-MODE-ATI", (GLenum) GL_RGBA_FLOAT_MODE_ATI, "GL_RGBA_FLOAT_MODE_ATI");
#endif
#if defined(GL_WRITEONLY_RENDERING_QCOM)
defconsti(env, "GL-WRITEONLY-RENDERING-QCOM", (GLenum) GL_WRITEONLY_RENDERING_QCOM, "GL_WRITEONLY_RENDERING_QCOM");
#endif
#if defined(GL_MAX_DRAW_BUFFERS)
defconsti(env, "GL-MAX-DRAW-BUFFERS", (GLenum) GL_MAX_DRAW_BUFFERS, "GL_MAX_DRAW_BUFFERS");
#endif
#if defined(GL_MAX_DRAW_BUFFERS_ARB)
defconsti(env, "GL-MAX-DRAW-BUFFERS-ARB", (GLenum) GL_MAX_DRAW_BUFFERS_ARB, "GL_MAX_DRAW_BUFFERS_ARB");
#endif
#if defined(GL_MAX_DRAW_BUFFERS_ATI)
defconsti(env, "GL-MAX-DRAW-BUFFERS-ATI", (GLenum) GL_MAX_DRAW_BUFFERS_ATI, "GL_MAX_DRAW_BUFFERS_ATI");
#endif
#if defined(GL_MAX_DRAW_BUFFERS_EXT)
defconsti(env, "GL-MAX-DRAW-BUFFERS-EXT", (GLenum) GL_MAX_DRAW_BUFFERS_EXT, "GL_MAX_DRAW_BUFFERS_EXT");
#endif
#if defined(GL_MAX_DRAW_BUFFERS_NV)
defconsti(env, "GL-MAX-DRAW-BUFFERS-NV", (GLenum) GL_MAX_DRAW_BUFFERS_NV, "GL_MAX_DRAW_BUFFERS_NV");
#endif
#if defined(GL_DRAW_BUFFER0)
defconsti(env, "GL-DRAW-BUFFER0", (GLenum) GL_DRAW_BUFFER0, "GL_DRAW_BUFFER0");
#endif
#if defined(GL_DRAW_BUFFER0_ARB)
defconsti(env, "GL-DRAW-BUFFER0-ARB", (GLenum) GL_DRAW_BUFFER0_ARB, "GL_DRAW_BUFFER0_ARB");
#endif
#if defined(GL_DRAW_BUFFER0_ATI)
defconsti(env, "GL-DRAW-BUFFER0-ATI", (GLenum) GL_DRAW_BUFFER0_ATI, "GL_DRAW_BUFFER0_ATI");
#endif
#if defined(GL_DRAW_BUFFER0_EXT)
defconsti(env, "GL-DRAW-BUFFER0-EXT", (GLenum) GL_DRAW_BUFFER0_EXT, "GL_DRAW_BUFFER0_EXT");
#endif
#if defined(GL_DRAW_BUFFER0_NV)
defconsti(env, "GL-DRAW-BUFFER0-NV", (GLenum) GL_DRAW_BUFFER0_NV, "GL_DRAW_BUFFER0_NV");
#endif
#if defined(GL_DRAW_BUFFER1)
defconsti(env, "GL-DRAW-BUFFER1", (GLenum) GL_DRAW_BUFFER1, "GL_DRAW_BUFFER1");
#endif
#if defined(GL_DRAW_BUFFER1_ARB)
defconsti(env, "GL-DRAW-BUFFER1-ARB", (GLenum) GL_DRAW_BUFFER1_ARB, "GL_DRAW_BUFFER1_ARB");
#endif
#if defined(GL_DRAW_BUFFER1_ATI)
defconsti(env, "GL-DRAW-BUFFER1-ATI", (GLenum) GL_DRAW_BUFFER1_ATI, "GL_DRAW_BUFFER1_ATI");
#endif
#if defined(GL_DRAW_BUFFER1_EXT)
defconsti(env, "GL-DRAW-BUFFER1-EXT", (GLenum) GL_DRAW_BUFFER1_EXT, "GL_DRAW_BUFFER1_EXT");
#endif
#if defined(GL_DRAW_BUFFER1_NV)
defconsti(env, "GL-DRAW-BUFFER1-NV", (GLenum) GL_DRAW_BUFFER1_NV, "GL_DRAW_BUFFER1_NV");
#endif
#if defined(GL_DRAW_BUFFER2)
defconsti(env, "GL-DRAW-BUFFER2", (GLenum) GL_DRAW_BUFFER2, "GL_DRAW_BUFFER2");
#endif
#if defined(GL_DRAW_BUFFER2_ARB)
defconsti(env, "GL-DRAW-BUFFER2-ARB", (GLenum) GL_DRAW_BUFFER2_ARB, "GL_DRAW_BUFFER2_ARB");
#endif
#if defined(GL_DRAW_BUFFER2_ATI)
defconsti(env, "GL-DRAW-BUFFER2-ATI", (GLenum) GL_DRAW_BUFFER2_ATI, "GL_DRAW_BUFFER2_ATI");
#endif
#if defined(GL_DRAW_BUFFER2_EXT)
defconsti(env, "GL-DRAW-BUFFER2-EXT", (GLenum) GL_DRAW_BUFFER2_EXT, "GL_DRAW_BUFFER2_EXT");
#endif
#if defined(GL_DRAW_BUFFER2_NV)
defconsti(env, "GL-DRAW-BUFFER2-NV", (GLenum) GL_DRAW_BUFFER2_NV, "GL_DRAW_BUFFER2_NV");
#endif
#if defined(GL_DRAW_BUFFER3)
defconsti(env, "GL-DRAW-BUFFER3", (GLenum) GL_DRAW_BUFFER3, "GL_DRAW_BUFFER3");
#endif
#if defined(GL_DRAW_BUFFER3_ARB)
defconsti(env, "GL-DRAW-BUFFER3-ARB", (GLenum) GL_DRAW_BUFFER3_ARB, "GL_DRAW_BUFFER3_ARB");
#endif
#if defined(GL_DRAW_BUFFER3_ATI)
defconsti(env, "GL-DRAW-BUFFER3-ATI", (GLenum) GL_DRAW_BUFFER3_ATI, "GL_DRAW_BUFFER3_ATI");
#endif
#if defined(GL_DRAW_BUFFER3_EXT)
defconsti(env, "GL-DRAW-BUFFER3-EXT", (GLenum) GL_DRAW_BUFFER3_EXT, "GL_DRAW_BUFFER3_EXT");
#endif
#if defined(GL_DRAW_BUFFER3_NV)
defconsti(env, "GL-DRAW-BUFFER3-NV", (GLenum) GL_DRAW_BUFFER3_NV, "GL_DRAW_BUFFER3_NV");
#endif
#if defined(GL_DRAW_BUFFER4)
defconsti(env, "GL-DRAW-BUFFER4", (GLenum) GL_DRAW_BUFFER4, "GL_DRAW_BUFFER4");
#endif
#if defined(GL_DRAW_BUFFER4_ARB)
defconsti(env, "GL-DRAW-BUFFER4-ARB", (GLenum) GL_DRAW_BUFFER4_ARB, "GL_DRAW_BUFFER4_ARB");
#endif
#if defined(GL_DRAW_BUFFER4_ATI)
defconsti(env, "GL-DRAW-BUFFER4-ATI", (GLenum) GL_DRAW_BUFFER4_ATI, "GL_DRAW_BUFFER4_ATI");
#endif
#if defined(GL_DRAW_BUFFER4_EXT)
defconsti(env, "GL-DRAW-BUFFER4-EXT", (GLenum) GL_DRAW_BUFFER4_EXT, "GL_DRAW_BUFFER4_EXT");
#endif
#if defined(GL_DRAW_BUFFER4_NV)
defconsti(env, "GL-DRAW-BUFFER4-NV", (GLenum) GL_DRAW_BUFFER4_NV, "GL_DRAW_BUFFER4_NV");
#endif
#if defined(GL_DRAW_BUFFER5)
defconsti(env, "GL-DRAW-BUFFER5", (GLenum) GL_DRAW_BUFFER5, "GL_DRAW_BUFFER5");
#endif
#if defined(GL_DRAW_BUFFER5_ARB)
defconsti(env, "GL-DRAW-BUFFER5-ARB", (GLenum) GL_DRAW_BUFFER5_ARB, "GL_DRAW_BUFFER5_ARB");
#endif
#if defined(GL_DRAW_BUFFER5_ATI)
defconsti(env, "GL-DRAW-BUFFER5-ATI", (GLenum) GL_DRAW_BUFFER5_ATI, "GL_DRAW_BUFFER5_ATI");
#endif
#if defined(GL_DRAW_BUFFER5_EXT)
defconsti(env, "GL-DRAW-BUFFER5-EXT", (GLenum) GL_DRAW_BUFFER5_EXT, "GL_DRAW_BUFFER5_EXT");
#endif
#if defined(GL_DRAW_BUFFER5_NV)
defconsti(env, "GL-DRAW-BUFFER5-NV", (GLenum) GL_DRAW_BUFFER5_NV, "GL_DRAW_BUFFER5_NV");
#endif
#if defined(GL_DRAW_BUFFER6)
defconsti(env, "GL-DRAW-BUFFER6", (GLenum) GL_DRAW_BUFFER6, "GL_DRAW_BUFFER6");
#endif
#if defined(GL_DRAW_BUFFER6_ARB)
defconsti(env, "GL-DRAW-BUFFER6-ARB", (GLenum) GL_DRAW_BUFFER6_ARB, "GL_DRAW_BUFFER6_ARB");
#endif
#if defined(GL_DRAW_BUFFER6_ATI)
defconsti(env, "GL-DRAW-BUFFER6-ATI", (GLenum) GL_DRAW_BUFFER6_ATI, "GL_DRAW_BUFFER6_ATI");
#endif
#if defined(GL_DRAW_BUFFER6_EXT)
defconsti(env, "GL-DRAW-BUFFER6-EXT", (GLenum) GL_DRAW_BUFFER6_EXT, "GL_DRAW_BUFFER6_EXT");
#endif
#if defined(GL_DRAW_BUFFER6_NV)
defconsti(env, "GL-DRAW-BUFFER6-NV", (GLenum) GL_DRAW_BUFFER6_NV, "GL_DRAW_BUFFER6_NV");
#endif
#if defined(GL_DRAW_BUFFER7)
defconsti(env, "GL-DRAW-BUFFER7", (GLenum) GL_DRAW_BUFFER7, "GL_DRAW_BUFFER7");
#endif
#if defined(GL_DRAW_BUFFER7_ARB)
defconsti(env, "GL-DRAW-BUFFER7-ARB", (GLenum) GL_DRAW_BUFFER7_ARB, "GL_DRAW_BUFFER7_ARB");
#endif
#if defined(GL_DRAW_BUFFER7_ATI)
defconsti(env, "GL-DRAW-BUFFER7-ATI", (GLenum) GL_DRAW_BUFFER7_ATI, "GL_DRAW_BUFFER7_ATI");
#endif
#if defined(GL_DRAW_BUFFER7_EXT)
defconsti(env, "GL-DRAW-BUFFER7-EXT", (GLenum) GL_DRAW_BUFFER7_EXT, "GL_DRAW_BUFFER7_EXT");
#endif
#if defined(GL_DRAW_BUFFER7_NV)
defconsti(env, "GL-DRAW-BUFFER7-NV", (GLenum) GL_DRAW_BUFFER7_NV, "GL_DRAW_BUFFER7_NV");
#endif
#if defined(GL_DRAW_BUFFER8)
defconsti(env, "GL-DRAW-BUFFER8", (GLenum) GL_DRAW_BUFFER8, "GL_DRAW_BUFFER8");
#endif
#if defined(GL_DRAW_BUFFER8_ARB)
defconsti(env, "GL-DRAW-BUFFER8-ARB", (GLenum) GL_DRAW_BUFFER8_ARB, "GL_DRAW_BUFFER8_ARB");
#endif
#if defined(GL_DRAW_BUFFER8_ATI)
defconsti(env, "GL-DRAW-BUFFER8-ATI", (GLenum) GL_DRAW_BUFFER8_ATI, "GL_DRAW_BUFFER8_ATI");
#endif
#if defined(GL_DRAW_BUFFER8_EXT)
defconsti(env, "GL-DRAW-BUFFER8-EXT", (GLenum) GL_DRAW_BUFFER8_EXT, "GL_DRAW_BUFFER8_EXT");
#endif
#if defined(GL_DRAW_BUFFER8_NV)
defconsti(env, "GL-DRAW-BUFFER8-NV", (GLenum) GL_DRAW_BUFFER8_NV, "GL_DRAW_BUFFER8_NV");
#endif
#if defined(GL_DRAW_BUFFER9)
defconsti(env, "GL-DRAW-BUFFER9", (GLenum) GL_DRAW_BUFFER9, "GL_DRAW_BUFFER9");
#endif
#if defined(GL_DRAW_BUFFER9_ARB)
defconsti(env, "GL-DRAW-BUFFER9-ARB", (GLenum) GL_DRAW_BUFFER9_ARB, "GL_DRAW_BUFFER9_ARB");
#endif
#if defined(GL_DRAW_BUFFER9_ATI)
defconsti(env, "GL-DRAW-BUFFER9-ATI", (GLenum) GL_DRAW_BUFFER9_ATI, "GL_DRAW_BUFFER9_ATI");
#endif
#if defined(GL_DRAW_BUFFER9_EXT)
defconsti(env, "GL-DRAW-BUFFER9-EXT", (GLenum) GL_DRAW_BUFFER9_EXT, "GL_DRAW_BUFFER9_EXT");
#endif
#if defined(GL_DRAW_BUFFER9_NV)
defconsti(env, "GL-DRAW-BUFFER9-NV", (GLenum) GL_DRAW_BUFFER9_NV, "GL_DRAW_BUFFER9_NV");
#endif
#if defined(GL_DRAW_BUFFER10)
defconsti(env, "GL-DRAW-BUFFER10", (GLenum) GL_DRAW_BUFFER10, "GL_DRAW_BUFFER10");
#endif
#if defined(GL_DRAW_BUFFER10_ARB)
defconsti(env, "GL-DRAW-BUFFER10-ARB", (GLenum) GL_DRAW_BUFFER10_ARB, "GL_DRAW_BUFFER10_ARB");
#endif
#if defined(GL_DRAW_BUFFER10_ATI)
defconsti(env, "GL-DRAW-BUFFER10-ATI", (GLenum) GL_DRAW_BUFFER10_ATI, "GL_DRAW_BUFFER10_ATI");
#endif
#if defined(GL_DRAW_BUFFER10_EXT)
defconsti(env, "GL-DRAW-BUFFER10-EXT", (GLenum) GL_DRAW_BUFFER10_EXT, "GL_DRAW_BUFFER10_EXT");
#endif
#if defined(GL_DRAW_BUFFER10_NV)
defconsti(env, "GL-DRAW-BUFFER10-NV", (GLenum) GL_DRAW_BUFFER10_NV, "GL_DRAW_BUFFER10_NV");
#endif
#if defined(GL_DRAW_BUFFER11)
defconsti(env, "GL-DRAW-BUFFER11", (GLenum) GL_DRAW_BUFFER11, "GL_DRAW_BUFFER11");
#endif
#if defined(GL_DRAW_BUFFER11_ARB)
defconsti(env, "GL-DRAW-BUFFER11-ARB", (GLenum) GL_DRAW_BUFFER11_ARB, "GL_DRAW_BUFFER11_ARB");
#endif
#if defined(GL_DRAW_BUFFER11_ATI)
defconsti(env, "GL-DRAW-BUFFER11-ATI", (GLenum) GL_DRAW_BUFFER11_ATI, "GL_DRAW_BUFFER11_ATI");
#endif
#if defined(GL_DRAW_BUFFER11_EXT)
defconsti(env, "GL-DRAW-BUFFER11-EXT", (GLenum) GL_DRAW_BUFFER11_EXT, "GL_DRAW_BUFFER11_EXT");
#endif
#if defined(GL_DRAW_BUFFER11_NV)
defconsti(env, "GL-DRAW-BUFFER11-NV", (GLenum) GL_DRAW_BUFFER11_NV, "GL_DRAW_BUFFER11_NV");
#endif
#if defined(GL_DRAW_BUFFER12)
defconsti(env, "GL-DRAW-BUFFER12", (GLenum) GL_DRAW_BUFFER12, "GL_DRAW_BUFFER12");
#endif
#if defined(GL_DRAW_BUFFER12_ARB)
defconsti(env, "GL-DRAW-BUFFER12-ARB", (GLenum) GL_DRAW_BUFFER12_ARB, "GL_DRAW_BUFFER12_ARB");
#endif
#if defined(GL_DRAW_BUFFER12_ATI)
defconsti(env, "GL-DRAW-BUFFER12-ATI", (GLenum) GL_DRAW_BUFFER12_ATI, "GL_DRAW_BUFFER12_ATI");
#endif
#if defined(GL_DRAW_BUFFER12_EXT)
defconsti(env, "GL-DRAW-BUFFER12-EXT", (GLenum) GL_DRAW_BUFFER12_EXT, "GL_DRAW_BUFFER12_EXT");
#endif
#if defined(GL_DRAW_BUFFER12_NV)
defconsti(env, "GL-DRAW-BUFFER12-NV", (GLenum) GL_DRAW_BUFFER12_NV, "GL_DRAW_BUFFER12_NV");
#endif
#if defined(GL_DRAW_BUFFER13)
defconsti(env, "GL-DRAW-BUFFER13", (GLenum) GL_DRAW_BUFFER13, "GL_DRAW_BUFFER13");
#endif
#if defined(GL_DRAW_BUFFER13_ARB)
defconsti(env, "GL-DRAW-BUFFER13-ARB", (GLenum) GL_DRAW_BUFFER13_ARB, "GL_DRAW_BUFFER13_ARB");
#endif
#if defined(GL_DRAW_BUFFER13_ATI)
defconsti(env, "GL-DRAW-BUFFER13-ATI", (GLenum) GL_DRAW_BUFFER13_ATI, "GL_DRAW_BUFFER13_ATI");
#endif
#if defined(GL_DRAW_BUFFER13_EXT)
defconsti(env, "GL-DRAW-BUFFER13-EXT", (GLenum) GL_DRAW_BUFFER13_EXT, "GL_DRAW_BUFFER13_EXT");
#endif
#if defined(GL_DRAW_BUFFER13_NV)
defconsti(env, "GL-DRAW-BUFFER13-NV", (GLenum) GL_DRAW_BUFFER13_NV, "GL_DRAW_BUFFER13_NV");
#endif
#if defined(GL_DRAW_BUFFER14)
defconsti(env, "GL-DRAW-BUFFER14", (GLenum) GL_DRAW_BUFFER14, "GL_DRAW_BUFFER14");
#endif
#if defined(GL_DRAW_BUFFER14_ARB)
defconsti(env, "GL-DRAW-BUFFER14-ARB", (GLenum) GL_DRAW_BUFFER14_ARB, "GL_DRAW_BUFFER14_ARB");
#endif
#if defined(GL_DRAW_BUFFER14_ATI)
defconsti(env, "GL-DRAW-BUFFER14-ATI", (GLenum) GL_DRAW_BUFFER14_ATI, "GL_DRAW_BUFFER14_ATI");
#endif
#if defined(GL_DRAW_BUFFER14_EXT)
defconsti(env, "GL-DRAW-BUFFER14-EXT", (GLenum) GL_DRAW_BUFFER14_EXT, "GL_DRAW_BUFFER14_EXT");
#endif
#if defined(GL_DRAW_BUFFER14_NV)
defconsti(env, "GL-DRAW-BUFFER14-NV", (GLenum) GL_DRAW_BUFFER14_NV, "GL_DRAW_BUFFER14_NV");
#endif
#if defined(GL_DRAW_BUFFER15)
defconsti(env, "GL-DRAW-BUFFER15", (GLenum) GL_DRAW_BUFFER15, "GL_DRAW_BUFFER15");
#endif
#if defined(GL_DRAW_BUFFER15_ARB)
defconsti(env, "GL-DRAW-BUFFER15-ARB", (GLenum) GL_DRAW_BUFFER15_ARB, "GL_DRAW_BUFFER15_ARB");
#endif
#if defined(GL_DRAW_BUFFER15_ATI)
defconsti(env, "GL-DRAW-BUFFER15-ATI", (GLenum) GL_DRAW_BUFFER15_ATI, "GL_DRAW_BUFFER15_ATI");
#endif
#if defined(GL_DRAW_BUFFER15_EXT)
defconsti(env, "GL-DRAW-BUFFER15-EXT", (GLenum) GL_DRAW_BUFFER15_EXT, "GL_DRAW_BUFFER15_EXT");
#endif
#if defined(GL_DRAW_BUFFER15_NV)
defconsti(env, "GL-DRAW-BUFFER15-NV", (GLenum) GL_DRAW_BUFFER15_NV, "GL_DRAW_BUFFER15_NV");
#endif
#if defined(GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI)
defconsti(env, "GL-COLOR-CLEAR-UNCLAMPED-VALUE-ATI", (GLenum) GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI, "GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI");
#endif
#if defined(GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI)
defconsti(env, "GL-COMPRESSED-LUMINANCE-ALPHA-3DC-ATI", (GLenum) GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI, "GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI");
#endif
#if defined(GL_BLEND_EQUATION_ALPHA)
defconsti(env, "GL-BLEND-EQUATION-ALPHA", (GLenum) GL_BLEND_EQUATION_ALPHA, "GL_BLEND_EQUATION_ALPHA");
#endif
#if defined(GL_BLEND_EQUATION_ALPHA_EXT)
defconsti(env, "GL-BLEND-EQUATION-ALPHA-EXT", (GLenum) GL_BLEND_EQUATION_ALPHA_EXT, "GL_BLEND_EQUATION_ALPHA_EXT");
#endif
#if defined(GL_BLEND_EQUATION_ALPHA_OES)
defconsti(env, "GL-BLEND-EQUATION-ALPHA-OES", (GLenum) GL_BLEND_EQUATION_ALPHA_OES, "GL_BLEND_EQUATION_ALPHA_OES");
#endif
#if defined(GL_SUBSAMPLE_DISTANCE_AMD)
defconsti(env, "GL-SUBSAMPLE-DISTANCE-AMD", (GLenum) GL_SUBSAMPLE_DISTANCE_AMD, "GL_SUBSAMPLE_DISTANCE_AMD");
#endif
#if defined(GL_MATRIX_PALETTE_ARB)
defconsti(env, "GL-MATRIX-PALETTE-ARB", (GLenum) GL_MATRIX_PALETTE_ARB, "GL_MATRIX_PALETTE_ARB");
#endif
#if defined(GL_MATRIX_PALETTE_OES)
defconsti(env, "GL-MATRIX-PALETTE-OES", (GLenum) GL_MATRIX_PALETTE_OES, "GL_MATRIX_PALETTE_OES");
#endif
#if defined(GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB)
defconsti(env, "GL-MAX-MATRIX-PALETTE-STACK-DEPTH-ARB", (GLenum) GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB, "GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB");
#endif
#if defined(GL_MAX_PALETTE_MATRICES_ARB)
defconsti(env, "GL-MAX-PALETTE-MATRICES-ARB", (GLenum) GL_MAX_PALETTE_MATRICES_ARB, "GL_MAX_PALETTE_MATRICES_ARB");
#endif
#if defined(GL_MAX_PALETTE_MATRICES_OES)
defconsti(env, "GL-MAX-PALETTE-MATRICES-OES", (GLenum) GL_MAX_PALETTE_MATRICES_OES, "GL_MAX_PALETTE_MATRICES_OES");
#endif
#if defined(GL_CURRENT_PALETTE_MATRIX_ARB)
defconsti(env, "GL-CURRENT-PALETTE-MATRIX-ARB", (GLenum) GL_CURRENT_PALETTE_MATRIX_ARB, "GL_CURRENT_PALETTE_MATRIX_ARB");
#endif
#if defined(GL_CURRENT_PALETTE_MATRIX_OES)
defconsti(env, "GL-CURRENT-PALETTE-MATRIX-OES", (GLenum) GL_CURRENT_PALETTE_MATRIX_OES, "GL_CURRENT_PALETTE_MATRIX_OES");
#endif
#if defined(GL_MATRIX_INDEX_ARRAY_ARB)
defconsti(env, "GL-MATRIX-INDEX-ARRAY-ARB", (GLenum) GL_MATRIX_INDEX_ARRAY_ARB, "GL_MATRIX_INDEX_ARRAY_ARB");
#endif
#if defined(GL_MATRIX_INDEX_ARRAY_OES)
defconsti(env, "GL-MATRIX-INDEX-ARRAY-OES", (GLenum) GL_MATRIX_INDEX_ARRAY_OES, "GL_MATRIX_INDEX_ARRAY_OES");
#endif
#if defined(GL_CURRENT_MATRIX_INDEX_ARB)
defconsti(env, "GL-CURRENT-MATRIX-INDEX-ARB", (GLenum) GL_CURRENT_MATRIX_INDEX_ARB, "GL_CURRENT_MATRIX_INDEX_ARB");
#endif
#if defined(GL_MATRIX_INDEX_ARRAY_SIZE_ARB)
defconsti(env, "GL-MATRIX-INDEX-ARRAY-SIZE-ARB", (GLenum) GL_MATRIX_INDEX_ARRAY_SIZE_ARB, "GL_MATRIX_INDEX_ARRAY_SIZE_ARB");
#endif
#if defined(GL_MATRIX_INDEX_ARRAY_SIZE_OES)
defconsti(env, "GL-MATRIX-INDEX-ARRAY-SIZE-OES", (GLenum) GL_MATRIX_INDEX_ARRAY_SIZE_OES, "GL_MATRIX_INDEX_ARRAY_SIZE_OES");
#endif
#if defined(GL_MATRIX_INDEX_ARRAY_TYPE_ARB)
defconsti(env, "GL-MATRIX-INDEX-ARRAY-TYPE-ARB", (GLenum) GL_MATRIX_INDEX_ARRAY_TYPE_ARB, "GL_MATRIX_INDEX_ARRAY_TYPE_ARB");
#endif
#if defined(GL_MATRIX_INDEX_ARRAY_TYPE_OES)
defconsti(env, "GL-MATRIX-INDEX-ARRAY-TYPE-OES", (GLenum) GL_MATRIX_INDEX_ARRAY_TYPE_OES, "GL_MATRIX_INDEX_ARRAY_TYPE_OES");
#endif
#if defined(GL_MATRIX_INDEX_ARRAY_STRIDE_ARB)
defconsti(env, "GL-MATRIX-INDEX-ARRAY-STRIDE-ARB", (GLenum) GL_MATRIX_INDEX_ARRAY_STRIDE_ARB, "GL_MATRIX_INDEX_ARRAY_STRIDE_ARB");
#endif
#if defined(GL_MATRIX_INDEX_ARRAY_STRIDE_OES)
defconsti(env, "GL-MATRIX-INDEX-ARRAY-STRIDE-OES", (GLenum) GL_MATRIX_INDEX_ARRAY_STRIDE_OES, "GL_MATRIX_INDEX_ARRAY_STRIDE_OES");
#endif
#if defined(GL_MATRIX_INDEX_ARRAY_POINTER_ARB)
defconsti(env, "GL-MATRIX-INDEX-ARRAY-POINTER-ARB", (GLenum) GL_MATRIX_INDEX_ARRAY_POINTER_ARB, "GL_MATRIX_INDEX_ARRAY_POINTER_ARB");
#endif
#if defined(GL_MATRIX_INDEX_ARRAY_POINTER_OES)
defconsti(env, "GL-MATRIX-INDEX-ARRAY-POINTER-OES", (GLenum) GL_MATRIX_INDEX_ARRAY_POINTER_OES, "GL_MATRIX_INDEX_ARRAY_POINTER_OES");
#endif
#if defined(GL_TEXTURE_DEPTH_SIZE)
defconsti(env, "GL-TEXTURE-DEPTH-SIZE", (GLenum) GL_TEXTURE_DEPTH_SIZE, "GL_TEXTURE_DEPTH_SIZE");
#endif
#if defined(GL_TEXTURE_DEPTH_SIZE_ARB)
defconsti(env, "GL-TEXTURE-DEPTH-SIZE-ARB", (GLenum) GL_TEXTURE_DEPTH_SIZE_ARB, "GL_TEXTURE_DEPTH_SIZE_ARB");
#endif
#if defined(GL_DEPTH_TEXTURE_MODE)
defconsti(env, "GL-DEPTH-TEXTURE-MODE", (GLenum) GL_DEPTH_TEXTURE_MODE, "GL_DEPTH_TEXTURE_MODE");
#endif
#if defined(GL_DEPTH_TEXTURE_MODE_ARB)
defconsti(env, "GL-DEPTH-TEXTURE-MODE-ARB", (GLenum) GL_DEPTH_TEXTURE_MODE_ARB, "GL_DEPTH_TEXTURE_MODE_ARB");
#endif
#if defined(GL_TEXTURE_COMPARE_MODE)
defconsti(env, "GL-TEXTURE-COMPARE-MODE", (GLenum) GL_TEXTURE_COMPARE_MODE, "GL_TEXTURE_COMPARE_MODE");
#endif
#if defined(GL_TEXTURE_COMPARE_MODE_ARB)
defconsti(env, "GL-TEXTURE-COMPARE-MODE-ARB", (GLenum) GL_TEXTURE_COMPARE_MODE_ARB, "GL_TEXTURE_COMPARE_MODE_ARB");
#endif
#if defined(GL_TEXTURE_COMPARE_MODE_EXT)
defconsti(env, "GL-TEXTURE-COMPARE-MODE-EXT", (GLenum) GL_TEXTURE_COMPARE_MODE_EXT, "GL_TEXTURE_COMPARE_MODE_EXT");
#endif
#if defined(GL_TEXTURE_COMPARE_FUNC)
defconsti(env, "GL-TEXTURE-COMPARE-FUNC", (GLenum) GL_TEXTURE_COMPARE_FUNC, "GL_TEXTURE_COMPARE_FUNC");
#endif
#if defined(GL_TEXTURE_COMPARE_FUNC_ARB)
defconsti(env, "GL-TEXTURE-COMPARE-FUNC-ARB", (GLenum) GL_TEXTURE_COMPARE_FUNC_ARB, "GL_TEXTURE_COMPARE_FUNC_ARB");
#endif
#if defined(GL_TEXTURE_COMPARE_FUNC_EXT)
defconsti(env, "GL-TEXTURE-COMPARE-FUNC-EXT", (GLenum) GL_TEXTURE_COMPARE_FUNC_EXT, "GL_TEXTURE_COMPARE_FUNC_EXT");
#endif
#if defined(GL_COMPARE_R_TO_TEXTURE)
defconsti(env, "GL-COMPARE-R-TO-TEXTURE", (GLenum) GL_COMPARE_R_TO_TEXTURE, "GL_COMPARE_R_TO_TEXTURE");
#endif
#if defined(GL_COMPARE_R_TO_TEXTURE_ARB)
defconsti(env, "GL-COMPARE-R-TO-TEXTURE-ARB", (GLenum) GL_COMPARE_R_TO_TEXTURE_ARB, "GL_COMPARE_R_TO_TEXTURE_ARB");
#endif
#if defined(GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT)
defconsti(env, "GL-COMPARE-REF-DEPTH-TO-TEXTURE-EXT", (GLenum) GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT, "GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT");
#endif
#if defined(GL_COMPARE_REF_TO_TEXTURE)
defconsti(env, "GL-COMPARE-REF-TO-TEXTURE", (GLenum) GL_COMPARE_REF_TO_TEXTURE, "GL_COMPARE_REF_TO_TEXTURE");
#endif
#if defined(GL_COMPARE_REF_TO_TEXTURE_EXT)
defconsti(env, "GL-COMPARE-REF-TO-TEXTURE-EXT", (GLenum) GL_COMPARE_REF_TO_TEXTURE_EXT, "GL_COMPARE_REF_TO_TEXTURE_EXT");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_SEAMLESS)
defconsti(env, "GL-TEXTURE-CUBE-MAP-SEAMLESS", (GLenum) GL_TEXTURE_CUBE_MAP_SEAMLESS, "GL_TEXTURE_CUBE_MAP_SEAMLESS");
#endif
#if defined(GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV)
defconsti(env, "GL-OFFSET-PROJECTIVE-TEXTURE-2D-NV", (GLenum) GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV, "GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV");
#endif
#if defined(GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV)
defconsti(env, "GL-OFFSET-PROJECTIVE-TEXTURE-2D-SCALE-NV", (GLenum) GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV, "GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV");
#endif
#if defined(GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV)
defconsti(env, "GL-OFFSET-PROJECTIVE-TEXTURE-RECTANGLE-NV", (GLenum) GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV, "GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV");
#endif
#if defined(GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV)
defconsti(env, "GL-OFFSET-PROJECTIVE-TEXTURE-RECTANGLE-SCALE-NV", (GLenum) GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV, "GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV");
#endif
#if defined(GL_OFFSET_HILO_TEXTURE_2D_NV)
defconsti(env, "GL-OFFSET-HILO-TEXTURE-2D-NV", (GLenum) GL_OFFSET_HILO_TEXTURE_2D_NV, "GL_OFFSET_HILO_TEXTURE_2D_NV");
#endif
#if defined(GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV)
defconsti(env, "GL-OFFSET-HILO-TEXTURE-RECTANGLE-NV", (GLenum) GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV, "GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV");
#endif
#if defined(GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV)
defconsti(env, "GL-OFFSET-HILO-PROJECTIVE-TEXTURE-2D-NV", (GLenum) GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV, "GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV");
#endif
#if defined(GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV)
defconsti(env, "GL-OFFSET-HILO-PROJECTIVE-TEXTURE-RECTANGLE-NV", (GLenum) GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV, "GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV");
#endif
#if defined(GL_DEPENDENT_HILO_TEXTURE_2D_NV)
defconsti(env, "GL-DEPENDENT-HILO-TEXTURE-2D-NV", (GLenum) GL_DEPENDENT_HILO_TEXTURE_2D_NV, "GL_DEPENDENT_HILO_TEXTURE_2D_NV");
#endif
#if defined(GL_DEPENDENT_RGB_TEXTURE_3D_NV)
defconsti(env, "GL-DEPENDENT-RGB-TEXTURE-3D-NV", (GLenum) GL_DEPENDENT_RGB_TEXTURE_3D_NV, "GL_DEPENDENT_RGB_TEXTURE_3D_NV");
#endif
#if defined(GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV)
defconsti(env, "GL-DEPENDENT-RGB-TEXTURE-CUBE-MAP-NV", (GLenum) GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV, "GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV");
#endif
#if defined(GL_DOT_PRODUCT_PASS_THROUGH_NV)
defconsti(env, "GL-DOT-PRODUCT-PASS-THROUGH-NV", (GLenum) GL_DOT_PRODUCT_PASS_THROUGH_NV, "GL_DOT_PRODUCT_PASS_THROUGH_NV");
#endif
#if defined(GL_DOT_PRODUCT_TEXTURE_1D_NV)
defconsti(env, "GL-DOT-PRODUCT-TEXTURE-1D-NV", (GLenum) GL_DOT_PRODUCT_TEXTURE_1D_NV, "GL_DOT_PRODUCT_TEXTURE_1D_NV");
#endif
#if defined(GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV)
defconsti(env, "GL-DOT-PRODUCT-AFFINE-DEPTH-REPLACE-NV", (GLenum) GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV, "GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV");
#endif
#if defined(GL_HILO8_NV)
defconsti(env, "GL-HILO8-NV", (GLenum) GL_HILO8_NV, "GL_HILO8_NV");
#endif
#if defined(GL_SIGNED_HILO8_NV)
defconsti(env, "GL-SIGNED-HILO8-NV", (GLenum) GL_SIGNED_HILO8_NV, "GL_SIGNED_HILO8_NV");
#endif
#if defined(GL_FORCE_BLUE_TO_ONE_NV)
defconsti(env, "GL-FORCE-BLUE-TO-ONE-NV", (GLenum) GL_FORCE_BLUE_TO_ONE_NV, "GL_FORCE_BLUE_TO_ONE_NV");
#endif
#if defined(GL_POINT_SPRITE)
defconsti(env, "GL-POINT-SPRITE", (GLenum) GL_POINT_SPRITE, "GL_POINT_SPRITE");
#endif
#if defined(GL_POINT_SPRITE_ARB)
defconsti(env, "GL-POINT-SPRITE-ARB", (GLenum) GL_POINT_SPRITE_ARB, "GL_POINT_SPRITE_ARB");
#endif
#if defined(GL_POINT_SPRITE_NV)
defconsti(env, "GL-POINT-SPRITE-NV", (GLenum) GL_POINT_SPRITE_NV, "GL_POINT_SPRITE_NV");
#endif
#if defined(GL_POINT_SPRITE_OES)
defconsti(env, "GL-POINT-SPRITE-OES", (GLenum) GL_POINT_SPRITE_OES, "GL_POINT_SPRITE_OES");
#endif
#if defined(GL_COORD_REPLACE)
defconsti(env, "GL-COORD-REPLACE", (GLenum) GL_COORD_REPLACE, "GL_COORD_REPLACE");
#endif
#if defined(GL_COORD_REPLACE_ARB)
defconsti(env, "GL-COORD-REPLACE-ARB", (GLenum) GL_COORD_REPLACE_ARB, "GL_COORD_REPLACE_ARB");
#endif
#if defined(GL_COORD_REPLACE_NV)
defconsti(env, "GL-COORD-REPLACE-NV", (GLenum) GL_COORD_REPLACE_NV, "GL_COORD_REPLACE_NV");
#endif
#if defined(GL_COORD_REPLACE_OES)
defconsti(env, "GL-COORD-REPLACE-OES", (GLenum) GL_COORD_REPLACE_OES, "GL_COORD_REPLACE_OES");
#endif
#if defined(GL_POINT_SPRITE_R_MODE_NV)
defconsti(env, "GL-POINT-SPRITE-R-MODE-NV", (GLenum) GL_POINT_SPRITE_R_MODE_NV, "GL_POINT_SPRITE_R_MODE_NV");
#endif
#if defined(GL_PIXEL_COUNTER_BITS_NV)
defconsti(env, "GL-PIXEL-COUNTER-BITS-NV", (GLenum) GL_PIXEL_COUNTER_BITS_NV, "GL_PIXEL_COUNTER_BITS_NV");
#endif
#if defined(GL_QUERY_COUNTER_BITS)
defconsti(env, "GL-QUERY-COUNTER-BITS", (GLenum) GL_QUERY_COUNTER_BITS, "GL_QUERY_COUNTER_BITS");
#endif
#if defined(GL_QUERY_COUNTER_BITS_ARB)
defconsti(env, "GL-QUERY-COUNTER-BITS-ARB", (GLenum) GL_QUERY_COUNTER_BITS_ARB, "GL_QUERY_COUNTER_BITS_ARB");
#endif
#if defined(GL_QUERY_COUNTER_BITS_EXT)
defconsti(env, "GL-QUERY-COUNTER-BITS-EXT", (GLenum) GL_QUERY_COUNTER_BITS_EXT, "GL_QUERY_COUNTER_BITS_EXT");
#endif
#if defined(GL_CURRENT_OCCLUSION_QUERY_ID_NV)
defconsti(env, "GL-CURRENT-OCCLUSION-QUERY-ID-NV", (GLenum) GL_CURRENT_OCCLUSION_QUERY_ID_NV, "GL_CURRENT_OCCLUSION_QUERY_ID_NV");
#endif
#if defined(GL_CURRENT_QUERY)
defconsti(env, "GL-CURRENT-QUERY", (GLenum) GL_CURRENT_QUERY, "GL_CURRENT_QUERY");
#endif
#if defined(GL_CURRENT_QUERY_ARB)
defconsti(env, "GL-CURRENT-QUERY-ARB", (GLenum) GL_CURRENT_QUERY_ARB, "GL_CURRENT_QUERY_ARB");
#endif
#if defined(GL_CURRENT_QUERY_EXT)
defconsti(env, "GL-CURRENT-QUERY-EXT", (GLenum) GL_CURRENT_QUERY_EXT, "GL_CURRENT_QUERY_EXT");
#endif
#if defined(GL_PIXEL_COUNT_NV)
defconsti(env, "GL-PIXEL-COUNT-NV", (GLenum) GL_PIXEL_COUNT_NV, "GL_PIXEL_COUNT_NV");
#endif
#if defined(GL_QUERY_RESULT)
defconsti(env, "GL-QUERY-RESULT", (GLenum) GL_QUERY_RESULT, "GL_QUERY_RESULT");
#endif
#if defined(GL_QUERY_RESULT_ARB)
defconsti(env, "GL-QUERY-RESULT-ARB", (GLenum) GL_QUERY_RESULT_ARB, "GL_QUERY_RESULT_ARB");
#endif
#if defined(GL_QUERY_RESULT_EXT)
defconsti(env, "GL-QUERY-RESULT-EXT", (GLenum) GL_QUERY_RESULT_EXT, "GL_QUERY_RESULT_EXT");
#endif
#if defined(GL_PIXEL_COUNT_AVAILABLE_NV)
defconsti(env, "GL-PIXEL-COUNT-AVAILABLE-NV", (GLenum) GL_PIXEL_COUNT_AVAILABLE_NV, "GL_PIXEL_COUNT_AVAILABLE_NV");
#endif
#if defined(GL_QUERY_RESULT_AVAILABLE)
defconsti(env, "GL-QUERY-RESULT-AVAILABLE", (GLenum) GL_QUERY_RESULT_AVAILABLE, "GL_QUERY_RESULT_AVAILABLE");
#endif
#if defined(GL_QUERY_RESULT_AVAILABLE_ARB)
defconsti(env, "GL-QUERY-RESULT-AVAILABLE-ARB", (GLenum) GL_QUERY_RESULT_AVAILABLE_ARB, "GL_QUERY_RESULT_AVAILABLE_ARB");
#endif
#if defined(GL_QUERY_RESULT_AVAILABLE_EXT)
defconsti(env, "GL-QUERY-RESULT-AVAILABLE-EXT", (GLenum) GL_QUERY_RESULT_AVAILABLE_EXT, "GL_QUERY_RESULT_AVAILABLE_EXT");
#endif
#if defined(GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV)
defconsti(env, "GL-MAX-FRAGMENT-PROGRAM-LOCAL-PARAMETERS-NV", (GLenum) GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV, "GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV");
#endif
#if defined(GL_MAX_VERTEX_ATTRIBS)
defconsti(env, "GL-MAX-VERTEX-ATTRIBS", (GLenum) GL_MAX_VERTEX_ATTRIBS, "GL_MAX_VERTEX_ATTRIBS");
#endif
#if defined(GL_MAX_VERTEX_ATTRIBS_ARB)
defconsti(env, "GL-MAX-VERTEX-ATTRIBS-ARB", (GLenum) GL_MAX_VERTEX_ATTRIBS_ARB, "GL_MAX_VERTEX_ATTRIBS_ARB");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_NORMALIZED)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-NORMALIZED", (GLenum) GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, "GL_VERTEX_ATTRIB_ARRAY_NORMALIZED");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-NORMALIZED-ARB", (GLenum) GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB, "GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB");
#endif
#if defined(GL_MAX_TESS_CONTROL_INPUT_COMPONENTS)
defconsti(env, "GL-MAX-TESS-CONTROL-INPUT-COMPONENTS", (GLenum) GL_MAX_TESS_CONTROL_INPUT_COMPONENTS, "GL_MAX_TESS_CONTROL_INPUT_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT)
defconsti(env, "GL-MAX-TESS-CONTROL-INPUT-COMPONENTS-EXT", (GLenum) GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT, "GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_OES)
defconsti(env, "GL-MAX-TESS-CONTROL-INPUT-COMPONENTS-OES", (GLenum) GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_OES, "GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_OES");
#endif
#if defined(GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS)
defconsti(env, "GL-MAX-TESS-EVALUATION-INPUT-COMPONENTS", (GLenum) GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS, "GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT)
defconsti(env, "GL-MAX-TESS-EVALUATION-INPUT-COMPONENTS-EXT", (GLenum) GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT, "GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES)
defconsti(env, "GL-MAX-TESS-EVALUATION-INPUT-COMPONENTS-OES", (GLenum) GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES, "GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES");
#endif
#if defined(GL_DEPTH_STENCIL_TO_RGBA_NV)
defconsti(env, "GL-DEPTH-STENCIL-TO-RGBA-NV", (GLenum) GL_DEPTH_STENCIL_TO_RGBA_NV, "GL_DEPTH_STENCIL_TO_RGBA_NV");
#endif
#if defined(GL_DEPTH_STENCIL_TO_BGRA_NV)
defconsti(env, "GL-DEPTH-STENCIL-TO-BGRA-NV", (GLenum) GL_DEPTH_STENCIL_TO_BGRA_NV, "GL_DEPTH_STENCIL_TO_BGRA_NV");
#endif
#if defined(GL_FRAGMENT_PROGRAM_NV)
defconsti(env, "GL-FRAGMENT-PROGRAM-NV", (GLenum) GL_FRAGMENT_PROGRAM_NV, "GL_FRAGMENT_PROGRAM_NV");
#endif
#if defined(GL_MAX_TEXTURE_COORDS)
defconsti(env, "GL-MAX-TEXTURE-COORDS", (GLenum) GL_MAX_TEXTURE_COORDS, "GL_MAX_TEXTURE_COORDS");
#endif
#if defined(GL_MAX_TEXTURE_COORDS_ARB)
defconsti(env, "GL-MAX-TEXTURE-COORDS-ARB", (GLenum) GL_MAX_TEXTURE_COORDS_ARB, "GL_MAX_TEXTURE_COORDS_ARB");
#endif
#if defined(GL_MAX_TEXTURE_COORDS_NV)
defconsti(env, "GL-MAX-TEXTURE-COORDS-NV", (GLenum) GL_MAX_TEXTURE_COORDS_NV, "GL_MAX_TEXTURE_COORDS_NV");
#endif
#if defined(GL_MAX_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_TEXTURE_IMAGE_UNITS, "GL_MAX_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_TEXTURE_IMAGE_UNITS_ARB)
defconsti(env, "GL-MAX-TEXTURE-IMAGE-UNITS-ARB", (GLenum) GL_MAX_TEXTURE_IMAGE_UNITS_ARB, "GL_MAX_TEXTURE_IMAGE_UNITS_ARB");
#endif
#if defined(GL_MAX_TEXTURE_IMAGE_UNITS_NV)
defconsti(env, "GL-MAX-TEXTURE-IMAGE-UNITS-NV", (GLenum) GL_MAX_TEXTURE_IMAGE_UNITS_NV, "GL_MAX_TEXTURE_IMAGE_UNITS_NV");
#endif
#if defined(GL_FRAGMENT_PROGRAM_BINDING_NV)
defconsti(env, "GL-FRAGMENT-PROGRAM-BINDING-NV", (GLenum) GL_FRAGMENT_PROGRAM_BINDING_NV, "GL_FRAGMENT_PROGRAM_BINDING_NV");
#endif
#if defined(GL_PROGRAM_ERROR_STRING_ARB)
defconsti(env, "GL-PROGRAM-ERROR-STRING-ARB", (GLenum) GL_PROGRAM_ERROR_STRING_ARB, "GL_PROGRAM_ERROR_STRING_ARB");
#endif
#if defined(GL_PROGRAM_ERROR_STRING_NV)
defconsti(env, "GL-PROGRAM-ERROR-STRING-NV", (GLenum) GL_PROGRAM_ERROR_STRING_NV, "GL_PROGRAM_ERROR_STRING_NV");
#endif
#if defined(GL_PROGRAM_FORMAT_ASCII_ARB)
defconsti(env, "GL-PROGRAM-FORMAT-ASCII-ARB", (GLenum) GL_PROGRAM_FORMAT_ASCII_ARB, "GL_PROGRAM_FORMAT_ASCII_ARB");
#endif
#if defined(GL_PROGRAM_FORMAT_ARB)
defconsti(env, "GL-PROGRAM-FORMAT-ARB", (GLenum) GL_PROGRAM_FORMAT_ARB, "GL_PROGRAM_FORMAT_ARB");
#endif
#if defined(GL_WRITE_PIXEL_DATA_RANGE_NV)
defconsti(env, "GL-WRITE-PIXEL-DATA-RANGE-NV", (GLenum) GL_WRITE_PIXEL_DATA_RANGE_NV, "GL_WRITE_PIXEL_DATA_RANGE_NV");
#endif
#if defined(GL_READ_PIXEL_DATA_RANGE_NV)
defconsti(env, "GL-READ-PIXEL-DATA-RANGE-NV", (GLenum) GL_READ_PIXEL_DATA_RANGE_NV, "GL_READ_PIXEL_DATA_RANGE_NV");
#endif
#if defined(GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV)
defconsti(env, "GL-WRITE-PIXEL-DATA-RANGE-LENGTH-NV", (GLenum) GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV, "GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV");
#endif
#if defined(GL_READ_PIXEL_DATA_RANGE_LENGTH_NV)
defconsti(env, "GL-READ-PIXEL-DATA-RANGE-LENGTH-NV", (GLenum) GL_READ_PIXEL_DATA_RANGE_LENGTH_NV, "GL_READ_PIXEL_DATA_RANGE_LENGTH_NV");
#endif
#if defined(GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV)
defconsti(env, "GL-WRITE-PIXEL-DATA-RANGE-POINTER-NV", (GLenum) GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV, "GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV");
#endif
#if defined(GL_READ_PIXEL_DATA_RANGE_POINTER_NV)
defconsti(env, "GL-READ-PIXEL-DATA-RANGE-POINTER-NV", (GLenum) GL_READ_PIXEL_DATA_RANGE_POINTER_NV, "GL_READ_PIXEL_DATA_RANGE_POINTER_NV");
#endif
#if defined(GL_GEOMETRY_SHADER_INVOCATIONS)
defconsti(env, "GL-GEOMETRY-SHADER-INVOCATIONS", (GLenum) GL_GEOMETRY_SHADER_INVOCATIONS, "GL_GEOMETRY_SHADER_INVOCATIONS");
#endif
#if defined(GL_GEOMETRY_SHADER_INVOCATIONS_EXT)
defconsti(env, "GL-GEOMETRY-SHADER-INVOCATIONS-EXT", (GLenum) GL_GEOMETRY_SHADER_INVOCATIONS_EXT, "GL_GEOMETRY_SHADER_INVOCATIONS_EXT");
#endif
#if defined(GL_GEOMETRY_SHADER_INVOCATIONS_OES)
defconsti(env, "GL-GEOMETRY-SHADER-INVOCATIONS-OES", (GLenum) GL_GEOMETRY_SHADER_INVOCATIONS_OES, "GL_GEOMETRY_SHADER_INVOCATIONS_OES");
#endif
#if defined(GL_FLOAT_R_NV)
defconsti(env, "GL-FLOAT-R-NV", (GLenum) GL_FLOAT_R_NV, "GL_FLOAT_R_NV");
#endif
#if defined(GL_FLOAT_RG_NV)
defconsti(env, "GL-FLOAT-RG-NV", (GLenum) GL_FLOAT_RG_NV, "GL_FLOAT_RG_NV");
#endif
#if defined(GL_FLOAT_RGB_NV)
defconsti(env, "GL-FLOAT-RGB-NV", (GLenum) GL_FLOAT_RGB_NV, "GL_FLOAT_RGB_NV");
#endif
#if defined(GL_FLOAT_RGBA_NV)
defconsti(env, "GL-FLOAT-RGBA-NV", (GLenum) GL_FLOAT_RGBA_NV, "GL_FLOAT_RGBA_NV");
#endif
#if defined(GL_FLOAT_R16_NV)
defconsti(env, "GL-FLOAT-R16-NV", (GLenum) GL_FLOAT_R16_NV, "GL_FLOAT_R16_NV");
#endif
#if defined(GL_FLOAT_R32_NV)
defconsti(env, "GL-FLOAT-R32-NV", (GLenum) GL_FLOAT_R32_NV, "GL_FLOAT_R32_NV");
#endif
#if defined(GL_FLOAT_RG16_NV)
defconsti(env, "GL-FLOAT-RG16-NV", (GLenum) GL_FLOAT_RG16_NV, "GL_FLOAT_RG16_NV");
#endif
#if defined(GL_FLOAT_RG32_NV)
defconsti(env, "GL-FLOAT-RG32-NV", (GLenum) GL_FLOAT_RG32_NV, "GL_FLOAT_RG32_NV");
#endif
#if defined(GL_FLOAT_RGB16_NV)
defconsti(env, "GL-FLOAT-RGB16-NV", (GLenum) GL_FLOAT_RGB16_NV, "GL_FLOAT_RGB16_NV");
#endif
#if defined(GL_FLOAT_RGB32_NV)
defconsti(env, "GL-FLOAT-RGB32-NV", (GLenum) GL_FLOAT_RGB32_NV, "GL_FLOAT_RGB32_NV");
#endif
#if defined(GL_FLOAT_RGBA16_NV)
defconsti(env, "GL-FLOAT-RGBA16-NV", (GLenum) GL_FLOAT_RGBA16_NV, "GL_FLOAT_RGBA16_NV");
#endif
#if defined(GL_FLOAT_RGBA32_NV)
defconsti(env, "GL-FLOAT-RGBA32-NV", (GLenum) GL_FLOAT_RGBA32_NV, "GL_FLOAT_RGBA32_NV");
#endif
#if defined(GL_TEXTURE_FLOAT_COMPONENTS_NV)
defconsti(env, "GL-TEXTURE-FLOAT-COMPONENTS-NV", (GLenum) GL_TEXTURE_FLOAT_COMPONENTS_NV, "GL_TEXTURE_FLOAT_COMPONENTS_NV");
#endif
#if defined(GL_FLOAT_CLEAR_COLOR_VALUE_NV)
defconsti(env, "GL-FLOAT-CLEAR-COLOR-VALUE-NV", (GLenum) GL_FLOAT_CLEAR_COLOR_VALUE_NV, "GL_FLOAT_CLEAR_COLOR_VALUE_NV");
#endif
#if defined(GL_FLOAT_RGBA_MODE_NV)
defconsti(env, "GL-FLOAT-RGBA-MODE-NV", (GLenum) GL_FLOAT_RGBA_MODE_NV, "GL_FLOAT_RGBA_MODE_NV");
#endif
#if defined(GL_TEXTURE_UNSIGNED_REMAP_MODE_NV)
defconsti(env, "GL-TEXTURE-UNSIGNED-REMAP-MODE-NV", (GLenum) GL_TEXTURE_UNSIGNED_REMAP_MODE_NV, "GL_TEXTURE_UNSIGNED_REMAP_MODE_NV");
#endif
#if defined(GL_DEPTH_BOUNDS_TEST_EXT)
defconsti(env, "GL-DEPTH-BOUNDS-TEST-EXT", (GLenum) GL_DEPTH_BOUNDS_TEST_EXT, "GL_DEPTH_BOUNDS_TEST_EXT");
#endif
#if defined(GL_DEPTH_BOUNDS_EXT)
defconsti(env, "GL-DEPTH-BOUNDS-EXT", (GLenum) GL_DEPTH_BOUNDS_EXT, "GL_DEPTH_BOUNDS_EXT");
#endif
#if defined(GL_ARRAY_BUFFER)
defconsti(env, "GL-ARRAY-BUFFER", (GLenum) GL_ARRAY_BUFFER, "GL_ARRAY_BUFFER");
#endif
#if defined(GL_ARRAY_BUFFER_ARB)
defconsti(env, "GL-ARRAY-BUFFER-ARB", (GLenum) GL_ARRAY_BUFFER_ARB, "GL_ARRAY_BUFFER_ARB");
#endif
#if defined(GL_ELEMENT_ARRAY_BUFFER)
defconsti(env, "GL-ELEMENT-ARRAY-BUFFER", (GLenum) GL_ELEMENT_ARRAY_BUFFER, "GL_ELEMENT_ARRAY_BUFFER");
#endif
#if defined(GL_ELEMENT_ARRAY_BUFFER_ARB)
defconsti(env, "GL-ELEMENT-ARRAY-BUFFER-ARB", (GLenum) GL_ELEMENT_ARRAY_BUFFER_ARB, "GL_ELEMENT_ARRAY_BUFFER_ARB");
#endif
#if defined(GL_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-ARRAY-BUFFER-BINDING", (GLenum) GL_ARRAY_BUFFER_BINDING, "GL_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_ARRAY_BUFFER_BINDING_ARB)
defconsti(env, "GL-ARRAY-BUFFER-BINDING-ARB", (GLenum) GL_ARRAY_BUFFER_BINDING_ARB, "GL_ARRAY_BUFFER_BINDING_ARB");
#endif
#if defined(GL_ELEMENT_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-ELEMENT-ARRAY-BUFFER-BINDING", (GLenum) GL_ELEMENT_ARRAY_BUFFER_BINDING, "GL_ELEMENT_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB)
defconsti(env, "GL-ELEMENT-ARRAY-BUFFER-BINDING-ARB", (GLenum) GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB, "GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB");
#endif
#if defined(GL_VERTEX_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-VERTEX-ARRAY-BUFFER-BINDING", (GLenum) GL_VERTEX_ARRAY_BUFFER_BINDING, "GL_VERTEX_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_VERTEX_ARRAY_BUFFER_BINDING_ARB)
defconsti(env, "GL-VERTEX-ARRAY-BUFFER-BINDING-ARB", (GLenum) GL_VERTEX_ARRAY_BUFFER_BINDING_ARB, "GL_VERTEX_ARRAY_BUFFER_BINDING_ARB");
#endif
#if defined(GL_NORMAL_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-NORMAL-ARRAY-BUFFER-BINDING", (GLenum) GL_NORMAL_ARRAY_BUFFER_BINDING, "GL_NORMAL_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_NORMAL_ARRAY_BUFFER_BINDING_ARB)
defconsti(env, "GL-NORMAL-ARRAY-BUFFER-BINDING-ARB", (GLenum) GL_NORMAL_ARRAY_BUFFER_BINDING_ARB, "GL_NORMAL_ARRAY_BUFFER_BINDING_ARB");
#endif
#if defined(GL_COLOR_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-COLOR-ARRAY-BUFFER-BINDING", (GLenum) GL_COLOR_ARRAY_BUFFER_BINDING, "GL_COLOR_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_COLOR_ARRAY_BUFFER_BINDING_ARB)
defconsti(env, "GL-COLOR-ARRAY-BUFFER-BINDING-ARB", (GLenum) GL_COLOR_ARRAY_BUFFER_BINDING_ARB, "GL_COLOR_ARRAY_BUFFER_BINDING_ARB");
#endif
#if defined(GL_INDEX_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-INDEX-ARRAY-BUFFER-BINDING", (GLenum) GL_INDEX_ARRAY_BUFFER_BINDING, "GL_INDEX_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_INDEX_ARRAY_BUFFER_BINDING_ARB)
defconsti(env, "GL-INDEX-ARRAY-BUFFER-BINDING-ARB", (GLenum) GL_INDEX_ARRAY_BUFFER_BINDING_ARB, "GL_INDEX_ARRAY_BUFFER_BINDING_ARB");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-BUFFER-BINDING", (GLenum) GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING, "GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-BUFFER-BINDING-ARB", (GLenum) GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB, "GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-EDGE-FLAG-ARRAY-BUFFER-BINDING", (GLenum) GL_EDGE_FLAG_ARRAY_BUFFER_BINDING, "GL_EDGE_FLAG_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB)
defconsti(env, "GL-EDGE-FLAG-ARRAY-BUFFER-BINDING-ARB", (GLenum) GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB, "GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-BUFFER-BINDING", (GLenum) GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING, "GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-BUFFER-BINDING-ARB", (GLenum) GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB, "GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB)
defconsti(env, "GL-FOG-COORDINATE-ARRAY-BUFFER-BINDING-ARB", (GLenum) GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB, "GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-FOG-COORDINATE-ARRAY-BUFFER-BINDING", (GLenum) GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING, "GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_FOG_COORD_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-FOG-COORD-ARRAY-BUFFER-BINDING", (GLenum) GL_FOG_COORD_ARRAY_BUFFER_BINDING, "GL_FOG_COORD_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_WEIGHT_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-WEIGHT-ARRAY-BUFFER-BINDING", (GLenum) GL_WEIGHT_ARRAY_BUFFER_BINDING, "GL_WEIGHT_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB)
defconsti(env, "GL-WEIGHT-ARRAY-BUFFER-BINDING-ARB", (GLenum) GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB, "GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB");
#endif
#if defined(GL_WEIGHT_ARRAY_BUFFER_BINDING_OES)
defconsti(env, "GL-WEIGHT-ARRAY-BUFFER-BINDING-OES", (GLenum) GL_WEIGHT_ARRAY_BUFFER_BINDING_OES, "GL_WEIGHT_ARRAY_BUFFER_BINDING_OES");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-BUFFER-BINDING", (GLenum) GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, "GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-BUFFER-BINDING-ARB", (GLenum) GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB, "GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB");
#endif
#if defined(GL_PROGRAM_INSTRUCTIONS_ARB)
defconsti(env, "GL-PROGRAM-INSTRUCTIONS-ARB", (GLenum) GL_PROGRAM_INSTRUCTIONS_ARB, "GL_PROGRAM_INSTRUCTIONS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_INSTRUCTIONS_ARB)
defconsti(env, "GL-MAX-PROGRAM-INSTRUCTIONS-ARB", (GLenum) GL_MAX_PROGRAM_INSTRUCTIONS_ARB, "GL_MAX_PROGRAM_INSTRUCTIONS_ARB");
#endif
#if defined(GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB)
defconsti(env, "GL-PROGRAM-NATIVE-INSTRUCTIONS-ARB", (GLenum) GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB, "GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB)
defconsti(env, "GL-MAX-PROGRAM-NATIVE-INSTRUCTIONS-ARB", (GLenum) GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB, "GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB");
#endif
#if defined(GL_PROGRAM_TEMPORARIES_ARB)
defconsti(env, "GL-PROGRAM-TEMPORARIES-ARB", (GLenum) GL_PROGRAM_TEMPORARIES_ARB, "GL_PROGRAM_TEMPORARIES_ARB");
#endif
#if defined(GL_MAX_PROGRAM_TEMPORARIES_ARB)
defconsti(env, "GL-MAX-PROGRAM-TEMPORARIES-ARB", (GLenum) GL_MAX_PROGRAM_TEMPORARIES_ARB, "GL_MAX_PROGRAM_TEMPORARIES_ARB");
#endif
#if defined(GL_PROGRAM_NATIVE_TEMPORARIES_ARB)
defconsti(env, "GL-PROGRAM-NATIVE-TEMPORARIES-ARB", (GLenum) GL_PROGRAM_NATIVE_TEMPORARIES_ARB, "GL_PROGRAM_NATIVE_TEMPORARIES_ARB");
#endif
#if defined(GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB)
defconsti(env, "GL-MAX-PROGRAM-NATIVE-TEMPORARIES-ARB", (GLenum) GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB, "GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB");
#endif
#if defined(GL_PROGRAM_PARAMETERS_ARB)
defconsti(env, "GL-PROGRAM-PARAMETERS-ARB", (GLenum) GL_PROGRAM_PARAMETERS_ARB, "GL_PROGRAM_PARAMETERS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_PARAMETERS_ARB)
defconsti(env, "GL-MAX-PROGRAM-PARAMETERS-ARB", (GLenum) GL_MAX_PROGRAM_PARAMETERS_ARB, "GL_MAX_PROGRAM_PARAMETERS_ARB");
#endif
#if defined(GL_PROGRAM_NATIVE_PARAMETERS_ARB)
defconsti(env, "GL-PROGRAM-NATIVE-PARAMETERS-ARB", (GLenum) GL_PROGRAM_NATIVE_PARAMETERS_ARB, "GL_PROGRAM_NATIVE_PARAMETERS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB)
defconsti(env, "GL-MAX-PROGRAM-NATIVE-PARAMETERS-ARB", (GLenum) GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB, "GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB");
#endif
#if defined(GL_PROGRAM_ATTRIBS_ARB)
defconsti(env, "GL-PROGRAM-ATTRIBS-ARB", (GLenum) GL_PROGRAM_ATTRIBS_ARB, "GL_PROGRAM_ATTRIBS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_ATTRIBS_ARB)
defconsti(env, "GL-MAX-PROGRAM-ATTRIBS-ARB", (GLenum) GL_MAX_PROGRAM_ATTRIBS_ARB, "GL_MAX_PROGRAM_ATTRIBS_ARB");
#endif
#if defined(GL_PROGRAM_NATIVE_ATTRIBS_ARB)
defconsti(env, "GL-PROGRAM-NATIVE-ATTRIBS-ARB", (GLenum) GL_PROGRAM_NATIVE_ATTRIBS_ARB, "GL_PROGRAM_NATIVE_ATTRIBS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB)
defconsti(env, "GL-MAX-PROGRAM-NATIVE-ATTRIBS-ARB", (GLenum) GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB, "GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB");
#endif
#if defined(GL_PROGRAM_ADDRESS_REGISTERS_ARB)
defconsti(env, "GL-PROGRAM-ADDRESS-REGISTERS-ARB", (GLenum) GL_PROGRAM_ADDRESS_REGISTERS_ARB, "GL_PROGRAM_ADDRESS_REGISTERS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB)
defconsti(env, "GL-MAX-PROGRAM-ADDRESS-REGISTERS-ARB", (GLenum) GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB, "GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB");
#endif
#if defined(GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB)
defconsti(env, "GL-PROGRAM-NATIVE-ADDRESS-REGISTERS-ARB", (GLenum) GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB, "GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB)
defconsti(env, "GL-MAX-PROGRAM-NATIVE-ADDRESS-REGISTERS-ARB", (GLenum) GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB, "GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB)
defconsti(env, "GL-MAX-PROGRAM-LOCAL-PARAMETERS-ARB", (GLenum) GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB, "GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_ENV_PARAMETERS_ARB)
defconsti(env, "GL-MAX-PROGRAM-ENV-PARAMETERS-ARB", (GLenum) GL_MAX_PROGRAM_ENV_PARAMETERS_ARB, "GL_MAX_PROGRAM_ENV_PARAMETERS_ARB");
#endif
#if defined(GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB)
defconsti(env, "GL-PROGRAM-UNDER-NATIVE-LIMITS-ARB", (GLenum) GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB, "GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB");
#endif
#if defined(GL_TRANSPOSE_CURRENT_MATRIX_ARB)
defconsti(env, "GL-TRANSPOSE-CURRENT-MATRIX-ARB", (GLenum) GL_TRANSPOSE_CURRENT_MATRIX_ARB, "GL_TRANSPOSE_CURRENT_MATRIX_ARB");
#endif
#if defined(GL_READ_ONLY)
defconsti(env, "GL-READ-ONLY", (GLenum) GL_READ_ONLY, "GL_READ_ONLY");
#endif
#if defined(GL_READ_ONLY_ARB)
defconsti(env, "GL-READ-ONLY-ARB", (GLenum) GL_READ_ONLY_ARB, "GL_READ_ONLY_ARB");
#endif
#if defined(GL_WRITE_ONLY)
defconsti(env, "GL-WRITE-ONLY", (GLenum) GL_WRITE_ONLY, "GL_WRITE_ONLY");
#endif
#if defined(GL_WRITE_ONLY_ARB)
defconsti(env, "GL-WRITE-ONLY-ARB", (GLenum) GL_WRITE_ONLY_ARB, "GL_WRITE_ONLY_ARB");
#endif
#if defined(GL_WRITE_ONLY_OES)
defconsti(env, "GL-WRITE-ONLY-OES", (GLenum) GL_WRITE_ONLY_OES, "GL_WRITE_ONLY_OES");
#endif
#if defined(GL_READ_WRITE)
defconsti(env, "GL-READ-WRITE", (GLenum) GL_READ_WRITE, "GL_READ_WRITE");
#endif
#if defined(GL_READ_WRITE_ARB)
defconsti(env, "GL-READ-WRITE-ARB", (GLenum) GL_READ_WRITE_ARB, "GL_READ_WRITE_ARB");
#endif
#if defined(GL_BUFFER_ACCESS)
defconsti(env, "GL-BUFFER-ACCESS", (GLenum) GL_BUFFER_ACCESS, "GL_BUFFER_ACCESS");
#endif
#if defined(GL_BUFFER_ACCESS_ARB)
defconsti(env, "GL-BUFFER-ACCESS-ARB", (GLenum) GL_BUFFER_ACCESS_ARB, "GL_BUFFER_ACCESS_ARB");
#endif
#if defined(GL_BUFFER_ACCESS_OES)
defconsti(env, "GL-BUFFER-ACCESS-OES", (GLenum) GL_BUFFER_ACCESS_OES, "GL_BUFFER_ACCESS_OES");
#endif
#if defined(GL_BUFFER_MAPPED)
defconsti(env, "GL-BUFFER-MAPPED", (GLenum) GL_BUFFER_MAPPED, "GL_BUFFER_MAPPED");
#endif
#if defined(GL_BUFFER_MAPPED_ARB)
defconsti(env, "GL-BUFFER-MAPPED-ARB", (GLenum) GL_BUFFER_MAPPED_ARB, "GL_BUFFER_MAPPED_ARB");
#endif
#if defined(GL_BUFFER_MAPPED_OES)
defconsti(env, "GL-BUFFER-MAPPED-OES", (GLenum) GL_BUFFER_MAPPED_OES, "GL_BUFFER_MAPPED_OES");
#endif
#if defined(GL_BUFFER_MAP_POINTER)
defconsti(env, "GL-BUFFER-MAP-POINTER", (GLenum) GL_BUFFER_MAP_POINTER, "GL_BUFFER_MAP_POINTER");
#endif
#if defined(GL_BUFFER_MAP_POINTER_ARB)
defconsti(env, "GL-BUFFER-MAP-POINTER-ARB", (GLenum) GL_BUFFER_MAP_POINTER_ARB, "GL_BUFFER_MAP_POINTER_ARB");
#endif
#if defined(GL_BUFFER_MAP_POINTER_OES)
defconsti(env, "GL-BUFFER-MAP-POINTER-OES", (GLenum) GL_BUFFER_MAP_POINTER_OES, "GL_BUFFER_MAP_POINTER_OES");
#endif
#if defined(GL_WRITE_DISCARD_NV)
defconsti(env, "GL-WRITE-DISCARD-NV", (GLenum) GL_WRITE_DISCARD_NV, "GL_WRITE_DISCARD_NV");
#endif
#if defined(GL_TIME_ELAPSED)
defconsti(env, "GL-TIME-ELAPSED", (GLenum) GL_TIME_ELAPSED, "GL_TIME_ELAPSED");
#endif
#if defined(GL_TIME_ELAPSED_EXT)
defconsti(env, "GL-TIME-ELAPSED-EXT", (GLenum) GL_TIME_ELAPSED_EXT, "GL_TIME_ELAPSED_EXT");
#endif
#if defined(GL_MATRIX0_ARB)
defconsti(env, "GL-MATRIX0-ARB", (GLenum) GL_MATRIX0_ARB, "GL_MATRIX0_ARB");
#endif
#if defined(GL_MATRIX1_ARB)
defconsti(env, "GL-MATRIX1-ARB", (GLenum) GL_MATRIX1_ARB, "GL_MATRIX1_ARB");
#endif
#if defined(GL_MATRIX2_ARB)
defconsti(env, "GL-MATRIX2-ARB", (GLenum) GL_MATRIX2_ARB, "GL_MATRIX2_ARB");
#endif
#if defined(GL_MATRIX3_ARB)
defconsti(env, "GL-MATRIX3-ARB", (GLenum) GL_MATRIX3_ARB, "GL_MATRIX3_ARB");
#endif
#if defined(GL_MATRIX4_ARB)
defconsti(env, "GL-MATRIX4-ARB", (GLenum) GL_MATRIX4_ARB, "GL_MATRIX4_ARB");
#endif
#if defined(GL_MATRIX5_ARB)
defconsti(env, "GL-MATRIX5-ARB", (GLenum) GL_MATRIX5_ARB, "GL_MATRIX5_ARB");
#endif
#if defined(GL_MATRIX6_ARB)
defconsti(env, "GL-MATRIX6-ARB", (GLenum) GL_MATRIX6_ARB, "GL_MATRIX6_ARB");
#endif
#if defined(GL_MATRIX7_ARB)
defconsti(env, "GL-MATRIX7-ARB", (GLenum) GL_MATRIX7_ARB, "GL_MATRIX7_ARB");
#endif
#if defined(GL_MATRIX8_ARB)
defconsti(env, "GL-MATRIX8-ARB", (GLenum) GL_MATRIX8_ARB, "GL_MATRIX8_ARB");
#endif
#if defined(GL_MATRIX9_ARB)
defconsti(env, "GL-MATRIX9-ARB", (GLenum) GL_MATRIX9_ARB, "GL_MATRIX9_ARB");
#endif
#if defined(GL_MATRIX10_ARB)
defconsti(env, "GL-MATRIX10-ARB", (GLenum) GL_MATRIX10_ARB, "GL_MATRIX10_ARB");
#endif
#if defined(GL_MATRIX11_ARB)
defconsti(env, "GL-MATRIX11-ARB", (GLenum) GL_MATRIX11_ARB, "GL_MATRIX11_ARB");
#endif
#if defined(GL_MATRIX12_ARB)
defconsti(env, "GL-MATRIX12-ARB", (GLenum) GL_MATRIX12_ARB, "GL_MATRIX12_ARB");
#endif
#if defined(GL_MATRIX13_ARB)
defconsti(env, "GL-MATRIX13-ARB", (GLenum) GL_MATRIX13_ARB, "GL_MATRIX13_ARB");
#endif
#if defined(GL_MATRIX14_ARB)
defconsti(env, "GL-MATRIX14-ARB", (GLenum) GL_MATRIX14_ARB, "GL_MATRIX14_ARB");
#endif
#if defined(GL_MATRIX15_ARB)
defconsti(env, "GL-MATRIX15-ARB", (GLenum) GL_MATRIX15_ARB, "GL_MATRIX15_ARB");
#endif
#if defined(GL_MATRIX16_ARB)
defconsti(env, "GL-MATRIX16-ARB", (GLenum) GL_MATRIX16_ARB, "GL_MATRIX16_ARB");
#endif
#if defined(GL_MATRIX17_ARB)
defconsti(env, "GL-MATRIX17-ARB", (GLenum) GL_MATRIX17_ARB, "GL_MATRIX17_ARB");
#endif
#if defined(GL_MATRIX18_ARB)
defconsti(env, "GL-MATRIX18-ARB", (GLenum) GL_MATRIX18_ARB, "GL_MATRIX18_ARB");
#endif
#if defined(GL_MATRIX19_ARB)
defconsti(env, "GL-MATRIX19-ARB", (GLenum) GL_MATRIX19_ARB, "GL_MATRIX19_ARB");
#endif
#if defined(GL_MATRIX20_ARB)
defconsti(env, "GL-MATRIX20-ARB", (GLenum) GL_MATRIX20_ARB, "GL_MATRIX20_ARB");
#endif
#if defined(GL_MATRIX21_ARB)
defconsti(env, "GL-MATRIX21-ARB", (GLenum) GL_MATRIX21_ARB, "GL_MATRIX21_ARB");
#endif
#if defined(GL_MATRIX22_ARB)
defconsti(env, "GL-MATRIX22-ARB", (GLenum) GL_MATRIX22_ARB, "GL_MATRIX22_ARB");
#endif
#if defined(GL_MATRIX23_ARB)
defconsti(env, "GL-MATRIX23-ARB", (GLenum) GL_MATRIX23_ARB, "GL_MATRIX23_ARB");
#endif
#if defined(GL_MATRIX24_ARB)
defconsti(env, "GL-MATRIX24-ARB", (GLenum) GL_MATRIX24_ARB, "GL_MATRIX24_ARB");
#endif
#if defined(GL_MATRIX25_ARB)
defconsti(env, "GL-MATRIX25-ARB", (GLenum) GL_MATRIX25_ARB, "GL_MATRIX25_ARB");
#endif
#if defined(GL_MATRIX26_ARB)
defconsti(env, "GL-MATRIX26-ARB", (GLenum) GL_MATRIX26_ARB, "GL_MATRIX26_ARB");
#endif
#if defined(GL_MATRIX27_ARB)
defconsti(env, "GL-MATRIX27-ARB", (GLenum) GL_MATRIX27_ARB, "GL_MATRIX27_ARB");
#endif
#if defined(GL_MATRIX28_ARB)
defconsti(env, "GL-MATRIX28-ARB", (GLenum) GL_MATRIX28_ARB, "GL_MATRIX28_ARB");
#endif
#if defined(GL_MATRIX29_ARB)
defconsti(env, "GL-MATRIX29-ARB", (GLenum) GL_MATRIX29_ARB, "GL_MATRIX29_ARB");
#endif
#if defined(GL_MATRIX30_ARB)
defconsti(env, "GL-MATRIX30-ARB", (GLenum) GL_MATRIX30_ARB, "GL_MATRIX30_ARB");
#endif
#if defined(GL_MATRIX31_ARB)
defconsti(env, "GL-MATRIX31-ARB", (GLenum) GL_MATRIX31_ARB, "GL_MATRIX31_ARB");
#endif
#if defined(GL_STREAM_DRAW)
defconsti(env, "GL-STREAM-DRAW", (GLenum) GL_STREAM_DRAW, "GL_STREAM_DRAW");
#endif
#if defined(GL_STREAM_DRAW_ARB)
defconsti(env, "GL-STREAM-DRAW-ARB", (GLenum) GL_STREAM_DRAW_ARB, "GL_STREAM_DRAW_ARB");
#endif
#if defined(GL_STREAM_READ)
defconsti(env, "GL-STREAM-READ", (GLenum) GL_STREAM_READ, "GL_STREAM_READ");
#endif
#if defined(GL_STREAM_READ_ARB)
defconsti(env, "GL-STREAM-READ-ARB", (GLenum) GL_STREAM_READ_ARB, "GL_STREAM_READ_ARB");
#endif
#if defined(GL_STREAM_COPY)
defconsti(env, "GL-STREAM-COPY", (GLenum) GL_STREAM_COPY, "GL_STREAM_COPY");
#endif
#if defined(GL_STREAM_COPY_ARB)
defconsti(env, "GL-STREAM-COPY-ARB", (GLenum) GL_STREAM_COPY_ARB, "GL_STREAM_COPY_ARB");
#endif
#if defined(GL_STATIC_DRAW)
defconsti(env, "GL-STATIC-DRAW", (GLenum) GL_STATIC_DRAW, "GL_STATIC_DRAW");
#endif
#if defined(GL_STATIC_DRAW_ARB)
defconsti(env, "GL-STATIC-DRAW-ARB", (GLenum) GL_STATIC_DRAW_ARB, "GL_STATIC_DRAW_ARB");
#endif
#if defined(GL_STATIC_READ)
defconsti(env, "GL-STATIC-READ", (GLenum) GL_STATIC_READ, "GL_STATIC_READ");
#endif
#if defined(GL_STATIC_READ_ARB)
defconsti(env, "GL-STATIC-READ-ARB", (GLenum) GL_STATIC_READ_ARB, "GL_STATIC_READ_ARB");
#endif
#if defined(GL_STATIC_COPY)
defconsti(env, "GL-STATIC-COPY", (GLenum) GL_STATIC_COPY, "GL_STATIC_COPY");
#endif
#if defined(GL_STATIC_COPY_ARB)
defconsti(env, "GL-STATIC-COPY-ARB", (GLenum) GL_STATIC_COPY_ARB, "GL_STATIC_COPY_ARB");
#endif
#if defined(GL_DYNAMIC_DRAW)
defconsti(env, "GL-DYNAMIC-DRAW", (GLenum) GL_DYNAMIC_DRAW, "GL_DYNAMIC_DRAW");
#endif
#if defined(GL_DYNAMIC_DRAW_ARB)
defconsti(env, "GL-DYNAMIC-DRAW-ARB", (GLenum) GL_DYNAMIC_DRAW_ARB, "GL_DYNAMIC_DRAW_ARB");
#endif
#if defined(GL_DYNAMIC_READ)
defconsti(env, "GL-DYNAMIC-READ", (GLenum) GL_DYNAMIC_READ, "GL_DYNAMIC_READ");
#endif
#if defined(GL_DYNAMIC_READ_ARB)
defconsti(env, "GL-DYNAMIC-READ-ARB", (GLenum) GL_DYNAMIC_READ_ARB, "GL_DYNAMIC_READ_ARB");
#endif
#if defined(GL_DYNAMIC_COPY)
defconsti(env, "GL-DYNAMIC-COPY", (GLenum) GL_DYNAMIC_COPY, "GL_DYNAMIC_COPY");
#endif
#if defined(GL_DYNAMIC_COPY_ARB)
defconsti(env, "GL-DYNAMIC-COPY-ARB", (GLenum) GL_DYNAMIC_COPY_ARB, "GL_DYNAMIC_COPY_ARB");
#endif
#if defined(GL_PIXEL_PACK_BUFFER)
defconsti(env, "GL-PIXEL-PACK-BUFFER", (GLenum) GL_PIXEL_PACK_BUFFER, "GL_PIXEL_PACK_BUFFER");
#endif
#if defined(GL_PIXEL_PACK_BUFFER_ARB)
defconsti(env, "GL-PIXEL-PACK-BUFFER-ARB", (GLenum) GL_PIXEL_PACK_BUFFER_ARB, "GL_PIXEL_PACK_BUFFER_ARB");
#endif
#if defined(GL_PIXEL_PACK_BUFFER_EXT)
defconsti(env, "GL-PIXEL-PACK-BUFFER-EXT", (GLenum) GL_PIXEL_PACK_BUFFER_EXT, "GL_PIXEL_PACK_BUFFER_EXT");
#endif
#if defined(GL_PIXEL_PACK_BUFFER_NV)
defconsti(env, "GL-PIXEL-PACK-BUFFER-NV", (GLenum) GL_PIXEL_PACK_BUFFER_NV, "GL_PIXEL_PACK_BUFFER_NV");
#endif
#if defined(GL_PIXEL_UNPACK_BUFFER)
defconsti(env, "GL-PIXEL-UNPACK-BUFFER", (GLenum) GL_PIXEL_UNPACK_BUFFER, "GL_PIXEL_UNPACK_BUFFER");
#endif
#if defined(GL_PIXEL_UNPACK_BUFFER_ARB)
defconsti(env, "GL-PIXEL-UNPACK-BUFFER-ARB", (GLenum) GL_PIXEL_UNPACK_BUFFER_ARB, "GL_PIXEL_UNPACK_BUFFER_ARB");
#endif
#if defined(GL_PIXEL_UNPACK_BUFFER_EXT)
defconsti(env, "GL-PIXEL-UNPACK-BUFFER-EXT", (GLenum) GL_PIXEL_UNPACK_BUFFER_EXT, "GL_PIXEL_UNPACK_BUFFER_EXT");
#endif
#if defined(GL_PIXEL_UNPACK_BUFFER_NV)
defconsti(env, "GL-PIXEL-UNPACK-BUFFER-NV", (GLenum) GL_PIXEL_UNPACK_BUFFER_NV, "GL_PIXEL_UNPACK_BUFFER_NV");
#endif
#if defined(GL_PIXEL_PACK_BUFFER_BINDING)
defconsti(env, "GL-PIXEL-PACK-BUFFER-BINDING", (GLenum) GL_PIXEL_PACK_BUFFER_BINDING, "GL_PIXEL_PACK_BUFFER_BINDING");
#endif
#if defined(GL_PIXEL_PACK_BUFFER_BINDING_ARB)
defconsti(env, "GL-PIXEL-PACK-BUFFER-BINDING-ARB", (GLenum) GL_PIXEL_PACK_BUFFER_BINDING_ARB, "GL_PIXEL_PACK_BUFFER_BINDING_ARB");
#endif
#if defined(GL_PIXEL_PACK_BUFFER_BINDING_EXT)
defconsti(env, "GL-PIXEL-PACK-BUFFER-BINDING-EXT", (GLenum) GL_PIXEL_PACK_BUFFER_BINDING_EXT, "GL_PIXEL_PACK_BUFFER_BINDING_EXT");
#endif
#if defined(GL_PIXEL_PACK_BUFFER_BINDING_NV)
defconsti(env, "GL-PIXEL-PACK-BUFFER-BINDING-NV", (GLenum) GL_PIXEL_PACK_BUFFER_BINDING_NV, "GL_PIXEL_PACK_BUFFER_BINDING_NV");
#endif
#if defined(GL_ETC1_SRGB8_NV)
defconsti(env, "GL-ETC1-SRGB8-NV", (GLenum) GL_ETC1_SRGB8_NV, "GL_ETC1_SRGB8_NV");
#endif
#if defined(GL_PIXEL_UNPACK_BUFFER_BINDING)
defconsti(env, "GL-PIXEL-UNPACK-BUFFER-BINDING", (GLenum) GL_PIXEL_UNPACK_BUFFER_BINDING, "GL_PIXEL_UNPACK_BUFFER_BINDING");
#endif
#if defined(GL_PIXEL_UNPACK_BUFFER_BINDING_ARB)
defconsti(env, "GL-PIXEL-UNPACK-BUFFER-BINDING-ARB", (GLenum) GL_PIXEL_UNPACK_BUFFER_BINDING_ARB, "GL_PIXEL_UNPACK_BUFFER_BINDING_ARB");
#endif
#if defined(GL_PIXEL_UNPACK_BUFFER_BINDING_EXT)
defconsti(env, "GL-PIXEL-UNPACK-BUFFER-BINDING-EXT", (GLenum) GL_PIXEL_UNPACK_BUFFER_BINDING_EXT, "GL_PIXEL_UNPACK_BUFFER_BINDING_EXT");
#endif
#if defined(GL_PIXEL_UNPACK_BUFFER_BINDING_NV)
defconsti(env, "GL-PIXEL-UNPACK-BUFFER-BINDING-NV", (GLenum) GL_PIXEL_UNPACK_BUFFER_BINDING_NV, "GL_PIXEL_UNPACK_BUFFER_BINDING_NV");
#endif
#if defined(GL_DEPTH24_STENCIL8)
defconsti(env, "GL-DEPTH24-STENCIL8", (GLenum) GL_DEPTH24_STENCIL8, "GL_DEPTH24_STENCIL8");
#endif
#if defined(GL_DEPTH24_STENCIL8_EXT)
defconsti(env, "GL-DEPTH24-STENCIL8-EXT", (GLenum) GL_DEPTH24_STENCIL8_EXT, "GL_DEPTH24_STENCIL8_EXT");
#endif
#if defined(GL_DEPTH24_STENCIL8_OES)
defconsti(env, "GL-DEPTH24-STENCIL8-OES", (GLenum) GL_DEPTH24_STENCIL8_OES, "GL_DEPTH24_STENCIL8_OES");
#endif
#if defined(GL_TEXTURE_STENCIL_SIZE)
defconsti(env, "GL-TEXTURE-STENCIL-SIZE", (GLenum) GL_TEXTURE_STENCIL_SIZE, "GL_TEXTURE_STENCIL_SIZE");
#endif
#if defined(GL_TEXTURE_STENCIL_SIZE_EXT)
defconsti(env, "GL-TEXTURE-STENCIL-SIZE-EXT", (GLenum) GL_TEXTURE_STENCIL_SIZE_EXT, "GL_TEXTURE_STENCIL_SIZE_EXT");
#endif
#if defined(GL_STENCIL_TAG_BITS_EXT)
defconsti(env, "GL-STENCIL-TAG-BITS-EXT", (GLenum) GL_STENCIL_TAG_BITS_EXT, "GL_STENCIL_TAG_BITS_EXT");
#endif
#if defined(GL_STENCIL_CLEAR_TAG_VALUE_EXT)
defconsti(env, "GL-STENCIL-CLEAR-TAG-VALUE-EXT", (GLenum) GL_STENCIL_CLEAR_TAG_VALUE_EXT, "GL_STENCIL_CLEAR_TAG_VALUE_EXT");
#endif
#if defined(GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV)
defconsti(env, "GL-MAX-PROGRAM-EXEC-INSTRUCTIONS-NV", (GLenum) GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV, "GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV");
#endif
#if defined(GL_MAX_PROGRAM_CALL_DEPTH_NV)
defconsti(env, "GL-MAX-PROGRAM-CALL-DEPTH-NV", (GLenum) GL_MAX_PROGRAM_CALL_DEPTH_NV, "GL_MAX_PROGRAM_CALL_DEPTH_NV");
#endif
#if defined(GL_MAX_PROGRAM_IF_DEPTH_NV)
defconsti(env, "GL-MAX-PROGRAM-IF-DEPTH-NV", (GLenum) GL_MAX_PROGRAM_IF_DEPTH_NV, "GL_MAX_PROGRAM_IF_DEPTH_NV");
#endif
#if defined(GL_MAX_PROGRAM_LOOP_DEPTH_NV)
defconsti(env, "GL-MAX-PROGRAM-LOOP-DEPTH-NV", (GLenum) GL_MAX_PROGRAM_LOOP_DEPTH_NV, "GL_MAX_PROGRAM_LOOP_DEPTH_NV");
#endif
#if defined(GL_MAX_PROGRAM_LOOP_COUNT_NV)
defconsti(env, "GL-MAX-PROGRAM-LOOP-COUNT-NV", (GLenum) GL_MAX_PROGRAM_LOOP_COUNT_NV, "GL_MAX_PROGRAM_LOOP_COUNT_NV");
#endif
#if defined(GL_SRC1_COLOR)
defconsti(env, "GL-SRC1-COLOR", (GLenum) GL_SRC1_COLOR, "GL_SRC1_COLOR");
#endif
#if defined(GL_SRC1_COLOR_EXT)
defconsti(env, "GL-SRC1-COLOR-EXT", (GLenum) GL_SRC1_COLOR_EXT, "GL_SRC1_COLOR_EXT");
#endif
#if defined(GL_ONE_MINUS_SRC1_COLOR)
defconsti(env, "GL-ONE-MINUS-SRC1-COLOR", (GLenum) GL_ONE_MINUS_SRC1_COLOR, "GL_ONE_MINUS_SRC1_COLOR");
#endif
#if defined(GL_ONE_MINUS_SRC1_COLOR_EXT)
defconsti(env, "GL-ONE-MINUS-SRC1-COLOR-EXT", (GLenum) GL_ONE_MINUS_SRC1_COLOR_EXT, "GL_ONE_MINUS_SRC1_COLOR_EXT");
#endif
#if defined(GL_ONE_MINUS_SRC1_ALPHA)
defconsti(env, "GL-ONE-MINUS-SRC1-ALPHA", (GLenum) GL_ONE_MINUS_SRC1_ALPHA, "GL_ONE_MINUS_SRC1_ALPHA");
#endif
#if defined(GL_ONE_MINUS_SRC1_ALPHA_EXT)
defconsti(env, "GL-ONE-MINUS-SRC1-ALPHA-EXT", (GLenum) GL_ONE_MINUS_SRC1_ALPHA_EXT, "GL_ONE_MINUS_SRC1_ALPHA_EXT");
#endif
#if defined(GL_MAX_DUAL_SOURCE_DRAW_BUFFERS)
defconsti(env, "GL-MAX-DUAL-SOURCE-DRAW-BUFFERS", (GLenum) GL_MAX_DUAL_SOURCE_DRAW_BUFFERS, "GL_MAX_DUAL_SOURCE_DRAW_BUFFERS");
#endif
#if defined(GL_MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT)
defconsti(env, "GL-MAX-DUAL-SOURCE-DRAW-BUFFERS-EXT", (GLenum) GL_MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT, "GL_MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_INTEGER)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-INTEGER", (GLenum) GL_VERTEX_ATTRIB_ARRAY_INTEGER, "GL_VERTEX_ATTRIB_ARRAY_INTEGER");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-INTEGER-EXT", (GLenum) GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT, "GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-INTEGER-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV, "GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_DIVISOR)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-DIVISOR", (GLenum) GL_VERTEX_ATTRIB_ARRAY_DIVISOR, "GL_VERTEX_ATTRIB_ARRAY_DIVISOR");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-DIVISOR-ANGLE", (GLenum) GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE, "GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-DIVISOR-ARB", (GLenum) GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB, "GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-DIVISOR-EXT", (GLenum) GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT, "GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-DIVISOR-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV, "GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV");
#endif
#if defined(GL_MAX_ARRAY_TEXTURE_LAYERS)
defconsti(env, "GL-MAX-ARRAY-TEXTURE-LAYERS", (GLenum) GL_MAX_ARRAY_TEXTURE_LAYERS, "GL_MAX_ARRAY_TEXTURE_LAYERS");
#endif
#if defined(GL_MAX_ARRAY_TEXTURE_LAYERS_EXT)
defconsti(env, "GL-MAX-ARRAY-TEXTURE-LAYERS-EXT", (GLenum) GL_MAX_ARRAY_TEXTURE_LAYERS_EXT, "GL_MAX_ARRAY_TEXTURE_LAYERS_EXT");
#endif
#if defined(GL_MIN_PROGRAM_TEXEL_OFFSET)
defconsti(env, "GL-MIN-PROGRAM-TEXEL-OFFSET", (GLenum) GL_MIN_PROGRAM_TEXEL_OFFSET, "GL_MIN_PROGRAM_TEXEL_OFFSET");
#endif
#if defined(GL_MIN_PROGRAM_TEXEL_OFFSET_EXT)
defconsti(env, "GL-MIN-PROGRAM-TEXEL-OFFSET-EXT", (GLenum) GL_MIN_PROGRAM_TEXEL_OFFSET_EXT, "GL_MIN_PROGRAM_TEXEL_OFFSET_EXT");
#endif
#if defined(GL_MIN_PROGRAM_TEXEL_OFFSET_NV)
defconsti(env, "GL-MIN-PROGRAM-TEXEL-OFFSET-NV", (GLenum) GL_MIN_PROGRAM_TEXEL_OFFSET_NV, "GL_MIN_PROGRAM_TEXEL_OFFSET_NV");
#endif
#if defined(GL_MAX_PROGRAM_TEXEL_OFFSET)
defconsti(env, "GL-MAX-PROGRAM-TEXEL-OFFSET", (GLenum) GL_MAX_PROGRAM_TEXEL_OFFSET, "GL_MAX_PROGRAM_TEXEL_OFFSET");
#endif
#if defined(GL_MAX_PROGRAM_TEXEL_OFFSET_EXT)
defconsti(env, "GL-MAX-PROGRAM-TEXEL-OFFSET-EXT", (GLenum) GL_MAX_PROGRAM_TEXEL_OFFSET_EXT, "GL_MAX_PROGRAM_TEXEL_OFFSET_EXT");
#endif
#if defined(GL_MAX_PROGRAM_TEXEL_OFFSET_NV)
defconsti(env, "GL-MAX-PROGRAM-TEXEL-OFFSET-NV", (GLenum) GL_MAX_PROGRAM_TEXEL_OFFSET_NV, "GL_MAX_PROGRAM_TEXEL_OFFSET_NV");
#endif
#if defined(GL_PROGRAM_ATTRIB_COMPONENTS_NV)
defconsti(env, "GL-PROGRAM-ATTRIB-COMPONENTS-NV", (GLenum) GL_PROGRAM_ATTRIB_COMPONENTS_NV, "GL_PROGRAM_ATTRIB_COMPONENTS_NV");
#endif
#if defined(GL_PROGRAM_RESULT_COMPONENTS_NV)
defconsti(env, "GL-PROGRAM-RESULT-COMPONENTS-NV", (GLenum) GL_PROGRAM_RESULT_COMPONENTS_NV, "GL_PROGRAM_RESULT_COMPONENTS_NV");
#endif
#if defined(GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV)
defconsti(env, "GL-MAX-PROGRAM-ATTRIB-COMPONENTS-NV", (GLenum) GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV, "GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV");
#endif
#if defined(GL_MAX_PROGRAM_RESULT_COMPONENTS_NV)
defconsti(env, "GL-MAX-PROGRAM-RESULT-COMPONENTS-NV", (GLenum) GL_MAX_PROGRAM_RESULT_COMPONENTS_NV, "GL_MAX_PROGRAM_RESULT_COMPONENTS_NV");
#endif
#if defined(GL_STENCIL_TEST_TWO_SIDE_EXT)
defconsti(env, "GL-STENCIL-TEST-TWO-SIDE-EXT", (GLenum) GL_STENCIL_TEST_TWO_SIDE_EXT, "GL_STENCIL_TEST_TWO_SIDE_EXT");
#endif
#if defined(GL_ACTIVE_STENCIL_FACE_EXT)
defconsti(env, "GL-ACTIVE-STENCIL-FACE-EXT", (GLenum) GL_ACTIVE_STENCIL_FACE_EXT, "GL_ACTIVE_STENCIL_FACE_EXT");
#endif
#if defined(GL_MIRROR_CLAMP_TO_BORDER_EXT)
defconsti(env, "GL-MIRROR-CLAMP-TO-BORDER-EXT", (GLenum) GL_MIRROR_CLAMP_TO_BORDER_EXT, "GL_MIRROR_CLAMP_TO_BORDER_EXT");
#endif
#if defined(GL_SAMPLES_PASSED)
defconsti(env, "GL-SAMPLES-PASSED", (GLenum) GL_SAMPLES_PASSED, "GL_SAMPLES_PASSED");
#endif
#if defined(GL_SAMPLES_PASSED_ARB)
defconsti(env, "GL-SAMPLES-PASSED-ARB", (GLenum) GL_SAMPLES_PASSED_ARB, "GL_SAMPLES_PASSED_ARB");
#endif
#if defined(GL_GEOMETRY_VERTICES_OUT)
defconsti(env, "GL-GEOMETRY-VERTICES-OUT", (GLenum) GL_GEOMETRY_VERTICES_OUT, "GL_GEOMETRY_VERTICES_OUT");
#endif
#if defined(GL_GEOMETRY_LINKED_VERTICES_OUT_EXT)
defconsti(env, "GL-GEOMETRY-LINKED-VERTICES-OUT-EXT", (GLenum) GL_GEOMETRY_LINKED_VERTICES_OUT_EXT, "GL_GEOMETRY_LINKED_VERTICES_OUT_EXT");
#endif
#if defined(GL_GEOMETRY_LINKED_VERTICES_OUT_OES)
defconsti(env, "GL-GEOMETRY-LINKED-VERTICES-OUT-OES", (GLenum) GL_GEOMETRY_LINKED_VERTICES_OUT_OES, "GL_GEOMETRY_LINKED_VERTICES_OUT_OES");
#endif
#if defined(GL_GEOMETRY_INPUT_TYPE)
defconsti(env, "GL-GEOMETRY-INPUT-TYPE", (GLenum) GL_GEOMETRY_INPUT_TYPE, "GL_GEOMETRY_INPUT_TYPE");
#endif
#if defined(GL_GEOMETRY_LINKED_INPUT_TYPE_EXT)
defconsti(env, "GL-GEOMETRY-LINKED-INPUT-TYPE-EXT", (GLenum) GL_GEOMETRY_LINKED_INPUT_TYPE_EXT, "GL_GEOMETRY_LINKED_INPUT_TYPE_EXT");
#endif
#if defined(GL_GEOMETRY_LINKED_INPUT_TYPE_OES)
defconsti(env, "GL-GEOMETRY-LINKED-INPUT-TYPE-OES", (GLenum) GL_GEOMETRY_LINKED_INPUT_TYPE_OES, "GL_GEOMETRY_LINKED_INPUT_TYPE_OES");
#endif
#if defined(GL_GEOMETRY_OUTPUT_TYPE)
defconsti(env, "GL-GEOMETRY-OUTPUT-TYPE", (GLenum) GL_GEOMETRY_OUTPUT_TYPE, "GL_GEOMETRY_OUTPUT_TYPE");
#endif
#if defined(GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT)
defconsti(env, "GL-GEOMETRY-LINKED-OUTPUT-TYPE-EXT", (GLenum) GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT, "GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT");
#endif
#if defined(GL_GEOMETRY_LINKED_OUTPUT_TYPE_OES)
defconsti(env, "GL-GEOMETRY-LINKED-OUTPUT-TYPE-OES", (GLenum) GL_GEOMETRY_LINKED_OUTPUT_TYPE_OES, "GL_GEOMETRY_LINKED_OUTPUT_TYPE_OES");
#endif
#if defined(GL_SAMPLER_BINDING)
defconsti(env, "GL-SAMPLER-BINDING", (GLenum) GL_SAMPLER_BINDING, "GL_SAMPLER_BINDING");
#endif
#if defined(GL_CLAMP_VERTEX_COLOR)
defconsti(env, "GL-CLAMP-VERTEX-COLOR", (GLenum) GL_CLAMP_VERTEX_COLOR, "GL_CLAMP_VERTEX_COLOR");
#endif
#if defined(GL_CLAMP_VERTEX_COLOR_ARB)
defconsti(env, "GL-CLAMP-VERTEX-COLOR-ARB", (GLenum) GL_CLAMP_VERTEX_COLOR_ARB, "GL_CLAMP_VERTEX_COLOR_ARB");
#endif
#if defined(GL_CLAMP_FRAGMENT_COLOR)
defconsti(env, "GL-CLAMP-FRAGMENT-COLOR", (GLenum) GL_CLAMP_FRAGMENT_COLOR, "GL_CLAMP_FRAGMENT_COLOR");
#endif
#if defined(GL_CLAMP_FRAGMENT_COLOR_ARB)
defconsti(env, "GL-CLAMP-FRAGMENT-COLOR-ARB", (GLenum) GL_CLAMP_FRAGMENT_COLOR_ARB, "GL_CLAMP_FRAGMENT_COLOR_ARB");
#endif
#if defined(GL_CLAMP_READ_COLOR)
defconsti(env, "GL-CLAMP-READ-COLOR", (GLenum) GL_CLAMP_READ_COLOR, "GL_CLAMP_READ_COLOR");
#endif
#if defined(GL_CLAMP_READ_COLOR_ARB)
defconsti(env, "GL-CLAMP-READ-COLOR-ARB", (GLenum) GL_CLAMP_READ_COLOR_ARB, "GL_CLAMP_READ_COLOR_ARB");
#endif
#if defined(GL_FIXED_ONLY)
defconsti(env, "GL-FIXED-ONLY", (GLenum) GL_FIXED_ONLY, "GL_FIXED_ONLY");
#endif
#if defined(GL_FIXED_ONLY_ARB)
defconsti(env, "GL-FIXED-ONLY-ARB", (GLenum) GL_FIXED_ONLY_ARB, "GL_FIXED_ONLY_ARB");
#endif
#if defined(GL_TESS_CONTROL_PROGRAM_NV)
defconsti(env, "GL-TESS-CONTROL-PROGRAM-NV", (GLenum) GL_TESS_CONTROL_PROGRAM_NV, "GL_TESS_CONTROL_PROGRAM_NV");
#endif
#if defined(GL_TESS_EVALUATION_PROGRAM_NV)
defconsti(env, "GL-TESS-EVALUATION-PROGRAM-NV", (GLenum) GL_TESS_EVALUATION_PROGRAM_NV, "GL_TESS_EVALUATION_PROGRAM_NV");
#endif
#if defined(GL_FRAGMENT_SHADER_ATI)
defconsti(env, "GL-FRAGMENT-SHADER-ATI", (GLenum) GL_FRAGMENT_SHADER_ATI, "GL_FRAGMENT_SHADER_ATI");
#endif
#if defined(GL_REG_0_ATI)
defconsti(env, "GL-REG-0-ATI", (GLenum) GL_REG_0_ATI, "GL_REG_0_ATI");
#endif
#if defined(GL_REG_1_ATI)
defconsti(env, "GL-REG-1-ATI", (GLenum) GL_REG_1_ATI, "GL_REG_1_ATI");
#endif
#if defined(GL_REG_2_ATI)
defconsti(env, "GL-REG-2-ATI", (GLenum) GL_REG_2_ATI, "GL_REG_2_ATI");
#endif
#if defined(GL_REG_3_ATI)
defconsti(env, "GL-REG-3-ATI", (GLenum) GL_REG_3_ATI, "GL_REG_3_ATI");
#endif
#if defined(GL_REG_4_ATI)
defconsti(env, "GL-REG-4-ATI", (GLenum) GL_REG_4_ATI, "GL_REG_4_ATI");
#endif
#if defined(GL_REG_5_ATI)
defconsti(env, "GL-REG-5-ATI", (GLenum) GL_REG_5_ATI, "GL_REG_5_ATI");
#endif
#if defined(GL_REG_6_ATI)
defconsti(env, "GL-REG-6-ATI", (GLenum) GL_REG_6_ATI, "GL_REG_6_ATI");
#endif
#if defined(GL_REG_7_ATI)
defconsti(env, "GL-REG-7-ATI", (GLenum) GL_REG_7_ATI, "GL_REG_7_ATI");
#endif
#if defined(GL_REG_8_ATI)
defconsti(env, "GL-REG-8-ATI", (GLenum) GL_REG_8_ATI, "GL_REG_8_ATI");
#endif
#if defined(GL_REG_9_ATI)
defconsti(env, "GL-REG-9-ATI", (GLenum) GL_REG_9_ATI, "GL_REG_9_ATI");
#endif
#if defined(GL_REG_10_ATI)
defconsti(env, "GL-REG-10-ATI", (GLenum) GL_REG_10_ATI, "GL_REG_10_ATI");
#endif
#if defined(GL_REG_11_ATI)
defconsti(env, "GL-REG-11-ATI", (GLenum) GL_REG_11_ATI, "GL_REG_11_ATI");
#endif
#if defined(GL_REG_12_ATI)
defconsti(env, "GL-REG-12-ATI", (GLenum) GL_REG_12_ATI, "GL_REG_12_ATI");
#endif
#if defined(GL_REG_13_ATI)
defconsti(env, "GL-REG-13-ATI", (GLenum) GL_REG_13_ATI, "GL_REG_13_ATI");
#endif
#if defined(GL_REG_14_ATI)
defconsti(env, "GL-REG-14-ATI", (GLenum) GL_REG_14_ATI, "GL_REG_14_ATI");
#endif
#if defined(GL_REG_15_ATI)
defconsti(env, "GL-REG-15-ATI", (GLenum) GL_REG_15_ATI, "GL_REG_15_ATI");
#endif
#if defined(GL_REG_16_ATI)
defconsti(env, "GL-REG-16-ATI", (GLenum) GL_REG_16_ATI, "GL_REG_16_ATI");
#endif
#if defined(GL_REG_17_ATI)
defconsti(env, "GL-REG-17-ATI", (GLenum) GL_REG_17_ATI, "GL_REG_17_ATI");
#endif
#if defined(GL_REG_18_ATI)
defconsti(env, "GL-REG-18-ATI", (GLenum) GL_REG_18_ATI, "GL_REG_18_ATI");
#endif
#if defined(GL_REG_19_ATI)
defconsti(env, "GL-REG-19-ATI", (GLenum) GL_REG_19_ATI, "GL_REG_19_ATI");
#endif
#if defined(GL_REG_20_ATI)
defconsti(env, "GL-REG-20-ATI", (GLenum) GL_REG_20_ATI, "GL_REG_20_ATI");
#endif
#if defined(GL_REG_21_ATI)
defconsti(env, "GL-REG-21-ATI", (GLenum) GL_REG_21_ATI, "GL_REG_21_ATI");
#endif
#if defined(GL_REG_22_ATI)
defconsti(env, "GL-REG-22-ATI", (GLenum) GL_REG_22_ATI, "GL_REG_22_ATI");
#endif
#if defined(GL_REG_23_ATI)
defconsti(env, "GL-REG-23-ATI", (GLenum) GL_REG_23_ATI, "GL_REG_23_ATI");
#endif
#if defined(GL_REG_24_ATI)
defconsti(env, "GL-REG-24-ATI", (GLenum) GL_REG_24_ATI, "GL_REG_24_ATI");
#endif
#if defined(GL_REG_25_ATI)
defconsti(env, "GL-REG-25-ATI", (GLenum) GL_REG_25_ATI, "GL_REG_25_ATI");
#endif
#if defined(GL_REG_26_ATI)
defconsti(env, "GL-REG-26-ATI", (GLenum) GL_REG_26_ATI, "GL_REG_26_ATI");
#endif
#if defined(GL_REG_27_ATI)
defconsti(env, "GL-REG-27-ATI", (GLenum) GL_REG_27_ATI, "GL_REG_27_ATI");
#endif
#if defined(GL_REG_28_ATI)
defconsti(env, "GL-REG-28-ATI", (GLenum) GL_REG_28_ATI, "GL_REG_28_ATI");
#endif
#if defined(GL_REG_29_ATI)
defconsti(env, "GL-REG-29-ATI", (GLenum) GL_REG_29_ATI, "GL_REG_29_ATI");
#endif
#if defined(GL_REG_30_ATI)
defconsti(env, "GL-REG-30-ATI", (GLenum) GL_REG_30_ATI, "GL_REG_30_ATI");
#endif
#if defined(GL_REG_31_ATI)
defconsti(env, "GL-REG-31-ATI", (GLenum) GL_REG_31_ATI, "GL_REG_31_ATI");
#endif
#if defined(GL_CON_0_ATI)
defconsti(env, "GL-CON-0-ATI", (GLenum) GL_CON_0_ATI, "GL_CON_0_ATI");
#endif
#if defined(GL_CON_1_ATI)
defconsti(env, "GL-CON-1-ATI", (GLenum) GL_CON_1_ATI, "GL_CON_1_ATI");
#endif
#if defined(GL_CON_2_ATI)
defconsti(env, "GL-CON-2-ATI", (GLenum) GL_CON_2_ATI, "GL_CON_2_ATI");
#endif
#if defined(GL_CON_3_ATI)
defconsti(env, "GL-CON-3-ATI", (GLenum) GL_CON_3_ATI, "GL_CON_3_ATI");
#endif
#if defined(GL_CON_4_ATI)
defconsti(env, "GL-CON-4-ATI", (GLenum) GL_CON_4_ATI, "GL_CON_4_ATI");
#endif
#if defined(GL_CON_5_ATI)
defconsti(env, "GL-CON-5-ATI", (GLenum) GL_CON_5_ATI, "GL_CON_5_ATI");
#endif
#if defined(GL_CON_6_ATI)
defconsti(env, "GL-CON-6-ATI", (GLenum) GL_CON_6_ATI, "GL_CON_6_ATI");
#endif
#if defined(GL_CON_7_ATI)
defconsti(env, "GL-CON-7-ATI", (GLenum) GL_CON_7_ATI, "GL_CON_7_ATI");
#endif
#if defined(GL_CON_8_ATI)
defconsti(env, "GL-CON-8-ATI", (GLenum) GL_CON_8_ATI, "GL_CON_8_ATI");
#endif
#if defined(GL_CON_9_ATI)
defconsti(env, "GL-CON-9-ATI", (GLenum) GL_CON_9_ATI, "GL_CON_9_ATI");
#endif
#if defined(GL_CON_10_ATI)
defconsti(env, "GL-CON-10-ATI", (GLenum) GL_CON_10_ATI, "GL_CON_10_ATI");
#endif
#if defined(GL_CON_11_ATI)
defconsti(env, "GL-CON-11-ATI", (GLenum) GL_CON_11_ATI, "GL_CON_11_ATI");
#endif
#if defined(GL_CON_12_ATI)
defconsti(env, "GL-CON-12-ATI", (GLenum) GL_CON_12_ATI, "GL_CON_12_ATI");
#endif
#if defined(GL_CON_13_ATI)
defconsti(env, "GL-CON-13-ATI", (GLenum) GL_CON_13_ATI, "GL_CON_13_ATI");
#endif
#if defined(GL_CON_14_ATI)
defconsti(env, "GL-CON-14-ATI", (GLenum) GL_CON_14_ATI, "GL_CON_14_ATI");
#endif
#if defined(GL_CON_15_ATI)
defconsti(env, "GL-CON-15-ATI", (GLenum) GL_CON_15_ATI, "GL_CON_15_ATI");
#endif
#if defined(GL_CON_16_ATI)
defconsti(env, "GL-CON-16-ATI", (GLenum) GL_CON_16_ATI, "GL_CON_16_ATI");
#endif
#if defined(GL_CON_17_ATI)
defconsti(env, "GL-CON-17-ATI", (GLenum) GL_CON_17_ATI, "GL_CON_17_ATI");
#endif
#if defined(GL_CON_18_ATI)
defconsti(env, "GL-CON-18-ATI", (GLenum) GL_CON_18_ATI, "GL_CON_18_ATI");
#endif
#if defined(GL_CON_19_ATI)
defconsti(env, "GL-CON-19-ATI", (GLenum) GL_CON_19_ATI, "GL_CON_19_ATI");
#endif
#if defined(GL_CON_20_ATI)
defconsti(env, "GL-CON-20-ATI", (GLenum) GL_CON_20_ATI, "GL_CON_20_ATI");
#endif
#if defined(GL_CON_21_ATI)
defconsti(env, "GL-CON-21-ATI", (GLenum) GL_CON_21_ATI, "GL_CON_21_ATI");
#endif
#if defined(GL_CON_22_ATI)
defconsti(env, "GL-CON-22-ATI", (GLenum) GL_CON_22_ATI, "GL_CON_22_ATI");
#endif
#if defined(GL_CON_23_ATI)
defconsti(env, "GL-CON-23-ATI", (GLenum) GL_CON_23_ATI, "GL_CON_23_ATI");
#endif
#if defined(GL_CON_24_ATI)
defconsti(env, "GL-CON-24-ATI", (GLenum) GL_CON_24_ATI, "GL_CON_24_ATI");
#endif
#if defined(GL_CON_25_ATI)
defconsti(env, "GL-CON-25-ATI", (GLenum) GL_CON_25_ATI, "GL_CON_25_ATI");
#endif
#if defined(GL_CON_26_ATI)
defconsti(env, "GL-CON-26-ATI", (GLenum) GL_CON_26_ATI, "GL_CON_26_ATI");
#endif
#if defined(GL_CON_27_ATI)
defconsti(env, "GL-CON-27-ATI", (GLenum) GL_CON_27_ATI, "GL_CON_27_ATI");
#endif
#if defined(GL_CON_28_ATI)
defconsti(env, "GL-CON-28-ATI", (GLenum) GL_CON_28_ATI, "GL_CON_28_ATI");
#endif
#if defined(GL_CON_29_ATI)
defconsti(env, "GL-CON-29-ATI", (GLenum) GL_CON_29_ATI, "GL_CON_29_ATI");
#endif
#if defined(GL_CON_30_ATI)
defconsti(env, "GL-CON-30-ATI", (GLenum) GL_CON_30_ATI, "GL_CON_30_ATI");
#endif
#if defined(GL_CON_31_ATI)
defconsti(env, "GL-CON-31-ATI", (GLenum) GL_CON_31_ATI, "GL_CON_31_ATI");
#endif
#if defined(GL_MOV_ATI)
defconsti(env, "GL-MOV-ATI", (GLenum) GL_MOV_ATI, "GL_MOV_ATI");
#endif
#if defined(GL_ADD_ATI)
defconsti(env, "GL-ADD-ATI", (GLenum) GL_ADD_ATI, "GL_ADD_ATI");
#endif
#if defined(GL_MUL_ATI)
defconsti(env, "GL-MUL-ATI", (GLenum) GL_MUL_ATI, "GL_MUL_ATI");
#endif
#if defined(GL_SUB_ATI)
defconsti(env, "GL-SUB-ATI", (GLenum) GL_SUB_ATI, "GL_SUB_ATI");
#endif
#if defined(GL_DOT3_ATI)
defconsti(env, "GL-DOT3-ATI", (GLenum) GL_DOT3_ATI, "GL_DOT3_ATI");
#endif
#if defined(GL_DOT4_ATI)
defconsti(env, "GL-DOT4-ATI", (GLenum) GL_DOT4_ATI, "GL_DOT4_ATI");
#endif
#if defined(GL_MAD_ATI)
defconsti(env, "GL-MAD-ATI", (GLenum) GL_MAD_ATI, "GL_MAD_ATI");
#endif
#if defined(GL_LERP_ATI)
defconsti(env, "GL-LERP-ATI", (GLenum) GL_LERP_ATI, "GL_LERP_ATI");
#endif
#if defined(GL_CND_ATI)
defconsti(env, "GL-CND-ATI", (GLenum) GL_CND_ATI, "GL_CND_ATI");
#endif
#if defined(GL_CND0_ATI)
defconsti(env, "GL-CND0-ATI", (GLenum) GL_CND0_ATI, "GL_CND0_ATI");
#endif
#if defined(GL_DOT2_ADD_ATI)
defconsti(env, "GL-DOT2-ADD-ATI", (GLenum) GL_DOT2_ADD_ATI, "GL_DOT2_ADD_ATI");
#endif
#if defined(GL_SECONDARY_INTERPOLATOR_ATI)
defconsti(env, "GL-SECONDARY-INTERPOLATOR-ATI", (GLenum) GL_SECONDARY_INTERPOLATOR_ATI, "GL_SECONDARY_INTERPOLATOR_ATI");
#endif
#if defined(GL_NUM_FRAGMENT_REGISTERS_ATI)
defconsti(env, "GL-NUM-FRAGMENT-REGISTERS-ATI", (GLenum) GL_NUM_FRAGMENT_REGISTERS_ATI, "GL_NUM_FRAGMENT_REGISTERS_ATI");
#endif
#if defined(GL_NUM_FRAGMENT_CONSTANTS_ATI)
defconsti(env, "GL-NUM-FRAGMENT-CONSTANTS-ATI", (GLenum) GL_NUM_FRAGMENT_CONSTANTS_ATI, "GL_NUM_FRAGMENT_CONSTANTS_ATI");
#endif
#if defined(GL_NUM_PASSES_ATI)
defconsti(env, "GL-NUM-PASSES-ATI", (GLenum) GL_NUM_PASSES_ATI, "GL_NUM_PASSES_ATI");
#endif
#if defined(GL_NUM_INSTRUCTIONS_PER_PASS_ATI)
defconsti(env, "GL-NUM-INSTRUCTIONS-PER-PASS-ATI", (GLenum) GL_NUM_INSTRUCTIONS_PER_PASS_ATI, "GL_NUM_INSTRUCTIONS_PER_PASS_ATI");
#endif
#if defined(GL_NUM_INSTRUCTIONS_TOTAL_ATI)
defconsti(env, "GL-NUM-INSTRUCTIONS-TOTAL-ATI", (GLenum) GL_NUM_INSTRUCTIONS_TOTAL_ATI, "GL_NUM_INSTRUCTIONS_TOTAL_ATI");
#endif
#if defined(GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI)
defconsti(env, "GL-NUM-INPUT-INTERPOLATOR-COMPONENTS-ATI", (GLenum) GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI, "GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI");
#endif
#if defined(GL_NUM_LOOPBACK_COMPONENTS_ATI)
defconsti(env, "GL-NUM-LOOPBACK-COMPONENTS-ATI", (GLenum) GL_NUM_LOOPBACK_COMPONENTS_ATI, "GL_NUM_LOOPBACK_COMPONENTS_ATI");
#endif
#if defined(GL_COLOR_ALPHA_PAIRING_ATI)
defconsti(env, "GL-COLOR-ALPHA-PAIRING-ATI", (GLenum) GL_COLOR_ALPHA_PAIRING_ATI, "GL_COLOR_ALPHA_PAIRING_ATI");
#endif
#if defined(GL_SWIZZLE_STR_ATI)
defconsti(env, "GL-SWIZZLE-STR-ATI", (GLenum) GL_SWIZZLE_STR_ATI, "GL_SWIZZLE_STR_ATI");
#endif
#if defined(GL_SWIZZLE_STQ_ATI)
defconsti(env, "GL-SWIZZLE-STQ-ATI", (GLenum) GL_SWIZZLE_STQ_ATI, "GL_SWIZZLE_STQ_ATI");
#endif
#if defined(GL_SWIZZLE_STR_DR_ATI)
defconsti(env, "GL-SWIZZLE-STR-DR-ATI", (GLenum) GL_SWIZZLE_STR_DR_ATI, "GL_SWIZZLE_STR_DR_ATI");
#endif
#if defined(GL_SWIZZLE_STQ_DQ_ATI)
defconsti(env, "GL-SWIZZLE-STQ-DQ-ATI", (GLenum) GL_SWIZZLE_STQ_DQ_ATI, "GL_SWIZZLE_STQ_DQ_ATI");
#endif
#if defined(GL_SWIZZLE_STRQ_ATI)
defconsti(env, "GL-SWIZZLE-STRQ-ATI", (GLenum) GL_SWIZZLE_STRQ_ATI, "GL_SWIZZLE_STRQ_ATI");
#endif
#if defined(GL_SWIZZLE_STRQ_DQ_ATI)
defconsti(env, "GL-SWIZZLE-STRQ-DQ-ATI", (GLenum) GL_SWIZZLE_STRQ_DQ_ATI, "GL_SWIZZLE_STRQ_DQ_ATI");
#endif
#if defined(GL_INTERLACE_OML)
defconsti(env, "GL-INTERLACE-OML", (GLenum) GL_INTERLACE_OML, "GL_INTERLACE_OML");
#endif
#if defined(GL_INTERLACE_READ_OML)
defconsti(env, "GL-INTERLACE-READ-OML", (GLenum) GL_INTERLACE_READ_OML, "GL_INTERLACE_READ_OML");
#endif
#if defined(GL_FORMAT_SUBSAMPLE_24_24_OML)
defconsti(env, "GL-FORMAT-SUBSAMPLE-24-24-OML", (GLenum) GL_FORMAT_SUBSAMPLE_24_24_OML, "GL_FORMAT_SUBSAMPLE_24_24_OML");
#endif
#if defined(GL_FORMAT_SUBSAMPLE_244_244_OML)
defconsti(env, "GL-FORMAT-SUBSAMPLE-244-244-OML", (GLenum) GL_FORMAT_SUBSAMPLE_244_244_OML, "GL_FORMAT_SUBSAMPLE_244_244_OML");
#endif
#if defined(GL_PACK_RESAMPLE_OML)
defconsti(env, "GL-PACK-RESAMPLE-OML", (GLenum) GL_PACK_RESAMPLE_OML, "GL_PACK_RESAMPLE_OML");
#endif
#if defined(GL_UNPACK_RESAMPLE_OML)
defconsti(env, "GL-UNPACK-RESAMPLE-OML", (GLenum) GL_UNPACK_RESAMPLE_OML, "GL_UNPACK_RESAMPLE_OML");
#endif
#if defined(GL_RESAMPLE_REPLICATE_OML)
defconsti(env, "GL-RESAMPLE-REPLICATE-OML", (GLenum) GL_RESAMPLE_REPLICATE_OML, "GL_RESAMPLE_REPLICATE_OML");
#endif
#if defined(GL_RESAMPLE_ZERO_FILL_OML)
defconsti(env, "GL-RESAMPLE-ZERO-FILL-OML", (GLenum) GL_RESAMPLE_ZERO_FILL_OML, "GL_RESAMPLE_ZERO_FILL_OML");
#endif
#if defined(GL_RESAMPLE_AVERAGE_OML)
defconsti(env, "GL-RESAMPLE-AVERAGE-OML", (GLenum) GL_RESAMPLE_AVERAGE_OML, "GL_RESAMPLE_AVERAGE_OML");
#endif
#if defined(GL_RESAMPLE_DECIMATE_OML)
defconsti(env, "GL-RESAMPLE-DECIMATE-OML", (GLenum) GL_RESAMPLE_DECIMATE_OML, "GL_RESAMPLE_DECIMATE_OML");
#endif
#if defined(GL_POINT_SIZE_ARRAY_TYPE_OES)
defconsti(env, "GL-POINT-SIZE-ARRAY-TYPE-OES", (GLenum) GL_POINT_SIZE_ARRAY_TYPE_OES, "GL_POINT_SIZE_ARRAY_TYPE_OES");
#endif
#if defined(GL_POINT_SIZE_ARRAY_STRIDE_OES)
defconsti(env, "GL-POINT-SIZE-ARRAY-STRIDE-OES", (GLenum) GL_POINT_SIZE_ARRAY_STRIDE_OES, "GL_POINT_SIZE_ARRAY_STRIDE_OES");
#endif
#if defined(GL_POINT_SIZE_ARRAY_POINTER_OES)
defconsti(env, "GL-POINT-SIZE-ARRAY-POINTER-OES", (GLenum) GL_POINT_SIZE_ARRAY_POINTER_OES, "GL_POINT_SIZE_ARRAY_POINTER_OES");
#endif
#if defined(GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES)
defconsti(env, "GL-MODELVIEW-MATRIX-FLOAT-AS-INT-BITS-OES", (GLenum) GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES, "GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES");
#endif
#if defined(GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES)
defconsti(env, "GL-PROJECTION-MATRIX-FLOAT-AS-INT-BITS-OES", (GLenum) GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES, "GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES");
#endif
#if defined(GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES)
defconsti(env, "GL-TEXTURE-MATRIX-FLOAT-AS-INT-BITS-OES", (GLenum) GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES, "GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES");
#endif
#if defined(GL_VERTEX_ATTRIB_MAP1_APPLE)
defconsti(env, "GL-VERTEX-ATTRIB-MAP1-APPLE", (GLenum) GL_VERTEX_ATTRIB_MAP1_APPLE, "GL_VERTEX_ATTRIB_MAP1_APPLE");
#endif
#if defined(GL_VERTEX_ATTRIB_MAP2_APPLE)
defconsti(env, "GL-VERTEX-ATTRIB-MAP2-APPLE", (GLenum) GL_VERTEX_ATTRIB_MAP2_APPLE, "GL_VERTEX_ATTRIB_MAP2_APPLE");
#endif
#if defined(GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE)
defconsti(env, "GL-VERTEX-ATTRIB-MAP1-SIZE-APPLE", (GLenum) GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE, "GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE");
#endif
#if defined(GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE)
defconsti(env, "GL-VERTEX-ATTRIB-MAP1-COEFF-APPLE", (GLenum) GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE, "GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE");
#endif
#if defined(GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE)
defconsti(env, "GL-VERTEX-ATTRIB-MAP1-ORDER-APPLE", (GLenum) GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE, "GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE");
#endif
#if defined(GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE)
defconsti(env, "GL-VERTEX-ATTRIB-MAP1-DOMAIN-APPLE", (GLenum) GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE, "GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE");
#endif
#if defined(GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE)
defconsti(env, "GL-VERTEX-ATTRIB-MAP2-SIZE-APPLE", (GLenum) GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE, "GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE");
#endif
#if defined(GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE)
defconsti(env, "GL-VERTEX-ATTRIB-MAP2-COEFF-APPLE", (GLenum) GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE, "GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE");
#endif
#if defined(GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE)
defconsti(env, "GL-VERTEX-ATTRIB-MAP2-ORDER-APPLE", (GLenum) GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE, "GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE");
#endif
#if defined(GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE)
defconsti(env, "GL-VERTEX-ATTRIB-MAP2-DOMAIN-APPLE", (GLenum) GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE, "GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE");
#endif
#if defined(GL_DRAW_PIXELS_APPLE)
defconsti(env, "GL-DRAW-PIXELS-APPLE", (GLenum) GL_DRAW_PIXELS_APPLE, "GL_DRAW_PIXELS_APPLE");
#endif
#if defined(GL_FENCE_APPLE)
defconsti(env, "GL-FENCE-APPLE", (GLenum) GL_FENCE_APPLE, "GL_FENCE_APPLE");
#endif
#if defined(GL_ELEMENT_ARRAY_APPLE)
defconsti(env, "GL-ELEMENT-ARRAY-APPLE", (GLenum) GL_ELEMENT_ARRAY_APPLE, "GL_ELEMENT_ARRAY_APPLE");
#endif
#if defined(GL_ELEMENT_ARRAY_TYPE_APPLE)
defconsti(env, "GL-ELEMENT-ARRAY-TYPE-APPLE", (GLenum) GL_ELEMENT_ARRAY_TYPE_APPLE, "GL_ELEMENT_ARRAY_TYPE_APPLE");
#endif
#if defined(GL_ELEMENT_ARRAY_POINTER_APPLE)
defconsti(env, "GL-ELEMENT-ARRAY-POINTER-APPLE", (GLenum) GL_ELEMENT_ARRAY_POINTER_APPLE, "GL_ELEMENT_ARRAY_POINTER_APPLE");
#endif
#if defined(GL_COLOR_FLOAT_APPLE)
defconsti(env, "GL-COLOR-FLOAT-APPLE", (GLenum) GL_COLOR_FLOAT_APPLE, "GL_COLOR_FLOAT_APPLE");
#endif
#if defined(GL_UNIFORM_BUFFER)
defconsti(env, "GL-UNIFORM-BUFFER", (GLenum) GL_UNIFORM_BUFFER, "GL_UNIFORM_BUFFER");
#endif
#if defined(GL_BUFFER_SERIALIZED_MODIFY_APPLE)
defconsti(env, "GL-BUFFER-SERIALIZED-MODIFY-APPLE", (GLenum) GL_BUFFER_SERIALIZED_MODIFY_APPLE, "GL_BUFFER_SERIALIZED_MODIFY_APPLE");
#endif
#if defined(GL_BUFFER_FLUSHING_UNMAP_APPLE)
defconsti(env, "GL-BUFFER-FLUSHING-UNMAP-APPLE", (GLenum) GL_BUFFER_FLUSHING_UNMAP_APPLE, "GL_BUFFER_FLUSHING_UNMAP_APPLE");
#endif
#if defined(GL_AUX_DEPTH_STENCIL_APPLE)
defconsti(env, "GL-AUX-DEPTH-STENCIL-APPLE", (GLenum) GL_AUX_DEPTH_STENCIL_APPLE, "GL_AUX_DEPTH_STENCIL_APPLE");
#endif
#if defined(GL_PACK_ROW_BYTES_APPLE)
defconsti(env, "GL-PACK-ROW-BYTES-APPLE", (GLenum) GL_PACK_ROW_BYTES_APPLE, "GL_PACK_ROW_BYTES_APPLE");
#endif
#if defined(GL_UNPACK_ROW_BYTES_APPLE)
defconsti(env, "GL-UNPACK-ROW-BYTES-APPLE", (GLenum) GL_UNPACK_ROW_BYTES_APPLE, "GL_UNPACK_ROW_BYTES_APPLE");
#endif
#if defined(GL_RELEASED_APPLE)
defconsti(env, "GL-RELEASED-APPLE", (GLenum) GL_RELEASED_APPLE, "GL_RELEASED_APPLE");
#endif
#if defined(GL_VOLATILE_APPLE)
defconsti(env, "GL-VOLATILE-APPLE", (GLenum) GL_VOLATILE_APPLE, "GL_VOLATILE_APPLE");
#endif
#if defined(GL_RETAINED_APPLE)
defconsti(env, "GL-RETAINED-APPLE", (GLenum) GL_RETAINED_APPLE, "GL_RETAINED_APPLE");
#endif
#if defined(GL_UNDEFINED_APPLE)
defconsti(env, "GL-UNDEFINED-APPLE", (GLenum) GL_UNDEFINED_APPLE, "GL_UNDEFINED_APPLE");
#endif
#if defined(GL_PURGEABLE_APPLE)
defconsti(env, "GL-PURGEABLE-APPLE", (GLenum) GL_PURGEABLE_APPLE, "GL_PURGEABLE_APPLE");
#endif
#if defined(GL_RGB_422_APPLE)
defconsti(env, "GL-RGB-422-APPLE", (GLenum) GL_RGB_422_APPLE, "GL_RGB_422_APPLE");
#endif
#if defined(GL_UNIFORM_BUFFER_BINDING)
defconsti(env, "GL-UNIFORM-BUFFER-BINDING", (GLenum) GL_UNIFORM_BUFFER_BINDING, "GL_UNIFORM_BUFFER_BINDING");
#endif
#if defined(GL_UNIFORM_BUFFER_START)
defconsti(env, "GL-UNIFORM-BUFFER-START", (GLenum) GL_UNIFORM_BUFFER_START, "GL_UNIFORM_BUFFER_START");
#endif
#if defined(GL_UNIFORM_BUFFER_SIZE)
defconsti(env, "GL-UNIFORM-BUFFER-SIZE", (GLenum) GL_UNIFORM_BUFFER_SIZE, "GL_UNIFORM_BUFFER_SIZE");
#endif
#if defined(GL_MAX_VERTEX_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-VERTEX-UNIFORM-BLOCKS", (GLenum) GL_MAX_VERTEX_UNIFORM_BLOCKS, "GL_MAX_VERTEX_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_GEOMETRY_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-GEOMETRY-UNIFORM-BLOCKS", (GLenum) GL_MAX_GEOMETRY_UNIFORM_BLOCKS, "GL_MAX_GEOMETRY_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-UNIFORM-BLOCKS-EXT", (GLenum) GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT, "GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_UNIFORM_BLOCKS_OES)
defconsti(env, "GL-MAX-GEOMETRY-UNIFORM-BLOCKS-OES", (GLenum) GL_MAX_GEOMETRY_UNIFORM_BLOCKS_OES, "GL_MAX_GEOMETRY_UNIFORM_BLOCKS_OES");
#endif
#if defined(GL_MAX_FRAGMENT_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-FRAGMENT-UNIFORM-BLOCKS", (GLenum) GL_MAX_FRAGMENT_UNIFORM_BLOCKS, "GL_MAX_FRAGMENT_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_COMBINED_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-COMBINED-UNIFORM-BLOCKS", (GLenum) GL_MAX_COMBINED_UNIFORM_BLOCKS, "GL_MAX_COMBINED_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_UNIFORM_BUFFER_BINDINGS)
defconsti(env, "GL-MAX-UNIFORM-BUFFER-BINDINGS", (GLenum) GL_MAX_UNIFORM_BUFFER_BINDINGS, "GL_MAX_UNIFORM_BUFFER_BINDINGS");
#endif
#if defined(GL_MAX_UNIFORM_BLOCK_SIZE)
defconsti(env, "GL-MAX-UNIFORM-BLOCK-SIZE", (GLenum) GL_MAX_UNIFORM_BLOCK_SIZE, "GL_MAX_UNIFORM_BLOCK_SIZE");
#endif
#if defined(GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-VERTEX-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-GEOMETRY-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT)
defconsti(env, "GL-MAX-COMBINED-GEOMETRY-UNIFORM-COMPONENTS-EXT", (GLenum) GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT, "GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES)
defconsti(env, "GL-MAX-COMBINED-GEOMETRY-UNIFORM-COMPONENTS-OES", (GLenum) GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES, "GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES");
#endif
#if defined(GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-FRAGMENT-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS");
#endif
#if defined(GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT)
defconsti(env, "GL-UNIFORM-BUFFER-OFFSET-ALIGNMENT", (GLenum) GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT, "GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT");
#endif
#if defined(GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH)
defconsti(env, "GL-ACTIVE-UNIFORM-BLOCK-MAX-NAME-LENGTH", (GLenum) GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH, "GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH");
#endif
#if defined(GL_ACTIVE_UNIFORM_BLOCKS)
defconsti(env, "GL-ACTIVE-UNIFORM-BLOCKS", (GLenum) GL_ACTIVE_UNIFORM_BLOCKS, "GL_ACTIVE_UNIFORM_BLOCKS");
#endif
#if defined(GL_UNIFORM_TYPE)
defconsti(env, "GL-UNIFORM-TYPE", (GLenum) GL_UNIFORM_TYPE, "GL_UNIFORM_TYPE");
#endif
#if defined(GL_UNIFORM_SIZE)
defconsti(env, "GL-UNIFORM-SIZE", (GLenum) GL_UNIFORM_SIZE, "GL_UNIFORM_SIZE");
#endif
#if defined(GL_UNIFORM_NAME_LENGTH)
defconsti(env, "GL-UNIFORM-NAME-LENGTH", (GLenum) GL_UNIFORM_NAME_LENGTH, "GL_UNIFORM_NAME_LENGTH");
#endif
#if defined(GL_UNIFORM_BLOCK_INDEX)
defconsti(env, "GL-UNIFORM-BLOCK-INDEX", (GLenum) GL_UNIFORM_BLOCK_INDEX, "GL_UNIFORM_BLOCK_INDEX");
#endif
#if defined(GL_UNIFORM_OFFSET)
defconsti(env, "GL-UNIFORM-OFFSET", (GLenum) GL_UNIFORM_OFFSET, "GL_UNIFORM_OFFSET");
#endif
#if defined(GL_UNIFORM_ARRAY_STRIDE)
defconsti(env, "GL-UNIFORM-ARRAY-STRIDE", (GLenum) GL_UNIFORM_ARRAY_STRIDE, "GL_UNIFORM_ARRAY_STRIDE");
#endif
#if defined(GL_UNIFORM_MATRIX_STRIDE)
defconsti(env, "GL-UNIFORM-MATRIX-STRIDE", (GLenum) GL_UNIFORM_MATRIX_STRIDE, "GL_UNIFORM_MATRIX_STRIDE");
#endif
#if defined(GL_UNIFORM_IS_ROW_MAJOR)
defconsti(env, "GL-UNIFORM-IS-ROW-MAJOR", (GLenum) GL_UNIFORM_IS_ROW_MAJOR, "GL_UNIFORM_IS_ROW_MAJOR");
#endif
#if defined(GL_UNIFORM_BLOCK_BINDING)
defconsti(env, "GL-UNIFORM-BLOCK-BINDING", (GLenum) GL_UNIFORM_BLOCK_BINDING, "GL_UNIFORM_BLOCK_BINDING");
#endif
#if defined(GL_UNIFORM_BLOCK_DATA_SIZE)
defconsti(env, "GL-UNIFORM-BLOCK-DATA-SIZE", (GLenum) GL_UNIFORM_BLOCK_DATA_SIZE, "GL_UNIFORM_BLOCK_DATA_SIZE");
#endif
#if defined(GL_UNIFORM_BLOCK_NAME_LENGTH)
defconsti(env, "GL-UNIFORM-BLOCK-NAME-LENGTH", (GLenum) GL_UNIFORM_BLOCK_NAME_LENGTH, "GL_UNIFORM_BLOCK_NAME_LENGTH");
#endif
#if defined(GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS)
defconsti(env, "GL-UNIFORM-BLOCK-ACTIVE-UNIFORMS", (GLenum) GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS, "GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS");
#endif
#if defined(GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES)
defconsti(env, "GL-UNIFORM-BLOCK-ACTIVE-UNIFORM-INDICES", (GLenum) GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES, "GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-VERTEX-SHADER", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER, "GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-GEOMETRY-SHADER", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER, "GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-FRAGMENT-SHADER", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER, "GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER");
#endif
#if defined(GL_TEXTURE_SRGB_DECODE_EXT)
defconsti(env, "GL-TEXTURE-SRGB-DECODE-EXT", (GLenum) GL_TEXTURE_SRGB_DECODE_EXT, "GL_TEXTURE_SRGB_DECODE_EXT");
#endif
#if defined(GL_DECODE_EXT)
defconsti(env, "GL-DECODE-EXT", (GLenum) GL_DECODE_EXT, "GL_DECODE_EXT");
#endif
#if defined(GL_SKIP_DECODE_EXT)
defconsti(env, "GL-SKIP-DECODE-EXT", (GLenum) GL_SKIP_DECODE_EXT, "GL_SKIP_DECODE_EXT");
#endif
#if defined(GL_PROGRAM_PIPELINE_OBJECT_EXT)
defconsti(env, "GL-PROGRAM-PIPELINE-OBJECT-EXT", (GLenum) GL_PROGRAM_PIPELINE_OBJECT_EXT, "GL_PROGRAM_PIPELINE_OBJECT_EXT");
#endif
#if defined(GL_RGB_RAW_422_APPLE)
defconsti(env, "GL-RGB-RAW-422-APPLE", (GLenum) GL_RGB_RAW_422_APPLE, "GL_RGB_RAW_422_APPLE");
#endif
#if defined(GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT)
defconsti(env, "GL-FRAGMENT-SHADER-DISCARDS-SAMPLES-EXT", (GLenum) GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT, "GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT");
#endif
#if defined(GL_SYNC_OBJECT_APPLE)
defconsti(env, "GL-SYNC-OBJECT-APPLE", (GLenum) GL_SYNC_OBJECT_APPLE, "GL_SYNC_OBJECT_APPLE");
#endif
#if defined(GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-PVRTC-2BPPV1-EXT", (GLenum) GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT, "GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-PVRTC-4BPPV1-EXT", (GLenum) GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT, "GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-PVRTC-2BPPV1-EXT", (GLenum) GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT, "GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-PVRTC-4BPPV1-EXT", (GLenum) GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT, "GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT");
#endif
#if defined(GL_FRAGMENT_SHADER)
defconsti(env, "GL-FRAGMENT-SHADER", (GLenum) GL_FRAGMENT_SHADER, "GL_FRAGMENT_SHADER");
#endif
#if defined(GL_FRAGMENT_SHADER_ARB)
defconsti(env, "GL-FRAGMENT-SHADER-ARB", (GLenum) GL_FRAGMENT_SHADER_ARB, "GL_FRAGMENT_SHADER_ARB");
#endif
#if defined(GL_VERTEX_SHADER)
defconsti(env, "GL-VERTEX-SHADER", (GLenum) GL_VERTEX_SHADER, "GL_VERTEX_SHADER");
#endif
#if defined(GL_VERTEX_SHADER_ARB)
defconsti(env, "GL-VERTEX-SHADER-ARB", (GLenum) GL_VERTEX_SHADER_ARB, "GL_VERTEX_SHADER_ARB");
#endif
#if defined(GL_PROGRAM_OBJECT_ARB)
defconsti(env, "GL-PROGRAM-OBJECT-ARB", (GLenum) GL_PROGRAM_OBJECT_ARB, "GL_PROGRAM_OBJECT_ARB");
#endif
#if defined(GL_PROGRAM_OBJECT_EXT)
defconsti(env, "GL-PROGRAM-OBJECT-EXT", (GLenum) GL_PROGRAM_OBJECT_EXT, "GL_PROGRAM_OBJECT_EXT");
#endif
#if defined(GL_SHADER_OBJECT_ARB)
defconsti(env, "GL-SHADER-OBJECT-ARB", (GLenum) GL_SHADER_OBJECT_ARB, "GL_SHADER_OBJECT_ARB");
#endif
#if defined(GL_SHADER_OBJECT_EXT)
defconsti(env, "GL-SHADER-OBJECT-EXT", (GLenum) GL_SHADER_OBJECT_EXT, "GL_SHADER_OBJECT_EXT");
#endif
#if defined(GL_MAX_FRAGMENT_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-FRAGMENT-UNIFORM-COMPONENTS", (GLenum) GL_MAX_FRAGMENT_UNIFORM_COMPONENTS, "GL_MAX_FRAGMENT_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB)
defconsti(env, "GL-MAX-FRAGMENT-UNIFORM-COMPONENTS-ARB", (GLenum) GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB, "GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB");
#endif
#if defined(GL_MAX_VERTEX_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-VERTEX-UNIFORM-COMPONENTS", (GLenum) GL_MAX_VERTEX_UNIFORM_COMPONENTS, "GL_MAX_VERTEX_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB)
defconsti(env, "GL-MAX-VERTEX-UNIFORM-COMPONENTS-ARB", (GLenum) GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB, "GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB");
#endif
#if defined(GL_MAX_VARYING_FLOATS)
defconsti(env, "GL-MAX-VARYING-FLOATS", (GLenum) GL_MAX_VARYING_FLOATS, "GL_MAX_VARYING_FLOATS");
#endif
#if defined(GL_MAX_VARYING_COMPONENTS)
defconsti(env, "GL-MAX-VARYING-COMPONENTS", (GLenum) GL_MAX_VARYING_COMPONENTS, "GL_MAX_VARYING_COMPONENTS");
#endif
#if defined(GL_MAX_VARYING_COMPONENTS_EXT)
defconsti(env, "GL-MAX-VARYING-COMPONENTS-EXT", (GLenum) GL_MAX_VARYING_COMPONENTS_EXT, "GL_MAX_VARYING_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_VARYING_FLOATS_ARB)
defconsti(env, "GL-MAX-VARYING-FLOATS-ARB", (GLenum) GL_MAX_VARYING_FLOATS_ARB, "GL_MAX_VARYING_FLOATS_ARB");
#endif
#if defined(GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-VERTEX-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS, "GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB)
defconsti(env, "GL-MAX-VERTEX-TEXTURE-IMAGE-UNITS-ARB", (GLenum) GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB, "GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB");
#endif
#if defined(GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-COMBINED-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS, "GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB)
defconsti(env, "GL-MAX-COMBINED-TEXTURE-IMAGE-UNITS-ARB", (GLenum) GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB, "GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB");
#endif
#if defined(GL_OBJECT_TYPE_ARB)
defconsti(env, "GL-OBJECT-TYPE-ARB", (GLenum) GL_OBJECT_TYPE_ARB, "GL_OBJECT_TYPE_ARB");
#endif
#if defined(GL_SHADER_TYPE)
defconsti(env, "GL-SHADER-TYPE", (GLenum) GL_SHADER_TYPE, "GL_SHADER_TYPE");
#endif
#if defined(GL_OBJECT_SUBTYPE_ARB)
defconsti(env, "GL-OBJECT-SUBTYPE-ARB", (GLenum) GL_OBJECT_SUBTYPE_ARB, "GL_OBJECT_SUBTYPE_ARB");
#endif
#if defined(GL_FLOAT_VEC2)
defconsti(env, "GL-FLOAT-VEC2", (GLenum) GL_FLOAT_VEC2, "GL_FLOAT_VEC2");
#endif
#if defined(GL_FLOAT_VEC2_ARB)
defconsti(env, "GL-FLOAT-VEC2-ARB", (GLenum) GL_FLOAT_VEC2_ARB, "GL_FLOAT_VEC2_ARB");
#endif
#if defined(GL_FLOAT_VEC3)
defconsti(env, "GL-FLOAT-VEC3", (GLenum) GL_FLOAT_VEC3, "GL_FLOAT_VEC3");
#endif
#if defined(GL_FLOAT_VEC3_ARB)
defconsti(env, "GL-FLOAT-VEC3-ARB", (GLenum) GL_FLOAT_VEC3_ARB, "GL_FLOAT_VEC3_ARB");
#endif
#if defined(GL_FLOAT_VEC4)
defconsti(env, "GL-FLOAT-VEC4", (GLenum) GL_FLOAT_VEC4, "GL_FLOAT_VEC4");
#endif
#if defined(GL_FLOAT_VEC4_ARB)
defconsti(env, "GL-FLOAT-VEC4-ARB", (GLenum) GL_FLOAT_VEC4_ARB, "GL_FLOAT_VEC4_ARB");
#endif
#if defined(GL_INT_VEC2)
defconsti(env, "GL-INT-VEC2", (GLenum) GL_INT_VEC2, "GL_INT_VEC2");
#endif
#if defined(GL_INT_VEC2_ARB)
defconsti(env, "GL-INT-VEC2-ARB", (GLenum) GL_INT_VEC2_ARB, "GL_INT_VEC2_ARB");
#endif
#if defined(GL_INT_VEC3)
defconsti(env, "GL-INT-VEC3", (GLenum) GL_INT_VEC3, "GL_INT_VEC3");
#endif
#if defined(GL_INT_VEC3_ARB)
defconsti(env, "GL-INT-VEC3-ARB", (GLenum) GL_INT_VEC3_ARB, "GL_INT_VEC3_ARB");
#endif
#if defined(GL_INT_VEC4)
defconsti(env, "GL-INT-VEC4", (GLenum) GL_INT_VEC4, "GL_INT_VEC4");
#endif
#if defined(GL_INT_VEC4_ARB)
defconsti(env, "GL-INT-VEC4-ARB", (GLenum) GL_INT_VEC4_ARB, "GL_INT_VEC4_ARB");
#endif
#if defined(GL_BOOL)
defconsti(env, "GL-BOOL", (GLenum) GL_BOOL, "GL_BOOL");
#endif
#if defined(GL_BOOL_ARB)
defconsti(env, "GL-BOOL-ARB", (GLenum) GL_BOOL_ARB, "GL_BOOL_ARB");
#endif
#if defined(GL_BOOL_VEC2)
defconsti(env, "GL-BOOL-VEC2", (GLenum) GL_BOOL_VEC2, "GL_BOOL_VEC2");
#endif
#if defined(GL_BOOL_VEC2_ARB)
defconsti(env, "GL-BOOL-VEC2-ARB", (GLenum) GL_BOOL_VEC2_ARB, "GL_BOOL_VEC2_ARB");
#endif
#if defined(GL_BOOL_VEC3)
defconsti(env, "GL-BOOL-VEC3", (GLenum) GL_BOOL_VEC3, "GL_BOOL_VEC3");
#endif
#if defined(GL_BOOL_VEC3_ARB)
defconsti(env, "GL-BOOL-VEC3-ARB", (GLenum) GL_BOOL_VEC3_ARB, "GL_BOOL_VEC3_ARB");
#endif
#if defined(GL_BOOL_VEC4)
defconsti(env, "GL-BOOL-VEC4", (GLenum) GL_BOOL_VEC4, "GL_BOOL_VEC4");
#endif
#if defined(GL_BOOL_VEC4_ARB)
defconsti(env, "GL-BOOL-VEC4-ARB", (GLenum) GL_BOOL_VEC4_ARB, "GL_BOOL_VEC4_ARB");
#endif
#if defined(GL_FLOAT_MAT2)
defconsti(env, "GL-FLOAT-MAT2", (GLenum) GL_FLOAT_MAT2, "GL_FLOAT_MAT2");
#endif
#if defined(GL_FLOAT_MAT2_ARB)
defconsti(env, "GL-FLOAT-MAT2-ARB", (GLenum) GL_FLOAT_MAT2_ARB, "GL_FLOAT_MAT2_ARB");
#endif
#if defined(GL_FLOAT_MAT3)
defconsti(env, "GL-FLOAT-MAT3", (GLenum) GL_FLOAT_MAT3, "GL_FLOAT_MAT3");
#endif
#if defined(GL_FLOAT_MAT3_ARB)
defconsti(env, "GL-FLOAT-MAT3-ARB", (GLenum) GL_FLOAT_MAT3_ARB, "GL_FLOAT_MAT3_ARB");
#endif
#if defined(GL_FLOAT_MAT4)
defconsti(env, "GL-FLOAT-MAT4", (GLenum) GL_FLOAT_MAT4, "GL_FLOAT_MAT4");
#endif
#if defined(GL_FLOAT_MAT4_ARB)
defconsti(env, "GL-FLOAT-MAT4-ARB", (GLenum) GL_FLOAT_MAT4_ARB, "GL_FLOAT_MAT4_ARB");
#endif
#if defined(GL_SAMPLER_1D)
defconsti(env, "GL-SAMPLER-1D", (GLenum) GL_SAMPLER_1D, "GL_SAMPLER_1D");
#endif
#if defined(GL_SAMPLER_1D_ARB)
defconsti(env, "GL-SAMPLER-1D-ARB", (GLenum) GL_SAMPLER_1D_ARB, "GL_SAMPLER_1D_ARB");
#endif
#if defined(GL_SAMPLER_2D)
defconsti(env, "GL-SAMPLER-2D", (GLenum) GL_SAMPLER_2D, "GL_SAMPLER_2D");
#endif
#if defined(GL_SAMPLER_2D_ARB)
defconsti(env, "GL-SAMPLER-2D-ARB", (GLenum) GL_SAMPLER_2D_ARB, "GL_SAMPLER_2D_ARB");
#endif
#if defined(GL_SAMPLER_3D)
defconsti(env, "GL-SAMPLER-3D", (GLenum) GL_SAMPLER_3D, "GL_SAMPLER_3D");
#endif
#if defined(GL_SAMPLER_3D_ARB)
defconsti(env, "GL-SAMPLER-3D-ARB", (GLenum) GL_SAMPLER_3D_ARB, "GL_SAMPLER_3D_ARB");
#endif
#if defined(GL_SAMPLER_3D_OES)
defconsti(env, "GL-SAMPLER-3D-OES", (GLenum) GL_SAMPLER_3D_OES, "GL_SAMPLER_3D_OES");
#endif
#if defined(GL_SAMPLER_CUBE)
defconsti(env, "GL-SAMPLER-CUBE", (GLenum) GL_SAMPLER_CUBE, "GL_SAMPLER_CUBE");
#endif
#if defined(GL_SAMPLER_CUBE_ARB)
defconsti(env, "GL-SAMPLER-CUBE-ARB", (GLenum) GL_SAMPLER_CUBE_ARB, "GL_SAMPLER_CUBE_ARB");
#endif
#if defined(GL_SAMPLER_1D_SHADOW)
defconsti(env, "GL-SAMPLER-1D-SHADOW", (GLenum) GL_SAMPLER_1D_SHADOW, "GL_SAMPLER_1D_SHADOW");
#endif
#if defined(GL_SAMPLER_1D_SHADOW_ARB)
defconsti(env, "GL-SAMPLER-1D-SHADOW-ARB", (GLenum) GL_SAMPLER_1D_SHADOW_ARB, "GL_SAMPLER_1D_SHADOW_ARB");
#endif
#if defined(GL_SAMPLER_2D_SHADOW)
defconsti(env, "GL-SAMPLER-2D-SHADOW", (GLenum) GL_SAMPLER_2D_SHADOW, "GL_SAMPLER_2D_SHADOW");
#endif
#if defined(GL_SAMPLER_2D_SHADOW_ARB)
defconsti(env, "GL-SAMPLER-2D-SHADOW-ARB", (GLenum) GL_SAMPLER_2D_SHADOW_ARB, "GL_SAMPLER_2D_SHADOW_ARB");
#endif
#if defined(GL_SAMPLER_2D_SHADOW_EXT)
defconsti(env, "GL-SAMPLER-2D-SHADOW-EXT", (GLenum) GL_SAMPLER_2D_SHADOW_EXT, "GL_SAMPLER_2D_SHADOW_EXT");
#endif
#if defined(GL_SAMPLER_2D_RECT)
defconsti(env, "GL-SAMPLER-2D-RECT", (GLenum) GL_SAMPLER_2D_RECT, "GL_SAMPLER_2D_RECT");
#endif
#if defined(GL_SAMPLER_2D_RECT_ARB)
defconsti(env, "GL-SAMPLER-2D-RECT-ARB", (GLenum) GL_SAMPLER_2D_RECT_ARB, "GL_SAMPLER_2D_RECT_ARB");
#endif
#if defined(GL_SAMPLER_2D_RECT_SHADOW)
defconsti(env, "GL-SAMPLER-2D-RECT-SHADOW", (GLenum) GL_SAMPLER_2D_RECT_SHADOW, "GL_SAMPLER_2D_RECT_SHADOW");
#endif
#if defined(GL_SAMPLER_2D_RECT_SHADOW_ARB)
defconsti(env, "GL-SAMPLER-2D-RECT-SHADOW-ARB", (GLenum) GL_SAMPLER_2D_RECT_SHADOW_ARB, "GL_SAMPLER_2D_RECT_SHADOW_ARB");
#endif
#if defined(GL_FLOAT_MAT2x3)
defconsti(env, "GL-FLOAT-MAT2x3", (GLenum) GL_FLOAT_MAT2x3, "GL_FLOAT_MAT2x3");
#endif
#if defined(GL_FLOAT_MAT2x3_NV)
defconsti(env, "GL-FLOAT-MAT2x3-NV", (GLenum) GL_FLOAT_MAT2x3_NV, "GL_FLOAT_MAT2x3_NV");
#endif
#if defined(GL_FLOAT_MAT2x4)
defconsti(env, "GL-FLOAT-MAT2x4", (GLenum) GL_FLOAT_MAT2x4, "GL_FLOAT_MAT2x4");
#endif
#if defined(GL_FLOAT_MAT2x4_NV)
defconsti(env, "GL-FLOAT-MAT2x4-NV", (GLenum) GL_FLOAT_MAT2x4_NV, "GL_FLOAT_MAT2x4_NV");
#endif
#if defined(GL_FLOAT_MAT3x2)
defconsti(env, "GL-FLOAT-MAT3x2", (GLenum) GL_FLOAT_MAT3x2, "GL_FLOAT_MAT3x2");
#endif
#if defined(GL_FLOAT_MAT3x2_NV)
defconsti(env, "GL-FLOAT-MAT3x2-NV", (GLenum) GL_FLOAT_MAT3x2_NV, "GL_FLOAT_MAT3x2_NV");
#endif
#if defined(GL_FLOAT_MAT3x4)
defconsti(env, "GL-FLOAT-MAT3x4", (GLenum) GL_FLOAT_MAT3x4, "GL_FLOAT_MAT3x4");
#endif
#if defined(GL_FLOAT_MAT3x4_NV)
defconsti(env, "GL-FLOAT-MAT3x4-NV", (GLenum) GL_FLOAT_MAT3x4_NV, "GL_FLOAT_MAT3x4_NV");
#endif
#if defined(GL_FLOAT_MAT4x2)
defconsti(env, "GL-FLOAT-MAT4x2", (GLenum) GL_FLOAT_MAT4x2, "GL_FLOAT_MAT4x2");
#endif
#if defined(GL_FLOAT_MAT4x2_NV)
defconsti(env, "GL-FLOAT-MAT4x2-NV", (GLenum) GL_FLOAT_MAT4x2_NV, "GL_FLOAT_MAT4x2_NV");
#endif
#if defined(GL_FLOAT_MAT4x3)
defconsti(env, "GL-FLOAT-MAT4x3", (GLenum) GL_FLOAT_MAT4x3, "GL_FLOAT_MAT4x3");
#endif
#if defined(GL_FLOAT_MAT4x3_NV)
defconsti(env, "GL-FLOAT-MAT4x3-NV", (GLenum) GL_FLOAT_MAT4x3_NV, "GL_FLOAT_MAT4x3_NV");
#endif
#if defined(GL_DELETE_STATUS)
defconsti(env, "GL-DELETE-STATUS", (GLenum) GL_DELETE_STATUS, "GL_DELETE_STATUS");
#endif
#if defined(GL_OBJECT_DELETE_STATUS_ARB)
defconsti(env, "GL-OBJECT-DELETE-STATUS-ARB", (GLenum) GL_OBJECT_DELETE_STATUS_ARB, "GL_OBJECT_DELETE_STATUS_ARB");
#endif
#if defined(GL_COMPILE_STATUS)
defconsti(env, "GL-COMPILE-STATUS", (GLenum) GL_COMPILE_STATUS, "GL_COMPILE_STATUS");
#endif
#if defined(GL_OBJECT_COMPILE_STATUS_ARB)
defconsti(env, "GL-OBJECT-COMPILE-STATUS-ARB", (GLenum) GL_OBJECT_COMPILE_STATUS_ARB, "GL_OBJECT_COMPILE_STATUS_ARB");
#endif
#if defined(GL_LINK_STATUS)
defconsti(env, "GL-LINK-STATUS", (GLenum) GL_LINK_STATUS, "GL_LINK_STATUS");
#endif
#if defined(GL_OBJECT_LINK_STATUS_ARB)
defconsti(env, "GL-OBJECT-LINK-STATUS-ARB", (GLenum) GL_OBJECT_LINK_STATUS_ARB, "GL_OBJECT_LINK_STATUS_ARB");
#endif
#if defined(GL_VALIDATE_STATUS)
defconsti(env, "GL-VALIDATE-STATUS", (GLenum) GL_VALIDATE_STATUS, "GL_VALIDATE_STATUS");
#endif
#if defined(GL_OBJECT_VALIDATE_STATUS_ARB)
defconsti(env, "GL-OBJECT-VALIDATE-STATUS-ARB", (GLenum) GL_OBJECT_VALIDATE_STATUS_ARB, "GL_OBJECT_VALIDATE_STATUS_ARB");
#endif
#if defined(GL_INFO_LOG_LENGTH)
defconsti(env, "GL-INFO-LOG-LENGTH", (GLenum) GL_INFO_LOG_LENGTH, "GL_INFO_LOG_LENGTH");
#endif
#if defined(GL_OBJECT_INFO_LOG_LENGTH_ARB)
defconsti(env, "GL-OBJECT-INFO-LOG-LENGTH-ARB", (GLenum) GL_OBJECT_INFO_LOG_LENGTH_ARB, "GL_OBJECT_INFO_LOG_LENGTH_ARB");
#endif
#if defined(GL_ATTACHED_SHADERS)
defconsti(env, "GL-ATTACHED-SHADERS", (GLenum) GL_ATTACHED_SHADERS, "GL_ATTACHED_SHADERS");
#endif
#if defined(GL_OBJECT_ATTACHED_OBJECTS_ARB)
defconsti(env, "GL-OBJECT-ATTACHED-OBJECTS-ARB", (GLenum) GL_OBJECT_ATTACHED_OBJECTS_ARB, "GL_OBJECT_ATTACHED_OBJECTS_ARB");
#endif
#if defined(GL_ACTIVE_UNIFORMS)
defconsti(env, "GL-ACTIVE-UNIFORMS", (GLenum) GL_ACTIVE_UNIFORMS, "GL_ACTIVE_UNIFORMS");
#endif
#if defined(GL_OBJECT_ACTIVE_UNIFORMS_ARB)
defconsti(env, "GL-OBJECT-ACTIVE-UNIFORMS-ARB", (GLenum) GL_OBJECT_ACTIVE_UNIFORMS_ARB, "GL_OBJECT_ACTIVE_UNIFORMS_ARB");
#endif
#if defined(GL_ACTIVE_UNIFORM_MAX_LENGTH)
defconsti(env, "GL-ACTIVE-UNIFORM-MAX-LENGTH", (GLenum) GL_ACTIVE_UNIFORM_MAX_LENGTH, "GL_ACTIVE_UNIFORM_MAX_LENGTH");
#endif
#if defined(GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB)
defconsti(env, "GL-OBJECT-ACTIVE-UNIFORM-MAX-LENGTH-ARB", (GLenum) GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB, "GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB");
#endif
#if defined(GL_SHADER_SOURCE_LENGTH)
defconsti(env, "GL-SHADER-SOURCE-LENGTH", (GLenum) GL_SHADER_SOURCE_LENGTH, "GL_SHADER_SOURCE_LENGTH");
#endif
#if defined(GL_OBJECT_SHADER_SOURCE_LENGTH_ARB)
defconsti(env, "GL-OBJECT-SHADER-SOURCE-LENGTH-ARB", (GLenum) GL_OBJECT_SHADER_SOURCE_LENGTH_ARB, "GL_OBJECT_SHADER_SOURCE_LENGTH_ARB");
#endif
#if defined(GL_ACTIVE_ATTRIBUTES)
defconsti(env, "GL-ACTIVE-ATTRIBUTES", (GLenum) GL_ACTIVE_ATTRIBUTES, "GL_ACTIVE_ATTRIBUTES");
#endif
#if defined(GL_OBJECT_ACTIVE_ATTRIBUTES_ARB)
defconsti(env, "GL-OBJECT-ACTIVE-ATTRIBUTES-ARB", (GLenum) GL_OBJECT_ACTIVE_ATTRIBUTES_ARB, "GL_OBJECT_ACTIVE_ATTRIBUTES_ARB");
#endif
#if defined(GL_ACTIVE_ATTRIBUTE_MAX_LENGTH)
defconsti(env, "GL-ACTIVE-ATTRIBUTE-MAX-LENGTH", (GLenum) GL_ACTIVE_ATTRIBUTE_MAX_LENGTH, "GL_ACTIVE_ATTRIBUTE_MAX_LENGTH");
#endif
#if defined(GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB)
defconsti(env, "GL-OBJECT-ACTIVE-ATTRIBUTE-MAX-LENGTH-ARB", (GLenum) GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB, "GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB");
#endif
#if defined(GL_FRAGMENT_SHADER_DERIVATIVE_HINT)
defconsti(env, "GL-FRAGMENT-SHADER-DERIVATIVE-HINT", (GLenum) GL_FRAGMENT_SHADER_DERIVATIVE_HINT, "GL_FRAGMENT_SHADER_DERIVATIVE_HINT");
#endif
#if defined(GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB)
defconsti(env, "GL-FRAGMENT-SHADER-DERIVATIVE-HINT-ARB", (GLenum) GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB, "GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB");
#endif
#if defined(GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES)
defconsti(env, "GL-FRAGMENT-SHADER-DERIVATIVE-HINT-OES", (GLenum) GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES, "GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES");
#endif
#if defined(GL_SHADING_LANGUAGE_VERSION)
defconsti(env, "GL-SHADING-LANGUAGE-VERSION", (GLenum) GL_SHADING_LANGUAGE_VERSION, "GL_SHADING_LANGUAGE_VERSION");
#endif
#if defined(GL_SHADING_LANGUAGE_VERSION_ARB)
defconsti(env, "GL-SHADING-LANGUAGE-VERSION-ARB", (GLenum) GL_SHADING_LANGUAGE_VERSION_ARB, "GL_SHADING_LANGUAGE_VERSION_ARB");
#endif
#if defined(GL_CURRENT_PROGRAM)
defconsti(env, "GL-CURRENT-PROGRAM", (GLenum) GL_CURRENT_PROGRAM, "GL_CURRENT_PROGRAM");
#endif
#if defined(GL_ACTIVE_PROGRAM_EXT)
defconsti(env, "GL-ACTIVE-PROGRAM-EXT", (GLenum) GL_ACTIVE_PROGRAM_EXT, "GL_ACTIVE_PROGRAM_EXT");
#endif
#if defined(GL_PALETTE4_RGB8_OES)
defconsti(env, "GL-PALETTE4-RGB8-OES", (GLenum) GL_PALETTE4_RGB8_OES, "GL_PALETTE4_RGB8_OES");
#endif
#if defined(GL_PALETTE4_RGBA8_OES)
defconsti(env, "GL-PALETTE4-RGBA8-OES", (GLenum) GL_PALETTE4_RGBA8_OES, "GL_PALETTE4_RGBA8_OES");
#endif
#if defined(GL_PALETTE4_R5_G6_B5_OES)
defconsti(env, "GL-PALETTE4-R5-G6-B5-OES", (GLenum) GL_PALETTE4_R5_G6_B5_OES, "GL_PALETTE4_R5_G6_B5_OES");
#endif
#if defined(GL_PALETTE4_RGBA4_OES)
defconsti(env, "GL-PALETTE4-RGBA4-OES", (GLenum) GL_PALETTE4_RGBA4_OES, "GL_PALETTE4_RGBA4_OES");
#endif
#if defined(GL_PALETTE4_RGB5_A1_OES)
defconsti(env, "GL-PALETTE4-RGB5-A1-OES", (GLenum) GL_PALETTE4_RGB5_A1_OES, "GL_PALETTE4_RGB5_A1_OES");
#endif
#if defined(GL_PALETTE8_RGB8_OES)
defconsti(env, "GL-PALETTE8-RGB8-OES", (GLenum) GL_PALETTE8_RGB8_OES, "GL_PALETTE8_RGB8_OES");
#endif
#if defined(GL_PALETTE8_RGBA8_OES)
defconsti(env, "GL-PALETTE8-RGBA8-OES", (GLenum) GL_PALETTE8_RGBA8_OES, "GL_PALETTE8_RGBA8_OES");
#endif
#if defined(GL_PALETTE8_R5_G6_B5_OES)
defconsti(env, "GL-PALETTE8-R5-G6-B5-OES", (GLenum) GL_PALETTE8_R5_G6_B5_OES, "GL_PALETTE8_R5_G6_B5_OES");
#endif
#if defined(GL_PALETTE8_RGBA4_OES)
defconsti(env, "GL-PALETTE8-RGBA4-OES", (GLenum) GL_PALETTE8_RGBA4_OES, "GL_PALETTE8_RGBA4_OES");
#endif
#if defined(GL_PALETTE8_RGB5_A1_OES)
defconsti(env, "GL-PALETTE8-RGB5-A1-OES", (GLenum) GL_PALETTE8_RGB5_A1_OES, "GL_PALETTE8_RGB5_A1_OES");
#endif
#if defined(GL_IMPLEMENTATION_COLOR_READ_TYPE)
defconsti(env, "GL-IMPLEMENTATION-COLOR-READ-TYPE", (GLenum) GL_IMPLEMENTATION_COLOR_READ_TYPE, "GL_IMPLEMENTATION_COLOR_READ_TYPE");
#endif
#if defined(GL_IMPLEMENTATION_COLOR_READ_TYPE_OES)
defconsti(env, "GL-IMPLEMENTATION-COLOR-READ-TYPE-OES", (GLenum) GL_IMPLEMENTATION_COLOR_READ_TYPE_OES, "GL_IMPLEMENTATION_COLOR_READ_TYPE_OES");
#endif
#if defined(GL_IMPLEMENTATION_COLOR_READ_FORMAT)
defconsti(env, "GL-IMPLEMENTATION-COLOR-READ-FORMAT", (GLenum) GL_IMPLEMENTATION_COLOR_READ_FORMAT, "GL_IMPLEMENTATION_COLOR_READ_FORMAT");
#endif
#if defined(GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES)
defconsti(env, "GL-IMPLEMENTATION-COLOR-READ-FORMAT-OES", (GLenum) GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES, "GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES");
#endif
#if defined(GL_POINT_SIZE_ARRAY_OES)
defconsti(env, "GL-POINT-SIZE-ARRAY-OES", (GLenum) GL_POINT_SIZE_ARRAY_OES, "GL_POINT_SIZE_ARRAY_OES");
#endif
#if defined(GL_TEXTURE_CROP_RECT_OES)
defconsti(env, "GL-TEXTURE-CROP-RECT-OES", (GLenum) GL_TEXTURE_CROP_RECT_OES, "GL_TEXTURE_CROP_RECT_OES");
#endif
#if defined(GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES)
defconsti(env, "GL-MATRIX-INDEX-ARRAY-BUFFER-BINDING-OES", (GLenum) GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES, "GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES");
#endif
#if defined(GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES)
defconsti(env, "GL-POINT-SIZE-ARRAY-BUFFER-BINDING-OES", (GLenum) GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES, "GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES");
#endif
#if defined(GL_FRAGMENT_PROGRAM_POSITION_MESA)
defconsti(env, "GL-FRAGMENT-PROGRAM-POSITION-MESA", (GLenum) GL_FRAGMENT_PROGRAM_POSITION_MESA, "GL_FRAGMENT_PROGRAM_POSITION_MESA");
#endif
#if defined(GL_FRAGMENT_PROGRAM_CALLBACK_MESA)
defconsti(env, "GL-FRAGMENT-PROGRAM-CALLBACK-MESA", (GLenum) GL_FRAGMENT_PROGRAM_CALLBACK_MESA, "GL_FRAGMENT_PROGRAM_CALLBACK_MESA");
#endif
#if defined(GL_FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA)
defconsti(env, "GL-FRAGMENT-PROGRAM-CALLBACK-FUNC-MESA", (GLenum) GL_FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA, "GL_FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA");
#endif
#if defined(GL_FRAGMENT_PROGRAM_CALLBACK_DATA_MESA)
defconsti(env, "GL-FRAGMENT-PROGRAM-CALLBACK-DATA-MESA", (GLenum) GL_FRAGMENT_PROGRAM_CALLBACK_DATA_MESA, "GL_FRAGMENT_PROGRAM_CALLBACK_DATA_MESA");
#endif
#if defined(GL_VERTEX_PROGRAM_POSITION_MESA)
defconsti(env, "GL-VERTEX-PROGRAM-POSITION-MESA", (GLenum) GL_VERTEX_PROGRAM_POSITION_MESA, "GL_VERTEX_PROGRAM_POSITION_MESA");
#endif
#if defined(GL_VERTEX_PROGRAM_CALLBACK_MESA)
defconsti(env, "GL-VERTEX-PROGRAM-CALLBACK-MESA", (GLenum) GL_VERTEX_PROGRAM_CALLBACK_MESA, "GL_VERTEX_PROGRAM_CALLBACK_MESA");
#endif
#if defined(GL_VERTEX_PROGRAM_CALLBACK_FUNC_MESA)
defconsti(env, "GL-VERTEX-PROGRAM-CALLBACK-FUNC-MESA", (GLenum) GL_VERTEX_PROGRAM_CALLBACK_FUNC_MESA, "GL_VERTEX_PROGRAM_CALLBACK_FUNC_MESA");
#endif
#if defined(GL_VERTEX_PROGRAM_CALLBACK_DATA_MESA)
defconsti(env, "GL-VERTEX-PROGRAM-CALLBACK-DATA-MESA", (GLenum) GL_VERTEX_PROGRAM_CALLBACK_DATA_MESA, "GL_VERTEX_PROGRAM_CALLBACK_DATA_MESA");
#endif
#if defined(GL_TILE_RASTER_ORDER_FIXED_MESA)
defconsti(env, "GL-TILE-RASTER-ORDER-FIXED-MESA", (GLenum) GL_TILE_RASTER_ORDER_FIXED_MESA, "GL_TILE_RASTER_ORDER_FIXED_MESA");
#endif
#if defined(GL_TILE_RASTER_ORDER_INCREASING_X_MESA)
defconsti(env, "GL-TILE-RASTER-ORDER-INCREASING-X-MESA", (GLenum) GL_TILE_RASTER_ORDER_INCREASING_X_MESA, "GL_TILE_RASTER_ORDER_INCREASING_X_MESA");
#endif
#if defined(GL_TILE_RASTER_ORDER_INCREASING_Y_MESA)
defconsti(env, "GL-TILE-RASTER-ORDER-INCREASING-Y-MESA", (GLenum) GL_TILE_RASTER_ORDER_INCREASING_Y_MESA, "GL_TILE_RASTER_ORDER_INCREASING_Y_MESA");
#endif
#if defined(GL_FRAMEBUFFER_FLIP_Y_MESA)
defconsti(env, "GL-FRAMEBUFFER-FLIP-Y-MESA", (GLenum) GL_FRAMEBUFFER_FLIP_Y_MESA, "GL_FRAMEBUFFER_FLIP_Y_MESA");
#endif
#if defined(GL_FRAMEBUFFER_FLIP_X_MESA)
defconsti(env, "GL-FRAMEBUFFER-FLIP-X-MESA", (GLenum) GL_FRAMEBUFFER_FLIP_X_MESA, "GL_FRAMEBUFFER_FLIP_X_MESA");
#endif
#if defined(GL_FRAMEBUFFER_SWAP_XY_MESA)
defconsti(env, "GL-FRAMEBUFFER-SWAP-XY-MESA", (GLenum) GL_FRAMEBUFFER_SWAP_XY_MESA, "GL_FRAMEBUFFER_SWAP_XY_MESA");
#endif
#if defined(GL_COUNTER_TYPE_AMD)
defconsti(env, "GL-COUNTER-TYPE-AMD", (GLenum) GL_COUNTER_TYPE_AMD, "GL_COUNTER_TYPE_AMD");
#endif
#if defined(GL_COUNTER_RANGE_AMD)
defconsti(env, "GL-COUNTER-RANGE-AMD", (GLenum) GL_COUNTER_RANGE_AMD, "GL_COUNTER_RANGE_AMD");
#endif
#if defined(GL_UNSIGNED_INT64_AMD)
defconsti(env, "GL-UNSIGNED-INT64-AMD", (GLenum) GL_UNSIGNED_INT64_AMD, "GL_UNSIGNED_INT64_AMD");
#endif
#if defined(GL_PERCENTAGE_AMD)
defconsti(env, "GL-PERCENTAGE-AMD", (GLenum) GL_PERCENTAGE_AMD, "GL_PERCENTAGE_AMD");
#endif
#if defined(GL_PERFMON_RESULT_AVAILABLE_AMD)
defconsti(env, "GL-PERFMON-RESULT-AVAILABLE-AMD", (GLenum) GL_PERFMON_RESULT_AVAILABLE_AMD, "GL_PERFMON_RESULT_AVAILABLE_AMD");
#endif
#if defined(GL_PERFMON_RESULT_SIZE_AMD)
defconsti(env, "GL-PERFMON-RESULT-SIZE-AMD", (GLenum) GL_PERFMON_RESULT_SIZE_AMD, "GL_PERFMON_RESULT_SIZE_AMD");
#endif
#if defined(GL_PERFMON_RESULT_AMD)
defconsti(env, "GL-PERFMON-RESULT-AMD", (GLenum) GL_PERFMON_RESULT_AMD, "GL_PERFMON_RESULT_AMD");
#endif
#if defined(GL_TEXTURE_WIDTH_QCOM)
defconsti(env, "GL-TEXTURE-WIDTH-QCOM", (GLenum) GL_TEXTURE_WIDTH_QCOM, "GL_TEXTURE_WIDTH_QCOM");
#endif
#if defined(GL_TEXTURE_HEIGHT_QCOM)
defconsti(env, "GL-TEXTURE-HEIGHT-QCOM", (GLenum) GL_TEXTURE_HEIGHT_QCOM, "GL_TEXTURE_HEIGHT_QCOM");
#endif
#if defined(GL_TEXTURE_DEPTH_QCOM)
defconsti(env, "GL-TEXTURE-DEPTH-QCOM", (GLenum) GL_TEXTURE_DEPTH_QCOM, "GL_TEXTURE_DEPTH_QCOM");
#endif
#if defined(GL_TEXTURE_INTERNAL_FORMAT_QCOM)
defconsti(env, "GL-TEXTURE-INTERNAL-FORMAT-QCOM", (GLenum) GL_TEXTURE_INTERNAL_FORMAT_QCOM, "GL_TEXTURE_INTERNAL_FORMAT_QCOM");
#endif
#if defined(GL_TEXTURE_FORMAT_QCOM)
defconsti(env, "GL-TEXTURE-FORMAT-QCOM", (GLenum) GL_TEXTURE_FORMAT_QCOM, "GL_TEXTURE_FORMAT_QCOM");
#endif
#if defined(GL_TEXTURE_TYPE_QCOM)
defconsti(env, "GL-TEXTURE-TYPE-QCOM", (GLenum) GL_TEXTURE_TYPE_QCOM, "GL_TEXTURE_TYPE_QCOM");
#endif
#if defined(GL_TEXTURE_IMAGE_VALID_QCOM)
defconsti(env, "GL-TEXTURE-IMAGE-VALID-QCOM", (GLenum) GL_TEXTURE_IMAGE_VALID_QCOM, "GL_TEXTURE_IMAGE_VALID_QCOM");
#endif
#if defined(GL_TEXTURE_NUM_LEVELS_QCOM)
defconsti(env, "GL-TEXTURE-NUM-LEVELS-QCOM", (GLenum) GL_TEXTURE_NUM_LEVELS_QCOM, "GL_TEXTURE_NUM_LEVELS_QCOM");
#endif
#if defined(GL_TEXTURE_TARGET_QCOM)
defconsti(env, "GL-TEXTURE-TARGET-QCOM", (GLenum) GL_TEXTURE_TARGET_QCOM, "GL_TEXTURE_TARGET_QCOM");
#endif
#if defined(GL_TEXTURE_OBJECT_VALID_QCOM)
defconsti(env, "GL-TEXTURE-OBJECT-VALID-QCOM", (GLenum) GL_TEXTURE_OBJECT_VALID_QCOM, "GL_TEXTURE_OBJECT_VALID_QCOM");
#endif
#if defined(GL_STATE_RESTORE)
defconsti(env, "GL-STATE-RESTORE", (GLenum) GL_STATE_RESTORE, "GL_STATE_RESTORE");
#endif
#if defined(GL_SAMPLER_EXTERNAL_2D_Y2Y_EXT)
defconsti(env, "GL-SAMPLER-EXTERNAL-2D-Y2Y-EXT", (GLenum) GL_SAMPLER_EXTERNAL_2D_Y2Y_EXT, "GL_SAMPLER_EXTERNAL_2D_Y2Y_EXT");
#endif
#if defined(GL_TEXTURE_PROTECTED_EXT)
defconsti(env, "GL-TEXTURE-PROTECTED-EXT", (GLenum) GL_TEXTURE_PROTECTED_EXT, "GL_TEXTURE_PROTECTED_EXT");
#endif
#if defined(GL_TEXTURE_FOVEATED_FEATURE_BITS_QCOM)
defconsti(env, "GL-TEXTURE-FOVEATED-FEATURE-BITS-QCOM", (GLenum) GL_TEXTURE_FOVEATED_FEATURE_BITS_QCOM, "GL_TEXTURE_FOVEATED_FEATURE_BITS_QCOM");
#endif
#if defined(GL_TEXTURE_FOVEATED_MIN_PIXEL_DENSITY_QCOM)
defconsti(env, "GL-TEXTURE-FOVEATED-MIN-PIXEL-DENSITY-QCOM", (GLenum) GL_TEXTURE_FOVEATED_MIN_PIXEL_DENSITY_QCOM, "GL_TEXTURE_FOVEATED_MIN_PIXEL_DENSITY_QCOM");
#endif
#if defined(GL_TEXTURE_FOVEATED_FEATURE_QUERY_QCOM)
defconsti(env, "GL-TEXTURE-FOVEATED-FEATURE-QUERY-QCOM", (GLenum) GL_TEXTURE_FOVEATED_FEATURE_QUERY_QCOM, "GL_TEXTURE_FOVEATED_FEATURE_QUERY_QCOM");
#endif
#if defined(GL_TEXTURE_FOVEATED_NUM_FOCAL_POINTS_QUERY_QCOM)
defconsti(env, "GL-TEXTURE-FOVEATED-NUM-FOCAL-POINTS-QUERY-QCOM", (GLenum) GL_TEXTURE_FOVEATED_NUM_FOCAL_POINTS_QUERY_QCOM, "GL_TEXTURE_FOVEATED_NUM_FOCAL_POINTS_QUERY_QCOM");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_FOVEATION_QCOM)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-FOVEATION-QCOM", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_FOVEATION_QCOM, "GL_FRAMEBUFFER_INCOMPLETE_FOVEATION_QCOM");
#endif
#if defined(GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG)
defconsti(env, "GL-COMPRESSED-RGB-PVRTC-4BPPV1-IMG", (GLenum) GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG, "GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG");
#endif
#if defined(GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG)
defconsti(env, "GL-COMPRESSED-RGB-PVRTC-2BPPV1-IMG", (GLenum) GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG, "GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG");
#endif
#if defined(GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG)
defconsti(env, "GL-COMPRESSED-RGBA-PVRTC-4BPPV1-IMG", (GLenum) GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG, "GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG");
#endif
#if defined(GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG)
defconsti(env, "GL-COMPRESSED-RGBA-PVRTC-2BPPV1-IMG", (GLenum) GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG, "GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG");
#endif
#if defined(GL_MODULATE_COLOR_IMG)
defconsti(env, "GL-MODULATE-COLOR-IMG", (GLenum) GL_MODULATE_COLOR_IMG, "GL_MODULATE_COLOR_IMG");
#endif
#if defined(GL_RECIP_ADD_SIGNED_ALPHA_IMG)
defconsti(env, "GL-RECIP-ADD-SIGNED-ALPHA-IMG", (GLenum) GL_RECIP_ADD_SIGNED_ALPHA_IMG, "GL_RECIP_ADD_SIGNED_ALPHA_IMG");
#endif
#if defined(GL_TEXTURE_ALPHA_MODULATE_IMG)
defconsti(env, "GL-TEXTURE-ALPHA-MODULATE-IMG", (GLenum) GL_TEXTURE_ALPHA_MODULATE_IMG, "GL_TEXTURE_ALPHA_MODULATE_IMG");
#endif
#if defined(GL_FACTOR_ALPHA_MODULATE_IMG)
defconsti(env, "GL-FACTOR-ALPHA-MODULATE-IMG", (GLenum) GL_FACTOR_ALPHA_MODULATE_IMG, "GL_FACTOR_ALPHA_MODULATE_IMG");
#endif
#if defined(GL_FRAGMENT_ALPHA_MODULATE_IMG)
defconsti(env, "GL-FRAGMENT-ALPHA-MODULATE-IMG", (GLenum) GL_FRAGMENT_ALPHA_MODULATE_IMG, "GL_FRAGMENT_ALPHA_MODULATE_IMG");
#endif
#if defined(GL_ADD_BLEND_IMG)
defconsti(env, "GL-ADD-BLEND-IMG", (GLenum) GL_ADD_BLEND_IMG, "GL_ADD_BLEND_IMG");
#endif
#if defined(GL_SGX_BINARY_IMG)
defconsti(env, "GL-SGX-BINARY-IMG", (GLenum) GL_SGX_BINARY_IMG, "GL_SGX_BINARY_IMG");
#endif
#if defined(GL_TEXTURE_RED_TYPE)
defconsti(env, "GL-TEXTURE-RED-TYPE", (GLenum) GL_TEXTURE_RED_TYPE, "GL_TEXTURE_RED_TYPE");
#endif
#if defined(GL_TEXTURE_RED_TYPE_ARB)
defconsti(env, "GL-TEXTURE-RED-TYPE-ARB", (GLenum) GL_TEXTURE_RED_TYPE_ARB, "GL_TEXTURE_RED_TYPE_ARB");
#endif
#if defined(GL_TEXTURE_GREEN_TYPE)
defconsti(env, "GL-TEXTURE-GREEN-TYPE", (GLenum) GL_TEXTURE_GREEN_TYPE, "GL_TEXTURE_GREEN_TYPE");
#endif
#if defined(GL_TEXTURE_GREEN_TYPE_ARB)
defconsti(env, "GL-TEXTURE-GREEN-TYPE-ARB", (GLenum) GL_TEXTURE_GREEN_TYPE_ARB, "GL_TEXTURE_GREEN_TYPE_ARB");
#endif
#if defined(GL_TEXTURE_BLUE_TYPE)
defconsti(env, "GL-TEXTURE-BLUE-TYPE", (GLenum) GL_TEXTURE_BLUE_TYPE, "GL_TEXTURE_BLUE_TYPE");
#endif
#if defined(GL_TEXTURE_BLUE_TYPE_ARB)
defconsti(env, "GL-TEXTURE-BLUE-TYPE-ARB", (GLenum) GL_TEXTURE_BLUE_TYPE_ARB, "GL_TEXTURE_BLUE_TYPE_ARB");
#endif
#if defined(GL_TEXTURE_ALPHA_TYPE)
defconsti(env, "GL-TEXTURE-ALPHA-TYPE", (GLenum) GL_TEXTURE_ALPHA_TYPE, "GL_TEXTURE_ALPHA_TYPE");
#endif
#if defined(GL_TEXTURE_ALPHA_TYPE_ARB)
defconsti(env, "GL-TEXTURE-ALPHA-TYPE-ARB", (GLenum) GL_TEXTURE_ALPHA_TYPE_ARB, "GL_TEXTURE_ALPHA_TYPE_ARB");
#endif
#if defined(GL_TEXTURE_LUMINANCE_TYPE)
defconsti(env, "GL-TEXTURE-LUMINANCE-TYPE", (GLenum) GL_TEXTURE_LUMINANCE_TYPE, "GL_TEXTURE_LUMINANCE_TYPE");
#endif
#if defined(GL_TEXTURE_LUMINANCE_TYPE_ARB)
defconsti(env, "GL-TEXTURE-LUMINANCE-TYPE-ARB", (GLenum) GL_TEXTURE_LUMINANCE_TYPE_ARB, "GL_TEXTURE_LUMINANCE_TYPE_ARB");
#endif
#if defined(GL_TEXTURE_INTENSITY_TYPE)
defconsti(env, "GL-TEXTURE-INTENSITY-TYPE", (GLenum) GL_TEXTURE_INTENSITY_TYPE, "GL_TEXTURE_INTENSITY_TYPE");
#endif
#if defined(GL_TEXTURE_INTENSITY_TYPE_ARB)
defconsti(env, "GL-TEXTURE-INTENSITY-TYPE-ARB", (GLenum) GL_TEXTURE_INTENSITY_TYPE_ARB, "GL_TEXTURE_INTENSITY_TYPE_ARB");
#endif
#if defined(GL_TEXTURE_DEPTH_TYPE)
defconsti(env, "GL-TEXTURE-DEPTH-TYPE", (GLenum) GL_TEXTURE_DEPTH_TYPE, "GL_TEXTURE_DEPTH_TYPE");
#endif
#if defined(GL_TEXTURE_DEPTH_TYPE_ARB)
defconsti(env, "GL-TEXTURE-DEPTH-TYPE-ARB", (GLenum) GL_TEXTURE_DEPTH_TYPE_ARB, "GL_TEXTURE_DEPTH_TYPE_ARB");
#endif
#if defined(GL_UNSIGNED_NORMALIZED)
defconsti(env, "GL-UNSIGNED-NORMALIZED", (GLenum) GL_UNSIGNED_NORMALIZED, "GL_UNSIGNED_NORMALIZED");
#endif
#if defined(GL_UNSIGNED_NORMALIZED_ARB)
defconsti(env, "GL-UNSIGNED-NORMALIZED-ARB", (GLenum) GL_UNSIGNED_NORMALIZED_ARB, "GL_UNSIGNED_NORMALIZED_ARB");
#endif
#if defined(GL_UNSIGNED_NORMALIZED_EXT)
defconsti(env, "GL-UNSIGNED-NORMALIZED-EXT", (GLenum) GL_UNSIGNED_NORMALIZED_EXT, "GL_UNSIGNED_NORMALIZED_EXT");
#endif
#if defined(GL_TEXTURE_1D_ARRAY)
defconsti(env, "GL-TEXTURE-1D-ARRAY", (GLenum) GL_TEXTURE_1D_ARRAY, "GL_TEXTURE_1D_ARRAY");
#endif
#if defined(GL_TEXTURE_1D_ARRAY_EXT)
defconsti(env, "GL-TEXTURE-1D-ARRAY-EXT", (GLenum) GL_TEXTURE_1D_ARRAY_EXT, "GL_TEXTURE_1D_ARRAY_EXT");
#endif
#if defined(GL_PROXY_TEXTURE_1D_ARRAY)
defconsti(env, "GL-PROXY-TEXTURE-1D-ARRAY", (GLenum) GL_PROXY_TEXTURE_1D_ARRAY, "GL_PROXY_TEXTURE_1D_ARRAY");
#endif
#if defined(GL_PROXY_TEXTURE_1D_ARRAY_EXT)
defconsti(env, "GL-PROXY-TEXTURE-1D-ARRAY-EXT", (GLenum) GL_PROXY_TEXTURE_1D_ARRAY_EXT, "GL_PROXY_TEXTURE_1D_ARRAY_EXT");
#endif
#if defined(GL_TEXTURE_2D_ARRAY)
defconsti(env, "GL-TEXTURE-2D-ARRAY", (GLenum) GL_TEXTURE_2D_ARRAY, "GL_TEXTURE_2D_ARRAY");
#endif
#if defined(GL_TEXTURE_2D_ARRAY_EXT)
defconsti(env, "GL-TEXTURE-2D-ARRAY-EXT", (GLenum) GL_TEXTURE_2D_ARRAY_EXT, "GL_TEXTURE_2D_ARRAY_EXT");
#endif
#if defined(GL_PROXY_TEXTURE_2D_ARRAY)
defconsti(env, "GL-PROXY-TEXTURE-2D-ARRAY", (GLenum) GL_PROXY_TEXTURE_2D_ARRAY, "GL_PROXY_TEXTURE_2D_ARRAY");
#endif
#if defined(GL_PROXY_TEXTURE_2D_ARRAY_EXT)
defconsti(env, "GL-PROXY-TEXTURE-2D-ARRAY-EXT", (GLenum) GL_PROXY_TEXTURE_2D_ARRAY_EXT, "GL_PROXY_TEXTURE_2D_ARRAY_EXT");
#endif
#if defined(GL_TEXTURE_BINDING_1D_ARRAY)
defconsti(env, "GL-TEXTURE-BINDING-1D-ARRAY", (GLenum) GL_TEXTURE_BINDING_1D_ARRAY, "GL_TEXTURE_BINDING_1D_ARRAY");
#endif
#if defined(GL_TEXTURE_BINDING_1D_ARRAY_EXT)
defconsti(env, "GL-TEXTURE-BINDING-1D-ARRAY-EXT", (GLenum) GL_TEXTURE_BINDING_1D_ARRAY_EXT, "GL_TEXTURE_BINDING_1D_ARRAY_EXT");
#endif
#if defined(GL_TEXTURE_BINDING_2D_ARRAY)
defconsti(env, "GL-TEXTURE-BINDING-2D-ARRAY", (GLenum) GL_TEXTURE_BINDING_2D_ARRAY, "GL_TEXTURE_BINDING_2D_ARRAY");
#endif
#if defined(GL_TEXTURE_BINDING_2D_ARRAY_EXT)
defconsti(env, "GL-TEXTURE-BINDING-2D-ARRAY-EXT", (GLenum) GL_TEXTURE_BINDING_2D_ARRAY_EXT, "GL_TEXTURE_BINDING_2D_ARRAY_EXT");
#endif
#if defined(GL_GEOMETRY_PROGRAM_NV)
defconsti(env, "GL-GEOMETRY-PROGRAM-NV", (GLenum) GL_GEOMETRY_PROGRAM_NV, "GL_GEOMETRY_PROGRAM_NV");
#endif
#if defined(GL_MAX_PROGRAM_OUTPUT_VERTICES_NV)
defconsti(env, "GL-MAX-PROGRAM-OUTPUT-VERTICES-NV", (GLenum) GL_MAX_PROGRAM_OUTPUT_VERTICES_NV, "GL_MAX_PROGRAM_OUTPUT_VERTICES_NV");
#endif
#if defined(GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV)
defconsti(env, "GL-MAX-PROGRAM-TOTAL-OUTPUT-COMPONENTS-NV", (GLenum) GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV, "GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV");
#endif
#if defined(GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-GEOMETRY-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS, "GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB)
defconsti(env, "GL-MAX-GEOMETRY-TEXTURE-IMAGE-UNITS-ARB", (GLenum) GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB, "GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB");
#endif
#if defined(GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-TEXTURE-IMAGE-UNITS-EXT", (GLenum) GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT, "GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES)
defconsti(env, "GL-MAX-GEOMETRY-TEXTURE-IMAGE-UNITS-OES", (GLenum) GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES, "GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES");
#endif
#if defined(GL_TEXTURE_BUFFER)
defconsti(env, "GL-TEXTURE-BUFFER", (GLenum) GL_TEXTURE_BUFFER, "GL_TEXTURE_BUFFER");
#endif
#if defined(GL_TEXTURE_BUFFER_ARB)
defconsti(env, "GL-TEXTURE-BUFFER-ARB", (GLenum) GL_TEXTURE_BUFFER_ARB, "GL_TEXTURE_BUFFER_ARB");
#endif
#if defined(GL_TEXTURE_BUFFER_EXT)
defconsti(env, "GL-TEXTURE-BUFFER-EXT", (GLenum) GL_TEXTURE_BUFFER_EXT, "GL_TEXTURE_BUFFER_EXT");
#endif
#if defined(GL_TEXTURE_BUFFER_OES)
defconsti(env, "GL-TEXTURE-BUFFER-OES", (GLenum) GL_TEXTURE_BUFFER_OES, "GL_TEXTURE_BUFFER_OES");
#endif
#if defined(GL_TEXTURE_BUFFER_BINDING)
defconsti(env, "GL-TEXTURE-BUFFER-BINDING", (GLenum) GL_TEXTURE_BUFFER_BINDING, "GL_TEXTURE_BUFFER_BINDING");
#endif
#if defined(GL_TEXTURE_BUFFER_BINDING_EXT)
defconsti(env, "GL-TEXTURE-BUFFER-BINDING-EXT", (GLenum) GL_TEXTURE_BUFFER_BINDING_EXT, "GL_TEXTURE_BUFFER_BINDING_EXT");
#endif
#if defined(GL_TEXTURE_BUFFER_BINDING_OES)
defconsti(env, "GL-TEXTURE-BUFFER-BINDING-OES", (GLenum) GL_TEXTURE_BUFFER_BINDING_OES, "GL_TEXTURE_BUFFER_BINDING_OES");
#endif
#if defined(GL_MAX_TEXTURE_BUFFER_SIZE)
defconsti(env, "GL-MAX-TEXTURE-BUFFER-SIZE", (GLenum) GL_MAX_TEXTURE_BUFFER_SIZE, "GL_MAX_TEXTURE_BUFFER_SIZE");
#endif
#if defined(GL_MAX_TEXTURE_BUFFER_SIZE_ARB)
defconsti(env, "GL-MAX-TEXTURE-BUFFER-SIZE-ARB", (GLenum) GL_MAX_TEXTURE_BUFFER_SIZE_ARB, "GL_MAX_TEXTURE_BUFFER_SIZE_ARB");
#endif
#if defined(GL_MAX_TEXTURE_BUFFER_SIZE_EXT)
defconsti(env, "GL-MAX-TEXTURE-BUFFER-SIZE-EXT", (GLenum) GL_MAX_TEXTURE_BUFFER_SIZE_EXT, "GL_MAX_TEXTURE_BUFFER_SIZE_EXT");
#endif
#if defined(GL_MAX_TEXTURE_BUFFER_SIZE_OES)
defconsti(env, "GL-MAX-TEXTURE-BUFFER-SIZE-OES", (GLenum) GL_MAX_TEXTURE_BUFFER_SIZE_OES, "GL_MAX_TEXTURE_BUFFER_SIZE_OES");
#endif
#if defined(GL_TEXTURE_BINDING_BUFFER)
defconsti(env, "GL-TEXTURE-BINDING-BUFFER", (GLenum) GL_TEXTURE_BINDING_BUFFER, "GL_TEXTURE_BINDING_BUFFER");
#endif
#if defined(GL_TEXTURE_BINDING_BUFFER_ARB)
defconsti(env, "GL-TEXTURE-BINDING-BUFFER-ARB", (GLenum) GL_TEXTURE_BINDING_BUFFER_ARB, "GL_TEXTURE_BINDING_BUFFER_ARB");
#endif
#if defined(GL_TEXTURE_BINDING_BUFFER_EXT)
defconsti(env, "GL-TEXTURE-BINDING-BUFFER-EXT", (GLenum) GL_TEXTURE_BINDING_BUFFER_EXT, "GL_TEXTURE_BINDING_BUFFER_EXT");
#endif
#if defined(GL_TEXTURE_BINDING_BUFFER_OES)
defconsti(env, "GL-TEXTURE-BINDING-BUFFER-OES", (GLenum) GL_TEXTURE_BINDING_BUFFER_OES, "GL_TEXTURE_BINDING_BUFFER_OES");
#endif
#if defined(GL_TEXTURE_BUFFER_DATA_STORE_BINDING)
defconsti(env, "GL-TEXTURE-BUFFER-DATA-STORE-BINDING", (GLenum) GL_TEXTURE_BUFFER_DATA_STORE_BINDING, "GL_TEXTURE_BUFFER_DATA_STORE_BINDING");
#endif
#if defined(GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB)
defconsti(env, "GL-TEXTURE-BUFFER-DATA-STORE-BINDING-ARB", (GLenum) GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB, "GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB");
#endif
#if defined(GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT)
defconsti(env, "GL-TEXTURE-BUFFER-DATA-STORE-BINDING-EXT", (GLenum) GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT, "GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT");
#endif
#if defined(GL_TEXTURE_BUFFER_DATA_STORE_BINDING_OES)
defconsti(env, "GL-TEXTURE-BUFFER-DATA-STORE-BINDING-OES", (GLenum) GL_TEXTURE_BUFFER_DATA_STORE_BINDING_OES, "GL_TEXTURE_BUFFER_DATA_STORE_BINDING_OES");
#endif
#if defined(GL_TEXTURE_BUFFER_FORMAT_ARB)
defconsti(env, "GL-TEXTURE-BUFFER-FORMAT-ARB", (GLenum) GL_TEXTURE_BUFFER_FORMAT_ARB, "GL_TEXTURE_BUFFER_FORMAT_ARB");
#endif
#if defined(GL_TEXTURE_BUFFER_FORMAT_EXT)
defconsti(env, "GL-TEXTURE-BUFFER-FORMAT-EXT", (GLenum) GL_TEXTURE_BUFFER_FORMAT_EXT, "GL_TEXTURE_BUFFER_FORMAT_EXT");
#endif
#if defined(GL_ANY_SAMPLES_PASSED)
defconsti(env, "GL-ANY-SAMPLES-PASSED", (GLenum) GL_ANY_SAMPLES_PASSED, "GL_ANY_SAMPLES_PASSED");
#endif
#if defined(GL_ANY_SAMPLES_PASSED_EXT)
defconsti(env, "GL-ANY-SAMPLES-PASSED-EXT", (GLenum) GL_ANY_SAMPLES_PASSED_EXT, "GL_ANY_SAMPLES_PASSED_EXT");
#endif
#if defined(GL_SAMPLE_SHADING)
defconsti(env, "GL-SAMPLE-SHADING", (GLenum) GL_SAMPLE_SHADING, "GL_SAMPLE_SHADING");
#endif
#if defined(GL_SAMPLE_SHADING_ARB)
defconsti(env, "GL-SAMPLE-SHADING-ARB", (GLenum) GL_SAMPLE_SHADING_ARB, "GL_SAMPLE_SHADING_ARB");
#endif
#if defined(GL_SAMPLE_SHADING_OES)
defconsti(env, "GL-SAMPLE-SHADING-OES", (GLenum) GL_SAMPLE_SHADING_OES, "GL_SAMPLE_SHADING_OES");
#endif
#if defined(GL_MIN_SAMPLE_SHADING_VALUE)
defconsti(env, "GL-MIN-SAMPLE-SHADING-VALUE", (GLenum) GL_MIN_SAMPLE_SHADING_VALUE, "GL_MIN_SAMPLE_SHADING_VALUE");
#endif
#if defined(GL_MIN_SAMPLE_SHADING_VALUE_ARB)
defconsti(env, "GL-MIN-SAMPLE-SHADING-VALUE-ARB", (GLenum) GL_MIN_SAMPLE_SHADING_VALUE_ARB, "GL_MIN_SAMPLE_SHADING_VALUE_ARB");
#endif
#if defined(GL_MIN_SAMPLE_SHADING_VALUE_OES)
defconsti(env, "GL-MIN-SAMPLE-SHADING-VALUE-OES", (GLenum) GL_MIN_SAMPLE_SHADING_VALUE_OES, "GL_MIN_SAMPLE_SHADING_VALUE_OES");
#endif
#if defined(GL_R11F_G11F_B10F)
defconsti(env, "GL-R11F-G11F-B10F", (GLenum) GL_R11F_G11F_B10F, "GL_R11F_G11F_B10F");
#endif
#if defined(GL_R11F_G11F_B10F_APPLE)
defconsti(env, "GL-R11F-G11F-B10F-APPLE", (GLenum) GL_R11F_G11F_B10F_APPLE, "GL_R11F_G11F_B10F_APPLE");
#endif
#if defined(GL_R11F_G11F_B10F_EXT)
defconsti(env, "GL-R11F-G11F-B10F-EXT", (GLenum) GL_R11F_G11F_B10F_EXT, "GL_R11F_G11F_B10F_EXT");
#endif
#if defined(GL_UNSIGNED_INT_10F_11F_11F_REV)
defconsti(env, "GL-UNSIGNED-INT-10F-11F-11F-REV", (GLenum) GL_UNSIGNED_INT_10F_11F_11F_REV, "GL_UNSIGNED_INT_10F_11F_11F_REV");
#endif
#if defined(GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE)
defconsti(env, "GL-UNSIGNED-INT-10F-11F-11F-REV-APPLE", (GLenum) GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE, "GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE");
#endif
#if defined(GL_UNSIGNED_INT_10F_11F_11F_REV_EXT)
defconsti(env, "GL-UNSIGNED-INT-10F-11F-11F-REV-EXT", (GLenum) GL_UNSIGNED_INT_10F_11F_11F_REV_EXT, "GL_UNSIGNED_INT_10F_11F_11F_REV_EXT");
#endif
#if defined(GL_RGBA_SIGNED_COMPONENTS_EXT)
defconsti(env, "GL-RGBA-SIGNED-COMPONENTS-EXT", (GLenum) GL_RGBA_SIGNED_COMPONENTS_EXT, "GL_RGBA_SIGNED_COMPONENTS_EXT");
#endif
#if defined(GL_RGB9_E5)
defconsti(env, "GL-RGB9-E5", (GLenum) GL_RGB9_E5, "GL_RGB9_E5");
#endif
#if defined(GL_RGB9_E5_APPLE)
defconsti(env, "GL-RGB9-E5-APPLE", (GLenum) GL_RGB9_E5_APPLE, "GL_RGB9_E5_APPLE");
#endif
#if defined(GL_RGB9_E5_EXT)
defconsti(env, "GL-RGB9-E5-EXT", (GLenum) GL_RGB9_E5_EXT, "GL_RGB9_E5_EXT");
#endif
#if defined(GL_UNSIGNED_INT_5_9_9_9_REV)
defconsti(env, "GL-UNSIGNED-INT-5-9-9-9-REV", (GLenum) GL_UNSIGNED_INT_5_9_9_9_REV, "GL_UNSIGNED_INT_5_9_9_9_REV");
#endif
#if defined(GL_UNSIGNED_INT_5_9_9_9_REV_APPLE)
defconsti(env, "GL-UNSIGNED-INT-5-9-9-9-REV-APPLE", (GLenum) GL_UNSIGNED_INT_5_9_9_9_REV_APPLE, "GL_UNSIGNED_INT_5_9_9_9_REV_APPLE");
#endif
#if defined(GL_UNSIGNED_INT_5_9_9_9_REV_EXT)
defconsti(env, "GL-UNSIGNED-INT-5-9-9-9-REV-EXT", (GLenum) GL_UNSIGNED_INT_5_9_9_9_REV_EXT, "GL_UNSIGNED_INT_5_9_9_9_REV_EXT");
#endif
#if defined(GL_TEXTURE_SHARED_SIZE)
defconsti(env, "GL-TEXTURE-SHARED-SIZE", (GLenum) GL_TEXTURE_SHARED_SIZE, "GL_TEXTURE_SHARED_SIZE");
#endif
#if defined(GL_TEXTURE_SHARED_SIZE_EXT)
defconsti(env, "GL-TEXTURE-SHARED-SIZE-EXT", (GLenum) GL_TEXTURE_SHARED_SIZE_EXT, "GL_TEXTURE_SHARED_SIZE_EXT");
#endif
#if defined(GL_SRGB)
defconsti(env, "GL-SRGB", (GLenum) GL_SRGB, "GL_SRGB");
#endif
#if defined(GL_SRGB_EXT)
defconsti(env, "GL-SRGB-EXT", (GLenum) GL_SRGB_EXT, "GL_SRGB_EXT");
#endif
#if defined(GL_SRGB8)
defconsti(env, "GL-SRGB8", (GLenum) GL_SRGB8, "GL_SRGB8");
#endif
#if defined(GL_SRGB8_EXT)
defconsti(env, "GL-SRGB8-EXT", (GLenum) GL_SRGB8_EXT, "GL_SRGB8_EXT");
#endif
#if defined(GL_SRGB8_NV)
defconsti(env, "GL-SRGB8-NV", (GLenum) GL_SRGB8_NV, "GL_SRGB8_NV");
#endif
#if defined(GL_SRGB_ALPHA)
defconsti(env, "GL-SRGB-ALPHA", (GLenum) GL_SRGB_ALPHA, "GL_SRGB_ALPHA");
#endif
#if defined(GL_SRGB_ALPHA_EXT)
defconsti(env, "GL-SRGB-ALPHA-EXT", (GLenum) GL_SRGB_ALPHA_EXT, "GL_SRGB_ALPHA_EXT");
#endif
#if defined(GL_SRGB8_ALPHA8)
defconsti(env, "GL-SRGB8-ALPHA8", (GLenum) GL_SRGB8_ALPHA8, "GL_SRGB8_ALPHA8");
#endif
#if defined(GL_SRGB8_ALPHA8_EXT)
defconsti(env, "GL-SRGB8-ALPHA8-EXT", (GLenum) GL_SRGB8_ALPHA8_EXT, "GL_SRGB8_ALPHA8_EXT");
#endif
#if defined(GL_SLUMINANCE_ALPHA)
defconsti(env, "GL-SLUMINANCE-ALPHA", (GLenum) GL_SLUMINANCE_ALPHA, "GL_SLUMINANCE_ALPHA");
#endif
#if defined(GL_SLUMINANCE_ALPHA_EXT)
defconsti(env, "GL-SLUMINANCE-ALPHA-EXT", (GLenum) GL_SLUMINANCE_ALPHA_EXT, "GL_SLUMINANCE_ALPHA_EXT");
#endif
#if defined(GL_SLUMINANCE_ALPHA_NV)
defconsti(env, "GL-SLUMINANCE-ALPHA-NV", (GLenum) GL_SLUMINANCE_ALPHA_NV, "GL_SLUMINANCE_ALPHA_NV");
#endif
#if defined(GL_SLUMINANCE8_ALPHA8)
defconsti(env, "GL-SLUMINANCE8-ALPHA8", (GLenum) GL_SLUMINANCE8_ALPHA8, "GL_SLUMINANCE8_ALPHA8");
#endif
#if defined(GL_SLUMINANCE8_ALPHA8_EXT)
defconsti(env, "GL-SLUMINANCE8-ALPHA8-EXT", (GLenum) GL_SLUMINANCE8_ALPHA8_EXT, "GL_SLUMINANCE8_ALPHA8_EXT");
#endif
#if defined(GL_SLUMINANCE8_ALPHA8_NV)
defconsti(env, "GL-SLUMINANCE8-ALPHA8-NV", (GLenum) GL_SLUMINANCE8_ALPHA8_NV, "GL_SLUMINANCE8_ALPHA8_NV");
#endif
#if defined(GL_SLUMINANCE)
defconsti(env, "GL-SLUMINANCE", (GLenum) GL_SLUMINANCE, "GL_SLUMINANCE");
#endif
#if defined(GL_SLUMINANCE_EXT)
defconsti(env, "GL-SLUMINANCE-EXT", (GLenum) GL_SLUMINANCE_EXT, "GL_SLUMINANCE_EXT");
#endif
#if defined(GL_SLUMINANCE_NV)
defconsti(env, "GL-SLUMINANCE-NV", (GLenum) GL_SLUMINANCE_NV, "GL_SLUMINANCE_NV");
#endif
#if defined(GL_SLUMINANCE8)
defconsti(env, "GL-SLUMINANCE8", (GLenum) GL_SLUMINANCE8, "GL_SLUMINANCE8");
#endif
#if defined(GL_SLUMINANCE8_EXT)
defconsti(env, "GL-SLUMINANCE8-EXT", (GLenum) GL_SLUMINANCE8_EXT, "GL_SLUMINANCE8_EXT");
#endif
#if defined(GL_SLUMINANCE8_NV)
defconsti(env, "GL-SLUMINANCE8-NV", (GLenum) GL_SLUMINANCE8_NV, "GL_SLUMINANCE8_NV");
#endif
#if defined(GL_COMPRESSED_SRGB)
defconsti(env, "GL-COMPRESSED-SRGB", (GLenum) GL_COMPRESSED_SRGB, "GL_COMPRESSED_SRGB");
#endif
#if defined(GL_COMPRESSED_SRGB_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-EXT", (GLenum) GL_COMPRESSED_SRGB_EXT, "GL_COMPRESSED_SRGB_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA", (GLenum) GL_COMPRESSED_SRGB_ALPHA, "GL_COMPRESSED_SRGB_ALPHA");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-EXT", (GLenum) GL_COMPRESSED_SRGB_ALPHA_EXT, "GL_COMPRESSED_SRGB_ALPHA_EXT");
#endif
#if defined(GL_COMPRESSED_SLUMINANCE)
defconsti(env, "GL-COMPRESSED-SLUMINANCE", (GLenum) GL_COMPRESSED_SLUMINANCE, "GL_COMPRESSED_SLUMINANCE");
#endif
#if defined(GL_COMPRESSED_SLUMINANCE_EXT)
defconsti(env, "GL-COMPRESSED-SLUMINANCE-EXT", (GLenum) GL_COMPRESSED_SLUMINANCE_EXT, "GL_COMPRESSED_SLUMINANCE_EXT");
#endif
#if defined(GL_COMPRESSED_SLUMINANCE_ALPHA)
defconsti(env, "GL-COMPRESSED-SLUMINANCE-ALPHA", (GLenum) GL_COMPRESSED_SLUMINANCE_ALPHA, "GL_COMPRESSED_SLUMINANCE_ALPHA");
#endif
#if defined(GL_COMPRESSED_SLUMINANCE_ALPHA_EXT)
defconsti(env, "GL-COMPRESSED-SLUMINANCE-ALPHA-EXT", (GLenum) GL_COMPRESSED_SLUMINANCE_ALPHA_EXT, "GL_COMPRESSED_SLUMINANCE_ALPHA_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_S3TC_DXT1_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-S3TC-DXT1-EXT", (GLenum) GL_COMPRESSED_SRGB_S3TC_DXT1_EXT, "GL_COMPRESSED_SRGB_S3TC_DXT1_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_S3TC_DXT1_NV)
defconsti(env, "GL-COMPRESSED-SRGB-S3TC-DXT1-NV", (GLenum) GL_COMPRESSED_SRGB_S3TC_DXT1_NV, "GL_COMPRESSED_SRGB_S3TC_DXT1_NV");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-S3TC-DXT1-EXT", (GLenum) GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT, "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-S3TC-DXT1-NV", (GLenum) GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV, "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-S3TC-DXT3-EXT", (GLenum) GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT, "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-S3TC-DXT3-NV", (GLenum) GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV, "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-S3TC-DXT5-EXT", (GLenum) GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT, "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-S3TC-DXT5-NV", (GLenum) GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV, "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV");
#endif
#if defined(GL_COMPRESSED_LUMINANCE_LATC1_EXT)
defconsti(env, "GL-COMPRESSED-LUMINANCE-LATC1-EXT", (GLenum) GL_COMPRESSED_LUMINANCE_LATC1_EXT, "GL_COMPRESSED_LUMINANCE_LATC1_EXT");
#endif
#if defined(GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT)
defconsti(env, "GL-COMPRESSED-SIGNED-LUMINANCE-LATC1-EXT", (GLenum) GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT, "GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT");
#endif
#if defined(GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT)
defconsti(env, "GL-COMPRESSED-LUMINANCE-ALPHA-LATC2-EXT", (GLenum) GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT, "GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT");
#endif
#if defined(GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT)
defconsti(env, "GL-COMPRESSED-SIGNED-LUMINANCE-ALPHA-LATC2-EXT", (GLenum) GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT, "GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT");
#endif
#if defined(GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV)
defconsti(env, "GL-TESS-CONTROL-PROGRAM-PARAMETER-BUFFER-NV", (GLenum) GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV, "GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV");
#endif
#if defined(GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV)
defconsti(env, "GL-TESS-EVALUATION-PROGRAM-PARAMETER-BUFFER-NV", (GLenum) GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV, "GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH)
defconsti(env, "GL-TRANSFORM-FEEDBACK-VARYING-MAX-LENGTH", (GLenum) GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH, "GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT)
defconsti(env, "GL-TRANSFORM-FEEDBACK-VARYING-MAX-LENGTH-EXT", (GLenum) GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT, "GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT");
#endif
#if defined(GL_BACK_PRIMARY_COLOR_NV)
defconsti(env, "GL-BACK-PRIMARY-COLOR-NV", (GLenum) GL_BACK_PRIMARY_COLOR_NV, "GL_BACK_PRIMARY_COLOR_NV");
#endif
#if defined(GL_BACK_SECONDARY_COLOR_NV)
defconsti(env, "GL-BACK-SECONDARY-COLOR-NV", (GLenum) GL_BACK_SECONDARY_COLOR_NV, "GL_BACK_SECONDARY_COLOR_NV");
#endif
#if defined(GL_TEXTURE_COORD_NV)
defconsti(env, "GL-TEXTURE-COORD-NV", (GLenum) GL_TEXTURE_COORD_NV, "GL_TEXTURE_COORD_NV");
#endif
#if defined(GL_CLIP_DISTANCE_NV)
defconsti(env, "GL-CLIP-DISTANCE-NV", (GLenum) GL_CLIP_DISTANCE_NV, "GL_CLIP_DISTANCE_NV");
#endif
#if defined(GL_VERTEX_ID_NV)
defconsti(env, "GL-VERTEX-ID-NV", (GLenum) GL_VERTEX_ID_NV, "GL_VERTEX_ID_NV");
#endif
#if defined(GL_PRIMITIVE_ID_NV)
defconsti(env, "GL-PRIMITIVE-ID-NV", (GLenum) GL_PRIMITIVE_ID_NV, "GL_PRIMITIVE_ID_NV");
#endif
#if defined(GL_GENERIC_ATTRIB_NV)
defconsti(env, "GL-GENERIC-ATTRIB-NV", (GLenum) GL_GENERIC_ATTRIB_NV, "GL_GENERIC_ATTRIB_NV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_ATTRIBS_NV)
defconsti(env, "GL-TRANSFORM-FEEDBACK-ATTRIBS-NV", (GLenum) GL_TRANSFORM_FEEDBACK_ATTRIBS_NV, "GL_TRANSFORM_FEEDBACK_ATTRIBS_NV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_MODE)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-MODE", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_MODE, "GL_TRANSFORM_FEEDBACK_BUFFER_MODE");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-MODE-EXT", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT, "GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-MODE-NV", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV, "GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV");
#endif
#if defined(GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS)
defconsti(env, "GL-MAX-TRANSFORM-FEEDBACK-SEPARATE-COMPONENTS", (GLenum) GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS, "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS");
#endif
#if defined(GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT)
defconsti(env, "GL-MAX-TRANSFORM-FEEDBACK-SEPARATE-COMPONENTS-EXT", (GLenum) GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT, "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV)
defconsti(env, "GL-MAX-TRANSFORM-FEEDBACK-SEPARATE-COMPONENTS-NV", (GLenum) GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV, "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV");
#endif
#if defined(GL_ACTIVE_VARYINGS_NV)
defconsti(env, "GL-ACTIVE-VARYINGS-NV", (GLenum) GL_ACTIVE_VARYINGS_NV, "GL_ACTIVE_VARYINGS_NV");
#endif
#if defined(GL_ACTIVE_VARYING_MAX_LENGTH_NV)
defconsti(env, "GL-ACTIVE-VARYING-MAX-LENGTH-NV", (GLenum) GL_ACTIVE_VARYING_MAX_LENGTH_NV, "GL_ACTIVE_VARYING_MAX_LENGTH_NV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_VARYINGS)
defconsti(env, "GL-TRANSFORM-FEEDBACK-VARYINGS", (GLenum) GL_TRANSFORM_FEEDBACK_VARYINGS, "GL_TRANSFORM_FEEDBACK_VARYINGS");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_VARYINGS_EXT)
defconsti(env, "GL-TRANSFORM-FEEDBACK-VARYINGS-EXT", (GLenum) GL_TRANSFORM_FEEDBACK_VARYINGS_EXT, "GL_TRANSFORM_FEEDBACK_VARYINGS_EXT");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_VARYINGS_NV)
defconsti(env, "GL-TRANSFORM-FEEDBACK-VARYINGS-NV", (GLenum) GL_TRANSFORM_FEEDBACK_VARYINGS_NV, "GL_TRANSFORM_FEEDBACK_VARYINGS_NV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_START)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-START", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_START, "GL_TRANSFORM_FEEDBACK_BUFFER_START");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-START-EXT", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT, "GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_START_NV)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-START-NV", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_START_NV, "GL_TRANSFORM_FEEDBACK_BUFFER_START_NV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_SIZE)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-SIZE", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_SIZE, "GL_TRANSFORM_FEEDBACK_BUFFER_SIZE");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-SIZE-EXT", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT, "GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-SIZE-NV", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV, "GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_RECORD_NV)
defconsti(env, "GL-TRANSFORM-FEEDBACK-RECORD-NV", (GLenum) GL_TRANSFORM_FEEDBACK_RECORD_NV, "GL_TRANSFORM_FEEDBACK_RECORD_NV");
#endif
#if defined(GL_PRIMITIVES_GENERATED)
defconsti(env, "GL-PRIMITIVES-GENERATED", (GLenum) GL_PRIMITIVES_GENERATED, "GL_PRIMITIVES_GENERATED");
#endif
#if defined(GL_PRIMITIVES_GENERATED_EXT)
defconsti(env, "GL-PRIMITIVES-GENERATED-EXT", (GLenum) GL_PRIMITIVES_GENERATED_EXT, "GL_PRIMITIVES_GENERATED_EXT");
#endif
#if defined(GL_PRIMITIVES_GENERATED_NV)
defconsti(env, "GL-PRIMITIVES-GENERATED-NV", (GLenum) GL_PRIMITIVES_GENERATED_NV, "GL_PRIMITIVES_GENERATED_NV");
#endif
#if defined(GL_PRIMITIVES_GENERATED_OES)
defconsti(env, "GL-PRIMITIVES-GENERATED-OES", (GLenum) GL_PRIMITIVES_GENERATED_OES, "GL_PRIMITIVES_GENERATED_OES");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN)
defconsti(env, "GL-TRANSFORM-FEEDBACK-PRIMITIVES-WRITTEN", (GLenum) GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN, "GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT)
defconsti(env, "GL-TRANSFORM-FEEDBACK-PRIMITIVES-WRITTEN-EXT", (GLenum) GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT, "GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV)
defconsti(env, "GL-TRANSFORM-FEEDBACK-PRIMITIVES-WRITTEN-NV", (GLenum) GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV, "GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV");
#endif
#if defined(GL_RASTERIZER_DISCARD)
defconsti(env, "GL-RASTERIZER-DISCARD", (GLenum) GL_RASTERIZER_DISCARD, "GL_RASTERIZER_DISCARD");
#endif
#if defined(GL_RASTERIZER_DISCARD_EXT)
defconsti(env, "GL-RASTERIZER-DISCARD-EXT", (GLenum) GL_RASTERIZER_DISCARD_EXT, "GL_RASTERIZER_DISCARD_EXT");
#endif
#if defined(GL_RASTERIZER_DISCARD_NV)
defconsti(env, "GL-RASTERIZER-DISCARD-NV", (GLenum) GL_RASTERIZER_DISCARD_NV, "GL_RASTERIZER_DISCARD_NV");
#endif
#if defined(GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS)
defconsti(env, "GL-MAX-TRANSFORM-FEEDBACK-INTERLEAVED-COMPONENTS", (GLenum) GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS, "GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS");
#endif
#if defined(GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT)
defconsti(env, "GL-MAX-TRANSFORM-FEEDBACK-INTERLEAVED-COMPONENTS-EXT", (GLenum) GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT, "GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV)
defconsti(env, "GL-MAX-TRANSFORM-FEEDBACK-INTERLEAVED-COMPONENTS-NV", (GLenum) GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV, "GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV");
#endif
#if defined(GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS)
defconsti(env, "GL-MAX-TRANSFORM-FEEDBACK-SEPARATE-ATTRIBS", (GLenum) GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS, "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS");
#endif
#if defined(GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT)
defconsti(env, "GL-MAX-TRANSFORM-FEEDBACK-SEPARATE-ATTRIBS-EXT", (GLenum) GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT, "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT");
#endif
#if defined(GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV)
defconsti(env, "GL-MAX-TRANSFORM-FEEDBACK-SEPARATE-ATTRIBS-NV", (GLenum) GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV, "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV");
#endif
#if defined(GL_INTERLEAVED_ATTRIBS)
defconsti(env, "GL-INTERLEAVED-ATTRIBS", (GLenum) GL_INTERLEAVED_ATTRIBS, "GL_INTERLEAVED_ATTRIBS");
#endif
#if defined(GL_INTERLEAVED_ATTRIBS_EXT)
defconsti(env, "GL-INTERLEAVED-ATTRIBS-EXT", (GLenum) GL_INTERLEAVED_ATTRIBS_EXT, "GL_INTERLEAVED_ATTRIBS_EXT");
#endif
#if defined(GL_INTERLEAVED_ATTRIBS_NV)
defconsti(env, "GL-INTERLEAVED-ATTRIBS-NV", (GLenum) GL_INTERLEAVED_ATTRIBS_NV, "GL_INTERLEAVED_ATTRIBS_NV");
#endif
#if defined(GL_SEPARATE_ATTRIBS)
defconsti(env, "GL-SEPARATE-ATTRIBS", (GLenum) GL_SEPARATE_ATTRIBS, "GL_SEPARATE_ATTRIBS");
#endif
#if defined(GL_SEPARATE_ATTRIBS_EXT)
defconsti(env, "GL-SEPARATE-ATTRIBS-EXT", (GLenum) GL_SEPARATE_ATTRIBS_EXT, "GL_SEPARATE_ATTRIBS_EXT");
#endif
#if defined(GL_SEPARATE_ATTRIBS_NV)
defconsti(env, "GL-SEPARATE-ATTRIBS-NV", (GLenum) GL_SEPARATE_ATTRIBS_NV, "GL_SEPARATE_ATTRIBS_NV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER, "GL_TRANSFORM_FEEDBACK_BUFFER");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_EXT)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-EXT", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_EXT, "GL_TRANSFORM_FEEDBACK_BUFFER_EXT");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_NV)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-NV", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_NV, "GL_TRANSFORM_FEEDBACK_BUFFER_NV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_BINDING)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-BINDING", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_BINDING, "GL_TRANSFORM_FEEDBACK_BUFFER_BINDING");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-BINDING-EXT", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT, "GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-BINDING-NV", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV, "GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV");
#endif
#if defined(GL_MOTION_ESTIMATION_SEARCH_BLOCK_X_QCOM)
defconsti(env, "GL-MOTION-ESTIMATION-SEARCH-BLOCK-X-QCOM", (GLenum) GL_MOTION_ESTIMATION_SEARCH_BLOCK_X_QCOM, "GL_MOTION_ESTIMATION_SEARCH_BLOCK_X_QCOM");
#endif
#if defined(GL_MOTION_ESTIMATION_SEARCH_BLOCK_Y_QCOM)
defconsti(env, "GL-MOTION-ESTIMATION-SEARCH-BLOCK-Y-QCOM", (GLenum) GL_MOTION_ESTIMATION_SEARCH_BLOCK_Y_QCOM, "GL_MOTION_ESTIMATION_SEARCH_BLOCK_Y_QCOM");
#endif
#if defined(GL_ATC_RGB_AMD)
defconsti(env, "GL-ATC-RGB-AMD", (GLenum) GL_ATC_RGB_AMD, "GL_ATC_RGB_AMD");
#endif
#if defined(GL_ATC_RGBA_EXPLICIT_ALPHA_AMD)
defconsti(env, "GL-ATC-RGBA-EXPLICIT-ALPHA-AMD", (GLenum) GL_ATC_RGBA_EXPLICIT_ALPHA_AMD, "GL_ATC_RGBA_EXPLICIT_ALPHA_AMD");
#endif
#if defined(GL_POINT_SPRITE_COORD_ORIGIN)
defconsti(env, "GL-POINT-SPRITE-COORD-ORIGIN", (GLenum) GL_POINT_SPRITE_COORD_ORIGIN, "GL_POINT_SPRITE_COORD_ORIGIN");
#endif
#if defined(GL_LOWER_LEFT)
defconsti(env, "GL-LOWER-LEFT", (GLenum) GL_LOWER_LEFT, "GL_LOWER_LEFT");
#endif
#if defined(GL_LOWER_LEFT_EXT)
defconsti(env, "GL-LOWER-LEFT-EXT", (GLenum) GL_LOWER_LEFT_EXT, "GL_LOWER_LEFT_EXT");
#endif
#if defined(GL_UPPER_LEFT)
defconsti(env, "GL-UPPER-LEFT", (GLenum) GL_UPPER_LEFT, "GL_UPPER_LEFT");
#endif
#if defined(GL_UPPER_LEFT_EXT)
defconsti(env, "GL-UPPER-LEFT-EXT", (GLenum) GL_UPPER_LEFT_EXT, "GL_UPPER_LEFT_EXT");
#endif
#if defined(GL_STENCIL_BACK_REF)
defconsti(env, "GL-STENCIL-BACK-REF", (GLenum) GL_STENCIL_BACK_REF, "GL_STENCIL_BACK_REF");
#endif
#if defined(GL_STENCIL_BACK_VALUE_MASK)
defconsti(env, "GL-STENCIL-BACK-VALUE-MASK", (GLenum) GL_STENCIL_BACK_VALUE_MASK, "GL_STENCIL_BACK_VALUE_MASK");
#endif
#if defined(GL_STENCIL_BACK_WRITEMASK)
defconsti(env, "GL-STENCIL-BACK-WRITEMASK", (GLenum) GL_STENCIL_BACK_WRITEMASK, "GL_STENCIL_BACK_WRITEMASK");
#endif
#if defined(GL_DRAW_FRAMEBUFFER_BINDING)
defconsti(env, "GL-DRAW-FRAMEBUFFER-BINDING", (GLenum) GL_DRAW_FRAMEBUFFER_BINDING, "GL_DRAW_FRAMEBUFFER_BINDING");
#endif
#if defined(GL_DRAW_FRAMEBUFFER_BINDING_ANGLE)
defconsti(env, "GL-DRAW-FRAMEBUFFER-BINDING-ANGLE", (GLenum) GL_DRAW_FRAMEBUFFER_BINDING_ANGLE, "GL_DRAW_FRAMEBUFFER_BINDING_ANGLE");
#endif
#if defined(GL_DRAW_FRAMEBUFFER_BINDING_APPLE)
defconsti(env, "GL-DRAW-FRAMEBUFFER-BINDING-APPLE", (GLenum) GL_DRAW_FRAMEBUFFER_BINDING_APPLE, "GL_DRAW_FRAMEBUFFER_BINDING_APPLE");
#endif
#if defined(GL_DRAW_FRAMEBUFFER_BINDING_EXT)
defconsti(env, "GL-DRAW-FRAMEBUFFER-BINDING-EXT", (GLenum) GL_DRAW_FRAMEBUFFER_BINDING_EXT, "GL_DRAW_FRAMEBUFFER_BINDING_EXT");
#endif
#if defined(GL_DRAW_FRAMEBUFFER_BINDING_NV)
defconsti(env, "GL-DRAW-FRAMEBUFFER-BINDING-NV", (GLenum) GL_DRAW_FRAMEBUFFER_BINDING_NV, "GL_DRAW_FRAMEBUFFER_BINDING_NV");
#endif
#if defined(GL_FRAMEBUFFER_BINDING)
defconsti(env, "GL-FRAMEBUFFER-BINDING", (GLenum) GL_FRAMEBUFFER_BINDING, "GL_FRAMEBUFFER_BINDING");
#endif
#if defined(GL_FRAMEBUFFER_BINDING_ANGLE)
defconsti(env, "GL-FRAMEBUFFER-BINDING-ANGLE", (GLenum) GL_FRAMEBUFFER_BINDING_ANGLE, "GL_FRAMEBUFFER_BINDING_ANGLE");
#endif
#if defined(GL_FRAMEBUFFER_BINDING_EXT)
defconsti(env, "GL-FRAMEBUFFER-BINDING-EXT", (GLenum) GL_FRAMEBUFFER_BINDING_EXT, "GL_FRAMEBUFFER_BINDING_EXT");
#endif
#if defined(GL_FRAMEBUFFER_BINDING_OES)
defconsti(env, "GL-FRAMEBUFFER-BINDING-OES", (GLenum) GL_FRAMEBUFFER_BINDING_OES, "GL_FRAMEBUFFER_BINDING_OES");
#endif
#if defined(GL_RENDERBUFFER_BINDING)
defconsti(env, "GL-RENDERBUFFER-BINDING", (GLenum) GL_RENDERBUFFER_BINDING, "GL_RENDERBUFFER_BINDING");
#endif
#if defined(GL_RENDERBUFFER_BINDING_ANGLE)
defconsti(env, "GL-RENDERBUFFER-BINDING-ANGLE", (GLenum) GL_RENDERBUFFER_BINDING_ANGLE, "GL_RENDERBUFFER_BINDING_ANGLE");
#endif
#if defined(GL_RENDERBUFFER_BINDING_EXT)
defconsti(env, "GL-RENDERBUFFER-BINDING-EXT", (GLenum) GL_RENDERBUFFER_BINDING_EXT, "GL_RENDERBUFFER_BINDING_EXT");
#endif
#if defined(GL_RENDERBUFFER_BINDING_OES)
defconsti(env, "GL-RENDERBUFFER-BINDING-OES", (GLenum) GL_RENDERBUFFER_BINDING_OES, "GL_RENDERBUFFER_BINDING_OES");
#endif
#if defined(GL_READ_FRAMEBUFFER)
defconsti(env, "GL-READ-FRAMEBUFFER", (GLenum) GL_READ_FRAMEBUFFER, "GL_READ_FRAMEBUFFER");
#endif
#if defined(GL_READ_FRAMEBUFFER_ANGLE)
defconsti(env, "GL-READ-FRAMEBUFFER-ANGLE", (GLenum) GL_READ_FRAMEBUFFER_ANGLE, "GL_READ_FRAMEBUFFER_ANGLE");
#endif
#if defined(GL_READ_FRAMEBUFFER_APPLE)
defconsti(env, "GL-READ-FRAMEBUFFER-APPLE", (GLenum) GL_READ_FRAMEBUFFER_APPLE, "GL_READ_FRAMEBUFFER_APPLE");
#endif
#if defined(GL_READ_FRAMEBUFFER_EXT)
defconsti(env, "GL-READ-FRAMEBUFFER-EXT", (GLenum) GL_READ_FRAMEBUFFER_EXT, "GL_READ_FRAMEBUFFER_EXT");
#endif
#if defined(GL_READ_FRAMEBUFFER_NV)
defconsti(env, "GL-READ-FRAMEBUFFER-NV", (GLenum) GL_READ_FRAMEBUFFER_NV, "GL_READ_FRAMEBUFFER_NV");
#endif
#if defined(GL_DRAW_FRAMEBUFFER)
defconsti(env, "GL-DRAW-FRAMEBUFFER", (GLenum) GL_DRAW_FRAMEBUFFER, "GL_DRAW_FRAMEBUFFER");
#endif
#if defined(GL_DRAW_FRAMEBUFFER_ANGLE)
defconsti(env, "GL-DRAW-FRAMEBUFFER-ANGLE", (GLenum) GL_DRAW_FRAMEBUFFER_ANGLE, "GL_DRAW_FRAMEBUFFER_ANGLE");
#endif
#if defined(GL_DRAW_FRAMEBUFFER_APPLE)
defconsti(env, "GL-DRAW-FRAMEBUFFER-APPLE", (GLenum) GL_DRAW_FRAMEBUFFER_APPLE, "GL_DRAW_FRAMEBUFFER_APPLE");
#endif
#if defined(GL_DRAW_FRAMEBUFFER_EXT)
defconsti(env, "GL-DRAW-FRAMEBUFFER-EXT", (GLenum) GL_DRAW_FRAMEBUFFER_EXT, "GL_DRAW_FRAMEBUFFER_EXT");
#endif
#if defined(GL_DRAW_FRAMEBUFFER_NV)
defconsti(env, "GL-DRAW-FRAMEBUFFER-NV", (GLenum) GL_DRAW_FRAMEBUFFER_NV, "GL_DRAW_FRAMEBUFFER_NV");
#endif
#if defined(GL_READ_FRAMEBUFFER_BINDING)
defconsti(env, "GL-READ-FRAMEBUFFER-BINDING", (GLenum) GL_READ_FRAMEBUFFER_BINDING, "GL_READ_FRAMEBUFFER_BINDING");
#endif
#if defined(GL_READ_FRAMEBUFFER_BINDING_ANGLE)
defconsti(env, "GL-READ-FRAMEBUFFER-BINDING-ANGLE", (GLenum) GL_READ_FRAMEBUFFER_BINDING_ANGLE, "GL_READ_FRAMEBUFFER_BINDING_ANGLE");
#endif
#if defined(GL_READ_FRAMEBUFFER_BINDING_APPLE)
defconsti(env, "GL-READ-FRAMEBUFFER-BINDING-APPLE", (GLenum) GL_READ_FRAMEBUFFER_BINDING_APPLE, "GL_READ_FRAMEBUFFER_BINDING_APPLE");
#endif
#if defined(GL_READ_FRAMEBUFFER_BINDING_EXT)
defconsti(env, "GL-READ-FRAMEBUFFER-BINDING-EXT", (GLenum) GL_READ_FRAMEBUFFER_BINDING_EXT, "GL_READ_FRAMEBUFFER_BINDING_EXT");
#endif
#if defined(GL_READ_FRAMEBUFFER_BINDING_NV)
defconsti(env, "GL-READ-FRAMEBUFFER-BINDING-NV", (GLenum) GL_READ_FRAMEBUFFER_BINDING_NV, "GL_READ_FRAMEBUFFER_BINDING_NV");
#endif
#if defined(GL_RENDERBUFFER_COVERAGE_SAMPLES_NV)
defconsti(env, "GL-RENDERBUFFER-COVERAGE-SAMPLES-NV", (GLenum) GL_RENDERBUFFER_COVERAGE_SAMPLES_NV, "GL_RENDERBUFFER_COVERAGE_SAMPLES_NV");
#endif
#if defined(GL_RENDERBUFFER_SAMPLES)
defconsti(env, "GL-RENDERBUFFER-SAMPLES", (GLenum) GL_RENDERBUFFER_SAMPLES, "GL_RENDERBUFFER_SAMPLES");
#endif
#if defined(GL_RENDERBUFFER_SAMPLES_ANGLE)
defconsti(env, "GL-RENDERBUFFER-SAMPLES-ANGLE", (GLenum) GL_RENDERBUFFER_SAMPLES_ANGLE, "GL_RENDERBUFFER_SAMPLES_ANGLE");
#endif
#if defined(GL_RENDERBUFFER_SAMPLES_APPLE)
defconsti(env, "GL-RENDERBUFFER-SAMPLES-APPLE", (GLenum) GL_RENDERBUFFER_SAMPLES_APPLE, "GL_RENDERBUFFER_SAMPLES_APPLE");
#endif
#if defined(GL_RENDERBUFFER_SAMPLES_EXT)
defconsti(env, "GL-RENDERBUFFER-SAMPLES-EXT", (GLenum) GL_RENDERBUFFER_SAMPLES_EXT, "GL_RENDERBUFFER_SAMPLES_EXT");
#endif
#if defined(GL_RENDERBUFFER_SAMPLES_NV)
defconsti(env, "GL-RENDERBUFFER-SAMPLES-NV", (GLenum) GL_RENDERBUFFER_SAMPLES_NV, "GL_RENDERBUFFER_SAMPLES_NV");
#endif
#if defined(GL_DEPTH_COMPONENT32F)
defconsti(env, "GL-DEPTH-COMPONENT32F", (GLenum) GL_DEPTH_COMPONENT32F, "GL_DEPTH_COMPONENT32F");
#endif
#if defined(GL_DEPTH32F_STENCIL8)
defconsti(env, "GL-DEPTH32F-STENCIL8", (GLenum) GL_DEPTH32F_STENCIL8, "GL_DEPTH32F_STENCIL8");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-OBJECT-TYPE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-OBJECT-TYPE-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-OBJECT-TYPE-OES", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-OBJECT-NAME", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-OBJECT-NAME-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-OBJECT-NAME-OES", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-LEVEL", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-LEVEL-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-LEVEL-OES", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-CUBE-MAP-FACE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-CUBE-MAP-FACE-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-CUBE-MAP-FACE-OES", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-3D-ZOFFSET-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-3D-ZOFFSET-OES", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-LAYER", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-LAYER-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT");
#endif
#if defined(GL_FRAMEBUFFER_COMPLETE)
defconsti(env, "GL-FRAMEBUFFER-COMPLETE", (GLenum) GL_FRAMEBUFFER_COMPLETE, "GL_FRAMEBUFFER_COMPLETE");
#endif
#if defined(GL_FRAMEBUFFER_COMPLETE_EXT)
defconsti(env, "GL-FRAMEBUFFER-COMPLETE-EXT", (GLenum) GL_FRAMEBUFFER_COMPLETE_EXT, "GL_FRAMEBUFFER_COMPLETE_EXT");
#endif
#if defined(GL_FRAMEBUFFER_COMPLETE_OES)
defconsti(env, "GL-FRAMEBUFFER-COMPLETE-OES", (GLenum) GL_FRAMEBUFFER_COMPLETE_OES, "GL_FRAMEBUFFER_COMPLETE_OES");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-ATTACHMENT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT, "GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-ATTACHMENT-EXT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT, "GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-ATTACHMENT-OES", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES, "GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MISSING-ATTACHMENT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT, "GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MISSING-ATTACHMENT-EXT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT, "GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MISSING-ATTACHMENT-OES", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES, "GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-DIMENSIONS", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS, "GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-DIMENSIONS-EXT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT, "GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-DIMENSIONS-OES", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES, "GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-FORMATS-EXT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT, "GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-FORMATS-OES", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES, "GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-DRAW-BUFFER", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER, "GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-DRAW-BUFFER-EXT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT, "GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-DRAW-BUFFER-OES", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES, "GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-READ-BUFFER", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER, "GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-READ-BUFFER-EXT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT, "GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-READ-BUFFER-OES", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES, "GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES");
#endif
#if defined(GL_FRAMEBUFFER_UNSUPPORTED)
defconsti(env, "GL-FRAMEBUFFER-UNSUPPORTED", (GLenum) GL_FRAMEBUFFER_UNSUPPORTED, "GL_FRAMEBUFFER_UNSUPPORTED");
#endif
#if defined(GL_FRAMEBUFFER_UNSUPPORTED_EXT)
defconsti(env, "GL-FRAMEBUFFER-UNSUPPORTED-EXT", (GLenum) GL_FRAMEBUFFER_UNSUPPORTED_EXT, "GL_FRAMEBUFFER_UNSUPPORTED_EXT");
#endif
#if defined(GL_FRAMEBUFFER_UNSUPPORTED_OES)
defconsti(env, "GL-FRAMEBUFFER-UNSUPPORTED-OES", (GLenum) GL_FRAMEBUFFER_UNSUPPORTED_OES, "GL_FRAMEBUFFER_UNSUPPORTED_OES");
#endif
#if defined(GL_MAX_COLOR_ATTACHMENTS)
defconsti(env, "GL-MAX-COLOR-ATTACHMENTS", (GLenum) GL_MAX_COLOR_ATTACHMENTS, "GL_MAX_COLOR_ATTACHMENTS");
#endif
#if defined(GL_MAX_COLOR_ATTACHMENTS_EXT)
defconsti(env, "GL-MAX-COLOR-ATTACHMENTS-EXT", (GLenum) GL_MAX_COLOR_ATTACHMENTS_EXT, "GL_MAX_COLOR_ATTACHMENTS_EXT");
#endif
#if defined(GL_MAX_COLOR_ATTACHMENTS_NV)
defconsti(env, "GL-MAX-COLOR-ATTACHMENTS-NV", (GLenum) GL_MAX_COLOR_ATTACHMENTS_NV, "GL_MAX_COLOR_ATTACHMENTS_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT0)
defconsti(env, "GL-COLOR-ATTACHMENT0", (GLenum) GL_COLOR_ATTACHMENT0, "GL_COLOR_ATTACHMENT0");
#endif
#if defined(GL_COLOR_ATTACHMENT0_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT0-EXT", (GLenum) GL_COLOR_ATTACHMENT0_EXT, "GL_COLOR_ATTACHMENT0_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT0_NV)
defconsti(env, "GL-COLOR-ATTACHMENT0-NV", (GLenum) GL_COLOR_ATTACHMENT0_NV, "GL_COLOR_ATTACHMENT0_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT0_OES)
defconsti(env, "GL-COLOR-ATTACHMENT0-OES", (GLenum) GL_COLOR_ATTACHMENT0_OES, "GL_COLOR_ATTACHMENT0_OES");
#endif
#if defined(GL_COLOR_ATTACHMENT1)
defconsti(env, "GL-COLOR-ATTACHMENT1", (GLenum) GL_COLOR_ATTACHMENT1, "GL_COLOR_ATTACHMENT1");
#endif
#if defined(GL_COLOR_ATTACHMENT1_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT1-EXT", (GLenum) GL_COLOR_ATTACHMENT1_EXT, "GL_COLOR_ATTACHMENT1_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT1_NV)
defconsti(env, "GL-COLOR-ATTACHMENT1-NV", (GLenum) GL_COLOR_ATTACHMENT1_NV, "GL_COLOR_ATTACHMENT1_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT2)
defconsti(env, "GL-COLOR-ATTACHMENT2", (GLenum) GL_COLOR_ATTACHMENT2, "GL_COLOR_ATTACHMENT2");
#endif
#if defined(GL_COLOR_ATTACHMENT2_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT2-EXT", (GLenum) GL_COLOR_ATTACHMENT2_EXT, "GL_COLOR_ATTACHMENT2_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT2_NV)
defconsti(env, "GL-COLOR-ATTACHMENT2-NV", (GLenum) GL_COLOR_ATTACHMENT2_NV, "GL_COLOR_ATTACHMENT2_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT3)
defconsti(env, "GL-COLOR-ATTACHMENT3", (GLenum) GL_COLOR_ATTACHMENT3, "GL_COLOR_ATTACHMENT3");
#endif
#if defined(GL_COLOR_ATTACHMENT3_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT3-EXT", (GLenum) GL_COLOR_ATTACHMENT3_EXT, "GL_COLOR_ATTACHMENT3_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT3_NV)
defconsti(env, "GL-COLOR-ATTACHMENT3-NV", (GLenum) GL_COLOR_ATTACHMENT3_NV, "GL_COLOR_ATTACHMENT3_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT4)
defconsti(env, "GL-COLOR-ATTACHMENT4", (GLenum) GL_COLOR_ATTACHMENT4, "GL_COLOR_ATTACHMENT4");
#endif
#if defined(GL_COLOR_ATTACHMENT4_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT4-EXT", (GLenum) GL_COLOR_ATTACHMENT4_EXT, "GL_COLOR_ATTACHMENT4_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT4_NV)
defconsti(env, "GL-COLOR-ATTACHMENT4-NV", (GLenum) GL_COLOR_ATTACHMENT4_NV, "GL_COLOR_ATTACHMENT4_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT5)
defconsti(env, "GL-COLOR-ATTACHMENT5", (GLenum) GL_COLOR_ATTACHMENT5, "GL_COLOR_ATTACHMENT5");
#endif
#if defined(GL_COLOR_ATTACHMENT5_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT5-EXT", (GLenum) GL_COLOR_ATTACHMENT5_EXT, "GL_COLOR_ATTACHMENT5_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT5_NV)
defconsti(env, "GL-COLOR-ATTACHMENT5-NV", (GLenum) GL_COLOR_ATTACHMENT5_NV, "GL_COLOR_ATTACHMENT5_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT6)
defconsti(env, "GL-COLOR-ATTACHMENT6", (GLenum) GL_COLOR_ATTACHMENT6, "GL_COLOR_ATTACHMENT6");
#endif
#if defined(GL_COLOR_ATTACHMENT6_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT6-EXT", (GLenum) GL_COLOR_ATTACHMENT6_EXT, "GL_COLOR_ATTACHMENT6_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT6_NV)
defconsti(env, "GL-COLOR-ATTACHMENT6-NV", (GLenum) GL_COLOR_ATTACHMENT6_NV, "GL_COLOR_ATTACHMENT6_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT7)
defconsti(env, "GL-COLOR-ATTACHMENT7", (GLenum) GL_COLOR_ATTACHMENT7, "GL_COLOR_ATTACHMENT7");
#endif
#if defined(GL_COLOR_ATTACHMENT7_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT7-EXT", (GLenum) GL_COLOR_ATTACHMENT7_EXT, "GL_COLOR_ATTACHMENT7_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT7_NV)
defconsti(env, "GL-COLOR-ATTACHMENT7-NV", (GLenum) GL_COLOR_ATTACHMENT7_NV, "GL_COLOR_ATTACHMENT7_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT8)
defconsti(env, "GL-COLOR-ATTACHMENT8", (GLenum) GL_COLOR_ATTACHMENT8, "GL_COLOR_ATTACHMENT8");
#endif
#if defined(GL_COLOR_ATTACHMENT8_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT8-EXT", (GLenum) GL_COLOR_ATTACHMENT8_EXT, "GL_COLOR_ATTACHMENT8_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT8_NV)
defconsti(env, "GL-COLOR-ATTACHMENT8-NV", (GLenum) GL_COLOR_ATTACHMENT8_NV, "GL_COLOR_ATTACHMENT8_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT9)
defconsti(env, "GL-COLOR-ATTACHMENT9", (GLenum) GL_COLOR_ATTACHMENT9, "GL_COLOR_ATTACHMENT9");
#endif
#if defined(GL_COLOR_ATTACHMENT9_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT9-EXT", (GLenum) GL_COLOR_ATTACHMENT9_EXT, "GL_COLOR_ATTACHMENT9_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT9_NV)
defconsti(env, "GL-COLOR-ATTACHMENT9-NV", (GLenum) GL_COLOR_ATTACHMENT9_NV, "GL_COLOR_ATTACHMENT9_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT10)
defconsti(env, "GL-COLOR-ATTACHMENT10", (GLenum) GL_COLOR_ATTACHMENT10, "GL_COLOR_ATTACHMENT10");
#endif
#if defined(GL_COLOR_ATTACHMENT10_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT10-EXT", (GLenum) GL_COLOR_ATTACHMENT10_EXT, "GL_COLOR_ATTACHMENT10_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT10_NV)
defconsti(env, "GL-COLOR-ATTACHMENT10-NV", (GLenum) GL_COLOR_ATTACHMENT10_NV, "GL_COLOR_ATTACHMENT10_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT11)
defconsti(env, "GL-COLOR-ATTACHMENT11", (GLenum) GL_COLOR_ATTACHMENT11, "GL_COLOR_ATTACHMENT11");
#endif
#if defined(GL_COLOR_ATTACHMENT11_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT11-EXT", (GLenum) GL_COLOR_ATTACHMENT11_EXT, "GL_COLOR_ATTACHMENT11_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT11_NV)
defconsti(env, "GL-COLOR-ATTACHMENT11-NV", (GLenum) GL_COLOR_ATTACHMENT11_NV, "GL_COLOR_ATTACHMENT11_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT12)
defconsti(env, "GL-COLOR-ATTACHMENT12", (GLenum) GL_COLOR_ATTACHMENT12, "GL_COLOR_ATTACHMENT12");
#endif
#if defined(GL_COLOR_ATTACHMENT12_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT12-EXT", (GLenum) GL_COLOR_ATTACHMENT12_EXT, "GL_COLOR_ATTACHMENT12_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT12_NV)
defconsti(env, "GL-COLOR-ATTACHMENT12-NV", (GLenum) GL_COLOR_ATTACHMENT12_NV, "GL_COLOR_ATTACHMENT12_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT13)
defconsti(env, "GL-COLOR-ATTACHMENT13", (GLenum) GL_COLOR_ATTACHMENT13, "GL_COLOR_ATTACHMENT13");
#endif
#if defined(GL_COLOR_ATTACHMENT13_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT13-EXT", (GLenum) GL_COLOR_ATTACHMENT13_EXT, "GL_COLOR_ATTACHMENT13_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT13_NV)
defconsti(env, "GL-COLOR-ATTACHMENT13-NV", (GLenum) GL_COLOR_ATTACHMENT13_NV, "GL_COLOR_ATTACHMENT13_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT14)
defconsti(env, "GL-COLOR-ATTACHMENT14", (GLenum) GL_COLOR_ATTACHMENT14, "GL_COLOR_ATTACHMENT14");
#endif
#if defined(GL_COLOR_ATTACHMENT14_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT14-EXT", (GLenum) GL_COLOR_ATTACHMENT14_EXT, "GL_COLOR_ATTACHMENT14_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT14_NV)
defconsti(env, "GL-COLOR-ATTACHMENT14-NV", (GLenum) GL_COLOR_ATTACHMENT14_NV, "GL_COLOR_ATTACHMENT14_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT15)
defconsti(env, "GL-COLOR-ATTACHMENT15", (GLenum) GL_COLOR_ATTACHMENT15, "GL_COLOR_ATTACHMENT15");
#endif
#if defined(GL_COLOR_ATTACHMENT15_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT15-EXT", (GLenum) GL_COLOR_ATTACHMENT15_EXT, "GL_COLOR_ATTACHMENT15_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT15_NV)
defconsti(env, "GL-COLOR-ATTACHMENT15-NV", (GLenum) GL_COLOR_ATTACHMENT15_NV, "GL_COLOR_ATTACHMENT15_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT16)
defconsti(env, "GL-COLOR-ATTACHMENT16", (GLenum) GL_COLOR_ATTACHMENT16, "GL_COLOR_ATTACHMENT16");
#endif
#if defined(GL_COLOR_ATTACHMENT17)
defconsti(env, "GL-COLOR-ATTACHMENT17", (GLenum) GL_COLOR_ATTACHMENT17, "GL_COLOR_ATTACHMENT17");
#endif
#if defined(GL_COLOR_ATTACHMENT18)
defconsti(env, "GL-COLOR-ATTACHMENT18", (GLenum) GL_COLOR_ATTACHMENT18, "GL_COLOR_ATTACHMENT18");
#endif
#if defined(GL_COLOR_ATTACHMENT19)
defconsti(env, "GL-COLOR-ATTACHMENT19", (GLenum) GL_COLOR_ATTACHMENT19, "GL_COLOR_ATTACHMENT19");
#endif
#if defined(GL_COLOR_ATTACHMENT20)
defconsti(env, "GL-COLOR-ATTACHMENT20", (GLenum) GL_COLOR_ATTACHMENT20, "GL_COLOR_ATTACHMENT20");
#endif
#if defined(GL_COLOR_ATTACHMENT21)
defconsti(env, "GL-COLOR-ATTACHMENT21", (GLenum) GL_COLOR_ATTACHMENT21, "GL_COLOR_ATTACHMENT21");
#endif
#if defined(GL_COLOR_ATTACHMENT22)
defconsti(env, "GL-COLOR-ATTACHMENT22", (GLenum) GL_COLOR_ATTACHMENT22, "GL_COLOR_ATTACHMENT22");
#endif
#if defined(GL_COLOR_ATTACHMENT23)
defconsti(env, "GL-COLOR-ATTACHMENT23", (GLenum) GL_COLOR_ATTACHMENT23, "GL_COLOR_ATTACHMENT23");
#endif
#if defined(GL_COLOR_ATTACHMENT24)
defconsti(env, "GL-COLOR-ATTACHMENT24", (GLenum) GL_COLOR_ATTACHMENT24, "GL_COLOR_ATTACHMENT24");
#endif
#if defined(GL_COLOR_ATTACHMENT25)
defconsti(env, "GL-COLOR-ATTACHMENT25", (GLenum) GL_COLOR_ATTACHMENT25, "GL_COLOR_ATTACHMENT25");
#endif
#if defined(GL_COLOR_ATTACHMENT26)
defconsti(env, "GL-COLOR-ATTACHMENT26", (GLenum) GL_COLOR_ATTACHMENT26, "GL_COLOR_ATTACHMENT26");
#endif
#if defined(GL_COLOR_ATTACHMENT27)
defconsti(env, "GL-COLOR-ATTACHMENT27", (GLenum) GL_COLOR_ATTACHMENT27, "GL_COLOR_ATTACHMENT27");
#endif
#if defined(GL_COLOR_ATTACHMENT28)
defconsti(env, "GL-COLOR-ATTACHMENT28", (GLenum) GL_COLOR_ATTACHMENT28, "GL_COLOR_ATTACHMENT28");
#endif
#if defined(GL_COLOR_ATTACHMENT29)
defconsti(env, "GL-COLOR-ATTACHMENT29", (GLenum) GL_COLOR_ATTACHMENT29, "GL_COLOR_ATTACHMENT29");
#endif
#if defined(GL_COLOR_ATTACHMENT30)
defconsti(env, "GL-COLOR-ATTACHMENT30", (GLenum) GL_COLOR_ATTACHMENT30, "GL_COLOR_ATTACHMENT30");
#endif
#if defined(GL_COLOR_ATTACHMENT31)
defconsti(env, "GL-COLOR-ATTACHMENT31", (GLenum) GL_COLOR_ATTACHMENT31, "GL_COLOR_ATTACHMENT31");
#endif
#if defined(GL_DEPTH_ATTACHMENT)
defconsti(env, "GL-DEPTH-ATTACHMENT", (GLenum) GL_DEPTH_ATTACHMENT, "GL_DEPTH_ATTACHMENT");
#endif
#if defined(GL_DEPTH_ATTACHMENT_EXT)
defconsti(env, "GL-DEPTH-ATTACHMENT-EXT", (GLenum) GL_DEPTH_ATTACHMENT_EXT, "GL_DEPTH_ATTACHMENT_EXT");
#endif
#if defined(GL_DEPTH_ATTACHMENT_OES)
defconsti(env, "GL-DEPTH-ATTACHMENT-OES", (GLenum) GL_DEPTH_ATTACHMENT_OES, "GL_DEPTH_ATTACHMENT_OES");
#endif
#if defined(GL_STENCIL_ATTACHMENT)
defconsti(env, "GL-STENCIL-ATTACHMENT", (GLenum) GL_STENCIL_ATTACHMENT, "GL_STENCIL_ATTACHMENT");
#endif
#if defined(GL_STENCIL_ATTACHMENT_EXT)
defconsti(env, "GL-STENCIL-ATTACHMENT-EXT", (GLenum) GL_STENCIL_ATTACHMENT_EXT, "GL_STENCIL_ATTACHMENT_EXT");
#endif
#if defined(GL_STENCIL_ATTACHMENT_OES)
defconsti(env, "GL-STENCIL-ATTACHMENT-OES", (GLenum) GL_STENCIL_ATTACHMENT_OES, "GL_STENCIL_ATTACHMENT_OES");
#endif
#if defined(GL_FRAMEBUFFER)
defconsti(env, "GL-FRAMEBUFFER", (GLenum) GL_FRAMEBUFFER, "GL_FRAMEBUFFER");
#endif
#if defined(GL_FRAMEBUFFER_EXT)
defconsti(env, "GL-FRAMEBUFFER-EXT", (GLenum) GL_FRAMEBUFFER_EXT, "GL_FRAMEBUFFER_EXT");
#endif
#if defined(GL_FRAMEBUFFER_OES)
defconsti(env, "GL-FRAMEBUFFER-OES", (GLenum) GL_FRAMEBUFFER_OES, "GL_FRAMEBUFFER_OES");
#endif
#if defined(GL_RENDERBUFFER)
defconsti(env, "GL-RENDERBUFFER", (GLenum) GL_RENDERBUFFER, "GL_RENDERBUFFER");
#endif
#if defined(GL_RENDERBUFFER_EXT)
defconsti(env, "GL-RENDERBUFFER-EXT", (GLenum) GL_RENDERBUFFER_EXT, "GL_RENDERBUFFER_EXT");
#endif
#if defined(GL_RENDERBUFFER_OES)
defconsti(env, "GL-RENDERBUFFER-OES", (GLenum) GL_RENDERBUFFER_OES, "GL_RENDERBUFFER_OES");
#endif
#if defined(GL_RENDERBUFFER_WIDTH)
defconsti(env, "GL-RENDERBUFFER-WIDTH", (GLenum) GL_RENDERBUFFER_WIDTH, "GL_RENDERBUFFER_WIDTH");
#endif
#if defined(GL_RENDERBUFFER_WIDTH_EXT)
defconsti(env, "GL-RENDERBUFFER-WIDTH-EXT", (GLenum) GL_RENDERBUFFER_WIDTH_EXT, "GL_RENDERBUFFER_WIDTH_EXT");
#endif
#if defined(GL_RENDERBUFFER_WIDTH_OES)
defconsti(env, "GL-RENDERBUFFER-WIDTH-OES", (GLenum) GL_RENDERBUFFER_WIDTH_OES, "GL_RENDERBUFFER_WIDTH_OES");
#endif
#if defined(GL_RENDERBUFFER_HEIGHT)
defconsti(env, "GL-RENDERBUFFER-HEIGHT", (GLenum) GL_RENDERBUFFER_HEIGHT, "GL_RENDERBUFFER_HEIGHT");
#endif
#if defined(GL_RENDERBUFFER_HEIGHT_EXT)
defconsti(env, "GL-RENDERBUFFER-HEIGHT-EXT", (GLenum) GL_RENDERBUFFER_HEIGHT_EXT, "GL_RENDERBUFFER_HEIGHT_EXT");
#endif
#if defined(GL_RENDERBUFFER_HEIGHT_OES)
defconsti(env, "GL-RENDERBUFFER-HEIGHT-OES", (GLenum) GL_RENDERBUFFER_HEIGHT_OES, "GL_RENDERBUFFER_HEIGHT_OES");
#endif
#if defined(GL_RENDERBUFFER_INTERNAL_FORMAT)
defconsti(env, "GL-RENDERBUFFER-INTERNAL-FORMAT", (GLenum) GL_RENDERBUFFER_INTERNAL_FORMAT, "GL_RENDERBUFFER_INTERNAL_FORMAT");
#endif
#if defined(GL_RENDERBUFFER_INTERNAL_FORMAT_EXT)
defconsti(env, "GL-RENDERBUFFER-INTERNAL-FORMAT-EXT", (GLenum) GL_RENDERBUFFER_INTERNAL_FORMAT_EXT, "GL_RENDERBUFFER_INTERNAL_FORMAT_EXT");
#endif
#if defined(GL_RENDERBUFFER_INTERNAL_FORMAT_OES)
defconsti(env, "GL-RENDERBUFFER-INTERNAL-FORMAT-OES", (GLenum) GL_RENDERBUFFER_INTERNAL_FORMAT_OES, "GL_RENDERBUFFER_INTERNAL_FORMAT_OES");
#endif
#if defined(GL_STENCIL_INDEX1)
defconsti(env, "GL-STENCIL-INDEX1", (GLenum) GL_STENCIL_INDEX1, "GL_STENCIL_INDEX1");
#endif
#if defined(GL_STENCIL_INDEX1_EXT)
defconsti(env, "GL-STENCIL-INDEX1-EXT", (GLenum) GL_STENCIL_INDEX1_EXT, "GL_STENCIL_INDEX1_EXT");
#endif
#if defined(GL_STENCIL_INDEX1_OES)
defconsti(env, "GL-STENCIL-INDEX1-OES", (GLenum) GL_STENCIL_INDEX1_OES, "GL_STENCIL_INDEX1_OES");
#endif
#if defined(GL_STENCIL_INDEX4)
defconsti(env, "GL-STENCIL-INDEX4", (GLenum) GL_STENCIL_INDEX4, "GL_STENCIL_INDEX4");
#endif
#if defined(GL_STENCIL_INDEX4_EXT)
defconsti(env, "GL-STENCIL-INDEX4-EXT", (GLenum) GL_STENCIL_INDEX4_EXT, "GL_STENCIL_INDEX4_EXT");
#endif
#if defined(GL_STENCIL_INDEX4_OES)
defconsti(env, "GL-STENCIL-INDEX4-OES", (GLenum) GL_STENCIL_INDEX4_OES, "GL_STENCIL_INDEX4_OES");
#endif
#if defined(GL_STENCIL_INDEX8)
defconsti(env, "GL-STENCIL-INDEX8", (GLenum) GL_STENCIL_INDEX8, "GL_STENCIL_INDEX8");
#endif
#if defined(GL_STENCIL_INDEX8_EXT)
defconsti(env, "GL-STENCIL-INDEX8-EXT", (GLenum) GL_STENCIL_INDEX8_EXT, "GL_STENCIL_INDEX8_EXT");
#endif
#if defined(GL_STENCIL_INDEX8_OES)
defconsti(env, "GL-STENCIL-INDEX8-OES", (GLenum) GL_STENCIL_INDEX8_OES, "GL_STENCIL_INDEX8_OES");
#endif
#if defined(GL_STENCIL_INDEX16)
defconsti(env, "GL-STENCIL-INDEX16", (GLenum) GL_STENCIL_INDEX16, "GL_STENCIL_INDEX16");
#endif
#if defined(GL_STENCIL_INDEX16_EXT)
defconsti(env, "GL-STENCIL-INDEX16-EXT", (GLenum) GL_STENCIL_INDEX16_EXT, "GL_STENCIL_INDEX16_EXT");
#endif
#if defined(GL_RENDERBUFFER_RED_SIZE)
defconsti(env, "GL-RENDERBUFFER-RED-SIZE", (GLenum) GL_RENDERBUFFER_RED_SIZE, "GL_RENDERBUFFER_RED_SIZE");
#endif
#if defined(GL_RENDERBUFFER_RED_SIZE_EXT)
defconsti(env, "GL-RENDERBUFFER-RED-SIZE-EXT", (GLenum) GL_RENDERBUFFER_RED_SIZE_EXT, "GL_RENDERBUFFER_RED_SIZE_EXT");
#endif
#if defined(GL_RENDERBUFFER_RED_SIZE_OES)
defconsti(env, "GL-RENDERBUFFER-RED-SIZE-OES", (GLenum) GL_RENDERBUFFER_RED_SIZE_OES, "GL_RENDERBUFFER_RED_SIZE_OES");
#endif
#if defined(GL_RENDERBUFFER_GREEN_SIZE)
defconsti(env, "GL-RENDERBUFFER-GREEN-SIZE", (GLenum) GL_RENDERBUFFER_GREEN_SIZE, "GL_RENDERBUFFER_GREEN_SIZE");
#endif
#if defined(GL_RENDERBUFFER_GREEN_SIZE_EXT)
defconsti(env, "GL-RENDERBUFFER-GREEN-SIZE-EXT", (GLenum) GL_RENDERBUFFER_GREEN_SIZE_EXT, "GL_RENDERBUFFER_GREEN_SIZE_EXT");
#endif
#if defined(GL_RENDERBUFFER_GREEN_SIZE_OES)
defconsti(env, "GL-RENDERBUFFER-GREEN-SIZE-OES", (GLenum) GL_RENDERBUFFER_GREEN_SIZE_OES, "GL_RENDERBUFFER_GREEN_SIZE_OES");
#endif
#if defined(GL_RENDERBUFFER_BLUE_SIZE)
defconsti(env, "GL-RENDERBUFFER-BLUE-SIZE", (GLenum) GL_RENDERBUFFER_BLUE_SIZE, "GL_RENDERBUFFER_BLUE_SIZE");
#endif
#if defined(GL_RENDERBUFFER_BLUE_SIZE_EXT)
defconsti(env, "GL-RENDERBUFFER-BLUE-SIZE-EXT", (GLenum) GL_RENDERBUFFER_BLUE_SIZE_EXT, "GL_RENDERBUFFER_BLUE_SIZE_EXT");
#endif
#if defined(GL_RENDERBUFFER_BLUE_SIZE_OES)
defconsti(env, "GL-RENDERBUFFER-BLUE-SIZE-OES", (GLenum) GL_RENDERBUFFER_BLUE_SIZE_OES, "GL_RENDERBUFFER_BLUE_SIZE_OES");
#endif
#if defined(GL_RENDERBUFFER_ALPHA_SIZE)
defconsti(env, "GL-RENDERBUFFER-ALPHA-SIZE", (GLenum) GL_RENDERBUFFER_ALPHA_SIZE, "GL_RENDERBUFFER_ALPHA_SIZE");
#endif
#if defined(GL_RENDERBUFFER_ALPHA_SIZE_EXT)
defconsti(env, "GL-RENDERBUFFER-ALPHA-SIZE-EXT", (GLenum) GL_RENDERBUFFER_ALPHA_SIZE_EXT, "GL_RENDERBUFFER_ALPHA_SIZE_EXT");
#endif
#if defined(GL_RENDERBUFFER_ALPHA_SIZE_OES)
defconsti(env, "GL-RENDERBUFFER-ALPHA-SIZE-OES", (GLenum) GL_RENDERBUFFER_ALPHA_SIZE_OES, "GL_RENDERBUFFER_ALPHA_SIZE_OES");
#endif
#if defined(GL_RENDERBUFFER_DEPTH_SIZE)
defconsti(env, "GL-RENDERBUFFER-DEPTH-SIZE", (GLenum) GL_RENDERBUFFER_DEPTH_SIZE, "GL_RENDERBUFFER_DEPTH_SIZE");
#endif
#if defined(GL_RENDERBUFFER_DEPTH_SIZE_EXT)
defconsti(env, "GL-RENDERBUFFER-DEPTH-SIZE-EXT", (GLenum) GL_RENDERBUFFER_DEPTH_SIZE_EXT, "GL_RENDERBUFFER_DEPTH_SIZE_EXT");
#endif
#if defined(GL_RENDERBUFFER_DEPTH_SIZE_OES)
defconsti(env, "GL-RENDERBUFFER-DEPTH-SIZE-OES", (GLenum) GL_RENDERBUFFER_DEPTH_SIZE_OES, "GL_RENDERBUFFER_DEPTH_SIZE_OES");
#endif
#if defined(GL_RENDERBUFFER_STENCIL_SIZE)
defconsti(env, "GL-RENDERBUFFER-STENCIL-SIZE", (GLenum) GL_RENDERBUFFER_STENCIL_SIZE, "GL_RENDERBUFFER_STENCIL_SIZE");
#endif
#if defined(GL_RENDERBUFFER_STENCIL_SIZE_EXT)
defconsti(env, "GL-RENDERBUFFER-STENCIL-SIZE-EXT", (GLenum) GL_RENDERBUFFER_STENCIL_SIZE_EXT, "GL_RENDERBUFFER_STENCIL_SIZE_EXT");
#endif
#if defined(GL_RENDERBUFFER_STENCIL_SIZE_OES)
defconsti(env, "GL-RENDERBUFFER-STENCIL-SIZE-OES", (GLenum) GL_RENDERBUFFER_STENCIL_SIZE_OES, "GL_RENDERBUFFER_STENCIL_SIZE_OES");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MULTISAMPLE", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE, "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MULTISAMPLE-ANGLE", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE, "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MULTISAMPLE-APPLE", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE, "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MULTISAMPLE-EXT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT, "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MULTISAMPLE-NV", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV, "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV");
#endif
#if defined(GL_MAX_SAMPLES)
defconsti(env, "GL-MAX-SAMPLES", (GLenum) GL_MAX_SAMPLES, "GL_MAX_SAMPLES");
#endif
#if defined(GL_MAX_SAMPLES_ANGLE)
defconsti(env, "GL-MAX-SAMPLES-ANGLE", (GLenum) GL_MAX_SAMPLES_ANGLE, "GL_MAX_SAMPLES_ANGLE");
#endif
#if defined(GL_MAX_SAMPLES_APPLE)
defconsti(env, "GL-MAX-SAMPLES-APPLE", (GLenum) GL_MAX_SAMPLES_APPLE, "GL_MAX_SAMPLES_APPLE");
#endif
#if defined(GL_MAX_SAMPLES_EXT)
defconsti(env, "GL-MAX-SAMPLES-EXT", (GLenum) GL_MAX_SAMPLES_EXT, "GL_MAX_SAMPLES_EXT");
#endif
#if defined(GL_MAX_SAMPLES_NV)
defconsti(env, "GL-MAX-SAMPLES-NV", (GLenum) GL_MAX_SAMPLES_NV, "GL_MAX_SAMPLES_NV");
#endif
#if defined(GL_TEXTURE_GEN_STR_OES)
defconsti(env, "GL-TEXTURE-GEN-STR-OES", (GLenum) GL_TEXTURE_GEN_STR_OES, "GL_TEXTURE_GEN_STR_OES");
#endif
#if defined(GL_HALF_FLOAT_OES)
defconsti(env, "GL-HALF-FLOAT-OES", (GLenum) GL_HALF_FLOAT_OES, "GL_HALF_FLOAT_OES");
#endif
#if defined(GL_RGB565_OES)
defconsti(env, "GL-RGB565-OES", (GLenum) GL_RGB565_OES, "GL_RGB565_OES");
#endif
#if defined(GL_RGB565)
defconsti(env, "GL-RGB565", (GLenum) GL_RGB565, "GL_RGB565");
#endif
#if defined(GL_ETC1_RGB8_OES)
defconsti(env, "GL-ETC1-RGB8-OES", (GLenum) GL_ETC1_RGB8_OES, "GL_ETC1_RGB8_OES");
#endif
#if defined(GL_TEXTURE_EXTERNAL_OES)
defconsti(env, "GL-TEXTURE-EXTERNAL-OES", (GLenum) GL_TEXTURE_EXTERNAL_OES, "GL_TEXTURE_EXTERNAL_OES");
#endif
#if defined(GL_SAMPLER_EXTERNAL_OES)
defconsti(env, "GL-SAMPLER-EXTERNAL-OES", (GLenum) GL_SAMPLER_EXTERNAL_OES, "GL_SAMPLER_EXTERNAL_OES");
#endif
#if defined(GL_TEXTURE_BINDING_EXTERNAL_OES)
defconsti(env, "GL-TEXTURE-BINDING-EXTERNAL-OES", (GLenum) GL_TEXTURE_BINDING_EXTERNAL_OES, "GL_TEXTURE_BINDING_EXTERNAL_OES");
#endif
#if defined(GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES)
defconsti(env, "GL-REQUIRED-TEXTURE-IMAGE-UNITS-OES", (GLenum) GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES, "GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES");
#endif
#if defined(GL_PRIMITIVE_RESTART_FIXED_INDEX)
defconsti(env, "GL-PRIMITIVE-RESTART-FIXED-INDEX", (GLenum) GL_PRIMITIVE_RESTART_FIXED_INDEX, "GL_PRIMITIVE_RESTART_FIXED_INDEX");
#endif
#if defined(GL_ANY_SAMPLES_PASSED_CONSERVATIVE)
defconsti(env, "GL-ANY-SAMPLES-PASSED-CONSERVATIVE", (GLenum) GL_ANY_SAMPLES_PASSED_CONSERVATIVE, "GL_ANY_SAMPLES_PASSED_CONSERVATIVE");
#endif
#if defined(GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT)
defconsti(env, "GL-ANY-SAMPLES-PASSED-CONSERVATIVE-EXT", (GLenum) GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT, "GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT");
#endif
#if defined(GL_MAX_ELEMENT_INDEX)
defconsti(env, "GL-MAX-ELEMENT-INDEX", (GLenum) GL_MAX_ELEMENT_INDEX, "GL_MAX_ELEMENT_INDEX");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-SAMPLES-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT");
#endif
#if defined(GL_RGBA32UI)
defconsti(env, "GL-RGBA32UI", (GLenum) GL_RGBA32UI, "GL_RGBA32UI");
#endif
#if defined(GL_RGBA32UI_EXT)
defconsti(env, "GL-RGBA32UI-EXT", (GLenum) GL_RGBA32UI_EXT, "GL_RGBA32UI_EXT");
#endif
#if defined(GL_RGB32UI)
defconsti(env, "GL-RGB32UI", (GLenum) GL_RGB32UI, "GL_RGB32UI");
#endif
#if defined(GL_RGB32UI_EXT)
defconsti(env, "GL-RGB32UI-EXT", (GLenum) GL_RGB32UI_EXT, "GL_RGB32UI_EXT");
#endif
#if defined(GL_ALPHA32UI_EXT)
defconsti(env, "GL-ALPHA32UI-EXT", (GLenum) GL_ALPHA32UI_EXT, "GL_ALPHA32UI_EXT");
#endif
#if defined(GL_INTENSITY32UI_EXT)
defconsti(env, "GL-INTENSITY32UI-EXT", (GLenum) GL_INTENSITY32UI_EXT, "GL_INTENSITY32UI_EXT");
#endif
#if defined(GL_LUMINANCE32UI_EXT)
defconsti(env, "GL-LUMINANCE32UI-EXT", (GLenum) GL_LUMINANCE32UI_EXT, "GL_LUMINANCE32UI_EXT");
#endif
#if defined(GL_LUMINANCE_ALPHA32UI_EXT)
defconsti(env, "GL-LUMINANCE-ALPHA32UI-EXT", (GLenum) GL_LUMINANCE_ALPHA32UI_EXT, "GL_LUMINANCE_ALPHA32UI_EXT");
#endif
#if defined(GL_RGBA16UI)
defconsti(env, "GL-RGBA16UI", (GLenum) GL_RGBA16UI, "GL_RGBA16UI");
#endif
#if defined(GL_RGBA16UI_EXT)
defconsti(env, "GL-RGBA16UI-EXT", (GLenum) GL_RGBA16UI_EXT, "GL_RGBA16UI_EXT");
#endif
#if defined(GL_RGB16UI)
defconsti(env, "GL-RGB16UI", (GLenum) GL_RGB16UI, "GL_RGB16UI");
#endif
#if defined(GL_RGB16UI_EXT)
defconsti(env, "GL-RGB16UI-EXT", (GLenum) GL_RGB16UI_EXT, "GL_RGB16UI_EXT");
#endif
#if defined(GL_ALPHA16UI_EXT)
defconsti(env, "GL-ALPHA16UI-EXT", (GLenum) GL_ALPHA16UI_EXT, "GL_ALPHA16UI_EXT");
#endif
#if defined(GL_INTENSITY16UI_EXT)
defconsti(env, "GL-INTENSITY16UI-EXT", (GLenum) GL_INTENSITY16UI_EXT, "GL_INTENSITY16UI_EXT");
#endif
#if defined(GL_LUMINANCE16UI_EXT)
defconsti(env, "GL-LUMINANCE16UI-EXT", (GLenum) GL_LUMINANCE16UI_EXT, "GL_LUMINANCE16UI_EXT");
#endif
#if defined(GL_LUMINANCE_ALPHA16UI_EXT)
defconsti(env, "GL-LUMINANCE-ALPHA16UI-EXT", (GLenum) GL_LUMINANCE_ALPHA16UI_EXT, "GL_LUMINANCE_ALPHA16UI_EXT");
#endif
#if defined(GL_RGBA8UI)
defconsti(env, "GL-RGBA8UI", (GLenum) GL_RGBA8UI, "GL_RGBA8UI");
#endif
#if defined(GL_RGBA8UI_EXT)
defconsti(env, "GL-RGBA8UI-EXT", (GLenum) GL_RGBA8UI_EXT, "GL_RGBA8UI_EXT");
#endif
#if defined(GL_RGB8UI)
defconsti(env, "GL-RGB8UI", (GLenum) GL_RGB8UI, "GL_RGB8UI");
#endif
#if defined(GL_RGB8UI_EXT)
defconsti(env, "GL-RGB8UI-EXT", (GLenum) GL_RGB8UI_EXT, "GL_RGB8UI_EXT");
#endif
#if defined(GL_ALPHA8UI_EXT)
defconsti(env, "GL-ALPHA8UI-EXT", (GLenum) GL_ALPHA8UI_EXT, "GL_ALPHA8UI_EXT");
#endif
#if defined(GL_INTENSITY8UI_EXT)
defconsti(env, "GL-INTENSITY8UI-EXT", (GLenum) GL_INTENSITY8UI_EXT, "GL_INTENSITY8UI_EXT");
#endif
#if defined(GL_LUMINANCE8UI_EXT)
defconsti(env, "GL-LUMINANCE8UI-EXT", (GLenum) GL_LUMINANCE8UI_EXT, "GL_LUMINANCE8UI_EXT");
#endif
#if defined(GL_LUMINANCE_ALPHA8UI_EXT)
defconsti(env, "GL-LUMINANCE-ALPHA8UI-EXT", (GLenum) GL_LUMINANCE_ALPHA8UI_EXT, "GL_LUMINANCE_ALPHA8UI_EXT");
#endif
#if defined(GL_RGBA32I)
defconsti(env, "GL-RGBA32I", (GLenum) GL_RGBA32I, "GL_RGBA32I");
#endif
#if defined(GL_RGBA32I_EXT)
defconsti(env, "GL-RGBA32I-EXT", (GLenum) GL_RGBA32I_EXT, "GL_RGBA32I_EXT");
#endif
#if defined(GL_RGB32I)
defconsti(env, "GL-RGB32I", (GLenum) GL_RGB32I, "GL_RGB32I");
#endif
#if defined(GL_RGB32I_EXT)
defconsti(env, "GL-RGB32I-EXT", (GLenum) GL_RGB32I_EXT, "GL_RGB32I_EXT");
#endif
#if defined(GL_ALPHA32I_EXT)
defconsti(env, "GL-ALPHA32I-EXT", (GLenum) GL_ALPHA32I_EXT, "GL_ALPHA32I_EXT");
#endif
#if defined(GL_INTENSITY32I_EXT)
defconsti(env, "GL-INTENSITY32I-EXT", (GLenum) GL_INTENSITY32I_EXT, "GL_INTENSITY32I_EXT");
#endif
#if defined(GL_LUMINANCE32I_EXT)
defconsti(env, "GL-LUMINANCE32I-EXT", (GLenum) GL_LUMINANCE32I_EXT, "GL_LUMINANCE32I_EXT");
#endif
#if defined(GL_LUMINANCE_ALPHA32I_EXT)
defconsti(env, "GL-LUMINANCE-ALPHA32I-EXT", (GLenum) GL_LUMINANCE_ALPHA32I_EXT, "GL_LUMINANCE_ALPHA32I_EXT");
#endif
#if defined(GL_RGBA16I)
defconsti(env, "GL-RGBA16I", (GLenum) GL_RGBA16I, "GL_RGBA16I");
#endif
#if defined(GL_RGBA16I_EXT)
defconsti(env, "GL-RGBA16I-EXT", (GLenum) GL_RGBA16I_EXT, "GL_RGBA16I_EXT");
#endif
#if defined(GL_RGB16I)
defconsti(env, "GL-RGB16I", (GLenum) GL_RGB16I, "GL_RGB16I");
#endif
#if defined(GL_RGB16I_EXT)
defconsti(env, "GL-RGB16I-EXT", (GLenum) GL_RGB16I_EXT, "GL_RGB16I_EXT");
#endif
#if defined(GL_ALPHA16I_EXT)
defconsti(env, "GL-ALPHA16I-EXT", (GLenum) GL_ALPHA16I_EXT, "GL_ALPHA16I_EXT");
#endif
#if defined(GL_INTENSITY16I_EXT)
defconsti(env, "GL-INTENSITY16I-EXT", (GLenum) GL_INTENSITY16I_EXT, "GL_INTENSITY16I_EXT");
#endif
#if defined(GL_LUMINANCE16I_EXT)
defconsti(env, "GL-LUMINANCE16I-EXT", (GLenum) GL_LUMINANCE16I_EXT, "GL_LUMINANCE16I_EXT");
#endif
#if defined(GL_LUMINANCE_ALPHA16I_EXT)
defconsti(env, "GL-LUMINANCE-ALPHA16I-EXT", (GLenum) GL_LUMINANCE_ALPHA16I_EXT, "GL_LUMINANCE_ALPHA16I_EXT");
#endif
#if defined(GL_RGBA8I)
defconsti(env, "GL-RGBA8I", (GLenum) GL_RGBA8I, "GL_RGBA8I");
#endif
#if defined(GL_RGBA8I_EXT)
defconsti(env, "GL-RGBA8I-EXT", (GLenum) GL_RGBA8I_EXT, "GL_RGBA8I_EXT");
#endif
#if defined(GL_RGB8I)
defconsti(env, "GL-RGB8I", (GLenum) GL_RGB8I, "GL_RGB8I");
#endif
#if defined(GL_RGB8I_EXT)
defconsti(env, "GL-RGB8I-EXT", (GLenum) GL_RGB8I_EXT, "GL_RGB8I_EXT");
#endif
#if defined(GL_ALPHA8I_EXT)
defconsti(env, "GL-ALPHA8I-EXT", (GLenum) GL_ALPHA8I_EXT, "GL_ALPHA8I_EXT");
#endif
#if defined(GL_INTENSITY8I_EXT)
defconsti(env, "GL-INTENSITY8I-EXT", (GLenum) GL_INTENSITY8I_EXT, "GL_INTENSITY8I_EXT");
#endif
#if defined(GL_LUMINANCE8I_EXT)
defconsti(env, "GL-LUMINANCE8I-EXT", (GLenum) GL_LUMINANCE8I_EXT, "GL_LUMINANCE8I_EXT");
#endif
#if defined(GL_LUMINANCE_ALPHA8I_EXT)
defconsti(env, "GL-LUMINANCE-ALPHA8I-EXT", (GLenum) GL_LUMINANCE_ALPHA8I_EXT, "GL_LUMINANCE_ALPHA8I_EXT");
#endif
#if defined(GL_RED_INTEGER)
defconsti(env, "GL-RED-INTEGER", (GLenum) GL_RED_INTEGER, "GL_RED_INTEGER");
#endif
#if defined(GL_RED_INTEGER_EXT)
defconsti(env, "GL-RED-INTEGER-EXT", (GLenum) GL_RED_INTEGER_EXT, "GL_RED_INTEGER_EXT");
#endif
#if defined(GL_GREEN_INTEGER)
defconsti(env, "GL-GREEN-INTEGER", (GLenum) GL_GREEN_INTEGER, "GL_GREEN_INTEGER");
#endif
#if defined(GL_GREEN_INTEGER_EXT)
defconsti(env, "GL-GREEN-INTEGER-EXT", (GLenum) GL_GREEN_INTEGER_EXT, "GL_GREEN_INTEGER_EXT");
#endif
#if defined(GL_BLUE_INTEGER)
defconsti(env, "GL-BLUE-INTEGER", (GLenum) GL_BLUE_INTEGER, "GL_BLUE_INTEGER");
#endif
#if defined(GL_BLUE_INTEGER_EXT)
defconsti(env, "GL-BLUE-INTEGER-EXT", (GLenum) GL_BLUE_INTEGER_EXT, "GL_BLUE_INTEGER_EXT");
#endif
#if defined(GL_ALPHA_INTEGER)
defconsti(env, "GL-ALPHA-INTEGER", (GLenum) GL_ALPHA_INTEGER, "GL_ALPHA_INTEGER");
#endif
#if defined(GL_ALPHA_INTEGER_EXT)
defconsti(env, "GL-ALPHA-INTEGER-EXT", (GLenum) GL_ALPHA_INTEGER_EXT, "GL_ALPHA_INTEGER_EXT");
#endif
#if defined(GL_RGB_INTEGER)
defconsti(env, "GL-RGB-INTEGER", (GLenum) GL_RGB_INTEGER, "GL_RGB_INTEGER");
#endif
#if defined(GL_RGB_INTEGER_EXT)
defconsti(env, "GL-RGB-INTEGER-EXT", (GLenum) GL_RGB_INTEGER_EXT, "GL_RGB_INTEGER_EXT");
#endif
#if defined(GL_RGBA_INTEGER)
defconsti(env, "GL-RGBA-INTEGER", (GLenum) GL_RGBA_INTEGER, "GL_RGBA_INTEGER");
#endif
#if defined(GL_RGBA_INTEGER_EXT)
defconsti(env, "GL-RGBA-INTEGER-EXT", (GLenum) GL_RGBA_INTEGER_EXT, "GL_RGBA_INTEGER_EXT");
#endif
#if defined(GL_BGR_INTEGER)
defconsti(env, "GL-BGR-INTEGER", (GLenum) GL_BGR_INTEGER, "GL_BGR_INTEGER");
#endif
#if defined(GL_BGR_INTEGER_EXT)
defconsti(env, "GL-BGR-INTEGER-EXT", (GLenum) GL_BGR_INTEGER_EXT, "GL_BGR_INTEGER_EXT");
#endif
#if defined(GL_BGRA_INTEGER)
defconsti(env, "GL-BGRA-INTEGER", (GLenum) GL_BGRA_INTEGER, "GL_BGRA_INTEGER");
#endif
#if defined(GL_BGRA_INTEGER_EXT)
defconsti(env, "GL-BGRA-INTEGER-EXT", (GLenum) GL_BGRA_INTEGER_EXT, "GL_BGRA_INTEGER_EXT");
#endif
#if defined(GL_LUMINANCE_INTEGER_EXT)
defconsti(env, "GL-LUMINANCE-INTEGER-EXT", (GLenum) GL_LUMINANCE_INTEGER_EXT, "GL_LUMINANCE_INTEGER_EXT");
#endif
#if defined(GL_LUMINANCE_ALPHA_INTEGER_EXT)
defconsti(env, "GL-LUMINANCE-ALPHA-INTEGER-EXT", (GLenum) GL_LUMINANCE_ALPHA_INTEGER_EXT, "GL_LUMINANCE_ALPHA_INTEGER_EXT");
#endif
#if defined(GL_RGBA_INTEGER_MODE_EXT)
defconsti(env, "GL-RGBA-INTEGER-MODE-EXT", (GLenum) GL_RGBA_INTEGER_MODE_EXT, "GL_RGBA_INTEGER_MODE_EXT");
#endif
#if defined(GL_INT_2_10_10_10_REV)
defconsti(env, "GL-INT-2-10-10-10-REV", (GLenum) GL_INT_2_10_10_10_REV, "GL_INT_2_10_10_10_REV");
#endif
#if defined(GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV)
defconsti(env, "GL-MAX-PROGRAM-PARAMETER-BUFFER-BINDINGS-NV", (GLenum) GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV, "GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV");
#endif
#if defined(GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV)
defconsti(env, "GL-MAX-PROGRAM-PARAMETER-BUFFER-SIZE-NV", (GLenum) GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV, "GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV");
#endif
#if defined(GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV)
defconsti(env, "GL-VERTEX-PROGRAM-PARAMETER-BUFFER-NV", (GLenum) GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV, "GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV");
#endif
#if defined(GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV)
defconsti(env, "GL-GEOMETRY-PROGRAM-PARAMETER-BUFFER-NV", (GLenum) GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV, "GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV");
#endif
#if defined(GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV)
defconsti(env, "GL-FRAGMENT-PROGRAM-PARAMETER-BUFFER-NV", (GLenum) GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV, "GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV");
#endif
#if defined(GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV)
defconsti(env, "GL-MAX-PROGRAM-GENERIC-ATTRIBS-NV", (GLenum) GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV, "GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV");
#endif
#if defined(GL_MAX_PROGRAM_GENERIC_RESULTS_NV)
defconsti(env, "GL-MAX-PROGRAM-GENERIC-RESULTS-NV", (GLenum) GL_MAX_PROGRAM_GENERIC_RESULTS_NV, "GL_MAX_PROGRAM_GENERIC_RESULTS_NV");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_LAYERED)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-LAYERED", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_LAYERED, "GL_FRAMEBUFFER_ATTACHMENT_LAYERED");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-LAYERED-ARB", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB, "GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-LAYERED-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT, "GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-LAYERED-OES", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES, "GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-LAYER-TARGETS", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS, "GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-LAYER-TARGETS-ARB", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB, "GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-LAYER-TARGETS-EXT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT, "GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-LAYER-TARGETS-OES", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES, "GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-LAYER-COUNT-ARB", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB, "GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-LAYER-COUNT-EXT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT, "GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT");
#endif
#if defined(GL_LAYER_NV)
defconsti(env, "GL-LAYER-NV", (GLenum) GL_LAYER_NV, "GL_LAYER_NV");
#endif
#if defined(GL_DEPTH_COMPONENT32F_NV)
defconsti(env, "GL-DEPTH-COMPONENT32F-NV", (GLenum) GL_DEPTH_COMPONENT32F_NV, "GL_DEPTH_COMPONENT32F_NV");
#endif
#if defined(GL_DEPTH32F_STENCIL8_NV)
defconsti(env, "GL-DEPTH32F-STENCIL8-NV", (GLenum) GL_DEPTH32F_STENCIL8_NV, "GL_DEPTH32F_STENCIL8_NV");
#endif
#if defined(GL_FLOAT_32_UNSIGNED_INT_24_8_REV)
defconsti(env, "GL-FLOAT-32-UNSIGNED-INT-24-8-REV", (GLenum) GL_FLOAT_32_UNSIGNED_INT_24_8_REV, "GL_FLOAT_32_UNSIGNED_INT_24_8_REV");
#endif
#if defined(GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV)
defconsti(env, "GL-FLOAT-32-UNSIGNED-INT-24-8-REV-NV", (GLenum) GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV, "GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV");
#endif
#if defined(GL_SHADER_INCLUDE_ARB)
defconsti(env, "GL-SHADER-INCLUDE-ARB", (GLenum) GL_SHADER_INCLUDE_ARB, "GL_SHADER_INCLUDE_ARB");
#endif
#if defined(GL_DEPTH_BUFFER_FLOAT_MODE_NV)
defconsti(env, "GL-DEPTH-BUFFER-FLOAT-MODE-NV", (GLenum) GL_DEPTH_BUFFER_FLOAT_MODE_NV, "GL_DEPTH_BUFFER_FLOAT_MODE_NV");
#endif
#if defined(GL_FRAMEBUFFER_SRGB)
defconsti(env, "GL-FRAMEBUFFER-SRGB", (GLenum) GL_FRAMEBUFFER_SRGB, "GL_FRAMEBUFFER_SRGB");
#endif
#if defined(GL_FRAMEBUFFER_SRGB_EXT)
defconsti(env, "GL-FRAMEBUFFER-SRGB-EXT", (GLenum) GL_FRAMEBUFFER_SRGB_EXT, "GL_FRAMEBUFFER_SRGB_EXT");
#endif
#if defined(GL_FRAMEBUFFER_SRGB_CAPABLE_EXT)
defconsti(env, "GL-FRAMEBUFFER-SRGB-CAPABLE-EXT", (GLenum) GL_FRAMEBUFFER_SRGB_CAPABLE_EXT, "GL_FRAMEBUFFER_SRGB_CAPABLE_EXT");
#endif
#if defined(GL_COMPRESSED_RED_RGTC1)
defconsti(env, "GL-COMPRESSED-RED-RGTC1", (GLenum) GL_COMPRESSED_RED_RGTC1, "GL_COMPRESSED_RED_RGTC1");
#endif
#if defined(GL_COMPRESSED_RED_RGTC1_EXT)
defconsti(env, "GL-COMPRESSED-RED-RGTC1-EXT", (GLenum) GL_COMPRESSED_RED_RGTC1_EXT, "GL_COMPRESSED_RED_RGTC1_EXT");
#endif
#if defined(GL_COMPRESSED_SIGNED_RED_RGTC1)
defconsti(env, "GL-COMPRESSED-SIGNED-RED-RGTC1", (GLenum) GL_COMPRESSED_SIGNED_RED_RGTC1, "GL_COMPRESSED_SIGNED_RED_RGTC1");
#endif
#if defined(GL_COMPRESSED_SIGNED_RED_RGTC1_EXT)
defconsti(env, "GL-COMPRESSED-SIGNED-RED-RGTC1-EXT", (GLenum) GL_COMPRESSED_SIGNED_RED_RGTC1_EXT, "GL_COMPRESSED_SIGNED_RED_RGTC1_EXT");
#endif
#if defined(GL_COMPRESSED_RED_GREEN_RGTC2_EXT)
defconsti(env, "GL-COMPRESSED-RED-GREEN-RGTC2-EXT", (GLenum) GL_COMPRESSED_RED_GREEN_RGTC2_EXT, "GL_COMPRESSED_RED_GREEN_RGTC2_EXT");
#endif
#if defined(GL_COMPRESSED_RG_RGTC2)
defconsti(env, "GL-COMPRESSED-RG-RGTC2", (GLenum) GL_COMPRESSED_RG_RGTC2, "GL_COMPRESSED_RG_RGTC2");
#endif
#if defined(GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT)
defconsti(env, "GL-COMPRESSED-SIGNED-RED-GREEN-RGTC2-EXT", (GLenum) GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT, "GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT");
#endif
#if defined(GL_COMPRESSED_SIGNED_RG_RGTC2)
defconsti(env, "GL-COMPRESSED-SIGNED-RG-RGTC2", (GLenum) GL_COMPRESSED_SIGNED_RG_RGTC2, "GL_COMPRESSED_SIGNED_RG_RGTC2");
#endif
#if defined(GL_SAMPLER_1D_ARRAY)
defconsti(env, "GL-SAMPLER-1D-ARRAY", (GLenum) GL_SAMPLER_1D_ARRAY, "GL_SAMPLER_1D_ARRAY");
#endif
#if defined(GL_SAMPLER_1D_ARRAY_EXT)
defconsti(env, "GL-SAMPLER-1D-ARRAY-EXT", (GLenum) GL_SAMPLER_1D_ARRAY_EXT, "GL_SAMPLER_1D_ARRAY_EXT");
#endif
#if defined(GL_SAMPLER_2D_ARRAY)
defconsti(env, "GL-SAMPLER-2D-ARRAY", (GLenum) GL_SAMPLER_2D_ARRAY, "GL_SAMPLER_2D_ARRAY");
#endif
#if defined(GL_SAMPLER_2D_ARRAY_EXT)
defconsti(env, "GL-SAMPLER-2D-ARRAY-EXT", (GLenum) GL_SAMPLER_2D_ARRAY_EXT, "GL_SAMPLER_2D_ARRAY_EXT");
#endif
#if defined(GL_SAMPLER_BUFFER)
defconsti(env, "GL-SAMPLER-BUFFER", (GLenum) GL_SAMPLER_BUFFER, "GL_SAMPLER_BUFFER");
#endif
#if defined(GL_SAMPLER_BUFFER_EXT)
defconsti(env, "GL-SAMPLER-BUFFER-EXT", (GLenum) GL_SAMPLER_BUFFER_EXT, "GL_SAMPLER_BUFFER_EXT");
#endif
#if defined(GL_SAMPLER_BUFFER_OES)
defconsti(env, "GL-SAMPLER-BUFFER-OES", (GLenum) GL_SAMPLER_BUFFER_OES, "GL_SAMPLER_BUFFER_OES");
#endif
#if defined(GL_SAMPLER_1D_ARRAY_SHADOW)
defconsti(env, "GL-SAMPLER-1D-ARRAY-SHADOW", (GLenum) GL_SAMPLER_1D_ARRAY_SHADOW, "GL_SAMPLER_1D_ARRAY_SHADOW");
#endif
#if defined(GL_SAMPLER_1D_ARRAY_SHADOW_EXT)
defconsti(env, "GL-SAMPLER-1D-ARRAY-SHADOW-EXT", (GLenum) GL_SAMPLER_1D_ARRAY_SHADOW_EXT, "GL_SAMPLER_1D_ARRAY_SHADOW_EXT");
#endif
#if defined(GL_SAMPLER_2D_ARRAY_SHADOW)
defconsti(env, "GL-SAMPLER-2D-ARRAY-SHADOW", (GLenum) GL_SAMPLER_2D_ARRAY_SHADOW, "GL_SAMPLER_2D_ARRAY_SHADOW");
#endif
#if defined(GL_SAMPLER_2D_ARRAY_SHADOW_EXT)
defconsti(env, "GL-SAMPLER-2D-ARRAY-SHADOW-EXT", (GLenum) GL_SAMPLER_2D_ARRAY_SHADOW_EXT, "GL_SAMPLER_2D_ARRAY_SHADOW_EXT");
#endif
#if defined(GL_SAMPLER_2D_ARRAY_SHADOW_NV)
defconsti(env, "GL-SAMPLER-2D-ARRAY-SHADOW-NV", (GLenum) GL_SAMPLER_2D_ARRAY_SHADOW_NV, "GL_SAMPLER_2D_ARRAY_SHADOW_NV");
#endif
#if defined(GL_SAMPLER_CUBE_SHADOW)
defconsti(env, "GL-SAMPLER-CUBE-SHADOW", (GLenum) GL_SAMPLER_CUBE_SHADOW, "GL_SAMPLER_CUBE_SHADOW");
#endif
#if defined(GL_SAMPLER_CUBE_SHADOW_EXT)
defconsti(env, "GL-SAMPLER-CUBE-SHADOW-EXT", (GLenum) GL_SAMPLER_CUBE_SHADOW_EXT, "GL_SAMPLER_CUBE_SHADOW_EXT");
#endif
#if defined(GL_SAMPLER_CUBE_SHADOW_NV)
defconsti(env, "GL-SAMPLER-CUBE-SHADOW-NV", (GLenum) GL_SAMPLER_CUBE_SHADOW_NV, "GL_SAMPLER_CUBE_SHADOW_NV");
#endif
#if defined(GL_UNSIGNED_INT_VEC2)
defconsti(env, "GL-UNSIGNED-INT-VEC2", (GLenum) GL_UNSIGNED_INT_VEC2, "GL_UNSIGNED_INT_VEC2");
#endif
#if defined(GL_UNSIGNED_INT_VEC2_EXT)
defconsti(env, "GL-UNSIGNED-INT-VEC2-EXT", (GLenum) GL_UNSIGNED_INT_VEC2_EXT, "GL_UNSIGNED_INT_VEC2_EXT");
#endif
#if defined(GL_UNSIGNED_INT_VEC3)
defconsti(env, "GL-UNSIGNED-INT-VEC3", (GLenum) GL_UNSIGNED_INT_VEC3, "GL_UNSIGNED_INT_VEC3");
#endif
#if defined(GL_UNSIGNED_INT_VEC3_EXT)
defconsti(env, "GL-UNSIGNED-INT-VEC3-EXT", (GLenum) GL_UNSIGNED_INT_VEC3_EXT, "GL_UNSIGNED_INT_VEC3_EXT");
#endif
#if defined(GL_UNSIGNED_INT_VEC4)
defconsti(env, "GL-UNSIGNED-INT-VEC4", (GLenum) GL_UNSIGNED_INT_VEC4, "GL_UNSIGNED_INT_VEC4");
#endif
#if defined(GL_UNSIGNED_INT_VEC4_EXT)
defconsti(env, "GL-UNSIGNED-INT-VEC4-EXT", (GLenum) GL_UNSIGNED_INT_VEC4_EXT, "GL_UNSIGNED_INT_VEC4_EXT");
#endif
#if defined(GL_INT_SAMPLER_1D)
defconsti(env, "GL-INT-SAMPLER-1D", (GLenum) GL_INT_SAMPLER_1D, "GL_INT_SAMPLER_1D");
#endif
#if defined(GL_INT_SAMPLER_1D_EXT)
defconsti(env, "GL-INT-SAMPLER-1D-EXT", (GLenum) GL_INT_SAMPLER_1D_EXT, "GL_INT_SAMPLER_1D_EXT");
#endif
#if defined(GL_INT_SAMPLER_2D)
defconsti(env, "GL-INT-SAMPLER-2D", (GLenum) GL_INT_SAMPLER_2D, "GL_INT_SAMPLER_2D");
#endif
#if defined(GL_INT_SAMPLER_2D_EXT)
defconsti(env, "GL-INT-SAMPLER-2D-EXT", (GLenum) GL_INT_SAMPLER_2D_EXT, "GL_INT_SAMPLER_2D_EXT");
#endif
#if defined(GL_INT_SAMPLER_3D)
defconsti(env, "GL-INT-SAMPLER-3D", (GLenum) GL_INT_SAMPLER_3D, "GL_INT_SAMPLER_3D");
#endif
#if defined(GL_INT_SAMPLER_3D_EXT)
defconsti(env, "GL-INT-SAMPLER-3D-EXT", (GLenum) GL_INT_SAMPLER_3D_EXT, "GL_INT_SAMPLER_3D_EXT");
#endif
#if defined(GL_INT_SAMPLER_CUBE)
defconsti(env, "GL-INT-SAMPLER-CUBE", (GLenum) GL_INT_SAMPLER_CUBE, "GL_INT_SAMPLER_CUBE");
#endif
#if defined(GL_INT_SAMPLER_CUBE_EXT)
defconsti(env, "GL-INT-SAMPLER-CUBE-EXT", (GLenum) GL_INT_SAMPLER_CUBE_EXT, "GL_INT_SAMPLER_CUBE_EXT");
#endif
#if defined(GL_INT_SAMPLER_2D_RECT)
defconsti(env, "GL-INT-SAMPLER-2D-RECT", (GLenum) GL_INT_SAMPLER_2D_RECT, "GL_INT_SAMPLER_2D_RECT");
#endif
#if defined(GL_INT_SAMPLER_2D_RECT_EXT)
defconsti(env, "GL-INT-SAMPLER-2D-RECT-EXT", (GLenum) GL_INT_SAMPLER_2D_RECT_EXT, "GL_INT_SAMPLER_2D_RECT_EXT");
#endif
#if defined(GL_INT_SAMPLER_1D_ARRAY)
defconsti(env, "GL-INT-SAMPLER-1D-ARRAY", (GLenum) GL_INT_SAMPLER_1D_ARRAY, "GL_INT_SAMPLER_1D_ARRAY");
#endif
#if defined(GL_INT_SAMPLER_1D_ARRAY_EXT)
defconsti(env, "GL-INT-SAMPLER-1D-ARRAY-EXT", (GLenum) GL_INT_SAMPLER_1D_ARRAY_EXT, "GL_INT_SAMPLER_1D_ARRAY_EXT");
#endif
#if defined(GL_INT_SAMPLER_2D_ARRAY)
defconsti(env, "GL-INT-SAMPLER-2D-ARRAY", (GLenum) GL_INT_SAMPLER_2D_ARRAY, "GL_INT_SAMPLER_2D_ARRAY");
#endif
#if defined(GL_INT_SAMPLER_2D_ARRAY_EXT)
defconsti(env, "GL-INT-SAMPLER-2D-ARRAY-EXT", (GLenum) GL_INT_SAMPLER_2D_ARRAY_EXT, "GL_INT_SAMPLER_2D_ARRAY_EXT");
#endif
#if defined(GL_INT_SAMPLER_BUFFER)
defconsti(env, "GL-INT-SAMPLER-BUFFER", (GLenum) GL_INT_SAMPLER_BUFFER, "GL_INT_SAMPLER_BUFFER");
#endif
#if defined(GL_INT_SAMPLER_BUFFER_EXT)
defconsti(env, "GL-INT-SAMPLER-BUFFER-EXT", (GLenum) GL_INT_SAMPLER_BUFFER_EXT, "GL_INT_SAMPLER_BUFFER_EXT");
#endif
#if defined(GL_INT_SAMPLER_BUFFER_OES)
defconsti(env, "GL-INT-SAMPLER-BUFFER-OES", (GLenum) GL_INT_SAMPLER_BUFFER_OES, "GL_INT_SAMPLER_BUFFER_OES");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_1D)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-1D", (GLenum) GL_UNSIGNED_INT_SAMPLER_1D, "GL_UNSIGNED_INT_SAMPLER_1D");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_1D_EXT)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-1D-EXT", (GLenum) GL_UNSIGNED_INT_SAMPLER_1D_EXT, "GL_UNSIGNED_INT_SAMPLER_1D_EXT");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D, "GL_UNSIGNED_INT_SAMPLER_2D");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_EXT)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-EXT", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_EXT, "GL_UNSIGNED_INT_SAMPLER_2D_EXT");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_3D)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-3D", (GLenum) GL_UNSIGNED_INT_SAMPLER_3D, "GL_UNSIGNED_INT_SAMPLER_3D");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_3D_EXT)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-3D-EXT", (GLenum) GL_UNSIGNED_INT_SAMPLER_3D_EXT, "GL_UNSIGNED_INT_SAMPLER_3D_EXT");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_CUBE)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-CUBE", (GLenum) GL_UNSIGNED_INT_SAMPLER_CUBE, "GL_UNSIGNED_INT_SAMPLER_CUBE");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_CUBE_EXT)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-CUBE-EXT", (GLenum) GL_UNSIGNED_INT_SAMPLER_CUBE_EXT, "GL_UNSIGNED_INT_SAMPLER_CUBE_EXT");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_RECT)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-RECT", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_RECT, "GL_UNSIGNED_INT_SAMPLER_2D_RECT");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-RECT-EXT", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT, "GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_1D_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-1D-ARRAY", (GLenum) GL_UNSIGNED_INT_SAMPLER_1D_ARRAY, "GL_UNSIGNED_INT_SAMPLER_1D_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-1D-ARRAY-EXT", (GLenum) GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT, "GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-ARRAY", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_ARRAY, "GL_UNSIGNED_INT_SAMPLER_2D_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-ARRAY-EXT", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT, "GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_BUFFER)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-BUFFER", (GLenum) GL_UNSIGNED_INT_SAMPLER_BUFFER, "GL_UNSIGNED_INT_SAMPLER_BUFFER");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-BUFFER-EXT", (GLenum) GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT, "GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_BUFFER_OES)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-BUFFER-OES", (GLenum) GL_UNSIGNED_INT_SAMPLER_BUFFER_OES, "GL_UNSIGNED_INT_SAMPLER_BUFFER_OES");
#endif
#if defined(GL_GEOMETRY_SHADER)
defconsti(env, "GL-GEOMETRY-SHADER", (GLenum) GL_GEOMETRY_SHADER, "GL_GEOMETRY_SHADER");
#endif
#if defined(GL_GEOMETRY_SHADER_ARB)
defconsti(env, "GL-GEOMETRY-SHADER-ARB", (GLenum) GL_GEOMETRY_SHADER_ARB, "GL_GEOMETRY_SHADER_ARB");
#endif
#if defined(GL_GEOMETRY_SHADER_EXT)
defconsti(env, "GL-GEOMETRY-SHADER-EXT", (GLenum) GL_GEOMETRY_SHADER_EXT, "GL_GEOMETRY_SHADER_EXT");
#endif
#if defined(GL_GEOMETRY_SHADER_OES)
defconsti(env, "GL-GEOMETRY-SHADER-OES", (GLenum) GL_GEOMETRY_SHADER_OES, "GL_GEOMETRY_SHADER_OES");
#endif
#if defined(GL_GEOMETRY_VERTICES_OUT_ARB)
defconsti(env, "GL-GEOMETRY-VERTICES-OUT-ARB", (GLenum) GL_GEOMETRY_VERTICES_OUT_ARB, "GL_GEOMETRY_VERTICES_OUT_ARB");
#endif
#if defined(GL_GEOMETRY_VERTICES_OUT_EXT)
defconsti(env, "GL-GEOMETRY-VERTICES-OUT-EXT", (GLenum) GL_GEOMETRY_VERTICES_OUT_EXT, "GL_GEOMETRY_VERTICES_OUT_EXT");
#endif
#if defined(GL_GEOMETRY_INPUT_TYPE_ARB)
defconsti(env, "GL-GEOMETRY-INPUT-TYPE-ARB", (GLenum) GL_GEOMETRY_INPUT_TYPE_ARB, "GL_GEOMETRY_INPUT_TYPE_ARB");
#endif
#if defined(GL_GEOMETRY_INPUT_TYPE_EXT)
defconsti(env, "GL-GEOMETRY-INPUT-TYPE-EXT", (GLenum) GL_GEOMETRY_INPUT_TYPE_EXT, "GL_GEOMETRY_INPUT_TYPE_EXT");
#endif
#if defined(GL_GEOMETRY_OUTPUT_TYPE_ARB)
defconsti(env, "GL-GEOMETRY-OUTPUT-TYPE-ARB", (GLenum) GL_GEOMETRY_OUTPUT_TYPE_ARB, "GL_GEOMETRY_OUTPUT_TYPE_ARB");
#endif
#if defined(GL_GEOMETRY_OUTPUT_TYPE_EXT)
defconsti(env, "GL-GEOMETRY-OUTPUT-TYPE-EXT", (GLenum) GL_GEOMETRY_OUTPUT_TYPE_EXT, "GL_GEOMETRY_OUTPUT_TYPE_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB)
defconsti(env, "GL-MAX-GEOMETRY-VARYING-COMPONENTS-ARB", (GLenum) GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB, "GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB");
#endif
#if defined(GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-VARYING-COMPONENTS-EXT", (GLenum) GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT, "GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_VERTEX_VARYING_COMPONENTS_ARB)
defconsti(env, "GL-MAX-VERTEX-VARYING-COMPONENTS-ARB", (GLenum) GL_MAX_VERTEX_VARYING_COMPONENTS_ARB, "GL_MAX_VERTEX_VARYING_COMPONENTS_ARB");
#endif
#if defined(GL_MAX_VERTEX_VARYING_COMPONENTS_EXT)
defconsti(env, "GL-MAX-VERTEX-VARYING-COMPONENTS-EXT", (GLenum) GL_MAX_VERTEX_VARYING_COMPONENTS_EXT, "GL_MAX_VERTEX_VARYING_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-GEOMETRY-UNIFORM-COMPONENTS", (GLenum) GL_MAX_GEOMETRY_UNIFORM_COMPONENTS, "GL_MAX_GEOMETRY_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB)
defconsti(env, "GL-MAX-GEOMETRY-UNIFORM-COMPONENTS-ARB", (GLenum) GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB, "GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB");
#endif
#if defined(GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-UNIFORM-COMPONENTS-EXT", (GLenum) GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT, "GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_OES)
defconsti(env, "GL-MAX-GEOMETRY-UNIFORM-COMPONENTS-OES", (GLenum) GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_OES, "GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_OES");
#endif
#if defined(GL_MAX_GEOMETRY_OUTPUT_VERTICES)
defconsti(env, "GL-MAX-GEOMETRY-OUTPUT-VERTICES", (GLenum) GL_MAX_GEOMETRY_OUTPUT_VERTICES, "GL_MAX_GEOMETRY_OUTPUT_VERTICES");
#endif
#if defined(GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB)
defconsti(env, "GL-MAX-GEOMETRY-OUTPUT-VERTICES-ARB", (GLenum) GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB, "GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB");
#endif
#if defined(GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT)
defconsti(env, "GL-MAX-GEOMETRY-OUTPUT-VERTICES-EXT", (GLenum) GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT, "GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_OUTPUT_VERTICES_OES)
defconsti(env, "GL-MAX-GEOMETRY-OUTPUT-VERTICES-OES", (GLenum) GL_MAX_GEOMETRY_OUTPUT_VERTICES_OES, "GL_MAX_GEOMETRY_OUTPUT_VERTICES_OES");
#endif
#if defined(GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS)
defconsti(env, "GL-MAX-GEOMETRY-TOTAL-OUTPUT-COMPONENTS", (GLenum) GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS, "GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS");
#endif
#if defined(GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB)
defconsti(env, "GL-MAX-GEOMETRY-TOTAL-OUTPUT-COMPONENTS-ARB", (GLenum) GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB, "GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB");
#endif
#if defined(GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-TOTAL-OUTPUT-COMPONENTS-EXT", (GLenum) GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT, "GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES)
defconsti(env, "GL-MAX-GEOMETRY-TOTAL-OUTPUT-COMPONENTS-OES", (GLenum) GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES, "GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES");
#endif
#if defined(GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT)
defconsti(env, "GL-MAX-VERTEX-BINDABLE-UNIFORMS-EXT", (GLenum) GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT, "GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT");
#endif
#if defined(GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT)
defconsti(env, "GL-MAX-FRAGMENT-BINDABLE-UNIFORMS-EXT", (GLenum) GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT, "GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-BINDABLE-UNIFORMS-EXT", (GLenum) GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT, "GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT");
#endif
#if defined(GL_ACTIVE_SUBROUTINES)
defconsti(env, "GL-ACTIVE-SUBROUTINES", (GLenum) GL_ACTIVE_SUBROUTINES, "GL_ACTIVE_SUBROUTINES");
#endif
#if defined(GL_ACTIVE_SUBROUTINE_UNIFORMS)
defconsti(env, "GL-ACTIVE-SUBROUTINE-UNIFORMS", (GLenum) GL_ACTIVE_SUBROUTINE_UNIFORMS, "GL_ACTIVE_SUBROUTINE_UNIFORMS");
#endif
#if defined(GL_MAX_SUBROUTINES)
defconsti(env, "GL-MAX-SUBROUTINES", (GLenum) GL_MAX_SUBROUTINES, "GL_MAX_SUBROUTINES");
#endif
#if defined(GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS)
defconsti(env, "GL-MAX-SUBROUTINE-UNIFORM-LOCATIONS", (GLenum) GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS, "GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS");
#endif
#if defined(GL_NAMED_STRING_LENGTH_ARB)
defconsti(env, "GL-NAMED-STRING-LENGTH-ARB", (GLenum) GL_NAMED_STRING_LENGTH_ARB, "GL_NAMED_STRING_LENGTH_ARB");
#endif
#if defined(GL_NAMED_STRING_TYPE_ARB)
defconsti(env, "GL-NAMED-STRING-TYPE-ARB", (GLenum) GL_NAMED_STRING_TYPE_ARB, "GL_NAMED_STRING_TYPE_ARB");
#endif
#if defined(GL_MAX_BINDABLE_UNIFORM_SIZE_EXT)
defconsti(env, "GL-MAX-BINDABLE-UNIFORM-SIZE-EXT", (GLenum) GL_MAX_BINDABLE_UNIFORM_SIZE_EXT, "GL_MAX_BINDABLE_UNIFORM_SIZE_EXT");
#endif
#if defined(GL_UNIFORM_BUFFER_EXT)
defconsti(env, "GL-UNIFORM-BUFFER-EXT", (GLenum) GL_UNIFORM_BUFFER_EXT, "GL_UNIFORM_BUFFER_EXT");
#endif
#if defined(GL_UNIFORM_BUFFER_BINDING_EXT)
defconsti(env, "GL-UNIFORM-BUFFER-BINDING-EXT", (GLenum) GL_UNIFORM_BUFFER_BINDING_EXT, "GL_UNIFORM_BUFFER_BINDING_EXT");
#endif
#if defined(GL_LOW_FLOAT)
defconsti(env, "GL-LOW-FLOAT", (GLenum) GL_LOW_FLOAT, "GL_LOW_FLOAT");
#endif
#if defined(GL_MEDIUM_FLOAT)
defconsti(env, "GL-MEDIUM-FLOAT", (GLenum) GL_MEDIUM_FLOAT, "GL_MEDIUM_FLOAT");
#endif
#if defined(GL_HIGH_FLOAT)
defconsti(env, "GL-HIGH-FLOAT", (GLenum) GL_HIGH_FLOAT, "GL_HIGH_FLOAT");
#endif
#if defined(GL_LOW_INT)
defconsti(env, "GL-LOW-INT", (GLenum) GL_LOW_INT, "GL_LOW_INT");
#endif
#if defined(GL_MEDIUM_INT)
defconsti(env, "GL-MEDIUM-INT", (GLenum) GL_MEDIUM_INT, "GL_MEDIUM_INT");
#endif
#if defined(GL_HIGH_INT)
defconsti(env, "GL-HIGH-INT", (GLenum) GL_HIGH_INT, "GL_HIGH_INT");
#endif
#if defined(GL_UNSIGNED_INT_10_10_10_2_OES)
defconsti(env, "GL-UNSIGNED-INT-10-10-10-2-OES", (GLenum) GL_UNSIGNED_INT_10_10_10_2_OES, "GL_UNSIGNED_INT_10_10_10_2_OES");
#endif
#if defined(GL_INT_10_10_10_2_OES)
defconsti(env, "GL-INT-10-10-10-2-OES", (GLenum) GL_INT_10_10_10_2_OES, "GL_INT_10_10_10_2_OES");
#endif
#if defined(GL_SHADER_BINARY_FORMATS)
defconsti(env, "GL-SHADER-BINARY-FORMATS", (GLenum) GL_SHADER_BINARY_FORMATS, "GL_SHADER_BINARY_FORMATS");
#endif
#if defined(GL_NUM_SHADER_BINARY_FORMATS)
defconsti(env, "GL-NUM-SHADER-BINARY-FORMATS", (GLenum) GL_NUM_SHADER_BINARY_FORMATS, "GL_NUM_SHADER_BINARY_FORMATS");
#endif
#if defined(GL_SHADER_COMPILER)
defconsti(env, "GL-SHADER-COMPILER", (GLenum) GL_SHADER_COMPILER, "GL_SHADER_COMPILER");
#endif
#if defined(GL_MAX_VERTEX_UNIFORM_VECTORS)
defconsti(env, "GL-MAX-VERTEX-UNIFORM-VECTORS", (GLenum) GL_MAX_VERTEX_UNIFORM_VECTORS, "GL_MAX_VERTEX_UNIFORM_VECTORS");
#endif
#if defined(GL_MAX_VARYING_VECTORS)
defconsti(env, "GL-MAX-VARYING-VECTORS", (GLenum) GL_MAX_VARYING_VECTORS, "GL_MAX_VARYING_VECTORS");
#endif
#if defined(GL_MAX_FRAGMENT_UNIFORM_VECTORS)
defconsti(env, "GL-MAX-FRAGMENT-UNIFORM-VECTORS", (GLenum) GL_MAX_FRAGMENT_UNIFORM_VECTORS, "GL_MAX_FRAGMENT_UNIFORM_VECTORS");
#endif
#if defined(GL_RENDERBUFFER_COLOR_SAMPLES_NV)
defconsti(env, "GL-RENDERBUFFER-COLOR-SAMPLES-NV", (GLenum) GL_RENDERBUFFER_COLOR_SAMPLES_NV, "GL_RENDERBUFFER_COLOR_SAMPLES_NV");
#endif
#if defined(GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV)
defconsti(env, "GL-MAX-MULTISAMPLE-COVERAGE-MODES-NV", (GLenum) GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV, "GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV");
#endif
#if defined(GL_MULTISAMPLE_COVERAGE_MODES_NV)
defconsti(env, "GL-MULTISAMPLE-COVERAGE-MODES-NV", (GLenum) GL_MULTISAMPLE_COVERAGE_MODES_NV, "GL_MULTISAMPLE_COVERAGE_MODES_NV");
#endif
#if defined(GL_QUERY_WAIT)
defconsti(env, "GL-QUERY-WAIT", (GLenum) GL_QUERY_WAIT, "GL_QUERY_WAIT");
#endif
#if defined(GL_QUERY_WAIT_NV)
defconsti(env, "GL-QUERY-WAIT-NV", (GLenum) GL_QUERY_WAIT_NV, "GL_QUERY_WAIT_NV");
#endif
#if defined(GL_QUERY_NO_WAIT)
defconsti(env, "GL-QUERY-NO-WAIT", (GLenum) GL_QUERY_NO_WAIT, "GL_QUERY_NO_WAIT");
#endif
#if defined(GL_QUERY_NO_WAIT_NV)
defconsti(env, "GL-QUERY-NO-WAIT-NV", (GLenum) GL_QUERY_NO_WAIT_NV, "GL_QUERY_NO_WAIT_NV");
#endif
#if defined(GL_QUERY_BY_REGION_WAIT)
defconsti(env, "GL-QUERY-BY-REGION-WAIT", (GLenum) GL_QUERY_BY_REGION_WAIT, "GL_QUERY_BY_REGION_WAIT");
#endif
#if defined(GL_QUERY_BY_REGION_WAIT_NV)
defconsti(env, "GL-QUERY-BY-REGION-WAIT-NV", (GLenum) GL_QUERY_BY_REGION_WAIT_NV, "GL_QUERY_BY_REGION_WAIT_NV");
#endif
#if defined(GL_QUERY_BY_REGION_NO_WAIT)
defconsti(env, "GL-QUERY-BY-REGION-NO-WAIT", (GLenum) GL_QUERY_BY_REGION_NO_WAIT, "GL_QUERY_BY_REGION_NO_WAIT");
#endif
#if defined(GL_QUERY_BY_REGION_NO_WAIT_NV)
defconsti(env, "GL-QUERY-BY-REGION-NO-WAIT-NV", (GLenum) GL_QUERY_BY_REGION_NO_WAIT_NV, "GL_QUERY_BY_REGION_NO_WAIT_NV");
#endif
#if defined(GL_QUERY_WAIT_INVERTED)
defconsti(env, "GL-QUERY-WAIT-INVERTED", (GLenum) GL_QUERY_WAIT_INVERTED, "GL_QUERY_WAIT_INVERTED");
#endif
#if defined(GL_QUERY_NO_WAIT_INVERTED)
defconsti(env, "GL-QUERY-NO-WAIT-INVERTED", (GLenum) GL_QUERY_NO_WAIT_INVERTED, "GL_QUERY_NO_WAIT_INVERTED");
#endif
#if defined(GL_QUERY_BY_REGION_WAIT_INVERTED)
defconsti(env, "GL-QUERY-BY-REGION-WAIT-INVERTED", (GLenum) GL_QUERY_BY_REGION_WAIT_INVERTED, "GL_QUERY_BY_REGION_WAIT_INVERTED");
#endif
#if defined(GL_QUERY_BY_REGION_NO_WAIT_INVERTED)
defconsti(env, "GL-QUERY-BY-REGION-NO-WAIT-INVERTED", (GLenum) GL_QUERY_BY_REGION_NO_WAIT_INVERTED, "GL_QUERY_BY_REGION_NO_WAIT_INVERTED");
#endif
#if defined(GL_POLYGON_OFFSET_CLAMP)
defconsti(env, "GL-POLYGON-OFFSET-CLAMP", (GLenum) GL_POLYGON_OFFSET_CLAMP, "GL_POLYGON_OFFSET_CLAMP");
#endif
#if defined(GL_POLYGON_OFFSET_CLAMP_EXT)
defconsti(env, "GL-POLYGON-OFFSET-CLAMP-EXT", (GLenum) GL_POLYGON_OFFSET_CLAMP_EXT, "GL_POLYGON_OFFSET_CLAMP_EXT");
#endif
#if defined(GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-TESS-CONTROL-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT)
defconsti(env, "GL-MAX-COMBINED-TESS-CONTROL-UNIFORM-COMPONENTS-EXT", (GLenum) GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT, "GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES)
defconsti(env, "GL-MAX-COMBINED-TESS-CONTROL-UNIFORM-COMPONENTS-OES", (GLenum) GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES, "GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES");
#endif
#if defined(GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-TESS-EVALUATION-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT)
defconsti(env, "GL-MAX-COMBINED-TESS-EVALUATION-UNIFORM-COMPONENTS-EXT", (GLenum) GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT, "GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES)
defconsti(env, "GL-MAX-COMBINED-TESS-EVALUATION-UNIFORM-COMPONENTS-OES", (GLenum) GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES, "GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES");
#endif
#if defined(GL_COLOR_SAMPLES_NV)
defconsti(env, "GL-COLOR-SAMPLES-NV", (GLenum) GL_COLOR_SAMPLES_NV, "GL_COLOR_SAMPLES_NV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK)
defconsti(env, "GL-TRANSFORM-FEEDBACK", (GLenum) GL_TRANSFORM_FEEDBACK, "GL_TRANSFORM_FEEDBACK");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_NV)
defconsti(env, "GL-TRANSFORM-FEEDBACK-NV", (GLenum) GL_TRANSFORM_FEEDBACK_NV, "GL_TRANSFORM_FEEDBACK_NV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-PAUSED", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED, "GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_PAUSED)
defconsti(env, "GL-TRANSFORM-FEEDBACK-PAUSED", (GLenum) GL_TRANSFORM_FEEDBACK_PAUSED, "GL_TRANSFORM_FEEDBACK_PAUSED");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-PAUSED-NV", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV, "GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-ACTIVE", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE, "GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_ACTIVE)
defconsti(env, "GL-TRANSFORM-FEEDBACK-ACTIVE", (GLenum) GL_TRANSFORM_FEEDBACK_ACTIVE, "GL_TRANSFORM_FEEDBACK_ACTIVE");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-ACTIVE-NV", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV, "GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BINDING)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BINDING", (GLenum) GL_TRANSFORM_FEEDBACK_BINDING, "GL_TRANSFORM_FEEDBACK_BINDING");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BINDING_NV)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BINDING-NV", (GLenum) GL_TRANSFORM_FEEDBACK_BINDING_NV, "GL_TRANSFORM_FEEDBACK_BINDING_NV");
#endif
#if defined(GL_FRAME_NV)
defconsti(env, "GL-FRAME-NV", (GLenum) GL_FRAME_NV, "GL_FRAME_NV");
#endif
#if defined(GL_FIELDS_NV)
defconsti(env, "GL-FIELDS-NV", (GLenum) GL_FIELDS_NV, "GL_FIELDS_NV");
#endif
#if defined(GL_CURRENT_TIME_NV)
defconsti(env, "GL-CURRENT-TIME-NV", (GLenum) GL_CURRENT_TIME_NV, "GL_CURRENT_TIME_NV");
#endif
#if defined(GL_TIMESTAMP)
defconsti(env, "GL-TIMESTAMP", (GLenum) GL_TIMESTAMP, "GL_TIMESTAMP");
#endif
#if defined(GL_TIMESTAMP_EXT)
defconsti(env, "GL-TIMESTAMP-EXT", (GLenum) GL_TIMESTAMP_EXT, "GL_TIMESTAMP_EXT");
#endif
#if defined(GL_NUM_FILL_STREAMS_NV)
defconsti(env, "GL-NUM-FILL-STREAMS-NV", (GLenum) GL_NUM_FILL_STREAMS_NV, "GL_NUM_FILL_STREAMS_NV");
#endif
#if defined(GL_PRESENT_TIME_NV)
defconsti(env, "GL-PRESENT-TIME-NV", (GLenum) GL_PRESENT_TIME_NV, "GL_PRESENT_TIME_NV");
#endif
#if defined(GL_PRESENT_DURATION_NV)
defconsti(env, "GL-PRESENT-DURATION-NV", (GLenum) GL_PRESENT_DURATION_NV, "GL_PRESENT_DURATION_NV");
#endif
#if defined(GL_DEPTH_COMPONENT16_NONLINEAR_NV)
defconsti(env, "GL-DEPTH-COMPONENT16-NONLINEAR-NV", (GLenum) GL_DEPTH_COMPONENT16_NONLINEAR_NV, "GL_DEPTH_COMPONENT16_NONLINEAR_NV");
#endif
#if defined(GL_PROGRAM_MATRIX_EXT)
defconsti(env, "GL-PROGRAM-MATRIX-EXT", (GLenum) GL_PROGRAM_MATRIX_EXT, "GL_PROGRAM_MATRIX_EXT");
#endif
#if defined(GL_TRANSPOSE_PROGRAM_MATRIX_EXT)
defconsti(env, "GL-TRANSPOSE-PROGRAM-MATRIX-EXT", (GLenum) GL_TRANSPOSE_PROGRAM_MATRIX_EXT, "GL_TRANSPOSE_PROGRAM_MATRIX_EXT");
#endif
#if defined(GL_PROGRAM_MATRIX_STACK_DEPTH_EXT)
defconsti(env, "GL-PROGRAM-MATRIX-STACK-DEPTH-EXT", (GLenum) GL_PROGRAM_MATRIX_STACK_DEPTH_EXT, "GL_PROGRAM_MATRIX_STACK_DEPTH_EXT");
#endif
#if defined(GL_TEXTURE_SWIZZLE_R)
defconsti(env, "GL-TEXTURE-SWIZZLE-R", (GLenum) GL_TEXTURE_SWIZZLE_R, "GL_TEXTURE_SWIZZLE_R");
#endif
#if defined(GL_TEXTURE_SWIZZLE_R_EXT)
defconsti(env, "GL-TEXTURE-SWIZZLE-R-EXT", (GLenum) GL_TEXTURE_SWIZZLE_R_EXT, "GL_TEXTURE_SWIZZLE_R_EXT");
#endif
#if defined(GL_TEXTURE_SWIZZLE_G)
defconsti(env, "GL-TEXTURE-SWIZZLE-G", (GLenum) GL_TEXTURE_SWIZZLE_G, "GL_TEXTURE_SWIZZLE_G");
#endif
#if defined(GL_TEXTURE_SWIZZLE_G_EXT)
defconsti(env, "GL-TEXTURE-SWIZZLE-G-EXT", (GLenum) GL_TEXTURE_SWIZZLE_G_EXT, "GL_TEXTURE_SWIZZLE_G_EXT");
#endif
#if defined(GL_TEXTURE_SWIZZLE_B)
defconsti(env, "GL-TEXTURE-SWIZZLE-B", (GLenum) GL_TEXTURE_SWIZZLE_B, "GL_TEXTURE_SWIZZLE_B");
#endif
#if defined(GL_TEXTURE_SWIZZLE_B_EXT)
defconsti(env, "GL-TEXTURE-SWIZZLE-B-EXT", (GLenum) GL_TEXTURE_SWIZZLE_B_EXT, "GL_TEXTURE_SWIZZLE_B_EXT");
#endif
#if defined(GL_TEXTURE_SWIZZLE_A)
defconsti(env, "GL-TEXTURE-SWIZZLE-A", (GLenum) GL_TEXTURE_SWIZZLE_A, "GL_TEXTURE_SWIZZLE_A");
#endif
#if defined(GL_TEXTURE_SWIZZLE_A_EXT)
defconsti(env, "GL-TEXTURE-SWIZZLE-A-EXT", (GLenum) GL_TEXTURE_SWIZZLE_A_EXT, "GL_TEXTURE_SWIZZLE_A_EXT");
#endif
#if defined(GL_TEXTURE_SWIZZLE_RGBA)
defconsti(env, "GL-TEXTURE-SWIZZLE-RGBA", (GLenum) GL_TEXTURE_SWIZZLE_RGBA, "GL_TEXTURE_SWIZZLE_RGBA");
#endif
#if defined(GL_TEXTURE_SWIZZLE_RGBA_EXT)
defconsti(env, "GL-TEXTURE-SWIZZLE-RGBA-EXT", (GLenum) GL_TEXTURE_SWIZZLE_RGBA_EXT, "GL_TEXTURE_SWIZZLE_RGBA_EXT");
#endif
#if defined(GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS)
defconsti(env, "GL-ACTIVE-SUBROUTINE-UNIFORM-LOCATIONS", (GLenum) GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS, "GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS");
#endif
#if defined(GL_ACTIVE_SUBROUTINE_MAX_LENGTH)
defconsti(env, "GL-ACTIVE-SUBROUTINE-MAX-LENGTH", (GLenum) GL_ACTIVE_SUBROUTINE_MAX_LENGTH, "GL_ACTIVE_SUBROUTINE_MAX_LENGTH");
#endif
#if defined(GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH)
defconsti(env, "GL-ACTIVE-SUBROUTINE-UNIFORM-MAX-LENGTH", (GLenum) GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH, "GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH");
#endif
#if defined(GL_NUM_COMPATIBLE_SUBROUTINES)
defconsti(env, "GL-NUM-COMPATIBLE-SUBROUTINES", (GLenum) GL_NUM_COMPATIBLE_SUBROUTINES, "GL_NUM_COMPATIBLE_SUBROUTINES");
#endif
#if defined(GL_COMPATIBLE_SUBROUTINES)
defconsti(env, "GL-COMPATIBLE-SUBROUTINES", (GLenum) GL_COMPATIBLE_SUBROUTINES, "GL_COMPATIBLE_SUBROUTINES");
#endif
#if defined(GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION)
defconsti(env, "GL-QUADS-FOLLOW-PROVOKING-VERTEX-CONVENTION", (GLenum) GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION, "GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION");
#endif
#if defined(GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT)
defconsti(env, "GL-QUADS-FOLLOW-PROVOKING-VERTEX-CONVENTION-EXT", (GLenum) GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT, "GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT");
#endif
#if defined(GL_FIRST_VERTEX_CONVENTION)
defconsti(env, "GL-FIRST-VERTEX-CONVENTION", (GLenum) GL_FIRST_VERTEX_CONVENTION, "GL_FIRST_VERTEX_CONVENTION");
#endif
#if defined(GL_FIRST_VERTEX_CONVENTION_EXT)
defconsti(env, "GL-FIRST-VERTEX-CONVENTION-EXT", (GLenum) GL_FIRST_VERTEX_CONVENTION_EXT, "GL_FIRST_VERTEX_CONVENTION_EXT");
#endif
#if defined(GL_FIRST_VERTEX_CONVENTION_OES)
defconsti(env, "GL-FIRST-VERTEX-CONVENTION-OES", (GLenum) GL_FIRST_VERTEX_CONVENTION_OES, "GL_FIRST_VERTEX_CONVENTION_OES");
#endif
#if defined(GL_LAST_VERTEX_CONVENTION)
defconsti(env, "GL-LAST-VERTEX-CONVENTION", (GLenum) GL_LAST_VERTEX_CONVENTION, "GL_LAST_VERTEX_CONVENTION");
#endif
#if defined(GL_LAST_VERTEX_CONVENTION_EXT)
defconsti(env, "GL-LAST-VERTEX-CONVENTION-EXT", (GLenum) GL_LAST_VERTEX_CONVENTION_EXT, "GL_LAST_VERTEX_CONVENTION_EXT");
#endif
#if defined(GL_LAST_VERTEX_CONVENTION_OES)
defconsti(env, "GL-LAST-VERTEX-CONVENTION-OES", (GLenum) GL_LAST_VERTEX_CONVENTION_OES, "GL_LAST_VERTEX_CONVENTION_OES");
#endif
#if defined(GL_PROVOKING_VERTEX)
defconsti(env, "GL-PROVOKING-VERTEX", (GLenum) GL_PROVOKING_VERTEX, "GL_PROVOKING_VERTEX");
#endif
#if defined(GL_PROVOKING_VERTEX_EXT)
defconsti(env, "GL-PROVOKING-VERTEX-EXT", (GLenum) GL_PROVOKING_VERTEX_EXT, "GL_PROVOKING_VERTEX_EXT");
#endif
#if defined(GL_SAMPLE_POSITION)
defconsti(env, "GL-SAMPLE-POSITION", (GLenum) GL_SAMPLE_POSITION, "GL_SAMPLE_POSITION");
#endif
#if defined(GL_SAMPLE_POSITION_NV)
defconsti(env, "GL-SAMPLE-POSITION-NV", (GLenum) GL_SAMPLE_POSITION_NV, "GL_SAMPLE_POSITION_NV");
#endif
#if defined(GL_SAMPLE_LOCATION_ARB)
defconsti(env, "GL-SAMPLE-LOCATION-ARB", (GLenum) GL_SAMPLE_LOCATION_ARB, "GL_SAMPLE_LOCATION_ARB");
#endif
#if defined(GL_SAMPLE_LOCATION_NV)
defconsti(env, "GL-SAMPLE-LOCATION-NV", (GLenum) GL_SAMPLE_LOCATION_NV, "GL_SAMPLE_LOCATION_NV");
#endif
#if defined(GL_SAMPLE_MASK)
defconsti(env, "GL-SAMPLE-MASK", (GLenum) GL_SAMPLE_MASK, "GL_SAMPLE_MASK");
#endif
#if defined(GL_SAMPLE_MASK_NV)
defconsti(env, "GL-SAMPLE-MASK-NV", (GLenum) GL_SAMPLE_MASK_NV, "GL_SAMPLE_MASK_NV");
#endif
#if defined(GL_SAMPLE_MASK_VALUE)
defconsti(env, "GL-SAMPLE-MASK-VALUE", (GLenum) GL_SAMPLE_MASK_VALUE, "GL_SAMPLE_MASK_VALUE");
#endif
#if defined(GL_SAMPLE_MASK_VALUE_NV)
defconsti(env, "GL-SAMPLE-MASK-VALUE-NV", (GLenum) GL_SAMPLE_MASK_VALUE_NV, "GL_SAMPLE_MASK_VALUE_NV");
#endif
#if defined(GL_TEXTURE_BINDING_RENDERBUFFER_NV)
defconsti(env, "GL-TEXTURE-BINDING-RENDERBUFFER-NV", (GLenum) GL_TEXTURE_BINDING_RENDERBUFFER_NV, "GL_TEXTURE_BINDING_RENDERBUFFER_NV");
#endif
#if defined(GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV)
defconsti(env, "GL-TEXTURE-RENDERBUFFER-DATA-STORE-BINDING-NV", (GLenum) GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV, "GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV");
#endif
#if defined(GL_TEXTURE_RENDERBUFFER_NV)
defconsti(env, "GL-TEXTURE-RENDERBUFFER-NV", (GLenum) GL_TEXTURE_RENDERBUFFER_NV, "GL_TEXTURE_RENDERBUFFER_NV");
#endif
#if defined(GL_SAMPLER_RENDERBUFFER_NV)
defconsti(env, "GL-SAMPLER-RENDERBUFFER-NV", (GLenum) GL_SAMPLER_RENDERBUFFER_NV, "GL_SAMPLER_RENDERBUFFER_NV");
#endif
#if defined(GL_INT_SAMPLER_RENDERBUFFER_NV)
defconsti(env, "GL-INT-SAMPLER-RENDERBUFFER-NV", (GLenum) GL_INT_SAMPLER_RENDERBUFFER_NV, "GL_INT_SAMPLER_RENDERBUFFER_NV");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-RENDERBUFFER-NV", (GLenum) GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV, "GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV");
#endif
#if defined(GL_MAX_SAMPLE_MASK_WORDS)
defconsti(env, "GL-MAX-SAMPLE-MASK-WORDS", (GLenum) GL_MAX_SAMPLE_MASK_WORDS, "GL_MAX_SAMPLE_MASK_WORDS");
#endif
#if defined(GL_MAX_SAMPLE_MASK_WORDS_NV)
defconsti(env, "GL-MAX-SAMPLE-MASK-WORDS-NV", (GLenum) GL_MAX_SAMPLE_MASK_WORDS_NV, "GL_MAX_SAMPLE_MASK_WORDS_NV");
#endif
#if defined(GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV)
defconsti(env, "GL-MAX-GEOMETRY-PROGRAM-INVOCATIONS-NV", (GLenum) GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV, "GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV");
#endif
#if defined(GL_MAX_GEOMETRY_SHADER_INVOCATIONS)
defconsti(env, "GL-MAX-GEOMETRY-SHADER-INVOCATIONS", (GLenum) GL_MAX_GEOMETRY_SHADER_INVOCATIONS, "GL_MAX_GEOMETRY_SHADER_INVOCATIONS");
#endif
#if defined(GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-SHADER-INVOCATIONS-EXT", (GLenum) GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT, "GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_SHADER_INVOCATIONS_OES)
defconsti(env, "GL-MAX-GEOMETRY-SHADER-INVOCATIONS-OES", (GLenum) GL_MAX_GEOMETRY_SHADER_INVOCATIONS_OES, "GL_MAX_GEOMETRY_SHADER_INVOCATIONS_OES");
#endif
#if defined(GL_MIN_FRAGMENT_INTERPOLATION_OFFSET)
defconsti(env, "GL-MIN-FRAGMENT-INTERPOLATION-OFFSET", (GLenum) GL_MIN_FRAGMENT_INTERPOLATION_OFFSET, "GL_MIN_FRAGMENT_INTERPOLATION_OFFSET");
#endif
#if defined(GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES)
defconsti(env, "GL-MIN-FRAGMENT-INTERPOLATION-OFFSET-OES", (GLenum) GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES, "GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES");
#endif
#if defined(GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV)
defconsti(env, "GL-MIN-FRAGMENT-INTERPOLATION-OFFSET-NV", (GLenum) GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV, "GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV");
#endif
#if defined(GL_MAX_FRAGMENT_INTERPOLATION_OFFSET)
defconsti(env, "GL-MAX-FRAGMENT-INTERPOLATION-OFFSET", (GLenum) GL_MAX_FRAGMENT_INTERPOLATION_OFFSET, "GL_MAX_FRAGMENT_INTERPOLATION_OFFSET");
#endif
#if defined(GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES)
defconsti(env, "GL-MAX-FRAGMENT-INTERPOLATION-OFFSET-OES", (GLenum) GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES, "GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES");
#endif
#if defined(GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV)
defconsti(env, "GL-MAX-FRAGMENT-INTERPOLATION-OFFSET-NV", (GLenum) GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV, "GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV");
#endif
#if defined(GL_FRAGMENT_INTERPOLATION_OFFSET_BITS)
defconsti(env, "GL-FRAGMENT-INTERPOLATION-OFFSET-BITS", (GLenum) GL_FRAGMENT_INTERPOLATION_OFFSET_BITS, "GL_FRAGMENT_INTERPOLATION_OFFSET_BITS");
#endif
#if defined(GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES)
defconsti(env, "GL-FRAGMENT-INTERPOLATION-OFFSET-BITS-OES", (GLenum) GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES, "GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES");
#endif
#if defined(GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV)
defconsti(env, "GL-FRAGMENT-PROGRAM-INTERPOLATION-OFFSET-BITS-NV", (GLenum) GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV, "GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV");
#endif
#if defined(GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET)
defconsti(env, "GL-MIN-PROGRAM-TEXTURE-GATHER-OFFSET", (GLenum) GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET, "GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET");
#endif
#if defined(GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB)
defconsti(env, "GL-MIN-PROGRAM-TEXTURE-GATHER-OFFSET-ARB", (GLenum) GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB, "GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB");
#endif
#if defined(GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV)
defconsti(env, "GL-MIN-PROGRAM-TEXTURE-GATHER-OFFSET-NV", (GLenum) GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV, "GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV");
#endif
#if defined(GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET)
defconsti(env, "GL-MAX-PROGRAM-TEXTURE-GATHER-OFFSET", (GLenum) GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET, "GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET");
#endif
#if defined(GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB)
defconsti(env, "GL-MAX-PROGRAM-TEXTURE-GATHER-OFFSET-ARB", (GLenum) GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB, "GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB");
#endif
#if defined(GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV)
defconsti(env, "GL-MAX-PROGRAM-TEXTURE-GATHER-OFFSET-NV", (GLenum) GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV, "GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV");
#endif
#if defined(GL_MAX_MESH_UNIFORM_BLOCKS_NV)
defconsti(env, "GL-MAX-MESH-UNIFORM-BLOCKS-NV", (GLenum) GL_MAX_MESH_UNIFORM_BLOCKS_NV, "GL_MAX_MESH_UNIFORM_BLOCKS_NV");
#endif
#if defined(GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV)
defconsti(env, "GL-MAX-MESH-TEXTURE-IMAGE-UNITS-NV", (GLenum) GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV, "GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV");
#endif
#if defined(GL_MAX_MESH_IMAGE_UNIFORMS_NV)
defconsti(env, "GL-MAX-MESH-IMAGE-UNIFORMS-NV", (GLenum) GL_MAX_MESH_IMAGE_UNIFORMS_NV, "GL_MAX_MESH_IMAGE_UNIFORMS_NV");
#endif
#if defined(GL_MAX_MESH_UNIFORM_COMPONENTS_NV)
defconsti(env, "GL-MAX-MESH-UNIFORM-COMPONENTS-NV", (GLenum) GL_MAX_MESH_UNIFORM_COMPONENTS_NV, "GL_MAX_MESH_UNIFORM_COMPONENTS_NV");
#endif
#if defined(GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV)
defconsti(env, "GL-MAX-MESH-ATOMIC-COUNTER-BUFFERS-NV", (GLenum) GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV, "GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV");
#endif
#if defined(GL_MAX_MESH_ATOMIC_COUNTERS_NV)
defconsti(env, "GL-MAX-MESH-ATOMIC-COUNTERS-NV", (GLenum) GL_MAX_MESH_ATOMIC_COUNTERS_NV, "GL_MAX_MESH_ATOMIC_COUNTERS_NV");
#endif
#if defined(GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV)
defconsti(env, "GL-MAX-MESH-SHADER-STORAGE-BLOCKS-NV", (GLenum) GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV, "GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV");
#endif
#if defined(GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV)
defconsti(env, "GL-MAX-COMBINED-MESH-UNIFORM-COMPONENTS-NV", (GLenum) GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV, "GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV");
#endif
#if defined(GL_MAX_TASK_UNIFORM_BLOCKS_NV)
defconsti(env, "GL-MAX-TASK-UNIFORM-BLOCKS-NV", (GLenum) GL_MAX_TASK_UNIFORM_BLOCKS_NV, "GL_MAX_TASK_UNIFORM_BLOCKS_NV");
#endif
#if defined(GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV)
defconsti(env, "GL-MAX-TASK-TEXTURE-IMAGE-UNITS-NV", (GLenum) GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV, "GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV");
#endif
#if defined(GL_MAX_TASK_IMAGE_UNIFORMS_NV)
defconsti(env, "GL-MAX-TASK-IMAGE-UNIFORMS-NV", (GLenum) GL_MAX_TASK_IMAGE_UNIFORMS_NV, "GL_MAX_TASK_IMAGE_UNIFORMS_NV");
#endif
#if defined(GL_MAX_TASK_UNIFORM_COMPONENTS_NV)
defconsti(env, "GL-MAX-TASK-UNIFORM-COMPONENTS-NV", (GLenum) GL_MAX_TASK_UNIFORM_COMPONENTS_NV, "GL_MAX_TASK_UNIFORM_COMPONENTS_NV");
#endif
#if defined(GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV)
defconsti(env, "GL-MAX-TASK-ATOMIC-COUNTER-BUFFERS-NV", (GLenum) GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV, "GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV");
#endif
#if defined(GL_MAX_TASK_ATOMIC_COUNTERS_NV)
defconsti(env, "GL-MAX-TASK-ATOMIC-COUNTERS-NV", (GLenum) GL_MAX_TASK_ATOMIC_COUNTERS_NV, "GL_MAX_TASK_ATOMIC_COUNTERS_NV");
#endif
#if defined(GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV)
defconsti(env, "GL-MAX-TASK-SHADER-STORAGE-BLOCKS-NV", (GLenum) GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV, "GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV");
#endif
#if defined(GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV)
defconsti(env, "GL-MAX-COMBINED-TASK-UNIFORM-COMPONENTS-NV", (GLenum) GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV, "GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV");
#endif
#if defined(GL_MAX_TRANSFORM_FEEDBACK_BUFFERS)
defconsti(env, "GL-MAX-TRANSFORM-FEEDBACK-BUFFERS", (GLenum) GL_MAX_TRANSFORM_FEEDBACK_BUFFERS, "GL_MAX_TRANSFORM_FEEDBACK_BUFFERS");
#endif
#if defined(GL_MAX_VERTEX_STREAMS)
defconsti(env, "GL-MAX-VERTEX-STREAMS", (GLenum) GL_MAX_VERTEX_STREAMS, "GL_MAX_VERTEX_STREAMS");
#endif
#if defined(GL_PATCH_VERTICES)
defconsti(env, "GL-PATCH-VERTICES", (GLenum) GL_PATCH_VERTICES, "GL_PATCH_VERTICES");
#endif
#if defined(GL_PATCH_VERTICES_EXT)
defconsti(env, "GL-PATCH-VERTICES-EXT", (GLenum) GL_PATCH_VERTICES_EXT, "GL_PATCH_VERTICES_EXT");
#endif
#if defined(GL_PATCH_VERTICES_OES)
defconsti(env, "GL-PATCH-VERTICES-OES", (GLenum) GL_PATCH_VERTICES_OES, "GL_PATCH_VERTICES_OES");
#endif
#if defined(GL_PATCH_DEFAULT_INNER_LEVEL)
defconsti(env, "GL-PATCH-DEFAULT-INNER-LEVEL", (GLenum) GL_PATCH_DEFAULT_INNER_LEVEL, "GL_PATCH_DEFAULT_INNER_LEVEL");
#endif
#if defined(GL_PATCH_DEFAULT_INNER_LEVEL_EXT)
defconsti(env, "GL-PATCH-DEFAULT-INNER-LEVEL-EXT", (GLenum) GL_PATCH_DEFAULT_INNER_LEVEL_EXT, "GL_PATCH_DEFAULT_INNER_LEVEL_EXT");
#endif
#if defined(GL_PATCH_DEFAULT_OUTER_LEVEL)
defconsti(env, "GL-PATCH-DEFAULT-OUTER-LEVEL", (GLenum) GL_PATCH_DEFAULT_OUTER_LEVEL, "GL_PATCH_DEFAULT_OUTER_LEVEL");
#endif
#if defined(GL_PATCH_DEFAULT_OUTER_LEVEL_EXT)
defconsti(env, "GL-PATCH-DEFAULT-OUTER-LEVEL-EXT", (GLenum) GL_PATCH_DEFAULT_OUTER_LEVEL_EXT, "GL_PATCH_DEFAULT_OUTER_LEVEL_EXT");
#endif
#if defined(GL_TESS_CONTROL_OUTPUT_VERTICES)
defconsti(env, "GL-TESS-CONTROL-OUTPUT-VERTICES", (GLenum) GL_TESS_CONTROL_OUTPUT_VERTICES, "GL_TESS_CONTROL_OUTPUT_VERTICES");
#endif
#if defined(GL_TESS_CONTROL_OUTPUT_VERTICES_EXT)
defconsti(env, "GL-TESS-CONTROL-OUTPUT-VERTICES-EXT", (GLenum) GL_TESS_CONTROL_OUTPUT_VERTICES_EXT, "GL_TESS_CONTROL_OUTPUT_VERTICES_EXT");
#endif
#if defined(GL_TESS_CONTROL_OUTPUT_VERTICES_OES)
defconsti(env, "GL-TESS-CONTROL-OUTPUT-VERTICES-OES", (GLenum) GL_TESS_CONTROL_OUTPUT_VERTICES_OES, "GL_TESS_CONTROL_OUTPUT_VERTICES_OES");
#endif
#if defined(GL_TESS_GEN_MODE)
defconsti(env, "GL-TESS-GEN-MODE", (GLenum) GL_TESS_GEN_MODE, "GL_TESS_GEN_MODE");
#endif
#if defined(GL_TESS_GEN_MODE_EXT)
defconsti(env, "GL-TESS-GEN-MODE-EXT", (GLenum) GL_TESS_GEN_MODE_EXT, "GL_TESS_GEN_MODE_EXT");
#endif
#if defined(GL_TESS_GEN_MODE_OES)
defconsti(env, "GL-TESS-GEN-MODE-OES", (GLenum) GL_TESS_GEN_MODE_OES, "GL_TESS_GEN_MODE_OES");
#endif
#if defined(GL_TESS_GEN_SPACING)
defconsti(env, "GL-TESS-GEN-SPACING", (GLenum) GL_TESS_GEN_SPACING, "GL_TESS_GEN_SPACING");
#endif
#if defined(GL_TESS_GEN_SPACING_EXT)
defconsti(env, "GL-TESS-GEN-SPACING-EXT", (GLenum) GL_TESS_GEN_SPACING_EXT, "GL_TESS_GEN_SPACING_EXT");
#endif
#if defined(GL_TESS_GEN_SPACING_OES)
defconsti(env, "GL-TESS-GEN-SPACING-OES", (GLenum) GL_TESS_GEN_SPACING_OES, "GL_TESS_GEN_SPACING_OES");
#endif
#if defined(GL_TESS_GEN_VERTEX_ORDER)
defconsti(env, "GL-TESS-GEN-VERTEX-ORDER", (GLenum) GL_TESS_GEN_VERTEX_ORDER, "GL_TESS_GEN_VERTEX_ORDER");
#endif
#if defined(GL_TESS_GEN_VERTEX_ORDER_EXT)
defconsti(env, "GL-TESS-GEN-VERTEX-ORDER-EXT", (GLenum) GL_TESS_GEN_VERTEX_ORDER_EXT, "GL_TESS_GEN_VERTEX_ORDER_EXT");
#endif
#if defined(GL_TESS_GEN_VERTEX_ORDER_OES)
defconsti(env, "GL-TESS-GEN-VERTEX-ORDER-OES", (GLenum) GL_TESS_GEN_VERTEX_ORDER_OES, "GL_TESS_GEN_VERTEX_ORDER_OES");
#endif
#if defined(GL_TESS_GEN_POINT_MODE)
defconsti(env, "GL-TESS-GEN-POINT-MODE", (GLenum) GL_TESS_GEN_POINT_MODE, "GL_TESS_GEN_POINT_MODE");
#endif
#if defined(GL_TESS_GEN_POINT_MODE_EXT)
defconsti(env, "GL-TESS-GEN-POINT-MODE-EXT", (GLenum) GL_TESS_GEN_POINT_MODE_EXT, "GL_TESS_GEN_POINT_MODE_EXT");
#endif
#if defined(GL_TESS_GEN_POINT_MODE_OES)
defconsti(env, "GL-TESS-GEN-POINT-MODE-OES", (GLenum) GL_TESS_GEN_POINT_MODE_OES, "GL_TESS_GEN_POINT_MODE_OES");
#endif
#if defined(GL_ISOLINES)
defconsti(env, "GL-ISOLINES", (GLenum) GL_ISOLINES, "GL_ISOLINES");
#endif
#if defined(GL_ISOLINES_EXT)
defconsti(env, "GL-ISOLINES-EXT", (GLenum) GL_ISOLINES_EXT, "GL_ISOLINES_EXT");
#endif
#if defined(GL_ISOLINES_OES)
defconsti(env, "GL-ISOLINES-OES", (GLenum) GL_ISOLINES_OES, "GL_ISOLINES_OES");
#endif
#if defined(GL_FRACTIONAL_ODD)
defconsti(env, "GL-FRACTIONAL-ODD", (GLenum) GL_FRACTIONAL_ODD, "GL_FRACTIONAL_ODD");
#endif
#if defined(GL_FRACTIONAL_ODD_EXT)
defconsti(env, "GL-FRACTIONAL-ODD-EXT", (GLenum) GL_FRACTIONAL_ODD_EXT, "GL_FRACTIONAL_ODD_EXT");
#endif
#if defined(GL_FRACTIONAL_ODD_OES)
defconsti(env, "GL-FRACTIONAL-ODD-OES", (GLenum) GL_FRACTIONAL_ODD_OES, "GL_FRACTIONAL_ODD_OES");
#endif
#if defined(GL_FRACTIONAL_EVEN)
defconsti(env, "GL-FRACTIONAL-EVEN", (GLenum) GL_FRACTIONAL_EVEN, "GL_FRACTIONAL_EVEN");
#endif
#if defined(GL_FRACTIONAL_EVEN_EXT)
defconsti(env, "GL-FRACTIONAL-EVEN-EXT", (GLenum) GL_FRACTIONAL_EVEN_EXT, "GL_FRACTIONAL_EVEN_EXT");
#endif
#if defined(GL_FRACTIONAL_EVEN_OES)
defconsti(env, "GL-FRACTIONAL-EVEN-OES", (GLenum) GL_FRACTIONAL_EVEN_OES, "GL_FRACTIONAL_EVEN_OES");
#endif
#if defined(GL_MAX_PATCH_VERTICES)
defconsti(env, "GL-MAX-PATCH-VERTICES", (GLenum) GL_MAX_PATCH_VERTICES, "GL_MAX_PATCH_VERTICES");
#endif
#if defined(GL_MAX_PATCH_VERTICES_EXT)
defconsti(env, "GL-MAX-PATCH-VERTICES-EXT", (GLenum) GL_MAX_PATCH_VERTICES_EXT, "GL_MAX_PATCH_VERTICES_EXT");
#endif
#if defined(GL_MAX_PATCH_VERTICES_OES)
defconsti(env, "GL-MAX-PATCH-VERTICES-OES", (GLenum) GL_MAX_PATCH_VERTICES_OES, "GL_MAX_PATCH_VERTICES_OES");
#endif
#if defined(GL_MAX_TESS_GEN_LEVEL)
defconsti(env, "GL-MAX-TESS-GEN-LEVEL", (GLenum) GL_MAX_TESS_GEN_LEVEL, "GL_MAX_TESS_GEN_LEVEL");
#endif
#if defined(GL_MAX_TESS_GEN_LEVEL_EXT)
defconsti(env, "GL-MAX-TESS-GEN-LEVEL-EXT", (GLenum) GL_MAX_TESS_GEN_LEVEL_EXT, "GL_MAX_TESS_GEN_LEVEL_EXT");
#endif
#if defined(GL_MAX_TESS_GEN_LEVEL_OES)
defconsti(env, "GL-MAX-TESS-GEN-LEVEL-OES", (GLenum) GL_MAX_TESS_GEN_LEVEL_OES, "GL_MAX_TESS_GEN_LEVEL_OES");
#endif
#if defined(GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-TESS-CONTROL-UNIFORM-COMPONENTS", (GLenum) GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS, "GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT)
defconsti(env, "GL-MAX-TESS-CONTROL-UNIFORM-COMPONENTS-EXT", (GLenum) GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT, "GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES)
defconsti(env, "GL-MAX-TESS-CONTROL-UNIFORM-COMPONENTS-OES", (GLenum) GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES, "GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES");
#endif
#if defined(GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-TESS-EVALUATION-UNIFORM-COMPONENTS", (GLenum) GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS, "GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT)
defconsti(env, "GL-MAX-TESS-EVALUATION-UNIFORM-COMPONENTS-EXT", (GLenum) GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT, "GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES)
defconsti(env, "GL-MAX-TESS-EVALUATION-UNIFORM-COMPONENTS-OES", (GLenum) GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES, "GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES");
#endif
#if defined(GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-TESS-CONTROL-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS, "GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT)
defconsti(env, "GL-MAX-TESS-CONTROL-TEXTURE-IMAGE-UNITS-EXT", (GLenum) GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT, "GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT");
#endif
#if defined(GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES)
defconsti(env, "GL-MAX-TESS-CONTROL-TEXTURE-IMAGE-UNITS-OES", (GLenum) GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES, "GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES");
#endif
#if defined(GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-TESS-EVALUATION-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS, "GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT)
defconsti(env, "GL-MAX-TESS-EVALUATION-TEXTURE-IMAGE-UNITS-EXT", (GLenum) GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT, "GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT");
#endif
#if defined(GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES)
defconsti(env, "GL-MAX-TESS-EVALUATION-TEXTURE-IMAGE-UNITS-OES", (GLenum) GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES, "GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES");
#endif
#if defined(GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS)
defconsti(env, "GL-MAX-TESS-CONTROL-OUTPUT-COMPONENTS", (GLenum) GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS, "GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT)
defconsti(env, "GL-MAX-TESS-CONTROL-OUTPUT-COMPONENTS-EXT", (GLenum) GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT, "GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES)
defconsti(env, "GL-MAX-TESS-CONTROL-OUTPUT-COMPONENTS-OES", (GLenum) GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES, "GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES");
#endif
#if defined(GL_MAX_TESS_PATCH_COMPONENTS)
defconsti(env, "GL-MAX-TESS-PATCH-COMPONENTS", (GLenum) GL_MAX_TESS_PATCH_COMPONENTS, "GL_MAX_TESS_PATCH_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_PATCH_COMPONENTS_EXT)
defconsti(env, "GL-MAX-TESS-PATCH-COMPONENTS-EXT", (GLenum) GL_MAX_TESS_PATCH_COMPONENTS_EXT, "GL_MAX_TESS_PATCH_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_TESS_PATCH_COMPONENTS_OES)
defconsti(env, "GL-MAX-TESS-PATCH-COMPONENTS-OES", (GLenum) GL_MAX_TESS_PATCH_COMPONENTS_OES, "GL_MAX_TESS_PATCH_COMPONENTS_OES");
#endif
#if defined(GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS)
defconsti(env, "GL-MAX-TESS-CONTROL-TOTAL-OUTPUT-COMPONENTS", (GLenum) GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS, "GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT)
defconsti(env, "GL-MAX-TESS-CONTROL-TOTAL-OUTPUT-COMPONENTS-EXT", (GLenum) GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT, "GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES)
defconsti(env, "GL-MAX-TESS-CONTROL-TOTAL-OUTPUT-COMPONENTS-OES", (GLenum) GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES, "GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES");
#endif
#if defined(GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS)
defconsti(env, "GL-MAX-TESS-EVALUATION-OUTPUT-COMPONENTS", (GLenum) GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS, "GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT)
defconsti(env, "GL-MAX-TESS-EVALUATION-OUTPUT-COMPONENTS-EXT", (GLenum) GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT, "GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES)
defconsti(env, "GL-MAX-TESS-EVALUATION-OUTPUT-COMPONENTS-OES", (GLenum) GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES, "GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES");
#endif
#if defined(GL_TESS_EVALUATION_SHADER)
defconsti(env, "GL-TESS-EVALUATION-SHADER", (GLenum) GL_TESS_EVALUATION_SHADER, "GL_TESS_EVALUATION_SHADER");
#endif
#if defined(GL_TESS_EVALUATION_SHADER_EXT)
defconsti(env, "GL-TESS-EVALUATION-SHADER-EXT", (GLenum) GL_TESS_EVALUATION_SHADER_EXT, "GL_TESS_EVALUATION_SHADER_EXT");
#endif
#if defined(GL_TESS_EVALUATION_SHADER_OES)
defconsti(env, "GL-TESS-EVALUATION-SHADER-OES", (GLenum) GL_TESS_EVALUATION_SHADER_OES, "GL_TESS_EVALUATION_SHADER_OES");
#endif
#if defined(GL_TESS_CONTROL_SHADER)
defconsti(env, "GL-TESS-CONTROL-SHADER", (GLenum) GL_TESS_CONTROL_SHADER, "GL_TESS_CONTROL_SHADER");
#endif
#if defined(GL_TESS_CONTROL_SHADER_EXT)
defconsti(env, "GL-TESS-CONTROL-SHADER-EXT", (GLenum) GL_TESS_CONTROL_SHADER_EXT, "GL_TESS_CONTROL_SHADER_EXT");
#endif
#if defined(GL_TESS_CONTROL_SHADER_OES)
defconsti(env, "GL-TESS-CONTROL-SHADER-OES", (GLenum) GL_TESS_CONTROL_SHADER_OES, "GL_TESS_CONTROL_SHADER_OES");
#endif
#if defined(GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-TESS-CONTROL-UNIFORM-BLOCKS", (GLenum) GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS, "GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT)
defconsti(env, "GL-MAX-TESS-CONTROL-UNIFORM-BLOCKS-EXT", (GLenum) GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT, "GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT");
#endif
#if defined(GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES)
defconsti(env, "GL-MAX-TESS-CONTROL-UNIFORM-BLOCKS-OES", (GLenum) GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES, "GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES");
#endif
#if defined(GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-TESS-EVALUATION-UNIFORM-BLOCKS", (GLenum) GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS, "GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT)
defconsti(env, "GL-MAX-TESS-EVALUATION-UNIFORM-BLOCKS-EXT", (GLenum) GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT, "GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT");
#endif
#if defined(GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES)
defconsti(env, "GL-MAX-TESS-EVALUATION-UNIFORM-BLOCKS-OES", (GLenum) GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES, "GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_BPTC_UNORM)
defconsti(env, "GL-COMPRESSED-RGBA-BPTC-UNORM", (GLenum) GL_COMPRESSED_RGBA_BPTC_UNORM, "GL_COMPRESSED_RGBA_BPTC_UNORM");
#endif
#if defined(GL_COMPRESSED_RGBA_BPTC_UNORM_ARB)
defconsti(env, "GL-COMPRESSED-RGBA-BPTC-UNORM-ARB", (GLenum) GL_COMPRESSED_RGBA_BPTC_UNORM_ARB, "GL_COMPRESSED_RGBA_BPTC_UNORM_ARB");
#endif
#if defined(GL_COMPRESSED_RGBA_BPTC_UNORM_EXT)
defconsti(env, "GL-COMPRESSED-RGBA-BPTC-UNORM-EXT", (GLenum) GL_COMPRESSED_RGBA_BPTC_UNORM_EXT, "GL_COMPRESSED_RGBA_BPTC_UNORM_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-BPTC-UNORM", (GLenum) GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM, "GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-BPTC-UNORM-ARB", (GLenum) GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB, "GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-BPTC-UNORM-EXT", (GLenum) GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT, "GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT");
#endif
#if defined(GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT)
defconsti(env, "GL-COMPRESSED-RGB-BPTC-SIGNED-FLOAT", (GLenum) GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT, "GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT");
#endif
#if defined(GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB)
defconsti(env, "GL-COMPRESSED-RGB-BPTC-SIGNED-FLOAT-ARB", (GLenum) GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB, "GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB");
#endif
#if defined(GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT)
defconsti(env, "GL-COMPRESSED-RGB-BPTC-SIGNED-FLOAT-EXT", (GLenum) GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT, "GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT");
#endif
#if defined(GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT)
defconsti(env, "GL-COMPRESSED-RGB-BPTC-UNSIGNED-FLOAT", (GLenum) GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT, "GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT");
#endif
#if defined(GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB)
defconsti(env, "GL-COMPRESSED-RGB-BPTC-UNSIGNED-FLOAT-ARB", (GLenum) GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB, "GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB");
#endif
#if defined(GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT)
defconsti(env, "GL-COMPRESSED-RGB-BPTC-UNSIGNED-FLOAT-EXT", (GLenum) GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT, "GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT");
#endif
#if defined(GL_COVERAGE_COMPONENT_NV)
defconsti(env, "GL-COVERAGE-COMPONENT-NV", (GLenum) GL_COVERAGE_COMPONENT_NV, "GL_COVERAGE_COMPONENT_NV");
#endif
#if defined(GL_COVERAGE_COMPONENT4_NV)
defconsti(env, "GL-COVERAGE-COMPONENT4-NV", (GLenum) GL_COVERAGE_COMPONENT4_NV, "GL_COVERAGE_COMPONENT4_NV");
#endif
#if defined(GL_COVERAGE_ATTACHMENT_NV)
defconsti(env, "GL-COVERAGE-ATTACHMENT-NV", (GLenum) GL_COVERAGE_ATTACHMENT_NV, "GL_COVERAGE_ATTACHMENT_NV");
#endif
#if defined(GL_COVERAGE_BUFFERS_NV)
defconsti(env, "GL-COVERAGE-BUFFERS-NV", (GLenum) GL_COVERAGE_BUFFERS_NV, "GL_COVERAGE_BUFFERS_NV");
#endif
#if defined(GL_COVERAGE_SAMPLES_NV)
defconsti(env, "GL-COVERAGE-SAMPLES-NV", (GLenum) GL_COVERAGE_SAMPLES_NV, "GL_COVERAGE_SAMPLES_NV");
#endif
#if defined(GL_COVERAGE_ALL_FRAGMENTS_NV)
defconsti(env, "GL-COVERAGE-ALL-FRAGMENTS-NV", (GLenum) GL_COVERAGE_ALL_FRAGMENTS_NV, "GL_COVERAGE_ALL_FRAGMENTS_NV");
#endif
#if defined(GL_COVERAGE_EDGE_FRAGMENTS_NV)
defconsti(env, "GL-COVERAGE-EDGE-FRAGMENTS-NV", (GLenum) GL_COVERAGE_EDGE_FRAGMENTS_NV, "GL_COVERAGE_EDGE_FRAGMENTS_NV");
#endif
#if defined(GL_COVERAGE_AUTOMATIC_NV)
defconsti(env, "GL-COVERAGE-AUTOMATIC-NV", (GLenum) GL_COVERAGE_AUTOMATIC_NV, "GL_COVERAGE_AUTOMATIC_NV");
#endif
#if defined(GL_INCLUSIVE_EXT)
defconsti(env, "GL-INCLUSIVE-EXT", (GLenum) GL_INCLUSIVE_EXT, "GL_INCLUSIVE_EXT");
#endif
#if defined(GL_EXCLUSIVE_EXT)
defconsti(env, "GL-EXCLUSIVE-EXT", (GLenum) GL_EXCLUSIVE_EXT, "GL_EXCLUSIVE_EXT");
#endif
#if defined(GL_WINDOW_RECTANGLE_EXT)
defconsti(env, "GL-WINDOW-RECTANGLE-EXT", (GLenum) GL_WINDOW_RECTANGLE_EXT, "GL_WINDOW_RECTANGLE_EXT");
#endif
#if defined(GL_WINDOW_RECTANGLE_MODE_EXT)
defconsti(env, "GL-WINDOW-RECTANGLE-MODE-EXT", (GLenum) GL_WINDOW_RECTANGLE_MODE_EXT, "GL_WINDOW_RECTANGLE_MODE_EXT");
#endif
#if defined(GL_MAX_WINDOW_RECTANGLES_EXT)
defconsti(env, "GL-MAX-WINDOW-RECTANGLES-EXT", (GLenum) GL_MAX_WINDOW_RECTANGLES_EXT, "GL_MAX_WINDOW_RECTANGLES_EXT");
#endif
#if defined(GL_NUM_WINDOW_RECTANGLES_EXT)
defconsti(env, "GL-NUM-WINDOW-RECTANGLES-EXT", (GLenum) GL_NUM_WINDOW_RECTANGLES_EXT, "GL_NUM_WINDOW_RECTANGLES_EXT");
#endif
#if defined(GL_BUFFER_GPU_ADDRESS_NV)
defconsti(env, "GL-BUFFER-GPU-ADDRESS-NV", (GLenum) GL_BUFFER_GPU_ADDRESS_NV, "GL_BUFFER_GPU_ADDRESS_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-UNIFIED-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV, "GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV");
#endif
#if defined(GL_ELEMENT_ARRAY_UNIFIED_NV)
defconsti(env, "GL-ELEMENT-ARRAY-UNIFIED-NV", (GLenum) GL_ELEMENT_ARRAY_UNIFIED_NV, "GL_ELEMENT_ARRAY_UNIFIED_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-ADDRESS-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV, "GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV");
#endif
#if defined(GL_VERTEX_ARRAY_ADDRESS_NV)
defconsti(env, "GL-VERTEX-ARRAY-ADDRESS-NV", (GLenum) GL_VERTEX_ARRAY_ADDRESS_NV, "GL_VERTEX_ARRAY_ADDRESS_NV");
#endif
#if defined(GL_NORMAL_ARRAY_ADDRESS_NV)
defconsti(env, "GL-NORMAL-ARRAY-ADDRESS-NV", (GLenum) GL_NORMAL_ARRAY_ADDRESS_NV, "GL_NORMAL_ARRAY_ADDRESS_NV");
#endif
#if defined(GL_COLOR_ARRAY_ADDRESS_NV)
defconsti(env, "GL-COLOR-ARRAY-ADDRESS-NV", (GLenum) GL_COLOR_ARRAY_ADDRESS_NV, "GL_COLOR_ARRAY_ADDRESS_NV");
#endif
#if defined(GL_INDEX_ARRAY_ADDRESS_NV)
defconsti(env, "GL-INDEX-ARRAY-ADDRESS-NV", (GLenum) GL_INDEX_ARRAY_ADDRESS_NV, "GL_INDEX_ARRAY_ADDRESS_NV");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_ADDRESS_NV)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-ADDRESS-NV", (GLenum) GL_TEXTURE_COORD_ARRAY_ADDRESS_NV, "GL_TEXTURE_COORD_ARRAY_ADDRESS_NV");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_ADDRESS_NV)
defconsti(env, "GL-EDGE-FLAG-ARRAY-ADDRESS-NV", (GLenum) GL_EDGE_FLAG_ARRAY_ADDRESS_NV, "GL_EDGE_FLAG_ARRAY_ADDRESS_NV");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-ADDRESS-NV", (GLenum) GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV, "GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV");
#endif
#if defined(GL_FOG_COORD_ARRAY_ADDRESS_NV)
defconsti(env, "GL-FOG-COORD-ARRAY-ADDRESS-NV", (GLenum) GL_FOG_COORD_ARRAY_ADDRESS_NV, "GL_FOG_COORD_ARRAY_ADDRESS_NV");
#endif
#if defined(GL_ELEMENT_ARRAY_ADDRESS_NV)
defconsti(env, "GL-ELEMENT-ARRAY-ADDRESS-NV", (GLenum) GL_ELEMENT_ARRAY_ADDRESS_NV, "GL_ELEMENT_ARRAY_ADDRESS_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-LENGTH-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV, "GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV");
#endif
#if defined(GL_VERTEX_ARRAY_LENGTH_NV)
defconsti(env, "GL-VERTEX-ARRAY-LENGTH-NV", (GLenum) GL_VERTEX_ARRAY_LENGTH_NV, "GL_VERTEX_ARRAY_LENGTH_NV");
#endif
#if defined(GL_NORMAL_ARRAY_LENGTH_NV)
defconsti(env, "GL-NORMAL-ARRAY-LENGTH-NV", (GLenum) GL_NORMAL_ARRAY_LENGTH_NV, "GL_NORMAL_ARRAY_LENGTH_NV");
#endif
#if defined(GL_COLOR_ARRAY_LENGTH_NV)
defconsti(env, "GL-COLOR-ARRAY-LENGTH-NV", (GLenum) GL_COLOR_ARRAY_LENGTH_NV, "GL_COLOR_ARRAY_LENGTH_NV");
#endif
#if defined(GL_INDEX_ARRAY_LENGTH_NV)
defconsti(env, "GL-INDEX-ARRAY-LENGTH-NV", (GLenum) GL_INDEX_ARRAY_LENGTH_NV, "GL_INDEX_ARRAY_LENGTH_NV");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_LENGTH_NV)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-LENGTH-NV", (GLenum) GL_TEXTURE_COORD_ARRAY_LENGTH_NV, "GL_TEXTURE_COORD_ARRAY_LENGTH_NV");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_LENGTH_NV)
defconsti(env, "GL-EDGE-FLAG-ARRAY-LENGTH-NV", (GLenum) GL_EDGE_FLAG_ARRAY_LENGTH_NV, "GL_EDGE_FLAG_ARRAY_LENGTH_NV");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_LENGTH_NV)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-LENGTH-NV", (GLenum) GL_SECONDARY_COLOR_ARRAY_LENGTH_NV, "GL_SECONDARY_COLOR_ARRAY_LENGTH_NV");
#endif
#if defined(GL_FOG_COORD_ARRAY_LENGTH_NV)
defconsti(env, "GL-FOG-COORD-ARRAY-LENGTH-NV", (GLenum) GL_FOG_COORD_ARRAY_LENGTH_NV, "GL_FOG_COORD_ARRAY_LENGTH_NV");
#endif
#if defined(GL_ELEMENT_ARRAY_LENGTH_NV)
defconsti(env, "GL-ELEMENT-ARRAY-LENGTH-NV", (GLenum) GL_ELEMENT_ARRAY_LENGTH_NV, "GL_ELEMENT_ARRAY_LENGTH_NV");
#endif
#if defined(GL_GPU_ADDRESS_NV)
defconsti(env, "GL-GPU-ADDRESS-NV", (GLenum) GL_GPU_ADDRESS_NV, "GL_GPU_ADDRESS_NV");
#endif
#if defined(GL_MAX_SHADER_BUFFER_ADDRESS_NV)
defconsti(env, "GL-MAX-SHADER-BUFFER-ADDRESS-NV", (GLenum) GL_MAX_SHADER_BUFFER_ADDRESS_NV, "GL_MAX_SHADER_BUFFER_ADDRESS_NV");
#endif
#if defined(GL_COPY_READ_BUFFER)
defconsti(env, "GL-COPY-READ-BUFFER", (GLenum) GL_COPY_READ_BUFFER, "GL_COPY_READ_BUFFER");
#endif
#if defined(GL_COPY_READ_BUFFER_NV)
defconsti(env, "GL-COPY-READ-BUFFER-NV", (GLenum) GL_COPY_READ_BUFFER_NV, "GL_COPY_READ_BUFFER_NV");
#endif
#if defined(GL_COPY_READ_BUFFER_BINDING)
defconsti(env, "GL-COPY-READ-BUFFER-BINDING", (GLenum) GL_COPY_READ_BUFFER_BINDING, "GL_COPY_READ_BUFFER_BINDING");
#endif
#if defined(GL_COPY_WRITE_BUFFER)
defconsti(env, "GL-COPY-WRITE-BUFFER", (GLenum) GL_COPY_WRITE_BUFFER, "GL_COPY_WRITE_BUFFER");
#endif
#if defined(GL_COPY_WRITE_BUFFER_NV)
defconsti(env, "GL-COPY-WRITE-BUFFER-NV", (GLenum) GL_COPY_WRITE_BUFFER_NV, "GL_COPY_WRITE_BUFFER_NV");
#endif
#if defined(GL_COPY_WRITE_BUFFER_BINDING)
defconsti(env, "GL-COPY-WRITE-BUFFER-BINDING", (GLenum) GL_COPY_WRITE_BUFFER_BINDING, "GL_COPY_WRITE_BUFFER_BINDING");
#endif
#if defined(GL_MAX_IMAGE_UNITS)
defconsti(env, "GL-MAX-IMAGE-UNITS", (GLenum) GL_MAX_IMAGE_UNITS, "GL_MAX_IMAGE_UNITS");
#endif
#if defined(GL_MAX_IMAGE_UNITS_EXT)
defconsti(env, "GL-MAX-IMAGE-UNITS-EXT", (GLenum) GL_MAX_IMAGE_UNITS_EXT, "GL_MAX_IMAGE_UNITS_EXT");
#endif
#if defined(GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS)
defconsti(env, "GL-MAX-COMBINED-IMAGE-UNITS-AND-FRAGMENT-OUTPUTS", (GLenum) GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS, "GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS");
#endif
#if defined(GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT)
defconsti(env, "GL-MAX-COMBINED-IMAGE-UNITS-AND-FRAGMENT-OUTPUTS-EXT", (GLenum) GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT, "GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT");
#endif
#if defined(GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES)
defconsti(env, "GL-MAX-COMBINED-SHADER-OUTPUT-RESOURCES", (GLenum) GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES, "GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES");
#endif
#if defined(GL_IMAGE_BINDING_NAME)
defconsti(env, "GL-IMAGE-BINDING-NAME", (GLenum) GL_IMAGE_BINDING_NAME, "GL_IMAGE_BINDING_NAME");
#endif
#if defined(GL_IMAGE_BINDING_NAME_EXT)
defconsti(env, "GL-IMAGE-BINDING-NAME-EXT", (GLenum) GL_IMAGE_BINDING_NAME_EXT, "GL_IMAGE_BINDING_NAME_EXT");
#endif
#if defined(GL_IMAGE_BINDING_LEVEL)
defconsti(env, "GL-IMAGE-BINDING-LEVEL", (GLenum) GL_IMAGE_BINDING_LEVEL, "GL_IMAGE_BINDING_LEVEL");
#endif
#if defined(GL_IMAGE_BINDING_LEVEL_EXT)
defconsti(env, "GL-IMAGE-BINDING-LEVEL-EXT", (GLenum) GL_IMAGE_BINDING_LEVEL_EXT, "GL_IMAGE_BINDING_LEVEL_EXT");
#endif
#if defined(GL_IMAGE_BINDING_LAYERED)
defconsti(env, "GL-IMAGE-BINDING-LAYERED", (GLenum) GL_IMAGE_BINDING_LAYERED, "GL_IMAGE_BINDING_LAYERED");
#endif
#if defined(GL_IMAGE_BINDING_LAYERED_EXT)
defconsti(env, "GL-IMAGE-BINDING-LAYERED-EXT", (GLenum) GL_IMAGE_BINDING_LAYERED_EXT, "GL_IMAGE_BINDING_LAYERED_EXT");
#endif
#if defined(GL_IMAGE_BINDING_LAYER)
defconsti(env, "GL-IMAGE-BINDING-LAYER", (GLenum) GL_IMAGE_BINDING_LAYER, "GL_IMAGE_BINDING_LAYER");
#endif
#if defined(GL_IMAGE_BINDING_LAYER_EXT)
defconsti(env, "GL-IMAGE-BINDING-LAYER-EXT", (GLenum) GL_IMAGE_BINDING_LAYER_EXT, "GL_IMAGE_BINDING_LAYER_EXT");
#endif
#if defined(GL_IMAGE_BINDING_ACCESS)
defconsti(env, "GL-IMAGE-BINDING-ACCESS", (GLenum) GL_IMAGE_BINDING_ACCESS, "GL_IMAGE_BINDING_ACCESS");
#endif
#if defined(GL_IMAGE_BINDING_ACCESS_EXT)
defconsti(env, "GL-IMAGE-BINDING-ACCESS-EXT", (GLenum) GL_IMAGE_BINDING_ACCESS_EXT, "GL_IMAGE_BINDING_ACCESS_EXT");
#endif
#if defined(GL_DRAW_INDIRECT_BUFFER)
defconsti(env, "GL-DRAW-INDIRECT-BUFFER", (GLenum) GL_DRAW_INDIRECT_BUFFER, "GL_DRAW_INDIRECT_BUFFER");
#endif
#if defined(GL_DRAW_INDIRECT_UNIFIED_NV)
defconsti(env, "GL-DRAW-INDIRECT-UNIFIED-NV", (GLenum) GL_DRAW_INDIRECT_UNIFIED_NV, "GL_DRAW_INDIRECT_UNIFIED_NV");
#endif
#if defined(GL_DRAW_INDIRECT_ADDRESS_NV)
defconsti(env, "GL-DRAW-INDIRECT-ADDRESS-NV", (GLenum) GL_DRAW_INDIRECT_ADDRESS_NV, "GL_DRAW_INDIRECT_ADDRESS_NV");
#endif
#if defined(GL_DRAW_INDIRECT_LENGTH_NV)
defconsti(env, "GL-DRAW-INDIRECT-LENGTH-NV", (GLenum) GL_DRAW_INDIRECT_LENGTH_NV, "GL_DRAW_INDIRECT_LENGTH_NV");
#endif
#if defined(GL_DRAW_INDIRECT_BUFFER_BINDING)
defconsti(env, "GL-DRAW-INDIRECT-BUFFER-BINDING", (GLenum) GL_DRAW_INDIRECT_BUFFER_BINDING, "GL_DRAW_INDIRECT_BUFFER_BINDING");
#endif
#if defined(GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV)
defconsti(env, "GL-MAX-PROGRAM-SUBROUTINE-PARAMETERS-NV", (GLenum) GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV, "GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV");
#endif
#if defined(GL_MAX_PROGRAM_SUBROUTINE_NUM_NV)
defconsti(env, "GL-MAX-PROGRAM-SUBROUTINE-NUM-NV", (GLenum) GL_MAX_PROGRAM_SUBROUTINE_NUM_NV, "GL_MAX_PROGRAM_SUBROUTINE_NUM_NV");
#endif
#if defined(GL_DOUBLE_MAT2)
defconsti(env, "GL-DOUBLE-MAT2", (GLenum) GL_DOUBLE_MAT2, "GL_DOUBLE_MAT2");
#endif
#if defined(GL_DOUBLE_MAT2_EXT)
defconsti(env, "GL-DOUBLE-MAT2-EXT", (GLenum) GL_DOUBLE_MAT2_EXT, "GL_DOUBLE_MAT2_EXT");
#endif
#if defined(GL_DOUBLE_MAT3)
defconsti(env, "GL-DOUBLE-MAT3", (GLenum) GL_DOUBLE_MAT3, "GL_DOUBLE_MAT3");
#endif
#if defined(GL_DOUBLE_MAT3_EXT)
defconsti(env, "GL-DOUBLE-MAT3-EXT", (GLenum) GL_DOUBLE_MAT3_EXT, "GL_DOUBLE_MAT3_EXT");
#endif
#if defined(GL_DOUBLE_MAT4)
defconsti(env, "GL-DOUBLE-MAT4", (GLenum) GL_DOUBLE_MAT4, "GL_DOUBLE_MAT4");
#endif
#if defined(GL_DOUBLE_MAT4_EXT)
defconsti(env, "GL-DOUBLE-MAT4-EXT", (GLenum) GL_DOUBLE_MAT4_EXT, "GL_DOUBLE_MAT4_EXT");
#endif
#if defined(GL_DOUBLE_MAT2x3)
defconsti(env, "GL-DOUBLE-MAT2x3", (GLenum) GL_DOUBLE_MAT2x3, "GL_DOUBLE_MAT2x3");
#endif
#if defined(GL_DOUBLE_MAT2x3_EXT)
defconsti(env, "GL-DOUBLE-MAT2x3-EXT", (GLenum) GL_DOUBLE_MAT2x3_EXT, "GL_DOUBLE_MAT2x3_EXT");
#endif
#if defined(GL_DOUBLE_MAT2x4)
defconsti(env, "GL-DOUBLE-MAT2x4", (GLenum) GL_DOUBLE_MAT2x4, "GL_DOUBLE_MAT2x4");
#endif
#if defined(GL_DOUBLE_MAT2x4_EXT)
defconsti(env, "GL-DOUBLE-MAT2x4-EXT", (GLenum) GL_DOUBLE_MAT2x4_EXT, "GL_DOUBLE_MAT2x4_EXT");
#endif
#if defined(GL_DOUBLE_MAT3x2)
defconsti(env, "GL-DOUBLE-MAT3x2", (GLenum) GL_DOUBLE_MAT3x2, "GL_DOUBLE_MAT3x2");
#endif
#if defined(GL_DOUBLE_MAT3x2_EXT)
defconsti(env, "GL-DOUBLE-MAT3x2-EXT", (GLenum) GL_DOUBLE_MAT3x2_EXT, "GL_DOUBLE_MAT3x2_EXT");
#endif
#if defined(GL_DOUBLE_MAT3x4)
defconsti(env, "GL-DOUBLE-MAT3x4", (GLenum) GL_DOUBLE_MAT3x4, "GL_DOUBLE_MAT3x4");
#endif
#if defined(GL_DOUBLE_MAT3x4_EXT)
defconsti(env, "GL-DOUBLE-MAT3x4-EXT", (GLenum) GL_DOUBLE_MAT3x4_EXT, "GL_DOUBLE_MAT3x4_EXT");
#endif
#if defined(GL_DOUBLE_MAT4x2)
defconsti(env, "GL-DOUBLE-MAT4x2", (GLenum) GL_DOUBLE_MAT4x2, "GL_DOUBLE_MAT4x2");
#endif
#if defined(GL_DOUBLE_MAT4x2_EXT)
defconsti(env, "GL-DOUBLE-MAT4x2-EXT", (GLenum) GL_DOUBLE_MAT4x2_EXT, "GL_DOUBLE_MAT4x2_EXT");
#endif
#if defined(GL_DOUBLE_MAT4x3)
defconsti(env, "GL-DOUBLE-MAT4x3", (GLenum) GL_DOUBLE_MAT4x3, "GL_DOUBLE_MAT4x3");
#endif
#if defined(GL_DOUBLE_MAT4x3_EXT)
defconsti(env, "GL-DOUBLE-MAT4x3-EXT", (GLenum) GL_DOUBLE_MAT4x3_EXT, "GL_DOUBLE_MAT4x3_EXT");
#endif
#if defined(GL_VERTEX_BINDING_BUFFER)
defconsti(env, "GL-VERTEX-BINDING-BUFFER", (GLenum) GL_VERTEX_BINDING_BUFFER, "GL_VERTEX_BINDING_BUFFER");
#endif
#if defined(GL_MALI_SHADER_BINARY_ARM)
defconsti(env, "GL-MALI-SHADER-BINARY-ARM", (GLenum) GL_MALI_SHADER_BINARY_ARM, "GL_MALI_SHADER_BINARY_ARM");
#endif
#if defined(GL_MALI_PROGRAM_BINARY_ARM)
defconsti(env, "GL-MALI-PROGRAM-BINARY-ARM", (GLenum) GL_MALI_PROGRAM_BINARY_ARM, "GL_MALI_PROGRAM_BINARY_ARM");
#endif
#if defined(GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT)
defconsti(env, "GL-MAX-SHADER-PIXEL-LOCAL-STORAGE-FAST-SIZE-EXT", (GLenum) GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT, "GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT");
#endif
#if defined(GL_SHADER_PIXEL_LOCAL_STORAGE_EXT)
defconsti(env, "GL-SHADER-PIXEL-LOCAL-STORAGE-EXT", (GLenum) GL_SHADER_PIXEL_LOCAL_STORAGE_EXT, "GL_SHADER_PIXEL_LOCAL_STORAGE_EXT");
#endif
#if defined(GL_FETCH_PER_SAMPLE_ARM)
defconsti(env, "GL-FETCH-PER-SAMPLE-ARM", (GLenum) GL_FETCH_PER_SAMPLE_ARM, "GL_FETCH_PER_SAMPLE_ARM");
#endif
#if defined(GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM)
defconsti(env, "GL-FRAGMENT-SHADER-FRAMEBUFFER-FETCH-MRT-ARM", (GLenum) GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM, "GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM");
#endif
#if defined(GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT)
defconsti(env, "GL-MAX-SHADER-PIXEL-LOCAL-STORAGE-SIZE-EXT", (GLenum) GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT, "GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT");
#endif
#if defined(GL_TEXTURE_ASTC_DECODE_PRECISION_EXT)
defconsti(env, "GL-TEXTURE-ASTC-DECODE-PRECISION-EXT", (GLenum) GL_TEXTURE_ASTC_DECODE_PRECISION_EXT, "GL_TEXTURE_ASTC_DECODE_PRECISION_EXT");
#endif
#if defined(GL_TEXTURE_UNNORMALIZED_COORDINATES_ARM)
defconsti(env, "GL-TEXTURE-UNNORMALIZED-COORDINATES-ARM", (GLenum) GL_TEXTURE_UNNORMALIZED_COORDINATES_ARM, "GL_TEXTURE_UNNORMALIZED_COORDINATES_ARM");
#endif
#if defined(GL_RED_SNORM)
defconsti(env, "GL-RED-SNORM", (GLenum) GL_RED_SNORM, "GL_RED_SNORM");
#endif
#if defined(GL_RG_SNORM)
defconsti(env, "GL-RG-SNORM", (GLenum) GL_RG_SNORM, "GL_RG_SNORM");
#endif
#if defined(GL_RGB_SNORM)
defconsti(env, "GL-RGB-SNORM", (GLenum) GL_RGB_SNORM, "GL_RGB_SNORM");
#endif
#if defined(GL_RGBA_SNORM)
defconsti(env, "GL-RGBA-SNORM", (GLenum) GL_RGBA_SNORM, "GL_RGBA_SNORM");
#endif
#if defined(GL_R8_SNORM)
defconsti(env, "GL-R8-SNORM", (GLenum) GL_R8_SNORM, "GL_R8_SNORM");
#endif
#if defined(GL_RG8_SNORM)
defconsti(env, "GL-RG8-SNORM", (GLenum) GL_RG8_SNORM, "GL_RG8_SNORM");
#endif
#if defined(GL_RGB8_SNORM)
defconsti(env, "GL-RGB8-SNORM", (GLenum) GL_RGB8_SNORM, "GL_RGB8_SNORM");
#endif
#if defined(GL_RGBA8_SNORM)
defconsti(env, "GL-RGBA8-SNORM", (GLenum) GL_RGBA8_SNORM, "GL_RGBA8_SNORM");
#endif
#if defined(GL_R16_SNORM)
defconsti(env, "GL-R16-SNORM", (GLenum) GL_R16_SNORM, "GL_R16_SNORM");
#endif
#if defined(GL_R16_SNORM_EXT)
defconsti(env, "GL-R16-SNORM-EXT", (GLenum) GL_R16_SNORM_EXT, "GL_R16_SNORM_EXT");
#endif
#if defined(GL_RG16_SNORM)
defconsti(env, "GL-RG16-SNORM", (GLenum) GL_RG16_SNORM, "GL_RG16_SNORM");
#endif
#if defined(GL_RG16_SNORM_EXT)
defconsti(env, "GL-RG16-SNORM-EXT", (GLenum) GL_RG16_SNORM_EXT, "GL_RG16_SNORM_EXT");
#endif
#if defined(GL_RGB16_SNORM)
defconsti(env, "GL-RGB16-SNORM", (GLenum) GL_RGB16_SNORM, "GL_RGB16_SNORM");
#endif
#if defined(GL_RGB16_SNORM_EXT)
defconsti(env, "GL-RGB16-SNORM-EXT", (GLenum) GL_RGB16_SNORM_EXT, "GL_RGB16_SNORM_EXT");
#endif
#if defined(GL_RGBA16_SNORM)
defconsti(env, "GL-RGBA16-SNORM", (GLenum) GL_RGBA16_SNORM, "GL_RGBA16_SNORM");
#endif
#if defined(GL_RGBA16_SNORM_EXT)
defconsti(env, "GL-RGBA16-SNORM-EXT", (GLenum) GL_RGBA16_SNORM_EXT, "GL_RGBA16_SNORM_EXT");
#endif
#if defined(GL_SIGNED_NORMALIZED)
defconsti(env, "GL-SIGNED-NORMALIZED", (GLenum) GL_SIGNED_NORMALIZED, "GL_SIGNED_NORMALIZED");
#endif
#if defined(GL_PRIMITIVE_RESTART)
defconsti(env, "GL-PRIMITIVE-RESTART", (GLenum) GL_PRIMITIVE_RESTART, "GL_PRIMITIVE_RESTART");
#endif
#if defined(GL_PRIMITIVE_RESTART_INDEX)
defconsti(env, "GL-PRIMITIVE-RESTART-INDEX", (GLenum) GL_PRIMITIVE_RESTART_INDEX, "GL_PRIMITIVE_RESTART_INDEX");
#endif
#if defined(GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB)
defconsti(env, "GL-MAX-PROGRAM-TEXTURE-GATHER-COMPONENTS-ARB", (GLenum) GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB, "GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB");
#endif
#if defined(GL_PERFMON_GLOBAL_MODE_QCOM)
defconsti(env, "GL-PERFMON-GLOBAL-MODE-QCOM", (GLenum) GL_PERFMON_GLOBAL_MODE_QCOM, "GL_PERFMON_GLOBAL_MODE_QCOM");
#endif
#if defined(GL_MAX_SHADER_SUBSAMPLED_IMAGE_UNITS_QCOM)
defconsti(env, "GL-MAX-SHADER-SUBSAMPLED-IMAGE-UNITS-QCOM", (GLenum) GL_MAX_SHADER_SUBSAMPLED_IMAGE_UNITS_QCOM, "GL_MAX_SHADER_SUBSAMPLED_IMAGE_UNITS_QCOM");
#endif
#if defined(GL_BINNING_CONTROL_HINT_QCOM)
defconsti(env, "GL-BINNING-CONTROL-HINT-QCOM", (GLenum) GL_BINNING_CONTROL_HINT_QCOM, "GL_BINNING_CONTROL_HINT_QCOM");
#endif
#if defined(GL_CPU_OPTIMIZED_QCOM)
defconsti(env, "GL-CPU-OPTIMIZED-QCOM", (GLenum) GL_CPU_OPTIMIZED_QCOM, "GL_CPU_OPTIMIZED_QCOM");
#endif
#if defined(GL_GPU_OPTIMIZED_QCOM)
defconsti(env, "GL-GPU-OPTIMIZED-QCOM", (GLenum) GL_GPU_OPTIMIZED_QCOM, "GL_GPU_OPTIMIZED_QCOM");
#endif
#if defined(GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM)
defconsti(env, "GL-RENDER-DIRECT-TO-FRAMEBUFFER-QCOM", (GLenum) GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM, "GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM");
#endif
#if defined(GL_GPU_DISJOINT_EXT)
defconsti(env, "GL-GPU-DISJOINT-EXT", (GLenum) GL_GPU_DISJOINT_EXT, "GL_GPU_DISJOINT_EXT");
#endif
#if defined(GL_SR8_EXT)
defconsti(env, "GL-SR8-EXT", (GLenum) GL_SR8_EXT, "GL_SR8_EXT");
#endif
#if defined(GL_SRG8_EXT)
defconsti(env, "GL-SRG8-EXT", (GLenum) GL_SRG8_EXT, "GL_SRG8_EXT");
#endif
#if defined(GL_TEXTURE_FORMAT_SRGB_OVERRIDE_EXT)
defconsti(env, "GL-TEXTURE-FORMAT-SRGB-OVERRIDE-EXT", (GLenum) GL_TEXTURE_FORMAT_SRGB_OVERRIDE_EXT, "GL_TEXTURE_FORMAT_SRGB_OVERRIDE_EXT");
#endif
#if defined(GL_SHADER_BINARY_VIV)
defconsti(env, "GL-SHADER-BINARY-VIV", (GLenum) GL_SHADER_BINARY_VIV, "GL_SHADER_BINARY_VIV");
#endif
#if defined(GL_INT8_NV)
defconsti(env, "GL-INT8-NV", (GLenum) GL_INT8_NV, "GL_INT8_NV");
#endif
#if defined(GL_INT8_VEC2_NV)
defconsti(env, "GL-INT8-VEC2-NV", (GLenum) GL_INT8_VEC2_NV, "GL_INT8_VEC2_NV");
#endif
#if defined(GL_INT8_VEC3_NV)
defconsti(env, "GL-INT8-VEC3-NV", (GLenum) GL_INT8_VEC3_NV, "GL_INT8_VEC3_NV");
#endif
#if defined(GL_INT8_VEC4_NV)
defconsti(env, "GL-INT8-VEC4-NV", (GLenum) GL_INT8_VEC4_NV, "GL_INT8_VEC4_NV");
#endif
#if defined(GL_INT16_NV)
defconsti(env, "GL-INT16-NV", (GLenum) GL_INT16_NV, "GL_INT16_NV");
#endif
#if defined(GL_INT16_VEC2_NV)
defconsti(env, "GL-INT16-VEC2-NV", (GLenum) GL_INT16_VEC2_NV, "GL_INT16_VEC2_NV");
#endif
#if defined(GL_INT16_VEC3_NV)
defconsti(env, "GL-INT16-VEC3-NV", (GLenum) GL_INT16_VEC3_NV, "GL_INT16_VEC3_NV");
#endif
#if defined(GL_INT16_VEC4_NV)
defconsti(env, "GL-INT16-VEC4-NV", (GLenum) GL_INT16_VEC4_NV, "GL_INT16_VEC4_NV");
#endif
#if defined(GL_INT64_VEC2_ARB)
defconsti(env, "GL-INT64-VEC2-ARB", (GLenum) GL_INT64_VEC2_ARB, "GL_INT64_VEC2_ARB");
#endif
#if defined(GL_INT64_VEC2_NV)
defconsti(env, "GL-INT64-VEC2-NV", (GLenum) GL_INT64_VEC2_NV, "GL_INT64_VEC2_NV");
#endif
#if defined(GL_INT64_VEC3_ARB)
defconsti(env, "GL-INT64-VEC3-ARB", (GLenum) GL_INT64_VEC3_ARB, "GL_INT64_VEC3_ARB");
#endif
#if defined(GL_INT64_VEC3_NV)
defconsti(env, "GL-INT64-VEC3-NV", (GLenum) GL_INT64_VEC3_NV, "GL_INT64_VEC3_NV");
#endif
#if defined(GL_INT64_VEC4_ARB)
defconsti(env, "GL-INT64-VEC4-ARB", (GLenum) GL_INT64_VEC4_ARB, "GL_INT64_VEC4_ARB");
#endif
#if defined(GL_INT64_VEC4_NV)
defconsti(env, "GL-INT64-VEC4-NV", (GLenum) GL_INT64_VEC4_NV, "GL_INT64_VEC4_NV");
#endif
#if defined(GL_UNSIGNED_INT8_NV)
defconsti(env, "GL-UNSIGNED-INT8-NV", (GLenum) GL_UNSIGNED_INT8_NV, "GL_UNSIGNED_INT8_NV");
#endif
#if defined(GL_UNSIGNED_INT8_VEC2_NV)
defconsti(env, "GL-UNSIGNED-INT8-VEC2-NV", (GLenum) GL_UNSIGNED_INT8_VEC2_NV, "GL_UNSIGNED_INT8_VEC2_NV");
#endif
#if defined(GL_UNSIGNED_INT8_VEC3_NV)
defconsti(env, "GL-UNSIGNED-INT8-VEC3-NV", (GLenum) GL_UNSIGNED_INT8_VEC3_NV, "GL_UNSIGNED_INT8_VEC3_NV");
#endif
#if defined(GL_UNSIGNED_INT8_VEC4_NV)
defconsti(env, "GL-UNSIGNED-INT8-VEC4-NV", (GLenum) GL_UNSIGNED_INT8_VEC4_NV, "GL_UNSIGNED_INT8_VEC4_NV");
#endif
#if defined(GL_UNSIGNED_INT16_NV)
defconsti(env, "GL-UNSIGNED-INT16-NV", (GLenum) GL_UNSIGNED_INT16_NV, "GL_UNSIGNED_INT16_NV");
#endif
#if defined(GL_UNSIGNED_INT16_VEC2_NV)
defconsti(env, "GL-UNSIGNED-INT16-VEC2-NV", (GLenum) GL_UNSIGNED_INT16_VEC2_NV, "GL_UNSIGNED_INT16_VEC2_NV");
#endif
#if defined(GL_UNSIGNED_INT16_VEC3_NV)
defconsti(env, "GL-UNSIGNED-INT16-VEC3-NV", (GLenum) GL_UNSIGNED_INT16_VEC3_NV, "GL_UNSIGNED_INT16_VEC3_NV");
#endif
#if defined(GL_UNSIGNED_INT16_VEC4_NV)
defconsti(env, "GL-UNSIGNED-INT16-VEC4-NV", (GLenum) GL_UNSIGNED_INT16_VEC4_NV, "GL_UNSIGNED_INT16_VEC4_NV");
#endif
#if defined(GL_UNSIGNED_INT64_VEC2_ARB)
defconsti(env, "GL-UNSIGNED-INT64-VEC2-ARB", (GLenum) GL_UNSIGNED_INT64_VEC2_ARB, "GL_UNSIGNED_INT64_VEC2_ARB");
#endif
#if defined(GL_UNSIGNED_INT64_VEC2_NV)
defconsti(env, "GL-UNSIGNED-INT64-VEC2-NV", (GLenum) GL_UNSIGNED_INT64_VEC2_NV, "GL_UNSIGNED_INT64_VEC2_NV");
#endif
#if defined(GL_UNSIGNED_INT64_VEC3_ARB)
defconsti(env, "GL-UNSIGNED-INT64-VEC3-ARB", (GLenum) GL_UNSIGNED_INT64_VEC3_ARB, "GL_UNSIGNED_INT64_VEC3_ARB");
#endif
#if defined(GL_UNSIGNED_INT64_VEC3_NV)
defconsti(env, "GL-UNSIGNED-INT64-VEC3-NV", (GLenum) GL_UNSIGNED_INT64_VEC3_NV, "GL_UNSIGNED_INT64_VEC3_NV");
#endif
#if defined(GL_UNSIGNED_INT64_VEC4_ARB)
defconsti(env, "GL-UNSIGNED-INT64-VEC4-ARB", (GLenum) GL_UNSIGNED_INT64_VEC4_ARB, "GL_UNSIGNED_INT64_VEC4_ARB");
#endif
#if defined(GL_UNSIGNED_INT64_VEC4_NV)
defconsti(env, "GL-UNSIGNED-INT64-VEC4-NV", (GLenum) GL_UNSIGNED_INT64_VEC4_NV, "GL_UNSIGNED_INT64_VEC4_NV");
#endif
#if defined(GL_FLOAT16_NV)
defconsti(env, "GL-FLOAT16-NV", (GLenum) GL_FLOAT16_NV, "GL_FLOAT16_NV");
#endif
#if defined(GL_FLOAT16_VEC2_NV)
defconsti(env, "GL-FLOAT16-VEC2-NV", (GLenum) GL_FLOAT16_VEC2_NV, "GL_FLOAT16_VEC2_NV");
#endif
#if defined(GL_FLOAT16_VEC3_NV)
defconsti(env, "GL-FLOAT16-VEC3-NV", (GLenum) GL_FLOAT16_VEC3_NV, "GL_FLOAT16_VEC3_NV");
#endif
#if defined(GL_FLOAT16_VEC4_NV)
defconsti(env, "GL-FLOAT16-VEC4-NV", (GLenum) GL_FLOAT16_VEC4_NV, "GL_FLOAT16_VEC4_NV");
#endif
#if defined(GL_DOUBLE_VEC2)
defconsti(env, "GL-DOUBLE-VEC2", (GLenum) GL_DOUBLE_VEC2, "GL_DOUBLE_VEC2");
#endif
#if defined(GL_DOUBLE_VEC2_EXT)
defconsti(env, "GL-DOUBLE-VEC2-EXT", (GLenum) GL_DOUBLE_VEC2_EXT, "GL_DOUBLE_VEC2_EXT");
#endif
#if defined(GL_DOUBLE_VEC3)
defconsti(env, "GL-DOUBLE-VEC3", (GLenum) GL_DOUBLE_VEC3, "GL_DOUBLE_VEC3");
#endif
#if defined(GL_DOUBLE_VEC3_EXT)
defconsti(env, "GL-DOUBLE-VEC3-EXT", (GLenum) GL_DOUBLE_VEC3_EXT, "GL_DOUBLE_VEC3_EXT");
#endif
#if defined(GL_DOUBLE_VEC4)
defconsti(env, "GL-DOUBLE-VEC4", (GLenum) GL_DOUBLE_VEC4, "GL_DOUBLE_VEC4");
#endif
#if defined(GL_DOUBLE_VEC4_EXT)
defconsti(env, "GL-DOUBLE-VEC4-EXT", (GLenum) GL_DOUBLE_VEC4_EXT, "GL_DOUBLE_VEC4_EXT");
#endif
#if defined(GL_SAMPLER_BUFFER_AMD)
defconsti(env, "GL-SAMPLER-BUFFER-AMD", (GLenum) GL_SAMPLER_BUFFER_AMD, "GL_SAMPLER_BUFFER_AMD");
#endif
#if defined(GL_INT_SAMPLER_BUFFER_AMD)
defconsti(env, "GL-INT-SAMPLER-BUFFER-AMD", (GLenum) GL_INT_SAMPLER_BUFFER_AMD, "GL_INT_SAMPLER_BUFFER_AMD");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-BUFFER-AMD", (GLenum) GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD, "GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD");
#endif
#if defined(GL_TESSELLATION_MODE_AMD)
defconsti(env, "GL-TESSELLATION-MODE-AMD", (GLenum) GL_TESSELLATION_MODE_AMD, "GL_TESSELLATION_MODE_AMD");
#endif
#if defined(GL_TESSELLATION_FACTOR_AMD)
defconsti(env, "GL-TESSELLATION-FACTOR-AMD", (GLenum) GL_TESSELLATION_FACTOR_AMD, "GL_TESSELLATION_FACTOR_AMD");
#endif
#if defined(GL_DISCRETE_AMD)
defconsti(env, "GL-DISCRETE-AMD", (GLenum) GL_DISCRETE_AMD, "GL_DISCRETE_AMD");
#endif
#if defined(GL_CONTINUOUS_AMD)
defconsti(env, "GL-CONTINUOUS-AMD", (GLenum) GL_CONTINUOUS_AMD, "GL_CONTINUOUS_AMD");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_ARRAY)
defconsti(env, "GL-TEXTURE-CUBE-MAP-ARRAY", (GLenum) GL_TEXTURE_CUBE_MAP_ARRAY, "GL_TEXTURE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_ARRAY_ARB)
defconsti(env, "GL-TEXTURE-CUBE-MAP-ARRAY-ARB", (GLenum) GL_TEXTURE_CUBE_MAP_ARRAY_ARB, "GL_TEXTURE_CUBE_MAP_ARRAY_ARB");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_ARRAY_EXT)
defconsti(env, "GL-TEXTURE-CUBE-MAP-ARRAY-EXT", (GLenum) GL_TEXTURE_CUBE_MAP_ARRAY_EXT, "GL_TEXTURE_CUBE_MAP_ARRAY_EXT");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_ARRAY_OES)
defconsti(env, "GL-TEXTURE-CUBE-MAP-ARRAY-OES", (GLenum) GL_TEXTURE_CUBE_MAP_ARRAY_OES, "GL_TEXTURE_CUBE_MAP_ARRAY_OES");
#endif
#if defined(GL_TEXTURE_BINDING_CUBE_MAP_ARRAY)
defconsti(env, "GL-TEXTURE-BINDING-CUBE-MAP-ARRAY", (GLenum) GL_TEXTURE_BINDING_CUBE_MAP_ARRAY, "GL_TEXTURE_BINDING_CUBE_MAP_ARRAY");
#endif
#if defined(GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB)
defconsti(env, "GL-TEXTURE-BINDING-CUBE-MAP-ARRAY-ARB", (GLenum) GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB, "GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB");
#endif
#if defined(GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT)
defconsti(env, "GL-TEXTURE-BINDING-CUBE-MAP-ARRAY-EXT", (GLenum) GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT, "GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT");
#endif
#if defined(GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_OES)
defconsti(env, "GL-TEXTURE-BINDING-CUBE-MAP-ARRAY-OES", (GLenum) GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_OES, "GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_OES");
#endif
#if defined(GL_PROXY_TEXTURE_CUBE_MAP_ARRAY)
defconsti(env, "GL-PROXY-TEXTURE-CUBE-MAP-ARRAY", (GLenum) GL_PROXY_TEXTURE_CUBE_MAP_ARRAY, "GL_PROXY_TEXTURE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB)
defconsti(env, "GL-PROXY-TEXTURE-CUBE-MAP-ARRAY-ARB", (GLenum) GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB, "GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB");
#endif
#if defined(GL_SAMPLER_CUBE_MAP_ARRAY)
defconsti(env, "GL-SAMPLER-CUBE-MAP-ARRAY", (GLenum) GL_SAMPLER_CUBE_MAP_ARRAY, "GL_SAMPLER_CUBE_MAP_ARRAY");
#endif
#if defined(GL_SAMPLER_CUBE_MAP_ARRAY_ARB)
defconsti(env, "GL-SAMPLER-CUBE-MAP-ARRAY-ARB", (GLenum) GL_SAMPLER_CUBE_MAP_ARRAY_ARB, "GL_SAMPLER_CUBE_MAP_ARRAY_ARB");
#endif
#if defined(GL_SAMPLER_CUBE_MAP_ARRAY_EXT)
defconsti(env, "GL-SAMPLER-CUBE-MAP-ARRAY-EXT", (GLenum) GL_SAMPLER_CUBE_MAP_ARRAY_EXT, "GL_SAMPLER_CUBE_MAP_ARRAY_EXT");
#endif
#if defined(GL_SAMPLER_CUBE_MAP_ARRAY_OES)
defconsti(env, "GL-SAMPLER-CUBE-MAP-ARRAY-OES", (GLenum) GL_SAMPLER_CUBE_MAP_ARRAY_OES, "GL_SAMPLER_CUBE_MAP_ARRAY_OES");
#endif
#if defined(GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW)
defconsti(env, "GL-SAMPLER-CUBE-MAP-ARRAY-SHADOW", (GLenum) GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW, "GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW");
#endif
#if defined(GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB)
defconsti(env, "GL-SAMPLER-CUBE-MAP-ARRAY-SHADOW-ARB", (GLenum) GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB, "GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB");
#endif
#if defined(GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT)
defconsti(env, "GL-SAMPLER-CUBE-MAP-ARRAY-SHADOW-EXT", (GLenum) GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT, "GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT");
#endif
#if defined(GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES)
defconsti(env, "GL-SAMPLER-CUBE-MAP-ARRAY-SHADOW-OES", (GLenum) GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES, "GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES");
#endif
#if defined(GL_INT_SAMPLER_CUBE_MAP_ARRAY)
defconsti(env, "GL-INT-SAMPLER-CUBE-MAP-ARRAY", (GLenum) GL_INT_SAMPLER_CUBE_MAP_ARRAY, "GL_INT_SAMPLER_CUBE_MAP_ARRAY");
#endif
#if defined(GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB)
defconsti(env, "GL-INT-SAMPLER-CUBE-MAP-ARRAY-ARB", (GLenum) GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB, "GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB");
#endif
#if defined(GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT)
defconsti(env, "GL-INT-SAMPLER-CUBE-MAP-ARRAY-EXT", (GLenum) GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT, "GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT");
#endif
#if defined(GL_INT_SAMPLER_CUBE_MAP_ARRAY_OES)
defconsti(env, "GL-INT-SAMPLER-CUBE-MAP-ARRAY-OES", (GLenum) GL_INT_SAMPLER_CUBE_MAP_ARRAY_OES, "GL_INT_SAMPLER_CUBE_MAP_ARRAY_OES");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-CUBE-MAP-ARRAY", (GLenum) GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY, "GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-CUBE-MAP-ARRAY-ARB", (GLenum) GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB, "GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-CUBE-MAP-ARRAY-EXT", (GLenum) GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT, "GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-CUBE-MAP-ARRAY-OES", (GLenum) GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES, "GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES");
#endif
#if defined(GL_ALPHA_SNORM)
defconsti(env, "GL-ALPHA-SNORM", (GLenum) GL_ALPHA_SNORM, "GL_ALPHA_SNORM");
#endif
#if defined(GL_LUMINANCE_SNORM)
defconsti(env, "GL-LUMINANCE-SNORM", (GLenum) GL_LUMINANCE_SNORM, "GL_LUMINANCE_SNORM");
#endif
#if defined(GL_LUMINANCE_ALPHA_SNORM)
defconsti(env, "GL-LUMINANCE-ALPHA-SNORM", (GLenum) GL_LUMINANCE_ALPHA_SNORM, "GL_LUMINANCE_ALPHA_SNORM");
#endif
#if defined(GL_INTENSITY_SNORM)
defconsti(env, "GL-INTENSITY-SNORM", (GLenum) GL_INTENSITY_SNORM, "GL_INTENSITY_SNORM");
#endif
#if defined(GL_ALPHA8_SNORM)
defconsti(env, "GL-ALPHA8-SNORM", (GLenum) GL_ALPHA8_SNORM, "GL_ALPHA8_SNORM");
#endif
#if defined(GL_LUMINANCE8_SNORM)
defconsti(env, "GL-LUMINANCE8-SNORM", (GLenum) GL_LUMINANCE8_SNORM, "GL_LUMINANCE8_SNORM");
#endif
#if defined(GL_LUMINANCE8_ALPHA8_SNORM)
defconsti(env, "GL-LUMINANCE8-ALPHA8-SNORM", (GLenum) GL_LUMINANCE8_ALPHA8_SNORM, "GL_LUMINANCE8_ALPHA8_SNORM");
#endif
#if defined(GL_INTENSITY8_SNORM)
defconsti(env, "GL-INTENSITY8-SNORM", (GLenum) GL_INTENSITY8_SNORM, "GL_INTENSITY8_SNORM");
#endif
#if defined(GL_ALPHA16_SNORM)
defconsti(env, "GL-ALPHA16-SNORM", (GLenum) GL_ALPHA16_SNORM, "GL_ALPHA16_SNORM");
#endif
#if defined(GL_LUMINANCE16_SNORM)
defconsti(env, "GL-LUMINANCE16-SNORM", (GLenum) GL_LUMINANCE16_SNORM, "GL_LUMINANCE16_SNORM");
#endif
#if defined(GL_LUMINANCE16_ALPHA16_SNORM)
defconsti(env, "GL-LUMINANCE16-ALPHA16-SNORM", (GLenum) GL_LUMINANCE16_ALPHA16_SNORM, "GL_LUMINANCE16_ALPHA16_SNORM");
#endif
#if defined(GL_INTENSITY16_SNORM)
defconsti(env, "GL-INTENSITY16-SNORM", (GLenum) GL_INTENSITY16_SNORM, "GL_INTENSITY16_SNORM");
#endif
#if defined(GL_FACTOR_MIN_AMD)
defconsti(env, "GL-FACTOR-MIN-AMD", (GLenum) GL_FACTOR_MIN_AMD, "GL_FACTOR_MIN_AMD");
#endif
#if defined(GL_FACTOR_MAX_AMD)
defconsti(env, "GL-FACTOR-MAX-AMD", (GLenum) GL_FACTOR_MAX_AMD, "GL_FACTOR_MAX_AMD");
#endif
#if defined(GL_DEPTH_CLAMP_NEAR_AMD)
defconsti(env, "GL-DEPTH-CLAMP-NEAR-AMD", (GLenum) GL_DEPTH_CLAMP_NEAR_AMD, "GL_DEPTH_CLAMP_NEAR_AMD");
#endif
#if defined(GL_DEPTH_CLAMP_FAR_AMD)
defconsti(env, "GL-DEPTH-CLAMP-FAR-AMD", (GLenum) GL_DEPTH_CLAMP_FAR_AMD, "GL_DEPTH_CLAMP_FAR_AMD");
#endif
#if defined(GL_VIDEO_BUFFER_NV)
defconsti(env, "GL-VIDEO-BUFFER-NV", (GLenum) GL_VIDEO_BUFFER_NV, "GL_VIDEO_BUFFER_NV");
#endif
#if defined(GL_VIDEO_BUFFER_BINDING_NV)
defconsti(env, "GL-VIDEO-BUFFER-BINDING-NV", (GLenum) GL_VIDEO_BUFFER_BINDING_NV, "GL_VIDEO_BUFFER_BINDING_NV");
#endif
#if defined(GL_FIELD_UPPER_NV)
defconsti(env, "GL-FIELD-UPPER-NV", (GLenum) GL_FIELD_UPPER_NV, "GL_FIELD_UPPER_NV");
#endif
#if defined(GL_FIELD_LOWER_NV)
defconsti(env, "GL-FIELD-LOWER-NV", (GLenum) GL_FIELD_LOWER_NV, "GL_FIELD_LOWER_NV");
#endif
#if defined(GL_NUM_VIDEO_CAPTURE_STREAMS_NV)
defconsti(env, "GL-NUM-VIDEO-CAPTURE-STREAMS-NV", (GLenum) GL_NUM_VIDEO_CAPTURE_STREAMS_NV, "GL_NUM_VIDEO_CAPTURE_STREAMS_NV");
#endif
#if defined(GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV)
defconsti(env, "GL-NEXT-VIDEO-CAPTURE-BUFFER-STATUS-NV", (GLenum) GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV, "GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV");
#endif
#if defined(GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV)
defconsti(env, "GL-VIDEO-CAPTURE-TO-422-SUPPORTED-NV", (GLenum) GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV, "GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV");
#endif
#if defined(GL_LAST_VIDEO_CAPTURE_STATUS_NV)
defconsti(env, "GL-LAST-VIDEO-CAPTURE-STATUS-NV", (GLenum) GL_LAST_VIDEO_CAPTURE_STATUS_NV, "GL_LAST_VIDEO_CAPTURE_STATUS_NV");
#endif
#if defined(GL_VIDEO_BUFFER_PITCH_NV)
defconsti(env, "GL-VIDEO-BUFFER-PITCH-NV", (GLenum) GL_VIDEO_BUFFER_PITCH_NV, "GL_VIDEO_BUFFER_PITCH_NV");
#endif
#if defined(GL_VIDEO_COLOR_CONVERSION_MATRIX_NV)
defconsti(env, "GL-VIDEO-COLOR-CONVERSION-MATRIX-NV", (GLenum) GL_VIDEO_COLOR_CONVERSION_MATRIX_NV, "GL_VIDEO_COLOR_CONVERSION_MATRIX_NV");
#endif
#if defined(GL_VIDEO_COLOR_CONVERSION_MAX_NV)
defconsti(env, "GL-VIDEO-COLOR-CONVERSION-MAX-NV", (GLenum) GL_VIDEO_COLOR_CONVERSION_MAX_NV, "GL_VIDEO_COLOR_CONVERSION_MAX_NV");
#endif
#if defined(GL_VIDEO_COLOR_CONVERSION_MIN_NV)
defconsti(env, "GL-VIDEO-COLOR-CONVERSION-MIN-NV", (GLenum) GL_VIDEO_COLOR_CONVERSION_MIN_NV, "GL_VIDEO_COLOR_CONVERSION_MIN_NV");
#endif
#if defined(GL_VIDEO_COLOR_CONVERSION_OFFSET_NV)
defconsti(env, "GL-VIDEO-COLOR-CONVERSION-OFFSET-NV", (GLenum) GL_VIDEO_COLOR_CONVERSION_OFFSET_NV, "GL_VIDEO_COLOR_CONVERSION_OFFSET_NV");
#endif
#if defined(GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV)
defconsti(env, "GL-VIDEO-BUFFER-INTERNAL-FORMAT-NV", (GLenum) GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV, "GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV");
#endif
#if defined(GL_PARTIAL_SUCCESS_NV)
defconsti(env, "GL-PARTIAL-SUCCESS-NV", (GLenum) GL_PARTIAL_SUCCESS_NV, "GL_PARTIAL_SUCCESS_NV");
#endif
#if defined(GL_SUCCESS_NV)
defconsti(env, "GL-SUCCESS-NV", (GLenum) GL_SUCCESS_NV, "GL_SUCCESS_NV");
#endif
#if defined(GL_FAILURE_NV)
defconsti(env, "GL-FAILURE-NV", (GLenum) GL_FAILURE_NV, "GL_FAILURE_NV");
#endif
#if defined(GL_YCBYCR8_422_NV)
defconsti(env, "GL-YCBYCR8-422-NV", (GLenum) GL_YCBYCR8_422_NV, "GL_YCBYCR8_422_NV");
#endif
#if defined(GL_YCBAYCR8A_4224_NV)
defconsti(env, "GL-YCBAYCR8A-4224-NV", (GLenum) GL_YCBAYCR8A_4224_NV, "GL_YCBAYCR8A_4224_NV");
#endif
#if defined(GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV)
defconsti(env, "GL-Z6Y10Z6CB10Z6Y10Z6CR10-422-NV", (GLenum) GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV, "GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV");
#endif
#if defined(GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV)
defconsti(env, "GL-Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10-4224-NV", (GLenum) GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV, "GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV");
#endif
#if defined(GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV)
defconsti(env, "GL-Z4Y12Z4CB12Z4Y12Z4CR12-422-NV", (GLenum) GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV, "GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV");
#endif
#if defined(GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV)
defconsti(env, "GL-Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12-4224-NV", (GLenum) GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV, "GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV");
#endif
#if defined(GL_Z4Y12Z4CB12Z4CR12_444_NV)
defconsti(env, "GL-Z4Y12Z4CB12Z4CR12-444-NV", (GLenum) GL_Z4Y12Z4CB12Z4CR12_444_NV, "GL_Z4Y12Z4CB12Z4CR12_444_NV");
#endif
#if defined(GL_VIDEO_CAPTURE_FRAME_WIDTH_NV)
defconsti(env, "GL-VIDEO-CAPTURE-FRAME-WIDTH-NV", (GLenum) GL_VIDEO_CAPTURE_FRAME_WIDTH_NV, "GL_VIDEO_CAPTURE_FRAME_WIDTH_NV");
#endif
#if defined(GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV)
defconsti(env, "GL-VIDEO-CAPTURE-FRAME-HEIGHT-NV", (GLenum) GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV, "GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV");
#endif
#if defined(GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV)
defconsti(env, "GL-VIDEO-CAPTURE-FIELD-UPPER-HEIGHT-NV", (GLenum) GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV, "GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV");
#endif
#if defined(GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV)
defconsti(env, "GL-VIDEO-CAPTURE-FIELD-LOWER-HEIGHT-NV", (GLenum) GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV, "GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV");
#endif
#if defined(GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV)
defconsti(env, "GL-VIDEO-CAPTURE-SURFACE-ORIGIN-NV", (GLenum) GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV, "GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV");
#endif
#if defined(GL_TEXTURE_COVERAGE_SAMPLES_NV)
defconsti(env, "GL-TEXTURE-COVERAGE-SAMPLES-NV", (GLenum) GL_TEXTURE_COVERAGE_SAMPLES_NV, "GL_TEXTURE_COVERAGE_SAMPLES_NV");
#endif
#if defined(GL_TEXTURE_COLOR_SAMPLES_NV)
defconsti(env, "GL-TEXTURE-COLOR-SAMPLES-NV", (GLenum) GL_TEXTURE_COLOR_SAMPLES_NV, "GL_TEXTURE_COLOR_SAMPLES_NV");
#endif
#if defined(GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX)
defconsti(env, "GL-GPU-MEMORY-INFO-DEDICATED-VIDMEM-NVX", (GLenum) GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX, "GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX");
#endif
#if defined(GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX)
defconsti(env, "GL-GPU-MEMORY-INFO-TOTAL-AVAILABLE-MEMORY-NVX", (GLenum) GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX, "GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX");
#endif
#if defined(GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX)
defconsti(env, "GL-GPU-MEMORY-INFO-CURRENT-AVAILABLE-VIDMEM-NVX", (GLenum) GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX, "GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX");
#endif
#if defined(GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX)
defconsti(env, "GL-GPU-MEMORY-INFO-EVICTION-COUNT-NVX", (GLenum) GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX, "GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX");
#endif
#if defined(GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX)
defconsti(env, "GL-GPU-MEMORY-INFO-EVICTED-MEMORY-NVX", (GLenum) GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX, "GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX");
#endif
#if defined(GL_IMAGE_1D)
defconsti(env, "GL-IMAGE-1D", (GLenum) GL_IMAGE_1D, "GL_IMAGE_1D");
#endif
#if defined(GL_IMAGE_1D_EXT)
defconsti(env, "GL-IMAGE-1D-EXT", (GLenum) GL_IMAGE_1D_EXT, "GL_IMAGE_1D_EXT");
#endif
#if defined(GL_IMAGE_2D)
defconsti(env, "GL-IMAGE-2D", (GLenum) GL_IMAGE_2D, "GL_IMAGE_2D");
#endif
#if defined(GL_IMAGE_2D_EXT)
defconsti(env, "GL-IMAGE-2D-EXT", (GLenum) GL_IMAGE_2D_EXT, "GL_IMAGE_2D_EXT");
#endif
#if defined(GL_IMAGE_3D)
defconsti(env, "GL-IMAGE-3D", (GLenum) GL_IMAGE_3D, "GL_IMAGE_3D");
#endif
#if defined(GL_IMAGE_3D_EXT)
defconsti(env, "GL-IMAGE-3D-EXT", (GLenum) GL_IMAGE_3D_EXT, "GL_IMAGE_3D_EXT");
#endif
#if defined(GL_IMAGE_2D_RECT)
defconsti(env, "GL-IMAGE-2D-RECT", (GLenum) GL_IMAGE_2D_RECT, "GL_IMAGE_2D_RECT");
#endif
#if defined(GL_IMAGE_2D_RECT_EXT)
defconsti(env, "GL-IMAGE-2D-RECT-EXT", (GLenum) GL_IMAGE_2D_RECT_EXT, "GL_IMAGE_2D_RECT_EXT");
#endif
#if defined(GL_IMAGE_CUBE)
defconsti(env, "GL-IMAGE-CUBE", (GLenum) GL_IMAGE_CUBE, "GL_IMAGE_CUBE");
#endif
#if defined(GL_IMAGE_CUBE_EXT)
defconsti(env, "GL-IMAGE-CUBE-EXT", (GLenum) GL_IMAGE_CUBE_EXT, "GL_IMAGE_CUBE_EXT");
#endif
#if defined(GL_IMAGE_BUFFER)
defconsti(env, "GL-IMAGE-BUFFER", (GLenum) GL_IMAGE_BUFFER, "GL_IMAGE_BUFFER");
#endif
#if defined(GL_IMAGE_BUFFER_EXT)
defconsti(env, "GL-IMAGE-BUFFER-EXT", (GLenum) GL_IMAGE_BUFFER_EXT, "GL_IMAGE_BUFFER_EXT");
#endif
#if defined(GL_IMAGE_BUFFER_OES)
defconsti(env, "GL-IMAGE-BUFFER-OES", (GLenum) GL_IMAGE_BUFFER_OES, "GL_IMAGE_BUFFER_OES");
#endif
#if defined(GL_IMAGE_1D_ARRAY)
defconsti(env, "GL-IMAGE-1D-ARRAY", (GLenum) GL_IMAGE_1D_ARRAY, "GL_IMAGE_1D_ARRAY");
#endif
#if defined(GL_IMAGE_1D_ARRAY_EXT)
defconsti(env, "GL-IMAGE-1D-ARRAY-EXT", (GLenum) GL_IMAGE_1D_ARRAY_EXT, "GL_IMAGE_1D_ARRAY_EXT");
#endif
#if defined(GL_IMAGE_2D_ARRAY)
defconsti(env, "GL-IMAGE-2D-ARRAY", (GLenum) GL_IMAGE_2D_ARRAY, "GL_IMAGE_2D_ARRAY");
#endif
#if defined(GL_IMAGE_2D_ARRAY_EXT)
defconsti(env, "GL-IMAGE-2D-ARRAY-EXT", (GLenum) GL_IMAGE_2D_ARRAY_EXT, "GL_IMAGE_2D_ARRAY_EXT");
#endif
#if defined(GL_IMAGE_CUBE_MAP_ARRAY)
defconsti(env, "GL-IMAGE-CUBE-MAP-ARRAY", (GLenum) GL_IMAGE_CUBE_MAP_ARRAY, "GL_IMAGE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_IMAGE_CUBE_MAP_ARRAY_EXT)
defconsti(env, "GL-IMAGE-CUBE-MAP-ARRAY-EXT", (GLenum) GL_IMAGE_CUBE_MAP_ARRAY_EXT, "GL_IMAGE_CUBE_MAP_ARRAY_EXT");
#endif
#if defined(GL_IMAGE_CUBE_MAP_ARRAY_OES)
defconsti(env, "GL-IMAGE-CUBE-MAP-ARRAY-OES", (GLenum) GL_IMAGE_CUBE_MAP_ARRAY_OES, "GL_IMAGE_CUBE_MAP_ARRAY_OES");
#endif
#if defined(GL_IMAGE_2D_MULTISAMPLE)
defconsti(env, "GL-IMAGE-2D-MULTISAMPLE", (GLenum) GL_IMAGE_2D_MULTISAMPLE, "GL_IMAGE_2D_MULTISAMPLE");
#endif
#if defined(GL_IMAGE_2D_MULTISAMPLE_EXT)
defconsti(env, "GL-IMAGE-2D-MULTISAMPLE-EXT", (GLenum) GL_IMAGE_2D_MULTISAMPLE_EXT, "GL_IMAGE_2D_MULTISAMPLE_EXT");
#endif
#if defined(GL_IMAGE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-IMAGE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_IMAGE_2D_MULTISAMPLE_ARRAY, "GL_IMAGE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT)
defconsti(env, "GL-IMAGE-2D-MULTISAMPLE-ARRAY-EXT", (GLenum) GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT, "GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT");
#endif
#if defined(GL_INT_IMAGE_1D)
defconsti(env, "GL-INT-IMAGE-1D", (GLenum) GL_INT_IMAGE_1D, "GL_INT_IMAGE_1D");
#endif
#if defined(GL_INT_IMAGE_1D_EXT)
defconsti(env, "GL-INT-IMAGE-1D-EXT", (GLenum) GL_INT_IMAGE_1D_EXT, "GL_INT_IMAGE_1D_EXT");
#endif
#if defined(GL_INT_IMAGE_2D)
defconsti(env, "GL-INT-IMAGE-2D", (GLenum) GL_INT_IMAGE_2D, "GL_INT_IMAGE_2D");
#endif
#if defined(GL_INT_IMAGE_2D_EXT)
defconsti(env, "GL-INT-IMAGE-2D-EXT", (GLenum) GL_INT_IMAGE_2D_EXT, "GL_INT_IMAGE_2D_EXT");
#endif
#if defined(GL_INT_IMAGE_3D)
defconsti(env, "GL-INT-IMAGE-3D", (GLenum) GL_INT_IMAGE_3D, "GL_INT_IMAGE_3D");
#endif
#if defined(GL_INT_IMAGE_3D_EXT)
defconsti(env, "GL-INT-IMAGE-3D-EXT", (GLenum) GL_INT_IMAGE_3D_EXT, "GL_INT_IMAGE_3D_EXT");
#endif
#if defined(GL_INT_IMAGE_2D_RECT)
defconsti(env, "GL-INT-IMAGE-2D-RECT", (GLenum) GL_INT_IMAGE_2D_RECT, "GL_INT_IMAGE_2D_RECT");
#endif
#if defined(GL_INT_IMAGE_2D_RECT_EXT)
defconsti(env, "GL-INT-IMAGE-2D-RECT-EXT", (GLenum) GL_INT_IMAGE_2D_RECT_EXT, "GL_INT_IMAGE_2D_RECT_EXT");
#endif
#if defined(GL_INT_IMAGE_CUBE)
defconsti(env, "GL-INT-IMAGE-CUBE", (GLenum) GL_INT_IMAGE_CUBE, "GL_INT_IMAGE_CUBE");
#endif
#if defined(GL_INT_IMAGE_CUBE_EXT)
defconsti(env, "GL-INT-IMAGE-CUBE-EXT", (GLenum) GL_INT_IMAGE_CUBE_EXT, "GL_INT_IMAGE_CUBE_EXT");
#endif
#if defined(GL_INT_IMAGE_BUFFER)
defconsti(env, "GL-INT-IMAGE-BUFFER", (GLenum) GL_INT_IMAGE_BUFFER, "GL_INT_IMAGE_BUFFER");
#endif
#if defined(GL_INT_IMAGE_BUFFER_EXT)
defconsti(env, "GL-INT-IMAGE-BUFFER-EXT", (GLenum) GL_INT_IMAGE_BUFFER_EXT, "GL_INT_IMAGE_BUFFER_EXT");
#endif
#if defined(GL_INT_IMAGE_BUFFER_OES)
defconsti(env, "GL-INT-IMAGE-BUFFER-OES", (GLenum) GL_INT_IMAGE_BUFFER_OES, "GL_INT_IMAGE_BUFFER_OES");
#endif
#if defined(GL_INT_IMAGE_1D_ARRAY)
defconsti(env, "GL-INT-IMAGE-1D-ARRAY", (GLenum) GL_INT_IMAGE_1D_ARRAY, "GL_INT_IMAGE_1D_ARRAY");
#endif
#if defined(GL_INT_IMAGE_1D_ARRAY_EXT)
defconsti(env, "GL-INT-IMAGE-1D-ARRAY-EXT", (GLenum) GL_INT_IMAGE_1D_ARRAY_EXT, "GL_INT_IMAGE_1D_ARRAY_EXT");
#endif
#if defined(GL_INT_IMAGE_2D_ARRAY)
defconsti(env, "GL-INT-IMAGE-2D-ARRAY", (GLenum) GL_INT_IMAGE_2D_ARRAY, "GL_INT_IMAGE_2D_ARRAY");
#endif
#if defined(GL_INT_IMAGE_2D_ARRAY_EXT)
defconsti(env, "GL-INT-IMAGE-2D-ARRAY-EXT", (GLenum) GL_INT_IMAGE_2D_ARRAY_EXT, "GL_INT_IMAGE_2D_ARRAY_EXT");
#endif
#if defined(GL_INT_IMAGE_CUBE_MAP_ARRAY)
defconsti(env, "GL-INT-IMAGE-CUBE-MAP-ARRAY", (GLenum) GL_INT_IMAGE_CUBE_MAP_ARRAY, "GL_INT_IMAGE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT)
defconsti(env, "GL-INT-IMAGE-CUBE-MAP-ARRAY-EXT", (GLenum) GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT, "GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT");
#endif
#if defined(GL_INT_IMAGE_CUBE_MAP_ARRAY_OES)
defconsti(env, "GL-INT-IMAGE-CUBE-MAP-ARRAY-OES", (GLenum) GL_INT_IMAGE_CUBE_MAP_ARRAY_OES, "GL_INT_IMAGE_CUBE_MAP_ARRAY_OES");
#endif
#if defined(GL_INT_IMAGE_2D_MULTISAMPLE)
defconsti(env, "GL-INT-IMAGE-2D-MULTISAMPLE", (GLenum) GL_INT_IMAGE_2D_MULTISAMPLE, "GL_INT_IMAGE_2D_MULTISAMPLE");
#endif
#if defined(GL_INT_IMAGE_2D_MULTISAMPLE_EXT)
defconsti(env, "GL-INT-IMAGE-2D-MULTISAMPLE-EXT", (GLenum) GL_INT_IMAGE_2D_MULTISAMPLE_EXT, "GL_INT_IMAGE_2D_MULTISAMPLE_EXT");
#endif
#if defined(GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-INT-IMAGE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY, "GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT)
defconsti(env, "GL-INT-IMAGE-2D-MULTISAMPLE-ARRAY-EXT", (GLenum) GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT, "GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_1D)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-1D", (GLenum) GL_UNSIGNED_INT_IMAGE_1D, "GL_UNSIGNED_INT_IMAGE_1D");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_1D_EXT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-1D-EXT", (GLenum) GL_UNSIGNED_INT_IMAGE_1D_EXT, "GL_UNSIGNED_INT_IMAGE_1D_EXT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D", (GLenum) GL_UNSIGNED_INT_IMAGE_2D, "GL_UNSIGNED_INT_IMAGE_2D");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_EXT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-EXT", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_EXT, "GL_UNSIGNED_INT_IMAGE_2D_EXT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_3D)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-3D", (GLenum) GL_UNSIGNED_INT_IMAGE_3D, "GL_UNSIGNED_INT_IMAGE_3D");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_3D_EXT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-3D-EXT", (GLenum) GL_UNSIGNED_INT_IMAGE_3D_EXT, "GL_UNSIGNED_INT_IMAGE_3D_EXT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_RECT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-RECT", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_RECT, "GL_UNSIGNED_INT_IMAGE_2D_RECT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-RECT-EXT", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT, "GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_CUBE)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-CUBE", (GLenum) GL_UNSIGNED_INT_IMAGE_CUBE, "GL_UNSIGNED_INT_IMAGE_CUBE");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_CUBE_EXT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-CUBE-EXT", (GLenum) GL_UNSIGNED_INT_IMAGE_CUBE_EXT, "GL_UNSIGNED_INT_IMAGE_CUBE_EXT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_BUFFER)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-BUFFER", (GLenum) GL_UNSIGNED_INT_IMAGE_BUFFER, "GL_UNSIGNED_INT_IMAGE_BUFFER");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_BUFFER_EXT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-BUFFER-EXT", (GLenum) GL_UNSIGNED_INT_IMAGE_BUFFER_EXT, "GL_UNSIGNED_INT_IMAGE_BUFFER_EXT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_BUFFER_OES)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-BUFFER-OES", (GLenum) GL_UNSIGNED_INT_IMAGE_BUFFER_OES, "GL_UNSIGNED_INT_IMAGE_BUFFER_OES");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_1D_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-1D-ARRAY", (GLenum) GL_UNSIGNED_INT_IMAGE_1D_ARRAY, "GL_UNSIGNED_INT_IMAGE_1D_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-1D-ARRAY-EXT", (GLenum) GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT, "GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-ARRAY", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_ARRAY, "GL_UNSIGNED_INT_IMAGE_2D_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-ARRAY-EXT", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT, "GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-CUBE-MAP-ARRAY", (GLenum) GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY, "GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-CUBE-MAP-ARRAY-EXT", (GLenum) GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT, "GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-CUBE-MAP-ARRAY-OES", (GLenum) GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES, "GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-MULTISAMPLE", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE, "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-MULTISAMPLE-EXT", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT, "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY, "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-MULTISAMPLE-ARRAY-EXT", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT, "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT");
#endif
#if defined(GL_MAX_IMAGE_SAMPLES)
defconsti(env, "GL-MAX-IMAGE-SAMPLES", (GLenum) GL_MAX_IMAGE_SAMPLES, "GL_MAX_IMAGE_SAMPLES");
#endif
#if defined(GL_MAX_IMAGE_SAMPLES_EXT)
defconsti(env, "GL-MAX-IMAGE-SAMPLES-EXT", (GLenum) GL_MAX_IMAGE_SAMPLES_EXT, "GL_MAX_IMAGE_SAMPLES_EXT");
#endif
#if defined(GL_IMAGE_BINDING_FORMAT)
defconsti(env, "GL-IMAGE-BINDING-FORMAT", (GLenum) GL_IMAGE_BINDING_FORMAT, "GL_IMAGE_BINDING_FORMAT");
#endif
#if defined(GL_IMAGE_BINDING_FORMAT_EXT)
defconsti(env, "GL-IMAGE-BINDING-FORMAT-EXT", (GLenum) GL_IMAGE_BINDING_FORMAT_EXT, "GL_IMAGE_BINDING_FORMAT_EXT");
#endif
#if defined(GL_RGB10_A2UI)
defconsti(env, "GL-RGB10-A2UI", (GLenum) GL_RGB10_A2UI, "GL_RGB10_A2UI");
#endif
#if defined(GL_PATH_FORMAT_SVG_NV)
defconsti(env, "GL-PATH-FORMAT-SVG-NV", (GLenum) GL_PATH_FORMAT_SVG_NV, "GL_PATH_FORMAT_SVG_NV");
#endif
#if defined(GL_PATH_FORMAT_PS_NV)
defconsti(env, "GL-PATH-FORMAT-PS-NV", (GLenum) GL_PATH_FORMAT_PS_NV, "GL_PATH_FORMAT_PS_NV");
#endif
#if defined(GL_STANDARD_FONT_NAME_NV)
defconsti(env, "GL-STANDARD-FONT-NAME-NV", (GLenum) GL_STANDARD_FONT_NAME_NV, "GL_STANDARD_FONT_NAME_NV");
#endif
#if defined(GL_SYSTEM_FONT_NAME_NV)
defconsti(env, "GL-SYSTEM-FONT-NAME-NV", (GLenum) GL_SYSTEM_FONT_NAME_NV, "GL_SYSTEM_FONT_NAME_NV");
#endif
#if defined(GL_FILE_NAME_NV)
defconsti(env, "GL-FILE-NAME-NV", (GLenum) GL_FILE_NAME_NV, "GL_FILE_NAME_NV");
#endif
#if defined(GL_PATH_STROKE_WIDTH_NV)
defconsti(env, "GL-PATH-STROKE-WIDTH-NV", (GLenum) GL_PATH_STROKE_WIDTH_NV, "GL_PATH_STROKE_WIDTH_NV");
#endif
#if defined(GL_PATH_END_CAPS_NV)
defconsti(env, "GL-PATH-END-CAPS-NV", (GLenum) GL_PATH_END_CAPS_NV, "GL_PATH_END_CAPS_NV");
#endif
#if defined(GL_PATH_INITIAL_END_CAP_NV)
defconsti(env, "GL-PATH-INITIAL-END-CAP-NV", (GLenum) GL_PATH_INITIAL_END_CAP_NV, "GL_PATH_INITIAL_END_CAP_NV");
#endif
#if defined(GL_PATH_TERMINAL_END_CAP_NV)
defconsti(env, "GL-PATH-TERMINAL-END-CAP-NV", (GLenum) GL_PATH_TERMINAL_END_CAP_NV, "GL_PATH_TERMINAL_END_CAP_NV");
#endif
#if defined(GL_PATH_JOIN_STYLE_NV)
defconsti(env, "GL-PATH-JOIN-STYLE-NV", (GLenum) GL_PATH_JOIN_STYLE_NV, "GL_PATH_JOIN_STYLE_NV");
#endif
#if defined(GL_PATH_MITER_LIMIT_NV)
defconsti(env, "GL-PATH-MITER-LIMIT-NV", (GLenum) GL_PATH_MITER_LIMIT_NV, "GL_PATH_MITER_LIMIT_NV");
#endif
#if defined(GL_PATH_DASH_CAPS_NV)
defconsti(env, "GL-PATH-DASH-CAPS-NV", (GLenum) GL_PATH_DASH_CAPS_NV, "GL_PATH_DASH_CAPS_NV");
#endif
#if defined(GL_PATH_INITIAL_DASH_CAP_NV)
defconsti(env, "GL-PATH-INITIAL-DASH-CAP-NV", (GLenum) GL_PATH_INITIAL_DASH_CAP_NV, "GL_PATH_INITIAL_DASH_CAP_NV");
#endif
#if defined(GL_PATH_TERMINAL_DASH_CAP_NV)
defconsti(env, "GL-PATH-TERMINAL-DASH-CAP-NV", (GLenum) GL_PATH_TERMINAL_DASH_CAP_NV, "GL_PATH_TERMINAL_DASH_CAP_NV");
#endif
#if defined(GL_PATH_DASH_OFFSET_NV)
defconsti(env, "GL-PATH-DASH-OFFSET-NV", (GLenum) GL_PATH_DASH_OFFSET_NV, "GL_PATH_DASH_OFFSET_NV");
#endif
#if defined(GL_PATH_CLIENT_LENGTH_NV)
defconsti(env, "GL-PATH-CLIENT-LENGTH-NV", (GLenum) GL_PATH_CLIENT_LENGTH_NV, "GL_PATH_CLIENT_LENGTH_NV");
#endif
#if defined(GL_PATH_FILL_MODE_NV)
defconsti(env, "GL-PATH-FILL-MODE-NV", (GLenum) GL_PATH_FILL_MODE_NV, "GL_PATH_FILL_MODE_NV");
#endif
#if defined(GL_PATH_FILL_MASK_NV)
defconsti(env, "GL-PATH-FILL-MASK-NV", (GLenum) GL_PATH_FILL_MASK_NV, "GL_PATH_FILL_MASK_NV");
#endif
#if defined(GL_PATH_FILL_COVER_MODE_NV)
defconsti(env, "GL-PATH-FILL-COVER-MODE-NV", (GLenum) GL_PATH_FILL_COVER_MODE_NV, "GL_PATH_FILL_COVER_MODE_NV");
#endif
#if defined(GL_PATH_STROKE_COVER_MODE_NV)
defconsti(env, "GL-PATH-STROKE-COVER-MODE-NV", (GLenum) GL_PATH_STROKE_COVER_MODE_NV, "GL_PATH_STROKE_COVER_MODE_NV");
#endif
#if defined(GL_PATH_STROKE_MASK_NV)
defconsti(env, "GL-PATH-STROKE-MASK-NV", (GLenum) GL_PATH_STROKE_MASK_NV, "GL_PATH_STROKE_MASK_NV");
#endif
#if defined(GL_COUNT_UP_NV)
defconsti(env, "GL-COUNT-UP-NV", (GLenum) GL_COUNT_UP_NV, "GL_COUNT_UP_NV");
#endif
#if defined(GL_COUNT_DOWN_NV)
defconsti(env, "GL-COUNT-DOWN-NV", (GLenum) GL_COUNT_DOWN_NV, "GL_COUNT_DOWN_NV");
#endif
#if defined(GL_PATH_OBJECT_BOUNDING_BOX_NV)
defconsti(env, "GL-PATH-OBJECT-BOUNDING-BOX-NV", (GLenum) GL_PATH_OBJECT_BOUNDING_BOX_NV, "GL_PATH_OBJECT_BOUNDING_BOX_NV");
#endif
#if defined(GL_CONVEX_HULL_NV)
defconsti(env, "GL-CONVEX-HULL-NV", (GLenum) GL_CONVEX_HULL_NV, "GL_CONVEX_HULL_NV");
#endif
#if defined(GL_BOUNDING_BOX_NV)
defconsti(env, "GL-BOUNDING-BOX-NV", (GLenum) GL_BOUNDING_BOX_NV, "GL_BOUNDING_BOX_NV");
#endif
#if defined(GL_TRANSLATE_X_NV)
defconsti(env, "GL-TRANSLATE-X-NV", (GLenum) GL_TRANSLATE_X_NV, "GL_TRANSLATE_X_NV");
#endif
#if defined(GL_TRANSLATE_Y_NV)
defconsti(env, "GL-TRANSLATE-Y-NV", (GLenum) GL_TRANSLATE_Y_NV, "GL_TRANSLATE_Y_NV");
#endif
#if defined(GL_TRANSLATE_2D_NV)
defconsti(env, "GL-TRANSLATE-2D-NV", (GLenum) GL_TRANSLATE_2D_NV, "GL_TRANSLATE_2D_NV");
#endif
#if defined(GL_TRANSLATE_3D_NV)
defconsti(env, "GL-TRANSLATE-3D-NV", (GLenum) GL_TRANSLATE_3D_NV, "GL_TRANSLATE_3D_NV");
#endif
#if defined(GL_AFFINE_2D_NV)
defconsti(env, "GL-AFFINE-2D-NV", (GLenum) GL_AFFINE_2D_NV, "GL_AFFINE_2D_NV");
#endif
#if defined(GL_AFFINE_3D_NV)
defconsti(env, "GL-AFFINE-3D-NV", (GLenum) GL_AFFINE_3D_NV, "GL_AFFINE_3D_NV");
#endif
#if defined(GL_TRANSPOSE_AFFINE_2D_NV)
defconsti(env, "GL-TRANSPOSE-AFFINE-2D-NV", (GLenum) GL_TRANSPOSE_AFFINE_2D_NV, "GL_TRANSPOSE_AFFINE_2D_NV");
#endif
#if defined(GL_TRANSPOSE_AFFINE_3D_NV)
defconsti(env, "GL-TRANSPOSE-AFFINE-3D-NV", (GLenum) GL_TRANSPOSE_AFFINE_3D_NV, "GL_TRANSPOSE_AFFINE_3D_NV");
#endif
#if defined(GL_UTF8_NV)
defconsti(env, "GL-UTF8-NV", (GLenum) GL_UTF8_NV, "GL_UTF8_NV");
#endif
#if defined(GL_UTF16_NV)
defconsti(env, "GL-UTF16-NV", (GLenum) GL_UTF16_NV, "GL_UTF16_NV");
#endif
#if defined(GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV)
defconsti(env, "GL-BOUNDING-BOX-OF-BOUNDING-BOXES-NV", (GLenum) GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV, "GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV");
#endif
#if defined(GL_PATH_COMMAND_COUNT_NV)
defconsti(env, "GL-PATH-COMMAND-COUNT-NV", (GLenum) GL_PATH_COMMAND_COUNT_NV, "GL_PATH_COMMAND_COUNT_NV");
#endif
#if defined(GL_PATH_COORD_COUNT_NV)
defconsti(env, "GL-PATH-COORD-COUNT-NV", (GLenum) GL_PATH_COORD_COUNT_NV, "GL_PATH_COORD_COUNT_NV");
#endif
#if defined(GL_PATH_DASH_ARRAY_COUNT_NV)
defconsti(env, "GL-PATH-DASH-ARRAY-COUNT-NV", (GLenum) GL_PATH_DASH_ARRAY_COUNT_NV, "GL_PATH_DASH_ARRAY_COUNT_NV");
#endif
#if defined(GL_PATH_COMPUTED_LENGTH_NV)
defconsti(env, "GL-PATH-COMPUTED-LENGTH-NV", (GLenum) GL_PATH_COMPUTED_LENGTH_NV, "GL_PATH_COMPUTED_LENGTH_NV");
#endif
#if defined(GL_PATH_FILL_BOUNDING_BOX_NV)
defconsti(env, "GL-PATH-FILL-BOUNDING-BOX-NV", (GLenum) GL_PATH_FILL_BOUNDING_BOX_NV, "GL_PATH_FILL_BOUNDING_BOX_NV");
#endif
#if defined(GL_PATH_STROKE_BOUNDING_BOX_NV)
defconsti(env, "GL-PATH-STROKE-BOUNDING-BOX-NV", (GLenum) GL_PATH_STROKE_BOUNDING_BOX_NV, "GL_PATH_STROKE_BOUNDING_BOX_NV");
#endif
#if defined(GL_SQUARE_NV)
defconsti(env, "GL-SQUARE-NV", (GLenum) GL_SQUARE_NV, "GL_SQUARE_NV");
#endif
#if defined(GL_ROUND_NV)
defconsti(env, "GL-ROUND-NV", (GLenum) GL_ROUND_NV, "GL_ROUND_NV");
#endif
#if defined(GL_TRIANGULAR_NV)
defconsti(env, "GL-TRIANGULAR-NV", (GLenum) GL_TRIANGULAR_NV, "GL_TRIANGULAR_NV");
#endif
#if defined(GL_BEVEL_NV)
defconsti(env, "GL-BEVEL-NV", (GLenum) GL_BEVEL_NV, "GL_BEVEL_NV");
#endif
#if defined(GL_MITER_REVERT_NV)
defconsti(env, "GL-MITER-REVERT-NV", (GLenum) GL_MITER_REVERT_NV, "GL_MITER_REVERT_NV");
#endif
#if defined(GL_MITER_TRUNCATE_NV)
defconsti(env, "GL-MITER-TRUNCATE-NV", (GLenum) GL_MITER_TRUNCATE_NV, "GL_MITER_TRUNCATE_NV");
#endif
#if defined(GL_SKIP_MISSING_GLYPH_NV)
defconsti(env, "GL-SKIP-MISSING-GLYPH-NV", (GLenum) GL_SKIP_MISSING_GLYPH_NV, "GL_SKIP_MISSING_GLYPH_NV");
#endif
#if defined(GL_USE_MISSING_GLYPH_NV)
defconsti(env, "GL-USE-MISSING-GLYPH-NV", (GLenum) GL_USE_MISSING_GLYPH_NV, "GL_USE_MISSING_GLYPH_NV");
#endif
#if defined(GL_PATH_ERROR_POSITION_NV)
defconsti(env, "GL-PATH-ERROR-POSITION-NV", (GLenum) GL_PATH_ERROR_POSITION_NV, "GL_PATH_ERROR_POSITION_NV");
#endif
#if defined(GL_PATH_FOG_GEN_MODE_NV)
defconsti(env, "GL-PATH-FOG-GEN-MODE-NV", (GLenum) GL_PATH_FOG_GEN_MODE_NV, "GL_PATH_FOG_GEN_MODE_NV");
#endif
#if defined(GL_ACCUM_ADJACENT_PAIRS_NV)
defconsti(env, "GL-ACCUM-ADJACENT-PAIRS-NV", (GLenum) GL_ACCUM_ADJACENT_PAIRS_NV, "GL_ACCUM_ADJACENT_PAIRS_NV");
#endif
#if defined(GL_ADJACENT_PAIRS_NV)
defconsti(env, "GL-ADJACENT-PAIRS-NV", (GLenum) GL_ADJACENT_PAIRS_NV, "GL_ADJACENT_PAIRS_NV");
#endif
#if defined(GL_FIRST_TO_REST_NV)
defconsti(env, "GL-FIRST-TO-REST-NV", (GLenum) GL_FIRST_TO_REST_NV, "GL_FIRST_TO_REST_NV");
#endif
#if defined(GL_PATH_GEN_MODE_NV)
defconsti(env, "GL-PATH-GEN-MODE-NV", (GLenum) GL_PATH_GEN_MODE_NV, "GL_PATH_GEN_MODE_NV");
#endif
#if defined(GL_PATH_GEN_COEFF_NV)
defconsti(env, "GL-PATH-GEN-COEFF-NV", (GLenum) GL_PATH_GEN_COEFF_NV, "GL_PATH_GEN_COEFF_NV");
#endif
#if defined(GL_PATH_GEN_COLOR_FORMAT_NV)
defconsti(env, "GL-PATH-GEN-COLOR-FORMAT-NV", (GLenum) GL_PATH_GEN_COLOR_FORMAT_NV, "GL_PATH_GEN_COLOR_FORMAT_NV");
#endif
#if defined(GL_PATH_GEN_COMPONENTS_NV)
defconsti(env, "GL-PATH-GEN-COMPONENTS-NV", (GLenum) GL_PATH_GEN_COMPONENTS_NV, "GL_PATH_GEN_COMPONENTS_NV");
#endif
#if defined(GL_PATH_DASH_OFFSET_RESET_NV)
defconsti(env, "GL-PATH-DASH-OFFSET-RESET-NV", (GLenum) GL_PATH_DASH_OFFSET_RESET_NV, "GL_PATH_DASH_OFFSET_RESET_NV");
#endif
#if defined(GL_MOVE_TO_RESETS_NV)
defconsti(env, "GL-MOVE-TO-RESETS-NV", (GLenum) GL_MOVE_TO_RESETS_NV, "GL_MOVE_TO_RESETS_NV");
#endif
#if defined(GL_MOVE_TO_CONTINUES_NV)
defconsti(env, "GL-MOVE-TO-CONTINUES-NV", (GLenum) GL_MOVE_TO_CONTINUES_NV, "GL_MOVE_TO_CONTINUES_NV");
#endif
#if defined(GL_PATH_STENCIL_FUNC_NV)
defconsti(env, "GL-PATH-STENCIL-FUNC-NV", (GLenum) GL_PATH_STENCIL_FUNC_NV, "GL_PATH_STENCIL_FUNC_NV");
#endif
#if defined(GL_PATH_STENCIL_REF_NV)
defconsti(env, "GL-PATH-STENCIL-REF-NV", (GLenum) GL_PATH_STENCIL_REF_NV, "GL_PATH_STENCIL_REF_NV");
#endif
#if defined(GL_PATH_STENCIL_VALUE_MASK_NV)
defconsti(env, "GL-PATH-STENCIL-VALUE-MASK-NV", (GLenum) GL_PATH_STENCIL_VALUE_MASK_NV, "GL_PATH_STENCIL_VALUE_MASK_NV");
#endif
#if defined(GL_SCALED_RESOLVE_FASTEST_EXT)
defconsti(env, "GL-SCALED-RESOLVE-FASTEST-EXT", (GLenum) GL_SCALED_RESOLVE_FASTEST_EXT, "GL_SCALED_RESOLVE_FASTEST_EXT");
#endif
#if defined(GL_SCALED_RESOLVE_NICEST_EXT)
defconsti(env, "GL-SCALED-RESOLVE-NICEST-EXT", (GLenum) GL_SCALED_RESOLVE_NICEST_EXT, "GL_SCALED_RESOLVE_NICEST_EXT");
#endif
#if defined(GL_MIN_MAP_BUFFER_ALIGNMENT)
defconsti(env, "GL-MIN-MAP-BUFFER-ALIGNMENT", (GLenum) GL_MIN_MAP_BUFFER_ALIGNMENT, "GL_MIN_MAP_BUFFER_ALIGNMENT");
#endif
#if defined(GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV)
defconsti(env, "GL-PATH-STENCIL-DEPTH-OFFSET-FACTOR-NV", (GLenum) GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV, "GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV");
#endif
#if defined(GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV)
defconsti(env, "GL-PATH-STENCIL-DEPTH-OFFSET-UNITS-NV", (GLenum) GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV, "GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV");
#endif
#if defined(GL_PATH_COVER_DEPTH_FUNC_NV)
defconsti(env, "GL-PATH-COVER-DEPTH-FUNC-NV", (GLenum) GL_PATH_COVER_DEPTH_FUNC_NV, "GL_PATH_COVER_DEPTH_FUNC_NV");
#endif
#if defined(GL_IMAGE_FORMAT_COMPATIBILITY_TYPE)
defconsti(env, "GL-IMAGE-FORMAT-COMPATIBILITY-TYPE", (GLenum) GL_IMAGE_FORMAT_COMPATIBILITY_TYPE, "GL_IMAGE_FORMAT_COMPATIBILITY_TYPE");
#endif
#if defined(GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE)
defconsti(env, "GL-IMAGE-FORMAT-COMPATIBILITY-BY-SIZE", (GLenum) GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE, "GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE");
#endif
#if defined(GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS)
defconsti(env, "GL-IMAGE-FORMAT-COMPATIBILITY-BY-CLASS", (GLenum) GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS, "GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS");
#endif
#if defined(GL_MAX_VERTEX_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-VERTEX-IMAGE-UNIFORMS", (GLenum) GL_MAX_VERTEX_IMAGE_UNIFORMS, "GL_MAX_VERTEX_IMAGE_UNIFORMS");
#endif
#if defined(GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-TESS-CONTROL-IMAGE-UNIFORMS", (GLenum) GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS, "GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS");
#endif
#if defined(GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT)
defconsti(env, "GL-MAX-TESS-CONTROL-IMAGE-UNIFORMS-EXT", (GLenum) GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT, "GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT");
#endif
#if defined(GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES)
defconsti(env, "GL-MAX-TESS-CONTROL-IMAGE-UNIFORMS-OES", (GLenum) GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES, "GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES");
#endif
#if defined(GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-TESS-EVALUATION-IMAGE-UNIFORMS", (GLenum) GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS, "GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT)
defconsti(env, "GL-MAX-TESS-EVALUATION-IMAGE-UNIFORMS-EXT", (GLenum) GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT, "GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT");
#endif
#if defined(GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES)
defconsti(env, "GL-MAX-TESS-EVALUATION-IMAGE-UNIFORMS-OES", (GLenum) GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES, "GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES");
#endif
#if defined(GL_MAX_GEOMETRY_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-GEOMETRY-IMAGE-UNIFORMS", (GLenum) GL_MAX_GEOMETRY_IMAGE_UNIFORMS, "GL_MAX_GEOMETRY_IMAGE_UNIFORMS");
#endif
#if defined(GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-IMAGE-UNIFORMS-EXT", (GLenum) GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT, "GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_IMAGE_UNIFORMS_OES)
defconsti(env, "GL-MAX-GEOMETRY-IMAGE-UNIFORMS-OES", (GLenum) GL_MAX_GEOMETRY_IMAGE_UNIFORMS_OES, "GL_MAX_GEOMETRY_IMAGE_UNIFORMS_OES");
#endif
#if defined(GL_MAX_FRAGMENT_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-FRAGMENT-IMAGE-UNIFORMS", (GLenum) GL_MAX_FRAGMENT_IMAGE_UNIFORMS, "GL_MAX_FRAGMENT_IMAGE_UNIFORMS");
#endif
#if defined(GL_MAX_COMBINED_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-COMBINED-IMAGE-UNIFORMS", (GLenum) GL_MAX_COMBINED_IMAGE_UNIFORMS, "GL_MAX_COMBINED_IMAGE_UNIFORMS");
#endif
#if defined(GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV)
defconsti(env, "GL-MAX-DEEP-3D-TEXTURE-WIDTH-HEIGHT-NV", (GLenum) GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV, "GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV");
#endif
#if defined(GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV)
defconsti(env, "GL-MAX-DEEP-3D-TEXTURE-DEPTH-NV", (GLenum) GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV, "GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER)
defconsti(env, "GL-SHADER-STORAGE-BUFFER", (GLenum) GL_SHADER_STORAGE_BUFFER, "GL_SHADER_STORAGE_BUFFER");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER_BINDING)
defconsti(env, "GL-SHADER-STORAGE-BUFFER-BINDING", (GLenum) GL_SHADER_STORAGE_BUFFER_BINDING, "GL_SHADER_STORAGE_BUFFER_BINDING");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER_START)
defconsti(env, "GL-SHADER-STORAGE-BUFFER-START", (GLenum) GL_SHADER_STORAGE_BUFFER_START, "GL_SHADER_STORAGE_BUFFER_START");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER_SIZE)
defconsti(env, "GL-SHADER-STORAGE-BUFFER-SIZE", (GLenum) GL_SHADER_STORAGE_BUFFER_SIZE, "GL_SHADER_STORAGE_BUFFER_SIZE");
#endif
#if defined(GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-VERTEX-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS, "GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-GEOMETRY-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS, "GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-SHADER-STORAGE-BLOCKS-EXT", (GLenum) GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT, "GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES)
defconsti(env, "GL-MAX-GEOMETRY-SHADER-STORAGE-BLOCKS-OES", (GLenum) GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES, "GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES");
#endif
#if defined(GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-TESS-CONTROL-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS, "GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT)
defconsti(env, "GL-MAX-TESS-CONTROL-SHADER-STORAGE-BLOCKS-EXT", (GLenum) GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT, "GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT");
#endif
#if defined(GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES)
defconsti(env, "GL-MAX-TESS-CONTROL-SHADER-STORAGE-BLOCKS-OES", (GLenum) GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES, "GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES");
#endif
#if defined(GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-TESS-EVALUATION-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS, "GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT)
defconsti(env, "GL-MAX-TESS-EVALUATION-SHADER-STORAGE-BLOCKS-EXT", (GLenum) GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT, "GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT");
#endif
#if defined(GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES)
defconsti(env, "GL-MAX-TESS-EVALUATION-SHADER-STORAGE-BLOCKS-OES", (GLenum) GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES, "GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES");
#endif
#if defined(GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-FRAGMENT-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS, "GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-COMPUTE-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS, "GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-COMBINED-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS, "GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS)
defconsti(env, "GL-MAX-SHADER-STORAGE-BUFFER-BINDINGS", (GLenum) GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS, "GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS");
#endif
#if defined(GL_MAX_SHADER_STORAGE_BLOCK_SIZE)
defconsti(env, "GL-MAX-SHADER-STORAGE-BLOCK-SIZE", (GLenum) GL_MAX_SHADER_STORAGE_BLOCK_SIZE, "GL_MAX_SHADER_STORAGE_BLOCK_SIZE");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT)
defconsti(env, "GL-SHADER-STORAGE-BUFFER-OFFSET-ALIGNMENT", (GLenum) GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT, "GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT");
#endif
#if defined(GL_SYNC_X11_FENCE_EXT)
defconsti(env, "GL-SYNC-X11-FENCE-EXT", (GLenum) GL_SYNC_X11_FENCE_EXT, "GL_SYNC_X11_FENCE_EXT");
#endif
#if defined(GL_DEPTH_STENCIL_TEXTURE_MODE)
defconsti(env, "GL-DEPTH-STENCIL-TEXTURE-MODE", (GLenum) GL_DEPTH_STENCIL_TEXTURE_MODE, "GL_DEPTH_STENCIL_TEXTURE_MODE");
#endif
#if defined(GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS)
defconsti(env, "GL-MAX-COMPUTE-WORK-GROUP-INVOCATIONS", (GLenum) GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS, "GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS");
#endif
#if defined(GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB)
defconsti(env, "GL-MAX-COMPUTE-FIXED-GROUP-INVOCATIONS-ARB", (GLenum) GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB, "GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-COMPUTE-SHADER", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER, "GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-COMPUTE-SHADER", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER");
#endif
#if defined(GL_DISPATCH_INDIRECT_BUFFER)
defconsti(env, "GL-DISPATCH-INDIRECT-BUFFER", (GLenum) GL_DISPATCH_INDIRECT_BUFFER, "GL_DISPATCH_INDIRECT_BUFFER");
#endif
#if defined(GL_DISPATCH_INDIRECT_BUFFER_BINDING)
defconsti(env, "GL-DISPATCH-INDIRECT-BUFFER-BINDING", (GLenum) GL_DISPATCH_INDIRECT_BUFFER_BINDING, "GL_DISPATCH_INDIRECT_BUFFER_BINDING");
#endif
#if defined(GL_COLOR_ATTACHMENT_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT-EXT", (GLenum) GL_COLOR_ATTACHMENT_EXT, "GL_COLOR_ATTACHMENT_EXT");
#endif
#if defined(GL_MULTIVIEW_EXT)
defconsti(env, "GL-MULTIVIEW-EXT", (GLenum) GL_MULTIVIEW_EXT, "GL_MULTIVIEW_EXT");
#endif
#if defined(GL_MAX_MULTIVIEW_BUFFERS_EXT)
defconsti(env, "GL-MAX-MULTIVIEW-BUFFERS-EXT", (GLenum) GL_MAX_MULTIVIEW_BUFFERS_EXT, "GL_MAX_MULTIVIEW_BUFFERS_EXT");
#endif
#if defined(GL_CONTEXT_ROBUST_ACCESS)
defconsti(env, "GL-CONTEXT-ROBUST-ACCESS", (GLenum) GL_CONTEXT_ROBUST_ACCESS, "GL_CONTEXT_ROBUST_ACCESS");
#endif
#if defined(GL_CONTEXT_ROBUST_ACCESS_EXT)
defconsti(env, "GL-CONTEXT-ROBUST-ACCESS-EXT", (GLenum) GL_CONTEXT_ROBUST_ACCESS_EXT, "GL_CONTEXT_ROBUST_ACCESS_EXT");
#endif
#if defined(GL_CONTEXT_ROBUST_ACCESS_KHR)
defconsti(env, "GL-CONTEXT-ROBUST-ACCESS-KHR", (GLenum) GL_CONTEXT_ROBUST_ACCESS_KHR, "GL_CONTEXT_ROBUST_ACCESS_KHR");
#endif
#if defined(GL_COMPUTE_PROGRAM_NV)
defconsti(env, "GL-COMPUTE-PROGRAM-NV", (GLenum) GL_COMPUTE_PROGRAM_NV, "GL_COMPUTE_PROGRAM_NV");
#endif
#if defined(GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV)
defconsti(env, "GL-COMPUTE-PROGRAM-PARAMETER-BUFFER-NV", (GLenum) GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV, "GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV");
#endif
#if defined(GL_TEXTURE_2D_MULTISAMPLE)
defconsti(env, "GL-TEXTURE-2D-MULTISAMPLE", (GLenum) GL_TEXTURE_2D_MULTISAMPLE, "GL_TEXTURE_2D_MULTISAMPLE");
#endif
#if defined(GL_PROXY_TEXTURE_2D_MULTISAMPLE)
defconsti(env, "GL-PROXY-TEXTURE-2D-MULTISAMPLE", (GLenum) GL_PROXY_TEXTURE_2D_MULTISAMPLE, "GL_PROXY_TEXTURE_2D_MULTISAMPLE");
#endif
#if defined(GL_TEXTURE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-TEXTURE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_TEXTURE_2D_MULTISAMPLE_ARRAY, "GL_TEXTURE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES)
defconsti(env, "GL-TEXTURE-2D-MULTISAMPLE-ARRAY-OES", (GLenum) GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES, "GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES");
#endif
#if defined(GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-PROXY-TEXTURE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY, "GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_TEXTURE_BINDING_2D_MULTISAMPLE)
defconsti(env, "GL-TEXTURE-BINDING-2D-MULTISAMPLE", (GLenum) GL_TEXTURE_BINDING_2D_MULTISAMPLE, "GL_TEXTURE_BINDING_2D_MULTISAMPLE");
#endif
#if defined(GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-TEXTURE-BINDING-2D-MULTISAMPLE-ARRAY", (GLenum) GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY, "GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES)
defconsti(env, "GL-TEXTURE-BINDING-2D-MULTISAMPLE-ARRAY-OES", (GLenum) GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES, "GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES");
#endif
#if defined(GL_TEXTURE_SAMPLES)
defconsti(env, "GL-TEXTURE-SAMPLES", (GLenum) GL_TEXTURE_SAMPLES, "GL_TEXTURE_SAMPLES");
#endif
#if defined(GL_TEXTURE_FIXED_SAMPLE_LOCATIONS)
defconsti(env, "GL-TEXTURE-FIXED-SAMPLE-LOCATIONS", (GLenum) GL_TEXTURE_FIXED_SAMPLE_LOCATIONS, "GL_TEXTURE_FIXED_SAMPLE_LOCATIONS");
#endif
#if defined(GL_SAMPLER_2D_MULTISAMPLE)
defconsti(env, "GL-SAMPLER-2D-MULTISAMPLE", (GLenum) GL_SAMPLER_2D_MULTISAMPLE, "GL_SAMPLER_2D_MULTISAMPLE");
#endif
#if defined(GL_INT_SAMPLER_2D_MULTISAMPLE)
defconsti(env, "GL-INT-SAMPLER-2D-MULTISAMPLE", (GLenum) GL_INT_SAMPLER_2D_MULTISAMPLE, "GL_INT_SAMPLER_2D_MULTISAMPLE");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-MULTISAMPLE", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE, "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE");
#endif
#if defined(GL_SAMPLER_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-SAMPLER-2D-MULTISAMPLE-ARRAY", (GLenum) GL_SAMPLER_2D_MULTISAMPLE_ARRAY, "GL_SAMPLER_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES)
defconsti(env, "GL-SAMPLER-2D-MULTISAMPLE-ARRAY-OES", (GLenum) GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES, "GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES");
#endif
#if defined(GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-INT-SAMPLER-2D-MULTISAMPLE-ARRAY", (GLenum) GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY, "GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES)
defconsti(env, "GL-INT-SAMPLER-2D-MULTISAMPLE-ARRAY-OES", (GLenum) GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES, "GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-MULTISAMPLE-ARRAY", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY, "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-MULTISAMPLE-ARRAY-OES", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES, "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES");
#endif
#if defined(GL_MAX_COLOR_TEXTURE_SAMPLES)
defconsti(env, "GL-MAX-COLOR-TEXTURE-SAMPLES", (GLenum) GL_MAX_COLOR_TEXTURE_SAMPLES, "GL_MAX_COLOR_TEXTURE_SAMPLES");
#endif
#if defined(GL_MAX_DEPTH_TEXTURE_SAMPLES)
defconsti(env, "GL-MAX-DEPTH-TEXTURE-SAMPLES", (GLenum) GL_MAX_DEPTH_TEXTURE_SAMPLES, "GL_MAX_DEPTH_TEXTURE_SAMPLES");
#endif
#if defined(GL_MAX_INTEGER_SAMPLES)
defconsti(env, "GL-MAX-INTEGER-SAMPLES", (GLenum) GL_MAX_INTEGER_SAMPLES, "GL_MAX_INTEGER_SAMPLES");
#endif
#if defined(GL_MAX_SERVER_WAIT_TIMEOUT)
defconsti(env, "GL-MAX-SERVER-WAIT-TIMEOUT", (GLenum) GL_MAX_SERVER_WAIT_TIMEOUT, "GL_MAX_SERVER_WAIT_TIMEOUT");
#endif
#if defined(GL_MAX_SERVER_WAIT_TIMEOUT_APPLE)
defconsti(env, "GL-MAX-SERVER-WAIT-TIMEOUT-APPLE", (GLenum) GL_MAX_SERVER_WAIT_TIMEOUT_APPLE, "GL_MAX_SERVER_WAIT_TIMEOUT_APPLE");
#endif
#if defined(GL_OBJECT_TYPE)
defconsti(env, "GL-OBJECT-TYPE", (GLenum) GL_OBJECT_TYPE, "GL_OBJECT_TYPE");
#endif
#if defined(GL_OBJECT_TYPE_APPLE)
defconsti(env, "GL-OBJECT-TYPE-APPLE", (GLenum) GL_OBJECT_TYPE_APPLE, "GL_OBJECT_TYPE_APPLE");
#endif
#if defined(GL_SYNC_CONDITION)
defconsti(env, "GL-SYNC-CONDITION", (GLenum) GL_SYNC_CONDITION, "GL_SYNC_CONDITION");
#endif
#if defined(GL_SYNC_CONDITION_APPLE)
defconsti(env, "GL-SYNC-CONDITION-APPLE", (GLenum) GL_SYNC_CONDITION_APPLE, "GL_SYNC_CONDITION_APPLE");
#endif
#if defined(GL_SYNC_STATUS)
defconsti(env, "GL-SYNC-STATUS", (GLenum) GL_SYNC_STATUS, "GL_SYNC_STATUS");
#endif
#if defined(GL_SYNC_STATUS_APPLE)
defconsti(env, "GL-SYNC-STATUS-APPLE", (GLenum) GL_SYNC_STATUS_APPLE, "GL_SYNC_STATUS_APPLE");
#endif
#if defined(GL_SYNC_FLAGS)
defconsti(env, "GL-SYNC-FLAGS", (GLenum) GL_SYNC_FLAGS, "GL_SYNC_FLAGS");
#endif
#if defined(GL_SYNC_FLAGS_APPLE)
defconsti(env, "GL-SYNC-FLAGS-APPLE", (GLenum) GL_SYNC_FLAGS_APPLE, "GL_SYNC_FLAGS_APPLE");
#endif
#if defined(GL_SYNC_FENCE)
defconsti(env, "GL-SYNC-FENCE", (GLenum) GL_SYNC_FENCE, "GL_SYNC_FENCE");
#endif
#if defined(GL_SYNC_FENCE_APPLE)
defconsti(env, "GL-SYNC-FENCE-APPLE", (GLenum) GL_SYNC_FENCE_APPLE, "GL_SYNC_FENCE_APPLE");
#endif
#if defined(GL_SYNC_GPU_COMMANDS_COMPLETE)
defconsti(env, "GL-SYNC-GPU-COMMANDS-COMPLETE", (GLenum) GL_SYNC_GPU_COMMANDS_COMPLETE, "GL_SYNC_GPU_COMMANDS_COMPLETE");
#endif
#if defined(GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE)
defconsti(env, "GL-SYNC-GPU-COMMANDS-COMPLETE-APPLE", (GLenum) GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE, "GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE");
#endif
#if defined(GL_UNSIGNALED)
defconsti(env, "GL-UNSIGNALED", (GLenum) GL_UNSIGNALED, "GL_UNSIGNALED");
#endif
#if defined(GL_UNSIGNALED_APPLE)
defconsti(env, "GL-UNSIGNALED-APPLE", (GLenum) GL_UNSIGNALED_APPLE, "GL_UNSIGNALED_APPLE");
#endif
#if defined(GL_SIGNALED)
defconsti(env, "GL-SIGNALED", (GLenum) GL_SIGNALED, "GL_SIGNALED");
#endif
#if defined(GL_SIGNALED_APPLE)
defconsti(env, "GL-SIGNALED-APPLE", (GLenum) GL_SIGNALED_APPLE, "GL_SIGNALED_APPLE");
#endif
#if defined(GL_ALREADY_SIGNALED)
defconsti(env, "GL-ALREADY-SIGNALED", (GLenum) GL_ALREADY_SIGNALED, "GL_ALREADY_SIGNALED");
#endif
#if defined(GL_ALREADY_SIGNALED_APPLE)
defconsti(env, "GL-ALREADY-SIGNALED-APPLE", (GLenum) GL_ALREADY_SIGNALED_APPLE, "GL_ALREADY_SIGNALED_APPLE");
#endif
#if defined(GL_TIMEOUT_EXPIRED)
defconsti(env, "GL-TIMEOUT-EXPIRED", (GLenum) GL_TIMEOUT_EXPIRED, "GL_TIMEOUT_EXPIRED");
#endif
#if defined(GL_TIMEOUT_EXPIRED_APPLE)
defconsti(env, "GL-TIMEOUT-EXPIRED-APPLE", (GLenum) GL_TIMEOUT_EXPIRED_APPLE, "GL_TIMEOUT_EXPIRED_APPLE");
#endif
#if defined(GL_CONDITION_SATISFIED)
defconsti(env, "GL-CONDITION-SATISFIED", (GLenum) GL_CONDITION_SATISFIED, "GL_CONDITION_SATISFIED");
#endif
#if defined(GL_CONDITION_SATISFIED_APPLE)
defconsti(env, "GL-CONDITION-SATISFIED-APPLE", (GLenum) GL_CONDITION_SATISFIED_APPLE, "GL_CONDITION_SATISFIED_APPLE");
#endif
#if defined(GL_WAIT_FAILED)
defconsti(env, "GL-WAIT-FAILED", (GLenum) GL_WAIT_FAILED, "GL_WAIT_FAILED");
#endif
#if defined(GL_WAIT_FAILED_APPLE)
defconsti(env, "GL-WAIT-FAILED-APPLE", (GLenum) GL_WAIT_FAILED_APPLE, "GL_WAIT_FAILED_APPLE");
#endif
#if defined(GL_BUFFER_ACCESS_FLAGS)
defconsti(env, "GL-BUFFER-ACCESS-FLAGS", (GLenum) GL_BUFFER_ACCESS_FLAGS, "GL_BUFFER_ACCESS_FLAGS");
#endif
#if defined(GL_BUFFER_MAP_LENGTH)
defconsti(env, "GL-BUFFER-MAP-LENGTH", (GLenum) GL_BUFFER_MAP_LENGTH, "GL_BUFFER_MAP_LENGTH");
#endif
#if defined(GL_BUFFER_MAP_OFFSET)
defconsti(env, "GL-BUFFER-MAP-OFFSET", (GLenum) GL_BUFFER_MAP_OFFSET, "GL_BUFFER_MAP_OFFSET");
#endif
#if defined(GL_MAX_VERTEX_OUTPUT_COMPONENTS)
defconsti(env, "GL-MAX-VERTEX-OUTPUT-COMPONENTS", (GLenum) GL_MAX_VERTEX_OUTPUT_COMPONENTS, "GL_MAX_VERTEX_OUTPUT_COMPONENTS");
#endif
#if defined(GL_MAX_GEOMETRY_INPUT_COMPONENTS)
defconsti(env, "GL-MAX-GEOMETRY-INPUT-COMPONENTS", (GLenum) GL_MAX_GEOMETRY_INPUT_COMPONENTS, "GL_MAX_GEOMETRY_INPUT_COMPONENTS");
#endif
#if defined(GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-INPUT-COMPONENTS-EXT", (GLenum) GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT, "GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_INPUT_COMPONENTS_OES)
defconsti(env, "GL-MAX-GEOMETRY-INPUT-COMPONENTS-OES", (GLenum) GL_MAX_GEOMETRY_INPUT_COMPONENTS_OES, "GL_MAX_GEOMETRY_INPUT_COMPONENTS_OES");
#endif
#if defined(GL_MAX_GEOMETRY_OUTPUT_COMPONENTS)
defconsti(env, "GL-MAX-GEOMETRY-OUTPUT-COMPONENTS", (GLenum) GL_MAX_GEOMETRY_OUTPUT_COMPONENTS, "GL_MAX_GEOMETRY_OUTPUT_COMPONENTS");
#endif
#if defined(GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-OUTPUT-COMPONENTS-EXT", (GLenum) GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT, "GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_OES)
defconsti(env, "GL-MAX-GEOMETRY-OUTPUT-COMPONENTS-OES", (GLenum) GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_OES, "GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_OES");
#endif
#if defined(GL_MAX_FRAGMENT_INPUT_COMPONENTS)
defconsti(env, "GL-MAX-FRAGMENT-INPUT-COMPONENTS", (GLenum) GL_MAX_FRAGMENT_INPUT_COMPONENTS, "GL_MAX_FRAGMENT_INPUT_COMPONENTS");
#endif
#if defined(GL_CONTEXT_PROFILE_MASK)
defconsti(env, "GL-CONTEXT-PROFILE-MASK", (GLenum) GL_CONTEXT_PROFILE_MASK, "GL_CONTEXT_PROFILE_MASK");
#endif
#if defined(GL_UNPACK_COMPRESSED_BLOCK_WIDTH)
defconsti(env, "GL-UNPACK-COMPRESSED-BLOCK-WIDTH", (GLenum) GL_UNPACK_COMPRESSED_BLOCK_WIDTH, "GL_UNPACK_COMPRESSED_BLOCK_WIDTH");
#endif
#if defined(GL_UNPACK_COMPRESSED_BLOCK_HEIGHT)
defconsti(env, "GL-UNPACK-COMPRESSED-BLOCK-HEIGHT", (GLenum) GL_UNPACK_COMPRESSED_BLOCK_HEIGHT, "GL_UNPACK_COMPRESSED_BLOCK_HEIGHT");
#endif
#if defined(GL_UNPACK_COMPRESSED_BLOCK_DEPTH)
defconsti(env, "GL-UNPACK-COMPRESSED-BLOCK-DEPTH", (GLenum) GL_UNPACK_COMPRESSED_BLOCK_DEPTH, "GL_UNPACK_COMPRESSED_BLOCK_DEPTH");
#endif
#if defined(GL_UNPACK_COMPRESSED_BLOCK_SIZE)
defconsti(env, "GL-UNPACK-COMPRESSED-BLOCK-SIZE", (GLenum) GL_UNPACK_COMPRESSED_BLOCK_SIZE, "GL_UNPACK_COMPRESSED_BLOCK_SIZE");
#endif
#if defined(GL_PACK_COMPRESSED_BLOCK_WIDTH)
defconsti(env, "GL-PACK-COMPRESSED-BLOCK-WIDTH", (GLenum) GL_PACK_COMPRESSED_BLOCK_WIDTH, "GL_PACK_COMPRESSED_BLOCK_WIDTH");
#endif
#if defined(GL_PACK_COMPRESSED_BLOCK_HEIGHT)
defconsti(env, "GL-PACK-COMPRESSED-BLOCK-HEIGHT", (GLenum) GL_PACK_COMPRESSED_BLOCK_HEIGHT, "GL_PACK_COMPRESSED_BLOCK_HEIGHT");
#endif
#if defined(GL_PACK_COMPRESSED_BLOCK_DEPTH)
defconsti(env, "GL-PACK-COMPRESSED-BLOCK-DEPTH", (GLenum) GL_PACK_COMPRESSED_BLOCK_DEPTH, "GL_PACK_COMPRESSED_BLOCK_DEPTH");
#endif
#if defined(GL_PACK_COMPRESSED_BLOCK_SIZE)
defconsti(env, "GL-PACK-COMPRESSED-BLOCK-SIZE", (GLenum) GL_PACK_COMPRESSED_BLOCK_SIZE, "GL_PACK_COMPRESSED_BLOCK_SIZE");
#endif
#if defined(GL_TEXTURE_IMMUTABLE_FORMAT)
defconsti(env, "GL-TEXTURE-IMMUTABLE-FORMAT", (GLenum) GL_TEXTURE_IMMUTABLE_FORMAT, "GL_TEXTURE_IMMUTABLE_FORMAT");
#endif
#if defined(GL_TEXTURE_IMMUTABLE_FORMAT_EXT)
defconsti(env, "GL-TEXTURE-IMMUTABLE-FORMAT-EXT", (GLenum) GL_TEXTURE_IMMUTABLE_FORMAT_EXT, "GL_TEXTURE_IMMUTABLE_FORMAT_EXT");
#endif
#if defined(GL_SGX_PROGRAM_BINARY_IMG)
defconsti(env, "GL-SGX-PROGRAM-BINARY-IMG", (GLenum) GL_SGX_PROGRAM_BINARY_IMG, "GL_SGX_PROGRAM_BINARY_IMG");
#endif
#if defined(GL_RENDERBUFFER_SAMPLES_IMG)
defconsti(env, "GL-RENDERBUFFER-SAMPLES-IMG", (GLenum) GL_RENDERBUFFER_SAMPLES_IMG, "GL_RENDERBUFFER_SAMPLES_IMG");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MULTISAMPLE-IMG", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG, "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG");
#endif
#if defined(GL_MAX_SAMPLES_IMG)
defconsti(env, "GL-MAX-SAMPLES-IMG", (GLenum) GL_MAX_SAMPLES_IMG, "GL_MAX_SAMPLES_IMG");
#endif
#if defined(GL_TEXTURE_SAMPLES_IMG)
defconsti(env, "GL-TEXTURE-SAMPLES-IMG", (GLenum) GL_TEXTURE_SAMPLES_IMG, "GL_TEXTURE_SAMPLES_IMG");
#endif
#if defined(GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG)
defconsti(env, "GL-COMPRESSED-RGBA-PVRTC-2BPPV2-IMG", (GLenum) GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG, "GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG");
#endif
#if defined(GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG)
defconsti(env, "GL-COMPRESSED-RGBA-PVRTC-4BPPV2-IMG", (GLenum) GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG, "GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG");
#endif
#if defined(GL_CUBIC_IMG)
defconsti(env, "GL-CUBIC-IMG", (GLenum) GL_CUBIC_IMG, "GL_CUBIC_IMG");
#endif
#if defined(GL_CUBIC_MIPMAP_NEAREST_IMG)
defconsti(env, "GL-CUBIC-MIPMAP-NEAREST-IMG", (GLenum) GL_CUBIC_MIPMAP_NEAREST_IMG, "GL_CUBIC_MIPMAP_NEAREST_IMG");
#endif
#if defined(GL_CUBIC_MIPMAP_LINEAR_IMG)
defconsti(env, "GL-CUBIC-MIPMAP-LINEAR-IMG", (GLenum) GL_CUBIC_MIPMAP_LINEAR_IMG, "GL_CUBIC_MIPMAP_LINEAR_IMG");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_AND_DOWNSAMPLE_IMG)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MULTISAMPLE-AND-DOWNSAMPLE-IMG", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_AND_DOWNSAMPLE_IMG, "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_AND_DOWNSAMPLE_IMG");
#endif
#if defined(GL_NUM_DOWNSAMPLE_SCALES_IMG)
defconsti(env, "GL-NUM-DOWNSAMPLE-SCALES-IMG", (GLenum) GL_NUM_DOWNSAMPLE_SCALES_IMG, "GL_NUM_DOWNSAMPLE_SCALES_IMG");
#endif
#if defined(GL_DOWNSAMPLE_SCALES_IMG)
defconsti(env, "GL-DOWNSAMPLE-SCALES-IMG", (GLenum) GL_DOWNSAMPLE_SCALES_IMG, "GL_DOWNSAMPLE_SCALES_IMG");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-SCALE-IMG", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG");
#endif
#if defined(GL_MAX_DEBUG_MESSAGE_LENGTH)
defconsti(env, "GL-MAX-DEBUG-MESSAGE-LENGTH", (GLenum) GL_MAX_DEBUG_MESSAGE_LENGTH, "GL_MAX_DEBUG_MESSAGE_LENGTH");
#endif
#if defined(GL_MAX_DEBUG_MESSAGE_LENGTH_AMD)
defconsti(env, "GL-MAX-DEBUG-MESSAGE-LENGTH-AMD", (GLenum) GL_MAX_DEBUG_MESSAGE_LENGTH_AMD, "GL_MAX_DEBUG_MESSAGE_LENGTH_AMD");
#endif
#if defined(GL_MAX_DEBUG_MESSAGE_LENGTH_ARB)
defconsti(env, "GL-MAX-DEBUG-MESSAGE-LENGTH-ARB", (GLenum) GL_MAX_DEBUG_MESSAGE_LENGTH_ARB, "GL_MAX_DEBUG_MESSAGE_LENGTH_ARB");
#endif
#if defined(GL_MAX_DEBUG_MESSAGE_LENGTH_KHR)
defconsti(env, "GL-MAX-DEBUG-MESSAGE-LENGTH-KHR", (GLenum) GL_MAX_DEBUG_MESSAGE_LENGTH_KHR, "GL_MAX_DEBUG_MESSAGE_LENGTH_KHR");
#endif
#if defined(GL_MAX_DEBUG_LOGGED_MESSAGES)
defconsti(env, "GL-MAX-DEBUG-LOGGED-MESSAGES", (GLenum) GL_MAX_DEBUG_LOGGED_MESSAGES, "GL_MAX_DEBUG_LOGGED_MESSAGES");
#endif
#if defined(GL_MAX_DEBUG_LOGGED_MESSAGES_AMD)
defconsti(env, "GL-MAX-DEBUG-LOGGED-MESSAGES-AMD", (GLenum) GL_MAX_DEBUG_LOGGED_MESSAGES_AMD, "GL_MAX_DEBUG_LOGGED_MESSAGES_AMD");
#endif
#if defined(GL_MAX_DEBUG_LOGGED_MESSAGES_ARB)
defconsti(env, "GL-MAX-DEBUG-LOGGED-MESSAGES-ARB", (GLenum) GL_MAX_DEBUG_LOGGED_MESSAGES_ARB, "GL_MAX_DEBUG_LOGGED_MESSAGES_ARB");
#endif
#if defined(GL_MAX_DEBUG_LOGGED_MESSAGES_KHR)
defconsti(env, "GL-MAX-DEBUG-LOGGED-MESSAGES-KHR", (GLenum) GL_MAX_DEBUG_LOGGED_MESSAGES_KHR, "GL_MAX_DEBUG_LOGGED_MESSAGES_KHR");
#endif
#if defined(GL_DEBUG_LOGGED_MESSAGES)
defconsti(env, "GL-DEBUG-LOGGED-MESSAGES", (GLenum) GL_DEBUG_LOGGED_MESSAGES, "GL_DEBUG_LOGGED_MESSAGES");
#endif
#if defined(GL_DEBUG_LOGGED_MESSAGES_AMD)
defconsti(env, "GL-DEBUG-LOGGED-MESSAGES-AMD", (GLenum) GL_DEBUG_LOGGED_MESSAGES_AMD, "GL_DEBUG_LOGGED_MESSAGES_AMD");
#endif
#if defined(GL_DEBUG_LOGGED_MESSAGES_ARB)
defconsti(env, "GL-DEBUG-LOGGED-MESSAGES-ARB", (GLenum) GL_DEBUG_LOGGED_MESSAGES_ARB, "GL_DEBUG_LOGGED_MESSAGES_ARB");
#endif
#if defined(GL_DEBUG_LOGGED_MESSAGES_KHR)
defconsti(env, "GL-DEBUG-LOGGED-MESSAGES-KHR", (GLenum) GL_DEBUG_LOGGED_MESSAGES_KHR, "GL_DEBUG_LOGGED_MESSAGES_KHR");
#endif
#if defined(GL_DEBUG_SEVERITY_HIGH)
defconsti(env, "GL-DEBUG-SEVERITY-HIGH", (GLenum) GL_DEBUG_SEVERITY_HIGH, "GL_DEBUG_SEVERITY_HIGH");
#endif
#if defined(GL_DEBUG_SEVERITY_HIGH_AMD)
defconsti(env, "GL-DEBUG-SEVERITY-HIGH-AMD", (GLenum) GL_DEBUG_SEVERITY_HIGH_AMD, "GL_DEBUG_SEVERITY_HIGH_AMD");
#endif
#if defined(GL_DEBUG_SEVERITY_HIGH_ARB)
defconsti(env, "GL-DEBUG-SEVERITY-HIGH-ARB", (GLenum) GL_DEBUG_SEVERITY_HIGH_ARB, "GL_DEBUG_SEVERITY_HIGH_ARB");
#endif
#if defined(GL_DEBUG_SEVERITY_HIGH_KHR)
defconsti(env, "GL-DEBUG-SEVERITY-HIGH-KHR", (GLenum) GL_DEBUG_SEVERITY_HIGH_KHR, "GL_DEBUG_SEVERITY_HIGH_KHR");
#endif
#if defined(GL_DEBUG_SEVERITY_MEDIUM)
defconsti(env, "GL-DEBUG-SEVERITY-MEDIUM", (GLenum) GL_DEBUG_SEVERITY_MEDIUM, "GL_DEBUG_SEVERITY_MEDIUM");
#endif
#if defined(GL_DEBUG_SEVERITY_MEDIUM_AMD)
defconsti(env, "GL-DEBUG-SEVERITY-MEDIUM-AMD", (GLenum) GL_DEBUG_SEVERITY_MEDIUM_AMD, "GL_DEBUG_SEVERITY_MEDIUM_AMD");
#endif
#if defined(GL_DEBUG_SEVERITY_MEDIUM_ARB)
defconsti(env, "GL-DEBUG-SEVERITY-MEDIUM-ARB", (GLenum) GL_DEBUG_SEVERITY_MEDIUM_ARB, "GL_DEBUG_SEVERITY_MEDIUM_ARB");
#endif
#if defined(GL_DEBUG_SEVERITY_MEDIUM_KHR)
defconsti(env, "GL-DEBUG-SEVERITY-MEDIUM-KHR", (GLenum) GL_DEBUG_SEVERITY_MEDIUM_KHR, "GL_DEBUG_SEVERITY_MEDIUM_KHR");
#endif
#if defined(GL_DEBUG_SEVERITY_LOW)
defconsti(env, "GL-DEBUG-SEVERITY-LOW", (GLenum) GL_DEBUG_SEVERITY_LOW, "GL_DEBUG_SEVERITY_LOW");
#endif
#if defined(GL_DEBUG_SEVERITY_LOW_AMD)
defconsti(env, "GL-DEBUG-SEVERITY-LOW-AMD", (GLenum) GL_DEBUG_SEVERITY_LOW_AMD, "GL_DEBUG_SEVERITY_LOW_AMD");
#endif
#if defined(GL_DEBUG_SEVERITY_LOW_ARB)
defconsti(env, "GL-DEBUG-SEVERITY-LOW-ARB", (GLenum) GL_DEBUG_SEVERITY_LOW_ARB, "GL_DEBUG_SEVERITY_LOW_ARB");
#endif
#if defined(GL_DEBUG_SEVERITY_LOW_KHR)
defconsti(env, "GL-DEBUG-SEVERITY-LOW-KHR", (GLenum) GL_DEBUG_SEVERITY_LOW_KHR, "GL_DEBUG_SEVERITY_LOW_KHR");
#endif
#if defined(GL_DEBUG_CATEGORY_API_ERROR_AMD)
defconsti(env, "GL-DEBUG-CATEGORY-API-ERROR-AMD", (GLenum) GL_DEBUG_CATEGORY_API_ERROR_AMD, "GL_DEBUG_CATEGORY_API_ERROR_AMD");
#endif
#if defined(GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD)
defconsti(env, "GL-DEBUG-CATEGORY-WINDOW-SYSTEM-AMD", (GLenum) GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD, "GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD");
#endif
#if defined(GL_DEBUG_CATEGORY_DEPRECATION_AMD)
defconsti(env, "GL-DEBUG-CATEGORY-DEPRECATION-AMD", (GLenum) GL_DEBUG_CATEGORY_DEPRECATION_AMD, "GL_DEBUG_CATEGORY_DEPRECATION_AMD");
#endif
#if defined(GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD)
defconsti(env, "GL-DEBUG-CATEGORY-UNDEFINED-BEHAVIOR-AMD", (GLenum) GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD, "GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD");
#endif
#if defined(GL_DEBUG_CATEGORY_PERFORMANCE_AMD)
defconsti(env, "GL-DEBUG-CATEGORY-PERFORMANCE-AMD", (GLenum) GL_DEBUG_CATEGORY_PERFORMANCE_AMD, "GL_DEBUG_CATEGORY_PERFORMANCE_AMD");
#endif
#if defined(GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD)
defconsti(env, "GL-DEBUG-CATEGORY-SHADER-COMPILER-AMD", (GLenum) GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD, "GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD");
#endif
#if defined(GL_DEBUG_CATEGORY_APPLICATION_AMD)
defconsti(env, "GL-DEBUG-CATEGORY-APPLICATION-AMD", (GLenum) GL_DEBUG_CATEGORY_APPLICATION_AMD, "GL_DEBUG_CATEGORY_APPLICATION_AMD");
#endif
#if defined(GL_DEBUG_CATEGORY_OTHER_AMD)
defconsti(env, "GL-DEBUG-CATEGORY-OTHER-AMD", (GLenum) GL_DEBUG_CATEGORY_OTHER_AMD, "GL_DEBUG_CATEGORY_OTHER_AMD");
#endif
#if defined(GL_BUFFER_OBJECT_EXT)
defconsti(env, "GL-BUFFER-OBJECT-EXT", (GLenum) GL_BUFFER_OBJECT_EXT, "GL_BUFFER_OBJECT_EXT");
#endif
#if defined(GL_DATA_BUFFER_AMD)
defconsti(env, "GL-DATA-BUFFER-AMD", (GLenum) GL_DATA_BUFFER_AMD, "GL_DATA_BUFFER_AMD");
#endif
#if defined(GL_PERFORMANCE_MONITOR_AMD)
defconsti(env, "GL-PERFORMANCE-MONITOR-AMD", (GLenum) GL_PERFORMANCE_MONITOR_AMD, "GL_PERFORMANCE_MONITOR_AMD");
#endif
#if defined(GL_QUERY_OBJECT_AMD)
defconsti(env, "GL-QUERY-OBJECT-AMD", (GLenum) GL_QUERY_OBJECT_AMD, "GL_QUERY_OBJECT_AMD");
#endif
#if defined(GL_QUERY_OBJECT_EXT)
defconsti(env, "GL-QUERY-OBJECT-EXT", (GLenum) GL_QUERY_OBJECT_EXT, "GL_QUERY_OBJECT_EXT");
#endif
#if defined(GL_VERTEX_ARRAY_OBJECT_AMD)
defconsti(env, "GL-VERTEX-ARRAY-OBJECT-AMD", (GLenum) GL_VERTEX_ARRAY_OBJECT_AMD, "GL_VERTEX_ARRAY_OBJECT_AMD");
#endif
#if defined(GL_VERTEX_ARRAY_OBJECT_EXT)
defconsti(env, "GL-VERTEX-ARRAY-OBJECT-EXT", (GLenum) GL_VERTEX_ARRAY_OBJECT_EXT, "GL_VERTEX_ARRAY_OBJECT_EXT");
#endif
#if defined(GL_SAMPLER_OBJECT_AMD)
defconsti(env, "GL-SAMPLER-OBJECT-AMD", (GLenum) GL_SAMPLER_OBJECT_AMD, "GL_SAMPLER_OBJECT_AMD");
#endif
#if defined(GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD)
defconsti(env, "GL-EXTERNAL-VIRTUAL-MEMORY-BUFFER-AMD", (GLenum) GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD, "GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD");
#endif
#if defined(GL_QUERY_BUFFER)
defconsti(env, "GL-QUERY-BUFFER", (GLenum) GL_QUERY_BUFFER, "GL_QUERY_BUFFER");
#endif
#if defined(GL_QUERY_BUFFER_AMD)
defconsti(env, "GL-QUERY-BUFFER-AMD", (GLenum) GL_QUERY_BUFFER_AMD, "GL_QUERY_BUFFER_AMD");
#endif
#if defined(GL_QUERY_BUFFER_BINDING)
defconsti(env, "GL-QUERY-BUFFER-BINDING", (GLenum) GL_QUERY_BUFFER_BINDING, "GL_QUERY_BUFFER_BINDING");
#endif
#if defined(GL_QUERY_BUFFER_BINDING_AMD)
defconsti(env, "GL-QUERY-BUFFER-BINDING-AMD", (GLenum) GL_QUERY_BUFFER_BINDING_AMD, "GL_QUERY_BUFFER_BINDING_AMD");
#endif
#if defined(GL_QUERY_RESULT_NO_WAIT)
defconsti(env, "GL-QUERY-RESULT-NO-WAIT", (GLenum) GL_QUERY_RESULT_NO_WAIT, "GL_QUERY_RESULT_NO_WAIT");
#endif
#if defined(GL_QUERY_RESULT_NO_WAIT_AMD)
defconsti(env, "GL-QUERY-RESULT-NO-WAIT-AMD", (GLenum) GL_QUERY_RESULT_NO_WAIT_AMD, "GL_QUERY_RESULT_NO_WAIT_AMD");
#endif
#if defined(GL_VIRTUAL_PAGE_SIZE_X_ARB)
defconsti(env, "GL-VIRTUAL-PAGE-SIZE-X-ARB", (GLenum) GL_VIRTUAL_PAGE_SIZE_X_ARB, "GL_VIRTUAL_PAGE_SIZE_X_ARB");
#endif
#if defined(GL_VIRTUAL_PAGE_SIZE_X_EXT)
defconsti(env, "GL-VIRTUAL-PAGE-SIZE-X-EXT", (GLenum) GL_VIRTUAL_PAGE_SIZE_X_EXT, "GL_VIRTUAL_PAGE_SIZE_X_EXT");
#endif
#if defined(GL_VIRTUAL_PAGE_SIZE_X_AMD)
defconsti(env, "GL-VIRTUAL-PAGE-SIZE-X-AMD", (GLenum) GL_VIRTUAL_PAGE_SIZE_X_AMD, "GL_VIRTUAL_PAGE_SIZE_X_AMD");
#endif
#if defined(GL_VIRTUAL_PAGE_SIZE_Y_ARB)
defconsti(env, "GL-VIRTUAL-PAGE-SIZE-Y-ARB", (GLenum) GL_VIRTUAL_PAGE_SIZE_Y_ARB, "GL_VIRTUAL_PAGE_SIZE_Y_ARB");
#endif
#if defined(GL_VIRTUAL_PAGE_SIZE_Y_EXT)
defconsti(env, "GL-VIRTUAL-PAGE-SIZE-Y-EXT", (GLenum) GL_VIRTUAL_PAGE_SIZE_Y_EXT, "GL_VIRTUAL_PAGE_SIZE_Y_EXT");
#endif
#if defined(GL_VIRTUAL_PAGE_SIZE_Y_AMD)
defconsti(env, "GL-VIRTUAL-PAGE-SIZE-Y-AMD", (GLenum) GL_VIRTUAL_PAGE_SIZE_Y_AMD, "GL_VIRTUAL_PAGE_SIZE_Y_AMD");
#endif
#if defined(GL_VIRTUAL_PAGE_SIZE_Z_ARB)
defconsti(env, "GL-VIRTUAL-PAGE-SIZE-Z-ARB", (GLenum) GL_VIRTUAL_PAGE_SIZE_Z_ARB, "GL_VIRTUAL_PAGE_SIZE_Z_ARB");
#endif
#if defined(GL_VIRTUAL_PAGE_SIZE_Z_EXT)
defconsti(env, "GL-VIRTUAL-PAGE-SIZE-Z-EXT", (GLenum) GL_VIRTUAL_PAGE_SIZE_Z_EXT, "GL_VIRTUAL_PAGE_SIZE_Z_EXT");
#endif
#if defined(GL_VIRTUAL_PAGE_SIZE_Z_AMD)
defconsti(env, "GL-VIRTUAL-PAGE-SIZE-Z-AMD", (GLenum) GL_VIRTUAL_PAGE_SIZE_Z_AMD, "GL_VIRTUAL_PAGE_SIZE_Z_AMD");
#endif
#if defined(GL_MAX_SPARSE_TEXTURE_SIZE_ARB)
defconsti(env, "GL-MAX-SPARSE-TEXTURE-SIZE-ARB", (GLenum) GL_MAX_SPARSE_TEXTURE_SIZE_ARB, "GL_MAX_SPARSE_TEXTURE_SIZE_ARB");
#endif
#if defined(GL_MAX_SPARSE_TEXTURE_SIZE_EXT)
defconsti(env, "GL-MAX-SPARSE-TEXTURE-SIZE-EXT", (GLenum) GL_MAX_SPARSE_TEXTURE_SIZE_EXT, "GL_MAX_SPARSE_TEXTURE_SIZE_EXT");
#endif
#if defined(GL_MAX_SPARSE_TEXTURE_SIZE_AMD)
defconsti(env, "GL-MAX-SPARSE-TEXTURE-SIZE-AMD", (GLenum) GL_MAX_SPARSE_TEXTURE_SIZE_AMD, "GL_MAX_SPARSE_TEXTURE_SIZE_AMD");
#endif
#if defined(GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB)
defconsti(env, "GL-MAX-SPARSE-3D-TEXTURE-SIZE-ARB", (GLenum) GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB, "GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB");
#endif
#if defined(GL_MAX_SPARSE_3D_TEXTURE_SIZE_EXT)
defconsti(env, "GL-MAX-SPARSE-3D-TEXTURE-SIZE-EXT", (GLenum) GL_MAX_SPARSE_3D_TEXTURE_SIZE_EXT, "GL_MAX_SPARSE_3D_TEXTURE_SIZE_EXT");
#endif
#if defined(GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD)
defconsti(env, "GL-MAX-SPARSE-3D-TEXTURE-SIZE-AMD", (GLenum) GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD, "GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD");
#endif
#if defined(GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS)
defconsti(env, "GL-MAX-SPARSE-ARRAY-TEXTURE-LAYERS", (GLenum) GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS, "GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS");
#endif
#if defined(GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB)
defconsti(env, "GL-MAX-SPARSE-ARRAY-TEXTURE-LAYERS-ARB", (GLenum) GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB, "GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB");
#endif
#if defined(GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT)
defconsti(env, "GL-MAX-SPARSE-ARRAY-TEXTURE-LAYERS-EXT", (GLenum) GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT, "GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT");
#endif
#if defined(GL_MIN_SPARSE_LEVEL_AMD)
defconsti(env, "GL-MIN-SPARSE-LEVEL-AMD", (GLenum) GL_MIN_SPARSE_LEVEL_AMD, "GL_MIN_SPARSE_LEVEL_AMD");
#endif
#if defined(GL_MIN_LOD_WARNING_AMD)
defconsti(env, "GL-MIN-LOD-WARNING-AMD", (GLenum) GL_MIN_LOD_WARNING_AMD, "GL_MIN_LOD_WARNING_AMD");
#endif
#if defined(GL_TEXTURE_BUFFER_OFFSET)
defconsti(env, "GL-TEXTURE-BUFFER-OFFSET", (GLenum) GL_TEXTURE_BUFFER_OFFSET, "GL_TEXTURE_BUFFER_OFFSET");
#endif
#if defined(GL_TEXTURE_BUFFER_OFFSET_EXT)
defconsti(env, "GL-TEXTURE-BUFFER-OFFSET-EXT", (GLenum) GL_TEXTURE_BUFFER_OFFSET_EXT, "GL_TEXTURE_BUFFER_OFFSET_EXT");
#endif
#if defined(GL_TEXTURE_BUFFER_OFFSET_OES)
defconsti(env, "GL-TEXTURE-BUFFER-OFFSET-OES", (GLenum) GL_TEXTURE_BUFFER_OFFSET_OES, "GL_TEXTURE_BUFFER_OFFSET_OES");
#endif
#if defined(GL_TEXTURE_BUFFER_SIZE)
defconsti(env, "GL-TEXTURE-BUFFER-SIZE", (GLenum) GL_TEXTURE_BUFFER_SIZE, "GL_TEXTURE_BUFFER_SIZE");
#endif
#if defined(GL_TEXTURE_BUFFER_SIZE_EXT)
defconsti(env, "GL-TEXTURE-BUFFER-SIZE-EXT", (GLenum) GL_TEXTURE_BUFFER_SIZE_EXT, "GL_TEXTURE_BUFFER_SIZE_EXT");
#endif
#if defined(GL_TEXTURE_BUFFER_SIZE_OES)
defconsti(env, "GL-TEXTURE-BUFFER-SIZE-OES", (GLenum) GL_TEXTURE_BUFFER_SIZE_OES, "GL_TEXTURE_BUFFER_SIZE_OES");
#endif
#if defined(GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT)
defconsti(env, "GL-TEXTURE-BUFFER-OFFSET-ALIGNMENT", (GLenum) GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT, "GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT");
#endif
#if defined(GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT)
defconsti(env, "GL-TEXTURE-BUFFER-OFFSET-ALIGNMENT-EXT", (GLenum) GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT, "GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT");
#endif
#if defined(GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES)
defconsti(env, "GL-TEXTURE-BUFFER-OFFSET-ALIGNMENT-OES", (GLenum) GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES, "GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES");
#endif
#if defined(GL_STREAM_RASTERIZATION_AMD)
defconsti(env, "GL-STREAM-RASTERIZATION-AMD", (GLenum) GL_STREAM_RASTERIZATION_AMD, "GL_STREAM_RASTERIZATION_AMD");
#endif
#if defined(GL_VERTEX_ELEMENT_SWIZZLE_AMD)
defconsti(env, "GL-VERTEX-ELEMENT-SWIZZLE-AMD", (GLenum) GL_VERTEX_ELEMENT_SWIZZLE_AMD, "GL_VERTEX_ELEMENT_SWIZZLE_AMD");
#endif
#if defined(GL_VERTEX_ID_SWIZZLE_AMD)
defconsti(env, "GL-VERTEX-ID-SWIZZLE-AMD", (GLenum) GL_VERTEX_ID_SWIZZLE_AMD, "GL_VERTEX_ID_SWIZZLE_AMD");
#endif
#if defined(GL_TEXTURE_SPARSE_ARB)
defconsti(env, "GL-TEXTURE-SPARSE-ARB", (GLenum) GL_TEXTURE_SPARSE_ARB, "GL_TEXTURE_SPARSE_ARB");
#endif
#if defined(GL_TEXTURE_SPARSE_EXT)
defconsti(env, "GL-TEXTURE-SPARSE-EXT", (GLenum) GL_TEXTURE_SPARSE_EXT, "GL_TEXTURE_SPARSE_EXT");
#endif
#if defined(GL_VIRTUAL_PAGE_SIZE_INDEX_ARB)
defconsti(env, "GL-VIRTUAL-PAGE-SIZE-INDEX-ARB", (GLenum) GL_VIRTUAL_PAGE_SIZE_INDEX_ARB, "GL_VIRTUAL_PAGE_SIZE_INDEX_ARB");
#endif
#if defined(GL_VIRTUAL_PAGE_SIZE_INDEX_EXT)
defconsti(env, "GL-VIRTUAL-PAGE-SIZE-INDEX-EXT", (GLenum) GL_VIRTUAL_PAGE_SIZE_INDEX_EXT, "GL_VIRTUAL_PAGE_SIZE_INDEX_EXT");
#endif
#if defined(GL_NUM_VIRTUAL_PAGE_SIZES_ARB)
defconsti(env, "GL-NUM-VIRTUAL-PAGE-SIZES-ARB", (GLenum) GL_NUM_VIRTUAL_PAGE_SIZES_ARB, "GL_NUM_VIRTUAL_PAGE_SIZES_ARB");
#endif
#if defined(GL_NUM_VIRTUAL_PAGE_SIZES_EXT)
defconsti(env, "GL-NUM-VIRTUAL-PAGE-SIZES-EXT", (GLenum) GL_NUM_VIRTUAL_PAGE_SIZES_EXT, "GL_NUM_VIRTUAL_PAGE_SIZES_EXT");
#endif
#if defined(GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB)
defconsti(env, "GL-SPARSE-TEXTURE-FULL-ARRAY-CUBE-MIPMAPS-ARB", (GLenum) GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB, "GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB");
#endif
#if defined(GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT)
defconsti(env, "GL-SPARSE-TEXTURE-FULL-ARRAY-CUBE-MIPMAPS-EXT", (GLenum) GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT, "GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT");
#endif
#if defined(GL_NUM_SPARSE_LEVELS_ARB)
defconsti(env, "GL-NUM-SPARSE-LEVELS-ARB", (GLenum) GL_NUM_SPARSE_LEVELS_ARB, "GL_NUM_SPARSE_LEVELS_ARB");
#endif
#if defined(GL_NUM_SPARSE_LEVELS_EXT)
defconsti(env, "GL-NUM-SPARSE-LEVELS-EXT", (GLenum) GL_NUM_SPARSE_LEVELS_EXT, "GL_NUM_SPARSE_LEVELS_EXT");
#endif
#if defined(GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD)
defconsti(env, "GL-PIXELS-PER-SAMPLE-PATTERN-X-AMD", (GLenum) GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD, "GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD");
#endif
#if defined(GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD)
defconsti(env, "GL-PIXELS-PER-SAMPLE-PATTERN-Y-AMD", (GLenum) GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD, "GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD");
#endif
#if defined(GL_MAX_SHADER_COMPILER_THREADS_KHR)
defconsti(env, "GL-MAX-SHADER-COMPILER-THREADS-KHR", (GLenum) GL_MAX_SHADER_COMPILER_THREADS_KHR, "GL_MAX_SHADER_COMPILER_THREADS_KHR");
#endif
#if defined(GL_MAX_SHADER_COMPILER_THREADS_ARB)
defconsti(env, "GL-MAX-SHADER-COMPILER-THREADS-ARB", (GLenum) GL_MAX_SHADER_COMPILER_THREADS_ARB, "GL_MAX_SHADER_COMPILER_THREADS_ARB");
#endif
#if defined(GL_COMPLETION_STATUS_KHR)
defconsti(env, "GL-COMPLETION-STATUS-KHR", (GLenum) GL_COMPLETION_STATUS_KHR, "GL_COMPLETION_STATUS_KHR");
#endif
#if defined(GL_COMPLETION_STATUS_ARB)
defconsti(env, "GL-COMPLETION-STATUS-ARB", (GLenum) GL_COMPLETION_STATUS_ARB, "GL_COMPLETION_STATUS_ARB");
#endif
#if defined(GL_RENDERBUFFER_STORAGE_SAMPLES_AMD)
defconsti(env, "GL-RENDERBUFFER-STORAGE-SAMPLES-AMD", (GLenum) GL_RENDERBUFFER_STORAGE_SAMPLES_AMD, "GL_RENDERBUFFER_STORAGE_SAMPLES_AMD");
#endif
#if defined(GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD)
defconsti(env, "GL-MAX-COLOR-FRAMEBUFFER-SAMPLES-AMD", (GLenum) GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD, "GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD");
#endif
#if defined(GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD)
defconsti(env, "GL-MAX-COLOR-FRAMEBUFFER-STORAGE-SAMPLES-AMD", (GLenum) GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD, "GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD");
#endif
#if defined(GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD)
defconsti(env, "GL-MAX-DEPTH-STENCIL-FRAMEBUFFER-SAMPLES-AMD", (GLenum) GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD, "GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD");
#endif
#if defined(GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD)
defconsti(env, "GL-NUM-SUPPORTED-MULTISAMPLE-MODES-AMD", (GLenum) GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD, "GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD");
#endif
#if defined(GL_SUPPORTED_MULTISAMPLE_MODES_AMD)
defconsti(env, "GL-SUPPORTED-MULTISAMPLE-MODES-AMD", (GLenum) GL_SUPPORTED_MULTISAMPLE_MODES_AMD, "GL_SUPPORTED_MULTISAMPLE_MODES_AMD");
#endif
#if defined(GL_COMPUTE_SHADER)
defconsti(env, "GL-COMPUTE-SHADER", (GLenum) GL_COMPUTE_SHADER, "GL_COMPUTE_SHADER");
#endif
#if defined(GL_MAX_COMPUTE_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-COMPUTE-UNIFORM-BLOCKS", (GLenum) GL_MAX_COMPUTE_UNIFORM_BLOCKS, "GL_MAX_COMPUTE_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-COMPUTE-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS, "GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_COMPUTE_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-COMPUTE-IMAGE-UNIFORMS", (GLenum) GL_MAX_COMPUTE_IMAGE_UNIFORMS, "GL_MAX_COMPUTE_IMAGE_UNIFORMS");
#endif
#if defined(GL_MAX_COMPUTE_WORK_GROUP_COUNT)
defconsti(env, "GL-MAX-COMPUTE-WORK-GROUP-COUNT", (GLenum) GL_MAX_COMPUTE_WORK_GROUP_COUNT, "GL_MAX_COMPUTE_WORK_GROUP_COUNT");
#endif
#if defined(GL_MAX_COMPUTE_WORK_GROUP_SIZE)
defconsti(env, "GL-MAX-COMPUTE-WORK-GROUP-SIZE", (GLenum) GL_MAX_COMPUTE_WORK_GROUP_SIZE, "GL_MAX_COMPUTE_WORK_GROUP_SIZE");
#endif
#if defined(GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB)
defconsti(env, "GL-MAX-COMPUTE-FIXED-GROUP-SIZE-ARB", (GLenum) GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB, "GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB");
#endif
#if defined(GL_FLOAT16_MAT2_AMD)
defconsti(env, "GL-FLOAT16-MAT2-AMD", (GLenum) GL_FLOAT16_MAT2_AMD, "GL_FLOAT16_MAT2_AMD");
#endif
#if defined(GL_FLOAT16_MAT3_AMD)
defconsti(env, "GL-FLOAT16-MAT3-AMD", (GLenum) GL_FLOAT16_MAT3_AMD, "GL_FLOAT16_MAT3_AMD");
#endif
#if defined(GL_FLOAT16_MAT4_AMD)
defconsti(env, "GL-FLOAT16-MAT4-AMD", (GLenum) GL_FLOAT16_MAT4_AMD, "GL_FLOAT16_MAT4_AMD");
#endif
#if defined(GL_FLOAT16_MAT2x3_AMD)
defconsti(env, "GL-FLOAT16-MAT2x3-AMD", (GLenum) GL_FLOAT16_MAT2x3_AMD, "GL_FLOAT16_MAT2x3_AMD");
#endif
#if defined(GL_FLOAT16_MAT2x4_AMD)
defconsti(env, "GL-FLOAT16-MAT2x4-AMD", (GLenum) GL_FLOAT16_MAT2x4_AMD, "GL_FLOAT16_MAT2x4_AMD");
#endif
#if defined(GL_FLOAT16_MAT3x2_AMD)
defconsti(env, "GL-FLOAT16-MAT3x2-AMD", (GLenum) GL_FLOAT16_MAT3x2_AMD, "GL_FLOAT16_MAT3x2_AMD");
#endif
#if defined(GL_FLOAT16_MAT3x4_AMD)
defconsti(env, "GL-FLOAT16-MAT3x4-AMD", (GLenum) GL_FLOAT16_MAT3x4_AMD, "GL_FLOAT16_MAT3x4_AMD");
#endif
#if defined(GL_FLOAT16_MAT4x2_AMD)
defconsti(env, "GL-FLOAT16-MAT4x2-AMD", (GLenum) GL_FLOAT16_MAT4x2_AMD, "GL_FLOAT16_MAT4x2_AMD");
#endif
#if defined(GL_FLOAT16_MAT4x3_AMD)
defconsti(env, "GL-FLOAT16-MAT4x3-AMD", (GLenum) GL_FLOAT16_MAT4x3_AMD, "GL_FLOAT16_MAT4x3_AMD");
#endif
#if defined(GL_UNPACK_FLIP_Y_WEBGL)
defconsti(env, "GL-UNPACK-FLIP-Y-WEBGL", (GLenum) GL_UNPACK_FLIP_Y_WEBGL, "GL_UNPACK_FLIP_Y_WEBGL");
#endif
#if defined(GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL)
defconsti(env, "GL-UNPACK-PREMULTIPLY-ALPHA-WEBGL", (GLenum) GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL, "GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL");
#endif
#if defined(GL_CONTEXT_LOST_WEBGL)
defconsti(env, "GL-CONTEXT-LOST-WEBGL", (GLenum) GL_CONTEXT_LOST_WEBGL, "GL_CONTEXT_LOST_WEBGL");
#endif
#if defined(GL_UNPACK_COLORSPACE_CONVERSION_WEBGL)
defconsti(env, "GL-UNPACK-COLORSPACE-CONVERSION-WEBGL", (GLenum) GL_UNPACK_COLORSPACE_CONVERSION_WEBGL, "GL_UNPACK_COLORSPACE_CONVERSION_WEBGL");
#endif
#if defined(GL_BROWSER_DEFAULT_WEBGL)
defconsti(env, "GL-BROWSER-DEFAULT-WEBGL", (GLenum) GL_BROWSER_DEFAULT_WEBGL, "GL_BROWSER_DEFAULT_WEBGL");
#endif
#if defined(GL_SHADER_BINARY_DMP)
defconsti(env, "GL-SHADER-BINARY-DMP", (GLenum) GL_SHADER_BINARY_DMP, "GL_SHADER_BINARY_DMP");
#endif
#if defined(GL_SMAPHS30_PROGRAM_BINARY_DMP)
defconsti(env, "GL-SMAPHS30-PROGRAM-BINARY-DMP", (GLenum) GL_SMAPHS30_PROGRAM_BINARY_DMP, "GL_SMAPHS30_PROGRAM_BINARY_DMP");
#endif
#if defined(GL_SMAPHS_PROGRAM_BINARY_DMP)
defconsti(env, "GL-SMAPHS-PROGRAM-BINARY-DMP", (GLenum) GL_SMAPHS_PROGRAM_BINARY_DMP, "GL_SMAPHS_PROGRAM_BINARY_DMP");
#endif
#if defined(GL_DMP_PROGRAM_BINARY_DMP)
defconsti(env, "GL-DMP-PROGRAM-BINARY-DMP", (GLenum) GL_DMP_PROGRAM_BINARY_DMP, "GL_DMP_PROGRAM_BINARY_DMP");
#endif
#if defined(GL_GCCSO_SHADER_BINARY_FJ)
defconsti(env, "GL-GCCSO-SHADER-BINARY-FJ", (GLenum) GL_GCCSO_SHADER_BINARY_FJ, "GL_GCCSO_SHADER_BINARY_FJ");
#endif
#if defined(GL_COMPRESSED_R11_EAC)
defconsti(env, "GL-COMPRESSED-R11-EAC", (GLenum) GL_COMPRESSED_R11_EAC, "GL_COMPRESSED_R11_EAC");
#endif
#if defined(GL_COMPRESSED_R11_EAC_OES)
defconsti(env, "GL-COMPRESSED-R11-EAC-OES", (GLenum) GL_COMPRESSED_R11_EAC_OES, "GL_COMPRESSED_R11_EAC_OES");
#endif
#if defined(GL_COMPRESSED_SIGNED_R11_EAC)
defconsti(env, "GL-COMPRESSED-SIGNED-R11-EAC", (GLenum) GL_COMPRESSED_SIGNED_R11_EAC, "GL_COMPRESSED_SIGNED_R11_EAC");
#endif
#if defined(GL_COMPRESSED_SIGNED_R11_EAC_OES)
defconsti(env, "GL-COMPRESSED-SIGNED-R11-EAC-OES", (GLenum) GL_COMPRESSED_SIGNED_R11_EAC_OES, "GL_COMPRESSED_SIGNED_R11_EAC_OES");
#endif
#if defined(GL_COMPRESSED_RG11_EAC)
defconsti(env, "GL-COMPRESSED-RG11-EAC", (GLenum) GL_COMPRESSED_RG11_EAC, "GL_COMPRESSED_RG11_EAC");
#endif
#if defined(GL_COMPRESSED_RG11_EAC_OES)
defconsti(env, "GL-COMPRESSED-RG11-EAC-OES", (GLenum) GL_COMPRESSED_RG11_EAC_OES, "GL_COMPRESSED_RG11_EAC_OES");
#endif
#if defined(GL_COMPRESSED_SIGNED_RG11_EAC)
defconsti(env, "GL-COMPRESSED-SIGNED-RG11-EAC", (GLenum) GL_COMPRESSED_SIGNED_RG11_EAC, "GL_COMPRESSED_SIGNED_RG11_EAC");
#endif
#if defined(GL_COMPRESSED_SIGNED_RG11_EAC_OES)
defconsti(env, "GL-COMPRESSED-SIGNED-RG11-EAC-OES", (GLenum) GL_COMPRESSED_SIGNED_RG11_EAC_OES, "GL_COMPRESSED_SIGNED_RG11_EAC_OES");
#endif
#if defined(GL_COMPRESSED_RGB8_ETC2)
defconsti(env, "GL-COMPRESSED-RGB8-ETC2", (GLenum) GL_COMPRESSED_RGB8_ETC2, "GL_COMPRESSED_RGB8_ETC2");
#endif
#if defined(GL_COMPRESSED_RGB8_ETC2_OES)
defconsti(env, "GL-COMPRESSED-RGB8-ETC2-OES", (GLenum) GL_COMPRESSED_RGB8_ETC2_OES, "GL_COMPRESSED_RGB8_ETC2_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ETC2)
defconsti(env, "GL-COMPRESSED-SRGB8-ETC2", (GLenum) GL_COMPRESSED_SRGB8_ETC2, "GL_COMPRESSED_SRGB8_ETC2");
#endif
#if defined(GL_COMPRESSED_SRGB8_ETC2_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ETC2-OES", (GLenum) GL_COMPRESSED_SRGB8_ETC2_OES, "GL_COMPRESSED_SRGB8_ETC2_OES");
#endif
#if defined(GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2)
defconsti(env, "GL-COMPRESSED-RGB8-PUNCHTHROUGH-ALPHA1-ETC2", (GLenum) GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2, "GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2");
#endif
#if defined(GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES)
defconsti(env, "GL-COMPRESSED-RGB8-PUNCHTHROUGH-ALPHA1-ETC2-OES", (GLenum) GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES, "GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2)
defconsti(env, "GL-COMPRESSED-SRGB8-PUNCHTHROUGH-ALPHA1-ETC2", (GLenum) GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2, "GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2");
#endif
#if defined(GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-PUNCHTHROUGH-ALPHA1-ETC2-OES", (GLenum) GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES, "GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES");
#endif
#if defined(GL_COMPRESSED_RGBA8_ETC2_EAC)
defconsti(env, "GL-COMPRESSED-RGBA8-ETC2-EAC", (GLenum) GL_COMPRESSED_RGBA8_ETC2_EAC, "GL_COMPRESSED_RGBA8_ETC2_EAC");
#endif
#if defined(GL_COMPRESSED_RGBA8_ETC2_EAC_OES)
defconsti(env, "GL-COMPRESSED-RGBA8-ETC2-EAC-OES", (GLenum) GL_COMPRESSED_RGBA8_ETC2_EAC_OES, "GL_COMPRESSED_RGBA8_ETC2_EAC_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ETC2-EAC", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC, "GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ETC2-EAC-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC_OES");
#endif
#if defined(GL_BLEND_PREMULTIPLIED_SRC_NV)
defconsti(env, "GL-BLEND-PREMULTIPLIED-SRC-NV", (GLenum) GL_BLEND_PREMULTIPLIED_SRC_NV, "GL_BLEND_PREMULTIPLIED_SRC_NV");
#endif
#if defined(GL_BLEND_OVERLAP_NV)
defconsti(env, "GL-BLEND-OVERLAP-NV", (GLenum) GL_BLEND_OVERLAP_NV, "GL_BLEND_OVERLAP_NV");
#endif
#if defined(GL_UNCORRELATED_NV)
defconsti(env, "GL-UNCORRELATED-NV", (GLenum) GL_UNCORRELATED_NV, "GL_UNCORRELATED_NV");
#endif
#if defined(GL_DISJOINT_NV)
defconsti(env, "GL-DISJOINT-NV", (GLenum) GL_DISJOINT_NV, "GL_DISJOINT_NV");
#endif
#if defined(GL_CONJOINT_NV)
defconsti(env, "GL-CONJOINT-NV", (GLenum) GL_CONJOINT_NV, "GL_CONJOINT_NV");
#endif
#if defined(GL_BLEND_ADVANCED_COHERENT_KHR)
defconsti(env, "GL-BLEND-ADVANCED-COHERENT-KHR", (GLenum) GL_BLEND_ADVANCED_COHERENT_KHR, "GL_BLEND_ADVANCED_COHERENT_KHR");
#endif
#if defined(GL_BLEND_ADVANCED_COHERENT_NV)
defconsti(env, "GL-BLEND-ADVANCED-COHERENT-NV", (GLenum) GL_BLEND_ADVANCED_COHERENT_NV, "GL_BLEND_ADVANCED_COHERENT_NV");
#endif
#if defined(GL_SRC_NV)
defconsti(env, "GL-SRC-NV", (GLenum) GL_SRC_NV, "GL_SRC_NV");
#endif
#if defined(GL_DST_NV)
defconsti(env, "GL-DST-NV", (GLenum) GL_DST_NV, "GL_DST_NV");
#endif
#if defined(GL_SRC_OVER_NV)
defconsti(env, "GL-SRC-OVER-NV", (GLenum) GL_SRC_OVER_NV, "GL_SRC_OVER_NV");
#endif
#if defined(GL_DST_OVER_NV)
defconsti(env, "GL-DST-OVER-NV", (GLenum) GL_DST_OVER_NV, "GL_DST_OVER_NV");
#endif
#if defined(GL_SRC_IN_NV)
defconsti(env, "GL-SRC-IN-NV", (GLenum) GL_SRC_IN_NV, "GL_SRC_IN_NV");
#endif
#if defined(GL_DST_IN_NV)
defconsti(env, "GL-DST-IN-NV", (GLenum) GL_DST_IN_NV, "GL_DST_IN_NV");
#endif
#if defined(GL_SRC_OUT_NV)
defconsti(env, "GL-SRC-OUT-NV", (GLenum) GL_SRC_OUT_NV, "GL_SRC_OUT_NV");
#endif
#if defined(GL_DST_OUT_NV)
defconsti(env, "GL-DST-OUT-NV", (GLenum) GL_DST_OUT_NV, "GL_DST_OUT_NV");
#endif
#if defined(GL_SRC_ATOP_NV)
defconsti(env, "GL-SRC-ATOP-NV", (GLenum) GL_SRC_ATOP_NV, "GL_SRC_ATOP_NV");
#endif
#if defined(GL_DST_ATOP_NV)
defconsti(env, "GL-DST-ATOP-NV", (GLenum) GL_DST_ATOP_NV, "GL_DST_ATOP_NV");
#endif
#if defined(GL_PLUS_NV)
defconsti(env, "GL-PLUS-NV", (GLenum) GL_PLUS_NV, "GL_PLUS_NV");
#endif
#if defined(GL_PLUS_DARKER_NV)
defconsti(env, "GL-PLUS-DARKER-NV", (GLenum) GL_PLUS_DARKER_NV, "GL_PLUS_DARKER_NV");
#endif
#if defined(GL_MULTIPLY)
defconsti(env, "GL-MULTIPLY", (GLenum) GL_MULTIPLY, "GL_MULTIPLY");
#endif
#if defined(GL_MULTIPLY_KHR)
defconsti(env, "GL-MULTIPLY-KHR", (GLenum) GL_MULTIPLY_KHR, "GL_MULTIPLY_KHR");
#endif
#if defined(GL_MULTIPLY_NV)
defconsti(env, "GL-MULTIPLY-NV", (GLenum) GL_MULTIPLY_NV, "GL_MULTIPLY_NV");
#endif
#if defined(GL_SCREEN)
defconsti(env, "GL-SCREEN", (GLenum) GL_SCREEN, "GL_SCREEN");
#endif
#if defined(GL_SCREEN_KHR)
defconsti(env, "GL-SCREEN-KHR", (GLenum) GL_SCREEN_KHR, "GL_SCREEN_KHR");
#endif
#if defined(GL_SCREEN_NV)
defconsti(env, "GL-SCREEN-NV", (GLenum) GL_SCREEN_NV, "GL_SCREEN_NV");
#endif
#if defined(GL_OVERLAY)
defconsti(env, "GL-OVERLAY", (GLenum) GL_OVERLAY, "GL_OVERLAY");
#endif
#if defined(GL_OVERLAY_KHR)
defconsti(env, "GL-OVERLAY-KHR", (GLenum) GL_OVERLAY_KHR, "GL_OVERLAY_KHR");
#endif
#if defined(GL_OVERLAY_NV)
defconsti(env, "GL-OVERLAY-NV", (GLenum) GL_OVERLAY_NV, "GL_OVERLAY_NV");
#endif
#if defined(GL_DARKEN)
defconsti(env, "GL-DARKEN", (GLenum) GL_DARKEN, "GL_DARKEN");
#endif
#if defined(GL_DARKEN_KHR)
defconsti(env, "GL-DARKEN-KHR", (GLenum) GL_DARKEN_KHR, "GL_DARKEN_KHR");
#endif
#if defined(GL_DARKEN_NV)
defconsti(env, "GL-DARKEN-NV", (GLenum) GL_DARKEN_NV, "GL_DARKEN_NV");
#endif
#if defined(GL_LIGHTEN)
defconsti(env, "GL-LIGHTEN", (GLenum) GL_LIGHTEN, "GL_LIGHTEN");
#endif
#if defined(GL_LIGHTEN_KHR)
defconsti(env, "GL-LIGHTEN-KHR", (GLenum) GL_LIGHTEN_KHR, "GL_LIGHTEN_KHR");
#endif
#if defined(GL_LIGHTEN_NV)
defconsti(env, "GL-LIGHTEN-NV", (GLenum) GL_LIGHTEN_NV, "GL_LIGHTEN_NV");
#endif
#if defined(GL_COLORDODGE)
defconsti(env, "GL-COLORDODGE", (GLenum) GL_COLORDODGE, "GL_COLORDODGE");
#endif
#if defined(GL_COLORDODGE_KHR)
defconsti(env, "GL-COLORDODGE-KHR", (GLenum) GL_COLORDODGE_KHR, "GL_COLORDODGE_KHR");
#endif
#if defined(GL_COLORDODGE_NV)
defconsti(env, "GL-COLORDODGE-NV", (GLenum) GL_COLORDODGE_NV, "GL_COLORDODGE_NV");
#endif
#if defined(GL_COLORBURN)
defconsti(env, "GL-COLORBURN", (GLenum) GL_COLORBURN, "GL_COLORBURN");
#endif
#if defined(GL_COLORBURN_KHR)
defconsti(env, "GL-COLORBURN-KHR", (GLenum) GL_COLORBURN_KHR, "GL_COLORBURN_KHR");
#endif
#if defined(GL_COLORBURN_NV)
defconsti(env, "GL-COLORBURN-NV", (GLenum) GL_COLORBURN_NV, "GL_COLORBURN_NV");
#endif
#if defined(GL_HARDLIGHT)
defconsti(env, "GL-HARDLIGHT", (GLenum) GL_HARDLIGHT, "GL_HARDLIGHT");
#endif
#if defined(GL_HARDLIGHT_KHR)
defconsti(env, "GL-HARDLIGHT-KHR", (GLenum) GL_HARDLIGHT_KHR, "GL_HARDLIGHT_KHR");
#endif
#if defined(GL_HARDLIGHT_NV)
defconsti(env, "GL-HARDLIGHT-NV", (GLenum) GL_HARDLIGHT_NV, "GL_HARDLIGHT_NV");
#endif
#if defined(GL_SOFTLIGHT)
defconsti(env, "GL-SOFTLIGHT", (GLenum) GL_SOFTLIGHT, "GL_SOFTLIGHT");
#endif
#if defined(GL_SOFTLIGHT_KHR)
defconsti(env, "GL-SOFTLIGHT-KHR", (GLenum) GL_SOFTLIGHT_KHR, "GL_SOFTLIGHT_KHR");
#endif
#if defined(GL_SOFTLIGHT_NV)
defconsti(env, "GL-SOFTLIGHT-NV", (GLenum) GL_SOFTLIGHT_NV, "GL_SOFTLIGHT_NV");
#endif
#if defined(GL_DIFFERENCE)
defconsti(env, "GL-DIFFERENCE", (GLenum) GL_DIFFERENCE, "GL_DIFFERENCE");
#endif
#if defined(GL_DIFFERENCE_KHR)
defconsti(env, "GL-DIFFERENCE-KHR", (GLenum) GL_DIFFERENCE_KHR, "GL_DIFFERENCE_KHR");
#endif
#if defined(GL_DIFFERENCE_NV)
defconsti(env, "GL-DIFFERENCE-NV", (GLenum) GL_DIFFERENCE_NV, "GL_DIFFERENCE_NV");
#endif
#if defined(GL_MINUS_NV)
defconsti(env, "GL-MINUS-NV", (GLenum) GL_MINUS_NV, "GL_MINUS_NV");
#endif
#if defined(GL_EXCLUSION)
defconsti(env, "GL-EXCLUSION", (GLenum) GL_EXCLUSION, "GL_EXCLUSION");
#endif
#if defined(GL_EXCLUSION_KHR)
defconsti(env, "GL-EXCLUSION-KHR", (GLenum) GL_EXCLUSION_KHR, "GL_EXCLUSION_KHR");
#endif
#if defined(GL_EXCLUSION_NV)
defconsti(env, "GL-EXCLUSION-NV", (GLenum) GL_EXCLUSION_NV, "GL_EXCLUSION_NV");
#endif
#if defined(GL_CONTRAST_NV)
defconsti(env, "GL-CONTRAST-NV", (GLenum) GL_CONTRAST_NV, "GL_CONTRAST_NV");
#endif
#if defined(GL_INVERT_RGB_NV)
defconsti(env, "GL-INVERT-RGB-NV", (GLenum) GL_INVERT_RGB_NV, "GL_INVERT_RGB_NV");
#endif
#if defined(GL_LINEARDODGE_NV)
defconsti(env, "GL-LINEARDODGE-NV", (GLenum) GL_LINEARDODGE_NV, "GL_LINEARDODGE_NV");
#endif
#if defined(GL_LINEARBURN_NV)
defconsti(env, "GL-LINEARBURN-NV", (GLenum) GL_LINEARBURN_NV, "GL_LINEARBURN_NV");
#endif
#if defined(GL_VIVIDLIGHT_NV)
defconsti(env, "GL-VIVIDLIGHT-NV", (GLenum) GL_VIVIDLIGHT_NV, "GL_VIVIDLIGHT_NV");
#endif
#if defined(GL_LINEARLIGHT_NV)
defconsti(env, "GL-LINEARLIGHT-NV", (GLenum) GL_LINEARLIGHT_NV, "GL_LINEARLIGHT_NV");
#endif
#if defined(GL_PINLIGHT_NV)
defconsti(env, "GL-PINLIGHT-NV", (GLenum) GL_PINLIGHT_NV, "GL_PINLIGHT_NV");
#endif
#if defined(GL_HARDMIX_NV)
defconsti(env, "GL-HARDMIX-NV", (GLenum) GL_HARDMIX_NV, "GL_HARDMIX_NV");
#endif
#if defined(GL_HSL_HUE)
defconsti(env, "GL-HSL-HUE", (GLenum) GL_HSL_HUE, "GL_HSL_HUE");
#endif
#if defined(GL_HSL_HUE_KHR)
defconsti(env, "GL-HSL-HUE-KHR", (GLenum) GL_HSL_HUE_KHR, "GL_HSL_HUE_KHR");
#endif
#if defined(GL_HSL_HUE_NV)
defconsti(env, "GL-HSL-HUE-NV", (GLenum) GL_HSL_HUE_NV, "GL_HSL_HUE_NV");
#endif
#if defined(GL_HSL_SATURATION)
defconsti(env, "GL-HSL-SATURATION", (GLenum) GL_HSL_SATURATION, "GL_HSL_SATURATION");
#endif
#if defined(GL_HSL_SATURATION_KHR)
defconsti(env, "GL-HSL-SATURATION-KHR", (GLenum) GL_HSL_SATURATION_KHR, "GL_HSL_SATURATION_KHR");
#endif
#if defined(GL_HSL_SATURATION_NV)
defconsti(env, "GL-HSL-SATURATION-NV", (GLenum) GL_HSL_SATURATION_NV, "GL_HSL_SATURATION_NV");
#endif
#if defined(GL_HSL_COLOR)
defconsti(env, "GL-HSL-COLOR", (GLenum) GL_HSL_COLOR, "GL_HSL_COLOR");
#endif
#if defined(GL_HSL_COLOR_KHR)
defconsti(env, "GL-HSL-COLOR-KHR", (GLenum) GL_HSL_COLOR_KHR, "GL_HSL_COLOR_KHR");
#endif
#if defined(GL_HSL_COLOR_NV)
defconsti(env, "GL-HSL-COLOR-NV", (GLenum) GL_HSL_COLOR_NV, "GL_HSL_COLOR_NV");
#endif
#if defined(GL_HSL_LUMINOSITY)
defconsti(env, "GL-HSL-LUMINOSITY", (GLenum) GL_HSL_LUMINOSITY, "GL_HSL_LUMINOSITY");
#endif
#if defined(GL_HSL_LUMINOSITY_KHR)
defconsti(env, "GL-HSL-LUMINOSITY-KHR", (GLenum) GL_HSL_LUMINOSITY_KHR, "GL_HSL_LUMINOSITY_KHR");
#endif
#if defined(GL_HSL_LUMINOSITY_NV)
defconsti(env, "GL-HSL-LUMINOSITY-NV", (GLenum) GL_HSL_LUMINOSITY_NV, "GL_HSL_LUMINOSITY_NV");
#endif
#if defined(GL_PLUS_CLAMPED_NV)
defconsti(env, "GL-PLUS-CLAMPED-NV", (GLenum) GL_PLUS_CLAMPED_NV, "GL_PLUS_CLAMPED_NV");
#endif
#if defined(GL_PLUS_CLAMPED_ALPHA_NV)
defconsti(env, "GL-PLUS-CLAMPED-ALPHA-NV", (GLenum) GL_PLUS_CLAMPED_ALPHA_NV, "GL_PLUS_CLAMPED_ALPHA_NV");
#endif
#if defined(GL_MINUS_CLAMPED_NV)
defconsti(env, "GL-MINUS-CLAMPED-NV", (GLenum) GL_MINUS_CLAMPED_NV, "GL_MINUS_CLAMPED_NV");
#endif
#if defined(GL_INVERT_OVG_NV)
defconsti(env, "GL-INVERT-OVG-NV", (GLenum) GL_INVERT_OVG_NV, "GL_INVERT_OVG_NV");
#endif
#if defined(GL_MAX_LGPU_GPUS_NVX)
defconsti(env, "GL-MAX-LGPU-GPUS-NVX", (GLenum) GL_MAX_LGPU_GPUS_NVX, "GL_MAX_LGPU_GPUS_NVX");
#endif
#if defined(GL_MULTICAST_GPUS_NV)
defconsti(env, "GL-MULTICAST-GPUS-NV", (GLenum) GL_MULTICAST_GPUS_NV, "GL_MULTICAST_GPUS_NV");
#endif
#if defined(GL_PURGED_CONTEXT_RESET_NV)
defconsti(env, "GL-PURGED-CONTEXT-RESET-NV", (GLenum) GL_PURGED_CONTEXT_RESET_NV, "GL_PURGED_CONTEXT_RESET_NV");
#endif
#if defined(GL_PRIMITIVE_BOUNDING_BOX_ARB)
defconsti(env, "GL-PRIMITIVE-BOUNDING-BOX-ARB", (GLenum) GL_PRIMITIVE_BOUNDING_BOX_ARB, "GL_PRIMITIVE_BOUNDING_BOX_ARB");
#endif
#if defined(GL_PRIMITIVE_BOUNDING_BOX)
defconsti(env, "GL-PRIMITIVE-BOUNDING-BOX", (GLenum) GL_PRIMITIVE_BOUNDING_BOX, "GL_PRIMITIVE_BOUNDING_BOX");
#endif
#if defined(GL_PRIMITIVE_BOUNDING_BOX_EXT)
defconsti(env, "GL-PRIMITIVE-BOUNDING-BOX-EXT", (GLenum) GL_PRIMITIVE_BOUNDING_BOX_EXT, "GL_PRIMITIVE_BOUNDING_BOX_EXT");
#endif
#if defined(GL_PRIMITIVE_BOUNDING_BOX_OES)
defconsti(env, "GL-PRIMITIVE-BOUNDING-BOX-OES", (GLenum) GL_PRIMITIVE_BOUNDING_BOX_OES, "GL_PRIMITIVE_BOUNDING_BOX_OES");
#endif
#if defined(GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV)
defconsti(env, "GL-ALPHA-TO-COVERAGE-DITHER-MODE-NV", (GLenum) GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV, "GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER", (GLenum) GL_ATOMIC_COUNTER_BUFFER, "GL_ATOMIC_COUNTER_BUFFER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_BINDING)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-BINDING", (GLenum) GL_ATOMIC_COUNTER_BUFFER_BINDING, "GL_ATOMIC_COUNTER_BUFFER_BINDING");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_START)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-START", (GLenum) GL_ATOMIC_COUNTER_BUFFER_START, "GL_ATOMIC_COUNTER_BUFFER_START");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_SIZE)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-SIZE", (GLenum) GL_ATOMIC_COUNTER_BUFFER_SIZE, "GL_ATOMIC_COUNTER_BUFFER_SIZE");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-DATA-SIZE", (GLenum) GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE, "GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-ACTIVE-ATOMIC-COUNTERS", (GLenum) GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS, "GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-ACTIVE-ATOMIC-COUNTER-INDICES", (GLenum) GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES, "GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-VERTEX-SHADER", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-TESS-CONTROL-SHADER", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-TESS-EVALUATION-SHADER", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-GEOMETRY-SHADER", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-FRAGMENT-SHADER", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER");
#endif
#if defined(GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-VERTEX-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS, "GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-TESS-CONTROL-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS, "GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT)
defconsti(env, "GL-MAX-TESS-CONTROL-ATOMIC-COUNTER-BUFFERS-EXT", (GLenum) GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT, "GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT");
#endif
#if defined(GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES)
defconsti(env, "GL-MAX-TESS-CONTROL-ATOMIC-COUNTER-BUFFERS-OES", (GLenum) GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES, "GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES");
#endif
#if defined(GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-TESS-EVALUATION-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS, "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT)
defconsti(env, "GL-MAX-TESS-EVALUATION-ATOMIC-COUNTER-BUFFERS-EXT", (GLenum) GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT, "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT");
#endif
#if defined(GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES)
defconsti(env, "GL-MAX-TESS-EVALUATION-ATOMIC-COUNTER-BUFFERS-OES", (GLenum) GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES, "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES");
#endif
#if defined(GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-GEOMETRY-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS, "GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-ATOMIC-COUNTER-BUFFERS-EXT", (GLenum) GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT, "GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES)
defconsti(env, "GL-MAX-GEOMETRY-ATOMIC-COUNTER-BUFFERS-OES", (GLenum) GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES, "GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES");
#endif
#if defined(GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-FRAGMENT-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS, "GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-COMBINED-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS, "GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_VERTEX_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-VERTEX-ATOMIC-COUNTERS", (GLenum) GL_MAX_VERTEX_ATOMIC_COUNTERS, "GL_MAX_VERTEX_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-TESS-CONTROL-ATOMIC-COUNTERS", (GLenum) GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS, "GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT)
defconsti(env, "GL-MAX-TESS-CONTROL-ATOMIC-COUNTERS-EXT", (GLenum) GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT, "GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT");
#endif
#if defined(GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES)
defconsti(env, "GL-MAX-TESS-CONTROL-ATOMIC-COUNTERS-OES", (GLenum) GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES, "GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES");
#endif
#if defined(GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-TESS-EVALUATION-ATOMIC-COUNTERS", (GLenum) GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS, "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT)
defconsti(env, "GL-MAX-TESS-EVALUATION-ATOMIC-COUNTERS-EXT", (GLenum) GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT, "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT");
#endif
#if defined(GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES)
defconsti(env, "GL-MAX-TESS-EVALUATION-ATOMIC-COUNTERS-OES", (GLenum) GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES, "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES");
#endif
#if defined(GL_MAX_GEOMETRY_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-GEOMETRY-ATOMIC-COUNTERS", (GLenum) GL_MAX_GEOMETRY_ATOMIC_COUNTERS, "GL_MAX_GEOMETRY_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-ATOMIC-COUNTERS-EXT", (GLenum) GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT, "GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_ATOMIC_COUNTERS_OES)
defconsti(env, "GL-MAX-GEOMETRY-ATOMIC-COUNTERS-OES", (GLenum) GL_MAX_GEOMETRY_ATOMIC_COUNTERS_OES, "GL_MAX_GEOMETRY_ATOMIC_COUNTERS_OES");
#endif
#if defined(GL_MAX_FRAGMENT_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-FRAGMENT-ATOMIC-COUNTERS", (GLenum) GL_MAX_FRAGMENT_ATOMIC_COUNTERS, "GL_MAX_FRAGMENT_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_COMBINED_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-COMBINED-ATOMIC-COUNTERS", (GLenum) GL_MAX_COMBINED_ATOMIC_COUNTERS, "GL_MAX_COMBINED_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE)
defconsti(env, "GL-MAX-ATOMIC-COUNTER-BUFFER-SIZE", (GLenum) GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE, "GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE");
#endif
#if defined(GL_ACTIVE_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-ACTIVE-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_ACTIVE_ATOMIC_COUNTER_BUFFERS, "GL_ACTIVE_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX)
defconsti(env, "GL-UNIFORM-ATOMIC-COUNTER-BUFFER-INDEX", (GLenum) GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX, "GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX");
#endif
#if defined(GL_UNSIGNED_INT_ATOMIC_COUNTER)
defconsti(env, "GL-UNSIGNED-INT-ATOMIC-COUNTER", (GLenum) GL_UNSIGNED_INT_ATOMIC_COUNTER, "GL_UNSIGNED_INT_ATOMIC_COUNTER");
#endif
#if defined(GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS)
defconsti(env, "GL-MAX-ATOMIC-COUNTER-BUFFER-BINDINGS", (GLenum) GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS, "GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS");
#endif
#if defined(GL_FRAGMENT_COVERAGE_TO_COLOR_NV)
defconsti(env, "GL-FRAGMENT-COVERAGE-TO-COLOR-NV", (GLenum) GL_FRAGMENT_COVERAGE_TO_COLOR_NV, "GL_FRAGMENT_COVERAGE_TO_COLOR_NV");
#endif
#if defined(GL_FRAGMENT_COVERAGE_COLOR_NV)
defconsti(env, "GL-FRAGMENT-COVERAGE-COLOR-NV", (GLenum) GL_FRAGMENT_COVERAGE_COLOR_NV, "GL_FRAGMENT_COVERAGE_COLOR_NV");
#endif
#if defined(GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV)
defconsti(env, "GL-MESH-OUTPUT-PER-VERTEX-GRANULARITY-NV", (GLenum) GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV, "GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV");
#endif
#if defined(GL_DEBUG_OUTPUT)
defconsti(env, "GL-DEBUG-OUTPUT", (GLenum) GL_DEBUG_OUTPUT, "GL_DEBUG_OUTPUT");
#endif
#if defined(GL_DEBUG_OUTPUT_KHR)
defconsti(env, "GL-DEBUG-OUTPUT-KHR", (GLenum) GL_DEBUG_OUTPUT_KHR, "GL_DEBUG_OUTPUT_KHR");
#endif
#if defined(GL_UNIFORM)
defconsti(env, "GL-UNIFORM", (GLenum) GL_UNIFORM, "GL_UNIFORM");
#endif
#if defined(GL_UNIFORM_BLOCK)
defconsti(env, "GL-UNIFORM-BLOCK", (GLenum) GL_UNIFORM_BLOCK, "GL_UNIFORM_BLOCK");
#endif
#if defined(GL_PROGRAM_INPUT)
defconsti(env, "GL-PROGRAM-INPUT", (GLenum) GL_PROGRAM_INPUT, "GL_PROGRAM_INPUT");
#endif
#if defined(GL_PROGRAM_OUTPUT)
defconsti(env, "GL-PROGRAM-OUTPUT", (GLenum) GL_PROGRAM_OUTPUT, "GL_PROGRAM_OUTPUT");
#endif
#if defined(GL_BUFFER_VARIABLE)
defconsti(env, "GL-BUFFER-VARIABLE", (GLenum) GL_BUFFER_VARIABLE, "GL_BUFFER_VARIABLE");
#endif
#if defined(GL_SHADER_STORAGE_BLOCK)
defconsti(env, "GL-SHADER-STORAGE-BLOCK", (GLenum) GL_SHADER_STORAGE_BLOCK, "GL_SHADER_STORAGE_BLOCK");
#endif
#if defined(GL_IS_PER_PATCH)
defconsti(env, "GL-IS-PER-PATCH", (GLenum) GL_IS_PER_PATCH, "GL_IS_PER_PATCH");
#endif
#if defined(GL_IS_PER_PATCH_EXT)
defconsti(env, "GL-IS-PER-PATCH-EXT", (GLenum) GL_IS_PER_PATCH_EXT, "GL_IS_PER_PATCH_EXT");
#endif
#if defined(GL_IS_PER_PATCH_OES)
defconsti(env, "GL-IS-PER-PATCH-OES", (GLenum) GL_IS_PER_PATCH_OES, "GL_IS_PER_PATCH_OES");
#endif
#if defined(GL_VERTEX_SUBROUTINE)
defconsti(env, "GL-VERTEX-SUBROUTINE", (GLenum) GL_VERTEX_SUBROUTINE, "GL_VERTEX_SUBROUTINE");
#endif
#if defined(GL_TESS_CONTROL_SUBROUTINE)
defconsti(env, "GL-TESS-CONTROL-SUBROUTINE", (GLenum) GL_TESS_CONTROL_SUBROUTINE, "GL_TESS_CONTROL_SUBROUTINE");
#endif
#if defined(GL_TESS_EVALUATION_SUBROUTINE)
defconsti(env, "GL-TESS-EVALUATION-SUBROUTINE", (GLenum) GL_TESS_EVALUATION_SUBROUTINE, "GL_TESS_EVALUATION_SUBROUTINE");
#endif
#if defined(GL_GEOMETRY_SUBROUTINE)
defconsti(env, "GL-GEOMETRY-SUBROUTINE", (GLenum) GL_GEOMETRY_SUBROUTINE, "GL_GEOMETRY_SUBROUTINE");
#endif
#if defined(GL_FRAGMENT_SUBROUTINE)
defconsti(env, "GL-FRAGMENT-SUBROUTINE", (GLenum) GL_FRAGMENT_SUBROUTINE, "GL_FRAGMENT_SUBROUTINE");
#endif
#if defined(GL_COMPUTE_SUBROUTINE)
defconsti(env, "GL-COMPUTE-SUBROUTINE", (GLenum) GL_COMPUTE_SUBROUTINE, "GL_COMPUTE_SUBROUTINE");
#endif
#if defined(GL_VERTEX_SUBROUTINE_UNIFORM)
defconsti(env, "GL-VERTEX-SUBROUTINE-UNIFORM", (GLenum) GL_VERTEX_SUBROUTINE_UNIFORM, "GL_VERTEX_SUBROUTINE_UNIFORM");
#endif
#if defined(GL_TESS_CONTROL_SUBROUTINE_UNIFORM)
defconsti(env, "GL-TESS-CONTROL-SUBROUTINE-UNIFORM", (GLenum) GL_TESS_CONTROL_SUBROUTINE_UNIFORM, "GL_TESS_CONTROL_SUBROUTINE_UNIFORM");
#endif
#if defined(GL_TESS_EVALUATION_SUBROUTINE_UNIFORM)
defconsti(env, "GL-TESS-EVALUATION-SUBROUTINE-UNIFORM", (GLenum) GL_TESS_EVALUATION_SUBROUTINE_UNIFORM, "GL_TESS_EVALUATION_SUBROUTINE_UNIFORM");
#endif
#if defined(GL_GEOMETRY_SUBROUTINE_UNIFORM)
defconsti(env, "GL-GEOMETRY-SUBROUTINE-UNIFORM", (GLenum) GL_GEOMETRY_SUBROUTINE_UNIFORM, "GL_GEOMETRY_SUBROUTINE_UNIFORM");
#endif
#if defined(GL_FRAGMENT_SUBROUTINE_UNIFORM)
defconsti(env, "GL-FRAGMENT-SUBROUTINE-UNIFORM", (GLenum) GL_FRAGMENT_SUBROUTINE_UNIFORM, "GL_FRAGMENT_SUBROUTINE_UNIFORM");
#endif
#if defined(GL_COMPUTE_SUBROUTINE_UNIFORM)
defconsti(env, "GL-COMPUTE-SUBROUTINE-UNIFORM", (GLenum) GL_COMPUTE_SUBROUTINE_UNIFORM, "GL_COMPUTE_SUBROUTINE_UNIFORM");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_VARYING)
defconsti(env, "GL-TRANSFORM-FEEDBACK-VARYING", (GLenum) GL_TRANSFORM_FEEDBACK_VARYING, "GL_TRANSFORM_FEEDBACK_VARYING");
#endif
#if defined(GL_ACTIVE_RESOURCES)
defconsti(env, "GL-ACTIVE-RESOURCES", (GLenum) GL_ACTIVE_RESOURCES, "GL_ACTIVE_RESOURCES");
#endif
#if defined(GL_MAX_NAME_LENGTH)
defconsti(env, "GL-MAX-NAME-LENGTH", (GLenum) GL_MAX_NAME_LENGTH, "GL_MAX_NAME_LENGTH");
#endif
#if defined(GL_MAX_NUM_ACTIVE_VARIABLES)
defconsti(env, "GL-MAX-NUM-ACTIVE-VARIABLES", (GLenum) GL_MAX_NUM_ACTIVE_VARIABLES, "GL_MAX_NUM_ACTIVE_VARIABLES");
#endif
#if defined(GL_MAX_NUM_COMPATIBLE_SUBROUTINES)
defconsti(env, "GL-MAX-NUM-COMPATIBLE-SUBROUTINES", (GLenum) GL_MAX_NUM_COMPATIBLE_SUBROUTINES, "GL_MAX_NUM_COMPATIBLE_SUBROUTINES");
#endif
#if defined(GL_NAME_LENGTH)
defconsti(env, "GL-NAME-LENGTH", (GLenum) GL_NAME_LENGTH, "GL_NAME_LENGTH");
#endif
#if defined(GL_TYPE)
defconsti(env, "GL-TYPE", (GLenum) GL_TYPE, "GL_TYPE");
#endif
#if defined(GL_ARRAY_SIZE)
defconsti(env, "GL-ARRAY-SIZE", (GLenum) GL_ARRAY_SIZE, "GL_ARRAY_SIZE");
#endif
#if defined(GL_OFFSET)
defconsti(env, "GL-OFFSET", (GLenum) GL_OFFSET, "GL_OFFSET");
#endif
#if defined(GL_BLOCK_INDEX)
defconsti(env, "GL-BLOCK-INDEX", (GLenum) GL_BLOCK_INDEX, "GL_BLOCK_INDEX");
#endif
#if defined(GL_ARRAY_STRIDE)
defconsti(env, "GL-ARRAY-STRIDE", (GLenum) GL_ARRAY_STRIDE, "GL_ARRAY_STRIDE");
#endif
#if defined(GL_MATRIX_STRIDE)
defconsti(env, "GL-MATRIX-STRIDE", (GLenum) GL_MATRIX_STRIDE, "GL_MATRIX_STRIDE");
#endif
#if defined(GL_IS_ROW_MAJOR)
defconsti(env, "GL-IS-ROW-MAJOR", (GLenum) GL_IS_ROW_MAJOR, "GL_IS_ROW_MAJOR");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_INDEX)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-INDEX", (GLenum) GL_ATOMIC_COUNTER_BUFFER_INDEX, "GL_ATOMIC_COUNTER_BUFFER_INDEX");
#endif
#if defined(GL_BUFFER_BINDING)
defconsti(env, "GL-BUFFER-BINDING", (GLenum) GL_BUFFER_BINDING, "GL_BUFFER_BINDING");
#endif
#if defined(GL_BUFFER_DATA_SIZE)
defconsti(env, "GL-BUFFER-DATA-SIZE", (GLenum) GL_BUFFER_DATA_SIZE, "GL_BUFFER_DATA_SIZE");
#endif
#if defined(GL_NUM_ACTIVE_VARIABLES)
defconsti(env, "GL-NUM-ACTIVE-VARIABLES", (GLenum) GL_NUM_ACTIVE_VARIABLES, "GL_NUM_ACTIVE_VARIABLES");
#endif
#if defined(GL_ACTIVE_VARIABLES)
defconsti(env, "GL-ACTIVE-VARIABLES", (GLenum) GL_ACTIVE_VARIABLES, "GL_ACTIVE_VARIABLES");
#endif
#if defined(GL_REFERENCED_BY_VERTEX_SHADER)
defconsti(env, "GL-REFERENCED-BY-VERTEX-SHADER", (GLenum) GL_REFERENCED_BY_VERTEX_SHADER, "GL_REFERENCED_BY_VERTEX_SHADER");
#endif
#if defined(GL_REFERENCED_BY_TESS_CONTROL_SHADER)
defconsti(env, "GL-REFERENCED-BY-TESS-CONTROL-SHADER", (GLenum) GL_REFERENCED_BY_TESS_CONTROL_SHADER, "GL_REFERENCED_BY_TESS_CONTROL_SHADER");
#endif
#if defined(GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT)
defconsti(env, "GL-REFERENCED-BY-TESS-CONTROL-SHADER-EXT", (GLenum) GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT, "GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT");
#endif
#if defined(GL_REFERENCED_BY_TESS_CONTROL_SHADER_OES)
defconsti(env, "GL-REFERENCED-BY-TESS-CONTROL-SHADER-OES", (GLenum) GL_REFERENCED_BY_TESS_CONTROL_SHADER_OES, "GL_REFERENCED_BY_TESS_CONTROL_SHADER_OES");
#endif
#if defined(GL_REFERENCED_BY_TESS_EVALUATION_SHADER)
defconsti(env, "GL-REFERENCED-BY-TESS-EVALUATION-SHADER", (GLenum) GL_REFERENCED_BY_TESS_EVALUATION_SHADER, "GL_REFERENCED_BY_TESS_EVALUATION_SHADER");
#endif
#if defined(GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT)
defconsti(env, "GL-REFERENCED-BY-TESS-EVALUATION-SHADER-EXT", (GLenum) GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT, "GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT");
#endif
#if defined(GL_REFERENCED_BY_TESS_EVALUATION_SHADER_OES)
defconsti(env, "GL-REFERENCED-BY-TESS-EVALUATION-SHADER-OES", (GLenum) GL_REFERENCED_BY_TESS_EVALUATION_SHADER_OES, "GL_REFERENCED_BY_TESS_EVALUATION_SHADER_OES");
#endif
#if defined(GL_REFERENCED_BY_GEOMETRY_SHADER)
defconsti(env, "GL-REFERENCED-BY-GEOMETRY-SHADER", (GLenum) GL_REFERENCED_BY_GEOMETRY_SHADER, "GL_REFERENCED_BY_GEOMETRY_SHADER");
#endif
#if defined(GL_REFERENCED_BY_GEOMETRY_SHADER_EXT)
defconsti(env, "GL-REFERENCED-BY-GEOMETRY-SHADER-EXT", (GLenum) GL_REFERENCED_BY_GEOMETRY_SHADER_EXT, "GL_REFERENCED_BY_GEOMETRY_SHADER_EXT");
#endif
#if defined(GL_REFERENCED_BY_GEOMETRY_SHADER_OES)
defconsti(env, "GL-REFERENCED-BY-GEOMETRY-SHADER-OES", (GLenum) GL_REFERENCED_BY_GEOMETRY_SHADER_OES, "GL_REFERENCED_BY_GEOMETRY_SHADER_OES");
#endif
#if defined(GL_REFERENCED_BY_FRAGMENT_SHADER)
defconsti(env, "GL-REFERENCED-BY-FRAGMENT-SHADER", (GLenum) GL_REFERENCED_BY_FRAGMENT_SHADER, "GL_REFERENCED_BY_FRAGMENT_SHADER");
#endif
#if defined(GL_REFERENCED_BY_COMPUTE_SHADER)
defconsti(env, "GL-REFERENCED-BY-COMPUTE-SHADER", (GLenum) GL_REFERENCED_BY_COMPUTE_SHADER, "GL_REFERENCED_BY_COMPUTE_SHADER");
#endif
#if defined(GL_TOP_LEVEL_ARRAY_SIZE)
defconsti(env, "GL-TOP-LEVEL-ARRAY-SIZE", (GLenum) GL_TOP_LEVEL_ARRAY_SIZE, "GL_TOP_LEVEL_ARRAY_SIZE");
#endif
#if defined(GL_TOP_LEVEL_ARRAY_STRIDE)
defconsti(env, "GL-TOP-LEVEL-ARRAY-STRIDE", (GLenum) GL_TOP_LEVEL_ARRAY_STRIDE, "GL_TOP_LEVEL_ARRAY_STRIDE");
#endif
#if defined(GL_LOCATION)
defconsti(env, "GL-LOCATION", (GLenum) GL_LOCATION, "GL_LOCATION");
#endif
#if defined(GL_LOCATION_INDEX)
defconsti(env, "GL-LOCATION-INDEX", (GLenum) GL_LOCATION_INDEX, "GL_LOCATION_INDEX");
#endif
#if defined(GL_LOCATION_INDEX_EXT)
defconsti(env, "GL-LOCATION-INDEX-EXT", (GLenum) GL_LOCATION_INDEX_EXT, "GL_LOCATION_INDEX_EXT");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_WIDTH)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-WIDTH", (GLenum) GL_FRAMEBUFFER_DEFAULT_WIDTH, "GL_FRAMEBUFFER_DEFAULT_WIDTH");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_HEIGHT)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-HEIGHT", (GLenum) GL_FRAMEBUFFER_DEFAULT_HEIGHT, "GL_FRAMEBUFFER_DEFAULT_HEIGHT");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_LAYERS)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-LAYERS", (GLenum) GL_FRAMEBUFFER_DEFAULT_LAYERS, "GL_FRAMEBUFFER_DEFAULT_LAYERS");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-LAYERS-EXT", (GLenum) GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT, "GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_LAYERS_OES)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-LAYERS-OES", (GLenum) GL_FRAMEBUFFER_DEFAULT_LAYERS_OES, "GL_FRAMEBUFFER_DEFAULT_LAYERS_OES");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_SAMPLES)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-SAMPLES", (GLenum) GL_FRAMEBUFFER_DEFAULT_SAMPLES, "GL_FRAMEBUFFER_DEFAULT_SAMPLES");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-FIXED-SAMPLE-LOCATIONS", (GLenum) GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS, "GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS");
#endif
#if defined(GL_MAX_FRAMEBUFFER_WIDTH)
defconsti(env, "GL-MAX-FRAMEBUFFER-WIDTH", (GLenum) GL_MAX_FRAMEBUFFER_WIDTH, "GL_MAX_FRAMEBUFFER_WIDTH");
#endif
#if defined(GL_MAX_FRAMEBUFFER_HEIGHT)
defconsti(env, "GL-MAX-FRAMEBUFFER-HEIGHT", (GLenum) GL_MAX_FRAMEBUFFER_HEIGHT, "GL_MAX_FRAMEBUFFER_HEIGHT");
#endif
#if defined(GL_MAX_FRAMEBUFFER_LAYERS)
defconsti(env, "GL-MAX-FRAMEBUFFER-LAYERS", (GLenum) GL_MAX_FRAMEBUFFER_LAYERS, "GL_MAX_FRAMEBUFFER_LAYERS");
#endif
#if defined(GL_MAX_FRAMEBUFFER_LAYERS_EXT)
defconsti(env, "GL-MAX-FRAMEBUFFER-LAYERS-EXT", (GLenum) GL_MAX_FRAMEBUFFER_LAYERS_EXT, "GL_MAX_FRAMEBUFFER_LAYERS_EXT");
#endif
#if defined(GL_MAX_FRAMEBUFFER_LAYERS_OES)
defconsti(env, "GL-MAX-FRAMEBUFFER-LAYERS-OES", (GLenum) GL_MAX_FRAMEBUFFER_LAYERS_OES, "GL_MAX_FRAMEBUFFER_LAYERS_OES");
#endif
#if defined(GL_MAX_FRAMEBUFFER_SAMPLES)
defconsti(env, "GL-MAX-FRAMEBUFFER-SAMPLES", (GLenum) GL_MAX_FRAMEBUFFER_SAMPLES, "GL_MAX_FRAMEBUFFER_SAMPLES");
#endif
#if defined(GL_RASTER_MULTISAMPLE_EXT)
defconsti(env, "GL-RASTER-MULTISAMPLE-EXT", (GLenum) GL_RASTER_MULTISAMPLE_EXT, "GL_RASTER_MULTISAMPLE_EXT");
#endif
#if defined(GL_RASTER_SAMPLES_EXT)
defconsti(env, "GL-RASTER-SAMPLES-EXT", (GLenum) GL_RASTER_SAMPLES_EXT, "GL_RASTER_SAMPLES_EXT");
#endif
#if defined(GL_MAX_RASTER_SAMPLES_EXT)
defconsti(env, "GL-MAX-RASTER-SAMPLES-EXT", (GLenum) GL_MAX_RASTER_SAMPLES_EXT, "GL_MAX_RASTER_SAMPLES_EXT");
#endif
#if defined(GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT)
defconsti(env, "GL-RASTER-FIXED-SAMPLE-LOCATIONS-EXT", (GLenum) GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT, "GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT");
#endif
#if defined(GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT)
defconsti(env, "GL-MULTISAMPLE-RASTERIZATION-ALLOWED-EXT", (GLenum) GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT, "GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT");
#endif
#if defined(GL_EFFECTIVE_RASTER_SAMPLES_EXT)
defconsti(env, "GL-EFFECTIVE-RASTER-SAMPLES-EXT", (GLenum) GL_EFFECTIVE_RASTER_SAMPLES_EXT, "GL_EFFECTIVE_RASTER_SAMPLES_EXT");
#endif
#if defined(GL_DEPTH_SAMPLES_NV)
defconsti(env, "GL-DEPTH-SAMPLES-NV", (GLenum) GL_DEPTH_SAMPLES_NV, "GL_DEPTH_SAMPLES_NV");
#endif
#if defined(GL_STENCIL_SAMPLES_NV)
defconsti(env, "GL-STENCIL-SAMPLES-NV", (GLenum) GL_STENCIL_SAMPLES_NV, "GL_STENCIL_SAMPLES_NV");
#endif
#if defined(GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV)
defconsti(env, "GL-MIXED-DEPTH-SAMPLES-SUPPORTED-NV", (GLenum) GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV, "GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV");
#endif
#if defined(GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV)
defconsti(env, "GL-MIXED-STENCIL-SAMPLES-SUPPORTED-NV", (GLenum) GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV, "GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV");
#endif
#if defined(GL_COVERAGE_MODULATION_TABLE_NV)
defconsti(env, "GL-COVERAGE-MODULATION-TABLE-NV", (GLenum) GL_COVERAGE_MODULATION_TABLE_NV, "GL_COVERAGE_MODULATION_TABLE_NV");
#endif
#if defined(GL_COVERAGE_MODULATION_NV)
defconsti(env, "GL-COVERAGE-MODULATION-NV", (GLenum) GL_COVERAGE_MODULATION_NV, "GL_COVERAGE_MODULATION_NV");
#endif
#if defined(GL_COVERAGE_MODULATION_TABLE_SIZE_NV)
defconsti(env, "GL-COVERAGE-MODULATION-TABLE-SIZE-NV", (GLenum) GL_COVERAGE_MODULATION_TABLE_SIZE_NV, "GL_COVERAGE_MODULATION_TABLE_SIZE_NV");
#endif
#if defined(GL_WARP_SIZE_NV)
defconsti(env, "GL-WARP-SIZE-NV", (GLenum) GL_WARP_SIZE_NV, "GL_WARP_SIZE_NV");
#endif
#if defined(GL_WARPS_PER_SM_NV)
defconsti(env, "GL-WARPS-PER-SM-NV", (GLenum) GL_WARPS_PER_SM_NV, "GL_WARPS_PER_SM_NV");
#endif
#if defined(GL_SM_COUNT_NV)
defconsti(env, "GL-SM-COUNT-NV", (GLenum) GL_SM_COUNT_NV, "GL_SM_COUNT_NV");
#endif
#if defined(GL_FILL_RECTANGLE_NV)
defconsti(env, "GL-FILL-RECTANGLE-NV", (GLenum) GL_FILL_RECTANGLE_NV, "GL_FILL_RECTANGLE_NV");
#endif
#if defined(GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB)
defconsti(env, "GL-SAMPLE-LOCATION-SUBPIXEL-BITS-ARB", (GLenum) GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB, "GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB");
#endif
#if defined(GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV)
defconsti(env, "GL-SAMPLE-LOCATION-SUBPIXEL-BITS-NV", (GLenum) GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV, "GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV");
#endif
#if defined(GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB)
defconsti(env, "GL-SAMPLE-LOCATION-PIXEL-GRID-WIDTH-ARB", (GLenum) GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB, "GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB");
#endif
#if defined(GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV)
defconsti(env, "GL-SAMPLE-LOCATION-PIXEL-GRID-WIDTH-NV", (GLenum) GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV, "GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV");
#endif
#if defined(GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB)
defconsti(env, "GL-SAMPLE-LOCATION-PIXEL-GRID-HEIGHT-ARB", (GLenum) GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB, "GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB");
#endif
#if defined(GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV)
defconsti(env, "GL-SAMPLE-LOCATION-PIXEL-GRID-HEIGHT-NV", (GLenum) GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV, "GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV");
#endif
#if defined(GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB)
defconsti(env, "GL-PROGRAMMABLE-SAMPLE-LOCATION-TABLE-SIZE-ARB", (GLenum) GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB, "GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB");
#endif
#if defined(GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV)
defconsti(env, "GL-PROGRAMMABLE-SAMPLE-LOCATION-TABLE-SIZE-NV", (GLenum) GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV, "GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV");
#endif
#if defined(GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB)
defconsti(env, "GL-PROGRAMMABLE-SAMPLE-LOCATION-ARB", (GLenum) GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB, "GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB");
#endif
#if defined(GL_PROGRAMMABLE_SAMPLE_LOCATION_NV)
defconsti(env, "GL-PROGRAMMABLE-SAMPLE-LOCATION-NV", (GLenum) GL_PROGRAMMABLE_SAMPLE_LOCATION_NV, "GL_PROGRAMMABLE_SAMPLE_LOCATION_NV");
#endif
#if defined(GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB)
defconsti(env, "GL-FRAMEBUFFER-PROGRAMMABLE-SAMPLE-LOCATIONS-ARB", (GLenum) GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB, "GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB");
#endif
#if defined(GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV)
defconsti(env, "GL-FRAMEBUFFER-PROGRAMMABLE-SAMPLE-LOCATIONS-NV", (GLenum) GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV, "GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV");
#endif
#if defined(GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB)
defconsti(env, "GL-FRAMEBUFFER-SAMPLE-LOCATION-PIXEL-GRID-ARB", (GLenum) GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB, "GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB");
#endif
#if defined(GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV)
defconsti(env, "GL-FRAMEBUFFER-SAMPLE-LOCATION-PIXEL-GRID-NV", (GLenum) GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV, "GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV");
#endif
#if defined(GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB)
defconsti(env, "GL-MAX-COMPUTE-VARIABLE-GROUP-INVOCATIONS-ARB", (GLenum) GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB, "GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB");
#endif
#if defined(GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB)
defconsti(env, "GL-MAX-COMPUTE-VARIABLE-GROUP-SIZE-ARB", (GLenum) GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB, "GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB");
#endif
#if defined(GL_CONSERVATIVE_RASTERIZATION_NV)
defconsti(env, "GL-CONSERVATIVE-RASTERIZATION-NV", (GLenum) GL_CONSERVATIVE_RASTERIZATION_NV, "GL_CONSERVATIVE_RASTERIZATION_NV");
#endif
#if defined(GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV)
defconsti(env, "GL-SUBPIXEL-PRECISION-BIAS-X-BITS-NV", (GLenum) GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV, "GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV");
#endif
#if defined(GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV)
defconsti(env, "GL-SUBPIXEL-PRECISION-BIAS-Y-BITS-NV", (GLenum) GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV, "GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV");
#endif
#if defined(GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV)
defconsti(env, "GL-MAX-SUBPIXEL-PRECISION-BIAS-BITS-NV", (GLenum) GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV, "GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV");
#endif
#if defined(GL_LOCATION_COMPONENT)
defconsti(env, "GL-LOCATION-COMPONENT", (GLenum) GL_LOCATION_COMPONENT, "GL_LOCATION_COMPONENT");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_INDEX)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-INDEX", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_INDEX, "GL_TRANSFORM_FEEDBACK_BUFFER_INDEX");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-STRIDE", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE, "GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE");
#endif
#if defined(GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV)
defconsti(env, "GL-ALPHA-TO-COVERAGE-DITHER-DEFAULT-NV", (GLenum) GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV, "GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV");
#endif
#if defined(GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV)
defconsti(env, "GL-ALPHA-TO-COVERAGE-DITHER-ENABLE-NV", (GLenum) GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV, "GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV");
#endif
#if defined(GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV)
defconsti(env, "GL-ALPHA-TO-COVERAGE-DITHER-DISABLE-NV", (GLenum) GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV, "GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV");
#endif
#if defined(GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV)
defconsti(env, "GL-VIEWPORT-SWIZZLE-POSITIVE-X-NV", (GLenum) GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV, "GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV");
#endif
#if defined(GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV)
defconsti(env, "GL-VIEWPORT-SWIZZLE-NEGATIVE-X-NV", (GLenum) GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV, "GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV");
#endif
#if defined(GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV)
defconsti(env, "GL-VIEWPORT-SWIZZLE-POSITIVE-Y-NV", (GLenum) GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV, "GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV");
#endif
#if defined(GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV)
defconsti(env, "GL-VIEWPORT-SWIZZLE-NEGATIVE-Y-NV", (GLenum) GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV, "GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV");
#endif
#if defined(GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV)
defconsti(env, "GL-VIEWPORT-SWIZZLE-POSITIVE-Z-NV", (GLenum) GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV, "GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV");
#endif
#if defined(GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV)
defconsti(env, "GL-VIEWPORT-SWIZZLE-NEGATIVE-Z-NV", (GLenum) GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV, "GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV");
#endif
#if defined(GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV)
defconsti(env, "GL-VIEWPORT-SWIZZLE-POSITIVE-W-NV", (GLenum) GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV, "GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV");
#endif
#if defined(GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV)
defconsti(env, "GL-VIEWPORT-SWIZZLE-NEGATIVE-W-NV", (GLenum) GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV, "GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV");
#endif
#if defined(GL_VIEWPORT_SWIZZLE_X_NV)
defconsti(env, "GL-VIEWPORT-SWIZZLE-X-NV", (GLenum) GL_VIEWPORT_SWIZZLE_X_NV, "GL_VIEWPORT_SWIZZLE_X_NV");
#endif
#if defined(GL_VIEWPORT_SWIZZLE_Y_NV)
defconsti(env, "GL-VIEWPORT-SWIZZLE-Y-NV", (GLenum) GL_VIEWPORT_SWIZZLE_Y_NV, "GL_VIEWPORT_SWIZZLE_Y_NV");
#endif
#if defined(GL_VIEWPORT_SWIZZLE_Z_NV)
defconsti(env, "GL-VIEWPORT-SWIZZLE-Z-NV", (GLenum) GL_VIEWPORT_SWIZZLE_Z_NV, "GL_VIEWPORT_SWIZZLE_Z_NV");
#endif
#if defined(GL_VIEWPORT_SWIZZLE_W_NV)
defconsti(env, "GL-VIEWPORT-SWIZZLE-W-NV", (GLenum) GL_VIEWPORT_SWIZZLE_W_NV, "GL_VIEWPORT_SWIZZLE_W_NV");
#endif
#if defined(GL_CLIP_ORIGIN)
defconsti(env, "GL-CLIP-ORIGIN", (GLenum) GL_CLIP_ORIGIN, "GL_CLIP_ORIGIN");
#endif
#if defined(GL_CLIP_ORIGIN_EXT)
defconsti(env, "GL-CLIP-ORIGIN-EXT", (GLenum) GL_CLIP_ORIGIN_EXT, "GL_CLIP_ORIGIN_EXT");
#endif
#if defined(GL_CLIP_DEPTH_MODE)
defconsti(env, "GL-CLIP-DEPTH-MODE", (GLenum) GL_CLIP_DEPTH_MODE, "GL_CLIP_DEPTH_MODE");
#endif
#if defined(GL_CLIP_DEPTH_MODE_EXT)
defconsti(env, "GL-CLIP-DEPTH-MODE-EXT", (GLenum) GL_CLIP_DEPTH_MODE_EXT, "GL_CLIP_DEPTH_MODE_EXT");
#endif
#if defined(GL_NEGATIVE_ONE_TO_ONE)
defconsti(env, "GL-NEGATIVE-ONE-TO-ONE", (GLenum) GL_NEGATIVE_ONE_TO_ONE, "GL_NEGATIVE_ONE_TO_ONE");
#endif
#if defined(GL_NEGATIVE_ONE_TO_ONE_EXT)
defconsti(env, "GL-NEGATIVE-ONE-TO-ONE-EXT", (GLenum) GL_NEGATIVE_ONE_TO_ONE_EXT, "GL_NEGATIVE_ONE_TO_ONE_EXT");
#endif
#if defined(GL_ZERO_TO_ONE)
defconsti(env, "GL-ZERO-TO-ONE", (GLenum) GL_ZERO_TO_ONE, "GL_ZERO_TO_ONE");
#endif
#if defined(GL_ZERO_TO_ONE_EXT)
defconsti(env, "GL-ZERO-TO-ONE-EXT", (GLenum) GL_ZERO_TO_ONE_EXT, "GL_ZERO_TO_ONE_EXT");
#endif
#if defined(GL_CLEAR_TEXTURE)
defconsti(env, "GL-CLEAR-TEXTURE", (GLenum) GL_CLEAR_TEXTURE, "GL_CLEAR_TEXTURE");
#endif
#if defined(GL_TEXTURE_REDUCTION_MODE_ARB)
defconsti(env, "GL-TEXTURE-REDUCTION-MODE-ARB", (GLenum) GL_TEXTURE_REDUCTION_MODE_ARB, "GL_TEXTURE_REDUCTION_MODE_ARB");
#endif
#if defined(GL_TEXTURE_REDUCTION_MODE_EXT)
defconsti(env, "GL-TEXTURE-REDUCTION-MODE-EXT", (GLenum) GL_TEXTURE_REDUCTION_MODE_EXT, "GL_TEXTURE_REDUCTION_MODE_EXT");
#endif
#if defined(GL_WEIGHTED_AVERAGE_ARB)
defconsti(env, "GL-WEIGHTED-AVERAGE-ARB", (GLenum) GL_WEIGHTED_AVERAGE_ARB, "GL_WEIGHTED_AVERAGE_ARB");
#endif
#if defined(GL_WEIGHTED_AVERAGE_EXT)
defconsti(env, "GL-WEIGHTED-AVERAGE-EXT", (GLenum) GL_WEIGHTED_AVERAGE_EXT, "GL_WEIGHTED_AVERAGE_EXT");
#endif
#if defined(GL_FONT_GLYPHS_AVAILABLE_NV)
defconsti(env, "GL-FONT-GLYPHS-AVAILABLE-NV", (GLenum) GL_FONT_GLYPHS_AVAILABLE_NV, "GL_FONT_GLYPHS_AVAILABLE_NV");
#endif
#if defined(GL_FONT_TARGET_UNAVAILABLE_NV)
defconsti(env, "GL-FONT-TARGET-UNAVAILABLE-NV", (GLenum) GL_FONT_TARGET_UNAVAILABLE_NV, "GL_FONT_TARGET_UNAVAILABLE_NV");
#endif
#if defined(GL_FONT_UNAVAILABLE_NV)
defconsti(env, "GL-FONT-UNAVAILABLE-NV", (GLenum) GL_FONT_UNAVAILABLE_NV, "GL_FONT_UNAVAILABLE_NV");
#endif
#if defined(GL_FONT_UNINTELLIGIBLE_NV)
defconsti(env, "GL-FONT-UNINTELLIGIBLE-NV", (GLenum) GL_FONT_UNINTELLIGIBLE_NV, "GL_FONT_UNINTELLIGIBLE_NV");
#endif
#if defined(GL_STANDARD_FONT_FORMAT_NV)
defconsti(env, "GL-STANDARD-FONT-FORMAT-NV", (GLenum) GL_STANDARD_FONT_FORMAT_NV, "GL_STANDARD_FONT_FORMAT_NV");
#endif
#if defined(GL_FRAGMENT_INPUT_NV)
defconsti(env, "GL-FRAGMENT-INPUT-NV", (GLenum) GL_FRAGMENT_INPUT_NV, "GL_FRAGMENT_INPUT_NV");
#endif
#if defined(GL_UNIFORM_BUFFER_UNIFIED_NV)
defconsti(env, "GL-UNIFORM-BUFFER-UNIFIED-NV", (GLenum) GL_UNIFORM_BUFFER_UNIFIED_NV, "GL_UNIFORM_BUFFER_UNIFIED_NV");
#endif
#if defined(GL_UNIFORM_BUFFER_ADDRESS_NV)
defconsti(env, "GL-UNIFORM-BUFFER-ADDRESS-NV", (GLenum) GL_UNIFORM_BUFFER_ADDRESS_NV, "GL_UNIFORM_BUFFER_ADDRESS_NV");
#endif
#if defined(GL_UNIFORM_BUFFER_LENGTH_NV)
defconsti(env, "GL-UNIFORM-BUFFER-LENGTH-NV", (GLenum) GL_UNIFORM_BUFFER_LENGTH_NV, "GL_UNIFORM_BUFFER_LENGTH_NV");
#endif
#if defined(GL_MULTISAMPLES_NV)
defconsti(env, "GL-MULTISAMPLES-NV", (GLenum) GL_MULTISAMPLES_NV, "GL_MULTISAMPLES_NV");
#endif
#if defined(GL_SUPERSAMPLE_SCALE_X_NV)
defconsti(env, "GL-SUPERSAMPLE-SCALE-X-NV", (GLenum) GL_SUPERSAMPLE_SCALE_X_NV, "GL_SUPERSAMPLE_SCALE_X_NV");
#endif
#if defined(GL_SUPERSAMPLE_SCALE_Y_NV)
defconsti(env, "GL-SUPERSAMPLE-SCALE-Y-NV", (GLenum) GL_SUPERSAMPLE_SCALE_Y_NV, "GL_SUPERSAMPLE_SCALE_Y_NV");
#endif
#if defined(GL_CONFORMANT_NV)
defconsti(env, "GL-CONFORMANT-NV", (GLenum) GL_CONFORMANT_NV, "GL_CONFORMANT_NV");
#endif
#if defined(GL_CONSERVATIVE_RASTER_DILATE_NV)
defconsti(env, "GL-CONSERVATIVE-RASTER-DILATE-NV", (GLenum) GL_CONSERVATIVE_RASTER_DILATE_NV, "GL_CONSERVATIVE_RASTER_DILATE_NV");
#endif
#if defined(GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV)
defconsti(env, "GL-CONSERVATIVE-RASTER-DILATE-RANGE-NV", (GLenum) GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV, "GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV");
#endif
#if defined(GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV)
defconsti(env, "GL-CONSERVATIVE-RASTER-DILATE-GRANULARITY-NV", (GLenum) GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV, "GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV");
#endif
#if defined(GL_VIEWPORT_POSITION_W_SCALE_NV)
defconsti(env, "GL-VIEWPORT-POSITION-W-SCALE-NV", (GLenum) GL_VIEWPORT_POSITION_W_SCALE_NV, "GL_VIEWPORT_POSITION_W_SCALE_NV");
#endif
#if defined(GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV)
defconsti(env, "GL-VIEWPORT-POSITION-W-SCALE-X-COEFF-NV", (GLenum) GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV, "GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV");
#endif
#if defined(GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV)
defconsti(env, "GL-VIEWPORT-POSITION-W-SCALE-Y-COEFF-NV", (GLenum) GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV, "GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV");
#endif
#if defined(GL_REPRESENTATIVE_FRAGMENT_TEST_NV)
defconsti(env, "GL-REPRESENTATIVE-FRAGMENT-TEST-NV", (GLenum) GL_REPRESENTATIVE_FRAGMENT_TEST_NV, "GL_REPRESENTATIVE_FRAGMENT_TEST_NV");
#endif
#if defined(GL_NUM_SAMPLE_COUNTS)
defconsti(env, "GL-NUM-SAMPLE-COUNTS", (GLenum) GL_NUM_SAMPLE_COUNTS, "GL_NUM_SAMPLE_COUNTS");
#endif
#if defined(GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB)
defconsti(env, "GL-MULTISAMPLE-LINE-WIDTH-RANGE-ARB", (GLenum) GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB, "GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB");
#endif
#if defined(GL_MULTISAMPLE_LINE_WIDTH_RANGE)
defconsti(env, "GL-MULTISAMPLE-LINE-WIDTH-RANGE", (GLenum) GL_MULTISAMPLE_LINE_WIDTH_RANGE, "GL_MULTISAMPLE_LINE_WIDTH_RANGE");
#endif
#if defined(GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB)
defconsti(env, "GL-MULTISAMPLE-LINE-WIDTH-GRANULARITY-ARB", (GLenum) GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB, "GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB");
#endif
#if defined(GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY)
defconsti(env, "GL-MULTISAMPLE-LINE-WIDTH-GRANULARITY", (GLenum) GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY, "GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY");
#endif
#if defined(GL_VIEW_CLASS_EAC_R11)
defconsti(env, "GL-VIEW-CLASS-EAC-R11", (GLenum) GL_VIEW_CLASS_EAC_R11, "GL_VIEW_CLASS_EAC_R11");
#endif
#if defined(GL_VIEW_CLASS_EAC_RG11)
defconsti(env, "GL-VIEW-CLASS-EAC-RG11", (GLenum) GL_VIEW_CLASS_EAC_RG11, "GL_VIEW_CLASS_EAC_RG11");
#endif
#if defined(GL_VIEW_CLASS_ETC2_RGB)
defconsti(env, "GL-VIEW-CLASS-ETC2-RGB", (GLenum) GL_VIEW_CLASS_ETC2_RGB, "GL_VIEW_CLASS_ETC2_RGB");
#endif
#if defined(GL_VIEW_CLASS_ETC2_RGBA)
defconsti(env, "GL-VIEW-CLASS-ETC2-RGBA", (GLenum) GL_VIEW_CLASS_ETC2_RGBA, "GL_VIEW_CLASS_ETC2_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ETC2_EAC_RGBA)
defconsti(env, "GL-VIEW-CLASS-ETC2-EAC-RGBA", (GLenum) GL_VIEW_CLASS_ETC2_EAC_RGBA, "GL_VIEW_CLASS_ETC2_EAC_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_4x4_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-4x4-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_4x4_RGBA, "GL_VIEW_CLASS_ASTC_4x4_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_5x4_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-5x4-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_5x4_RGBA, "GL_VIEW_CLASS_ASTC_5x4_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_5x5_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-5x5-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_5x5_RGBA, "GL_VIEW_CLASS_ASTC_5x5_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_6x5_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-6x5-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_6x5_RGBA, "GL_VIEW_CLASS_ASTC_6x5_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_6x6_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-6x6-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_6x6_RGBA, "GL_VIEW_CLASS_ASTC_6x6_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_8x5_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-8x5-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_8x5_RGBA, "GL_VIEW_CLASS_ASTC_8x5_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_8x6_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-8x6-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_8x6_RGBA, "GL_VIEW_CLASS_ASTC_8x6_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_8x8_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-8x8-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_8x8_RGBA, "GL_VIEW_CLASS_ASTC_8x8_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_10x5_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-10x5-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_10x5_RGBA, "GL_VIEW_CLASS_ASTC_10x5_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_10x6_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-10x6-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_10x6_RGBA, "GL_VIEW_CLASS_ASTC_10x6_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_10x8_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-10x8-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_10x8_RGBA, "GL_VIEW_CLASS_ASTC_10x8_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_10x10_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-10x10-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_10x10_RGBA, "GL_VIEW_CLASS_ASTC_10x10_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_12x10_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-12x10-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_12x10_RGBA, "GL_VIEW_CLASS_ASTC_12x10_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_12x12_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-12x12-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_12x12_RGBA, "GL_VIEW_CLASS_ASTC_12x12_RGBA");
#endif
#if defined(GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE)
defconsti(env, "GL-TRANSLATED-SHADER-SOURCE-LENGTH-ANGLE", (GLenum) GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE, "GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE");
#endif
#if defined(GL_BGRA8_EXT)
defconsti(env, "GL-BGRA8-EXT", (GLenum) GL_BGRA8_EXT, "GL_BGRA8_EXT");
#endif
#if defined(GL_TEXTURE_USAGE_ANGLE)
defconsti(env, "GL-TEXTURE-USAGE-ANGLE", (GLenum) GL_TEXTURE_USAGE_ANGLE, "GL_TEXTURE_USAGE_ANGLE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_ANGLE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-ANGLE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_ANGLE, "GL_FRAMEBUFFER_ATTACHMENT_ANGLE");
#endif
#if defined(GL_PACK_REVERSE_ROW_ORDER_ANGLE)
defconsti(env, "GL-PACK-REVERSE-ROW-ORDER-ANGLE", (GLenum) GL_PACK_REVERSE_ROW_ORDER_ANGLE, "GL_PACK_REVERSE_ROW_ORDER_ANGLE");
#endif
#if defined(GL_PROGRAM_BINARY_ANGLE)
defconsti(env, "GL-PROGRAM-BINARY-ANGLE", (GLenum) GL_PROGRAM_BINARY_ANGLE, "GL_PROGRAM_BINARY_ANGLE");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_4x4)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-4x4", (GLenum) GL_COMPRESSED_RGBA_ASTC_4x4, "GL_COMPRESSED_RGBA_ASTC_4x4");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_4x4_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-4x4-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_4x4_KHR, "GL_COMPRESSED_RGBA_ASTC_4x4_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_5x4)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-5x4", (GLenum) GL_COMPRESSED_RGBA_ASTC_5x4, "GL_COMPRESSED_RGBA_ASTC_5x4");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_5x4_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-5x4-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_5x4_KHR, "GL_COMPRESSED_RGBA_ASTC_5x4_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_5x5)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-5x5", (GLenum) GL_COMPRESSED_RGBA_ASTC_5x5, "GL_COMPRESSED_RGBA_ASTC_5x5");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_5x5_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-5x5-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_5x5_KHR, "GL_COMPRESSED_RGBA_ASTC_5x5_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_6x5)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-6x5", (GLenum) GL_COMPRESSED_RGBA_ASTC_6x5, "GL_COMPRESSED_RGBA_ASTC_6x5");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_6x5_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-6x5-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_6x5_KHR, "GL_COMPRESSED_RGBA_ASTC_6x5_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_6x6)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-6x6", (GLenum) GL_COMPRESSED_RGBA_ASTC_6x6, "GL_COMPRESSED_RGBA_ASTC_6x6");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_6x6_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-6x6-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_6x6_KHR, "GL_COMPRESSED_RGBA_ASTC_6x6_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_8x5)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-8x5", (GLenum) GL_COMPRESSED_RGBA_ASTC_8x5, "GL_COMPRESSED_RGBA_ASTC_8x5");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_8x5_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-8x5-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_8x5_KHR, "GL_COMPRESSED_RGBA_ASTC_8x5_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_8x6)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-8x6", (GLenum) GL_COMPRESSED_RGBA_ASTC_8x6, "GL_COMPRESSED_RGBA_ASTC_8x6");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_8x6_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-8x6-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_8x6_KHR, "GL_COMPRESSED_RGBA_ASTC_8x6_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_8x8)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-8x8", (GLenum) GL_COMPRESSED_RGBA_ASTC_8x8, "GL_COMPRESSED_RGBA_ASTC_8x8");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_8x8_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-8x8-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_8x8_KHR, "GL_COMPRESSED_RGBA_ASTC_8x8_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x5)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x5", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x5, "GL_COMPRESSED_RGBA_ASTC_10x5");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x5_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x5-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x5_KHR, "GL_COMPRESSED_RGBA_ASTC_10x5_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x6)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x6", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x6, "GL_COMPRESSED_RGBA_ASTC_10x6");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x6_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x6-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x6_KHR, "GL_COMPRESSED_RGBA_ASTC_10x6_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x8)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x8", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x8, "GL_COMPRESSED_RGBA_ASTC_10x8");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x8_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x8-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x8_KHR, "GL_COMPRESSED_RGBA_ASTC_10x8_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x10)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x10", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x10, "GL_COMPRESSED_RGBA_ASTC_10x10");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x10_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x10-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x10_KHR, "GL_COMPRESSED_RGBA_ASTC_10x10_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_12x10)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-12x10", (GLenum) GL_COMPRESSED_RGBA_ASTC_12x10, "GL_COMPRESSED_RGBA_ASTC_12x10");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_12x10_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-12x10-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_12x10_KHR, "GL_COMPRESSED_RGBA_ASTC_12x10_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_12x12)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-12x12", (GLenum) GL_COMPRESSED_RGBA_ASTC_12x12, "GL_COMPRESSED_RGBA_ASTC_12x12");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_12x12_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-12x12-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_12x12_KHR, "GL_COMPRESSED_RGBA_ASTC_12x12_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_3x3x3_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-3x3x3-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_3x3x3_OES, "GL_COMPRESSED_RGBA_ASTC_3x3x3_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_4x3x3_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-4x3x3-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_4x3x3_OES, "GL_COMPRESSED_RGBA_ASTC_4x3x3_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_4x4x3_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-4x4x3-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_4x4x3_OES, "GL_COMPRESSED_RGBA_ASTC_4x4x3_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_4x4x4_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-4x4x4-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_4x4x4_OES, "GL_COMPRESSED_RGBA_ASTC_4x4x4_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_5x4x4_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-5x4x4-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_5x4x4_OES, "GL_COMPRESSED_RGBA_ASTC_5x4x4_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_5x5x4_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-5x5x4-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_5x5x4_OES, "GL_COMPRESSED_RGBA_ASTC_5x5x4_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_5x5x5_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-5x5x5-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_5x5x5_OES, "GL_COMPRESSED_RGBA_ASTC_5x5x5_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_6x5x5_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-6x5x5-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_6x5x5_OES, "GL_COMPRESSED_RGBA_ASTC_6x5x5_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_6x6x5_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-6x6x5-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_6x6x5_OES, "GL_COMPRESSED_RGBA_ASTC_6x6x5_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_6x6x6_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-6x6x6-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_6x6x6_OES, "GL_COMPRESSED_RGBA_ASTC_6x6x6_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-4x4", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-4x4-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-5x4", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-5x4-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-5x5", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-5x5-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-6x5", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-6x5-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-6x6", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-6x6-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-8x5", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-8x5-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-8x6", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-8x6-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-8x8", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-8x8-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x5", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x5-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x6", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x6-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x8", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x8-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x10", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x10-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-12x10", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-12x10-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-12x12", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-12x12-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-3x3x3-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-4x3x3-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-4x4x3-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-4x4x4-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-5x4x4-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-5x5x4-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-5x5x5-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-6x5x5-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-6x6x5-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-6x6x6-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-PVRTC-2BPPV2-IMG", (GLenum) GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG, "GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-PVRTC-4BPPV2-IMG", (GLenum) GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG, "GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG");
#endif
#if defined(GL_PERFQUERY_COUNTER_EVENT_INTEL)
defconsti(env, "GL-PERFQUERY-COUNTER-EVENT-INTEL", (GLenum) GL_PERFQUERY_COUNTER_EVENT_INTEL, "GL_PERFQUERY_COUNTER_EVENT_INTEL");
#endif
#if defined(GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL)
defconsti(env, "GL-PERFQUERY-COUNTER-DURATION-NORM-INTEL", (GLenum) GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL, "GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL");
#endif
#if defined(GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL)
defconsti(env, "GL-PERFQUERY-COUNTER-DURATION-RAW-INTEL", (GLenum) GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL, "GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL");
#endif
#if defined(GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL)
defconsti(env, "GL-PERFQUERY-COUNTER-THROUGHPUT-INTEL", (GLenum) GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL, "GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL");
#endif
#if defined(GL_PERFQUERY_COUNTER_RAW_INTEL)
defconsti(env, "GL-PERFQUERY-COUNTER-RAW-INTEL", (GLenum) GL_PERFQUERY_COUNTER_RAW_INTEL, "GL_PERFQUERY_COUNTER_RAW_INTEL");
#endif
#if defined(GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL)
defconsti(env, "GL-PERFQUERY-COUNTER-TIMESTAMP-INTEL", (GLenum) GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL, "GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL");
#endif
#if defined(GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL)
defconsti(env, "GL-PERFQUERY-COUNTER-DATA-UINT32-INTEL", (GLenum) GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL, "GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL");
#endif
#if defined(GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL)
defconsti(env, "GL-PERFQUERY-COUNTER-DATA-UINT64-INTEL", (GLenum) GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL, "GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL");
#endif
#if defined(GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL)
defconsti(env, "GL-PERFQUERY-COUNTER-DATA-FLOAT-INTEL", (GLenum) GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL, "GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL");
#endif
#if defined(GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL)
defconsti(env, "GL-PERFQUERY-COUNTER-DATA-DOUBLE-INTEL", (GLenum) GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL, "GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL");
#endif
#if defined(GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL)
defconsti(env, "GL-PERFQUERY-COUNTER-DATA-BOOL32-INTEL", (GLenum) GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL, "GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL");
#endif
#if defined(GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL)
defconsti(env, "GL-PERFQUERY-QUERY-NAME-LENGTH-MAX-INTEL", (GLenum) GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL, "GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL");
#endif
#if defined(GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL)
defconsti(env, "GL-PERFQUERY-COUNTER-NAME-LENGTH-MAX-INTEL", (GLenum) GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL, "GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL");
#endif
#if defined(GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL)
defconsti(env, "GL-PERFQUERY-COUNTER-DESC-LENGTH-MAX-INTEL", (GLenum) GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL, "GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL");
#endif
#if defined(GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL)
defconsti(env, "GL-PERFQUERY-GPA-EXTENDED-COUNTERS-INTEL", (GLenum) GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL, "GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL");
#endif
#if defined(GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT)
defconsti(env, "GL-LAYOUT-DEPTH-READ-ONLY-STENCIL-ATTACHMENT-EXT", (GLenum) GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT, "GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT");
#endif
#if defined(GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT)
defconsti(env, "GL-LAYOUT-DEPTH-ATTACHMENT-STENCIL-READ-ONLY-EXT", (GLenum) GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT, "GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT");
#endif
#if defined(GL_SUBGROUP_SIZE_KHR)
defconsti(env, "GL-SUBGROUP-SIZE-KHR", (GLenum) GL_SUBGROUP_SIZE_KHR, "GL_SUBGROUP_SIZE_KHR");
#endif
#if defined(GL_SUBGROUP_SUPPORTED_STAGES_KHR)
defconsti(env, "GL-SUBGROUP-SUPPORTED-STAGES-KHR", (GLenum) GL_SUBGROUP_SUPPORTED_STAGES_KHR, "GL_SUBGROUP_SUPPORTED_STAGES_KHR");
#endif
#if defined(GL_SUBGROUP_SUPPORTED_FEATURES_KHR)
defconsti(env, "GL-SUBGROUP-SUPPORTED-FEATURES-KHR", (GLenum) GL_SUBGROUP_SUPPORTED_FEATURES_KHR, "GL_SUBGROUP_SUPPORTED_FEATURES_KHR");
#endif
#if defined(GL_SUBGROUP_QUAD_ALL_STAGES_KHR)
defconsti(env, "GL-SUBGROUP-QUAD-ALL-STAGES-KHR", (GLenum) GL_SUBGROUP_QUAD_ALL_STAGES_KHR, "GL_SUBGROUP_QUAD_ALL_STAGES_KHR");
#endif
#if defined(GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV)
defconsti(env, "GL-MAX-MESH-TOTAL-MEMORY-SIZE-NV", (GLenum) GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV, "GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV");
#endif
#if defined(GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV)
defconsti(env, "GL-MAX-TASK-TOTAL-MEMORY-SIZE-NV", (GLenum) GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV, "GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV");
#endif
#if defined(GL_MAX_MESH_OUTPUT_VERTICES_NV)
defconsti(env, "GL-MAX-MESH-OUTPUT-VERTICES-NV", (GLenum) GL_MAX_MESH_OUTPUT_VERTICES_NV, "GL_MAX_MESH_OUTPUT_VERTICES_NV");
#endif
#if defined(GL_MAX_MESH_OUTPUT_PRIMITIVES_NV)
defconsti(env, "GL-MAX-MESH-OUTPUT-PRIMITIVES-NV", (GLenum) GL_MAX_MESH_OUTPUT_PRIMITIVES_NV, "GL_MAX_MESH_OUTPUT_PRIMITIVES_NV");
#endif
#if defined(GL_MAX_TASK_OUTPUT_COUNT_NV)
defconsti(env, "GL-MAX-TASK-OUTPUT-COUNT-NV", (GLenum) GL_MAX_TASK_OUTPUT_COUNT_NV, "GL_MAX_TASK_OUTPUT_COUNT_NV");
#endif
#if defined(GL_MAX_MESH_WORK_GROUP_SIZE_NV)
defconsti(env, "GL-MAX-MESH-WORK-GROUP-SIZE-NV", (GLenum) GL_MAX_MESH_WORK_GROUP_SIZE_NV, "GL_MAX_MESH_WORK_GROUP_SIZE_NV");
#endif
#if defined(GL_MAX_TASK_WORK_GROUP_SIZE_NV)
defconsti(env, "GL-MAX-TASK-WORK-GROUP-SIZE-NV", (GLenum) GL_MAX_TASK_WORK_GROUP_SIZE_NV, "GL_MAX_TASK_WORK_GROUP_SIZE_NV");
#endif
#if defined(GL_MAX_DRAW_MESH_TASKS_COUNT_NV)
defconsti(env, "GL-MAX-DRAW-MESH-TASKS-COUNT-NV", (GLenum) GL_MAX_DRAW_MESH_TASKS_COUNT_NV, "GL_MAX_DRAW_MESH_TASKS_COUNT_NV");
#endif
#if defined(GL_MESH_WORK_GROUP_SIZE_NV)
defconsti(env, "GL-MESH-WORK-GROUP-SIZE-NV", (GLenum) GL_MESH_WORK_GROUP_SIZE_NV, "GL_MESH_WORK_GROUP_SIZE_NV");
#endif
#if defined(GL_TASK_WORK_GROUP_SIZE_NV)
defconsti(env, "GL-TASK-WORK-GROUP-SIZE-NV", (GLenum) GL_TASK_WORK_GROUP_SIZE_NV, "GL_TASK_WORK_GROUP_SIZE_NV");
#endif
#if defined(GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV)
defconsti(env, "GL-QUERY-RESOURCE-TYPE-VIDMEM-ALLOC-NV", (GLenum) GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV, "GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV");
#endif
#if defined(GL_QUERY_RESOURCE_MEMTYPE_VIDMEM_NV)
defconsti(env, "GL-QUERY-RESOURCE-MEMTYPE-VIDMEM-NV", (GLenum) GL_QUERY_RESOURCE_MEMTYPE_VIDMEM_NV, "GL_QUERY_RESOURCE_MEMTYPE_VIDMEM_NV");
#endif
#if defined(GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV)
defconsti(env, "GL-MESH-OUTPUT-PER-PRIMITIVE-GRANULARITY-NV", (GLenum) GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV, "GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV");
#endif
#if defined(GL_QUERY_RESOURCE_SYS_RESERVED_NV)
defconsti(env, "GL-QUERY-RESOURCE-SYS-RESERVED-NV", (GLenum) GL_QUERY_RESOURCE_SYS_RESERVED_NV, "GL_QUERY_RESOURCE_SYS_RESERVED_NV");
#endif
#if defined(GL_QUERY_RESOURCE_TEXTURE_NV)
defconsti(env, "GL-QUERY-RESOURCE-TEXTURE-NV", (GLenum) GL_QUERY_RESOURCE_TEXTURE_NV, "GL_QUERY_RESOURCE_TEXTURE_NV");
#endif
#if defined(GL_QUERY_RESOURCE_RENDERBUFFER_NV)
defconsti(env, "GL-QUERY-RESOURCE-RENDERBUFFER-NV", (GLenum) GL_QUERY_RESOURCE_RENDERBUFFER_NV, "GL_QUERY_RESOURCE_RENDERBUFFER_NV");
#endif
#if defined(GL_QUERY_RESOURCE_BUFFEROBJECT_NV)
defconsti(env, "GL-QUERY-RESOURCE-BUFFEROBJECT-NV", (GLenum) GL_QUERY_RESOURCE_BUFFEROBJECT_NV, "GL_QUERY_RESOURCE_BUFFEROBJECT_NV");
#endif
#if defined(GL_PER_GPU_STORAGE_NV)
defconsti(env, "GL-PER-GPU-STORAGE-NV", (GLenum) GL_PER_GPU_STORAGE_NV, "GL_PER_GPU_STORAGE_NV");
#endif
#if defined(GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV)
defconsti(env, "GL-MULTICAST-PROGRAMMABLE-SAMPLE-LOCATION-NV", (GLenum) GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV, "GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV");
#endif
#if defined(GL_UPLOAD_GPU_MASK_NVX)
defconsti(env, "GL-UPLOAD-GPU-MASK-NVX", (GLenum) GL_UPLOAD_GPU_MASK_NVX, "GL_UPLOAD_GPU_MASK_NVX");
#endif
#if defined(GL_CONSERVATIVE_RASTER_MODE_NV)
defconsti(env, "GL-CONSERVATIVE-RASTER-MODE-NV", (GLenum) GL_CONSERVATIVE_RASTER_MODE_NV, "GL_CONSERVATIVE_RASTER_MODE_NV");
#endif
#if defined(GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV)
defconsti(env, "GL-CONSERVATIVE-RASTER-MODE-POST-SNAP-NV", (GLenum) GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV, "GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV");
#endif
#if defined(GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV)
defconsti(env, "GL-CONSERVATIVE-RASTER-MODE-PRE-SNAP-TRIANGLES-NV", (GLenum) GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV, "GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV");
#endif
#if defined(GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV)
defconsti(env, "GL-CONSERVATIVE-RASTER-MODE-PRE-SNAP-NV", (GLenum) GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV, "GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV");
#endif
#if defined(GL_SHADER_BINARY_FORMAT_SPIR_V)
defconsti(env, "GL-SHADER-BINARY-FORMAT-SPIR-V", (GLenum) GL_SHADER_BINARY_FORMAT_SPIR_V, "GL_SHADER_BINARY_FORMAT_SPIR_V");
#endif
#if defined(GL_SHADER_BINARY_FORMAT_SPIR_V_ARB)
defconsti(env, "GL-SHADER-BINARY-FORMAT-SPIR-V-ARB", (GLenum) GL_SHADER_BINARY_FORMAT_SPIR_V_ARB, "GL_SHADER_BINARY_FORMAT_SPIR_V_ARB");
#endif
#if defined(GL_SPIR_V_BINARY)
defconsti(env, "GL-SPIR-V-BINARY", (GLenum) GL_SPIR_V_BINARY, "GL_SPIR_V_BINARY");
#endif
#if defined(GL_SPIR_V_BINARY_ARB)
defconsti(env, "GL-SPIR-V-BINARY-ARB", (GLenum) GL_SPIR_V_BINARY_ARB, "GL_SPIR_V_BINARY_ARB");
#endif
#if defined(GL_SPIR_V_EXTENSIONS)
defconsti(env, "GL-SPIR-V-EXTENSIONS", (GLenum) GL_SPIR_V_EXTENSIONS, "GL_SPIR_V_EXTENSIONS");
#endif
#if defined(GL_NUM_SPIR_V_EXTENSIONS)
defconsti(env, "GL-NUM-SPIR-V-EXTENSIONS", (GLenum) GL_NUM_SPIR_V_EXTENSIONS, "GL_NUM_SPIR_V_EXTENSIONS");
#endif
#if defined(GL_SCISSOR_TEST_EXCLUSIVE_NV)
defconsti(env, "GL-SCISSOR-TEST-EXCLUSIVE-NV", (GLenum) GL_SCISSOR_TEST_EXCLUSIVE_NV, "GL_SCISSOR_TEST_EXCLUSIVE_NV");
#endif
#if defined(GL_SCISSOR_BOX_EXCLUSIVE_NV)
defconsti(env, "GL-SCISSOR-BOX-EXCLUSIVE-NV", (GLenum) GL_SCISSOR_BOX_EXCLUSIVE_NV, "GL_SCISSOR_BOX_EXCLUSIVE_NV");
#endif
#if defined(GL_MAX_MESH_VIEWS_NV)
defconsti(env, "GL-MAX-MESH-VIEWS-NV", (GLenum) GL_MAX_MESH_VIEWS_NV, "GL_MAX_MESH_VIEWS_NV");
#endif
#if defined(GL_RENDER_GPU_MASK_NV)
defconsti(env, "GL-RENDER-GPU-MASK-NV", (GLenum) GL_RENDER_GPU_MASK_NV, "GL_RENDER_GPU_MASK_NV");
#endif
#if defined(GL_MESH_SHADER_NV)
defconsti(env, "GL-MESH-SHADER-NV", (GLenum) GL_MESH_SHADER_NV, "GL_MESH_SHADER_NV");
#endif
#if defined(GL_TASK_SHADER_NV)
defconsti(env, "GL-TASK-SHADER-NV", (GLenum) GL_TASK_SHADER_NV, "GL_TASK_SHADER_NV");
#endif
#if defined(GL_SHADING_RATE_IMAGE_BINDING_NV)
defconsti(env, "GL-SHADING-RATE-IMAGE-BINDING-NV", (GLenum) GL_SHADING_RATE_IMAGE_BINDING_NV, "GL_SHADING_RATE_IMAGE_BINDING_NV");
#endif
#if defined(GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV)
defconsti(env, "GL-SHADING-RATE-IMAGE-TEXEL-WIDTH-NV", (GLenum) GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV, "GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV");
#endif
#if defined(GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV)
defconsti(env, "GL-SHADING-RATE-IMAGE-TEXEL-HEIGHT-NV", (GLenum) GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV, "GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV");
#endif
#if defined(GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV)
defconsti(env, "GL-SHADING-RATE-IMAGE-PALETTE-SIZE-NV", (GLenum) GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV, "GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV");
#endif
#if defined(GL_MAX_COARSE_FRAGMENT_SAMPLES_NV)
defconsti(env, "GL-MAX-COARSE-FRAGMENT-SAMPLES-NV", (GLenum) GL_MAX_COARSE_FRAGMENT_SAMPLES_NV, "GL_MAX_COARSE_FRAGMENT_SAMPLES_NV");
#endif
#if defined(GL_SHADING_RATE_IMAGE_NV)
defconsti(env, "GL-SHADING-RATE-IMAGE-NV", (GLenum) GL_SHADING_RATE_IMAGE_NV, "GL_SHADING_RATE_IMAGE_NV");
#endif
#if defined(GL_SHADING_RATE_NO_INVOCATIONS_NV)
defconsti(env, "GL-SHADING-RATE-NO-INVOCATIONS-NV", (GLenum) GL_SHADING_RATE_NO_INVOCATIONS_NV, "GL_SHADING_RATE_NO_INVOCATIONS_NV");
#endif
#if defined(GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV)
defconsti(env, "GL-SHADING-RATE-1-INVOCATION-PER-PIXEL-NV", (GLenum) GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV, "GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV");
#endif
#if defined(GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV)
defconsti(env, "GL-SHADING-RATE-1-INVOCATION-PER-1X2-PIXELS-NV", (GLenum) GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV, "GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV");
#endif
#if defined(GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV)
defconsti(env, "GL-SHADING-RATE-1-INVOCATION-PER-2X1-PIXELS-NV", (GLenum) GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV, "GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV");
#endif
#if defined(GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV)
defconsti(env, "GL-SHADING-RATE-1-INVOCATION-PER-2X2-PIXELS-NV", (GLenum) GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV, "GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV");
#endif
#if defined(GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV)
defconsti(env, "GL-SHADING-RATE-1-INVOCATION-PER-2X4-PIXELS-NV", (GLenum) GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV, "GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV");
#endif
#if defined(GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV)
defconsti(env, "GL-SHADING-RATE-1-INVOCATION-PER-4X2-PIXELS-NV", (GLenum) GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV, "GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV");
#endif
#if defined(GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV)
defconsti(env, "GL-SHADING-RATE-1-INVOCATION-PER-4X4-PIXELS-NV", (GLenum) GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV, "GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV");
#endif
#if defined(GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV)
defconsti(env, "GL-SHADING-RATE-2-INVOCATIONS-PER-PIXEL-NV", (GLenum) GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV, "GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV");
#endif
#if defined(GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV)
defconsti(env, "GL-SHADING-RATE-4-INVOCATIONS-PER-PIXEL-NV", (GLenum) GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV, "GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV");
#endif
#if defined(GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV)
defconsti(env, "GL-SHADING-RATE-8-INVOCATIONS-PER-PIXEL-NV", (GLenum) GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV, "GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV");
#endif
#if defined(GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV)
defconsti(env, "GL-SHADING-RATE-16-INVOCATIONS-PER-PIXEL-NV", (GLenum) GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV, "GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV");
#endif
#if defined(GL_MESH_VERTICES_OUT_NV)
defconsti(env, "GL-MESH-VERTICES-OUT-NV", (GLenum) GL_MESH_VERTICES_OUT_NV, "GL_MESH_VERTICES_OUT_NV");
#endif
#if defined(GL_MESH_PRIMITIVES_OUT_NV)
defconsti(env, "GL-MESH-PRIMITIVES-OUT-NV", (GLenum) GL_MESH_PRIMITIVES_OUT_NV, "GL_MESH_PRIMITIVES_OUT_NV");
#endif
#if defined(GL_MESH_OUTPUT_TYPE_NV)
defconsti(env, "GL-MESH-OUTPUT-TYPE-NV", (GLenum) GL_MESH_OUTPUT_TYPE_NV, "GL_MESH_OUTPUT_TYPE_NV");
#endif
#if defined(GL_MESH_SUBROUTINE_NV)
defconsti(env, "GL-MESH-SUBROUTINE-NV", (GLenum) GL_MESH_SUBROUTINE_NV, "GL_MESH_SUBROUTINE_NV");
#endif
#if defined(GL_TASK_SUBROUTINE_NV)
defconsti(env, "GL-TASK-SUBROUTINE-NV", (GLenum) GL_TASK_SUBROUTINE_NV, "GL_TASK_SUBROUTINE_NV");
#endif
#if defined(GL_MESH_SUBROUTINE_UNIFORM_NV)
defconsti(env, "GL-MESH-SUBROUTINE-UNIFORM-NV", (GLenum) GL_MESH_SUBROUTINE_UNIFORM_NV, "GL_MESH_SUBROUTINE_UNIFORM_NV");
#endif
#if defined(GL_TASK_SUBROUTINE_UNIFORM_NV)
defconsti(env, "GL-TASK-SUBROUTINE-UNIFORM-NV", (GLenum) GL_TASK_SUBROUTINE_UNIFORM_NV, "GL_TASK_SUBROUTINE_UNIFORM_NV");
#endif
#if defined(GL_TEXTURE_TILING_EXT)
defconsti(env, "GL-TEXTURE-TILING-EXT", (GLenum) GL_TEXTURE_TILING_EXT, "GL_TEXTURE_TILING_EXT");
#endif
#if defined(GL_DEDICATED_MEMORY_OBJECT_EXT)
defconsti(env, "GL-DEDICATED-MEMORY-OBJECT-EXT", (GLenum) GL_DEDICATED_MEMORY_OBJECT_EXT, "GL_DEDICATED_MEMORY_OBJECT_EXT");
#endif
#if defined(GL_NUM_TILING_TYPES_EXT)
defconsti(env, "GL-NUM-TILING-TYPES-EXT", (GLenum) GL_NUM_TILING_TYPES_EXT, "GL_NUM_TILING_TYPES_EXT");
#endif
#if defined(GL_TILING_TYPES_EXT)
defconsti(env, "GL-TILING-TYPES-EXT", (GLenum) GL_TILING_TYPES_EXT, "GL_TILING_TYPES_EXT");
#endif
#if defined(GL_OPTIMAL_TILING_EXT)
defconsti(env, "GL-OPTIMAL-TILING-EXT", (GLenum) GL_OPTIMAL_TILING_EXT, "GL_OPTIMAL_TILING_EXT");
#endif
#if defined(GL_LINEAR_TILING_EXT)
defconsti(env, "GL-LINEAR-TILING-EXT", (GLenum) GL_LINEAR_TILING_EXT, "GL_LINEAR_TILING_EXT");
#endif
#if defined(GL_HANDLE_TYPE_OPAQUE_FD_EXT)
defconsti(env, "GL-HANDLE-TYPE-OPAQUE-FD-EXT", (GLenum) GL_HANDLE_TYPE_OPAQUE_FD_EXT, "GL_HANDLE_TYPE_OPAQUE_FD_EXT");
#endif
#if defined(GL_HANDLE_TYPE_OPAQUE_WIN32_EXT)
defconsti(env, "GL-HANDLE-TYPE-OPAQUE-WIN32-EXT", (GLenum) GL_HANDLE_TYPE_OPAQUE_WIN32_EXT, "GL_HANDLE_TYPE_OPAQUE_WIN32_EXT");
#endif
#if defined(GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT)
defconsti(env, "GL-HANDLE-TYPE-OPAQUE-WIN32-KMT-EXT", (GLenum) GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT, "GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT");
#endif
#if defined(GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT)
defconsti(env, "GL-HANDLE-TYPE-D3D12-TILEPOOL-EXT", (GLenum) GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT, "GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT");
#endif
#if defined(GL_HANDLE_TYPE_D3D12_RESOURCE_EXT)
defconsti(env, "GL-HANDLE-TYPE-D3D12-RESOURCE-EXT", (GLenum) GL_HANDLE_TYPE_D3D12_RESOURCE_EXT, "GL_HANDLE_TYPE_D3D12_RESOURCE_EXT");
#endif
#if defined(GL_HANDLE_TYPE_D3D11_IMAGE_EXT)
defconsti(env, "GL-HANDLE-TYPE-D3D11-IMAGE-EXT", (GLenum) GL_HANDLE_TYPE_D3D11_IMAGE_EXT, "GL_HANDLE_TYPE_D3D11_IMAGE_EXT");
#endif
#if defined(GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT)
defconsti(env, "GL-HANDLE-TYPE-D3D11-IMAGE-KMT-EXT", (GLenum) GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT, "GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT");
#endif
#if defined(GL_LAYOUT_GENERAL_EXT)
defconsti(env, "GL-LAYOUT-GENERAL-EXT", (GLenum) GL_LAYOUT_GENERAL_EXT, "GL_LAYOUT_GENERAL_EXT");
#endif
#if defined(GL_LAYOUT_COLOR_ATTACHMENT_EXT)
defconsti(env, "GL-LAYOUT-COLOR-ATTACHMENT-EXT", (GLenum) GL_LAYOUT_COLOR_ATTACHMENT_EXT, "GL_LAYOUT_COLOR_ATTACHMENT_EXT");
#endif
#if defined(GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT)
defconsti(env, "GL-LAYOUT-DEPTH-STENCIL-ATTACHMENT-EXT", (GLenum) GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT, "GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT");
#endif
#if defined(GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT)
defconsti(env, "GL-LAYOUT-DEPTH-STENCIL-READ-ONLY-EXT", (GLenum) GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT, "GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT");
#endif
#if defined(GL_LAYOUT_SHADER_READ_ONLY_EXT)
defconsti(env, "GL-LAYOUT-SHADER-READ-ONLY-EXT", (GLenum) GL_LAYOUT_SHADER_READ_ONLY_EXT, "GL_LAYOUT_SHADER_READ_ONLY_EXT");
#endif
#if defined(GL_LAYOUT_TRANSFER_SRC_EXT)
defconsti(env, "GL-LAYOUT-TRANSFER-SRC-EXT", (GLenum) GL_LAYOUT_TRANSFER_SRC_EXT, "GL_LAYOUT_TRANSFER_SRC_EXT");
#endif
#if defined(GL_LAYOUT_TRANSFER_DST_EXT)
defconsti(env, "GL-LAYOUT-TRANSFER-DST-EXT", (GLenum) GL_LAYOUT_TRANSFER_DST_EXT, "GL_LAYOUT_TRANSFER_DST_EXT");
#endif
#if defined(GL_HANDLE_TYPE_D3D12_FENCE_EXT)
defconsti(env, "GL-HANDLE-TYPE-D3D12-FENCE-EXT", (GLenum) GL_HANDLE_TYPE_D3D12_FENCE_EXT, "GL_HANDLE_TYPE_D3D12_FENCE_EXT");
#endif
#if defined(GL_D3D12_FENCE_VALUE_EXT)
defconsti(env, "GL-D3D12-FENCE-VALUE-EXT", (GLenum) GL_D3D12_FENCE_VALUE_EXT, "GL_D3D12_FENCE_VALUE_EXT");
#endif
#if defined(GL_TIMELINE_SEMAPHORE_VALUE_NV)
defconsti(env, "GL-TIMELINE-SEMAPHORE-VALUE-NV", (GLenum) GL_TIMELINE_SEMAPHORE_VALUE_NV, "GL_TIMELINE_SEMAPHORE_VALUE_NV");
#endif
#if defined(GL_NUM_DEVICE_UUIDS_EXT)
defconsti(env, "GL-NUM-DEVICE-UUIDS-EXT", (GLenum) GL_NUM_DEVICE_UUIDS_EXT, "GL_NUM_DEVICE_UUIDS_EXT");
#endif
#if defined(GL_DEVICE_UUID_EXT)
defconsti(env, "GL-DEVICE-UUID-EXT", (GLenum) GL_DEVICE_UUID_EXT, "GL_DEVICE_UUID_EXT");
#endif
#if defined(GL_DRIVER_UUID_EXT)
defconsti(env, "GL-DRIVER-UUID-EXT", (GLenum) GL_DRIVER_UUID_EXT, "GL_DRIVER_UUID_EXT");
#endif
#if defined(GL_DEVICE_LUID_EXT)
defconsti(env, "GL-DEVICE-LUID-EXT", (GLenum) GL_DEVICE_LUID_EXT, "GL_DEVICE_LUID_EXT");
#endif
#if defined(GL_DEVICE_NODE_MASK_EXT)
defconsti(env, "GL-DEVICE-NODE-MASK-EXT", (GLenum) GL_DEVICE_NODE_MASK_EXT, "GL_DEVICE_NODE_MASK_EXT");
#endif
#if defined(GL_PROTECTED_MEMORY_OBJECT_EXT)
defconsti(env, "GL-PROTECTED-MEMORY-OBJECT-EXT", (GLenum) GL_PROTECTED_MEMORY_OBJECT_EXT, "GL_PROTECTED_MEMORY_OBJECT_EXT");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-MESH-SHADER-NV", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV, "GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-TASK-SHADER-NV", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV, "GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-MESH-SHADER-NV", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-TASK-SHADER-NV", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV");
#endif
#if defined(GL_REFERENCED_BY_MESH_SHADER_NV)
defconsti(env, "GL-REFERENCED-BY-MESH-SHADER-NV", (GLenum) GL_REFERENCED_BY_MESH_SHADER_NV, "GL_REFERENCED_BY_MESH_SHADER_NV");
#endif
#if defined(GL_REFERENCED_BY_TASK_SHADER_NV)
defconsti(env, "GL-REFERENCED-BY-TASK-SHADER-NV", (GLenum) GL_REFERENCED_BY_TASK_SHADER_NV, "GL_REFERENCED_BY_TASK_SHADER_NV");
#endif
#if defined(GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV)
defconsti(env, "GL-MAX-MESH-WORK-GROUP-INVOCATIONS-NV", (GLenum) GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV, "GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV");
#endif
#if defined(GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV)
defconsti(env, "GL-MAX-TASK-WORK-GROUP-INVOCATIONS-NV", (GLenum) GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV, "GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV");
#endif
#if defined(GL_ATTACHED_MEMORY_OBJECT_NV)
defconsti(env, "GL-ATTACHED-MEMORY-OBJECT-NV", (GLenum) GL_ATTACHED_MEMORY_OBJECT_NV, "GL_ATTACHED_MEMORY_OBJECT_NV");
#endif
#if defined(GL_ATTACHED_MEMORY_OFFSET_NV)
defconsti(env, "GL-ATTACHED-MEMORY-OFFSET-NV", (GLenum) GL_ATTACHED_MEMORY_OFFSET_NV, "GL_ATTACHED_MEMORY_OFFSET_NV");
#endif
#if defined(GL_MEMORY_ATTACHABLE_ALIGNMENT_NV)
defconsti(env, "GL-MEMORY-ATTACHABLE-ALIGNMENT-NV", (GLenum) GL_MEMORY_ATTACHABLE_ALIGNMENT_NV, "GL_MEMORY_ATTACHABLE_ALIGNMENT_NV");
#endif
#if defined(GL_MEMORY_ATTACHABLE_SIZE_NV)
defconsti(env, "GL-MEMORY-ATTACHABLE-SIZE-NV", (GLenum) GL_MEMORY_ATTACHABLE_SIZE_NV, "GL_MEMORY_ATTACHABLE_SIZE_NV");
#endif
#if defined(GL_MEMORY_ATTACHABLE_NV)
defconsti(env, "GL-MEMORY-ATTACHABLE-NV", (GLenum) GL_MEMORY_ATTACHABLE_NV, "GL_MEMORY_ATTACHABLE_NV");
#endif
#if defined(GL_DETACHED_MEMORY_INCARNATION_NV)
defconsti(env, "GL-DETACHED-MEMORY-INCARNATION-NV", (GLenum) GL_DETACHED_MEMORY_INCARNATION_NV, "GL_DETACHED_MEMORY_INCARNATION_NV");
#endif
#if defined(GL_DETACHED_TEXTURES_NV)
defconsti(env, "GL-DETACHED-TEXTURES-NV", (GLenum) GL_DETACHED_TEXTURES_NV, "GL_DETACHED_TEXTURES_NV");
#endif
#if defined(GL_DETACHED_BUFFERS_NV)
defconsti(env, "GL-DETACHED-BUFFERS-NV", (GLenum) GL_DETACHED_BUFFERS_NV, "GL_DETACHED_BUFFERS_NV");
#endif
#if defined(GL_MAX_DETACHED_TEXTURES_NV)
defconsti(env, "GL-MAX-DETACHED-TEXTURES-NV", (GLenum) GL_MAX_DETACHED_TEXTURES_NV, "GL_MAX_DETACHED_TEXTURES_NV");
#endif
#if defined(GL_MAX_DETACHED_BUFFERS_NV)
defconsti(env, "GL-MAX-DETACHED-BUFFERS-NV", (GLenum) GL_MAX_DETACHED_BUFFERS_NV, "GL_MAX_DETACHED_BUFFERS_NV");
#endif
#if defined(GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV)
defconsti(env, "GL-SHADING-RATE-SAMPLE-ORDER-DEFAULT-NV", (GLenum) GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV, "GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV");
#endif
#if defined(GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV)
defconsti(env, "GL-SHADING-RATE-SAMPLE-ORDER-PIXEL-MAJOR-NV", (GLenum) GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV, "GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV");
#endif
#if defined(GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV)
defconsti(env, "GL-SHADING-RATE-SAMPLE-ORDER-SAMPLE-MAJOR-NV", (GLenum) GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV, "GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV");
#endif
#if defined(GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV)
defconsti(env, "GL-SHADING-RATE-IMAGE-PER-PRIMITIVE-NV", (GLenum) GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV, "GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV");
#endif
#if defined(GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV)
defconsti(env, "GL-SHADING-RATE-IMAGE-PALETTE-COUNT-NV", (GLenum) GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV, "GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV");
#endif
#if defined(GL_SEMAPHORE_TYPE_NV)
defconsti(env, "GL-SEMAPHORE-TYPE-NV", (GLenum) GL_SEMAPHORE_TYPE_NV, "GL_SEMAPHORE_TYPE_NV");
#endif
#if defined(GL_SEMAPHORE_TYPE_BINARY_NV)
defconsti(env, "GL-SEMAPHORE-TYPE-BINARY-NV", (GLenum) GL_SEMAPHORE_TYPE_BINARY_NV, "GL_SEMAPHORE_TYPE_BINARY_NV");
#endif
#if defined(GL_SEMAPHORE_TYPE_TIMELINE_NV)
defconsti(env, "GL-SEMAPHORE-TYPE-TIMELINE-NV", (GLenum) GL_SEMAPHORE_TYPE_TIMELINE_NV, "GL_SEMAPHORE_TYPE_TIMELINE_NV");
#endif
#if defined(GL_MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV)
defconsti(env, "GL-MAX-TIMELINE-SEMAPHORE-VALUE-DIFFERENCE-NV", (GLenum) GL_MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV, "GL_MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-NUM-VIEWS-OVR", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR");
#endif
#if defined(GL_MAX_VIEWS_OVR)
defconsti(env, "GL-MAX-VIEWS-OVR", (GLenum) GL_MAX_VIEWS_OVR, "GL_MAX_VIEWS_OVR");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-BASE-VIEW-INDEX-OVR", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-VIEW-TARGETS-OVR", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR, "GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR");
#endif
#if defined(GL_GS_SHADER_BINARY_MTK)
defconsti(env, "GL-GS-SHADER-BINARY-MTK", (GLenum) GL_GS_SHADER_BINARY_MTK, "GL_GS_SHADER_BINARY_MTK");
#endif
#if defined(GL_GS_PROGRAM_BINARY_MTK)
defconsti(env, "GL-GS-PROGRAM-BINARY-MTK", (GLenum) GL_GS_PROGRAM_BINARY_MTK, "GL_GS_PROGRAM_BINARY_MTK");
#endif
#if defined(GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_FAST_SIZE_EXT)
defconsti(env, "GL-MAX-SHADER-COMBINED-LOCAL-STORAGE-FAST-SIZE-EXT", (GLenum) GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_FAST_SIZE_EXT, "GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_FAST_SIZE_EXT");
#endif
#if defined(GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT)
defconsti(env, "GL-MAX-SHADER-COMBINED-LOCAL-STORAGE-SIZE-EXT", (GLenum) GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT, "GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-INSUFFICIENT-SHADER-COMBINED-LOCAL-STORAGE-EXT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT, "GL_FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT");
#endif
#if defined(GL_TEXTURE_FOVEATED_CUTOFF_DENSITY_QCOM)
defconsti(env, "GL-TEXTURE-FOVEATED-CUTOFF-DENSITY-QCOM", (GLenum) GL_TEXTURE_FOVEATED_CUTOFF_DENSITY_QCOM, "GL_TEXTURE_FOVEATED_CUTOFF_DENSITY_QCOM");
#endif
#if defined(GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM)
defconsti(env, "GL-FRAMEBUFFER-FETCH-NONCOHERENT-QCOM", (GLenum) GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM, "GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM");
#endif
#if defined(GL_VALIDATE_SHADER_BINARY_QCOM)
defconsti(env, "GL-VALIDATE-SHADER-BINARY-QCOM", (GLenum) GL_VALIDATE_SHADER_BINARY_QCOM, "GL_VALIDATE_SHADER_BINARY_QCOM");
#endif
#if defined(GL_SHADING_RATE_QCOM)
defconsti(env, "GL-SHADING-RATE-QCOM", (GLenum) GL_SHADING_RATE_QCOM, "GL_SHADING_RATE_QCOM");
#endif
#if defined(GL_SHADING_RATE_PRESERVE_ASPECT_RATIO_QCOM)
defconsti(env, "GL-SHADING-RATE-PRESERVE-ASPECT-RATIO-QCOM", (GLenum) GL_SHADING_RATE_PRESERVE_ASPECT_RATIO_QCOM, "GL_SHADING_RATE_PRESERVE_ASPECT_RATIO_QCOM");
#endif
#if defined(GL_SHADING_RATE_1X1_PIXELS_QCOM)
defconsti(env, "GL-SHADING-RATE-1X1-PIXELS-QCOM", (GLenum) GL_SHADING_RATE_1X1_PIXELS_QCOM, "GL_SHADING_RATE_1X1_PIXELS_QCOM");
#endif
#if defined(GL_SHADING_RATE_1X2_PIXELS_QCOM)
defconsti(env, "GL-SHADING-RATE-1X2-PIXELS-QCOM", (GLenum) GL_SHADING_RATE_1X2_PIXELS_QCOM, "GL_SHADING_RATE_1X2_PIXELS_QCOM");
#endif
#if defined(GL_SHADING_RATE_2X1_PIXELS_QCOM)
defconsti(env, "GL-SHADING-RATE-2X1-PIXELS-QCOM", (GLenum) GL_SHADING_RATE_2X1_PIXELS_QCOM, "GL_SHADING_RATE_2X1_PIXELS_QCOM");
#endif
#if defined(GL_SHADING_RATE_2X2_PIXELS_QCOM)
defconsti(env, "GL-SHADING-RATE-2X2-PIXELS-QCOM", (GLenum) GL_SHADING_RATE_2X2_PIXELS_QCOM, "GL_SHADING_RATE_2X2_PIXELS_QCOM");
#endif
#if defined(GL_SHADING_RATE_1X4_PIXELS_QCOM)
defconsti(env, "GL-SHADING-RATE-1X4-PIXELS-QCOM", (GLenum) GL_SHADING_RATE_1X4_PIXELS_QCOM, "GL_SHADING_RATE_1X4_PIXELS_QCOM");
#endif
#if defined(GL_SHADING_RATE_4X1_PIXELS_QCOM)
defconsti(env, "GL-SHADING-RATE-4X1-PIXELS-QCOM", (GLenum) GL_SHADING_RATE_4X1_PIXELS_QCOM, "GL_SHADING_RATE_4X1_PIXELS_QCOM");
#endif
#if defined(GL_SHADING_RATE_4X2_PIXELS_QCOM)
defconsti(env, "GL-SHADING-RATE-4X2-PIXELS-QCOM", (GLenum) GL_SHADING_RATE_4X2_PIXELS_QCOM, "GL_SHADING_RATE_4X2_PIXELS_QCOM");
#endif
#if defined(GL_SHADING_RATE_2X4_PIXELS_QCOM)
defconsti(env, "GL-SHADING-RATE-2X4-PIXELS-QCOM", (GLenum) GL_SHADING_RATE_2X4_PIXELS_QCOM, "GL_SHADING_RATE_2X4_PIXELS_QCOM");
#endif
#if defined(GL_SHADING_RATE_4X4_PIXELS_QCOM)
defconsti(env, "GL-SHADING-RATE-4X4-PIXELS-QCOM", (GLenum) GL_SHADING_RATE_4X4_PIXELS_QCOM, "GL_SHADING_RATE_4X4_PIXELS_QCOM");
#endif
#if defined(GL_RASTER_POSITION_UNCLIPPED_IBM)
defconsti(env, "GL-RASTER-POSITION-UNCLIPPED-IBM", (GLenum) GL_RASTER_POSITION_UNCLIPPED_IBM, "GL_RASTER_POSITION_UNCLIPPED_IBM");
#endif
#if defined(GL_CULL_VERTEX_IBM)
defconsti(env, "GL-CULL-VERTEX-IBM", (GLenum) GL_CULL_VERTEX_IBM, "GL_CULL_VERTEX_IBM");
#endif
#if defined(GL_ALL_STATIC_DATA_IBM)
defconsti(env, "GL-ALL-STATIC-DATA-IBM", (GLenum) GL_ALL_STATIC_DATA_IBM, "GL_ALL_STATIC_DATA_IBM");
#endif
#if defined(GL_STATIC_VERTEX_ARRAY_IBM)
defconsti(env, "GL-STATIC-VERTEX-ARRAY-IBM", (GLenum) GL_STATIC_VERTEX_ARRAY_IBM, "GL_STATIC_VERTEX_ARRAY_IBM");
#endif
#if defined(GL_VERTEX_ARRAY_LIST_IBM)
defconsti(env, "GL-VERTEX-ARRAY-LIST-IBM", (GLenum) GL_VERTEX_ARRAY_LIST_IBM, "GL_VERTEX_ARRAY_LIST_IBM");
#endif
#if defined(GL_NORMAL_ARRAY_LIST_IBM)
defconsti(env, "GL-NORMAL-ARRAY-LIST-IBM", (GLenum) GL_NORMAL_ARRAY_LIST_IBM, "GL_NORMAL_ARRAY_LIST_IBM");
#endif
#if defined(GL_COLOR_ARRAY_LIST_IBM)
defconsti(env, "GL-COLOR-ARRAY-LIST-IBM", (GLenum) GL_COLOR_ARRAY_LIST_IBM, "GL_COLOR_ARRAY_LIST_IBM");
#endif
#if defined(GL_INDEX_ARRAY_LIST_IBM)
defconsti(env, "GL-INDEX-ARRAY-LIST-IBM", (GLenum) GL_INDEX_ARRAY_LIST_IBM, "GL_INDEX_ARRAY_LIST_IBM");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_LIST_IBM)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-LIST-IBM", (GLenum) GL_TEXTURE_COORD_ARRAY_LIST_IBM, "GL_TEXTURE_COORD_ARRAY_LIST_IBM");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_LIST_IBM)
defconsti(env, "GL-EDGE-FLAG-ARRAY-LIST-IBM", (GLenum) GL_EDGE_FLAG_ARRAY_LIST_IBM, "GL_EDGE_FLAG_ARRAY_LIST_IBM");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY_LIST_IBM)
defconsti(env, "GL-FOG-COORDINATE-ARRAY-LIST-IBM", (GLenum) GL_FOG_COORDINATE_ARRAY_LIST_IBM, "GL_FOG_COORDINATE_ARRAY_LIST_IBM");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_LIST_IBM)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-LIST-IBM", (GLenum) GL_SECONDARY_COLOR_ARRAY_LIST_IBM, "GL_SECONDARY_COLOR_ARRAY_LIST_IBM");
#endif
#if defined(GL_VERTEX_ARRAY_LIST_STRIDE_IBM)
defconsti(env, "GL-VERTEX-ARRAY-LIST-STRIDE-IBM", (GLenum) GL_VERTEX_ARRAY_LIST_STRIDE_IBM, "GL_VERTEX_ARRAY_LIST_STRIDE_IBM");
#endif
#if defined(GL_NORMAL_ARRAY_LIST_STRIDE_IBM)
defconsti(env, "GL-NORMAL-ARRAY-LIST-STRIDE-IBM", (GLenum) GL_NORMAL_ARRAY_LIST_STRIDE_IBM, "GL_NORMAL_ARRAY_LIST_STRIDE_IBM");
#endif
#if defined(GL_COLOR_ARRAY_LIST_STRIDE_IBM)
defconsti(env, "GL-COLOR-ARRAY-LIST-STRIDE-IBM", (GLenum) GL_COLOR_ARRAY_LIST_STRIDE_IBM, "GL_COLOR_ARRAY_LIST_STRIDE_IBM");
#endif
#if defined(GL_INDEX_ARRAY_LIST_STRIDE_IBM)
defconsti(env, "GL-INDEX-ARRAY-LIST-STRIDE-IBM", (GLenum) GL_INDEX_ARRAY_LIST_STRIDE_IBM, "GL_INDEX_ARRAY_LIST_STRIDE_IBM");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-LIST-STRIDE-IBM", (GLenum) GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM, "GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM)
defconsti(env, "GL-EDGE-FLAG-ARRAY-LIST-STRIDE-IBM", (GLenum) GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM, "GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM)
defconsti(env, "GL-FOG-COORDINATE-ARRAY-LIST-STRIDE-IBM", (GLenum) GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM, "GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-LIST-STRIDE-IBM", (GLenum) GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM, "GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM");
#endif
#if defined(GL_PREFER_DOUBLEBUFFER_HINT_PGI)
defconsti(env, "GL-PREFER-DOUBLEBUFFER-HINT-PGI", (GLenum) GL_PREFER_DOUBLEBUFFER_HINT_PGI, "GL_PREFER_DOUBLEBUFFER_HINT_PGI");
#endif
#if defined(GL_CONSERVE_MEMORY_HINT_PGI)
defconsti(env, "GL-CONSERVE-MEMORY-HINT-PGI", (GLenum) GL_CONSERVE_MEMORY_HINT_PGI, "GL_CONSERVE_MEMORY_HINT_PGI");
#endif
#if defined(GL_RECLAIM_MEMORY_HINT_PGI)
defconsti(env, "GL-RECLAIM-MEMORY-HINT-PGI", (GLenum) GL_RECLAIM_MEMORY_HINT_PGI, "GL_RECLAIM_MEMORY_HINT_PGI");
#endif
#if defined(GL_NATIVE_GRAPHICS_HANDLE_PGI)
defconsti(env, "GL-NATIVE-GRAPHICS-HANDLE-PGI", (GLenum) GL_NATIVE_GRAPHICS_HANDLE_PGI, "GL_NATIVE_GRAPHICS_HANDLE_PGI");
#endif
#if defined(GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI)
defconsti(env, "GL-NATIVE-GRAPHICS-BEGIN-HINT-PGI", (GLenum) GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI, "GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI");
#endif
#if defined(GL_NATIVE_GRAPHICS_END_HINT_PGI)
defconsti(env, "GL-NATIVE-GRAPHICS-END-HINT-PGI", (GLenum) GL_NATIVE_GRAPHICS_END_HINT_PGI, "GL_NATIVE_GRAPHICS_END_HINT_PGI");
#endif
#if defined(GL_ALWAYS_FAST_HINT_PGI)
defconsti(env, "GL-ALWAYS-FAST-HINT-PGI", (GLenum) GL_ALWAYS_FAST_HINT_PGI, "GL_ALWAYS_FAST_HINT_PGI");
#endif
#if defined(GL_ALWAYS_SOFT_HINT_PGI)
defconsti(env, "GL-ALWAYS-SOFT-HINT-PGI", (GLenum) GL_ALWAYS_SOFT_HINT_PGI, "GL_ALWAYS_SOFT_HINT_PGI");
#endif
#if defined(GL_ALLOW_DRAW_OBJ_HINT_PGI)
defconsti(env, "GL-ALLOW-DRAW-OBJ-HINT-PGI", (GLenum) GL_ALLOW_DRAW_OBJ_HINT_PGI, "GL_ALLOW_DRAW_OBJ_HINT_PGI");
#endif
#if defined(GL_ALLOW_DRAW_WIN_HINT_PGI)
defconsti(env, "GL-ALLOW-DRAW-WIN-HINT-PGI", (GLenum) GL_ALLOW_DRAW_WIN_HINT_PGI, "GL_ALLOW_DRAW_WIN_HINT_PGI");
#endif
#if defined(GL_ALLOW_DRAW_FRG_HINT_PGI)
defconsti(env, "GL-ALLOW-DRAW-FRG-HINT-PGI", (GLenum) GL_ALLOW_DRAW_FRG_HINT_PGI, "GL_ALLOW_DRAW_FRG_HINT_PGI");
#endif
#if defined(GL_ALLOW_DRAW_MEM_HINT_PGI)
defconsti(env, "GL-ALLOW-DRAW-MEM-HINT-PGI", (GLenum) GL_ALLOW_DRAW_MEM_HINT_PGI, "GL_ALLOW_DRAW_MEM_HINT_PGI");
#endif
#if defined(GL_STRICT_DEPTHFUNC_HINT_PGI)
defconsti(env, "GL-STRICT-DEPTHFUNC-HINT-PGI", (GLenum) GL_STRICT_DEPTHFUNC_HINT_PGI, "GL_STRICT_DEPTHFUNC_HINT_PGI");
#endif
#if defined(GL_STRICT_LIGHTING_HINT_PGI)
defconsti(env, "GL-STRICT-LIGHTING-HINT-PGI", (GLenum) GL_STRICT_LIGHTING_HINT_PGI, "GL_STRICT_LIGHTING_HINT_PGI");
#endif
#if defined(GL_STRICT_SCISSOR_HINT_PGI)
defconsti(env, "GL-STRICT-SCISSOR-HINT-PGI", (GLenum) GL_STRICT_SCISSOR_HINT_PGI, "GL_STRICT_SCISSOR_HINT_PGI");
#endif
#if defined(GL_FULL_STIPPLE_HINT_PGI)
defconsti(env, "GL-FULL-STIPPLE-HINT-PGI", (GLenum) GL_FULL_STIPPLE_HINT_PGI, "GL_FULL_STIPPLE_HINT_PGI");
#endif
#if defined(GL_CLIP_NEAR_HINT_PGI)
defconsti(env, "GL-CLIP-NEAR-HINT-PGI", (GLenum) GL_CLIP_NEAR_HINT_PGI, "GL_CLIP_NEAR_HINT_PGI");
#endif
#if defined(GL_CLIP_FAR_HINT_PGI)
defconsti(env, "GL-CLIP-FAR-HINT-PGI", (GLenum) GL_CLIP_FAR_HINT_PGI, "GL_CLIP_FAR_HINT_PGI");
#endif
#if defined(GL_WIDE_LINE_HINT_PGI)
defconsti(env, "GL-WIDE-LINE-HINT-PGI", (GLenum) GL_WIDE_LINE_HINT_PGI, "GL_WIDE_LINE_HINT_PGI");
#endif
#if defined(GL_BACK_NORMALS_HINT_PGI)
defconsti(env, "GL-BACK-NORMALS-HINT-PGI", (GLenum) GL_BACK_NORMALS_HINT_PGI, "GL_BACK_NORMALS_HINT_PGI");
#endif
#if defined(GL_VERTEX_DATA_HINT_PGI)
defconsti(env, "GL-VERTEX-DATA-HINT-PGI", (GLenum) GL_VERTEX_DATA_HINT_PGI, "GL_VERTEX_DATA_HINT_PGI");
#endif
#if defined(GL_VERTEX_CONSISTENT_HINT_PGI)
defconsti(env, "GL-VERTEX-CONSISTENT-HINT-PGI", (GLenum) GL_VERTEX_CONSISTENT_HINT_PGI, "GL_VERTEX_CONSISTENT_HINT_PGI");
#endif
#if defined(GL_MATERIAL_SIDE_HINT_PGI)
defconsti(env, "GL-MATERIAL-SIDE-HINT-PGI", (GLenum) GL_MATERIAL_SIDE_HINT_PGI, "GL_MATERIAL_SIDE_HINT_PGI");
#endif
#if defined(GL_MAX_VERTEX_HINT_PGI)
defconsti(env, "GL-MAX-VERTEX-HINT-PGI", (GLenum) GL_MAX_VERTEX_HINT_PGI, "GL_MAX_VERTEX_HINT_PGI");
#endif
#if defined(GL_DEPTH_BUFFER_BIT)
defconsti(env, "GL-DEPTH-BUFFER-BIT", (GLenum) GL_DEPTH_BUFFER_BIT, "GL_DEPTH_BUFFER_BIT");
#endif
#if defined(GL_STENCIL_BUFFER_BIT)
defconsti(env, "GL-STENCIL-BUFFER-BIT", (GLenum) GL_STENCIL_BUFFER_BIT, "GL_STENCIL_BUFFER_BIT");
#endif
#if defined(GL_COLOR_BUFFER_BIT)
defconsti(env, "GL-COLOR-BUFFER-BIT", (GLenum) GL_COLOR_BUFFER_BIT, "GL_COLOR_BUFFER_BIT");
#endif
#if defined(GL_FALSE)
defconsti(env, "GL-FALSE", (GLenum) GL_FALSE, "GL_FALSE");
#endif
#if defined(GL_TRUE)
defconsti(env, "GL-TRUE", (GLenum) GL_TRUE, "GL_TRUE");
#endif
#if defined(GL_POINTS)
defconsti(env, "GL-POINTS", (GLenum) GL_POINTS, "GL_POINTS");
#endif
#if defined(GL_LINES)
defconsti(env, "GL-LINES", (GLenum) GL_LINES, "GL_LINES");
#endif
#if defined(GL_LINE_LOOP)
defconsti(env, "GL-LINE-LOOP", (GLenum) GL_LINE_LOOP, "GL_LINE_LOOP");
#endif
#if defined(GL_LINE_STRIP)
defconsti(env, "GL-LINE-STRIP", (GLenum) GL_LINE_STRIP, "GL_LINE_STRIP");
#endif
#if defined(GL_TRIANGLES)
defconsti(env, "GL-TRIANGLES", (GLenum) GL_TRIANGLES, "GL_TRIANGLES");
#endif
#if defined(GL_TRIANGLE_STRIP)
defconsti(env, "GL-TRIANGLE-STRIP", (GLenum) GL_TRIANGLE_STRIP, "GL_TRIANGLE_STRIP");
#endif
#if defined(GL_TRIANGLE_FAN)
defconsti(env, "GL-TRIANGLE-FAN", (GLenum) GL_TRIANGLE_FAN, "GL_TRIANGLE_FAN");
#endif
#if defined(GL_QUADS)
defconsti(env, "GL-QUADS", (GLenum) GL_QUADS, "GL_QUADS");
#endif
#if defined(GL_NEVER)
defconsti(env, "GL-NEVER", (GLenum) GL_NEVER, "GL_NEVER");
#endif
#if defined(GL_LESS)
defconsti(env, "GL-LESS", (GLenum) GL_LESS, "GL_LESS");
#endif
#if defined(GL_EQUAL)
defconsti(env, "GL-EQUAL", (GLenum) GL_EQUAL, "GL_EQUAL");
#endif
#if defined(GL_LEQUAL)
defconsti(env, "GL-LEQUAL", (GLenum) GL_LEQUAL, "GL_LEQUAL");
#endif
#if defined(GL_GREATER)
defconsti(env, "GL-GREATER", (GLenum) GL_GREATER, "GL_GREATER");
#endif
#if defined(GL_NOTEQUAL)
defconsti(env, "GL-NOTEQUAL", (GLenum) GL_NOTEQUAL, "GL_NOTEQUAL");
#endif
#if defined(GL_GEQUAL)
defconsti(env, "GL-GEQUAL", (GLenum) GL_GEQUAL, "GL_GEQUAL");
#endif
#if defined(GL_ALWAYS)
defconsti(env, "GL-ALWAYS", (GLenum) GL_ALWAYS, "GL_ALWAYS");
#endif
#if defined(GL_ZERO)
defconsti(env, "GL-ZERO", (GLenum) GL_ZERO, "GL_ZERO");
#endif
#if defined(GL_ONE)
defconsti(env, "GL-ONE", (GLenum) GL_ONE, "GL_ONE");
#endif
#if defined(GL_SRC_COLOR)
defconsti(env, "GL-SRC-COLOR", (GLenum) GL_SRC_COLOR, "GL_SRC_COLOR");
#endif
#if defined(GL_ONE_MINUS_SRC_COLOR)
defconsti(env, "GL-ONE-MINUS-SRC-COLOR", (GLenum) GL_ONE_MINUS_SRC_COLOR, "GL_ONE_MINUS_SRC_COLOR");
#endif
#if defined(GL_SRC_ALPHA)
defconsti(env, "GL-SRC-ALPHA", (GLenum) GL_SRC_ALPHA, "GL_SRC_ALPHA");
#endif
#if defined(GL_ONE_MINUS_SRC_ALPHA)
defconsti(env, "GL-ONE-MINUS-SRC-ALPHA", (GLenum) GL_ONE_MINUS_SRC_ALPHA, "GL_ONE_MINUS_SRC_ALPHA");
#endif
#if defined(GL_DST_ALPHA)
defconsti(env, "GL-DST-ALPHA", (GLenum) GL_DST_ALPHA, "GL_DST_ALPHA");
#endif
#if defined(GL_ONE_MINUS_DST_ALPHA)
defconsti(env, "GL-ONE-MINUS-DST-ALPHA", (GLenum) GL_ONE_MINUS_DST_ALPHA, "GL_ONE_MINUS_DST_ALPHA");
#endif
#if defined(GL_DST_COLOR)
defconsti(env, "GL-DST-COLOR", (GLenum) GL_DST_COLOR, "GL_DST_COLOR");
#endif
#if defined(GL_ONE_MINUS_DST_COLOR)
defconsti(env, "GL-ONE-MINUS-DST-COLOR", (GLenum) GL_ONE_MINUS_DST_COLOR, "GL_ONE_MINUS_DST_COLOR");
#endif
#if defined(GL_SRC_ALPHA_SATURATE)
defconsti(env, "GL-SRC-ALPHA-SATURATE", (GLenum) GL_SRC_ALPHA_SATURATE, "GL_SRC_ALPHA_SATURATE");
#endif
#if defined(GL_NONE)
defconsti(env, "GL-NONE", (GLenum) GL_NONE, "GL_NONE");
#endif
#if defined(GL_FRONT_LEFT)
defconsti(env, "GL-FRONT-LEFT", (GLenum) GL_FRONT_LEFT, "GL_FRONT_LEFT");
#endif
#if defined(GL_FRONT_RIGHT)
defconsti(env, "GL-FRONT-RIGHT", (GLenum) GL_FRONT_RIGHT, "GL_FRONT_RIGHT");
#endif
#if defined(GL_BACK_LEFT)
defconsti(env, "GL-BACK-LEFT", (GLenum) GL_BACK_LEFT, "GL_BACK_LEFT");
#endif
#if defined(GL_BACK_RIGHT)
defconsti(env, "GL-BACK-RIGHT", (GLenum) GL_BACK_RIGHT, "GL_BACK_RIGHT");
#endif
#if defined(GL_FRONT)
defconsti(env, "GL-FRONT", (GLenum) GL_FRONT, "GL_FRONT");
#endif
#if defined(GL_BACK)
defconsti(env, "GL-BACK", (GLenum) GL_BACK, "GL_BACK");
#endif
#if defined(GL_LEFT)
defconsti(env, "GL-LEFT", (GLenum) GL_LEFT, "GL_LEFT");
#endif
#if defined(GL_RIGHT)
defconsti(env, "GL-RIGHT", (GLenum) GL_RIGHT, "GL_RIGHT");
#endif
#if defined(GL_FRONT_AND_BACK)
defconsti(env, "GL-FRONT-AND-BACK", (GLenum) GL_FRONT_AND_BACK, "GL_FRONT_AND_BACK");
#endif
#if defined(GL_NO_ERROR)
defconsti(env, "GL-NO-ERROR", (GLenum) GL_NO_ERROR, "GL_NO_ERROR");
#endif
#if defined(GL_INVALID_ENUM)
defconsti(env, "GL-INVALID-ENUM", (GLenum) GL_INVALID_ENUM, "GL_INVALID_ENUM");
#endif
#if defined(GL_INVALID_VALUE)
defconsti(env, "GL-INVALID-VALUE", (GLenum) GL_INVALID_VALUE, "GL_INVALID_VALUE");
#endif
#if defined(GL_INVALID_OPERATION)
defconsti(env, "GL-INVALID-OPERATION", (GLenum) GL_INVALID_OPERATION, "GL_INVALID_OPERATION");
#endif
#if defined(GL_OUT_OF_MEMORY)
defconsti(env, "GL-OUT-OF-MEMORY", (GLenum) GL_OUT_OF_MEMORY, "GL_OUT_OF_MEMORY");
#endif
#if defined(GL_CW)
defconsti(env, "GL-CW", (GLenum) GL_CW, "GL_CW");
#endif
#if defined(GL_CCW)
defconsti(env, "GL-CCW", (GLenum) GL_CCW, "GL_CCW");
#endif
#if defined(GL_POINT_SIZE)
defconsti(env, "GL-POINT-SIZE", (GLenum) GL_POINT_SIZE, "GL_POINT_SIZE");
#endif
#if defined(GL_POINT_SIZE_RANGE)
defconsti(env, "GL-POINT-SIZE-RANGE", (GLenum) GL_POINT_SIZE_RANGE, "GL_POINT_SIZE_RANGE");
#endif
#if defined(GL_POINT_SIZE_GRANULARITY)
defconsti(env, "GL-POINT-SIZE-GRANULARITY", (GLenum) GL_POINT_SIZE_GRANULARITY, "GL_POINT_SIZE_GRANULARITY");
#endif
#if defined(GL_LINE_SMOOTH)
defconsti(env, "GL-LINE-SMOOTH", (GLenum) GL_LINE_SMOOTH, "GL_LINE_SMOOTH");
#endif
#if defined(GL_LINE_WIDTH)
defconsti(env, "GL-LINE-WIDTH", (GLenum) GL_LINE_WIDTH, "GL_LINE_WIDTH");
#endif
#if defined(GL_LINE_WIDTH_RANGE)
defconsti(env, "GL-LINE-WIDTH-RANGE", (GLenum) GL_LINE_WIDTH_RANGE, "GL_LINE_WIDTH_RANGE");
#endif
#if defined(GL_LINE_WIDTH_GRANULARITY)
defconsti(env, "GL-LINE-WIDTH-GRANULARITY", (GLenum) GL_LINE_WIDTH_GRANULARITY, "GL_LINE_WIDTH_GRANULARITY");
#endif
#if defined(GL_POLYGON_MODE)
defconsti(env, "GL-POLYGON-MODE", (GLenum) GL_POLYGON_MODE, "GL_POLYGON_MODE");
#endif
#if defined(GL_POLYGON_SMOOTH)
defconsti(env, "GL-POLYGON-SMOOTH", (GLenum) GL_POLYGON_SMOOTH, "GL_POLYGON_SMOOTH");
#endif
#if defined(GL_CULL_FACE)
defconsti(env, "GL-CULL-FACE", (GLenum) GL_CULL_FACE, "GL_CULL_FACE");
#endif
#if defined(GL_CULL_FACE_MODE)
defconsti(env, "GL-CULL-FACE-MODE", (GLenum) GL_CULL_FACE_MODE, "GL_CULL_FACE_MODE");
#endif
#if defined(GL_FRONT_FACE)
defconsti(env, "GL-FRONT-FACE", (GLenum) GL_FRONT_FACE, "GL_FRONT_FACE");
#endif
#if defined(GL_DEPTH_RANGE)
defconsti(env, "GL-DEPTH-RANGE", (GLenum) GL_DEPTH_RANGE, "GL_DEPTH_RANGE");
#endif
#if defined(GL_DEPTH_TEST)
defconsti(env, "GL-DEPTH-TEST", (GLenum) GL_DEPTH_TEST, "GL_DEPTH_TEST");
#endif
#if defined(GL_DEPTH_WRITEMASK)
defconsti(env, "GL-DEPTH-WRITEMASK", (GLenum) GL_DEPTH_WRITEMASK, "GL_DEPTH_WRITEMASK");
#endif
#if defined(GL_DEPTH_CLEAR_VALUE)
defconsti(env, "GL-DEPTH-CLEAR-VALUE", (GLenum) GL_DEPTH_CLEAR_VALUE, "GL_DEPTH_CLEAR_VALUE");
#endif
#if defined(GL_DEPTH_FUNC)
defconsti(env, "GL-DEPTH-FUNC", (GLenum) GL_DEPTH_FUNC, "GL_DEPTH_FUNC");
#endif
#if defined(GL_STENCIL_TEST)
defconsti(env, "GL-STENCIL-TEST", (GLenum) GL_STENCIL_TEST, "GL_STENCIL_TEST");
#endif
#if defined(GL_STENCIL_CLEAR_VALUE)
defconsti(env, "GL-STENCIL-CLEAR-VALUE", (GLenum) GL_STENCIL_CLEAR_VALUE, "GL_STENCIL_CLEAR_VALUE");
#endif
#if defined(GL_STENCIL_FUNC)
defconsti(env, "GL-STENCIL-FUNC", (GLenum) GL_STENCIL_FUNC, "GL_STENCIL_FUNC");
#endif
#if defined(GL_STENCIL_VALUE_MASK)
defconsti(env, "GL-STENCIL-VALUE-MASK", (GLenum) GL_STENCIL_VALUE_MASK, "GL_STENCIL_VALUE_MASK");
#endif
#if defined(GL_STENCIL_FAIL)
defconsti(env, "GL-STENCIL-FAIL", (GLenum) GL_STENCIL_FAIL, "GL_STENCIL_FAIL");
#endif
#if defined(GL_STENCIL_PASS_DEPTH_FAIL)
defconsti(env, "GL-STENCIL-PASS-DEPTH-FAIL", (GLenum) GL_STENCIL_PASS_DEPTH_FAIL, "GL_STENCIL_PASS_DEPTH_FAIL");
#endif
#if defined(GL_STENCIL_PASS_DEPTH_PASS)
defconsti(env, "GL-STENCIL-PASS-DEPTH-PASS", (GLenum) GL_STENCIL_PASS_DEPTH_PASS, "GL_STENCIL_PASS_DEPTH_PASS");
#endif
#if defined(GL_STENCIL_REF)
defconsti(env, "GL-STENCIL-REF", (GLenum) GL_STENCIL_REF, "GL_STENCIL_REF");
#endif
#if defined(GL_STENCIL_WRITEMASK)
defconsti(env, "GL-STENCIL-WRITEMASK", (GLenum) GL_STENCIL_WRITEMASK, "GL_STENCIL_WRITEMASK");
#endif
#if defined(GL_VIEWPORT)
defconsti(env, "GL-VIEWPORT", (GLenum) GL_VIEWPORT, "GL_VIEWPORT");
#endif
#if defined(GL_DITHER)
defconsti(env, "GL-DITHER", (GLenum) GL_DITHER, "GL_DITHER");
#endif
#if defined(GL_BLEND_DST)
defconsti(env, "GL-BLEND-DST", (GLenum) GL_BLEND_DST, "GL_BLEND_DST");
#endif
#if defined(GL_BLEND_SRC)
defconsti(env, "GL-BLEND-SRC", (GLenum) GL_BLEND_SRC, "GL_BLEND_SRC");
#endif
#if defined(GL_BLEND)
defconsti(env, "GL-BLEND", (GLenum) GL_BLEND, "GL_BLEND");
#endif
#if defined(GL_LOGIC_OP_MODE)
defconsti(env, "GL-LOGIC-OP-MODE", (GLenum) GL_LOGIC_OP_MODE, "GL_LOGIC_OP_MODE");
#endif
#if defined(GL_DRAW_BUFFER)
defconsti(env, "GL-DRAW-BUFFER", (GLenum) GL_DRAW_BUFFER, "GL_DRAW_BUFFER");
#endif
#if defined(GL_READ_BUFFER)
defconsti(env, "GL-READ-BUFFER", (GLenum) GL_READ_BUFFER, "GL_READ_BUFFER");
#endif
#if defined(GL_SCISSOR_BOX)
defconsti(env, "GL-SCISSOR-BOX", (GLenum) GL_SCISSOR_BOX, "GL_SCISSOR_BOX");
#endif
#if defined(GL_SCISSOR_TEST)
defconsti(env, "GL-SCISSOR-TEST", (GLenum) GL_SCISSOR_TEST, "GL_SCISSOR_TEST");
#endif
#if defined(GL_COLOR_CLEAR_VALUE)
defconsti(env, "GL-COLOR-CLEAR-VALUE", (GLenum) GL_COLOR_CLEAR_VALUE, "GL_COLOR_CLEAR_VALUE");
#endif
#if defined(GL_COLOR_WRITEMASK)
defconsti(env, "GL-COLOR-WRITEMASK", (GLenum) GL_COLOR_WRITEMASK, "GL_COLOR_WRITEMASK");
#endif
#if defined(GL_DOUBLEBUFFER)
defconsti(env, "GL-DOUBLEBUFFER", (GLenum) GL_DOUBLEBUFFER, "GL_DOUBLEBUFFER");
#endif
#if defined(GL_STEREO)
defconsti(env, "GL-STEREO", (GLenum) GL_STEREO, "GL_STEREO");
#endif
#if defined(GL_LINE_SMOOTH_HINT)
defconsti(env, "GL-LINE-SMOOTH-HINT", (GLenum) GL_LINE_SMOOTH_HINT, "GL_LINE_SMOOTH_HINT");
#endif
#if defined(GL_POLYGON_SMOOTH_HINT)
defconsti(env, "GL-POLYGON-SMOOTH-HINT", (GLenum) GL_POLYGON_SMOOTH_HINT, "GL_POLYGON_SMOOTH_HINT");
#endif
#if defined(GL_UNPACK_SWAP_BYTES)
defconsti(env, "GL-UNPACK-SWAP-BYTES", (GLenum) GL_UNPACK_SWAP_BYTES, "GL_UNPACK_SWAP_BYTES");
#endif
#if defined(GL_UNPACK_LSB_FIRST)
defconsti(env, "GL-UNPACK-LSB-FIRST", (GLenum) GL_UNPACK_LSB_FIRST, "GL_UNPACK_LSB_FIRST");
#endif
#if defined(GL_UNPACK_ROW_LENGTH)
defconsti(env, "GL-UNPACK-ROW-LENGTH", (GLenum) GL_UNPACK_ROW_LENGTH, "GL_UNPACK_ROW_LENGTH");
#endif
#if defined(GL_UNPACK_SKIP_ROWS)
defconsti(env, "GL-UNPACK-SKIP-ROWS", (GLenum) GL_UNPACK_SKIP_ROWS, "GL_UNPACK_SKIP_ROWS");
#endif
#if defined(GL_UNPACK_SKIP_PIXELS)
defconsti(env, "GL-UNPACK-SKIP-PIXELS", (GLenum) GL_UNPACK_SKIP_PIXELS, "GL_UNPACK_SKIP_PIXELS");
#endif
#if defined(GL_UNPACK_ALIGNMENT)
defconsti(env, "GL-UNPACK-ALIGNMENT", (GLenum) GL_UNPACK_ALIGNMENT, "GL_UNPACK_ALIGNMENT");
#endif
#if defined(GL_PACK_SWAP_BYTES)
defconsti(env, "GL-PACK-SWAP-BYTES", (GLenum) GL_PACK_SWAP_BYTES, "GL_PACK_SWAP_BYTES");
#endif
#if defined(GL_PACK_LSB_FIRST)
defconsti(env, "GL-PACK-LSB-FIRST", (GLenum) GL_PACK_LSB_FIRST, "GL_PACK_LSB_FIRST");
#endif
#if defined(GL_PACK_ROW_LENGTH)
defconsti(env, "GL-PACK-ROW-LENGTH", (GLenum) GL_PACK_ROW_LENGTH, "GL_PACK_ROW_LENGTH");
#endif
#if defined(GL_PACK_SKIP_ROWS)
defconsti(env, "GL-PACK-SKIP-ROWS", (GLenum) GL_PACK_SKIP_ROWS, "GL_PACK_SKIP_ROWS");
#endif
#if defined(GL_PACK_SKIP_PIXELS)
defconsti(env, "GL-PACK-SKIP-PIXELS", (GLenum) GL_PACK_SKIP_PIXELS, "GL_PACK_SKIP_PIXELS");
#endif
#if defined(GL_PACK_ALIGNMENT)
defconsti(env, "GL-PACK-ALIGNMENT", (GLenum) GL_PACK_ALIGNMENT, "GL_PACK_ALIGNMENT");
#endif
#if defined(GL_MAX_TEXTURE_SIZE)
defconsti(env, "GL-MAX-TEXTURE-SIZE", (GLenum) GL_MAX_TEXTURE_SIZE, "GL_MAX_TEXTURE_SIZE");
#endif
#if defined(GL_MAX_VIEWPORT_DIMS)
defconsti(env, "GL-MAX-VIEWPORT-DIMS", (GLenum) GL_MAX_VIEWPORT_DIMS, "GL_MAX_VIEWPORT_DIMS");
#endif
#if defined(GL_SUBPIXEL_BITS)
defconsti(env, "GL-SUBPIXEL-BITS", (GLenum) GL_SUBPIXEL_BITS, "GL_SUBPIXEL_BITS");
#endif
#if defined(GL_TEXTURE_1D)
defconsti(env, "GL-TEXTURE-1D", (GLenum) GL_TEXTURE_1D, "GL_TEXTURE_1D");
#endif
#if defined(GL_TEXTURE_2D)
defconsti(env, "GL-TEXTURE-2D", (GLenum) GL_TEXTURE_2D, "GL_TEXTURE_2D");
#endif
#if defined(GL_TEXTURE_WIDTH)
defconsti(env, "GL-TEXTURE-WIDTH", (GLenum) GL_TEXTURE_WIDTH, "GL_TEXTURE_WIDTH");
#endif
#if defined(GL_TEXTURE_HEIGHT)
defconsti(env, "GL-TEXTURE-HEIGHT", (GLenum) GL_TEXTURE_HEIGHT, "GL_TEXTURE_HEIGHT");
#endif
#if defined(GL_TEXTURE_BORDER_COLOR)
defconsti(env, "GL-TEXTURE-BORDER-COLOR", (GLenum) GL_TEXTURE_BORDER_COLOR, "GL_TEXTURE_BORDER_COLOR");
#endif
#if defined(GL_DONT_CARE)
defconsti(env, "GL-DONT-CARE", (GLenum) GL_DONT_CARE, "GL_DONT_CARE");
#endif
#if defined(GL_FASTEST)
defconsti(env, "GL-FASTEST", (GLenum) GL_FASTEST, "GL_FASTEST");
#endif
#if defined(GL_NICEST)
defconsti(env, "GL-NICEST", (GLenum) GL_NICEST, "GL_NICEST");
#endif
#if defined(GL_BYTE)
defconsti(env, "GL-BYTE", (GLenum) GL_BYTE, "GL_BYTE");
#endif
#if defined(GL_UNSIGNED_BYTE)
defconsti(env, "GL-UNSIGNED-BYTE", (GLenum) GL_UNSIGNED_BYTE, "GL_UNSIGNED_BYTE");
#endif
#if defined(GL_SHORT)
defconsti(env, "GL-SHORT", (GLenum) GL_SHORT, "GL_SHORT");
#endif
#if defined(GL_UNSIGNED_SHORT)
defconsti(env, "GL-UNSIGNED-SHORT", (GLenum) GL_UNSIGNED_SHORT, "GL_UNSIGNED_SHORT");
#endif
#if defined(GL_INT)
defconsti(env, "GL-INT", (GLenum) GL_INT, "GL_INT");
#endif
#if defined(GL_UNSIGNED_INT)
defconsti(env, "GL-UNSIGNED-INT", (GLenum) GL_UNSIGNED_INT, "GL_UNSIGNED_INT");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_STACK_OVERFLOW)
defconsti(env, "GL-STACK-OVERFLOW", (GLenum) GL_STACK_OVERFLOW, "GL_STACK_OVERFLOW");
#endif
#if defined(GL_STACK_UNDERFLOW)
defconsti(env, "GL-STACK-UNDERFLOW", (GLenum) GL_STACK_UNDERFLOW, "GL_STACK_UNDERFLOW");
#endif
#if defined(GL_CLEAR)
defconsti(env, "GL-CLEAR", (GLenum) GL_CLEAR, "GL_CLEAR");
#endif
#if defined(GL_AND)
defconsti(env, "GL-AND", (GLenum) GL_AND, "GL_AND");
#endif
#if defined(GL_AND_REVERSE)
defconsti(env, "GL-AND-REVERSE", (GLenum) GL_AND_REVERSE, "GL_AND_REVERSE");
#endif
#if defined(GL_COPY)
defconsti(env, "GL-COPY", (GLenum) GL_COPY, "GL_COPY");
#endif
#if defined(GL_AND_INVERTED)
defconsti(env, "GL-AND-INVERTED", (GLenum) GL_AND_INVERTED, "GL_AND_INVERTED");
#endif
#if defined(GL_NOOP)
defconsti(env, "GL-NOOP", (GLenum) GL_NOOP, "GL_NOOP");
#endif
#if defined(GL_XOR)
defconsti(env, "GL-XOR", (GLenum) GL_XOR, "GL_XOR");
#endif
#if defined(GL_OR)
defconsti(env, "GL-OR", (GLenum) GL_OR, "GL_OR");
#endif
#if defined(GL_NOR)
defconsti(env, "GL-NOR", (GLenum) GL_NOR, "GL_NOR");
#endif
#if defined(GL_EQUIV)
defconsti(env, "GL-EQUIV", (GLenum) GL_EQUIV, "GL_EQUIV");
#endif
#if defined(GL_INVERT)
defconsti(env, "GL-INVERT", (GLenum) GL_INVERT, "GL_INVERT");
#endif
#if defined(GL_OR_REVERSE)
defconsti(env, "GL-OR-REVERSE", (GLenum) GL_OR_REVERSE, "GL_OR_REVERSE");
#endif
#if defined(GL_COPY_INVERTED)
defconsti(env, "GL-COPY-INVERTED", (GLenum) GL_COPY_INVERTED, "GL_COPY_INVERTED");
#endif
#if defined(GL_OR_INVERTED)
defconsti(env, "GL-OR-INVERTED", (GLenum) GL_OR_INVERTED, "GL_OR_INVERTED");
#endif
#if defined(GL_NAND)
defconsti(env, "GL-NAND", (GLenum) GL_NAND, "GL_NAND");
#endif
#if defined(GL_SET)
defconsti(env, "GL-SET", (GLenum) GL_SET, "GL_SET");
#endif
#if defined(GL_TEXTURE)
defconsti(env, "GL-TEXTURE", (GLenum) GL_TEXTURE, "GL_TEXTURE");
#endif
#if defined(GL_COLOR)
defconsti(env, "GL-COLOR", (GLenum) GL_COLOR, "GL_COLOR");
#endif
#if defined(GL_DEPTH)
defconsti(env, "GL-DEPTH", (GLenum) GL_DEPTH, "GL_DEPTH");
#endif
#if defined(GL_STENCIL)
defconsti(env, "GL-STENCIL", (GLenum) GL_STENCIL, "GL_STENCIL");
#endif
#if defined(GL_STENCIL_INDEX)
defconsti(env, "GL-STENCIL-INDEX", (GLenum) GL_STENCIL_INDEX, "GL_STENCIL_INDEX");
#endif
#if defined(GL_DEPTH_COMPONENT)
defconsti(env, "GL-DEPTH-COMPONENT", (GLenum) GL_DEPTH_COMPONENT, "GL_DEPTH_COMPONENT");
#endif
#if defined(GL_RED)
defconsti(env, "GL-RED", (GLenum) GL_RED, "GL_RED");
#endif
#if defined(GL_GREEN)
defconsti(env, "GL-GREEN", (GLenum) GL_GREEN, "GL_GREEN");
#endif
#if defined(GL_BLUE)
defconsti(env, "GL-BLUE", (GLenum) GL_BLUE, "GL_BLUE");
#endif
#if defined(GL_ALPHA)
defconsti(env, "GL-ALPHA", (GLenum) GL_ALPHA, "GL_ALPHA");
#endif
#if defined(GL_RGB)
defconsti(env, "GL-RGB", (GLenum) GL_RGB, "GL_RGB");
#endif
#if defined(GL_RGBA)
defconsti(env, "GL-RGBA", (GLenum) GL_RGBA, "GL_RGBA");
#endif
#if defined(GL_POINT)
defconsti(env, "GL-POINT", (GLenum) GL_POINT, "GL_POINT");
#endif
#if defined(GL_LINE)
defconsti(env, "GL-LINE", (GLenum) GL_LINE, "GL_LINE");
#endif
#if defined(GL_FILL)
defconsti(env, "GL-FILL", (GLenum) GL_FILL, "GL_FILL");
#endif
#if defined(GL_KEEP)
defconsti(env, "GL-KEEP", (GLenum) GL_KEEP, "GL_KEEP");
#endif
#if defined(GL_REPLACE)
defconsti(env, "GL-REPLACE", (GLenum) GL_REPLACE, "GL_REPLACE");
#endif
#if defined(GL_INCR)
defconsti(env, "GL-INCR", (GLenum) GL_INCR, "GL_INCR");
#endif
#if defined(GL_DECR)
defconsti(env, "GL-DECR", (GLenum) GL_DECR, "GL_DECR");
#endif
#if defined(GL_VENDOR)
defconsti(env, "GL-VENDOR", (GLenum) GL_VENDOR, "GL_VENDOR");
#endif
#if defined(GL_RENDERER)
defconsti(env, "GL-RENDERER", (GLenum) GL_RENDERER, "GL_RENDERER");
#endif
#if defined(GL_VERSION)
defconsti(env, "GL-VERSION", (GLenum) GL_VERSION, "GL_VERSION");
#endif
#if defined(GL_EXTENSIONS)
defconsti(env, "GL-EXTENSIONS", (GLenum) GL_EXTENSIONS, "GL_EXTENSIONS");
#endif
#if defined(GL_NEAREST)
defconsti(env, "GL-NEAREST", (GLenum) GL_NEAREST, "GL_NEAREST");
#endif
#if defined(GL_LINEAR)
defconsti(env, "GL-LINEAR", (GLenum) GL_LINEAR, "GL_LINEAR");
#endif
#if defined(GL_NEAREST_MIPMAP_NEAREST)
defconsti(env, "GL-NEAREST-MIPMAP-NEAREST", (GLenum) GL_NEAREST_MIPMAP_NEAREST, "GL_NEAREST_MIPMAP_NEAREST");
#endif
#if defined(GL_LINEAR_MIPMAP_NEAREST)
defconsti(env, "GL-LINEAR-MIPMAP-NEAREST", (GLenum) GL_LINEAR_MIPMAP_NEAREST, "GL_LINEAR_MIPMAP_NEAREST");
#endif
#if defined(GL_NEAREST_MIPMAP_LINEAR)
defconsti(env, "GL-NEAREST-MIPMAP-LINEAR", (GLenum) GL_NEAREST_MIPMAP_LINEAR, "GL_NEAREST_MIPMAP_LINEAR");
#endif
#if defined(GL_LINEAR_MIPMAP_LINEAR)
defconsti(env, "GL-LINEAR-MIPMAP-LINEAR", (GLenum) GL_LINEAR_MIPMAP_LINEAR, "GL_LINEAR_MIPMAP_LINEAR");
#endif
#if defined(GL_TEXTURE_MAG_FILTER)
defconsti(env, "GL-TEXTURE-MAG-FILTER", (GLenum) GL_TEXTURE_MAG_FILTER, "GL_TEXTURE_MAG_FILTER");
#endif
#if defined(GL_TEXTURE_MIN_FILTER)
defconsti(env, "GL-TEXTURE-MIN-FILTER", (GLenum) GL_TEXTURE_MIN_FILTER, "GL_TEXTURE_MIN_FILTER");
#endif
#if defined(GL_TEXTURE_WRAP_S)
defconsti(env, "GL-TEXTURE-WRAP-S", (GLenum) GL_TEXTURE_WRAP_S, "GL_TEXTURE_WRAP_S");
#endif
#if defined(GL_TEXTURE_WRAP_T)
defconsti(env, "GL-TEXTURE-WRAP-T", (GLenum) GL_TEXTURE_WRAP_T, "GL_TEXTURE_WRAP_T");
#endif
#if defined(GL_REPEAT)
defconsti(env, "GL-REPEAT", (GLenum) GL_REPEAT, "GL_REPEAT");
#endif
#if defined(GL_CURRENT_BIT)
defconsti(env, "GL-CURRENT-BIT", (GLenum) GL_CURRENT_BIT, "GL_CURRENT_BIT");
#endif
#if defined(GL_POINT_BIT)
defconsti(env, "GL-POINT-BIT", (GLenum) GL_POINT_BIT, "GL_POINT_BIT");
#endif
#if defined(GL_LINE_BIT)
defconsti(env, "GL-LINE-BIT", (GLenum) GL_LINE_BIT, "GL_LINE_BIT");
#endif
#if defined(GL_POLYGON_BIT)
defconsti(env, "GL-POLYGON-BIT", (GLenum) GL_POLYGON_BIT, "GL_POLYGON_BIT");
#endif
#if defined(GL_POLYGON_STIPPLE_BIT)
defconsti(env, "GL-POLYGON-STIPPLE-BIT", (GLenum) GL_POLYGON_STIPPLE_BIT, "GL_POLYGON_STIPPLE_BIT");
#endif
#if defined(GL_PIXEL_MODE_BIT)
defconsti(env, "GL-PIXEL-MODE-BIT", (GLenum) GL_PIXEL_MODE_BIT, "GL_PIXEL_MODE_BIT");
#endif
#if defined(GL_LIGHTING_BIT)
defconsti(env, "GL-LIGHTING-BIT", (GLenum) GL_LIGHTING_BIT, "GL_LIGHTING_BIT");
#endif
#if defined(GL_FOG_BIT)
defconsti(env, "GL-FOG-BIT", (GLenum) GL_FOG_BIT, "GL_FOG_BIT");
#endif
#if defined(GL_ACCUM_BUFFER_BIT)
defconsti(env, "GL-ACCUM-BUFFER-BIT", (GLenum) GL_ACCUM_BUFFER_BIT, "GL_ACCUM_BUFFER_BIT");
#endif
#if defined(GL_VIEWPORT_BIT)
defconsti(env, "GL-VIEWPORT-BIT", (GLenum) GL_VIEWPORT_BIT, "GL_VIEWPORT_BIT");
#endif
#if defined(GL_TRANSFORM_BIT)
defconsti(env, "GL-TRANSFORM-BIT", (GLenum) GL_TRANSFORM_BIT, "GL_TRANSFORM_BIT");
#endif
#if defined(GL_ENABLE_BIT)
defconsti(env, "GL-ENABLE-BIT", (GLenum) GL_ENABLE_BIT, "GL_ENABLE_BIT");
#endif
#if defined(GL_HINT_BIT)
defconsti(env, "GL-HINT-BIT", (GLenum) GL_HINT_BIT, "GL_HINT_BIT");
#endif
#if defined(GL_EVAL_BIT)
defconsti(env, "GL-EVAL-BIT", (GLenum) GL_EVAL_BIT, "GL_EVAL_BIT");
#endif
#if defined(GL_LIST_BIT)
defconsti(env, "GL-LIST-BIT", (GLenum) GL_LIST_BIT, "GL_LIST_BIT");
#endif
#if defined(GL_TEXTURE_BIT)
defconsti(env, "GL-TEXTURE-BIT", (GLenum) GL_TEXTURE_BIT, "GL_TEXTURE_BIT");
#endif
#if defined(GL_SCISSOR_BIT)
defconsti(env, "GL-SCISSOR-BIT", (GLenum) GL_SCISSOR_BIT, "GL_SCISSOR_BIT");
#endif
#if defined(GL_ALL_ATTRIB_BITS)
defconsti(env, "GL-ALL-ATTRIB-BITS", (GLenum) GL_ALL_ATTRIB_BITS, "GL_ALL_ATTRIB_BITS");
#endif
#if defined(GL_QUAD_STRIP)
defconsti(env, "GL-QUAD-STRIP", (GLenum) GL_QUAD_STRIP, "GL_QUAD_STRIP");
#endif
#if defined(GL_POLYGON)
defconsti(env, "GL-POLYGON", (GLenum) GL_POLYGON, "GL_POLYGON");
#endif
#if defined(GL_ACCUM)
defconsti(env, "GL-ACCUM", (GLenum) GL_ACCUM, "GL_ACCUM");
#endif
#if defined(GL_LOAD)
defconsti(env, "GL-LOAD", (GLenum) GL_LOAD, "GL_LOAD");
#endif
#if defined(GL_RETURN)
defconsti(env, "GL-RETURN", (GLenum) GL_RETURN, "GL_RETURN");
#endif
#if defined(GL_MULT)
defconsti(env, "GL-MULT", (GLenum) GL_MULT, "GL_MULT");
#endif
#if defined(GL_ADD)
defconsti(env, "GL-ADD", (GLenum) GL_ADD, "GL_ADD");
#endif
#if defined(GL_AUX0)
defconsti(env, "GL-AUX0", (GLenum) GL_AUX0, "GL_AUX0");
#endif
#if defined(GL_AUX1)
defconsti(env, "GL-AUX1", (GLenum) GL_AUX1, "GL_AUX1");
#endif
#if defined(GL_AUX2)
defconsti(env, "GL-AUX2", (GLenum) GL_AUX2, "GL_AUX2");
#endif
#if defined(GL_AUX3)
defconsti(env, "GL-AUX3", (GLenum) GL_AUX3, "GL_AUX3");
#endif
#if defined(GL_2D)
defconsti(env, "GL-2D", (GLenum) GL_2D, "GL_2D");
#endif
#if defined(GL_3D)
defconsti(env, "GL-3D", (GLenum) GL_3D, "GL_3D");
#endif
#if defined(GL_3D_COLOR)
defconsti(env, "GL-3D-COLOR", (GLenum) GL_3D_COLOR, "GL_3D_COLOR");
#endif
#if defined(GL_3D_COLOR_TEXTURE)
defconsti(env, "GL-3D-COLOR-TEXTURE", (GLenum) GL_3D_COLOR_TEXTURE, "GL_3D_COLOR_TEXTURE");
#endif
#if defined(GL_4D_COLOR_TEXTURE)
defconsti(env, "GL-4D-COLOR-TEXTURE", (GLenum) GL_4D_COLOR_TEXTURE, "GL_4D_COLOR_TEXTURE");
#endif
#if defined(GL_PASS_THROUGH_TOKEN)
defconsti(env, "GL-PASS-THROUGH-TOKEN", (GLenum) GL_PASS_THROUGH_TOKEN, "GL_PASS_THROUGH_TOKEN");
#endif
#if defined(GL_POINT_TOKEN)
defconsti(env, "GL-POINT-TOKEN", (GLenum) GL_POINT_TOKEN, "GL_POINT_TOKEN");
#endif
#if defined(GL_LINE_TOKEN)
defconsti(env, "GL-LINE-TOKEN", (GLenum) GL_LINE_TOKEN, "GL_LINE_TOKEN");
#endif
#if defined(GL_POLYGON_TOKEN)
defconsti(env, "GL-POLYGON-TOKEN", (GLenum) GL_POLYGON_TOKEN, "GL_POLYGON_TOKEN");
#endif
#if defined(GL_BITMAP_TOKEN)
defconsti(env, "GL-BITMAP-TOKEN", (GLenum) GL_BITMAP_TOKEN, "GL_BITMAP_TOKEN");
#endif
#if defined(GL_DRAW_PIXEL_TOKEN)
defconsti(env, "GL-DRAW-PIXEL-TOKEN", (GLenum) GL_DRAW_PIXEL_TOKEN, "GL_DRAW_PIXEL_TOKEN");
#endif
#if defined(GL_COPY_PIXEL_TOKEN)
defconsti(env, "GL-COPY-PIXEL-TOKEN", (GLenum) GL_COPY_PIXEL_TOKEN, "GL_COPY_PIXEL_TOKEN");
#endif
#if defined(GL_LINE_RESET_TOKEN)
defconsti(env, "GL-LINE-RESET-TOKEN", (GLenum) GL_LINE_RESET_TOKEN, "GL_LINE_RESET_TOKEN");
#endif
#if defined(GL_EXP)
defconsti(env, "GL-EXP", (GLenum) GL_EXP, "GL_EXP");
#endif
#if defined(GL_EXP2)
defconsti(env, "GL-EXP2", (GLenum) GL_EXP2, "GL_EXP2");
#endif
#if defined(GL_COEFF)
defconsti(env, "GL-COEFF", (GLenum) GL_COEFF, "GL_COEFF");
#endif
#if defined(GL_ORDER)
defconsti(env, "GL-ORDER", (GLenum) GL_ORDER, "GL_ORDER");
#endif
#if defined(GL_DOMAIN)
defconsti(env, "GL-DOMAIN", (GLenum) GL_DOMAIN, "GL_DOMAIN");
#endif
#if defined(GL_PIXEL_MAP_I_TO_I)
defconsti(env, "GL-PIXEL-MAP-I-TO-I", (GLenum) GL_PIXEL_MAP_I_TO_I, "GL_PIXEL_MAP_I_TO_I");
#endif
#if defined(GL_PIXEL_MAP_S_TO_S)
defconsti(env, "GL-PIXEL-MAP-S-TO-S", (GLenum) GL_PIXEL_MAP_S_TO_S, "GL_PIXEL_MAP_S_TO_S");
#endif
#if defined(GL_PIXEL_MAP_I_TO_R)
defconsti(env, "GL-PIXEL-MAP-I-TO-R", (GLenum) GL_PIXEL_MAP_I_TO_R, "GL_PIXEL_MAP_I_TO_R");
#endif
#if defined(GL_PIXEL_MAP_I_TO_G)
defconsti(env, "GL-PIXEL-MAP-I-TO-G", (GLenum) GL_PIXEL_MAP_I_TO_G, "GL_PIXEL_MAP_I_TO_G");
#endif
#if defined(GL_PIXEL_MAP_I_TO_B)
defconsti(env, "GL-PIXEL-MAP-I-TO-B", (GLenum) GL_PIXEL_MAP_I_TO_B, "GL_PIXEL_MAP_I_TO_B");
#endif
#if defined(GL_PIXEL_MAP_I_TO_A)
defconsti(env, "GL-PIXEL-MAP-I-TO-A", (GLenum) GL_PIXEL_MAP_I_TO_A, "GL_PIXEL_MAP_I_TO_A");
#endif
#if defined(GL_PIXEL_MAP_R_TO_R)
defconsti(env, "GL-PIXEL-MAP-R-TO-R", (GLenum) GL_PIXEL_MAP_R_TO_R, "GL_PIXEL_MAP_R_TO_R");
#endif
#if defined(GL_PIXEL_MAP_G_TO_G)
defconsti(env, "GL-PIXEL-MAP-G-TO-G", (GLenum) GL_PIXEL_MAP_G_TO_G, "GL_PIXEL_MAP_G_TO_G");
#endif
#if defined(GL_PIXEL_MAP_B_TO_B)
defconsti(env, "GL-PIXEL-MAP-B-TO-B", (GLenum) GL_PIXEL_MAP_B_TO_B, "GL_PIXEL_MAP_B_TO_B");
#endif
#if defined(GL_PIXEL_MAP_A_TO_A)
defconsti(env, "GL-PIXEL-MAP-A-TO-A", (GLenum) GL_PIXEL_MAP_A_TO_A, "GL_PIXEL_MAP_A_TO_A");
#endif
#if defined(GL_CURRENT_COLOR)
defconsti(env, "GL-CURRENT-COLOR", (GLenum) GL_CURRENT_COLOR, "GL_CURRENT_COLOR");
#endif
#if defined(GL_CURRENT_INDEX)
defconsti(env, "GL-CURRENT-INDEX", (GLenum) GL_CURRENT_INDEX, "GL_CURRENT_INDEX");
#endif
#if defined(GL_CURRENT_NORMAL)
defconsti(env, "GL-CURRENT-NORMAL", (GLenum) GL_CURRENT_NORMAL, "GL_CURRENT_NORMAL");
#endif
#if defined(GL_CURRENT_TEXTURE_COORDS)
defconsti(env, "GL-CURRENT-TEXTURE-COORDS", (GLenum) GL_CURRENT_TEXTURE_COORDS, "GL_CURRENT_TEXTURE_COORDS");
#endif
#if defined(GL_CURRENT_RASTER_COLOR)
defconsti(env, "GL-CURRENT-RASTER-COLOR", (GLenum) GL_CURRENT_RASTER_COLOR, "GL_CURRENT_RASTER_COLOR");
#endif
#if defined(GL_CURRENT_RASTER_INDEX)
defconsti(env, "GL-CURRENT-RASTER-INDEX", (GLenum) GL_CURRENT_RASTER_INDEX, "GL_CURRENT_RASTER_INDEX");
#endif
#if defined(GL_CURRENT_RASTER_TEXTURE_COORDS)
defconsti(env, "GL-CURRENT-RASTER-TEXTURE-COORDS", (GLenum) GL_CURRENT_RASTER_TEXTURE_COORDS, "GL_CURRENT_RASTER_TEXTURE_COORDS");
#endif
#if defined(GL_CURRENT_RASTER_POSITION)
defconsti(env, "GL-CURRENT-RASTER-POSITION", (GLenum) GL_CURRENT_RASTER_POSITION, "GL_CURRENT_RASTER_POSITION");
#endif
#if defined(GL_CURRENT_RASTER_POSITION_VALID)
defconsti(env, "GL-CURRENT-RASTER-POSITION-VALID", (GLenum) GL_CURRENT_RASTER_POSITION_VALID, "GL_CURRENT_RASTER_POSITION_VALID");
#endif
#if defined(GL_CURRENT_RASTER_DISTANCE)
defconsti(env, "GL-CURRENT-RASTER-DISTANCE", (GLenum) GL_CURRENT_RASTER_DISTANCE, "GL_CURRENT_RASTER_DISTANCE");
#endif
#if defined(GL_POINT_SMOOTH)
defconsti(env, "GL-POINT-SMOOTH", (GLenum) GL_POINT_SMOOTH, "GL_POINT_SMOOTH");
#endif
#if defined(GL_LINE_STIPPLE)
defconsti(env, "GL-LINE-STIPPLE", (GLenum) GL_LINE_STIPPLE, "GL_LINE_STIPPLE");
#endif
#if defined(GL_LINE_STIPPLE_PATTERN)
defconsti(env, "GL-LINE-STIPPLE-PATTERN", (GLenum) GL_LINE_STIPPLE_PATTERN, "GL_LINE_STIPPLE_PATTERN");
#endif
#if defined(GL_LINE_STIPPLE_REPEAT)
defconsti(env, "GL-LINE-STIPPLE-REPEAT", (GLenum) GL_LINE_STIPPLE_REPEAT, "GL_LINE_STIPPLE_REPEAT");
#endif
#if defined(GL_LIST_MODE)
defconsti(env, "GL-LIST-MODE", (GLenum) GL_LIST_MODE, "GL_LIST_MODE");
#endif
#if defined(GL_MAX_LIST_NESTING)
defconsti(env, "GL-MAX-LIST-NESTING", (GLenum) GL_MAX_LIST_NESTING, "GL_MAX_LIST_NESTING");
#endif
#if defined(GL_LIST_BASE)
defconsti(env, "GL-LIST-BASE", (GLenum) GL_LIST_BASE, "GL_LIST_BASE");
#endif
#if defined(GL_LIST_INDEX)
defconsti(env, "GL-LIST-INDEX", (GLenum) GL_LIST_INDEX, "GL_LIST_INDEX");
#endif
#if defined(GL_POLYGON_STIPPLE)
defconsti(env, "GL-POLYGON-STIPPLE", (GLenum) GL_POLYGON_STIPPLE, "GL_POLYGON_STIPPLE");
#endif
#if defined(GL_EDGE_FLAG)
defconsti(env, "GL-EDGE-FLAG", (GLenum) GL_EDGE_FLAG, "GL_EDGE_FLAG");
#endif
#if defined(GL_LIGHTING)
defconsti(env, "GL-LIGHTING", (GLenum) GL_LIGHTING, "GL_LIGHTING");
#endif
#if defined(GL_LIGHT_MODEL_LOCAL_VIEWER)
defconsti(env, "GL-LIGHT-MODEL-LOCAL-VIEWER", (GLenum) GL_LIGHT_MODEL_LOCAL_VIEWER, "GL_LIGHT_MODEL_LOCAL_VIEWER");
#endif
#if defined(GL_LIGHT_MODEL_TWO_SIDE)
defconsti(env, "GL-LIGHT-MODEL-TWO-SIDE", (GLenum) GL_LIGHT_MODEL_TWO_SIDE, "GL_LIGHT_MODEL_TWO_SIDE");
#endif
#if defined(GL_LIGHT_MODEL_AMBIENT)
defconsti(env, "GL-LIGHT-MODEL-AMBIENT", (GLenum) GL_LIGHT_MODEL_AMBIENT, "GL_LIGHT_MODEL_AMBIENT");
#endif
#if defined(GL_SHADE_MODEL)
defconsti(env, "GL-SHADE-MODEL", (GLenum) GL_SHADE_MODEL, "GL_SHADE_MODEL");
#endif
#if defined(GL_COLOR_MATERIAL_FACE)
defconsti(env, "GL-COLOR-MATERIAL-FACE", (GLenum) GL_COLOR_MATERIAL_FACE, "GL_COLOR_MATERIAL_FACE");
#endif
#if defined(GL_COLOR_MATERIAL_PARAMETER)
defconsti(env, "GL-COLOR-MATERIAL-PARAMETER", (GLenum) GL_COLOR_MATERIAL_PARAMETER, "GL_COLOR_MATERIAL_PARAMETER");
#endif
#if defined(GL_COLOR_MATERIAL)
defconsti(env, "GL-COLOR-MATERIAL", (GLenum) GL_COLOR_MATERIAL, "GL_COLOR_MATERIAL");
#endif
#if defined(GL_FOG)
defconsti(env, "GL-FOG", (GLenum) GL_FOG, "GL_FOG");
#endif
#if defined(GL_FOG_INDEX)
defconsti(env, "GL-FOG-INDEX", (GLenum) GL_FOG_INDEX, "GL_FOG_INDEX");
#endif
#if defined(GL_FOG_DENSITY)
defconsti(env, "GL-FOG-DENSITY", (GLenum) GL_FOG_DENSITY, "GL_FOG_DENSITY");
#endif
#if defined(GL_FOG_START)
defconsti(env, "GL-FOG-START", (GLenum) GL_FOG_START, "GL_FOG_START");
#endif
#if defined(GL_FOG_END)
defconsti(env, "GL-FOG-END", (GLenum) GL_FOG_END, "GL_FOG_END");
#endif
#if defined(GL_FOG_MODE)
defconsti(env, "GL-FOG-MODE", (GLenum) GL_FOG_MODE, "GL_FOG_MODE");
#endif
#if defined(GL_FOG_COLOR)
defconsti(env, "GL-FOG-COLOR", (GLenum) GL_FOG_COLOR, "GL_FOG_COLOR");
#endif
#if defined(GL_ACCUM_CLEAR_VALUE)
defconsti(env, "GL-ACCUM-CLEAR-VALUE", (GLenum) GL_ACCUM_CLEAR_VALUE, "GL_ACCUM_CLEAR_VALUE");
#endif
#if defined(GL_MATRIX_MODE)
defconsti(env, "GL-MATRIX-MODE", (GLenum) GL_MATRIX_MODE, "GL_MATRIX_MODE");
#endif
#if defined(GL_NORMALIZE)
defconsti(env, "GL-NORMALIZE", (GLenum) GL_NORMALIZE, "GL_NORMALIZE");
#endif
#if defined(GL_MODELVIEW_STACK_DEPTH)
defconsti(env, "GL-MODELVIEW-STACK-DEPTH", (GLenum) GL_MODELVIEW_STACK_DEPTH, "GL_MODELVIEW_STACK_DEPTH");
#endif
#if defined(GL_PROJECTION_STACK_DEPTH)
defconsti(env, "GL-PROJECTION-STACK-DEPTH", (GLenum) GL_PROJECTION_STACK_DEPTH, "GL_PROJECTION_STACK_DEPTH");
#endif
#if defined(GL_TEXTURE_STACK_DEPTH)
defconsti(env, "GL-TEXTURE-STACK-DEPTH", (GLenum) GL_TEXTURE_STACK_DEPTH, "GL_TEXTURE_STACK_DEPTH");
#endif
#if defined(GL_MODELVIEW_MATRIX)
defconsti(env, "GL-MODELVIEW-MATRIX", (GLenum) GL_MODELVIEW_MATRIX, "GL_MODELVIEW_MATRIX");
#endif
#if defined(GL_PROJECTION_MATRIX)
defconsti(env, "GL-PROJECTION-MATRIX", (GLenum) GL_PROJECTION_MATRIX, "GL_PROJECTION_MATRIX");
#endif
#if defined(GL_TEXTURE_MATRIX)
defconsti(env, "GL-TEXTURE-MATRIX", (GLenum) GL_TEXTURE_MATRIX, "GL_TEXTURE_MATRIX");
#endif
#if defined(GL_ATTRIB_STACK_DEPTH)
defconsti(env, "GL-ATTRIB-STACK-DEPTH", (GLenum) GL_ATTRIB_STACK_DEPTH, "GL_ATTRIB_STACK_DEPTH");
#endif
#if defined(GL_ALPHA_TEST)
defconsti(env, "GL-ALPHA-TEST", (GLenum) GL_ALPHA_TEST, "GL_ALPHA_TEST");
#endif
#if defined(GL_ALPHA_TEST_FUNC)
defconsti(env, "GL-ALPHA-TEST-FUNC", (GLenum) GL_ALPHA_TEST_FUNC, "GL_ALPHA_TEST_FUNC");
#endif
#if defined(GL_ALPHA_TEST_REF)
defconsti(env, "GL-ALPHA-TEST-REF", (GLenum) GL_ALPHA_TEST_REF, "GL_ALPHA_TEST_REF");
#endif
#if defined(GL_LOGIC_OP)
defconsti(env, "GL-LOGIC-OP", (GLenum) GL_LOGIC_OP, "GL_LOGIC_OP");
#endif
#if defined(GL_AUX_BUFFERS)
defconsti(env, "GL-AUX-BUFFERS", (GLenum) GL_AUX_BUFFERS, "GL_AUX_BUFFERS");
#endif
#if defined(GL_INDEX_CLEAR_VALUE)
defconsti(env, "GL-INDEX-CLEAR-VALUE", (GLenum) GL_INDEX_CLEAR_VALUE, "GL_INDEX_CLEAR_VALUE");
#endif
#if defined(GL_INDEX_WRITEMASK)
defconsti(env, "GL-INDEX-WRITEMASK", (GLenum) GL_INDEX_WRITEMASK, "GL_INDEX_WRITEMASK");
#endif
#if defined(GL_INDEX_MODE)
defconsti(env, "GL-INDEX-MODE", (GLenum) GL_INDEX_MODE, "GL_INDEX_MODE");
#endif
#if defined(GL_RGBA_MODE)
defconsti(env, "GL-RGBA-MODE", (GLenum) GL_RGBA_MODE, "GL_RGBA_MODE");
#endif
#if defined(GL_RENDER_MODE)
defconsti(env, "GL-RENDER-MODE", (GLenum) GL_RENDER_MODE, "GL_RENDER_MODE");
#endif
#if defined(GL_PERSPECTIVE_CORRECTION_HINT)
defconsti(env, "GL-PERSPECTIVE-CORRECTION-HINT", (GLenum) GL_PERSPECTIVE_CORRECTION_HINT, "GL_PERSPECTIVE_CORRECTION_HINT");
#endif
#if defined(GL_POINT_SMOOTH_HINT)
defconsti(env, "GL-POINT-SMOOTH-HINT", (GLenum) GL_POINT_SMOOTH_HINT, "GL_POINT_SMOOTH_HINT");
#endif
#if defined(GL_FOG_HINT)
defconsti(env, "GL-FOG-HINT", (GLenum) GL_FOG_HINT, "GL_FOG_HINT");
#endif
#if defined(GL_TEXTURE_GEN_S)
defconsti(env, "GL-TEXTURE-GEN-S", (GLenum) GL_TEXTURE_GEN_S, "GL_TEXTURE_GEN_S");
#endif
#if defined(GL_TEXTURE_GEN_T)
defconsti(env, "GL-TEXTURE-GEN-T", (GLenum) GL_TEXTURE_GEN_T, "GL_TEXTURE_GEN_T");
#endif
#if defined(GL_TEXTURE_GEN_R)
defconsti(env, "GL-TEXTURE-GEN-R", (GLenum) GL_TEXTURE_GEN_R, "GL_TEXTURE_GEN_R");
#endif
#if defined(GL_TEXTURE_GEN_Q)
defconsti(env, "GL-TEXTURE-GEN-Q", (GLenum) GL_TEXTURE_GEN_Q, "GL_TEXTURE_GEN_Q");
#endif
#if defined(GL_PIXEL_MAP_I_TO_I_SIZE)
defconsti(env, "GL-PIXEL-MAP-I-TO-I-SIZE", (GLenum) GL_PIXEL_MAP_I_TO_I_SIZE, "GL_PIXEL_MAP_I_TO_I_SIZE");
#endif
#if defined(GL_PIXEL_MAP_S_TO_S_SIZE)
defconsti(env, "GL-PIXEL-MAP-S-TO-S-SIZE", (GLenum) GL_PIXEL_MAP_S_TO_S_SIZE, "GL_PIXEL_MAP_S_TO_S_SIZE");
#endif
#if defined(GL_PIXEL_MAP_I_TO_R_SIZE)
defconsti(env, "GL-PIXEL-MAP-I-TO-R-SIZE", (GLenum) GL_PIXEL_MAP_I_TO_R_SIZE, "GL_PIXEL_MAP_I_TO_R_SIZE");
#endif
#if defined(GL_PIXEL_MAP_I_TO_G_SIZE)
defconsti(env, "GL-PIXEL-MAP-I-TO-G-SIZE", (GLenum) GL_PIXEL_MAP_I_TO_G_SIZE, "GL_PIXEL_MAP_I_TO_G_SIZE");
#endif
#if defined(GL_PIXEL_MAP_I_TO_B_SIZE)
defconsti(env, "GL-PIXEL-MAP-I-TO-B-SIZE", (GLenum) GL_PIXEL_MAP_I_TO_B_SIZE, "GL_PIXEL_MAP_I_TO_B_SIZE");
#endif
#if defined(GL_PIXEL_MAP_I_TO_A_SIZE)
defconsti(env, "GL-PIXEL-MAP-I-TO-A-SIZE", (GLenum) GL_PIXEL_MAP_I_TO_A_SIZE, "GL_PIXEL_MAP_I_TO_A_SIZE");
#endif
#if defined(GL_PIXEL_MAP_R_TO_R_SIZE)
defconsti(env, "GL-PIXEL-MAP-R-TO-R-SIZE", (GLenum) GL_PIXEL_MAP_R_TO_R_SIZE, "GL_PIXEL_MAP_R_TO_R_SIZE");
#endif
#if defined(GL_PIXEL_MAP_G_TO_G_SIZE)
defconsti(env, "GL-PIXEL-MAP-G-TO-G-SIZE", (GLenum) GL_PIXEL_MAP_G_TO_G_SIZE, "GL_PIXEL_MAP_G_TO_G_SIZE");
#endif
#if defined(GL_PIXEL_MAP_B_TO_B_SIZE)
defconsti(env, "GL-PIXEL-MAP-B-TO-B-SIZE", (GLenum) GL_PIXEL_MAP_B_TO_B_SIZE, "GL_PIXEL_MAP_B_TO_B_SIZE");
#endif
#if defined(GL_PIXEL_MAP_A_TO_A_SIZE)
defconsti(env, "GL-PIXEL-MAP-A-TO-A-SIZE", (GLenum) GL_PIXEL_MAP_A_TO_A_SIZE, "GL_PIXEL_MAP_A_TO_A_SIZE");
#endif
#if defined(GL_MAP_COLOR)
defconsti(env, "GL-MAP-COLOR", (GLenum) GL_MAP_COLOR, "GL_MAP_COLOR");
#endif
#if defined(GL_MAP_STENCIL)
defconsti(env, "GL-MAP-STENCIL", (GLenum) GL_MAP_STENCIL, "GL_MAP_STENCIL");
#endif
#if defined(GL_INDEX_SHIFT)
defconsti(env, "GL-INDEX-SHIFT", (GLenum) GL_INDEX_SHIFT, "GL_INDEX_SHIFT");
#endif
#if defined(GL_INDEX_OFFSET)
defconsti(env, "GL-INDEX-OFFSET", (GLenum) GL_INDEX_OFFSET, "GL_INDEX_OFFSET");
#endif
#if defined(GL_RED_SCALE)
defconsti(env, "GL-RED-SCALE", (GLenum) GL_RED_SCALE, "GL_RED_SCALE");
#endif
#if defined(GL_RED_BIAS)
defconsti(env, "GL-RED-BIAS", (GLenum) GL_RED_BIAS, "GL_RED_BIAS");
#endif
#if defined(GL_ZOOM_X)
defconsti(env, "GL-ZOOM-X", (GLenum) GL_ZOOM_X, "GL_ZOOM_X");
#endif
#if defined(GL_ZOOM_Y)
defconsti(env, "GL-ZOOM-Y", (GLenum) GL_ZOOM_Y, "GL_ZOOM_Y");
#endif
#if defined(GL_GREEN_SCALE)
defconsti(env, "GL-GREEN-SCALE", (GLenum) GL_GREEN_SCALE, "GL_GREEN_SCALE");
#endif
#if defined(GL_GREEN_BIAS)
defconsti(env, "GL-GREEN-BIAS", (GLenum) GL_GREEN_BIAS, "GL_GREEN_BIAS");
#endif
#if defined(GL_BLUE_SCALE)
defconsti(env, "GL-BLUE-SCALE", (GLenum) GL_BLUE_SCALE, "GL_BLUE_SCALE");
#endif
#if defined(GL_BLUE_BIAS)
defconsti(env, "GL-BLUE-BIAS", (GLenum) GL_BLUE_BIAS, "GL_BLUE_BIAS");
#endif
#if defined(GL_ALPHA_SCALE)
defconsti(env, "GL-ALPHA-SCALE", (GLenum) GL_ALPHA_SCALE, "GL_ALPHA_SCALE");
#endif
#if defined(GL_ALPHA_BIAS)
defconsti(env, "GL-ALPHA-BIAS", (GLenum) GL_ALPHA_BIAS, "GL_ALPHA_BIAS");
#endif
#if defined(GL_DEPTH_SCALE)
defconsti(env, "GL-DEPTH-SCALE", (GLenum) GL_DEPTH_SCALE, "GL_DEPTH_SCALE");
#endif
#if defined(GL_DEPTH_BIAS)
defconsti(env, "GL-DEPTH-BIAS", (GLenum) GL_DEPTH_BIAS, "GL_DEPTH_BIAS");
#endif
#if defined(GL_MAX_EVAL_ORDER)
defconsti(env, "GL-MAX-EVAL-ORDER", (GLenum) GL_MAX_EVAL_ORDER, "GL_MAX_EVAL_ORDER");
#endif
#if defined(GL_MAX_LIGHTS)
defconsti(env, "GL-MAX-LIGHTS", (GLenum) GL_MAX_LIGHTS, "GL_MAX_LIGHTS");
#endif
#if defined(GL_MAX_CLIP_PLANES)
defconsti(env, "GL-MAX-CLIP-PLANES", (GLenum) GL_MAX_CLIP_PLANES, "GL_MAX_CLIP_PLANES");
#endif
#if defined(GL_MAX_PIXEL_MAP_TABLE)
defconsti(env, "GL-MAX-PIXEL-MAP-TABLE", (GLenum) GL_MAX_PIXEL_MAP_TABLE, "GL_MAX_PIXEL_MAP_TABLE");
#endif
#if defined(GL_MAX_ATTRIB_STACK_DEPTH)
defconsti(env, "GL-MAX-ATTRIB-STACK-DEPTH", (GLenum) GL_MAX_ATTRIB_STACK_DEPTH, "GL_MAX_ATTRIB_STACK_DEPTH");
#endif
#if defined(GL_MAX_MODELVIEW_STACK_DEPTH)
defconsti(env, "GL-MAX-MODELVIEW-STACK-DEPTH", (GLenum) GL_MAX_MODELVIEW_STACK_DEPTH, "GL_MAX_MODELVIEW_STACK_DEPTH");
#endif
#if defined(GL_MAX_NAME_STACK_DEPTH)
defconsti(env, "GL-MAX-NAME-STACK-DEPTH", (GLenum) GL_MAX_NAME_STACK_DEPTH, "GL_MAX_NAME_STACK_DEPTH");
#endif
#if defined(GL_MAX_PROJECTION_STACK_DEPTH)
defconsti(env, "GL-MAX-PROJECTION-STACK-DEPTH", (GLenum) GL_MAX_PROJECTION_STACK_DEPTH, "GL_MAX_PROJECTION_STACK_DEPTH");
#endif
#if defined(GL_MAX_TEXTURE_STACK_DEPTH)
defconsti(env, "GL-MAX-TEXTURE-STACK-DEPTH", (GLenum) GL_MAX_TEXTURE_STACK_DEPTH, "GL_MAX_TEXTURE_STACK_DEPTH");
#endif
#if defined(GL_INDEX_BITS)
defconsti(env, "GL-INDEX-BITS", (GLenum) GL_INDEX_BITS, "GL_INDEX_BITS");
#endif
#if defined(GL_RED_BITS)
defconsti(env, "GL-RED-BITS", (GLenum) GL_RED_BITS, "GL_RED_BITS");
#endif
#if defined(GL_GREEN_BITS)
defconsti(env, "GL-GREEN-BITS", (GLenum) GL_GREEN_BITS, "GL_GREEN_BITS");
#endif
#if defined(GL_BLUE_BITS)
defconsti(env, "GL-BLUE-BITS", (GLenum) GL_BLUE_BITS, "GL_BLUE_BITS");
#endif
#if defined(GL_ALPHA_BITS)
defconsti(env, "GL-ALPHA-BITS", (GLenum) GL_ALPHA_BITS, "GL_ALPHA_BITS");
#endif
#if defined(GL_DEPTH_BITS)
defconsti(env, "GL-DEPTH-BITS", (GLenum) GL_DEPTH_BITS, "GL_DEPTH_BITS");
#endif
#if defined(GL_STENCIL_BITS)
defconsti(env, "GL-STENCIL-BITS", (GLenum) GL_STENCIL_BITS, "GL_STENCIL_BITS");
#endif
#if defined(GL_ACCUM_RED_BITS)
defconsti(env, "GL-ACCUM-RED-BITS", (GLenum) GL_ACCUM_RED_BITS, "GL_ACCUM_RED_BITS");
#endif
#if defined(GL_ACCUM_GREEN_BITS)
defconsti(env, "GL-ACCUM-GREEN-BITS", (GLenum) GL_ACCUM_GREEN_BITS, "GL_ACCUM_GREEN_BITS");
#endif
#if defined(GL_ACCUM_BLUE_BITS)
defconsti(env, "GL-ACCUM-BLUE-BITS", (GLenum) GL_ACCUM_BLUE_BITS, "GL_ACCUM_BLUE_BITS");
#endif
#if defined(GL_ACCUM_ALPHA_BITS)
defconsti(env, "GL-ACCUM-ALPHA-BITS", (GLenum) GL_ACCUM_ALPHA_BITS, "GL_ACCUM_ALPHA_BITS");
#endif
#if defined(GL_NAME_STACK_DEPTH)
defconsti(env, "GL-NAME-STACK-DEPTH", (GLenum) GL_NAME_STACK_DEPTH, "GL_NAME_STACK_DEPTH");
#endif
#if defined(GL_AUTO_NORMAL)
defconsti(env, "GL-AUTO-NORMAL", (GLenum) GL_AUTO_NORMAL, "GL_AUTO_NORMAL");
#endif
#if defined(GL_MAP1_COLOR_4)
defconsti(env, "GL-MAP1-COLOR-4", (GLenum) GL_MAP1_COLOR_4, "GL_MAP1_COLOR_4");
#endif
#if defined(GL_MAP1_INDEX)
defconsti(env, "GL-MAP1-INDEX", (GLenum) GL_MAP1_INDEX, "GL_MAP1_INDEX");
#endif
#if defined(GL_MAP1_NORMAL)
defconsti(env, "GL-MAP1-NORMAL", (GLenum) GL_MAP1_NORMAL, "GL_MAP1_NORMAL");
#endif
#if defined(GL_MAP1_TEXTURE_COORD_1)
defconsti(env, "GL-MAP1-TEXTURE-COORD-1", (GLenum) GL_MAP1_TEXTURE_COORD_1, "GL_MAP1_TEXTURE_COORD_1");
#endif
#if defined(GL_MAP1_TEXTURE_COORD_2)
defconsti(env, "GL-MAP1-TEXTURE-COORD-2", (GLenum) GL_MAP1_TEXTURE_COORD_2, "GL_MAP1_TEXTURE_COORD_2");
#endif
#if defined(GL_MAP1_TEXTURE_COORD_3)
defconsti(env, "GL-MAP1-TEXTURE-COORD-3", (GLenum) GL_MAP1_TEXTURE_COORD_3, "GL_MAP1_TEXTURE_COORD_3");
#endif
#if defined(GL_MAP1_TEXTURE_COORD_4)
defconsti(env, "GL-MAP1-TEXTURE-COORD-4", (GLenum) GL_MAP1_TEXTURE_COORD_4, "GL_MAP1_TEXTURE_COORD_4");
#endif
#if defined(GL_MAP1_VERTEX_3)
defconsti(env, "GL-MAP1-VERTEX-3", (GLenum) GL_MAP1_VERTEX_3, "GL_MAP1_VERTEX_3");
#endif
#if defined(GL_MAP1_VERTEX_4)
defconsti(env, "GL-MAP1-VERTEX-4", (GLenum) GL_MAP1_VERTEX_4, "GL_MAP1_VERTEX_4");
#endif
#if defined(GL_MAP2_COLOR_4)
defconsti(env, "GL-MAP2-COLOR-4", (GLenum) GL_MAP2_COLOR_4, "GL_MAP2_COLOR_4");
#endif
#if defined(GL_MAP2_INDEX)
defconsti(env, "GL-MAP2-INDEX", (GLenum) GL_MAP2_INDEX, "GL_MAP2_INDEX");
#endif
#if defined(GL_MAP2_NORMAL)
defconsti(env, "GL-MAP2-NORMAL", (GLenum) GL_MAP2_NORMAL, "GL_MAP2_NORMAL");
#endif
#if defined(GL_MAP2_TEXTURE_COORD_1)
defconsti(env, "GL-MAP2-TEXTURE-COORD-1", (GLenum) GL_MAP2_TEXTURE_COORD_1, "GL_MAP2_TEXTURE_COORD_1");
#endif
#if defined(GL_MAP2_TEXTURE_COORD_2)
defconsti(env, "GL-MAP2-TEXTURE-COORD-2", (GLenum) GL_MAP2_TEXTURE_COORD_2, "GL_MAP2_TEXTURE_COORD_2");
#endif
#if defined(GL_MAP2_TEXTURE_COORD_3)
defconsti(env, "GL-MAP2-TEXTURE-COORD-3", (GLenum) GL_MAP2_TEXTURE_COORD_3, "GL_MAP2_TEXTURE_COORD_3");
#endif
#if defined(GL_MAP2_TEXTURE_COORD_4)
defconsti(env, "GL-MAP2-TEXTURE-COORD-4", (GLenum) GL_MAP2_TEXTURE_COORD_4, "GL_MAP2_TEXTURE_COORD_4");
#endif
#if defined(GL_MAP2_VERTEX_3)
defconsti(env, "GL-MAP2-VERTEX-3", (GLenum) GL_MAP2_VERTEX_3, "GL_MAP2_VERTEX_3");
#endif
#if defined(GL_MAP2_VERTEX_4)
defconsti(env, "GL-MAP2-VERTEX-4", (GLenum) GL_MAP2_VERTEX_4, "GL_MAP2_VERTEX_4");
#endif
#if defined(GL_MAP1_GRID_DOMAIN)
defconsti(env, "GL-MAP1-GRID-DOMAIN", (GLenum) GL_MAP1_GRID_DOMAIN, "GL_MAP1_GRID_DOMAIN");
#endif
#if defined(GL_MAP1_GRID_SEGMENTS)
defconsti(env, "GL-MAP1-GRID-SEGMENTS", (GLenum) GL_MAP1_GRID_SEGMENTS, "GL_MAP1_GRID_SEGMENTS");
#endif
#if defined(GL_MAP2_GRID_DOMAIN)
defconsti(env, "GL-MAP2-GRID-DOMAIN", (GLenum) GL_MAP2_GRID_DOMAIN, "GL_MAP2_GRID_DOMAIN");
#endif
#if defined(GL_MAP2_GRID_SEGMENTS)
defconsti(env, "GL-MAP2-GRID-SEGMENTS", (GLenum) GL_MAP2_GRID_SEGMENTS, "GL_MAP2_GRID_SEGMENTS");
#endif
#if defined(GL_TEXTURE_COMPONENTS)
defconsti(env, "GL-TEXTURE-COMPONENTS", (GLenum) GL_TEXTURE_COMPONENTS, "GL_TEXTURE_COMPONENTS");
#endif
#if defined(GL_TEXTURE_BORDER)
defconsti(env, "GL-TEXTURE-BORDER", (GLenum) GL_TEXTURE_BORDER, "GL_TEXTURE_BORDER");
#endif
#if defined(GL_AMBIENT)
defconsti(env, "GL-AMBIENT", (GLenum) GL_AMBIENT, "GL_AMBIENT");
#endif
#if defined(GL_DIFFUSE)
defconsti(env, "GL-DIFFUSE", (GLenum) GL_DIFFUSE, "GL_DIFFUSE");
#endif
#if defined(GL_SPECULAR)
defconsti(env, "GL-SPECULAR", (GLenum) GL_SPECULAR, "GL_SPECULAR");
#endif
#if defined(GL_POSITION)
defconsti(env, "GL-POSITION", (GLenum) GL_POSITION, "GL_POSITION");
#endif
#if defined(GL_SPOT_DIRECTION)
defconsti(env, "GL-SPOT-DIRECTION", (GLenum) GL_SPOT_DIRECTION, "GL_SPOT_DIRECTION");
#endif
#if defined(GL_SPOT_EXPONENT)
defconsti(env, "GL-SPOT-EXPONENT", (GLenum) GL_SPOT_EXPONENT, "GL_SPOT_EXPONENT");
#endif
#if defined(GL_SPOT_CUTOFF)
defconsti(env, "GL-SPOT-CUTOFF", (GLenum) GL_SPOT_CUTOFF, "GL_SPOT_CUTOFF");
#endif
#if defined(GL_CONSTANT_ATTENUATION)
defconsti(env, "GL-CONSTANT-ATTENUATION", (GLenum) GL_CONSTANT_ATTENUATION, "GL_CONSTANT_ATTENUATION");
#endif
#if defined(GL_LINEAR_ATTENUATION)
defconsti(env, "GL-LINEAR-ATTENUATION", (GLenum) GL_LINEAR_ATTENUATION, "GL_LINEAR_ATTENUATION");
#endif
#if defined(GL_QUADRATIC_ATTENUATION)
defconsti(env, "GL-QUADRATIC-ATTENUATION", (GLenum) GL_QUADRATIC_ATTENUATION, "GL_QUADRATIC_ATTENUATION");
#endif
#if defined(GL_COMPILE)
defconsti(env, "GL-COMPILE", (GLenum) GL_COMPILE, "GL_COMPILE");
#endif
#if defined(GL_COMPILE_AND_EXECUTE)
defconsti(env, "GL-COMPILE-AND-EXECUTE", (GLenum) GL_COMPILE_AND_EXECUTE, "GL_COMPILE_AND_EXECUTE");
#endif
#if defined(GL_2_BYTES)
defconsti(env, "GL-2-BYTES", (GLenum) GL_2_BYTES, "GL_2_BYTES");
#endif
#if defined(GL_3_BYTES)
defconsti(env, "GL-3-BYTES", (GLenum) GL_3_BYTES, "GL_3_BYTES");
#endif
#if defined(GL_4_BYTES)
defconsti(env, "GL-4-BYTES", (GLenum) GL_4_BYTES, "GL_4_BYTES");
#endif
#if defined(GL_EMISSION)
defconsti(env, "GL-EMISSION", (GLenum) GL_EMISSION, "GL_EMISSION");
#endif
#if defined(GL_SHININESS)
defconsti(env, "GL-SHININESS", (GLenum) GL_SHININESS, "GL_SHININESS");
#endif
#if defined(GL_AMBIENT_AND_DIFFUSE)
defconsti(env, "GL-AMBIENT-AND-DIFFUSE", (GLenum) GL_AMBIENT_AND_DIFFUSE, "GL_AMBIENT_AND_DIFFUSE");
#endif
#if defined(GL_COLOR_INDEXES)
defconsti(env, "GL-COLOR-INDEXES", (GLenum) GL_COLOR_INDEXES, "GL_COLOR_INDEXES");
#endif
#if defined(GL_MODELVIEW)
defconsti(env, "GL-MODELVIEW", (GLenum) GL_MODELVIEW, "GL_MODELVIEW");
#endif
#if defined(GL_PROJECTION)
defconsti(env, "GL-PROJECTION", (GLenum) GL_PROJECTION, "GL_PROJECTION");
#endif
#if defined(GL_COLOR_INDEX)
defconsti(env, "GL-COLOR-INDEX", (GLenum) GL_COLOR_INDEX, "GL_COLOR_INDEX");
#endif
#if defined(GL_LUMINANCE)
defconsti(env, "GL-LUMINANCE", (GLenum) GL_LUMINANCE, "GL_LUMINANCE");
#endif
#if defined(GL_LUMINANCE_ALPHA)
defconsti(env, "GL-LUMINANCE-ALPHA", (GLenum) GL_LUMINANCE_ALPHA, "GL_LUMINANCE_ALPHA");
#endif
#if defined(GL_BITMAP)
defconsti(env, "GL-BITMAP", (GLenum) GL_BITMAP, "GL_BITMAP");
#endif
#if defined(GL_RENDER)
defconsti(env, "GL-RENDER", (GLenum) GL_RENDER, "GL_RENDER");
#endif
#if defined(GL_FEEDBACK)
defconsti(env, "GL-FEEDBACK", (GLenum) GL_FEEDBACK, "GL_FEEDBACK");
#endif
#if defined(GL_SELECT)
defconsti(env, "GL-SELECT", (GLenum) GL_SELECT, "GL_SELECT");
#endif
#if defined(GL_FLAT)
defconsti(env, "GL-FLAT", (GLenum) GL_FLAT, "GL_FLAT");
#endif
#if defined(GL_SMOOTH)
defconsti(env, "GL-SMOOTH", (GLenum) GL_SMOOTH, "GL_SMOOTH");
#endif
#if defined(GL_S)
defconsti(env, "GL-S", (GLenum) GL_S, "GL_S");
#endif
#if defined(GL_T)
defconsti(env, "GL-T", (GLenum) GL_T, "GL_T");
#endif
#if defined(GL_R)
defconsti(env, "GL-R", (GLenum) GL_R, "GL_R");
#endif
#if defined(GL_Q)
defconsti(env, "GL-Q", (GLenum) GL_Q, "GL_Q");
#endif
#if defined(GL_MODULATE)
defconsti(env, "GL-MODULATE", (GLenum) GL_MODULATE, "GL_MODULATE");
#endif
#if defined(GL_DECAL)
defconsti(env, "GL-DECAL", (GLenum) GL_DECAL, "GL_DECAL");
#endif
#if defined(GL_TEXTURE_ENV_MODE)
defconsti(env, "GL-TEXTURE-ENV-MODE", (GLenum) GL_TEXTURE_ENV_MODE, "GL_TEXTURE_ENV_MODE");
#endif
#if defined(GL_TEXTURE_ENV_COLOR)
defconsti(env, "GL-TEXTURE-ENV-COLOR", (GLenum) GL_TEXTURE_ENV_COLOR, "GL_TEXTURE_ENV_COLOR");
#endif
#if defined(GL_TEXTURE_ENV)
defconsti(env, "GL-TEXTURE-ENV", (GLenum) GL_TEXTURE_ENV, "GL_TEXTURE_ENV");
#endif
#if defined(GL_EYE_LINEAR)
defconsti(env, "GL-EYE-LINEAR", (GLenum) GL_EYE_LINEAR, "GL_EYE_LINEAR");
#endif
#if defined(GL_OBJECT_LINEAR)
defconsti(env, "GL-OBJECT-LINEAR", (GLenum) GL_OBJECT_LINEAR, "GL_OBJECT_LINEAR");
#endif
#if defined(GL_SPHERE_MAP)
defconsti(env, "GL-SPHERE-MAP", (GLenum) GL_SPHERE_MAP, "GL_SPHERE_MAP");
#endif
#if defined(GL_TEXTURE_GEN_MODE)
defconsti(env, "GL-TEXTURE-GEN-MODE", (GLenum) GL_TEXTURE_GEN_MODE, "GL_TEXTURE_GEN_MODE");
#endif
#if defined(GL_OBJECT_PLANE)
defconsti(env, "GL-OBJECT-PLANE", (GLenum) GL_OBJECT_PLANE, "GL_OBJECT_PLANE");
#endif
#if defined(GL_EYE_PLANE)
defconsti(env, "GL-EYE-PLANE", (GLenum) GL_EYE_PLANE, "GL_EYE_PLANE");
#endif
#if defined(GL_CLAMP)
defconsti(env, "GL-CLAMP", (GLenum) GL_CLAMP, "GL_CLAMP");
#endif
#if defined(GL_CLIP_PLANE0)
defconsti(env, "GL-CLIP-PLANE0", (GLenum) GL_CLIP_PLANE0, "GL_CLIP_PLANE0");
#endif
#if defined(GL_CLIP_PLANE1)
defconsti(env, "GL-CLIP-PLANE1", (GLenum) GL_CLIP_PLANE1, "GL_CLIP_PLANE1");
#endif
#if defined(GL_CLIP_PLANE2)
defconsti(env, "GL-CLIP-PLANE2", (GLenum) GL_CLIP_PLANE2, "GL_CLIP_PLANE2");
#endif
#if defined(GL_CLIP_PLANE3)
defconsti(env, "GL-CLIP-PLANE3", (GLenum) GL_CLIP_PLANE3, "GL_CLIP_PLANE3");
#endif
#if defined(GL_CLIP_PLANE4)
defconsti(env, "GL-CLIP-PLANE4", (GLenum) GL_CLIP_PLANE4, "GL_CLIP_PLANE4");
#endif
#if defined(GL_CLIP_PLANE5)
defconsti(env, "GL-CLIP-PLANE5", (GLenum) GL_CLIP_PLANE5, "GL_CLIP_PLANE5");
#endif
#if defined(GL_LIGHT0)
defconsti(env, "GL-LIGHT0", (GLenum) GL_LIGHT0, "GL_LIGHT0");
#endif
#if defined(GL_LIGHT1)
defconsti(env, "GL-LIGHT1", (GLenum) GL_LIGHT1, "GL_LIGHT1");
#endif
#if defined(GL_LIGHT2)
defconsti(env, "GL-LIGHT2", (GLenum) GL_LIGHT2, "GL_LIGHT2");
#endif
#if defined(GL_LIGHT3)
defconsti(env, "GL-LIGHT3", (GLenum) GL_LIGHT3, "GL_LIGHT3");
#endif
#if defined(GL_LIGHT4)
defconsti(env, "GL-LIGHT4", (GLenum) GL_LIGHT4, "GL_LIGHT4");
#endif
#if defined(GL_LIGHT5)
defconsti(env, "GL-LIGHT5", (GLenum) GL_LIGHT5, "GL_LIGHT5");
#endif
#if defined(GL_LIGHT6)
defconsti(env, "GL-LIGHT6", (GLenum) GL_LIGHT6, "GL_LIGHT6");
#endif
#if defined(GL_LIGHT7)
defconsti(env, "GL-LIGHT7", (GLenum) GL_LIGHT7, "GL_LIGHT7");
#endif
#if defined(GL_COLOR_LOGIC_OP)
defconsti(env, "GL-COLOR-LOGIC-OP", (GLenum) GL_COLOR_LOGIC_OP, "GL_COLOR_LOGIC_OP");
#endif
#if defined(GL_POLYGON_OFFSET_UNITS)
defconsti(env, "GL-POLYGON-OFFSET-UNITS", (GLenum) GL_POLYGON_OFFSET_UNITS, "GL_POLYGON_OFFSET_UNITS");
#endif
#if defined(GL_POLYGON_OFFSET_POINT)
defconsti(env, "GL-POLYGON-OFFSET-POINT", (GLenum) GL_POLYGON_OFFSET_POINT, "GL_POLYGON_OFFSET_POINT");
#endif
#if defined(GL_POLYGON_OFFSET_LINE)
defconsti(env, "GL-POLYGON-OFFSET-LINE", (GLenum) GL_POLYGON_OFFSET_LINE, "GL_POLYGON_OFFSET_LINE");
#endif
#if defined(GL_POLYGON_OFFSET_FILL)
defconsti(env, "GL-POLYGON-OFFSET-FILL", (GLenum) GL_POLYGON_OFFSET_FILL, "GL_POLYGON_OFFSET_FILL");
#endif
#if defined(GL_POLYGON_OFFSET_FACTOR)
defconsti(env, "GL-POLYGON-OFFSET-FACTOR", (GLenum) GL_POLYGON_OFFSET_FACTOR, "GL_POLYGON_OFFSET_FACTOR");
#endif
#if defined(GL_TEXTURE_BINDING_1D)
defconsti(env, "GL-TEXTURE-BINDING-1D", (GLenum) GL_TEXTURE_BINDING_1D, "GL_TEXTURE_BINDING_1D");
#endif
#if defined(GL_TEXTURE_BINDING_2D)
defconsti(env, "GL-TEXTURE-BINDING-2D", (GLenum) GL_TEXTURE_BINDING_2D, "GL_TEXTURE_BINDING_2D");
#endif
#if defined(GL_TEXTURE_INTERNAL_FORMAT)
defconsti(env, "GL-TEXTURE-INTERNAL-FORMAT", (GLenum) GL_TEXTURE_INTERNAL_FORMAT, "GL_TEXTURE_INTERNAL_FORMAT");
#endif
#if defined(GL_TEXTURE_RED_SIZE)
defconsti(env, "GL-TEXTURE-RED-SIZE", (GLenum) GL_TEXTURE_RED_SIZE, "GL_TEXTURE_RED_SIZE");
#endif
#if defined(GL_TEXTURE_GREEN_SIZE)
defconsti(env, "GL-TEXTURE-GREEN-SIZE", (GLenum) GL_TEXTURE_GREEN_SIZE, "GL_TEXTURE_GREEN_SIZE");
#endif
#if defined(GL_TEXTURE_BLUE_SIZE)
defconsti(env, "GL-TEXTURE-BLUE-SIZE", (GLenum) GL_TEXTURE_BLUE_SIZE, "GL_TEXTURE_BLUE_SIZE");
#endif
#if defined(GL_TEXTURE_ALPHA_SIZE)
defconsti(env, "GL-TEXTURE-ALPHA-SIZE", (GLenum) GL_TEXTURE_ALPHA_SIZE, "GL_TEXTURE_ALPHA_SIZE");
#endif
#if defined(GL_DOUBLE)
defconsti(env, "GL-DOUBLE", (GLenum) GL_DOUBLE, "GL_DOUBLE");
#endif
#if defined(GL_PROXY_TEXTURE_1D)
defconsti(env, "GL-PROXY-TEXTURE-1D", (GLenum) GL_PROXY_TEXTURE_1D, "GL_PROXY_TEXTURE_1D");
#endif
#if defined(GL_PROXY_TEXTURE_2D)
defconsti(env, "GL-PROXY-TEXTURE-2D", (GLenum) GL_PROXY_TEXTURE_2D, "GL_PROXY_TEXTURE_2D");
#endif
#if defined(GL_R3_G3_B2)
defconsti(env, "GL-R3-G3-B2", (GLenum) GL_R3_G3_B2, "GL_R3_G3_B2");
#endif
#if defined(GL_RGB4)
defconsti(env, "GL-RGB4", (GLenum) GL_RGB4, "GL_RGB4");
#endif
#if defined(GL_RGB5)
defconsti(env, "GL-RGB5", (GLenum) GL_RGB5, "GL_RGB5");
#endif
#if defined(GL_RGB8)
defconsti(env, "GL-RGB8", (GLenum) GL_RGB8, "GL_RGB8");
#endif
#if defined(GL_RGB10)
defconsti(env, "GL-RGB10", (GLenum) GL_RGB10, "GL_RGB10");
#endif
#if defined(GL_RGB12)
defconsti(env, "GL-RGB12", (GLenum) GL_RGB12, "GL_RGB12");
#endif
#if defined(GL_RGB16)
defconsti(env, "GL-RGB16", (GLenum) GL_RGB16, "GL_RGB16");
#endif
#if defined(GL_RGBA2)
defconsti(env, "GL-RGBA2", (GLenum) GL_RGBA2, "GL_RGBA2");
#endif
#if defined(GL_RGBA4)
defconsti(env, "GL-RGBA4", (GLenum) GL_RGBA4, "GL_RGBA4");
#endif
#if defined(GL_RGB5_A1)
defconsti(env, "GL-RGB5-A1", (GLenum) GL_RGB5_A1, "GL_RGB5_A1");
#endif
#if defined(GL_RGBA8)
defconsti(env, "GL-RGBA8", (GLenum) GL_RGBA8, "GL_RGBA8");
#endif
#if defined(GL_RGB10_A2)
defconsti(env, "GL-RGB10-A2", (GLenum) GL_RGB10_A2, "GL_RGB10_A2");
#endif
#if defined(GL_RGBA12)
defconsti(env, "GL-RGBA12", (GLenum) GL_RGBA12, "GL_RGBA12");
#endif
#if defined(GL_RGBA16)
defconsti(env, "GL-RGBA16", (GLenum) GL_RGBA16, "GL_RGBA16");
#endif
#if defined(GL_CLIENT_PIXEL_STORE_BIT)
defconsti(env, "GL-CLIENT-PIXEL-STORE-BIT", (GLenum) GL_CLIENT_PIXEL_STORE_BIT, "GL_CLIENT_PIXEL_STORE_BIT");
#endif
#if defined(GL_CLIENT_VERTEX_ARRAY_BIT)
defconsti(env, "GL-CLIENT-VERTEX-ARRAY-BIT", (GLenum) GL_CLIENT_VERTEX_ARRAY_BIT, "GL_CLIENT_VERTEX_ARRAY_BIT");
#endif
#if defined(GL_CLIENT_ALL_ATTRIB_BITS)
defconsti(env, "GL-CLIENT-ALL-ATTRIB-BITS", (GLenum) GL_CLIENT_ALL_ATTRIB_BITS, "GL_CLIENT_ALL_ATTRIB_BITS");
#endif
#if defined(GL_VERTEX_ARRAY_POINTER)
defconsti(env, "GL-VERTEX-ARRAY-POINTER", (GLenum) GL_VERTEX_ARRAY_POINTER, "GL_VERTEX_ARRAY_POINTER");
#endif
#if defined(GL_NORMAL_ARRAY_POINTER)
defconsti(env, "GL-NORMAL-ARRAY-POINTER", (GLenum) GL_NORMAL_ARRAY_POINTER, "GL_NORMAL_ARRAY_POINTER");
#endif
#if defined(GL_COLOR_ARRAY_POINTER)
defconsti(env, "GL-COLOR-ARRAY-POINTER", (GLenum) GL_COLOR_ARRAY_POINTER, "GL_COLOR_ARRAY_POINTER");
#endif
#if defined(GL_INDEX_ARRAY_POINTER)
defconsti(env, "GL-INDEX-ARRAY-POINTER", (GLenum) GL_INDEX_ARRAY_POINTER, "GL_INDEX_ARRAY_POINTER");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_POINTER)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-POINTER", (GLenum) GL_TEXTURE_COORD_ARRAY_POINTER, "GL_TEXTURE_COORD_ARRAY_POINTER");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_POINTER)
defconsti(env, "GL-EDGE-FLAG-ARRAY-POINTER", (GLenum) GL_EDGE_FLAG_ARRAY_POINTER, "GL_EDGE_FLAG_ARRAY_POINTER");
#endif
#if defined(GL_FEEDBACK_BUFFER_POINTER)
defconsti(env, "GL-FEEDBACK-BUFFER-POINTER", (GLenum) GL_FEEDBACK_BUFFER_POINTER, "GL_FEEDBACK_BUFFER_POINTER");
#endif
#if defined(GL_SELECTION_BUFFER_POINTER)
defconsti(env, "GL-SELECTION-BUFFER-POINTER", (GLenum) GL_SELECTION_BUFFER_POINTER, "GL_SELECTION_BUFFER_POINTER");
#endif
#if defined(GL_CLIENT_ATTRIB_STACK_DEPTH)
defconsti(env, "GL-CLIENT-ATTRIB-STACK-DEPTH", (GLenum) GL_CLIENT_ATTRIB_STACK_DEPTH, "GL_CLIENT_ATTRIB_STACK_DEPTH");
#endif
#if defined(GL_INDEX_LOGIC_OP)
defconsti(env, "GL-INDEX-LOGIC-OP", (GLenum) GL_INDEX_LOGIC_OP, "GL_INDEX_LOGIC_OP");
#endif
#if defined(GL_MAX_CLIENT_ATTRIB_STACK_DEPTH)
defconsti(env, "GL-MAX-CLIENT-ATTRIB-STACK-DEPTH", (GLenum) GL_MAX_CLIENT_ATTRIB_STACK_DEPTH, "GL_MAX_CLIENT_ATTRIB_STACK_DEPTH");
#endif
#if defined(GL_FEEDBACK_BUFFER_SIZE)
defconsti(env, "GL-FEEDBACK-BUFFER-SIZE", (GLenum) GL_FEEDBACK_BUFFER_SIZE, "GL_FEEDBACK_BUFFER_SIZE");
#endif
#if defined(GL_FEEDBACK_BUFFER_TYPE)
defconsti(env, "GL-FEEDBACK-BUFFER-TYPE", (GLenum) GL_FEEDBACK_BUFFER_TYPE, "GL_FEEDBACK_BUFFER_TYPE");
#endif
#if defined(GL_SELECTION_BUFFER_SIZE)
defconsti(env, "GL-SELECTION-BUFFER-SIZE", (GLenum) GL_SELECTION_BUFFER_SIZE, "GL_SELECTION_BUFFER_SIZE");
#endif
#if defined(GL_VERTEX_ARRAY)
defconsti(env, "GL-VERTEX-ARRAY", (GLenum) GL_VERTEX_ARRAY, "GL_VERTEX_ARRAY");
#endif
#if defined(GL_NORMAL_ARRAY)
defconsti(env, "GL-NORMAL-ARRAY", (GLenum) GL_NORMAL_ARRAY, "GL_NORMAL_ARRAY");
#endif
#if defined(GL_COLOR_ARRAY)
defconsti(env, "GL-COLOR-ARRAY", (GLenum) GL_COLOR_ARRAY, "GL_COLOR_ARRAY");
#endif
#if defined(GL_INDEX_ARRAY)
defconsti(env, "GL-INDEX-ARRAY", (GLenum) GL_INDEX_ARRAY, "GL_INDEX_ARRAY");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY)
defconsti(env, "GL-TEXTURE-COORD-ARRAY", (GLenum) GL_TEXTURE_COORD_ARRAY, "GL_TEXTURE_COORD_ARRAY");
#endif
#if defined(GL_EDGE_FLAG_ARRAY)
defconsti(env, "GL-EDGE-FLAG-ARRAY", (GLenum) GL_EDGE_FLAG_ARRAY, "GL_EDGE_FLAG_ARRAY");
#endif
#if defined(GL_VERTEX_ARRAY_SIZE)
defconsti(env, "GL-VERTEX-ARRAY-SIZE", (GLenum) GL_VERTEX_ARRAY_SIZE, "GL_VERTEX_ARRAY_SIZE");
#endif
#if defined(GL_VERTEX_ARRAY_TYPE)
defconsti(env, "GL-VERTEX-ARRAY-TYPE", (GLenum) GL_VERTEX_ARRAY_TYPE, "GL_VERTEX_ARRAY_TYPE");
#endif
#if defined(GL_VERTEX_ARRAY_STRIDE)
defconsti(env, "GL-VERTEX-ARRAY-STRIDE", (GLenum) GL_VERTEX_ARRAY_STRIDE, "GL_VERTEX_ARRAY_STRIDE");
#endif
#if defined(GL_NORMAL_ARRAY_TYPE)
defconsti(env, "GL-NORMAL-ARRAY-TYPE", (GLenum) GL_NORMAL_ARRAY_TYPE, "GL_NORMAL_ARRAY_TYPE");
#endif
#if defined(GL_NORMAL_ARRAY_STRIDE)
defconsti(env, "GL-NORMAL-ARRAY-STRIDE", (GLenum) GL_NORMAL_ARRAY_STRIDE, "GL_NORMAL_ARRAY_STRIDE");
#endif
#if defined(GL_COLOR_ARRAY_SIZE)
defconsti(env, "GL-COLOR-ARRAY-SIZE", (GLenum) GL_COLOR_ARRAY_SIZE, "GL_COLOR_ARRAY_SIZE");
#endif
#if defined(GL_COLOR_ARRAY_TYPE)
defconsti(env, "GL-COLOR-ARRAY-TYPE", (GLenum) GL_COLOR_ARRAY_TYPE, "GL_COLOR_ARRAY_TYPE");
#endif
#if defined(GL_COLOR_ARRAY_STRIDE)
defconsti(env, "GL-COLOR-ARRAY-STRIDE", (GLenum) GL_COLOR_ARRAY_STRIDE, "GL_COLOR_ARRAY_STRIDE");
#endif
#if defined(GL_INDEX_ARRAY_TYPE)
defconsti(env, "GL-INDEX-ARRAY-TYPE", (GLenum) GL_INDEX_ARRAY_TYPE, "GL_INDEX_ARRAY_TYPE");
#endif
#if defined(GL_INDEX_ARRAY_STRIDE)
defconsti(env, "GL-INDEX-ARRAY-STRIDE", (GLenum) GL_INDEX_ARRAY_STRIDE, "GL_INDEX_ARRAY_STRIDE");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_SIZE)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-SIZE", (GLenum) GL_TEXTURE_COORD_ARRAY_SIZE, "GL_TEXTURE_COORD_ARRAY_SIZE");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_TYPE)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-TYPE", (GLenum) GL_TEXTURE_COORD_ARRAY_TYPE, "GL_TEXTURE_COORD_ARRAY_TYPE");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_STRIDE)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-STRIDE", (GLenum) GL_TEXTURE_COORD_ARRAY_STRIDE, "GL_TEXTURE_COORD_ARRAY_STRIDE");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_STRIDE)
defconsti(env, "GL-EDGE-FLAG-ARRAY-STRIDE", (GLenum) GL_EDGE_FLAG_ARRAY_STRIDE, "GL_EDGE_FLAG_ARRAY_STRIDE");
#endif
#if defined(GL_TEXTURE_LUMINANCE_SIZE)
defconsti(env, "GL-TEXTURE-LUMINANCE-SIZE", (GLenum) GL_TEXTURE_LUMINANCE_SIZE, "GL_TEXTURE_LUMINANCE_SIZE");
#endif
#if defined(GL_TEXTURE_INTENSITY_SIZE)
defconsti(env, "GL-TEXTURE-INTENSITY-SIZE", (GLenum) GL_TEXTURE_INTENSITY_SIZE, "GL_TEXTURE_INTENSITY_SIZE");
#endif
#if defined(GL_TEXTURE_PRIORITY)
defconsti(env, "GL-TEXTURE-PRIORITY", (GLenum) GL_TEXTURE_PRIORITY, "GL_TEXTURE_PRIORITY");
#endif
#if defined(GL_TEXTURE_RESIDENT)
defconsti(env, "GL-TEXTURE-RESIDENT", (GLenum) GL_TEXTURE_RESIDENT, "GL_TEXTURE_RESIDENT");
#endif
#if defined(GL_ALPHA4)
defconsti(env, "GL-ALPHA4", (GLenum) GL_ALPHA4, "GL_ALPHA4");
#endif
#if defined(GL_ALPHA8)
defconsti(env, "GL-ALPHA8", (GLenum) GL_ALPHA8, "GL_ALPHA8");
#endif
#if defined(GL_ALPHA12)
defconsti(env, "GL-ALPHA12", (GLenum) GL_ALPHA12, "GL_ALPHA12");
#endif
#if defined(GL_ALPHA16)
defconsti(env, "GL-ALPHA16", (GLenum) GL_ALPHA16, "GL_ALPHA16");
#endif
#if defined(GL_LUMINANCE4)
defconsti(env, "GL-LUMINANCE4", (GLenum) GL_LUMINANCE4, "GL_LUMINANCE4");
#endif
#if defined(GL_LUMINANCE8)
defconsti(env, "GL-LUMINANCE8", (GLenum) GL_LUMINANCE8, "GL_LUMINANCE8");
#endif
#if defined(GL_LUMINANCE12)
defconsti(env, "GL-LUMINANCE12", (GLenum) GL_LUMINANCE12, "GL_LUMINANCE12");
#endif
#if defined(GL_LUMINANCE16)
defconsti(env, "GL-LUMINANCE16", (GLenum) GL_LUMINANCE16, "GL_LUMINANCE16");
#endif
#if defined(GL_LUMINANCE4_ALPHA4)
defconsti(env, "GL-LUMINANCE4-ALPHA4", (GLenum) GL_LUMINANCE4_ALPHA4, "GL_LUMINANCE4_ALPHA4");
#endif
#if defined(GL_LUMINANCE6_ALPHA2)
defconsti(env, "GL-LUMINANCE6-ALPHA2", (GLenum) GL_LUMINANCE6_ALPHA2, "GL_LUMINANCE6_ALPHA2");
#endif
#if defined(GL_LUMINANCE8_ALPHA8)
defconsti(env, "GL-LUMINANCE8-ALPHA8", (GLenum) GL_LUMINANCE8_ALPHA8, "GL_LUMINANCE8_ALPHA8");
#endif
#if defined(GL_LUMINANCE12_ALPHA4)
defconsti(env, "GL-LUMINANCE12-ALPHA4", (GLenum) GL_LUMINANCE12_ALPHA4, "GL_LUMINANCE12_ALPHA4");
#endif
#if defined(GL_LUMINANCE12_ALPHA12)
defconsti(env, "GL-LUMINANCE12-ALPHA12", (GLenum) GL_LUMINANCE12_ALPHA12, "GL_LUMINANCE12_ALPHA12");
#endif
#if defined(GL_LUMINANCE16_ALPHA16)
defconsti(env, "GL-LUMINANCE16-ALPHA16", (GLenum) GL_LUMINANCE16_ALPHA16, "GL_LUMINANCE16_ALPHA16");
#endif
#if defined(GL_INTENSITY)
defconsti(env, "GL-INTENSITY", (GLenum) GL_INTENSITY, "GL_INTENSITY");
#endif
#if defined(GL_INTENSITY4)
defconsti(env, "GL-INTENSITY4", (GLenum) GL_INTENSITY4, "GL_INTENSITY4");
#endif
#if defined(GL_INTENSITY8)
defconsti(env, "GL-INTENSITY8", (GLenum) GL_INTENSITY8, "GL_INTENSITY8");
#endif
#if defined(GL_INTENSITY12)
defconsti(env, "GL-INTENSITY12", (GLenum) GL_INTENSITY12, "GL_INTENSITY12");
#endif
#if defined(GL_INTENSITY16)
defconsti(env, "GL-INTENSITY16", (GLenum) GL_INTENSITY16, "GL_INTENSITY16");
#endif
#if defined(GL_V2F)
defconsti(env, "GL-V2F", (GLenum) GL_V2F, "GL_V2F");
#endif
#if defined(GL_V3F)
defconsti(env, "GL-V3F", (GLenum) GL_V3F, "GL_V3F");
#endif
#if defined(GL_C4UB_V2F)
defconsti(env, "GL-C4UB-V2F", (GLenum) GL_C4UB_V2F, "GL_C4UB_V2F");
#endif
#if defined(GL_C4UB_V3F)
defconsti(env, "GL-C4UB-V3F", (GLenum) GL_C4UB_V3F, "GL_C4UB_V3F");
#endif
#if defined(GL_C3F_V3F)
defconsti(env, "GL-C3F-V3F", (GLenum) GL_C3F_V3F, "GL_C3F_V3F");
#endif
#if defined(GL_N3F_V3F)
defconsti(env, "GL-N3F-V3F", (GLenum) GL_N3F_V3F, "GL_N3F_V3F");
#endif
#if defined(GL_C4F_N3F_V3F)
defconsti(env, "GL-C4F-N3F-V3F", (GLenum) GL_C4F_N3F_V3F, "GL_C4F_N3F_V3F");
#endif
#if defined(GL_T2F_V3F)
defconsti(env, "GL-T2F-V3F", (GLenum) GL_T2F_V3F, "GL_T2F_V3F");
#endif
#if defined(GL_T4F_V4F)
defconsti(env, "GL-T4F-V4F", (GLenum) GL_T4F_V4F, "GL_T4F_V4F");
#endif
#if defined(GL_T2F_C4UB_V3F)
defconsti(env, "GL-T2F-C4UB-V3F", (GLenum) GL_T2F_C4UB_V3F, "GL_T2F_C4UB_V3F");
#endif
#if defined(GL_T2F_C3F_V3F)
defconsti(env, "GL-T2F-C3F-V3F", (GLenum) GL_T2F_C3F_V3F, "GL_T2F_C3F_V3F");
#endif
#if defined(GL_T2F_N3F_V3F)
defconsti(env, "GL-T2F-N3F-V3F", (GLenum) GL_T2F_N3F_V3F, "GL_T2F_N3F_V3F");
#endif
#if defined(GL_T2F_C4F_N3F_V3F)
defconsti(env, "GL-T2F-C4F-N3F-V3F", (GLenum) GL_T2F_C4F_N3F_V3F, "GL_T2F_C4F_N3F_V3F");
#endif
#if defined(GL_T4F_C4F_N3F_V4F)
defconsti(env, "GL-T4F-C4F-N3F-V4F", (GLenum) GL_T4F_C4F_N3F_V4F, "GL_T4F_C4F_N3F_V4F");
#endif
#if defined(GL_UNSIGNED_BYTE_3_3_2)
defconsti(env, "GL-UNSIGNED-BYTE-3-3-2", (GLenum) GL_UNSIGNED_BYTE_3_3_2, "GL_UNSIGNED_BYTE_3_3_2");
#endif
#if defined(GL_UNSIGNED_SHORT_4_4_4_4)
defconsti(env, "GL-UNSIGNED-SHORT-4-4-4-4", (GLenum) GL_UNSIGNED_SHORT_4_4_4_4, "GL_UNSIGNED_SHORT_4_4_4_4");
#endif
#if defined(GL_UNSIGNED_SHORT_5_5_5_1)
defconsti(env, "GL-UNSIGNED-SHORT-5-5-5-1", (GLenum) GL_UNSIGNED_SHORT_5_5_5_1, "GL_UNSIGNED_SHORT_5_5_5_1");
#endif
#if defined(GL_UNSIGNED_INT_8_8_8_8)
defconsti(env, "GL-UNSIGNED-INT-8-8-8-8", (GLenum) GL_UNSIGNED_INT_8_8_8_8, "GL_UNSIGNED_INT_8_8_8_8");
#endif
#if defined(GL_UNSIGNED_INT_10_10_10_2)
defconsti(env, "GL-UNSIGNED-INT-10-10-10-2", (GLenum) GL_UNSIGNED_INT_10_10_10_2, "GL_UNSIGNED_INT_10_10_10_2");
#endif
#if defined(GL_TEXTURE_BINDING_3D)
defconsti(env, "GL-TEXTURE-BINDING-3D", (GLenum) GL_TEXTURE_BINDING_3D, "GL_TEXTURE_BINDING_3D");
#endif
#if defined(GL_PACK_SKIP_IMAGES)
defconsti(env, "GL-PACK-SKIP-IMAGES", (GLenum) GL_PACK_SKIP_IMAGES, "GL_PACK_SKIP_IMAGES");
#endif
#if defined(GL_PACK_IMAGE_HEIGHT)
defconsti(env, "GL-PACK-IMAGE-HEIGHT", (GLenum) GL_PACK_IMAGE_HEIGHT, "GL_PACK_IMAGE_HEIGHT");
#endif
#if defined(GL_UNPACK_SKIP_IMAGES)
defconsti(env, "GL-UNPACK-SKIP-IMAGES", (GLenum) GL_UNPACK_SKIP_IMAGES, "GL_UNPACK_SKIP_IMAGES");
#endif
#if defined(GL_UNPACK_IMAGE_HEIGHT)
defconsti(env, "GL-UNPACK-IMAGE-HEIGHT", (GLenum) GL_UNPACK_IMAGE_HEIGHT, "GL_UNPACK_IMAGE_HEIGHT");
#endif
#if defined(GL_TEXTURE_3D)
defconsti(env, "GL-TEXTURE-3D", (GLenum) GL_TEXTURE_3D, "GL_TEXTURE_3D");
#endif
#if defined(GL_PROXY_TEXTURE_3D)
defconsti(env, "GL-PROXY-TEXTURE-3D", (GLenum) GL_PROXY_TEXTURE_3D, "GL_PROXY_TEXTURE_3D");
#endif
#if defined(GL_TEXTURE_DEPTH)
defconsti(env, "GL-TEXTURE-DEPTH", (GLenum) GL_TEXTURE_DEPTH, "GL_TEXTURE_DEPTH");
#endif
#if defined(GL_TEXTURE_WRAP_R)
defconsti(env, "GL-TEXTURE-WRAP-R", (GLenum) GL_TEXTURE_WRAP_R, "GL_TEXTURE_WRAP_R");
#endif
#if defined(GL_MAX_3D_TEXTURE_SIZE)
defconsti(env, "GL-MAX-3D-TEXTURE-SIZE", (GLenum) GL_MAX_3D_TEXTURE_SIZE, "GL_MAX_3D_TEXTURE_SIZE");
#endif
#if defined(GL_UNSIGNED_BYTE_2_3_3_REV)
defconsti(env, "GL-UNSIGNED-BYTE-2-3-3-REV", (GLenum) GL_UNSIGNED_BYTE_2_3_3_REV, "GL_UNSIGNED_BYTE_2_3_3_REV");
#endif
#if defined(GL_UNSIGNED_SHORT_5_6_5)
defconsti(env, "GL-UNSIGNED-SHORT-5-6-5", (GLenum) GL_UNSIGNED_SHORT_5_6_5, "GL_UNSIGNED_SHORT_5_6_5");
#endif
#if defined(GL_UNSIGNED_SHORT_5_6_5_REV)
defconsti(env, "GL-UNSIGNED-SHORT-5-6-5-REV", (GLenum) GL_UNSIGNED_SHORT_5_6_5_REV, "GL_UNSIGNED_SHORT_5_6_5_REV");
#endif
#if defined(GL_UNSIGNED_SHORT_4_4_4_4_REV)
defconsti(env, "GL-UNSIGNED-SHORT-4-4-4-4-REV", (GLenum) GL_UNSIGNED_SHORT_4_4_4_4_REV, "GL_UNSIGNED_SHORT_4_4_4_4_REV");
#endif
#if defined(GL_UNSIGNED_SHORT_1_5_5_5_REV)
defconsti(env, "GL-UNSIGNED-SHORT-1-5-5-5-REV", (GLenum) GL_UNSIGNED_SHORT_1_5_5_5_REV, "GL_UNSIGNED_SHORT_1_5_5_5_REV");
#endif
#if defined(GL_UNSIGNED_INT_8_8_8_8_REV)
defconsti(env, "GL-UNSIGNED-INT-8-8-8-8-REV", (GLenum) GL_UNSIGNED_INT_8_8_8_8_REV, "GL_UNSIGNED_INT_8_8_8_8_REV");
#endif
#if defined(GL_UNSIGNED_INT_2_10_10_10_REV)
defconsti(env, "GL-UNSIGNED-INT-2-10-10-10-REV", (GLenum) GL_UNSIGNED_INT_2_10_10_10_REV, "GL_UNSIGNED_INT_2_10_10_10_REV");
#endif
#if defined(GL_BGR)
defconsti(env, "GL-BGR", (GLenum) GL_BGR, "GL_BGR");
#endif
#if defined(GL_BGRA)
defconsti(env, "GL-BGRA", (GLenum) GL_BGRA, "GL_BGRA");
#endif
#if defined(GL_MAX_ELEMENTS_VERTICES)
defconsti(env, "GL-MAX-ELEMENTS-VERTICES", (GLenum) GL_MAX_ELEMENTS_VERTICES, "GL_MAX_ELEMENTS_VERTICES");
#endif
#if defined(GL_MAX_ELEMENTS_INDICES)
defconsti(env, "GL-MAX-ELEMENTS-INDICES", (GLenum) GL_MAX_ELEMENTS_INDICES, "GL_MAX_ELEMENTS_INDICES");
#endif
#if defined(GL_CLAMP_TO_EDGE)
defconsti(env, "GL-CLAMP-TO-EDGE", (GLenum) GL_CLAMP_TO_EDGE, "GL_CLAMP_TO_EDGE");
#endif
#if defined(GL_TEXTURE_MIN_LOD)
defconsti(env, "GL-TEXTURE-MIN-LOD", (GLenum) GL_TEXTURE_MIN_LOD, "GL_TEXTURE_MIN_LOD");
#endif
#if defined(GL_TEXTURE_MAX_LOD)
defconsti(env, "GL-TEXTURE-MAX-LOD", (GLenum) GL_TEXTURE_MAX_LOD, "GL_TEXTURE_MAX_LOD");
#endif
#if defined(GL_TEXTURE_BASE_LEVEL)
defconsti(env, "GL-TEXTURE-BASE-LEVEL", (GLenum) GL_TEXTURE_BASE_LEVEL, "GL_TEXTURE_BASE_LEVEL");
#endif
#if defined(GL_TEXTURE_MAX_LEVEL)
defconsti(env, "GL-TEXTURE-MAX-LEVEL", (GLenum) GL_TEXTURE_MAX_LEVEL, "GL_TEXTURE_MAX_LEVEL");
#endif
#if defined(GL_SMOOTH_POINT_SIZE_RANGE)
defconsti(env, "GL-SMOOTH-POINT-SIZE-RANGE", (GLenum) GL_SMOOTH_POINT_SIZE_RANGE, "GL_SMOOTH_POINT_SIZE_RANGE");
#endif
#if defined(GL_SMOOTH_POINT_SIZE_GRANULARITY)
defconsti(env, "GL-SMOOTH-POINT-SIZE-GRANULARITY", (GLenum) GL_SMOOTH_POINT_SIZE_GRANULARITY, "GL_SMOOTH_POINT_SIZE_GRANULARITY");
#endif
#if defined(GL_SMOOTH_LINE_WIDTH_RANGE)
defconsti(env, "GL-SMOOTH-LINE-WIDTH-RANGE", (GLenum) GL_SMOOTH_LINE_WIDTH_RANGE, "GL_SMOOTH_LINE_WIDTH_RANGE");
#endif
#if defined(GL_SMOOTH_LINE_WIDTH_GRANULARITY)
defconsti(env, "GL-SMOOTH-LINE-WIDTH-GRANULARITY", (GLenum) GL_SMOOTH_LINE_WIDTH_GRANULARITY, "GL_SMOOTH_LINE_WIDTH_GRANULARITY");
#endif
#if defined(GL_ALIASED_LINE_WIDTH_RANGE)
defconsti(env, "GL-ALIASED-LINE-WIDTH-RANGE", (GLenum) GL_ALIASED_LINE_WIDTH_RANGE, "GL_ALIASED_LINE_WIDTH_RANGE");
#endif
#if defined(GL_RESCALE_NORMAL)
defconsti(env, "GL-RESCALE-NORMAL", (GLenum) GL_RESCALE_NORMAL, "GL_RESCALE_NORMAL");
#endif
#if defined(GL_LIGHT_MODEL_COLOR_CONTROL)
defconsti(env, "GL-LIGHT-MODEL-COLOR-CONTROL", (GLenum) GL_LIGHT_MODEL_COLOR_CONTROL, "GL_LIGHT_MODEL_COLOR_CONTROL");
#endif
#if defined(GL_SINGLE_COLOR)
defconsti(env, "GL-SINGLE-COLOR", (GLenum) GL_SINGLE_COLOR, "GL_SINGLE_COLOR");
#endif
#if defined(GL_SEPARATE_SPECULAR_COLOR)
defconsti(env, "GL-SEPARATE-SPECULAR-COLOR", (GLenum) GL_SEPARATE_SPECULAR_COLOR, "GL_SEPARATE_SPECULAR_COLOR");
#endif
#if defined(GL_ALIASED_POINT_SIZE_RANGE)
defconsti(env, "GL-ALIASED-POINT-SIZE-RANGE", (GLenum) GL_ALIASED_POINT_SIZE_RANGE, "GL_ALIASED_POINT_SIZE_RANGE");
#endif
#if defined(GL_TEXTURE0)
defconsti(env, "GL-TEXTURE0", (GLenum) GL_TEXTURE0, "GL_TEXTURE0");
#endif
#if defined(GL_TEXTURE1)
defconsti(env, "GL-TEXTURE1", (GLenum) GL_TEXTURE1, "GL_TEXTURE1");
#endif
#if defined(GL_TEXTURE2)
defconsti(env, "GL-TEXTURE2", (GLenum) GL_TEXTURE2, "GL_TEXTURE2");
#endif
#if defined(GL_TEXTURE3)
defconsti(env, "GL-TEXTURE3", (GLenum) GL_TEXTURE3, "GL_TEXTURE3");
#endif
#if defined(GL_TEXTURE4)
defconsti(env, "GL-TEXTURE4", (GLenum) GL_TEXTURE4, "GL_TEXTURE4");
#endif
#if defined(GL_TEXTURE5)
defconsti(env, "GL-TEXTURE5", (GLenum) GL_TEXTURE5, "GL_TEXTURE5");
#endif
#if defined(GL_TEXTURE6)
defconsti(env, "GL-TEXTURE6", (GLenum) GL_TEXTURE6, "GL_TEXTURE6");
#endif
#if defined(GL_TEXTURE7)
defconsti(env, "GL-TEXTURE7", (GLenum) GL_TEXTURE7, "GL_TEXTURE7");
#endif
#if defined(GL_TEXTURE8)
defconsti(env, "GL-TEXTURE8", (GLenum) GL_TEXTURE8, "GL_TEXTURE8");
#endif
#if defined(GL_TEXTURE9)
defconsti(env, "GL-TEXTURE9", (GLenum) GL_TEXTURE9, "GL_TEXTURE9");
#endif
#if defined(GL_TEXTURE10)
defconsti(env, "GL-TEXTURE10", (GLenum) GL_TEXTURE10, "GL_TEXTURE10");
#endif
#if defined(GL_TEXTURE11)
defconsti(env, "GL-TEXTURE11", (GLenum) GL_TEXTURE11, "GL_TEXTURE11");
#endif
#if defined(GL_TEXTURE12)
defconsti(env, "GL-TEXTURE12", (GLenum) GL_TEXTURE12, "GL_TEXTURE12");
#endif
#if defined(GL_TEXTURE13)
defconsti(env, "GL-TEXTURE13", (GLenum) GL_TEXTURE13, "GL_TEXTURE13");
#endif
#if defined(GL_TEXTURE14)
defconsti(env, "GL-TEXTURE14", (GLenum) GL_TEXTURE14, "GL_TEXTURE14");
#endif
#if defined(GL_TEXTURE15)
defconsti(env, "GL-TEXTURE15", (GLenum) GL_TEXTURE15, "GL_TEXTURE15");
#endif
#if defined(GL_TEXTURE16)
defconsti(env, "GL-TEXTURE16", (GLenum) GL_TEXTURE16, "GL_TEXTURE16");
#endif
#if defined(GL_TEXTURE17)
defconsti(env, "GL-TEXTURE17", (GLenum) GL_TEXTURE17, "GL_TEXTURE17");
#endif
#if defined(GL_TEXTURE18)
defconsti(env, "GL-TEXTURE18", (GLenum) GL_TEXTURE18, "GL_TEXTURE18");
#endif
#if defined(GL_TEXTURE19)
defconsti(env, "GL-TEXTURE19", (GLenum) GL_TEXTURE19, "GL_TEXTURE19");
#endif
#if defined(GL_TEXTURE20)
defconsti(env, "GL-TEXTURE20", (GLenum) GL_TEXTURE20, "GL_TEXTURE20");
#endif
#if defined(GL_TEXTURE21)
defconsti(env, "GL-TEXTURE21", (GLenum) GL_TEXTURE21, "GL_TEXTURE21");
#endif
#if defined(GL_TEXTURE22)
defconsti(env, "GL-TEXTURE22", (GLenum) GL_TEXTURE22, "GL_TEXTURE22");
#endif
#if defined(GL_TEXTURE23)
defconsti(env, "GL-TEXTURE23", (GLenum) GL_TEXTURE23, "GL_TEXTURE23");
#endif
#if defined(GL_TEXTURE24)
defconsti(env, "GL-TEXTURE24", (GLenum) GL_TEXTURE24, "GL_TEXTURE24");
#endif
#if defined(GL_TEXTURE25)
defconsti(env, "GL-TEXTURE25", (GLenum) GL_TEXTURE25, "GL_TEXTURE25");
#endif
#if defined(GL_TEXTURE26)
defconsti(env, "GL-TEXTURE26", (GLenum) GL_TEXTURE26, "GL_TEXTURE26");
#endif
#if defined(GL_TEXTURE27)
defconsti(env, "GL-TEXTURE27", (GLenum) GL_TEXTURE27, "GL_TEXTURE27");
#endif
#if defined(GL_TEXTURE28)
defconsti(env, "GL-TEXTURE28", (GLenum) GL_TEXTURE28, "GL_TEXTURE28");
#endif
#if defined(GL_TEXTURE29)
defconsti(env, "GL-TEXTURE29", (GLenum) GL_TEXTURE29, "GL_TEXTURE29");
#endif
#if defined(GL_TEXTURE30)
defconsti(env, "GL-TEXTURE30", (GLenum) GL_TEXTURE30, "GL_TEXTURE30");
#endif
#if defined(GL_TEXTURE31)
defconsti(env, "GL-TEXTURE31", (GLenum) GL_TEXTURE31, "GL_TEXTURE31");
#endif
#if defined(GL_ACTIVE_TEXTURE)
defconsti(env, "GL-ACTIVE-TEXTURE", (GLenum) GL_ACTIVE_TEXTURE, "GL_ACTIVE_TEXTURE");
#endif
#if defined(GL_MULTISAMPLE)
defconsti(env, "GL-MULTISAMPLE", (GLenum) GL_MULTISAMPLE, "GL_MULTISAMPLE");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_COVERAGE)
defconsti(env, "GL-SAMPLE-ALPHA-TO-COVERAGE", (GLenum) GL_SAMPLE_ALPHA_TO_COVERAGE, "GL_SAMPLE_ALPHA_TO_COVERAGE");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_ONE)
defconsti(env, "GL-SAMPLE-ALPHA-TO-ONE", (GLenum) GL_SAMPLE_ALPHA_TO_ONE, "GL_SAMPLE_ALPHA_TO_ONE");
#endif
#if defined(GL_SAMPLE_COVERAGE)
defconsti(env, "GL-SAMPLE-COVERAGE", (GLenum) GL_SAMPLE_COVERAGE, "GL_SAMPLE_COVERAGE");
#endif
#if defined(GL_SAMPLE_BUFFERS)
defconsti(env, "GL-SAMPLE-BUFFERS", (GLenum) GL_SAMPLE_BUFFERS, "GL_SAMPLE_BUFFERS");
#endif
#if defined(GL_SAMPLES)
defconsti(env, "GL-SAMPLES", (GLenum) GL_SAMPLES, "GL_SAMPLES");
#endif
#if defined(GL_SAMPLE_COVERAGE_VALUE)
defconsti(env, "GL-SAMPLE-COVERAGE-VALUE", (GLenum) GL_SAMPLE_COVERAGE_VALUE, "GL_SAMPLE_COVERAGE_VALUE");
#endif
#if defined(GL_SAMPLE_COVERAGE_INVERT)
defconsti(env, "GL-SAMPLE-COVERAGE-INVERT", (GLenum) GL_SAMPLE_COVERAGE_INVERT, "GL_SAMPLE_COVERAGE_INVERT");
#endif
#if defined(GL_TEXTURE_CUBE_MAP)
defconsti(env, "GL-TEXTURE-CUBE-MAP", (GLenum) GL_TEXTURE_CUBE_MAP, "GL_TEXTURE_CUBE_MAP");
#endif
#if defined(GL_TEXTURE_BINDING_CUBE_MAP)
defconsti(env, "GL-TEXTURE-BINDING-CUBE-MAP", (GLenum) GL_TEXTURE_BINDING_CUBE_MAP, "GL_TEXTURE_BINDING_CUBE_MAP");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_X)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-X", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_X, "GL_TEXTURE_CUBE_MAP_POSITIVE_X");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_X)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-X", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_X, "GL_TEXTURE_CUBE_MAP_NEGATIVE_X");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_Y)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-Y", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_Y, "GL_TEXTURE_CUBE_MAP_POSITIVE_Y");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_Y)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-Y", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_Z)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-Z", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_Z, "GL_TEXTURE_CUBE_MAP_POSITIVE_Z");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_Z)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-Z", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z");
#endif
#if defined(GL_PROXY_TEXTURE_CUBE_MAP)
defconsti(env, "GL-PROXY-TEXTURE-CUBE-MAP", (GLenum) GL_PROXY_TEXTURE_CUBE_MAP, "GL_PROXY_TEXTURE_CUBE_MAP");
#endif
#if defined(GL_MAX_CUBE_MAP_TEXTURE_SIZE)
defconsti(env, "GL-MAX-CUBE-MAP-TEXTURE-SIZE", (GLenum) GL_MAX_CUBE_MAP_TEXTURE_SIZE, "GL_MAX_CUBE_MAP_TEXTURE_SIZE");
#endif
#if defined(GL_COMPRESSED_RGB)
defconsti(env, "GL-COMPRESSED-RGB", (GLenum) GL_COMPRESSED_RGB, "GL_COMPRESSED_RGB");
#endif
#if defined(GL_COMPRESSED_RGBA)
defconsti(env, "GL-COMPRESSED-RGBA", (GLenum) GL_COMPRESSED_RGBA, "GL_COMPRESSED_RGBA");
#endif
#if defined(GL_TEXTURE_COMPRESSION_HINT)
defconsti(env, "GL-TEXTURE-COMPRESSION-HINT", (GLenum) GL_TEXTURE_COMPRESSION_HINT, "GL_TEXTURE_COMPRESSION_HINT");
#endif
#if defined(GL_TEXTURE_COMPRESSED_IMAGE_SIZE)
defconsti(env, "GL-TEXTURE-COMPRESSED-IMAGE-SIZE", (GLenum) GL_TEXTURE_COMPRESSED_IMAGE_SIZE, "GL_TEXTURE_COMPRESSED_IMAGE_SIZE");
#endif
#if defined(GL_TEXTURE_COMPRESSED)
defconsti(env, "GL-TEXTURE-COMPRESSED", (GLenum) GL_TEXTURE_COMPRESSED, "GL_TEXTURE_COMPRESSED");
#endif
#if defined(GL_NUM_COMPRESSED_TEXTURE_FORMATS)
defconsti(env, "GL-NUM-COMPRESSED-TEXTURE-FORMATS", (GLenum) GL_NUM_COMPRESSED_TEXTURE_FORMATS, "GL_NUM_COMPRESSED_TEXTURE_FORMATS");
#endif
#if defined(GL_COMPRESSED_TEXTURE_FORMATS)
defconsti(env, "GL-COMPRESSED-TEXTURE-FORMATS", (GLenum) GL_COMPRESSED_TEXTURE_FORMATS, "GL_COMPRESSED_TEXTURE_FORMATS");
#endif
#if defined(GL_CLAMP_TO_BORDER)
defconsti(env, "GL-CLAMP-TO-BORDER", (GLenum) GL_CLAMP_TO_BORDER, "GL_CLAMP_TO_BORDER");
#endif
#if defined(GL_CLIENT_ACTIVE_TEXTURE)
defconsti(env, "GL-CLIENT-ACTIVE-TEXTURE", (GLenum) GL_CLIENT_ACTIVE_TEXTURE, "GL_CLIENT_ACTIVE_TEXTURE");
#endif
#if defined(GL_MAX_TEXTURE_UNITS)
defconsti(env, "GL-MAX-TEXTURE-UNITS", (GLenum) GL_MAX_TEXTURE_UNITS, "GL_MAX_TEXTURE_UNITS");
#endif
#if defined(GL_TRANSPOSE_MODELVIEW_MATRIX)
defconsti(env, "GL-TRANSPOSE-MODELVIEW-MATRIX", (GLenum) GL_TRANSPOSE_MODELVIEW_MATRIX, "GL_TRANSPOSE_MODELVIEW_MATRIX");
#endif
#if defined(GL_TRANSPOSE_PROJECTION_MATRIX)
defconsti(env, "GL-TRANSPOSE-PROJECTION-MATRIX", (GLenum) GL_TRANSPOSE_PROJECTION_MATRIX, "GL_TRANSPOSE_PROJECTION_MATRIX");
#endif
#if defined(GL_TRANSPOSE_TEXTURE_MATRIX)
defconsti(env, "GL-TRANSPOSE-TEXTURE-MATRIX", (GLenum) GL_TRANSPOSE_TEXTURE_MATRIX, "GL_TRANSPOSE_TEXTURE_MATRIX");
#endif
#if defined(GL_TRANSPOSE_COLOR_MATRIX)
defconsti(env, "GL-TRANSPOSE-COLOR-MATRIX", (GLenum) GL_TRANSPOSE_COLOR_MATRIX, "GL_TRANSPOSE_COLOR_MATRIX");
#endif
#if defined(GL_MULTISAMPLE_BIT)
defconsti(env, "GL-MULTISAMPLE-BIT", (GLenum) GL_MULTISAMPLE_BIT, "GL_MULTISAMPLE_BIT");
#endif
#if defined(GL_NORMAL_MAP)
defconsti(env, "GL-NORMAL-MAP", (GLenum) GL_NORMAL_MAP, "GL_NORMAL_MAP");
#endif
#if defined(GL_REFLECTION_MAP)
defconsti(env, "GL-REFLECTION-MAP", (GLenum) GL_REFLECTION_MAP, "GL_REFLECTION_MAP");
#endif
#if defined(GL_COMPRESSED_ALPHA)
defconsti(env, "GL-COMPRESSED-ALPHA", (GLenum) GL_COMPRESSED_ALPHA, "GL_COMPRESSED_ALPHA");
#endif
#if defined(GL_COMPRESSED_LUMINANCE)
defconsti(env, "GL-COMPRESSED-LUMINANCE", (GLenum) GL_COMPRESSED_LUMINANCE, "GL_COMPRESSED_LUMINANCE");
#endif
#if defined(GL_COMPRESSED_LUMINANCE_ALPHA)
defconsti(env, "GL-COMPRESSED-LUMINANCE-ALPHA", (GLenum) GL_COMPRESSED_LUMINANCE_ALPHA, "GL_COMPRESSED_LUMINANCE_ALPHA");
#endif
#if defined(GL_COMPRESSED_INTENSITY)
defconsti(env, "GL-COMPRESSED-INTENSITY", (GLenum) GL_COMPRESSED_INTENSITY, "GL_COMPRESSED_INTENSITY");
#endif
#if defined(GL_COMBINE)
defconsti(env, "GL-COMBINE", (GLenum) GL_COMBINE, "GL_COMBINE");
#endif
#if defined(GL_COMBINE_RGB)
defconsti(env, "GL-COMBINE-RGB", (GLenum) GL_COMBINE_RGB, "GL_COMBINE_RGB");
#endif
#if defined(GL_COMBINE_ALPHA)
defconsti(env, "GL-COMBINE-ALPHA", (GLenum) GL_COMBINE_ALPHA, "GL_COMBINE_ALPHA");
#endif
#if defined(GL_SOURCE0_RGB)
defconsti(env, "GL-SOURCE0-RGB", (GLenum) GL_SOURCE0_RGB, "GL_SOURCE0_RGB");
#endif
#if defined(GL_SOURCE1_RGB)
defconsti(env, "GL-SOURCE1-RGB", (GLenum) GL_SOURCE1_RGB, "GL_SOURCE1_RGB");
#endif
#if defined(GL_SOURCE2_RGB)
defconsti(env, "GL-SOURCE2-RGB", (GLenum) GL_SOURCE2_RGB, "GL_SOURCE2_RGB");
#endif
#if defined(GL_SOURCE0_ALPHA)
defconsti(env, "GL-SOURCE0-ALPHA", (GLenum) GL_SOURCE0_ALPHA, "GL_SOURCE0_ALPHA");
#endif
#if defined(GL_SOURCE1_ALPHA)
defconsti(env, "GL-SOURCE1-ALPHA", (GLenum) GL_SOURCE1_ALPHA, "GL_SOURCE1_ALPHA");
#endif
#if defined(GL_SOURCE2_ALPHA)
defconsti(env, "GL-SOURCE2-ALPHA", (GLenum) GL_SOURCE2_ALPHA, "GL_SOURCE2_ALPHA");
#endif
#if defined(GL_OPERAND0_RGB)
defconsti(env, "GL-OPERAND0-RGB", (GLenum) GL_OPERAND0_RGB, "GL_OPERAND0_RGB");
#endif
#if defined(GL_OPERAND1_RGB)
defconsti(env, "GL-OPERAND1-RGB", (GLenum) GL_OPERAND1_RGB, "GL_OPERAND1_RGB");
#endif
#if defined(GL_OPERAND2_RGB)
defconsti(env, "GL-OPERAND2-RGB", (GLenum) GL_OPERAND2_RGB, "GL_OPERAND2_RGB");
#endif
#if defined(GL_OPERAND0_ALPHA)
defconsti(env, "GL-OPERAND0-ALPHA", (GLenum) GL_OPERAND0_ALPHA, "GL_OPERAND0_ALPHA");
#endif
#if defined(GL_OPERAND1_ALPHA)
defconsti(env, "GL-OPERAND1-ALPHA", (GLenum) GL_OPERAND1_ALPHA, "GL_OPERAND1_ALPHA");
#endif
#if defined(GL_OPERAND2_ALPHA)
defconsti(env, "GL-OPERAND2-ALPHA", (GLenum) GL_OPERAND2_ALPHA, "GL_OPERAND2_ALPHA");
#endif
#if defined(GL_RGB_SCALE)
defconsti(env, "GL-RGB-SCALE", (GLenum) GL_RGB_SCALE, "GL_RGB_SCALE");
#endif
#if defined(GL_ADD_SIGNED)
defconsti(env, "GL-ADD-SIGNED", (GLenum) GL_ADD_SIGNED, "GL_ADD_SIGNED");
#endif
#if defined(GL_INTERPOLATE)
defconsti(env, "GL-INTERPOLATE", (GLenum) GL_INTERPOLATE, "GL_INTERPOLATE");
#endif
#if defined(GL_SUBTRACT)
defconsti(env, "GL-SUBTRACT", (GLenum) GL_SUBTRACT, "GL_SUBTRACT");
#endif
#if defined(GL_CONSTANT)
defconsti(env, "GL-CONSTANT", (GLenum) GL_CONSTANT, "GL_CONSTANT");
#endif
#if defined(GL_PRIMARY_COLOR)
defconsti(env, "GL-PRIMARY-COLOR", (GLenum) GL_PRIMARY_COLOR, "GL_PRIMARY_COLOR");
#endif
#if defined(GL_PREVIOUS)
defconsti(env, "GL-PREVIOUS", (GLenum) GL_PREVIOUS, "GL_PREVIOUS");
#endif
#if defined(GL_DOT3_RGB)
defconsti(env, "GL-DOT3-RGB", (GLenum) GL_DOT3_RGB, "GL_DOT3_RGB");
#endif
#if defined(GL_DOT3_RGBA)
defconsti(env, "GL-DOT3-RGBA", (GLenum) GL_DOT3_RGBA, "GL_DOT3_RGBA");
#endif
#if defined(GL_BLEND_DST_RGB)
defconsti(env, "GL-BLEND-DST-RGB", (GLenum) GL_BLEND_DST_RGB, "GL_BLEND_DST_RGB");
#endif
#if defined(GL_BLEND_SRC_RGB)
defconsti(env, "GL-BLEND-SRC-RGB", (GLenum) GL_BLEND_SRC_RGB, "GL_BLEND_SRC_RGB");
#endif
#if defined(GL_BLEND_DST_ALPHA)
defconsti(env, "GL-BLEND-DST-ALPHA", (GLenum) GL_BLEND_DST_ALPHA, "GL_BLEND_DST_ALPHA");
#endif
#if defined(GL_BLEND_SRC_ALPHA)
defconsti(env, "GL-BLEND-SRC-ALPHA", (GLenum) GL_BLEND_SRC_ALPHA, "GL_BLEND_SRC_ALPHA");
#endif
#if defined(GL_POINT_FADE_THRESHOLD_SIZE)
defconsti(env, "GL-POINT-FADE-THRESHOLD-SIZE", (GLenum) GL_POINT_FADE_THRESHOLD_SIZE, "GL_POINT_FADE_THRESHOLD_SIZE");
#endif
#if defined(GL_DEPTH_COMPONENT16)
defconsti(env, "GL-DEPTH-COMPONENT16", (GLenum) GL_DEPTH_COMPONENT16, "GL_DEPTH_COMPONENT16");
#endif
#if defined(GL_DEPTH_COMPONENT24)
defconsti(env, "GL-DEPTH-COMPONENT24", (GLenum) GL_DEPTH_COMPONENT24, "GL_DEPTH_COMPONENT24");
#endif
#if defined(GL_DEPTH_COMPONENT32)
defconsti(env, "GL-DEPTH-COMPONENT32", (GLenum) GL_DEPTH_COMPONENT32, "GL_DEPTH_COMPONENT32");
#endif
#if defined(GL_MIRRORED_REPEAT)
defconsti(env, "GL-MIRRORED-REPEAT", (GLenum) GL_MIRRORED_REPEAT, "GL_MIRRORED_REPEAT");
#endif
#if defined(GL_MAX_TEXTURE_LOD_BIAS)
defconsti(env, "GL-MAX-TEXTURE-LOD-BIAS", (GLenum) GL_MAX_TEXTURE_LOD_BIAS, "GL_MAX_TEXTURE_LOD_BIAS");
#endif
#if defined(GL_TEXTURE_LOD_BIAS)
defconsti(env, "GL-TEXTURE-LOD-BIAS", (GLenum) GL_TEXTURE_LOD_BIAS, "GL_TEXTURE_LOD_BIAS");
#endif
#if defined(GL_INCR_WRAP)
defconsti(env, "GL-INCR-WRAP", (GLenum) GL_INCR_WRAP, "GL_INCR_WRAP");
#endif
#if defined(GL_DECR_WRAP)
defconsti(env, "GL-DECR-WRAP", (GLenum) GL_DECR_WRAP, "GL_DECR_WRAP");
#endif
#if defined(GL_TEXTURE_DEPTH_SIZE)
defconsti(env, "GL-TEXTURE-DEPTH-SIZE", (GLenum) GL_TEXTURE_DEPTH_SIZE, "GL_TEXTURE_DEPTH_SIZE");
#endif
#if defined(GL_TEXTURE_COMPARE_MODE)
defconsti(env, "GL-TEXTURE-COMPARE-MODE", (GLenum) GL_TEXTURE_COMPARE_MODE, "GL_TEXTURE_COMPARE_MODE");
#endif
#if defined(GL_TEXTURE_COMPARE_FUNC)
defconsti(env, "GL-TEXTURE-COMPARE-FUNC", (GLenum) GL_TEXTURE_COMPARE_FUNC, "GL_TEXTURE_COMPARE_FUNC");
#endif
#if defined(GL_POINT_SIZE_MIN)
defconsti(env, "GL-POINT-SIZE-MIN", (GLenum) GL_POINT_SIZE_MIN, "GL_POINT_SIZE_MIN");
#endif
#if defined(GL_POINT_SIZE_MAX)
defconsti(env, "GL-POINT-SIZE-MAX", (GLenum) GL_POINT_SIZE_MAX, "GL_POINT_SIZE_MAX");
#endif
#if defined(GL_POINT_DISTANCE_ATTENUATION)
defconsti(env, "GL-POINT-DISTANCE-ATTENUATION", (GLenum) GL_POINT_DISTANCE_ATTENUATION, "GL_POINT_DISTANCE_ATTENUATION");
#endif
#if defined(GL_GENERATE_MIPMAP)
defconsti(env, "GL-GENERATE-MIPMAP", (GLenum) GL_GENERATE_MIPMAP, "GL_GENERATE_MIPMAP");
#endif
#if defined(GL_GENERATE_MIPMAP_HINT)
defconsti(env, "GL-GENERATE-MIPMAP-HINT", (GLenum) GL_GENERATE_MIPMAP_HINT, "GL_GENERATE_MIPMAP_HINT");
#endif
#if defined(GL_FOG_COORDINATE_SOURCE)
defconsti(env, "GL-FOG-COORDINATE-SOURCE", (GLenum) GL_FOG_COORDINATE_SOURCE, "GL_FOG_COORDINATE_SOURCE");
#endif
#if defined(GL_FOG_COORDINATE)
defconsti(env, "GL-FOG-COORDINATE", (GLenum) GL_FOG_COORDINATE, "GL_FOG_COORDINATE");
#endif
#if defined(GL_FRAGMENT_DEPTH)
defconsti(env, "GL-FRAGMENT-DEPTH", (GLenum) GL_FRAGMENT_DEPTH, "GL_FRAGMENT_DEPTH");
#endif
#if defined(GL_CURRENT_FOG_COORDINATE)
defconsti(env, "GL-CURRENT-FOG-COORDINATE", (GLenum) GL_CURRENT_FOG_COORDINATE, "GL_CURRENT_FOG_COORDINATE");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY_TYPE)
defconsti(env, "GL-FOG-COORDINATE-ARRAY-TYPE", (GLenum) GL_FOG_COORDINATE_ARRAY_TYPE, "GL_FOG_COORDINATE_ARRAY_TYPE");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY_STRIDE)
defconsti(env, "GL-FOG-COORDINATE-ARRAY-STRIDE", (GLenum) GL_FOG_COORDINATE_ARRAY_STRIDE, "GL_FOG_COORDINATE_ARRAY_STRIDE");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY_POINTER)
defconsti(env, "GL-FOG-COORDINATE-ARRAY-POINTER", (GLenum) GL_FOG_COORDINATE_ARRAY_POINTER, "GL_FOG_COORDINATE_ARRAY_POINTER");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY)
defconsti(env, "GL-FOG-COORDINATE-ARRAY", (GLenum) GL_FOG_COORDINATE_ARRAY, "GL_FOG_COORDINATE_ARRAY");
#endif
#if defined(GL_COLOR_SUM)
defconsti(env, "GL-COLOR-SUM", (GLenum) GL_COLOR_SUM, "GL_COLOR_SUM");
#endif
#if defined(GL_CURRENT_SECONDARY_COLOR)
defconsti(env, "GL-CURRENT-SECONDARY-COLOR", (GLenum) GL_CURRENT_SECONDARY_COLOR, "GL_CURRENT_SECONDARY_COLOR");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_SIZE)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-SIZE", (GLenum) GL_SECONDARY_COLOR_ARRAY_SIZE, "GL_SECONDARY_COLOR_ARRAY_SIZE");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_TYPE)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-TYPE", (GLenum) GL_SECONDARY_COLOR_ARRAY_TYPE, "GL_SECONDARY_COLOR_ARRAY_TYPE");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_STRIDE)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-STRIDE", (GLenum) GL_SECONDARY_COLOR_ARRAY_STRIDE, "GL_SECONDARY_COLOR_ARRAY_STRIDE");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_POINTER)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-POINTER", (GLenum) GL_SECONDARY_COLOR_ARRAY_POINTER, "GL_SECONDARY_COLOR_ARRAY_POINTER");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY", (GLenum) GL_SECONDARY_COLOR_ARRAY, "GL_SECONDARY_COLOR_ARRAY");
#endif
#if defined(GL_TEXTURE_FILTER_CONTROL)
defconsti(env, "GL-TEXTURE-FILTER-CONTROL", (GLenum) GL_TEXTURE_FILTER_CONTROL, "GL_TEXTURE_FILTER_CONTROL");
#endif
#if defined(GL_DEPTH_TEXTURE_MODE)
defconsti(env, "GL-DEPTH-TEXTURE-MODE", (GLenum) GL_DEPTH_TEXTURE_MODE, "GL_DEPTH_TEXTURE_MODE");
#endif
#if defined(GL_COMPARE_R_TO_TEXTURE)
defconsti(env, "GL-COMPARE-R-TO-TEXTURE", (GLenum) GL_COMPARE_R_TO_TEXTURE, "GL_COMPARE_R_TO_TEXTURE");
#endif
#if defined(GL_BLEND_COLOR)
defconsti(env, "GL-BLEND-COLOR", (GLenum) GL_BLEND_COLOR, "GL_BLEND_COLOR");
#endif
#if defined(GL_BLEND_EQUATION)
defconsti(env, "GL-BLEND-EQUATION", (GLenum) GL_BLEND_EQUATION, "GL_BLEND_EQUATION");
#endif
#if defined(GL_CONSTANT_COLOR)
defconsti(env, "GL-CONSTANT-COLOR", (GLenum) GL_CONSTANT_COLOR, "GL_CONSTANT_COLOR");
#endif
#if defined(GL_ONE_MINUS_CONSTANT_COLOR)
defconsti(env, "GL-ONE-MINUS-CONSTANT-COLOR", (GLenum) GL_ONE_MINUS_CONSTANT_COLOR, "GL_ONE_MINUS_CONSTANT_COLOR");
#endif
#if defined(GL_CONSTANT_ALPHA)
defconsti(env, "GL-CONSTANT-ALPHA", (GLenum) GL_CONSTANT_ALPHA, "GL_CONSTANT_ALPHA");
#endif
#if defined(GL_ONE_MINUS_CONSTANT_ALPHA)
defconsti(env, "GL-ONE-MINUS-CONSTANT-ALPHA", (GLenum) GL_ONE_MINUS_CONSTANT_ALPHA, "GL_ONE_MINUS_CONSTANT_ALPHA");
#endif
#if defined(GL_FUNC_ADD)
defconsti(env, "GL-FUNC-ADD", (GLenum) GL_FUNC_ADD, "GL_FUNC_ADD");
#endif
#if defined(GL_FUNC_REVERSE_SUBTRACT)
defconsti(env, "GL-FUNC-REVERSE-SUBTRACT", (GLenum) GL_FUNC_REVERSE_SUBTRACT, "GL_FUNC_REVERSE_SUBTRACT");
#endif
#if defined(GL_FUNC_SUBTRACT)
defconsti(env, "GL-FUNC-SUBTRACT", (GLenum) GL_FUNC_SUBTRACT, "GL_FUNC_SUBTRACT");
#endif
#if defined(GL_MIN)
defconsti(env, "GL-MIN", (GLenum) GL_MIN, "GL_MIN");
#endif
#if defined(GL_MAX)
defconsti(env, "GL-MAX", (GLenum) GL_MAX, "GL_MAX");
#endif
#if defined(GL_BUFFER_SIZE)
defconsti(env, "GL-BUFFER-SIZE", (GLenum) GL_BUFFER_SIZE, "GL_BUFFER_SIZE");
#endif
#if defined(GL_BUFFER_USAGE)
defconsti(env, "GL-BUFFER-USAGE", (GLenum) GL_BUFFER_USAGE, "GL_BUFFER_USAGE");
#endif
#if defined(GL_QUERY_COUNTER_BITS)
defconsti(env, "GL-QUERY-COUNTER-BITS", (GLenum) GL_QUERY_COUNTER_BITS, "GL_QUERY_COUNTER_BITS");
#endif
#if defined(GL_CURRENT_QUERY)
defconsti(env, "GL-CURRENT-QUERY", (GLenum) GL_CURRENT_QUERY, "GL_CURRENT_QUERY");
#endif
#if defined(GL_QUERY_RESULT)
defconsti(env, "GL-QUERY-RESULT", (GLenum) GL_QUERY_RESULT, "GL_QUERY_RESULT");
#endif
#if defined(GL_QUERY_RESULT_AVAILABLE)
defconsti(env, "GL-QUERY-RESULT-AVAILABLE", (GLenum) GL_QUERY_RESULT_AVAILABLE, "GL_QUERY_RESULT_AVAILABLE");
#endif
#if defined(GL_ARRAY_BUFFER)
defconsti(env, "GL-ARRAY-BUFFER", (GLenum) GL_ARRAY_BUFFER, "GL_ARRAY_BUFFER");
#endif
#if defined(GL_ELEMENT_ARRAY_BUFFER)
defconsti(env, "GL-ELEMENT-ARRAY-BUFFER", (GLenum) GL_ELEMENT_ARRAY_BUFFER, "GL_ELEMENT_ARRAY_BUFFER");
#endif
#if defined(GL_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-ARRAY-BUFFER-BINDING", (GLenum) GL_ARRAY_BUFFER_BINDING, "GL_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_ELEMENT_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-ELEMENT-ARRAY-BUFFER-BINDING", (GLenum) GL_ELEMENT_ARRAY_BUFFER_BINDING, "GL_ELEMENT_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-BUFFER-BINDING", (GLenum) GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, "GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_READ_ONLY)
defconsti(env, "GL-READ-ONLY", (GLenum) GL_READ_ONLY, "GL_READ_ONLY");
#endif
#if defined(GL_WRITE_ONLY)
defconsti(env, "GL-WRITE-ONLY", (GLenum) GL_WRITE_ONLY, "GL_WRITE_ONLY");
#endif
#if defined(GL_READ_WRITE)
defconsti(env, "GL-READ-WRITE", (GLenum) GL_READ_WRITE, "GL_READ_WRITE");
#endif
#if defined(GL_BUFFER_ACCESS)
defconsti(env, "GL-BUFFER-ACCESS", (GLenum) GL_BUFFER_ACCESS, "GL_BUFFER_ACCESS");
#endif
#if defined(GL_BUFFER_MAPPED)
defconsti(env, "GL-BUFFER-MAPPED", (GLenum) GL_BUFFER_MAPPED, "GL_BUFFER_MAPPED");
#endif
#if defined(GL_BUFFER_MAP_POINTER)
defconsti(env, "GL-BUFFER-MAP-POINTER", (GLenum) GL_BUFFER_MAP_POINTER, "GL_BUFFER_MAP_POINTER");
#endif
#if defined(GL_STREAM_DRAW)
defconsti(env, "GL-STREAM-DRAW", (GLenum) GL_STREAM_DRAW, "GL_STREAM_DRAW");
#endif
#if defined(GL_STREAM_READ)
defconsti(env, "GL-STREAM-READ", (GLenum) GL_STREAM_READ, "GL_STREAM_READ");
#endif
#if defined(GL_STREAM_COPY)
defconsti(env, "GL-STREAM-COPY", (GLenum) GL_STREAM_COPY, "GL_STREAM_COPY");
#endif
#if defined(GL_STATIC_DRAW)
defconsti(env, "GL-STATIC-DRAW", (GLenum) GL_STATIC_DRAW, "GL_STATIC_DRAW");
#endif
#if defined(GL_STATIC_READ)
defconsti(env, "GL-STATIC-READ", (GLenum) GL_STATIC_READ, "GL_STATIC_READ");
#endif
#if defined(GL_STATIC_COPY)
defconsti(env, "GL-STATIC-COPY", (GLenum) GL_STATIC_COPY, "GL_STATIC_COPY");
#endif
#if defined(GL_DYNAMIC_DRAW)
defconsti(env, "GL-DYNAMIC-DRAW", (GLenum) GL_DYNAMIC_DRAW, "GL_DYNAMIC_DRAW");
#endif
#if defined(GL_DYNAMIC_READ)
defconsti(env, "GL-DYNAMIC-READ", (GLenum) GL_DYNAMIC_READ, "GL_DYNAMIC_READ");
#endif
#if defined(GL_DYNAMIC_COPY)
defconsti(env, "GL-DYNAMIC-COPY", (GLenum) GL_DYNAMIC_COPY, "GL_DYNAMIC_COPY");
#endif
#if defined(GL_SAMPLES_PASSED)
defconsti(env, "GL-SAMPLES-PASSED", (GLenum) GL_SAMPLES_PASSED, "GL_SAMPLES_PASSED");
#endif
#if defined(GL_SRC1_ALPHA)
defconsti(env, "GL-SRC1-ALPHA", (GLenum) GL_SRC1_ALPHA, "GL_SRC1_ALPHA");
#endif
#if defined(GL_VERTEX_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-VERTEX-ARRAY-BUFFER-BINDING", (GLenum) GL_VERTEX_ARRAY_BUFFER_BINDING, "GL_VERTEX_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_NORMAL_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-NORMAL-ARRAY-BUFFER-BINDING", (GLenum) GL_NORMAL_ARRAY_BUFFER_BINDING, "GL_NORMAL_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_COLOR_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-COLOR-ARRAY-BUFFER-BINDING", (GLenum) GL_COLOR_ARRAY_BUFFER_BINDING, "GL_COLOR_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_INDEX_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-INDEX-ARRAY-BUFFER-BINDING", (GLenum) GL_INDEX_ARRAY_BUFFER_BINDING, "GL_INDEX_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-BUFFER-BINDING", (GLenum) GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING, "GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-EDGE-FLAG-ARRAY-BUFFER-BINDING", (GLenum) GL_EDGE_FLAG_ARRAY_BUFFER_BINDING, "GL_EDGE_FLAG_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-BUFFER-BINDING", (GLenum) GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING, "GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-FOG-COORDINATE-ARRAY-BUFFER-BINDING", (GLenum) GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING, "GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_WEIGHT_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-WEIGHT-ARRAY-BUFFER-BINDING", (GLenum) GL_WEIGHT_ARRAY_BUFFER_BINDING, "GL_WEIGHT_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_FOG_COORD_SRC)
defconsti(env, "GL-FOG-COORD-SRC", (GLenum) GL_FOG_COORD_SRC, "GL_FOG_COORD_SRC");
#endif
#if defined(GL_FOG_COORD)
defconsti(env, "GL-FOG-COORD", (GLenum) GL_FOG_COORD, "GL_FOG_COORD");
#endif
#if defined(GL_CURRENT_FOG_COORD)
defconsti(env, "GL-CURRENT-FOG-COORD", (GLenum) GL_CURRENT_FOG_COORD, "GL_CURRENT_FOG_COORD");
#endif
#if defined(GL_FOG_COORD_ARRAY_TYPE)
defconsti(env, "GL-FOG-COORD-ARRAY-TYPE", (GLenum) GL_FOG_COORD_ARRAY_TYPE, "GL_FOG_COORD_ARRAY_TYPE");
#endif
#if defined(GL_FOG_COORD_ARRAY_STRIDE)
defconsti(env, "GL-FOG-COORD-ARRAY-STRIDE", (GLenum) GL_FOG_COORD_ARRAY_STRIDE, "GL_FOG_COORD_ARRAY_STRIDE");
#endif
#if defined(GL_FOG_COORD_ARRAY_POINTER)
defconsti(env, "GL-FOG-COORD-ARRAY-POINTER", (GLenum) GL_FOG_COORD_ARRAY_POINTER, "GL_FOG_COORD_ARRAY_POINTER");
#endif
#if defined(GL_FOG_COORD_ARRAY)
defconsti(env, "GL-FOG-COORD-ARRAY", (GLenum) GL_FOG_COORD_ARRAY, "GL_FOG_COORD_ARRAY");
#endif
#if defined(GL_FOG_COORD_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-FOG-COORD-ARRAY-BUFFER-BINDING", (GLenum) GL_FOG_COORD_ARRAY_BUFFER_BINDING, "GL_FOG_COORD_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_SRC0_RGB)
defconsti(env, "GL-SRC0-RGB", (GLenum) GL_SRC0_RGB, "GL_SRC0_RGB");
#endif
#if defined(GL_SRC1_RGB)
defconsti(env, "GL-SRC1-RGB", (GLenum) GL_SRC1_RGB, "GL_SRC1_RGB");
#endif
#if defined(GL_SRC2_RGB)
defconsti(env, "GL-SRC2-RGB", (GLenum) GL_SRC2_RGB, "GL_SRC2_RGB");
#endif
#if defined(GL_SRC0_ALPHA)
defconsti(env, "GL-SRC0-ALPHA", (GLenum) GL_SRC0_ALPHA, "GL_SRC0_ALPHA");
#endif
#if defined(GL_SRC2_ALPHA)
defconsti(env, "GL-SRC2-ALPHA", (GLenum) GL_SRC2_ALPHA, "GL_SRC2_ALPHA");
#endif
#if defined(GL_BLEND_EQUATION_RGB)
defconsti(env, "GL-BLEND-EQUATION-RGB", (GLenum) GL_BLEND_EQUATION_RGB, "GL_BLEND_EQUATION_RGB");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_ENABLED)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-ENABLED", (GLenum) GL_VERTEX_ATTRIB_ARRAY_ENABLED, "GL_VERTEX_ATTRIB_ARRAY_ENABLED");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_SIZE)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-SIZE", (GLenum) GL_VERTEX_ATTRIB_ARRAY_SIZE, "GL_VERTEX_ATTRIB_ARRAY_SIZE");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_STRIDE)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-STRIDE", (GLenum) GL_VERTEX_ATTRIB_ARRAY_STRIDE, "GL_VERTEX_ATTRIB_ARRAY_STRIDE");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_TYPE)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-TYPE", (GLenum) GL_VERTEX_ATTRIB_ARRAY_TYPE, "GL_VERTEX_ATTRIB_ARRAY_TYPE");
#endif
#if defined(GL_CURRENT_VERTEX_ATTRIB)
defconsti(env, "GL-CURRENT-VERTEX-ATTRIB", (GLenum) GL_CURRENT_VERTEX_ATTRIB, "GL_CURRENT_VERTEX_ATTRIB");
#endif
#if defined(GL_VERTEX_PROGRAM_POINT_SIZE)
defconsti(env, "GL-VERTEX-PROGRAM-POINT-SIZE", (GLenum) GL_VERTEX_PROGRAM_POINT_SIZE, "GL_VERTEX_PROGRAM_POINT_SIZE");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_POINTER)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-POINTER", (GLenum) GL_VERTEX_ATTRIB_ARRAY_POINTER, "GL_VERTEX_ATTRIB_ARRAY_POINTER");
#endif
#if defined(GL_STENCIL_BACK_FUNC)
defconsti(env, "GL-STENCIL-BACK-FUNC", (GLenum) GL_STENCIL_BACK_FUNC, "GL_STENCIL_BACK_FUNC");
#endif
#if defined(GL_STENCIL_BACK_FAIL)
defconsti(env, "GL-STENCIL-BACK-FAIL", (GLenum) GL_STENCIL_BACK_FAIL, "GL_STENCIL_BACK_FAIL");
#endif
#if defined(GL_STENCIL_BACK_PASS_DEPTH_FAIL)
defconsti(env, "GL-STENCIL-BACK-PASS-DEPTH-FAIL", (GLenum) GL_STENCIL_BACK_PASS_DEPTH_FAIL, "GL_STENCIL_BACK_PASS_DEPTH_FAIL");
#endif
#if defined(GL_STENCIL_BACK_PASS_DEPTH_PASS)
defconsti(env, "GL-STENCIL-BACK-PASS-DEPTH-PASS", (GLenum) GL_STENCIL_BACK_PASS_DEPTH_PASS, "GL_STENCIL_BACK_PASS_DEPTH_PASS");
#endif
#if defined(GL_MAX_DRAW_BUFFERS)
defconsti(env, "GL-MAX-DRAW-BUFFERS", (GLenum) GL_MAX_DRAW_BUFFERS, "GL_MAX_DRAW_BUFFERS");
#endif
#if defined(GL_DRAW_BUFFER0)
defconsti(env, "GL-DRAW-BUFFER0", (GLenum) GL_DRAW_BUFFER0, "GL_DRAW_BUFFER0");
#endif
#if defined(GL_DRAW_BUFFER1)
defconsti(env, "GL-DRAW-BUFFER1", (GLenum) GL_DRAW_BUFFER1, "GL_DRAW_BUFFER1");
#endif
#if defined(GL_DRAW_BUFFER2)
defconsti(env, "GL-DRAW-BUFFER2", (GLenum) GL_DRAW_BUFFER2, "GL_DRAW_BUFFER2");
#endif
#if defined(GL_DRAW_BUFFER3)
defconsti(env, "GL-DRAW-BUFFER3", (GLenum) GL_DRAW_BUFFER3, "GL_DRAW_BUFFER3");
#endif
#if defined(GL_DRAW_BUFFER4)
defconsti(env, "GL-DRAW-BUFFER4", (GLenum) GL_DRAW_BUFFER4, "GL_DRAW_BUFFER4");
#endif
#if defined(GL_DRAW_BUFFER5)
defconsti(env, "GL-DRAW-BUFFER5", (GLenum) GL_DRAW_BUFFER5, "GL_DRAW_BUFFER5");
#endif
#if defined(GL_DRAW_BUFFER6)
defconsti(env, "GL-DRAW-BUFFER6", (GLenum) GL_DRAW_BUFFER6, "GL_DRAW_BUFFER6");
#endif
#if defined(GL_DRAW_BUFFER7)
defconsti(env, "GL-DRAW-BUFFER7", (GLenum) GL_DRAW_BUFFER7, "GL_DRAW_BUFFER7");
#endif
#if defined(GL_DRAW_BUFFER8)
defconsti(env, "GL-DRAW-BUFFER8", (GLenum) GL_DRAW_BUFFER8, "GL_DRAW_BUFFER8");
#endif
#if defined(GL_DRAW_BUFFER9)
defconsti(env, "GL-DRAW-BUFFER9", (GLenum) GL_DRAW_BUFFER9, "GL_DRAW_BUFFER9");
#endif
#if defined(GL_DRAW_BUFFER10)
defconsti(env, "GL-DRAW-BUFFER10", (GLenum) GL_DRAW_BUFFER10, "GL_DRAW_BUFFER10");
#endif
#if defined(GL_DRAW_BUFFER11)
defconsti(env, "GL-DRAW-BUFFER11", (GLenum) GL_DRAW_BUFFER11, "GL_DRAW_BUFFER11");
#endif
#if defined(GL_DRAW_BUFFER12)
defconsti(env, "GL-DRAW-BUFFER12", (GLenum) GL_DRAW_BUFFER12, "GL_DRAW_BUFFER12");
#endif
#if defined(GL_DRAW_BUFFER13)
defconsti(env, "GL-DRAW-BUFFER13", (GLenum) GL_DRAW_BUFFER13, "GL_DRAW_BUFFER13");
#endif
#if defined(GL_DRAW_BUFFER14)
defconsti(env, "GL-DRAW-BUFFER14", (GLenum) GL_DRAW_BUFFER14, "GL_DRAW_BUFFER14");
#endif
#if defined(GL_DRAW_BUFFER15)
defconsti(env, "GL-DRAW-BUFFER15", (GLenum) GL_DRAW_BUFFER15, "GL_DRAW_BUFFER15");
#endif
#if defined(GL_BLEND_EQUATION_ALPHA)
defconsti(env, "GL-BLEND-EQUATION-ALPHA", (GLenum) GL_BLEND_EQUATION_ALPHA, "GL_BLEND_EQUATION_ALPHA");
#endif
#if defined(GL_MAX_VERTEX_ATTRIBS)
defconsti(env, "GL-MAX-VERTEX-ATTRIBS", (GLenum) GL_MAX_VERTEX_ATTRIBS, "GL_MAX_VERTEX_ATTRIBS");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_NORMALIZED)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-NORMALIZED", (GLenum) GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, "GL_VERTEX_ATTRIB_ARRAY_NORMALIZED");
#endif
#if defined(GL_MAX_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_TEXTURE_IMAGE_UNITS, "GL_MAX_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_FRAGMENT_SHADER)
defconsti(env, "GL-FRAGMENT-SHADER", (GLenum) GL_FRAGMENT_SHADER, "GL_FRAGMENT_SHADER");
#endif
#if defined(GL_VERTEX_SHADER)
defconsti(env, "GL-VERTEX-SHADER", (GLenum) GL_VERTEX_SHADER, "GL_VERTEX_SHADER");
#endif
#if defined(GL_MAX_FRAGMENT_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-FRAGMENT-UNIFORM-COMPONENTS", (GLenum) GL_MAX_FRAGMENT_UNIFORM_COMPONENTS, "GL_MAX_FRAGMENT_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_VERTEX_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-VERTEX-UNIFORM-COMPONENTS", (GLenum) GL_MAX_VERTEX_UNIFORM_COMPONENTS, "GL_MAX_VERTEX_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_VARYING_FLOATS)
defconsti(env, "GL-MAX-VARYING-FLOATS", (GLenum) GL_MAX_VARYING_FLOATS, "GL_MAX_VARYING_FLOATS");
#endif
#if defined(GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-VERTEX-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS, "GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-COMBINED-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS, "GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_SHADER_TYPE)
defconsti(env, "GL-SHADER-TYPE", (GLenum) GL_SHADER_TYPE, "GL_SHADER_TYPE");
#endif
#if defined(GL_FLOAT_VEC2)
defconsti(env, "GL-FLOAT-VEC2", (GLenum) GL_FLOAT_VEC2, "GL_FLOAT_VEC2");
#endif
#if defined(GL_FLOAT_VEC3)
defconsti(env, "GL-FLOAT-VEC3", (GLenum) GL_FLOAT_VEC3, "GL_FLOAT_VEC3");
#endif
#if defined(GL_FLOAT_VEC4)
defconsti(env, "GL-FLOAT-VEC4", (GLenum) GL_FLOAT_VEC4, "GL_FLOAT_VEC4");
#endif
#if defined(GL_INT_VEC2)
defconsti(env, "GL-INT-VEC2", (GLenum) GL_INT_VEC2, "GL_INT_VEC2");
#endif
#if defined(GL_INT_VEC3)
defconsti(env, "GL-INT-VEC3", (GLenum) GL_INT_VEC3, "GL_INT_VEC3");
#endif
#if defined(GL_INT_VEC4)
defconsti(env, "GL-INT-VEC4", (GLenum) GL_INT_VEC4, "GL_INT_VEC4");
#endif
#if defined(GL_BOOL)
defconsti(env, "GL-BOOL", (GLenum) GL_BOOL, "GL_BOOL");
#endif
#if defined(GL_BOOL_VEC2)
defconsti(env, "GL-BOOL-VEC2", (GLenum) GL_BOOL_VEC2, "GL_BOOL_VEC2");
#endif
#if defined(GL_BOOL_VEC3)
defconsti(env, "GL-BOOL-VEC3", (GLenum) GL_BOOL_VEC3, "GL_BOOL_VEC3");
#endif
#if defined(GL_BOOL_VEC4)
defconsti(env, "GL-BOOL-VEC4", (GLenum) GL_BOOL_VEC4, "GL_BOOL_VEC4");
#endif
#if defined(GL_FLOAT_MAT2)
defconsti(env, "GL-FLOAT-MAT2", (GLenum) GL_FLOAT_MAT2, "GL_FLOAT_MAT2");
#endif
#if defined(GL_FLOAT_MAT3)
defconsti(env, "GL-FLOAT-MAT3", (GLenum) GL_FLOAT_MAT3, "GL_FLOAT_MAT3");
#endif
#if defined(GL_FLOAT_MAT4)
defconsti(env, "GL-FLOAT-MAT4", (GLenum) GL_FLOAT_MAT4, "GL_FLOAT_MAT4");
#endif
#if defined(GL_SAMPLER_1D)
defconsti(env, "GL-SAMPLER-1D", (GLenum) GL_SAMPLER_1D, "GL_SAMPLER_1D");
#endif
#if defined(GL_SAMPLER_2D)
defconsti(env, "GL-SAMPLER-2D", (GLenum) GL_SAMPLER_2D, "GL_SAMPLER_2D");
#endif
#if defined(GL_SAMPLER_3D)
defconsti(env, "GL-SAMPLER-3D", (GLenum) GL_SAMPLER_3D, "GL_SAMPLER_3D");
#endif
#if defined(GL_SAMPLER_CUBE)
defconsti(env, "GL-SAMPLER-CUBE", (GLenum) GL_SAMPLER_CUBE, "GL_SAMPLER_CUBE");
#endif
#if defined(GL_SAMPLER_1D_SHADOW)
defconsti(env, "GL-SAMPLER-1D-SHADOW", (GLenum) GL_SAMPLER_1D_SHADOW, "GL_SAMPLER_1D_SHADOW");
#endif
#if defined(GL_SAMPLER_2D_SHADOW)
defconsti(env, "GL-SAMPLER-2D-SHADOW", (GLenum) GL_SAMPLER_2D_SHADOW, "GL_SAMPLER_2D_SHADOW");
#endif
#if defined(GL_DELETE_STATUS)
defconsti(env, "GL-DELETE-STATUS", (GLenum) GL_DELETE_STATUS, "GL_DELETE_STATUS");
#endif
#if defined(GL_COMPILE_STATUS)
defconsti(env, "GL-COMPILE-STATUS", (GLenum) GL_COMPILE_STATUS, "GL_COMPILE_STATUS");
#endif
#if defined(GL_LINK_STATUS)
defconsti(env, "GL-LINK-STATUS", (GLenum) GL_LINK_STATUS, "GL_LINK_STATUS");
#endif
#if defined(GL_VALIDATE_STATUS)
defconsti(env, "GL-VALIDATE-STATUS", (GLenum) GL_VALIDATE_STATUS, "GL_VALIDATE_STATUS");
#endif
#if defined(GL_INFO_LOG_LENGTH)
defconsti(env, "GL-INFO-LOG-LENGTH", (GLenum) GL_INFO_LOG_LENGTH, "GL_INFO_LOG_LENGTH");
#endif
#if defined(GL_ATTACHED_SHADERS)
defconsti(env, "GL-ATTACHED-SHADERS", (GLenum) GL_ATTACHED_SHADERS, "GL_ATTACHED_SHADERS");
#endif
#if defined(GL_ACTIVE_UNIFORMS)
defconsti(env, "GL-ACTIVE-UNIFORMS", (GLenum) GL_ACTIVE_UNIFORMS, "GL_ACTIVE_UNIFORMS");
#endif
#if defined(GL_ACTIVE_UNIFORM_MAX_LENGTH)
defconsti(env, "GL-ACTIVE-UNIFORM-MAX-LENGTH", (GLenum) GL_ACTIVE_UNIFORM_MAX_LENGTH, "GL_ACTIVE_UNIFORM_MAX_LENGTH");
#endif
#if defined(GL_SHADER_SOURCE_LENGTH)
defconsti(env, "GL-SHADER-SOURCE-LENGTH", (GLenum) GL_SHADER_SOURCE_LENGTH, "GL_SHADER_SOURCE_LENGTH");
#endif
#if defined(GL_ACTIVE_ATTRIBUTES)
defconsti(env, "GL-ACTIVE-ATTRIBUTES", (GLenum) GL_ACTIVE_ATTRIBUTES, "GL_ACTIVE_ATTRIBUTES");
#endif
#if defined(GL_ACTIVE_ATTRIBUTE_MAX_LENGTH)
defconsti(env, "GL-ACTIVE-ATTRIBUTE-MAX-LENGTH", (GLenum) GL_ACTIVE_ATTRIBUTE_MAX_LENGTH, "GL_ACTIVE_ATTRIBUTE_MAX_LENGTH");
#endif
#if defined(GL_FRAGMENT_SHADER_DERIVATIVE_HINT)
defconsti(env, "GL-FRAGMENT-SHADER-DERIVATIVE-HINT", (GLenum) GL_FRAGMENT_SHADER_DERIVATIVE_HINT, "GL_FRAGMENT_SHADER_DERIVATIVE_HINT");
#endif
#if defined(GL_SHADING_LANGUAGE_VERSION)
defconsti(env, "GL-SHADING-LANGUAGE-VERSION", (GLenum) GL_SHADING_LANGUAGE_VERSION, "GL_SHADING_LANGUAGE_VERSION");
#endif
#if defined(GL_CURRENT_PROGRAM)
defconsti(env, "GL-CURRENT-PROGRAM", (GLenum) GL_CURRENT_PROGRAM, "GL_CURRENT_PROGRAM");
#endif
#if defined(GL_POINT_SPRITE_COORD_ORIGIN)
defconsti(env, "GL-POINT-SPRITE-COORD-ORIGIN", (GLenum) GL_POINT_SPRITE_COORD_ORIGIN, "GL_POINT_SPRITE_COORD_ORIGIN");
#endif
#if defined(GL_LOWER_LEFT)
defconsti(env, "GL-LOWER-LEFT", (GLenum) GL_LOWER_LEFT, "GL_LOWER_LEFT");
#endif
#if defined(GL_UPPER_LEFT)
defconsti(env, "GL-UPPER-LEFT", (GLenum) GL_UPPER_LEFT, "GL_UPPER_LEFT");
#endif
#if defined(GL_STENCIL_BACK_REF)
defconsti(env, "GL-STENCIL-BACK-REF", (GLenum) GL_STENCIL_BACK_REF, "GL_STENCIL_BACK_REF");
#endif
#if defined(GL_STENCIL_BACK_VALUE_MASK)
defconsti(env, "GL-STENCIL-BACK-VALUE-MASK", (GLenum) GL_STENCIL_BACK_VALUE_MASK, "GL_STENCIL_BACK_VALUE_MASK");
#endif
#if defined(GL_STENCIL_BACK_WRITEMASK)
defconsti(env, "GL-STENCIL-BACK-WRITEMASK", (GLenum) GL_STENCIL_BACK_WRITEMASK, "GL_STENCIL_BACK_WRITEMASK");
#endif
#if defined(GL_VERTEX_PROGRAM_TWO_SIDE)
defconsti(env, "GL-VERTEX-PROGRAM-TWO-SIDE", (GLenum) GL_VERTEX_PROGRAM_TWO_SIDE, "GL_VERTEX_PROGRAM_TWO_SIDE");
#endif
#if defined(GL_POINT_SPRITE)
defconsti(env, "GL-POINT-SPRITE", (GLenum) GL_POINT_SPRITE, "GL_POINT_SPRITE");
#endif
#if defined(GL_COORD_REPLACE)
defconsti(env, "GL-COORD-REPLACE", (GLenum) GL_COORD_REPLACE, "GL_COORD_REPLACE");
#endif
#if defined(GL_MAX_TEXTURE_COORDS)
defconsti(env, "GL-MAX-TEXTURE-COORDS", (GLenum) GL_MAX_TEXTURE_COORDS, "GL_MAX_TEXTURE_COORDS");
#endif
#if defined(GL_PIXEL_PACK_BUFFER)
defconsti(env, "GL-PIXEL-PACK-BUFFER", (GLenum) GL_PIXEL_PACK_BUFFER, "GL_PIXEL_PACK_BUFFER");
#endif
#if defined(GL_PIXEL_UNPACK_BUFFER)
defconsti(env, "GL-PIXEL-UNPACK-BUFFER", (GLenum) GL_PIXEL_UNPACK_BUFFER, "GL_PIXEL_UNPACK_BUFFER");
#endif
#if defined(GL_PIXEL_PACK_BUFFER_BINDING)
defconsti(env, "GL-PIXEL-PACK-BUFFER-BINDING", (GLenum) GL_PIXEL_PACK_BUFFER_BINDING, "GL_PIXEL_PACK_BUFFER_BINDING");
#endif
#if defined(GL_PIXEL_UNPACK_BUFFER_BINDING)
defconsti(env, "GL-PIXEL-UNPACK-BUFFER-BINDING", (GLenum) GL_PIXEL_UNPACK_BUFFER_BINDING, "GL_PIXEL_UNPACK_BUFFER_BINDING");
#endif
#if defined(GL_FLOAT_MAT2x3)
defconsti(env, "GL-FLOAT-MAT2x3", (GLenum) GL_FLOAT_MAT2x3, "GL_FLOAT_MAT2x3");
#endif
#if defined(GL_FLOAT_MAT2x4)
defconsti(env, "GL-FLOAT-MAT2x4", (GLenum) GL_FLOAT_MAT2x4, "GL_FLOAT_MAT2x4");
#endif
#if defined(GL_FLOAT_MAT3x2)
defconsti(env, "GL-FLOAT-MAT3x2", (GLenum) GL_FLOAT_MAT3x2, "GL_FLOAT_MAT3x2");
#endif
#if defined(GL_FLOAT_MAT3x4)
defconsti(env, "GL-FLOAT-MAT3x4", (GLenum) GL_FLOAT_MAT3x4, "GL_FLOAT_MAT3x4");
#endif
#if defined(GL_FLOAT_MAT4x2)
defconsti(env, "GL-FLOAT-MAT4x2", (GLenum) GL_FLOAT_MAT4x2, "GL_FLOAT_MAT4x2");
#endif
#if defined(GL_FLOAT_MAT4x3)
defconsti(env, "GL-FLOAT-MAT4x3", (GLenum) GL_FLOAT_MAT4x3, "GL_FLOAT_MAT4x3");
#endif
#if defined(GL_SRGB)
defconsti(env, "GL-SRGB", (GLenum) GL_SRGB, "GL_SRGB");
#endif
#if defined(GL_SRGB8)
defconsti(env, "GL-SRGB8", (GLenum) GL_SRGB8, "GL_SRGB8");
#endif
#if defined(GL_SRGB_ALPHA)
defconsti(env, "GL-SRGB-ALPHA", (GLenum) GL_SRGB_ALPHA, "GL_SRGB_ALPHA");
#endif
#if defined(GL_SRGB8_ALPHA8)
defconsti(env, "GL-SRGB8-ALPHA8", (GLenum) GL_SRGB8_ALPHA8, "GL_SRGB8_ALPHA8");
#endif
#if defined(GL_COMPRESSED_SRGB)
defconsti(env, "GL-COMPRESSED-SRGB", (GLenum) GL_COMPRESSED_SRGB, "GL_COMPRESSED_SRGB");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA", (GLenum) GL_COMPRESSED_SRGB_ALPHA, "GL_COMPRESSED_SRGB_ALPHA");
#endif
#if defined(GL_CURRENT_RASTER_SECONDARY_COLOR)
defconsti(env, "GL-CURRENT-RASTER-SECONDARY-COLOR", (GLenum) GL_CURRENT_RASTER_SECONDARY_COLOR, "GL_CURRENT_RASTER_SECONDARY_COLOR");
#endif
#if defined(GL_SLUMINANCE_ALPHA)
defconsti(env, "GL-SLUMINANCE-ALPHA", (GLenum) GL_SLUMINANCE_ALPHA, "GL_SLUMINANCE_ALPHA");
#endif
#if defined(GL_SLUMINANCE8_ALPHA8)
defconsti(env, "GL-SLUMINANCE8-ALPHA8", (GLenum) GL_SLUMINANCE8_ALPHA8, "GL_SLUMINANCE8_ALPHA8");
#endif
#if defined(GL_SLUMINANCE)
defconsti(env, "GL-SLUMINANCE", (GLenum) GL_SLUMINANCE, "GL_SLUMINANCE");
#endif
#if defined(GL_SLUMINANCE8)
defconsti(env, "GL-SLUMINANCE8", (GLenum) GL_SLUMINANCE8, "GL_SLUMINANCE8");
#endif
#if defined(GL_COMPRESSED_SLUMINANCE)
defconsti(env, "GL-COMPRESSED-SLUMINANCE", (GLenum) GL_COMPRESSED_SLUMINANCE, "GL_COMPRESSED_SLUMINANCE");
#endif
#if defined(GL_COMPRESSED_SLUMINANCE_ALPHA)
defconsti(env, "GL-COMPRESSED-SLUMINANCE-ALPHA", (GLenum) GL_COMPRESSED_SLUMINANCE_ALPHA, "GL_COMPRESSED_SLUMINANCE_ALPHA");
#endif
#if defined(GL_COMPARE_REF_TO_TEXTURE)
defconsti(env, "GL-COMPARE-REF-TO-TEXTURE", (GLenum) GL_COMPARE_REF_TO_TEXTURE, "GL_COMPARE_REF_TO_TEXTURE");
#endif
#if defined(GL_CLIP_DISTANCE0)
defconsti(env, "GL-CLIP-DISTANCE0", (GLenum) GL_CLIP_DISTANCE0, "GL_CLIP_DISTANCE0");
#endif
#if defined(GL_CLIP_DISTANCE1)
defconsti(env, "GL-CLIP-DISTANCE1", (GLenum) GL_CLIP_DISTANCE1, "GL_CLIP_DISTANCE1");
#endif
#if defined(GL_CLIP_DISTANCE2)
defconsti(env, "GL-CLIP-DISTANCE2", (GLenum) GL_CLIP_DISTANCE2, "GL_CLIP_DISTANCE2");
#endif
#if defined(GL_CLIP_DISTANCE3)
defconsti(env, "GL-CLIP-DISTANCE3", (GLenum) GL_CLIP_DISTANCE3, "GL_CLIP_DISTANCE3");
#endif
#if defined(GL_CLIP_DISTANCE4)
defconsti(env, "GL-CLIP-DISTANCE4", (GLenum) GL_CLIP_DISTANCE4, "GL_CLIP_DISTANCE4");
#endif
#if defined(GL_CLIP_DISTANCE5)
defconsti(env, "GL-CLIP-DISTANCE5", (GLenum) GL_CLIP_DISTANCE5, "GL_CLIP_DISTANCE5");
#endif
#if defined(GL_CLIP_DISTANCE6)
defconsti(env, "GL-CLIP-DISTANCE6", (GLenum) GL_CLIP_DISTANCE6, "GL_CLIP_DISTANCE6");
#endif
#if defined(GL_CLIP_DISTANCE7)
defconsti(env, "GL-CLIP-DISTANCE7", (GLenum) GL_CLIP_DISTANCE7, "GL_CLIP_DISTANCE7");
#endif
#if defined(GL_MAX_CLIP_DISTANCES)
defconsti(env, "GL-MAX-CLIP-DISTANCES", (GLenum) GL_MAX_CLIP_DISTANCES, "GL_MAX_CLIP_DISTANCES");
#endif
#if defined(GL_MAJOR_VERSION)
defconsti(env, "GL-MAJOR-VERSION", (GLenum) GL_MAJOR_VERSION, "GL_MAJOR_VERSION");
#endif
#if defined(GL_MINOR_VERSION)
defconsti(env, "GL-MINOR-VERSION", (GLenum) GL_MINOR_VERSION, "GL_MINOR_VERSION");
#endif
#if defined(GL_NUM_EXTENSIONS)
defconsti(env, "GL-NUM-EXTENSIONS", (GLenum) GL_NUM_EXTENSIONS, "GL_NUM_EXTENSIONS");
#endif
#if defined(GL_CONTEXT_FLAGS)
defconsti(env, "GL-CONTEXT-FLAGS", (GLenum) GL_CONTEXT_FLAGS, "GL_CONTEXT_FLAGS");
#endif
#if defined(GL_COMPRESSED_RED)
defconsti(env, "GL-COMPRESSED-RED", (GLenum) GL_COMPRESSED_RED, "GL_COMPRESSED_RED");
#endif
#if defined(GL_COMPRESSED_RG)
defconsti(env, "GL-COMPRESSED-RG", (GLenum) GL_COMPRESSED_RG, "GL_COMPRESSED_RG");
#endif
#if defined(GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT)
defconsti(env, "GL-CONTEXT-FLAG-FORWARD-COMPATIBLE-BIT", (GLenum) GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT, "GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT");
#endif
#if defined(GL_RGBA32F)
defconsti(env, "GL-RGBA32F", (GLenum) GL_RGBA32F, "GL_RGBA32F");
#endif
#if defined(GL_RGB32F)
defconsti(env, "GL-RGB32F", (GLenum) GL_RGB32F, "GL_RGB32F");
#endif
#if defined(GL_RGBA16F)
defconsti(env, "GL-RGBA16F", (GLenum) GL_RGBA16F, "GL_RGBA16F");
#endif
#if defined(GL_RGB16F)
defconsti(env, "GL-RGB16F", (GLenum) GL_RGB16F, "GL_RGB16F");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_INTEGER)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-INTEGER", (GLenum) GL_VERTEX_ATTRIB_ARRAY_INTEGER, "GL_VERTEX_ATTRIB_ARRAY_INTEGER");
#endif
#if defined(GL_MAX_ARRAY_TEXTURE_LAYERS)
defconsti(env, "GL-MAX-ARRAY-TEXTURE-LAYERS", (GLenum) GL_MAX_ARRAY_TEXTURE_LAYERS, "GL_MAX_ARRAY_TEXTURE_LAYERS");
#endif
#if defined(GL_MIN_PROGRAM_TEXEL_OFFSET)
defconsti(env, "GL-MIN-PROGRAM-TEXEL-OFFSET", (GLenum) GL_MIN_PROGRAM_TEXEL_OFFSET, "GL_MIN_PROGRAM_TEXEL_OFFSET");
#endif
#if defined(GL_MAX_PROGRAM_TEXEL_OFFSET)
defconsti(env, "GL-MAX-PROGRAM-TEXEL-OFFSET", (GLenum) GL_MAX_PROGRAM_TEXEL_OFFSET, "GL_MAX_PROGRAM_TEXEL_OFFSET");
#endif
#if defined(GL_CLAMP_READ_COLOR)
defconsti(env, "GL-CLAMP-READ-COLOR", (GLenum) GL_CLAMP_READ_COLOR, "GL_CLAMP_READ_COLOR");
#endif
#if defined(GL_FIXED_ONLY)
defconsti(env, "GL-FIXED-ONLY", (GLenum) GL_FIXED_ONLY, "GL_FIXED_ONLY");
#endif
#if defined(GL_MAX_VARYING_COMPONENTS)
defconsti(env, "GL-MAX-VARYING-COMPONENTS", (GLenum) GL_MAX_VARYING_COMPONENTS, "GL_MAX_VARYING_COMPONENTS");
#endif
#if defined(GL_TEXTURE_1D_ARRAY)
defconsti(env, "GL-TEXTURE-1D-ARRAY", (GLenum) GL_TEXTURE_1D_ARRAY, "GL_TEXTURE_1D_ARRAY");
#endif
#if defined(GL_PROXY_TEXTURE_1D_ARRAY)
defconsti(env, "GL-PROXY-TEXTURE-1D-ARRAY", (GLenum) GL_PROXY_TEXTURE_1D_ARRAY, "GL_PROXY_TEXTURE_1D_ARRAY");
#endif
#if defined(GL_TEXTURE_2D_ARRAY)
defconsti(env, "GL-TEXTURE-2D-ARRAY", (GLenum) GL_TEXTURE_2D_ARRAY, "GL_TEXTURE_2D_ARRAY");
#endif
#if defined(GL_PROXY_TEXTURE_2D_ARRAY)
defconsti(env, "GL-PROXY-TEXTURE-2D-ARRAY", (GLenum) GL_PROXY_TEXTURE_2D_ARRAY, "GL_PROXY_TEXTURE_2D_ARRAY");
#endif
#if defined(GL_TEXTURE_BINDING_1D_ARRAY)
defconsti(env, "GL-TEXTURE-BINDING-1D-ARRAY", (GLenum) GL_TEXTURE_BINDING_1D_ARRAY, "GL_TEXTURE_BINDING_1D_ARRAY");
#endif
#if defined(GL_TEXTURE_BINDING_2D_ARRAY)
defconsti(env, "GL-TEXTURE-BINDING-2D-ARRAY", (GLenum) GL_TEXTURE_BINDING_2D_ARRAY, "GL_TEXTURE_BINDING_2D_ARRAY");
#endif
#if defined(GL_R11F_G11F_B10F)
defconsti(env, "GL-R11F-G11F-B10F", (GLenum) GL_R11F_G11F_B10F, "GL_R11F_G11F_B10F");
#endif
#if defined(GL_UNSIGNED_INT_10F_11F_11F_REV)
defconsti(env, "GL-UNSIGNED-INT-10F-11F-11F-REV", (GLenum) GL_UNSIGNED_INT_10F_11F_11F_REV, "GL_UNSIGNED_INT_10F_11F_11F_REV");
#endif
#if defined(GL_RGB9_E5)
defconsti(env, "GL-RGB9-E5", (GLenum) GL_RGB9_E5, "GL_RGB9_E5");
#endif
#if defined(GL_UNSIGNED_INT_5_9_9_9_REV)
defconsti(env, "GL-UNSIGNED-INT-5-9-9-9-REV", (GLenum) GL_UNSIGNED_INT_5_9_9_9_REV, "GL_UNSIGNED_INT_5_9_9_9_REV");
#endif
#if defined(GL_TEXTURE_SHARED_SIZE)
defconsti(env, "GL-TEXTURE-SHARED-SIZE", (GLenum) GL_TEXTURE_SHARED_SIZE, "GL_TEXTURE_SHARED_SIZE");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH)
defconsti(env, "GL-TRANSFORM-FEEDBACK-VARYING-MAX-LENGTH", (GLenum) GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH, "GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_MODE)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-MODE", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_MODE, "GL_TRANSFORM_FEEDBACK_BUFFER_MODE");
#endif
#if defined(GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS)
defconsti(env, "GL-MAX-TRANSFORM-FEEDBACK-SEPARATE-COMPONENTS", (GLenum) GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS, "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_VARYINGS)
defconsti(env, "GL-TRANSFORM-FEEDBACK-VARYINGS", (GLenum) GL_TRANSFORM_FEEDBACK_VARYINGS, "GL_TRANSFORM_FEEDBACK_VARYINGS");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_START)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-START", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_START, "GL_TRANSFORM_FEEDBACK_BUFFER_START");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_SIZE)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-SIZE", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_SIZE, "GL_TRANSFORM_FEEDBACK_BUFFER_SIZE");
#endif
#if defined(GL_PRIMITIVES_GENERATED)
defconsti(env, "GL-PRIMITIVES-GENERATED", (GLenum) GL_PRIMITIVES_GENERATED, "GL_PRIMITIVES_GENERATED");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN)
defconsti(env, "GL-TRANSFORM-FEEDBACK-PRIMITIVES-WRITTEN", (GLenum) GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN, "GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN");
#endif
#if defined(GL_RASTERIZER_DISCARD)
defconsti(env, "GL-RASTERIZER-DISCARD", (GLenum) GL_RASTERIZER_DISCARD, "GL_RASTERIZER_DISCARD");
#endif
#if defined(GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS)
defconsti(env, "GL-MAX-TRANSFORM-FEEDBACK-INTERLEAVED-COMPONENTS", (GLenum) GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS, "GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS");
#endif
#if defined(GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS)
defconsti(env, "GL-MAX-TRANSFORM-FEEDBACK-SEPARATE-ATTRIBS", (GLenum) GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS, "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS");
#endif
#if defined(GL_INTERLEAVED_ATTRIBS)
defconsti(env, "GL-INTERLEAVED-ATTRIBS", (GLenum) GL_INTERLEAVED_ATTRIBS, "GL_INTERLEAVED_ATTRIBS");
#endif
#if defined(GL_SEPARATE_ATTRIBS)
defconsti(env, "GL-SEPARATE-ATTRIBS", (GLenum) GL_SEPARATE_ATTRIBS, "GL_SEPARATE_ATTRIBS");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER, "GL_TRANSFORM_FEEDBACK_BUFFER");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_BINDING)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-BINDING", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_BINDING, "GL_TRANSFORM_FEEDBACK_BUFFER_BINDING");
#endif
#if defined(GL_RGBA32UI)
defconsti(env, "GL-RGBA32UI", (GLenum) GL_RGBA32UI, "GL_RGBA32UI");
#endif
#if defined(GL_RGB32UI)
defconsti(env, "GL-RGB32UI", (GLenum) GL_RGB32UI, "GL_RGB32UI");
#endif
#if defined(GL_RGBA16UI)
defconsti(env, "GL-RGBA16UI", (GLenum) GL_RGBA16UI, "GL_RGBA16UI");
#endif
#if defined(GL_RGB16UI)
defconsti(env, "GL-RGB16UI", (GLenum) GL_RGB16UI, "GL_RGB16UI");
#endif
#if defined(GL_RGBA8UI)
defconsti(env, "GL-RGBA8UI", (GLenum) GL_RGBA8UI, "GL_RGBA8UI");
#endif
#if defined(GL_RGB8UI)
defconsti(env, "GL-RGB8UI", (GLenum) GL_RGB8UI, "GL_RGB8UI");
#endif
#if defined(GL_RGBA32I)
defconsti(env, "GL-RGBA32I", (GLenum) GL_RGBA32I, "GL_RGBA32I");
#endif
#if defined(GL_RGB32I)
defconsti(env, "GL-RGB32I", (GLenum) GL_RGB32I, "GL_RGB32I");
#endif
#if defined(GL_RGBA16I)
defconsti(env, "GL-RGBA16I", (GLenum) GL_RGBA16I, "GL_RGBA16I");
#endif
#if defined(GL_RGB16I)
defconsti(env, "GL-RGB16I", (GLenum) GL_RGB16I, "GL_RGB16I");
#endif
#if defined(GL_RGBA8I)
defconsti(env, "GL-RGBA8I", (GLenum) GL_RGBA8I, "GL_RGBA8I");
#endif
#if defined(GL_RGB8I)
defconsti(env, "GL-RGB8I", (GLenum) GL_RGB8I, "GL_RGB8I");
#endif
#if defined(GL_RED_INTEGER)
defconsti(env, "GL-RED-INTEGER", (GLenum) GL_RED_INTEGER, "GL_RED_INTEGER");
#endif
#if defined(GL_GREEN_INTEGER)
defconsti(env, "GL-GREEN-INTEGER", (GLenum) GL_GREEN_INTEGER, "GL_GREEN_INTEGER");
#endif
#if defined(GL_BLUE_INTEGER)
defconsti(env, "GL-BLUE-INTEGER", (GLenum) GL_BLUE_INTEGER, "GL_BLUE_INTEGER");
#endif
#if defined(GL_RGB_INTEGER)
defconsti(env, "GL-RGB-INTEGER", (GLenum) GL_RGB_INTEGER, "GL_RGB_INTEGER");
#endif
#if defined(GL_RGBA_INTEGER)
defconsti(env, "GL-RGBA-INTEGER", (GLenum) GL_RGBA_INTEGER, "GL_RGBA_INTEGER");
#endif
#if defined(GL_BGR_INTEGER)
defconsti(env, "GL-BGR-INTEGER", (GLenum) GL_BGR_INTEGER, "GL_BGR_INTEGER");
#endif
#if defined(GL_BGRA_INTEGER)
defconsti(env, "GL-BGRA-INTEGER", (GLenum) GL_BGRA_INTEGER, "GL_BGRA_INTEGER");
#endif
#if defined(GL_SAMPLER_1D_ARRAY)
defconsti(env, "GL-SAMPLER-1D-ARRAY", (GLenum) GL_SAMPLER_1D_ARRAY, "GL_SAMPLER_1D_ARRAY");
#endif
#if defined(GL_SAMPLER_2D_ARRAY)
defconsti(env, "GL-SAMPLER-2D-ARRAY", (GLenum) GL_SAMPLER_2D_ARRAY, "GL_SAMPLER_2D_ARRAY");
#endif
#if defined(GL_SAMPLER_1D_ARRAY_SHADOW)
defconsti(env, "GL-SAMPLER-1D-ARRAY-SHADOW", (GLenum) GL_SAMPLER_1D_ARRAY_SHADOW, "GL_SAMPLER_1D_ARRAY_SHADOW");
#endif
#if defined(GL_SAMPLER_2D_ARRAY_SHADOW)
defconsti(env, "GL-SAMPLER-2D-ARRAY-SHADOW", (GLenum) GL_SAMPLER_2D_ARRAY_SHADOW, "GL_SAMPLER_2D_ARRAY_SHADOW");
#endif
#if defined(GL_SAMPLER_CUBE_SHADOW)
defconsti(env, "GL-SAMPLER-CUBE-SHADOW", (GLenum) GL_SAMPLER_CUBE_SHADOW, "GL_SAMPLER_CUBE_SHADOW");
#endif
#if defined(GL_UNSIGNED_INT_VEC2)
defconsti(env, "GL-UNSIGNED-INT-VEC2", (GLenum) GL_UNSIGNED_INT_VEC2, "GL_UNSIGNED_INT_VEC2");
#endif
#if defined(GL_UNSIGNED_INT_VEC3)
defconsti(env, "GL-UNSIGNED-INT-VEC3", (GLenum) GL_UNSIGNED_INT_VEC3, "GL_UNSIGNED_INT_VEC3");
#endif
#if defined(GL_UNSIGNED_INT_VEC4)
defconsti(env, "GL-UNSIGNED-INT-VEC4", (GLenum) GL_UNSIGNED_INT_VEC4, "GL_UNSIGNED_INT_VEC4");
#endif
#if defined(GL_INT_SAMPLER_1D)
defconsti(env, "GL-INT-SAMPLER-1D", (GLenum) GL_INT_SAMPLER_1D, "GL_INT_SAMPLER_1D");
#endif
#if defined(GL_INT_SAMPLER_2D)
defconsti(env, "GL-INT-SAMPLER-2D", (GLenum) GL_INT_SAMPLER_2D, "GL_INT_SAMPLER_2D");
#endif
#if defined(GL_INT_SAMPLER_3D)
defconsti(env, "GL-INT-SAMPLER-3D", (GLenum) GL_INT_SAMPLER_3D, "GL_INT_SAMPLER_3D");
#endif
#if defined(GL_INT_SAMPLER_CUBE)
defconsti(env, "GL-INT-SAMPLER-CUBE", (GLenum) GL_INT_SAMPLER_CUBE, "GL_INT_SAMPLER_CUBE");
#endif
#if defined(GL_INT_SAMPLER_1D_ARRAY)
defconsti(env, "GL-INT-SAMPLER-1D-ARRAY", (GLenum) GL_INT_SAMPLER_1D_ARRAY, "GL_INT_SAMPLER_1D_ARRAY");
#endif
#if defined(GL_INT_SAMPLER_2D_ARRAY)
defconsti(env, "GL-INT-SAMPLER-2D-ARRAY", (GLenum) GL_INT_SAMPLER_2D_ARRAY, "GL_INT_SAMPLER_2D_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_1D)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-1D", (GLenum) GL_UNSIGNED_INT_SAMPLER_1D, "GL_UNSIGNED_INT_SAMPLER_1D");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D, "GL_UNSIGNED_INT_SAMPLER_2D");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_3D)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-3D", (GLenum) GL_UNSIGNED_INT_SAMPLER_3D, "GL_UNSIGNED_INT_SAMPLER_3D");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_CUBE)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-CUBE", (GLenum) GL_UNSIGNED_INT_SAMPLER_CUBE, "GL_UNSIGNED_INT_SAMPLER_CUBE");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_1D_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-1D-ARRAY", (GLenum) GL_UNSIGNED_INT_SAMPLER_1D_ARRAY, "GL_UNSIGNED_INT_SAMPLER_1D_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-ARRAY", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_ARRAY, "GL_UNSIGNED_INT_SAMPLER_2D_ARRAY");
#endif
#if defined(GL_QUERY_WAIT)
defconsti(env, "GL-QUERY-WAIT", (GLenum) GL_QUERY_WAIT, "GL_QUERY_WAIT");
#endif
#if defined(GL_QUERY_NO_WAIT)
defconsti(env, "GL-QUERY-NO-WAIT", (GLenum) GL_QUERY_NO_WAIT, "GL_QUERY_NO_WAIT");
#endif
#if defined(GL_QUERY_BY_REGION_WAIT)
defconsti(env, "GL-QUERY-BY-REGION-WAIT", (GLenum) GL_QUERY_BY_REGION_WAIT, "GL_QUERY_BY_REGION_WAIT");
#endif
#if defined(GL_QUERY_BY_REGION_NO_WAIT)
defconsti(env, "GL-QUERY-BY-REGION-NO-WAIT", (GLenum) GL_QUERY_BY_REGION_NO_WAIT, "GL_QUERY_BY_REGION_NO_WAIT");
#endif
#if defined(GL_BUFFER_ACCESS_FLAGS)
defconsti(env, "GL-BUFFER-ACCESS-FLAGS", (GLenum) GL_BUFFER_ACCESS_FLAGS, "GL_BUFFER_ACCESS_FLAGS");
#endif
#if defined(GL_BUFFER_MAP_LENGTH)
defconsti(env, "GL-BUFFER-MAP-LENGTH", (GLenum) GL_BUFFER_MAP_LENGTH, "GL_BUFFER_MAP_LENGTH");
#endif
#if defined(GL_BUFFER_MAP_OFFSET)
defconsti(env, "GL-BUFFER-MAP-OFFSET", (GLenum) GL_BUFFER_MAP_OFFSET, "GL_BUFFER_MAP_OFFSET");
#endif
#if defined(GL_DEPTH_COMPONENT32F)
defconsti(env, "GL-DEPTH-COMPONENT32F", (GLenum) GL_DEPTH_COMPONENT32F, "GL_DEPTH_COMPONENT32F");
#endif
#if defined(GL_DEPTH32F_STENCIL8)
defconsti(env, "GL-DEPTH32F-STENCIL8", (GLenum) GL_DEPTH32F_STENCIL8, "GL_DEPTH32F_STENCIL8");
#endif
#if defined(GL_FLOAT_32_UNSIGNED_INT_24_8_REV)
defconsti(env, "GL-FLOAT-32-UNSIGNED-INT-24-8-REV", (GLenum) GL_FLOAT_32_UNSIGNED_INT_24_8_REV, "GL_FLOAT_32_UNSIGNED_INT_24_8_REV");
#endif
#if defined(GL_INVALID_FRAMEBUFFER_OPERATION)
defconsti(env, "GL-INVALID-FRAMEBUFFER-OPERATION", (GLenum) GL_INVALID_FRAMEBUFFER_OPERATION, "GL_INVALID_FRAMEBUFFER_OPERATION");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-COLOR-ENCODING", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING, "GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-COMPONENT-TYPE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE, "GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-RED-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-GREEN-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-BLUE-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-ALPHA-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-DEPTH-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-STENCIL-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT", (GLenum) GL_FRAMEBUFFER_DEFAULT, "GL_FRAMEBUFFER_DEFAULT");
#endif
#if defined(GL_FRAMEBUFFER_UNDEFINED)
defconsti(env, "GL-FRAMEBUFFER-UNDEFINED", (GLenum) GL_FRAMEBUFFER_UNDEFINED, "GL_FRAMEBUFFER_UNDEFINED");
#endif
#if defined(GL_DEPTH_STENCIL_ATTACHMENT)
defconsti(env, "GL-DEPTH-STENCIL-ATTACHMENT", (GLenum) GL_DEPTH_STENCIL_ATTACHMENT, "GL_DEPTH_STENCIL_ATTACHMENT");
#endif
#if defined(GL_MAX_RENDERBUFFER_SIZE)
defconsti(env, "GL-MAX-RENDERBUFFER-SIZE", (GLenum) GL_MAX_RENDERBUFFER_SIZE, "GL_MAX_RENDERBUFFER_SIZE");
#endif
#if defined(GL_DEPTH_STENCIL)
defconsti(env, "GL-DEPTH-STENCIL", (GLenum) GL_DEPTH_STENCIL, "GL_DEPTH_STENCIL");
#endif
#if defined(GL_UNSIGNED_INT_24_8)
defconsti(env, "GL-UNSIGNED-INT-24-8", (GLenum) GL_UNSIGNED_INT_24_8, "GL_UNSIGNED_INT_24_8");
#endif
#if defined(GL_DEPTH24_STENCIL8)
defconsti(env, "GL-DEPTH24-STENCIL8", (GLenum) GL_DEPTH24_STENCIL8, "GL_DEPTH24_STENCIL8");
#endif
#if defined(GL_TEXTURE_STENCIL_SIZE)
defconsti(env, "GL-TEXTURE-STENCIL-SIZE", (GLenum) GL_TEXTURE_STENCIL_SIZE, "GL_TEXTURE_STENCIL_SIZE");
#endif
#if defined(GL_TEXTURE_RED_TYPE)
defconsti(env, "GL-TEXTURE-RED-TYPE", (GLenum) GL_TEXTURE_RED_TYPE, "GL_TEXTURE_RED_TYPE");
#endif
#if defined(GL_TEXTURE_GREEN_TYPE)
defconsti(env, "GL-TEXTURE-GREEN-TYPE", (GLenum) GL_TEXTURE_GREEN_TYPE, "GL_TEXTURE_GREEN_TYPE");
#endif
#if defined(GL_TEXTURE_BLUE_TYPE)
defconsti(env, "GL-TEXTURE-BLUE-TYPE", (GLenum) GL_TEXTURE_BLUE_TYPE, "GL_TEXTURE_BLUE_TYPE");
#endif
#if defined(GL_TEXTURE_ALPHA_TYPE)
defconsti(env, "GL-TEXTURE-ALPHA-TYPE", (GLenum) GL_TEXTURE_ALPHA_TYPE, "GL_TEXTURE_ALPHA_TYPE");
#endif
#if defined(GL_TEXTURE_DEPTH_TYPE)
defconsti(env, "GL-TEXTURE-DEPTH-TYPE", (GLenum) GL_TEXTURE_DEPTH_TYPE, "GL_TEXTURE_DEPTH_TYPE");
#endif
#if defined(GL_UNSIGNED_NORMALIZED)
defconsti(env, "GL-UNSIGNED-NORMALIZED", (GLenum) GL_UNSIGNED_NORMALIZED, "GL_UNSIGNED_NORMALIZED");
#endif
#if defined(GL_FRAMEBUFFER_BINDING)
defconsti(env, "GL-FRAMEBUFFER-BINDING", (GLenum) GL_FRAMEBUFFER_BINDING, "GL_FRAMEBUFFER_BINDING");
#endif
#if defined(GL_DRAW_FRAMEBUFFER_BINDING)
defconsti(env, "GL-DRAW-FRAMEBUFFER-BINDING", (GLenum) GL_DRAW_FRAMEBUFFER_BINDING, "GL_DRAW_FRAMEBUFFER_BINDING");
#endif
#if defined(GL_RENDERBUFFER_BINDING)
defconsti(env, "GL-RENDERBUFFER-BINDING", (GLenum) GL_RENDERBUFFER_BINDING, "GL_RENDERBUFFER_BINDING");
#endif
#if defined(GL_READ_FRAMEBUFFER)
defconsti(env, "GL-READ-FRAMEBUFFER", (GLenum) GL_READ_FRAMEBUFFER, "GL_READ_FRAMEBUFFER");
#endif
#if defined(GL_DRAW_FRAMEBUFFER)
defconsti(env, "GL-DRAW-FRAMEBUFFER", (GLenum) GL_DRAW_FRAMEBUFFER, "GL_DRAW_FRAMEBUFFER");
#endif
#if defined(GL_READ_FRAMEBUFFER_BINDING)
defconsti(env, "GL-READ-FRAMEBUFFER-BINDING", (GLenum) GL_READ_FRAMEBUFFER_BINDING, "GL_READ_FRAMEBUFFER_BINDING");
#endif
#if defined(GL_RENDERBUFFER_SAMPLES)
defconsti(env, "GL-RENDERBUFFER-SAMPLES", (GLenum) GL_RENDERBUFFER_SAMPLES, "GL_RENDERBUFFER_SAMPLES");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-OBJECT-TYPE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-OBJECT-NAME", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-LEVEL", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-CUBE-MAP-FACE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-LAYER", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER");
#endif
#if defined(GL_FRAMEBUFFER_COMPLETE)
defconsti(env, "GL-FRAMEBUFFER-COMPLETE", (GLenum) GL_FRAMEBUFFER_COMPLETE, "GL_FRAMEBUFFER_COMPLETE");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-ATTACHMENT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT, "GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MISSING-ATTACHMENT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT, "GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-DRAW-BUFFER", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER, "GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-READ-BUFFER", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER, "GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER");
#endif
#if defined(GL_FRAMEBUFFER_UNSUPPORTED)
defconsti(env, "GL-FRAMEBUFFER-UNSUPPORTED", (GLenum) GL_FRAMEBUFFER_UNSUPPORTED, "GL_FRAMEBUFFER_UNSUPPORTED");
#endif
#if defined(GL_MAX_COLOR_ATTACHMENTS)
defconsti(env, "GL-MAX-COLOR-ATTACHMENTS", (GLenum) GL_MAX_COLOR_ATTACHMENTS, "GL_MAX_COLOR_ATTACHMENTS");
#endif
#if defined(GL_COLOR_ATTACHMENT0)
defconsti(env, "GL-COLOR-ATTACHMENT0", (GLenum) GL_COLOR_ATTACHMENT0, "GL_COLOR_ATTACHMENT0");
#endif
#if defined(GL_COLOR_ATTACHMENT1)
defconsti(env, "GL-COLOR-ATTACHMENT1", (GLenum) GL_COLOR_ATTACHMENT1, "GL_COLOR_ATTACHMENT1");
#endif
#if defined(GL_COLOR_ATTACHMENT2)
defconsti(env, "GL-COLOR-ATTACHMENT2", (GLenum) GL_COLOR_ATTACHMENT2, "GL_COLOR_ATTACHMENT2");
#endif
#if defined(GL_COLOR_ATTACHMENT3)
defconsti(env, "GL-COLOR-ATTACHMENT3", (GLenum) GL_COLOR_ATTACHMENT3, "GL_COLOR_ATTACHMENT3");
#endif
#if defined(GL_COLOR_ATTACHMENT4)
defconsti(env, "GL-COLOR-ATTACHMENT4", (GLenum) GL_COLOR_ATTACHMENT4, "GL_COLOR_ATTACHMENT4");
#endif
#if defined(GL_COLOR_ATTACHMENT5)
defconsti(env, "GL-COLOR-ATTACHMENT5", (GLenum) GL_COLOR_ATTACHMENT5, "GL_COLOR_ATTACHMENT5");
#endif
#if defined(GL_COLOR_ATTACHMENT6)
defconsti(env, "GL-COLOR-ATTACHMENT6", (GLenum) GL_COLOR_ATTACHMENT6, "GL_COLOR_ATTACHMENT6");
#endif
#if defined(GL_COLOR_ATTACHMENT7)
defconsti(env, "GL-COLOR-ATTACHMENT7", (GLenum) GL_COLOR_ATTACHMENT7, "GL_COLOR_ATTACHMENT7");
#endif
#if defined(GL_COLOR_ATTACHMENT8)
defconsti(env, "GL-COLOR-ATTACHMENT8", (GLenum) GL_COLOR_ATTACHMENT8, "GL_COLOR_ATTACHMENT8");
#endif
#if defined(GL_COLOR_ATTACHMENT9)
defconsti(env, "GL-COLOR-ATTACHMENT9", (GLenum) GL_COLOR_ATTACHMENT9, "GL_COLOR_ATTACHMENT9");
#endif
#if defined(GL_COLOR_ATTACHMENT10)
defconsti(env, "GL-COLOR-ATTACHMENT10", (GLenum) GL_COLOR_ATTACHMENT10, "GL_COLOR_ATTACHMENT10");
#endif
#if defined(GL_COLOR_ATTACHMENT11)
defconsti(env, "GL-COLOR-ATTACHMENT11", (GLenum) GL_COLOR_ATTACHMENT11, "GL_COLOR_ATTACHMENT11");
#endif
#if defined(GL_COLOR_ATTACHMENT12)
defconsti(env, "GL-COLOR-ATTACHMENT12", (GLenum) GL_COLOR_ATTACHMENT12, "GL_COLOR_ATTACHMENT12");
#endif
#if defined(GL_COLOR_ATTACHMENT13)
defconsti(env, "GL-COLOR-ATTACHMENT13", (GLenum) GL_COLOR_ATTACHMENT13, "GL_COLOR_ATTACHMENT13");
#endif
#if defined(GL_COLOR_ATTACHMENT14)
defconsti(env, "GL-COLOR-ATTACHMENT14", (GLenum) GL_COLOR_ATTACHMENT14, "GL_COLOR_ATTACHMENT14");
#endif
#if defined(GL_COLOR_ATTACHMENT15)
defconsti(env, "GL-COLOR-ATTACHMENT15", (GLenum) GL_COLOR_ATTACHMENT15, "GL_COLOR_ATTACHMENT15");
#endif
#if defined(GL_COLOR_ATTACHMENT16)
defconsti(env, "GL-COLOR-ATTACHMENT16", (GLenum) GL_COLOR_ATTACHMENT16, "GL_COLOR_ATTACHMENT16");
#endif
#if defined(GL_COLOR_ATTACHMENT17)
defconsti(env, "GL-COLOR-ATTACHMENT17", (GLenum) GL_COLOR_ATTACHMENT17, "GL_COLOR_ATTACHMENT17");
#endif
#if defined(GL_COLOR_ATTACHMENT18)
defconsti(env, "GL-COLOR-ATTACHMENT18", (GLenum) GL_COLOR_ATTACHMENT18, "GL_COLOR_ATTACHMENT18");
#endif
#if defined(GL_COLOR_ATTACHMENT19)
defconsti(env, "GL-COLOR-ATTACHMENT19", (GLenum) GL_COLOR_ATTACHMENT19, "GL_COLOR_ATTACHMENT19");
#endif
#if defined(GL_COLOR_ATTACHMENT20)
defconsti(env, "GL-COLOR-ATTACHMENT20", (GLenum) GL_COLOR_ATTACHMENT20, "GL_COLOR_ATTACHMENT20");
#endif
#if defined(GL_COLOR_ATTACHMENT21)
defconsti(env, "GL-COLOR-ATTACHMENT21", (GLenum) GL_COLOR_ATTACHMENT21, "GL_COLOR_ATTACHMENT21");
#endif
#if defined(GL_COLOR_ATTACHMENT22)
defconsti(env, "GL-COLOR-ATTACHMENT22", (GLenum) GL_COLOR_ATTACHMENT22, "GL_COLOR_ATTACHMENT22");
#endif
#if defined(GL_COLOR_ATTACHMENT23)
defconsti(env, "GL-COLOR-ATTACHMENT23", (GLenum) GL_COLOR_ATTACHMENT23, "GL_COLOR_ATTACHMENT23");
#endif
#if defined(GL_COLOR_ATTACHMENT24)
defconsti(env, "GL-COLOR-ATTACHMENT24", (GLenum) GL_COLOR_ATTACHMENT24, "GL_COLOR_ATTACHMENT24");
#endif
#if defined(GL_COLOR_ATTACHMENT25)
defconsti(env, "GL-COLOR-ATTACHMENT25", (GLenum) GL_COLOR_ATTACHMENT25, "GL_COLOR_ATTACHMENT25");
#endif
#if defined(GL_COLOR_ATTACHMENT26)
defconsti(env, "GL-COLOR-ATTACHMENT26", (GLenum) GL_COLOR_ATTACHMENT26, "GL_COLOR_ATTACHMENT26");
#endif
#if defined(GL_COLOR_ATTACHMENT27)
defconsti(env, "GL-COLOR-ATTACHMENT27", (GLenum) GL_COLOR_ATTACHMENT27, "GL_COLOR_ATTACHMENT27");
#endif
#if defined(GL_COLOR_ATTACHMENT28)
defconsti(env, "GL-COLOR-ATTACHMENT28", (GLenum) GL_COLOR_ATTACHMENT28, "GL_COLOR_ATTACHMENT28");
#endif
#if defined(GL_COLOR_ATTACHMENT29)
defconsti(env, "GL-COLOR-ATTACHMENT29", (GLenum) GL_COLOR_ATTACHMENT29, "GL_COLOR_ATTACHMENT29");
#endif
#if defined(GL_COLOR_ATTACHMENT30)
defconsti(env, "GL-COLOR-ATTACHMENT30", (GLenum) GL_COLOR_ATTACHMENT30, "GL_COLOR_ATTACHMENT30");
#endif
#if defined(GL_COLOR_ATTACHMENT31)
defconsti(env, "GL-COLOR-ATTACHMENT31", (GLenum) GL_COLOR_ATTACHMENT31, "GL_COLOR_ATTACHMENT31");
#endif
#if defined(GL_DEPTH_ATTACHMENT)
defconsti(env, "GL-DEPTH-ATTACHMENT", (GLenum) GL_DEPTH_ATTACHMENT, "GL_DEPTH_ATTACHMENT");
#endif
#if defined(GL_STENCIL_ATTACHMENT)
defconsti(env, "GL-STENCIL-ATTACHMENT", (GLenum) GL_STENCIL_ATTACHMENT, "GL_STENCIL_ATTACHMENT");
#endif
#if defined(GL_FRAMEBUFFER)
defconsti(env, "GL-FRAMEBUFFER", (GLenum) GL_FRAMEBUFFER, "GL_FRAMEBUFFER");
#endif
#if defined(GL_RENDERBUFFER)
defconsti(env, "GL-RENDERBUFFER", (GLenum) GL_RENDERBUFFER, "GL_RENDERBUFFER");
#endif
#if defined(GL_RENDERBUFFER_WIDTH)
defconsti(env, "GL-RENDERBUFFER-WIDTH", (GLenum) GL_RENDERBUFFER_WIDTH, "GL_RENDERBUFFER_WIDTH");
#endif
#if defined(GL_RENDERBUFFER_HEIGHT)
defconsti(env, "GL-RENDERBUFFER-HEIGHT", (GLenum) GL_RENDERBUFFER_HEIGHT, "GL_RENDERBUFFER_HEIGHT");
#endif
#if defined(GL_RENDERBUFFER_INTERNAL_FORMAT)
defconsti(env, "GL-RENDERBUFFER-INTERNAL-FORMAT", (GLenum) GL_RENDERBUFFER_INTERNAL_FORMAT, "GL_RENDERBUFFER_INTERNAL_FORMAT");
#endif
#if defined(GL_STENCIL_INDEX1)
defconsti(env, "GL-STENCIL-INDEX1", (GLenum) GL_STENCIL_INDEX1, "GL_STENCIL_INDEX1");
#endif
#if defined(GL_STENCIL_INDEX4)
defconsti(env, "GL-STENCIL-INDEX4", (GLenum) GL_STENCIL_INDEX4, "GL_STENCIL_INDEX4");
#endif
#if defined(GL_STENCIL_INDEX8)
defconsti(env, "GL-STENCIL-INDEX8", (GLenum) GL_STENCIL_INDEX8, "GL_STENCIL_INDEX8");
#endif
#if defined(GL_STENCIL_INDEX16)
defconsti(env, "GL-STENCIL-INDEX16", (GLenum) GL_STENCIL_INDEX16, "GL_STENCIL_INDEX16");
#endif
#if defined(GL_RENDERBUFFER_RED_SIZE)
defconsti(env, "GL-RENDERBUFFER-RED-SIZE", (GLenum) GL_RENDERBUFFER_RED_SIZE, "GL_RENDERBUFFER_RED_SIZE");
#endif
#if defined(GL_RENDERBUFFER_GREEN_SIZE)
defconsti(env, "GL-RENDERBUFFER-GREEN-SIZE", (GLenum) GL_RENDERBUFFER_GREEN_SIZE, "GL_RENDERBUFFER_GREEN_SIZE");
#endif
#if defined(GL_RENDERBUFFER_BLUE_SIZE)
defconsti(env, "GL-RENDERBUFFER-BLUE-SIZE", (GLenum) GL_RENDERBUFFER_BLUE_SIZE, "GL_RENDERBUFFER_BLUE_SIZE");
#endif
#if defined(GL_RENDERBUFFER_ALPHA_SIZE)
defconsti(env, "GL-RENDERBUFFER-ALPHA-SIZE", (GLenum) GL_RENDERBUFFER_ALPHA_SIZE, "GL_RENDERBUFFER_ALPHA_SIZE");
#endif
#if defined(GL_RENDERBUFFER_DEPTH_SIZE)
defconsti(env, "GL-RENDERBUFFER-DEPTH-SIZE", (GLenum) GL_RENDERBUFFER_DEPTH_SIZE, "GL_RENDERBUFFER_DEPTH_SIZE");
#endif
#if defined(GL_RENDERBUFFER_STENCIL_SIZE)
defconsti(env, "GL-RENDERBUFFER-STENCIL-SIZE", (GLenum) GL_RENDERBUFFER_STENCIL_SIZE, "GL_RENDERBUFFER_STENCIL_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MULTISAMPLE", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE, "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE");
#endif
#if defined(GL_MAX_SAMPLES)
defconsti(env, "GL-MAX-SAMPLES", (GLenum) GL_MAX_SAMPLES, "GL_MAX_SAMPLES");
#endif
#if defined(GL_INDEX)
defconsti(env, "GL-INDEX", (GLenum) GL_INDEX, "GL_INDEX");
#endif
#if defined(GL_TEXTURE_LUMINANCE_TYPE)
defconsti(env, "GL-TEXTURE-LUMINANCE-TYPE", (GLenum) GL_TEXTURE_LUMINANCE_TYPE, "GL_TEXTURE_LUMINANCE_TYPE");
#endif
#if defined(GL_TEXTURE_INTENSITY_TYPE)
defconsti(env, "GL-TEXTURE-INTENSITY-TYPE", (GLenum) GL_TEXTURE_INTENSITY_TYPE, "GL_TEXTURE_INTENSITY_TYPE");
#endif
#if defined(GL_FRAMEBUFFER_SRGB)
defconsti(env, "GL-FRAMEBUFFER-SRGB", (GLenum) GL_FRAMEBUFFER_SRGB, "GL_FRAMEBUFFER_SRGB");
#endif
#if defined(GL_HALF_FLOAT)
defconsti(env, "GL-HALF-FLOAT", (GLenum) GL_HALF_FLOAT, "GL_HALF_FLOAT");
#endif
#if defined(GL_MAP_READ_BIT)
defconsti(env, "GL-MAP-READ-BIT", (GLenum) GL_MAP_READ_BIT, "GL_MAP_READ_BIT");
#endif
#if defined(GL_MAP_WRITE_BIT)
defconsti(env, "GL-MAP-WRITE-BIT", (GLenum) GL_MAP_WRITE_BIT, "GL_MAP_WRITE_BIT");
#endif
#if defined(GL_MAP_INVALIDATE_RANGE_BIT)
defconsti(env, "GL-MAP-INVALIDATE-RANGE-BIT", (GLenum) GL_MAP_INVALIDATE_RANGE_BIT, "GL_MAP_INVALIDATE_RANGE_BIT");
#endif
#if defined(GL_MAP_INVALIDATE_BUFFER_BIT)
defconsti(env, "GL-MAP-INVALIDATE-BUFFER-BIT", (GLenum) GL_MAP_INVALIDATE_BUFFER_BIT, "GL_MAP_INVALIDATE_BUFFER_BIT");
#endif
#if defined(GL_MAP_FLUSH_EXPLICIT_BIT)
defconsti(env, "GL-MAP-FLUSH-EXPLICIT-BIT", (GLenum) GL_MAP_FLUSH_EXPLICIT_BIT, "GL_MAP_FLUSH_EXPLICIT_BIT");
#endif
#if defined(GL_MAP_UNSYNCHRONIZED_BIT)
defconsti(env, "GL-MAP-UNSYNCHRONIZED-BIT", (GLenum) GL_MAP_UNSYNCHRONIZED_BIT, "GL_MAP_UNSYNCHRONIZED_BIT");
#endif
#if defined(GL_COMPRESSED_RED_RGTC1)
defconsti(env, "GL-COMPRESSED-RED-RGTC1", (GLenum) GL_COMPRESSED_RED_RGTC1, "GL_COMPRESSED_RED_RGTC1");
#endif
#if defined(GL_COMPRESSED_SIGNED_RED_RGTC1)
defconsti(env, "GL-COMPRESSED-SIGNED-RED-RGTC1", (GLenum) GL_COMPRESSED_SIGNED_RED_RGTC1, "GL_COMPRESSED_SIGNED_RED_RGTC1");
#endif
#if defined(GL_COMPRESSED_RG_RGTC2)
defconsti(env, "GL-COMPRESSED-RG-RGTC2", (GLenum) GL_COMPRESSED_RG_RGTC2, "GL_COMPRESSED_RG_RGTC2");
#endif
#if defined(GL_COMPRESSED_SIGNED_RG_RGTC2)
defconsti(env, "GL-COMPRESSED-SIGNED-RG-RGTC2", (GLenum) GL_COMPRESSED_SIGNED_RG_RGTC2, "GL_COMPRESSED_SIGNED_RG_RGTC2");
#endif
#if defined(GL_RG)
defconsti(env, "GL-RG", (GLenum) GL_RG, "GL_RG");
#endif
#if defined(GL_RG_INTEGER)
defconsti(env, "GL-RG-INTEGER", (GLenum) GL_RG_INTEGER, "GL_RG_INTEGER");
#endif
#if defined(GL_R8)
defconsti(env, "GL-R8", (GLenum) GL_R8, "GL_R8");
#endif
#if defined(GL_R16)
defconsti(env, "GL-R16", (GLenum) GL_R16, "GL_R16");
#endif
#if defined(GL_RG8)
defconsti(env, "GL-RG8", (GLenum) GL_RG8, "GL_RG8");
#endif
#if defined(GL_RG16)
defconsti(env, "GL-RG16", (GLenum) GL_RG16, "GL_RG16");
#endif
#if defined(GL_R16F)
defconsti(env, "GL-R16F", (GLenum) GL_R16F, "GL_R16F");
#endif
#if defined(GL_R32F)
defconsti(env, "GL-R32F", (GLenum) GL_R32F, "GL_R32F");
#endif
#if defined(GL_RG16F)
defconsti(env, "GL-RG16F", (GLenum) GL_RG16F, "GL_RG16F");
#endif
#if defined(GL_RG32F)
defconsti(env, "GL-RG32F", (GLenum) GL_RG32F, "GL_RG32F");
#endif
#if defined(GL_R8I)
defconsti(env, "GL-R8I", (GLenum) GL_R8I, "GL_R8I");
#endif
#if defined(GL_R8UI)
defconsti(env, "GL-R8UI", (GLenum) GL_R8UI, "GL_R8UI");
#endif
#if defined(GL_R16I)
defconsti(env, "GL-R16I", (GLenum) GL_R16I, "GL_R16I");
#endif
#if defined(GL_R16UI)
defconsti(env, "GL-R16UI", (GLenum) GL_R16UI, "GL_R16UI");
#endif
#if defined(GL_R32I)
defconsti(env, "GL-R32I", (GLenum) GL_R32I, "GL_R32I");
#endif
#if defined(GL_R32UI)
defconsti(env, "GL-R32UI", (GLenum) GL_R32UI, "GL_R32UI");
#endif
#if defined(GL_RG8I)
defconsti(env, "GL-RG8I", (GLenum) GL_RG8I, "GL_RG8I");
#endif
#if defined(GL_RG8UI)
defconsti(env, "GL-RG8UI", (GLenum) GL_RG8UI, "GL_RG8UI");
#endif
#if defined(GL_RG16I)
defconsti(env, "GL-RG16I", (GLenum) GL_RG16I, "GL_RG16I");
#endif
#if defined(GL_RG16UI)
defconsti(env, "GL-RG16UI", (GLenum) GL_RG16UI, "GL_RG16UI");
#endif
#if defined(GL_RG32I)
defconsti(env, "GL-RG32I", (GLenum) GL_RG32I, "GL_RG32I");
#endif
#if defined(GL_RG32UI)
defconsti(env, "GL-RG32UI", (GLenum) GL_RG32UI, "GL_RG32UI");
#endif
#if defined(GL_VERTEX_ARRAY_BINDING)
defconsti(env, "GL-VERTEX-ARRAY-BINDING", (GLenum) GL_VERTEX_ARRAY_BINDING, "GL_VERTEX_ARRAY_BINDING");
#endif
#if defined(GL_CLAMP_VERTEX_COLOR)
defconsti(env, "GL-CLAMP-VERTEX-COLOR", (GLenum) GL_CLAMP_VERTEX_COLOR, "GL_CLAMP_VERTEX_COLOR");
#endif
#if defined(GL_CLAMP_FRAGMENT_COLOR)
defconsti(env, "GL-CLAMP-FRAGMENT-COLOR", (GLenum) GL_CLAMP_FRAGMENT_COLOR, "GL_CLAMP_FRAGMENT_COLOR");
#endif
#if defined(GL_ALPHA_INTEGER)
defconsti(env, "GL-ALPHA-INTEGER", (GLenum) GL_ALPHA_INTEGER, "GL_ALPHA_INTEGER");
#endif
#if defined(GL_SAMPLER_2D_RECT)
defconsti(env, "GL-SAMPLER-2D-RECT", (GLenum) GL_SAMPLER_2D_RECT, "GL_SAMPLER_2D_RECT");
#endif
#if defined(GL_SAMPLER_2D_RECT_SHADOW)
defconsti(env, "GL-SAMPLER-2D-RECT-SHADOW", (GLenum) GL_SAMPLER_2D_RECT_SHADOW, "GL_SAMPLER_2D_RECT_SHADOW");
#endif
#if defined(GL_SAMPLER_BUFFER)
defconsti(env, "GL-SAMPLER-BUFFER", (GLenum) GL_SAMPLER_BUFFER, "GL_SAMPLER_BUFFER");
#endif
#if defined(GL_INT_SAMPLER_2D_RECT)
defconsti(env, "GL-INT-SAMPLER-2D-RECT", (GLenum) GL_INT_SAMPLER_2D_RECT, "GL_INT_SAMPLER_2D_RECT");
#endif
#if defined(GL_INT_SAMPLER_BUFFER)
defconsti(env, "GL-INT-SAMPLER-BUFFER", (GLenum) GL_INT_SAMPLER_BUFFER, "GL_INT_SAMPLER_BUFFER");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_RECT)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-RECT", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_RECT, "GL_UNSIGNED_INT_SAMPLER_2D_RECT");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_BUFFER)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-BUFFER", (GLenum) GL_UNSIGNED_INT_SAMPLER_BUFFER, "GL_UNSIGNED_INT_SAMPLER_BUFFER");
#endif
#if defined(GL_TEXTURE_BUFFER)
defconsti(env, "GL-TEXTURE-BUFFER", (GLenum) GL_TEXTURE_BUFFER, "GL_TEXTURE_BUFFER");
#endif
#if defined(GL_MAX_TEXTURE_BUFFER_SIZE)
defconsti(env, "GL-MAX-TEXTURE-BUFFER-SIZE", (GLenum) GL_MAX_TEXTURE_BUFFER_SIZE, "GL_MAX_TEXTURE_BUFFER_SIZE");
#endif
#if defined(GL_TEXTURE_BINDING_BUFFER)
defconsti(env, "GL-TEXTURE-BINDING-BUFFER", (GLenum) GL_TEXTURE_BINDING_BUFFER, "GL_TEXTURE_BINDING_BUFFER");
#endif
#if defined(GL_TEXTURE_BUFFER_DATA_STORE_BINDING)
defconsti(env, "GL-TEXTURE-BUFFER-DATA-STORE-BINDING", (GLenum) GL_TEXTURE_BUFFER_DATA_STORE_BINDING, "GL_TEXTURE_BUFFER_DATA_STORE_BINDING");
#endif
#if defined(GL_TEXTURE_RECTANGLE)
defconsti(env, "GL-TEXTURE-RECTANGLE", (GLenum) GL_TEXTURE_RECTANGLE, "GL_TEXTURE_RECTANGLE");
#endif
#if defined(GL_TEXTURE_BINDING_RECTANGLE)
defconsti(env, "GL-TEXTURE-BINDING-RECTANGLE", (GLenum) GL_TEXTURE_BINDING_RECTANGLE, "GL_TEXTURE_BINDING_RECTANGLE");
#endif
#if defined(GL_PROXY_TEXTURE_RECTANGLE)
defconsti(env, "GL-PROXY-TEXTURE-RECTANGLE", (GLenum) GL_PROXY_TEXTURE_RECTANGLE, "GL_PROXY_TEXTURE_RECTANGLE");
#endif
#if defined(GL_MAX_RECTANGLE_TEXTURE_SIZE)
defconsti(env, "GL-MAX-RECTANGLE-TEXTURE-SIZE", (GLenum) GL_MAX_RECTANGLE_TEXTURE_SIZE, "GL_MAX_RECTANGLE_TEXTURE_SIZE");
#endif
#if defined(GL_R8_SNORM)
defconsti(env, "GL-R8-SNORM", (GLenum) GL_R8_SNORM, "GL_R8_SNORM");
#endif
#if defined(GL_RG8_SNORM)
defconsti(env, "GL-RG8-SNORM", (GLenum) GL_RG8_SNORM, "GL_RG8_SNORM");
#endif
#if defined(GL_RGB8_SNORM)
defconsti(env, "GL-RGB8-SNORM", (GLenum) GL_RGB8_SNORM, "GL_RGB8_SNORM");
#endif
#if defined(GL_RGBA8_SNORM)
defconsti(env, "GL-RGBA8-SNORM", (GLenum) GL_RGBA8_SNORM, "GL_RGBA8_SNORM");
#endif
#if defined(GL_R16_SNORM)
defconsti(env, "GL-R16-SNORM", (GLenum) GL_R16_SNORM, "GL_R16_SNORM");
#endif
#if defined(GL_RG16_SNORM)
defconsti(env, "GL-RG16-SNORM", (GLenum) GL_RG16_SNORM, "GL_RG16_SNORM");
#endif
#if defined(GL_RGB16_SNORM)
defconsti(env, "GL-RGB16-SNORM", (GLenum) GL_RGB16_SNORM, "GL_RGB16_SNORM");
#endif
#if defined(GL_RGBA16_SNORM)
defconsti(env, "GL-RGBA16-SNORM", (GLenum) GL_RGBA16_SNORM, "GL_RGBA16_SNORM");
#endif
#if defined(GL_SIGNED_NORMALIZED)
defconsti(env, "GL-SIGNED-NORMALIZED", (GLenum) GL_SIGNED_NORMALIZED, "GL_SIGNED_NORMALIZED");
#endif
#if defined(GL_PRIMITIVE_RESTART)
defconsti(env, "GL-PRIMITIVE-RESTART", (GLenum) GL_PRIMITIVE_RESTART, "GL_PRIMITIVE_RESTART");
#endif
#if defined(GL_PRIMITIVE_RESTART_INDEX)
defconsti(env, "GL-PRIMITIVE-RESTART-INDEX", (GLenum) GL_PRIMITIVE_RESTART_INDEX, "GL_PRIMITIVE_RESTART_INDEX");
#endif
#if defined(GL_COPY_READ_BUFFER)
defconsti(env, "GL-COPY-READ-BUFFER", (GLenum) GL_COPY_READ_BUFFER, "GL_COPY_READ_BUFFER");
#endif
#if defined(GL_COPY_WRITE_BUFFER)
defconsti(env, "GL-COPY-WRITE-BUFFER", (GLenum) GL_COPY_WRITE_BUFFER, "GL_COPY_WRITE_BUFFER");
#endif
#if defined(GL_UNIFORM_BUFFER)
defconsti(env, "GL-UNIFORM-BUFFER", (GLenum) GL_UNIFORM_BUFFER, "GL_UNIFORM_BUFFER");
#endif
#if defined(GL_UNIFORM_BUFFER_BINDING)
defconsti(env, "GL-UNIFORM-BUFFER-BINDING", (GLenum) GL_UNIFORM_BUFFER_BINDING, "GL_UNIFORM_BUFFER_BINDING");
#endif
#if defined(GL_UNIFORM_BUFFER_START)
defconsti(env, "GL-UNIFORM-BUFFER-START", (GLenum) GL_UNIFORM_BUFFER_START, "GL_UNIFORM_BUFFER_START");
#endif
#if defined(GL_UNIFORM_BUFFER_SIZE)
defconsti(env, "GL-UNIFORM-BUFFER-SIZE", (GLenum) GL_UNIFORM_BUFFER_SIZE, "GL_UNIFORM_BUFFER_SIZE");
#endif
#if defined(GL_MAX_VERTEX_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-VERTEX-UNIFORM-BLOCKS", (GLenum) GL_MAX_VERTEX_UNIFORM_BLOCKS, "GL_MAX_VERTEX_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_GEOMETRY_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-GEOMETRY-UNIFORM-BLOCKS", (GLenum) GL_MAX_GEOMETRY_UNIFORM_BLOCKS, "GL_MAX_GEOMETRY_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_FRAGMENT_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-FRAGMENT-UNIFORM-BLOCKS", (GLenum) GL_MAX_FRAGMENT_UNIFORM_BLOCKS, "GL_MAX_FRAGMENT_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_COMBINED_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-COMBINED-UNIFORM-BLOCKS", (GLenum) GL_MAX_COMBINED_UNIFORM_BLOCKS, "GL_MAX_COMBINED_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_UNIFORM_BUFFER_BINDINGS)
defconsti(env, "GL-MAX-UNIFORM-BUFFER-BINDINGS", (GLenum) GL_MAX_UNIFORM_BUFFER_BINDINGS, "GL_MAX_UNIFORM_BUFFER_BINDINGS");
#endif
#if defined(GL_MAX_UNIFORM_BLOCK_SIZE)
defconsti(env, "GL-MAX-UNIFORM-BLOCK-SIZE", (GLenum) GL_MAX_UNIFORM_BLOCK_SIZE, "GL_MAX_UNIFORM_BLOCK_SIZE");
#endif
#if defined(GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-VERTEX-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-GEOMETRY-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-FRAGMENT-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS");
#endif
#if defined(GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT)
defconsti(env, "GL-UNIFORM-BUFFER-OFFSET-ALIGNMENT", (GLenum) GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT, "GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT");
#endif
#if defined(GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH)
defconsti(env, "GL-ACTIVE-UNIFORM-BLOCK-MAX-NAME-LENGTH", (GLenum) GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH, "GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH");
#endif
#if defined(GL_ACTIVE_UNIFORM_BLOCKS)
defconsti(env, "GL-ACTIVE-UNIFORM-BLOCKS", (GLenum) GL_ACTIVE_UNIFORM_BLOCKS, "GL_ACTIVE_UNIFORM_BLOCKS");
#endif
#if defined(GL_UNIFORM_TYPE)
defconsti(env, "GL-UNIFORM-TYPE", (GLenum) GL_UNIFORM_TYPE, "GL_UNIFORM_TYPE");
#endif
#if defined(GL_UNIFORM_SIZE)
defconsti(env, "GL-UNIFORM-SIZE", (GLenum) GL_UNIFORM_SIZE, "GL_UNIFORM_SIZE");
#endif
#if defined(GL_UNIFORM_NAME_LENGTH)
defconsti(env, "GL-UNIFORM-NAME-LENGTH", (GLenum) GL_UNIFORM_NAME_LENGTH, "GL_UNIFORM_NAME_LENGTH");
#endif
#if defined(GL_UNIFORM_BLOCK_INDEX)
defconsti(env, "GL-UNIFORM-BLOCK-INDEX", (GLenum) GL_UNIFORM_BLOCK_INDEX, "GL_UNIFORM_BLOCK_INDEX");
#endif
#if defined(GL_UNIFORM_OFFSET)
defconsti(env, "GL-UNIFORM-OFFSET", (GLenum) GL_UNIFORM_OFFSET, "GL_UNIFORM_OFFSET");
#endif
#if defined(GL_UNIFORM_ARRAY_STRIDE)
defconsti(env, "GL-UNIFORM-ARRAY-STRIDE", (GLenum) GL_UNIFORM_ARRAY_STRIDE, "GL_UNIFORM_ARRAY_STRIDE");
#endif
#if defined(GL_UNIFORM_MATRIX_STRIDE)
defconsti(env, "GL-UNIFORM-MATRIX-STRIDE", (GLenum) GL_UNIFORM_MATRIX_STRIDE, "GL_UNIFORM_MATRIX_STRIDE");
#endif
#if defined(GL_UNIFORM_IS_ROW_MAJOR)
defconsti(env, "GL-UNIFORM-IS-ROW-MAJOR", (GLenum) GL_UNIFORM_IS_ROW_MAJOR, "GL_UNIFORM_IS_ROW_MAJOR");
#endif
#if defined(GL_UNIFORM_BLOCK_BINDING)
defconsti(env, "GL-UNIFORM-BLOCK-BINDING", (GLenum) GL_UNIFORM_BLOCK_BINDING, "GL_UNIFORM_BLOCK_BINDING");
#endif
#if defined(GL_UNIFORM_BLOCK_DATA_SIZE)
defconsti(env, "GL-UNIFORM-BLOCK-DATA-SIZE", (GLenum) GL_UNIFORM_BLOCK_DATA_SIZE, "GL_UNIFORM_BLOCK_DATA_SIZE");
#endif
#if defined(GL_UNIFORM_BLOCK_NAME_LENGTH)
defconsti(env, "GL-UNIFORM-BLOCK-NAME-LENGTH", (GLenum) GL_UNIFORM_BLOCK_NAME_LENGTH, "GL_UNIFORM_BLOCK_NAME_LENGTH");
#endif
#if defined(GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS)
defconsti(env, "GL-UNIFORM-BLOCK-ACTIVE-UNIFORMS", (GLenum) GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS, "GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS");
#endif
#if defined(GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES)
defconsti(env, "GL-UNIFORM-BLOCK-ACTIVE-UNIFORM-INDICES", (GLenum) GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES, "GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-VERTEX-SHADER", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER, "GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-GEOMETRY-SHADER", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER, "GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-FRAGMENT-SHADER", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER, "GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER");
#endif
#if defined(GL_INVALID_INDEX)
defconsti(env, "GL-INVALID-INDEX", (GLenum) GL_INVALID_INDEX, "GL_INVALID_INDEX");
#endif
#if defined(GL_CONTEXT_CORE_PROFILE_BIT)
defconsti(env, "GL-CONTEXT-CORE-PROFILE-BIT", (GLenum) GL_CONTEXT_CORE_PROFILE_BIT, "GL_CONTEXT_CORE_PROFILE_BIT");
#endif
#if defined(GL_CONTEXT_COMPATIBILITY_PROFILE_BIT)
defconsti(env, "GL-CONTEXT-COMPATIBILITY-PROFILE-BIT", (GLenum) GL_CONTEXT_COMPATIBILITY_PROFILE_BIT, "GL_CONTEXT_COMPATIBILITY_PROFILE_BIT");
#endif
#if defined(GL_LINES_ADJACENCY)
defconsti(env, "GL-LINES-ADJACENCY", (GLenum) GL_LINES_ADJACENCY, "GL_LINES_ADJACENCY");
#endif
#if defined(GL_LINE_STRIP_ADJACENCY)
defconsti(env, "GL-LINE-STRIP-ADJACENCY", (GLenum) GL_LINE_STRIP_ADJACENCY, "GL_LINE_STRIP_ADJACENCY");
#endif
#if defined(GL_TRIANGLES_ADJACENCY)
defconsti(env, "GL-TRIANGLES-ADJACENCY", (GLenum) GL_TRIANGLES_ADJACENCY, "GL_TRIANGLES_ADJACENCY");
#endif
#if defined(GL_TRIANGLE_STRIP_ADJACENCY)
defconsti(env, "GL-TRIANGLE-STRIP-ADJACENCY", (GLenum) GL_TRIANGLE_STRIP_ADJACENCY, "GL_TRIANGLE_STRIP_ADJACENCY");
#endif
#if defined(GL_PROGRAM_POINT_SIZE)
defconsti(env, "GL-PROGRAM-POINT-SIZE", (GLenum) GL_PROGRAM_POINT_SIZE, "GL_PROGRAM_POINT_SIZE");
#endif
#if defined(GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-GEOMETRY-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS, "GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_LAYERED)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-LAYERED", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_LAYERED, "GL_FRAMEBUFFER_ATTACHMENT_LAYERED");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-LAYER-TARGETS", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS, "GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS");
#endif
#if defined(GL_GEOMETRY_SHADER)
defconsti(env, "GL-GEOMETRY-SHADER", (GLenum) GL_GEOMETRY_SHADER, "GL_GEOMETRY_SHADER");
#endif
#if defined(GL_GEOMETRY_VERTICES_OUT)
defconsti(env, "GL-GEOMETRY-VERTICES-OUT", (GLenum) GL_GEOMETRY_VERTICES_OUT, "GL_GEOMETRY_VERTICES_OUT");
#endif
#if defined(GL_GEOMETRY_INPUT_TYPE)
defconsti(env, "GL-GEOMETRY-INPUT-TYPE", (GLenum) GL_GEOMETRY_INPUT_TYPE, "GL_GEOMETRY_INPUT_TYPE");
#endif
#if defined(GL_GEOMETRY_OUTPUT_TYPE)
defconsti(env, "GL-GEOMETRY-OUTPUT-TYPE", (GLenum) GL_GEOMETRY_OUTPUT_TYPE, "GL_GEOMETRY_OUTPUT_TYPE");
#endif
#if defined(GL_MAX_GEOMETRY_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-GEOMETRY-UNIFORM-COMPONENTS", (GLenum) GL_MAX_GEOMETRY_UNIFORM_COMPONENTS, "GL_MAX_GEOMETRY_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_GEOMETRY_OUTPUT_VERTICES)
defconsti(env, "GL-MAX-GEOMETRY-OUTPUT-VERTICES", (GLenum) GL_MAX_GEOMETRY_OUTPUT_VERTICES, "GL_MAX_GEOMETRY_OUTPUT_VERTICES");
#endif
#if defined(GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS)
defconsti(env, "GL-MAX-GEOMETRY-TOTAL-OUTPUT-COMPONENTS", (GLenum) GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS, "GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS");
#endif
#if defined(GL_MAX_VERTEX_OUTPUT_COMPONENTS)
defconsti(env, "GL-MAX-VERTEX-OUTPUT-COMPONENTS", (GLenum) GL_MAX_VERTEX_OUTPUT_COMPONENTS, "GL_MAX_VERTEX_OUTPUT_COMPONENTS");
#endif
#if defined(GL_MAX_GEOMETRY_INPUT_COMPONENTS)
defconsti(env, "GL-MAX-GEOMETRY-INPUT-COMPONENTS", (GLenum) GL_MAX_GEOMETRY_INPUT_COMPONENTS, "GL_MAX_GEOMETRY_INPUT_COMPONENTS");
#endif
#if defined(GL_MAX_GEOMETRY_OUTPUT_COMPONENTS)
defconsti(env, "GL-MAX-GEOMETRY-OUTPUT-COMPONENTS", (GLenum) GL_MAX_GEOMETRY_OUTPUT_COMPONENTS, "GL_MAX_GEOMETRY_OUTPUT_COMPONENTS");
#endif
#if defined(GL_MAX_FRAGMENT_INPUT_COMPONENTS)
defconsti(env, "GL-MAX-FRAGMENT-INPUT-COMPONENTS", (GLenum) GL_MAX_FRAGMENT_INPUT_COMPONENTS, "GL_MAX_FRAGMENT_INPUT_COMPONENTS");
#endif
#if defined(GL_CONTEXT_PROFILE_MASK)
defconsti(env, "GL-CONTEXT-PROFILE-MASK", (GLenum) GL_CONTEXT_PROFILE_MASK, "GL_CONTEXT_PROFILE_MASK");
#endif
#if defined(GL_DEPTH_CLAMP)
defconsti(env, "GL-DEPTH-CLAMP", (GLenum) GL_DEPTH_CLAMP, "GL_DEPTH_CLAMP");
#endif
#if defined(GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION)
defconsti(env, "GL-QUADS-FOLLOW-PROVOKING-VERTEX-CONVENTION", (GLenum) GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION, "GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION");
#endif
#if defined(GL_FIRST_VERTEX_CONVENTION)
defconsti(env, "GL-FIRST-VERTEX-CONVENTION", (GLenum) GL_FIRST_VERTEX_CONVENTION, "GL_FIRST_VERTEX_CONVENTION");
#endif
#if defined(GL_LAST_VERTEX_CONVENTION)
defconsti(env, "GL-LAST-VERTEX-CONVENTION", (GLenum) GL_LAST_VERTEX_CONVENTION, "GL_LAST_VERTEX_CONVENTION");
#endif
#if defined(GL_PROVOKING_VERTEX)
defconsti(env, "GL-PROVOKING-VERTEX", (GLenum) GL_PROVOKING_VERTEX, "GL_PROVOKING_VERTEX");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_SEAMLESS)
defconsti(env, "GL-TEXTURE-CUBE-MAP-SEAMLESS", (GLenum) GL_TEXTURE_CUBE_MAP_SEAMLESS, "GL_TEXTURE_CUBE_MAP_SEAMLESS");
#endif
#if defined(GL_MAX_SERVER_WAIT_TIMEOUT)
defconsti(env, "GL-MAX-SERVER-WAIT-TIMEOUT", (GLenum) GL_MAX_SERVER_WAIT_TIMEOUT, "GL_MAX_SERVER_WAIT_TIMEOUT");
#endif
#if defined(GL_OBJECT_TYPE)
defconsti(env, "GL-OBJECT-TYPE", (GLenum) GL_OBJECT_TYPE, "GL_OBJECT_TYPE");
#endif
#if defined(GL_SYNC_CONDITION)
defconsti(env, "GL-SYNC-CONDITION", (GLenum) GL_SYNC_CONDITION, "GL_SYNC_CONDITION");
#endif
#if defined(GL_SYNC_STATUS)
defconsti(env, "GL-SYNC-STATUS", (GLenum) GL_SYNC_STATUS, "GL_SYNC_STATUS");
#endif
#if defined(GL_SYNC_FLAGS)
defconsti(env, "GL-SYNC-FLAGS", (GLenum) GL_SYNC_FLAGS, "GL_SYNC_FLAGS");
#endif
#if defined(GL_SYNC_FENCE)
defconsti(env, "GL-SYNC-FENCE", (GLenum) GL_SYNC_FENCE, "GL_SYNC_FENCE");
#endif
#if defined(GL_SYNC_GPU_COMMANDS_COMPLETE)
defconsti(env, "GL-SYNC-GPU-COMMANDS-COMPLETE", (GLenum) GL_SYNC_GPU_COMMANDS_COMPLETE, "GL_SYNC_GPU_COMMANDS_COMPLETE");
#endif
#if defined(GL_UNSIGNALED)
defconsti(env, "GL-UNSIGNALED", (GLenum) GL_UNSIGNALED, "GL_UNSIGNALED");
#endif
#if defined(GL_SIGNALED)
defconsti(env, "GL-SIGNALED", (GLenum) GL_SIGNALED, "GL_SIGNALED");
#endif
#if defined(GL_ALREADY_SIGNALED)
defconsti(env, "GL-ALREADY-SIGNALED", (GLenum) GL_ALREADY_SIGNALED, "GL_ALREADY_SIGNALED");
#endif
#if defined(GL_TIMEOUT_EXPIRED)
defconsti(env, "GL-TIMEOUT-EXPIRED", (GLenum) GL_TIMEOUT_EXPIRED, "GL_TIMEOUT_EXPIRED");
#endif
#if defined(GL_CONDITION_SATISFIED)
defconsti(env, "GL-CONDITION-SATISFIED", (GLenum) GL_CONDITION_SATISFIED, "GL_CONDITION_SATISFIED");
#endif
#if defined(GL_WAIT_FAILED)
defconsti(env, "GL-WAIT-FAILED", (GLenum) GL_WAIT_FAILED, "GL_WAIT_FAILED");
#endif
#if defined(GL_TIMEOUT_IGNORED)
defconsti(env, "GL-TIMEOUT-IGNORED", (GLenum) GL_TIMEOUT_IGNORED, "GL_TIMEOUT_IGNORED");
#endif
#if defined(GL_SYNC_FLUSH_COMMANDS_BIT)
defconsti(env, "GL-SYNC-FLUSH-COMMANDS-BIT", (GLenum) GL_SYNC_FLUSH_COMMANDS_BIT, "GL_SYNC_FLUSH_COMMANDS_BIT");
#endif
#if defined(GL_SAMPLE_POSITION)
defconsti(env, "GL-SAMPLE-POSITION", (GLenum) GL_SAMPLE_POSITION, "GL_SAMPLE_POSITION");
#endif
#if defined(GL_SAMPLE_MASK)
defconsti(env, "GL-SAMPLE-MASK", (GLenum) GL_SAMPLE_MASK, "GL_SAMPLE_MASK");
#endif
#if defined(GL_SAMPLE_MASK_VALUE)
defconsti(env, "GL-SAMPLE-MASK-VALUE", (GLenum) GL_SAMPLE_MASK_VALUE, "GL_SAMPLE_MASK_VALUE");
#endif
#if defined(GL_MAX_SAMPLE_MASK_WORDS)
defconsti(env, "GL-MAX-SAMPLE-MASK-WORDS", (GLenum) GL_MAX_SAMPLE_MASK_WORDS, "GL_MAX_SAMPLE_MASK_WORDS");
#endif
#if defined(GL_TEXTURE_2D_MULTISAMPLE)
defconsti(env, "GL-TEXTURE-2D-MULTISAMPLE", (GLenum) GL_TEXTURE_2D_MULTISAMPLE, "GL_TEXTURE_2D_MULTISAMPLE");
#endif
#if defined(GL_PROXY_TEXTURE_2D_MULTISAMPLE)
defconsti(env, "GL-PROXY-TEXTURE-2D-MULTISAMPLE", (GLenum) GL_PROXY_TEXTURE_2D_MULTISAMPLE, "GL_PROXY_TEXTURE_2D_MULTISAMPLE");
#endif
#if defined(GL_TEXTURE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-TEXTURE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_TEXTURE_2D_MULTISAMPLE_ARRAY, "GL_TEXTURE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-PROXY-TEXTURE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY, "GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_TEXTURE_BINDING_2D_MULTISAMPLE)
defconsti(env, "GL-TEXTURE-BINDING-2D-MULTISAMPLE", (GLenum) GL_TEXTURE_BINDING_2D_MULTISAMPLE, "GL_TEXTURE_BINDING_2D_MULTISAMPLE");
#endif
#if defined(GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-TEXTURE-BINDING-2D-MULTISAMPLE-ARRAY", (GLenum) GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY, "GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_TEXTURE_SAMPLES)
defconsti(env, "GL-TEXTURE-SAMPLES", (GLenum) GL_TEXTURE_SAMPLES, "GL_TEXTURE_SAMPLES");
#endif
#if defined(GL_TEXTURE_FIXED_SAMPLE_LOCATIONS)
defconsti(env, "GL-TEXTURE-FIXED-SAMPLE-LOCATIONS", (GLenum) GL_TEXTURE_FIXED_SAMPLE_LOCATIONS, "GL_TEXTURE_FIXED_SAMPLE_LOCATIONS");
#endif
#if defined(GL_SAMPLER_2D_MULTISAMPLE)
defconsti(env, "GL-SAMPLER-2D-MULTISAMPLE", (GLenum) GL_SAMPLER_2D_MULTISAMPLE, "GL_SAMPLER_2D_MULTISAMPLE");
#endif
#if defined(GL_INT_SAMPLER_2D_MULTISAMPLE)
defconsti(env, "GL-INT-SAMPLER-2D-MULTISAMPLE", (GLenum) GL_INT_SAMPLER_2D_MULTISAMPLE, "GL_INT_SAMPLER_2D_MULTISAMPLE");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-MULTISAMPLE", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE, "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE");
#endif
#if defined(GL_SAMPLER_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-SAMPLER-2D-MULTISAMPLE-ARRAY", (GLenum) GL_SAMPLER_2D_MULTISAMPLE_ARRAY, "GL_SAMPLER_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-INT-SAMPLER-2D-MULTISAMPLE-ARRAY", (GLenum) GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY, "GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-MULTISAMPLE-ARRAY", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY, "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_MAX_COLOR_TEXTURE_SAMPLES)
defconsti(env, "GL-MAX-COLOR-TEXTURE-SAMPLES", (GLenum) GL_MAX_COLOR_TEXTURE_SAMPLES, "GL_MAX_COLOR_TEXTURE_SAMPLES");
#endif
#if defined(GL_MAX_DEPTH_TEXTURE_SAMPLES)
defconsti(env, "GL-MAX-DEPTH-TEXTURE-SAMPLES", (GLenum) GL_MAX_DEPTH_TEXTURE_SAMPLES, "GL_MAX_DEPTH_TEXTURE_SAMPLES");
#endif
#if defined(GL_MAX_INTEGER_SAMPLES)
defconsti(env, "GL-MAX-INTEGER-SAMPLES", (GLenum) GL_MAX_INTEGER_SAMPLES, "GL_MAX_INTEGER_SAMPLES");
#endif
#if defined(GL_CURRENT_BIT)
defconsti(env, "GL-CURRENT-BIT", (GLenum) GL_CURRENT_BIT, "GL_CURRENT_BIT");
#endif
#if defined(GL_POINT_BIT)
defconsti(env, "GL-POINT-BIT", (GLenum) GL_POINT_BIT, "GL_POINT_BIT");
#endif
#if defined(GL_LINE_BIT)
defconsti(env, "GL-LINE-BIT", (GLenum) GL_LINE_BIT, "GL_LINE_BIT");
#endif
#if defined(GL_POLYGON_BIT)
defconsti(env, "GL-POLYGON-BIT", (GLenum) GL_POLYGON_BIT, "GL_POLYGON_BIT");
#endif
#if defined(GL_POLYGON_STIPPLE_BIT)
defconsti(env, "GL-POLYGON-STIPPLE-BIT", (GLenum) GL_POLYGON_STIPPLE_BIT, "GL_POLYGON_STIPPLE_BIT");
#endif
#if defined(GL_PIXEL_MODE_BIT)
defconsti(env, "GL-PIXEL-MODE-BIT", (GLenum) GL_PIXEL_MODE_BIT, "GL_PIXEL_MODE_BIT");
#endif
#if defined(GL_LIGHTING_BIT)
defconsti(env, "GL-LIGHTING-BIT", (GLenum) GL_LIGHTING_BIT, "GL_LIGHTING_BIT");
#endif
#if defined(GL_FOG_BIT)
defconsti(env, "GL-FOG-BIT", (GLenum) GL_FOG_BIT, "GL_FOG_BIT");
#endif
#if defined(GL_ACCUM_BUFFER_BIT)
defconsti(env, "GL-ACCUM-BUFFER-BIT", (GLenum) GL_ACCUM_BUFFER_BIT, "GL_ACCUM_BUFFER_BIT");
#endif
#if defined(GL_VIEWPORT_BIT)
defconsti(env, "GL-VIEWPORT-BIT", (GLenum) GL_VIEWPORT_BIT, "GL_VIEWPORT_BIT");
#endif
#if defined(GL_TRANSFORM_BIT)
defconsti(env, "GL-TRANSFORM-BIT", (GLenum) GL_TRANSFORM_BIT, "GL_TRANSFORM_BIT");
#endif
#if defined(GL_ENABLE_BIT)
defconsti(env, "GL-ENABLE-BIT", (GLenum) GL_ENABLE_BIT, "GL_ENABLE_BIT");
#endif
#if defined(GL_HINT_BIT)
defconsti(env, "GL-HINT-BIT", (GLenum) GL_HINT_BIT, "GL_HINT_BIT");
#endif
#if defined(GL_EVAL_BIT)
defconsti(env, "GL-EVAL-BIT", (GLenum) GL_EVAL_BIT, "GL_EVAL_BIT");
#endif
#if defined(GL_LIST_BIT)
defconsti(env, "GL-LIST-BIT", (GLenum) GL_LIST_BIT, "GL_LIST_BIT");
#endif
#if defined(GL_TEXTURE_BIT)
defconsti(env, "GL-TEXTURE-BIT", (GLenum) GL_TEXTURE_BIT, "GL_TEXTURE_BIT");
#endif
#if defined(GL_SCISSOR_BIT)
defconsti(env, "GL-SCISSOR-BIT", (GLenum) GL_SCISSOR_BIT, "GL_SCISSOR_BIT");
#endif
#if defined(GL_ALL_ATTRIB_BITS)
defconsti(env, "GL-ALL-ATTRIB-BITS", (GLenum) GL_ALL_ATTRIB_BITS, "GL_ALL_ATTRIB_BITS");
#endif
#if defined(GL_CLIENT_PIXEL_STORE_BIT)
defconsti(env, "GL-CLIENT-PIXEL-STORE-BIT", (GLenum) GL_CLIENT_PIXEL_STORE_BIT, "GL_CLIENT_PIXEL_STORE_BIT");
#endif
#if defined(GL_CLIENT_VERTEX_ARRAY_BIT)
defconsti(env, "GL-CLIENT-VERTEX-ARRAY-BIT", (GLenum) GL_CLIENT_VERTEX_ARRAY_BIT, "GL_CLIENT_VERTEX_ARRAY_BIT");
#endif
#if defined(GL_CLIENT_ALL_ATTRIB_BITS)
defconsti(env, "GL-CLIENT-ALL-ATTRIB-BITS", (GLenum) GL_CLIENT_ALL_ATTRIB_BITS, "GL_CLIENT_ALL_ATTRIB_BITS");
#endif
#if defined(GL_QUAD_STRIP)
defconsti(env, "GL-QUAD-STRIP", (GLenum) GL_QUAD_STRIP, "GL_QUAD_STRIP");
#endif
#if defined(GL_QUADS)
defconsti(env, "GL-QUADS", (GLenum) GL_QUADS, "GL_QUADS");
#endif
#if defined(GL_POLYGON)
defconsti(env, "GL-POLYGON", (GLenum) GL_POLYGON, "GL_POLYGON");
#endif
#if defined(GL_ACCUM)
defconsti(env, "GL-ACCUM", (GLenum) GL_ACCUM, "GL_ACCUM");
#endif
#if defined(GL_LOAD)
defconsti(env, "GL-LOAD", (GLenum) GL_LOAD, "GL_LOAD");
#endif
#if defined(GL_RETURN)
defconsti(env, "GL-RETURN", (GLenum) GL_RETURN, "GL_RETURN");
#endif
#if defined(GL_MULT)
defconsti(env, "GL-MULT", (GLenum) GL_MULT, "GL_MULT");
#endif
#if defined(GL_ADD)
defconsti(env, "GL-ADD", (GLenum) GL_ADD, "GL_ADD");
#endif
#if defined(GL_STACK_OVERFLOW)
defconsti(env, "GL-STACK-OVERFLOW", (GLenum) GL_STACK_OVERFLOW, "GL_STACK_OVERFLOW");
#endif
#if defined(GL_STACK_UNDERFLOW)
defconsti(env, "GL-STACK-UNDERFLOW", (GLenum) GL_STACK_UNDERFLOW, "GL_STACK_UNDERFLOW");
#endif
#if defined(GL_AUX0)
defconsti(env, "GL-AUX0", (GLenum) GL_AUX0, "GL_AUX0");
#endif
#if defined(GL_AUX1)
defconsti(env, "GL-AUX1", (GLenum) GL_AUX1, "GL_AUX1");
#endif
#if defined(GL_AUX2)
defconsti(env, "GL-AUX2", (GLenum) GL_AUX2, "GL_AUX2");
#endif
#if defined(GL_AUX3)
defconsti(env, "GL-AUX3", (GLenum) GL_AUX3, "GL_AUX3");
#endif
#if defined(GL_2D)
defconsti(env, "GL-2D", (GLenum) GL_2D, "GL_2D");
#endif
#if defined(GL_3D)
defconsti(env, "GL-3D", (GLenum) GL_3D, "GL_3D");
#endif
#if defined(GL_3D_COLOR)
defconsti(env, "GL-3D-COLOR", (GLenum) GL_3D_COLOR, "GL_3D_COLOR");
#endif
#if defined(GL_3D_COLOR_TEXTURE)
defconsti(env, "GL-3D-COLOR-TEXTURE", (GLenum) GL_3D_COLOR_TEXTURE, "GL_3D_COLOR_TEXTURE");
#endif
#if defined(GL_4D_COLOR_TEXTURE)
defconsti(env, "GL-4D-COLOR-TEXTURE", (GLenum) GL_4D_COLOR_TEXTURE, "GL_4D_COLOR_TEXTURE");
#endif
#if defined(GL_PASS_THROUGH_TOKEN)
defconsti(env, "GL-PASS-THROUGH-TOKEN", (GLenum) GL_PASS_THROUGH_TOKEN, "GL_PASS_THROUGH_TOKEN");
#endif
#if defined(GL_POINT_TOKEN)
defconsti(env, "GL-POINT-TOKEN", (GLenum) GL_POINT_TOKEN, "GL_POINT_TOKEN");
#endif
#if defined(GL_LINE_TOKEN)
defconsti(env, "GL-LINE-TOKEN", (GLenum) GL_LINE_TOKEN, "GL_LINE_TOKEN");
#endif
#if defined(GL_POLYGON_TOKEN)
defconsti(env, "GL-POLYGON-TOKEN", (GLenum) GL_POLYGON_TOKEN, "GL_POLYGON_TOKEN");
#endif
#if defined(GL_BITMAP_TOKEN)
defconsti(env, "GL-BITMAP-TOKEN", (GLenum) GL_BITMAP_TOKEN, "GL_BITMAP_TOKEN");
#endif
#if defined(GL_DRAW_PIXEL_TOKEN)
defconsti(env, "GL-DRAW-PIXEL-TOKEN", (GLenum) GL_DRAW_PIXEL_TOKEN, "GL_DRAW_PIXEL_TOKEN");
#endif
#if defined(GL_COPY_PIXEL_TOKEN)
defconsti(env, "GL-COPY-PIXEL-TOKEN", (GLenum) GL_COPY_PIXEL_TOKEN, "GL_COPY_PIXEL_TOKEN");
#endif
#if defined(GL_LINE_RESET_TOKEN)
defconsti(env, "GL-LINE-RESET-TOKEN", (GLenum) GL_LINE_RESET_TOKEN, "GL_LINE_RESET_TOKEN");
#endif
#if defined(GL_EXP)
defconsti(env, "GL-EXP", (GLenum) GL_EXP, "GL_EXP");
#endif
#if defined(GL_EXP2)
defconsti(env, "GL-EXP2", (GLenum) GL_EXP2, "GL_EXP2");
#endif
#if defined(GL_COEFF)
defconsti(env, "GL-COEFF", (GLenum) GL_COEFF, "GL_COEFF");
#endif
#if defined(GL_ORDER)
defconsti(env, "GL-ORDER", (GLenum) GL_ORDER, "GL_ORDER");
#endif
#if defined(GL_DOMAIN)
defconsti(env, "GL-DOMAIN", (GLenum) GL_DOMAIN, "GL_DOMAIN");
#endif
#if defined(GL_PIXEL_MAP_I_TO_I)
defconsti(env, "GL-PIXEL-MAP-I-TO-I", (GLenum) GL_PIXEL_MAP_I_TO_I, "GL_PIXEL_MAP_I_TO_I");
#endif
#if defined(GL_PIXEL_MAP_S_TO_S)
defconsti(env, "GL-PIXEL-MAP-S-TO-S", (GLenum) GL_PIXEL_MAP_S_TO_S, "GL_PIXEL_MAP_S_TO_S");
#endif
#if defined(GL_PIXEL_MAP_I_TO_R)
defconsti(env, "GL-PIXEL-MAP-I-TO-R", (GLenum) GL_PIXEL_MAP_I_TO_R, "GL_PIXEL_MAP_I_TO_R");
#endif
#if defined(GL_PIXEL_MAP_I_TO_G)
defconsti(env, "GL-PIXEL-MAP-I-TO-G", (GLenum) GL_PIXEL_MAP_I_TO_G, "GL_PIXEL_MAP_I_TO_G");
#endif
#if defined(GL_PIXEL_MAP_I_TO_B)
defconsti(env, "GL-PIXEL-MAP-I-TO-B", (GLenum) GL_PIXEL_MAP_I_TO_B, "GL_PIXEL_MAP_I_TO_B");
#endif
#if defined(GL_PIXEL_MAP_I_TO_A)
defconsti(env, "GL-PIXEL-MAP-I-TO-A", (GLenum) GL_PIXEL_MAP_I_TO_A, "GL_PIXEL_MAP_I_TO_A");
#endif
#if defined(GL_PIXEL_MAP_R_TO_R)
defconsti(env, "GL-PIXEL-MAP-R-TO-R", (GLenum) GL_PIXEL_MAP_R_TO_R, "GL_PIXEL_MAP_R_TO_R");
#endif
#if defined(GL_PIXEL_MAP_G_TO_G)
defconsti(env, "GL-PIXEL-MAP-G-TO-G", (GLenum) GL_PIXEL_MAP_G_TO_G, "GL_PIXEL_MAP_G_TO_G");
#endif
#if defined(GL_PIXEL_MAP_B_TO_B)
defconsti(env, "GL-PIXEL-MAP-B-TO-B", (GLenum) GL_PIXEL_MAP_B_TO_B, "GL_PIXEL_MAP_B_TO_B");
#endif
#if defined(GL_PIXEL_MAP_A_TO_A)
defconsti(env, "GL-PIXEL-MAP-A-TO-A", (GLenum) GL_PIXEL_MAP_A_TO_A, "GL_PIXEL_MAP_A_TO_A");
#endif
#if defined(GL_VERTEX_ARRAY_POINTER)
defconsti(env, "GL-VERTEX-ARRAY-POINTER", (GLenum) GL_VERTEX_ARRAY_POINTER, "GL_VERTEX_ARRAY_POINTER");
#endif
#if defined(GL_NORMAL_ARRAY_POINTER)
defconsti(env, "GL-NORMAL-ARRAY-POINTER", (GLenum) GL_NORMAL_ARRAY_POINTER, "GL_NORMAL_ARRAY_POINTER");
#endif
#if defined(GL_COLOR_ARRAY_POINTER)
defconsti(env, "GL-COLOR-ARRAY-POINTER", (GLenum) GL_COLOR_ARRAY_POINTER, "GL_COLOR_ARRAY_POINTER");
#endif
#if defined(GL_INDEX_ARRAY_POINTER)
defconsti(env, "GL-INDEX-ARRAY-POINTER", (GLenum) GL_INDEX_ARRAY_POINTER, "GL_INDEX_ARRAY_POINTER");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_POINTER)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-POINTER", (GLenum) GL_TEXTURE_COORD_ARRAY_POINTER, "GL_TEXTURE_COORD_ARRAY_POINTER");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_POINTER)
defconsti(env, "GL-EDGE-FLAG-ARRAY-POINTER", (GLenum) GL_EDGE_FLAG_ARRAY_POINTER, "GL_EDGE_FLAG_ARRAY_POINTER");
#endif
#if defined(GL_FEEDBACK_BUFFER_POINTER)
defconsti(env, "GL-FEEDBACK-BUFFER-POINTER", (GLenum) GL_FEEDBACK_BUFFER_POINTER, "GL_FEEDBACK_BUFFER_POINTER");
#endif
#if defined(GL_SELECTION_BUFFER_POINTER)
defconsti(env, "GL-SELECTION-BUFFER-POINTER", (GLenum) GL_SELECTION_BUFFER_POINTER, "GL_SELECTION_BUFFER_POINTER");
#endif
#if defined(GL_CURRENT_COLOR)
defconsti(env, "GL-CURRENT-COLOR", (GLenum) GL_CURRENT_COLOR, "GL_CURRENT_COLOR");
#endif
#if defined(GL_CURRENT_INDEX)
defconsti(env, "GL-CURRENT-INDEX", (GLenum) GL_CURRENT_INDEX, "GL_CURRENT_INDEX");
#endif
#if defined(GL_CURRENT_NORMAL)
defconsti(env, "GL-CURRENT-NORMAL", (GLenum) GL_CURRENT_NORMAL, "GL_CURRENT_NORMAL");
#endif
#if defined(GL_CURRENT_TEXTURE_COORDS)
defconsti(env, "GL-CURRENT-TEXTURE-COORDS", (GLenum) GL_CURRENT_TEXTURE_COORDS, "GL_CURRENT_TEXTURE_COORDS");
#endif
#if defined(GL_CURRENT_RASTER_COLOR)
defconsti(env, "GL-CURRENT-RASTER-COLOR", (GLenum) GL_CURRENT_RASTER_COLOR, "GL_CURRENT_RASTER_COLOR");
#endif
#if defined(GL_CURRENT_RASTER_INDEX)
defconsti(env, "GL-CURRENT-RASTER-INDEX", (GLenum) GL_CURRENT_RASTER_INDEX, "GL_CURRENT_RASTER_INDEX");
#endif
#if defined(GL_CURRENT_RASTER_TEXTURE_COORDS)
defconsti(env, "GL-CURRENT-RASTER-TEXTURE-COORDS", (GLenum) GL_CURRENT_RASTER_TEXTURE_COORDS, "GL_CURRENT_RASTER_TEXTURE_COORDS");
#endif
#if defined(GL_CURRENT_RASTER_POSITION)
defconsti(env, "GL-CURRENT-RASTER-POSITION", (GLenum) GL_CURRENT_RASTER_POSITION, "GL_CURRENT_RASTER_POSITION");
#endif
#if defined(GL_CURRENT_RASTER_POSITION_VALID)
defconsti(env, "GL-CURRENT-RASTER-POSITION-VALID", (GLenum) GL_CURRENT_RASTER_POSITION_VALID, "GL_CURRENT_RASTER_POSITION_VALID");
#endif
#if defined(GL_CURRENT_RASTER_DISTANCE)
defconsti(env, "GL-CURRENT-RASTER-DISTANCE", (GLenum) GL_CURRENT_RASTER_DISTANCE, "GL_CURRENT_RASTER_DISTANCE");
#endif
#if defined(GL_POINT_SMOOTH)
defconsti(env, "GL-POINT-SMOOTH", (GLenum) GL_POINT_SMOOTH, "GL_POINT_SMOOTH");
#endif
#if defined(GL_LINE_STIPPLE)
defconsti(env, "GL-LINE-STIPPLE", (GLenum) GL_LINE_STIPPLE, "GL_LINE_STIPPLE");
#endif
#if defined(GL_LINE_STIPPLE_PATTERN)
defconsti(env, "GL-LINE-STIPPLE-PATTERN", (GLenum) GL_LINE_STIPPLE_PATTERN, "GL_LINE_STIPPLE_PATTERN");
#endif
#if defined(GL_LINE_STIPPLE_REPEAT)
defconsti(env, "GL-LINE-STIPPLE-REPEAT", (GLenum) GL_LINE_STIPPLE_REPEAT, "GL_LINE_STIPPLE_REPEAT");
#endif
#if defined(GL_LIST_MODE)
defconsti(env, "GL-LIST-MODE", (GLenum) GL_LIST_MODE, "GL_LIST_MODE");
#endif
#if defined(GL_MAX_LIST_NESTING)
defconsti(env, "GL-MAX-LIST-NESTING", (GLenum) GL_MAX_LIST_NESTING, "GL_MAX_LIST_NESTING");
#endif
#if defined(GL_LIST_BASE)
defconsti(env, "GL-LIST-BASE", (GLenum) GL_LIST_BASE, "GL_LIST_BASE");
#endif
#if defined(GL_LIST_INDEX)
defconsti(env, "GL-LIST-INDEX", (GLenum) GL_LIST_INDEX, "GL_LIST_INDEX");
#endif
#if defined(GL_POLYGON_STIPPLE)
defconsti(env, "GL-POLYGON-STIPPLE", (GLenum) GL_POLYGON_STIPPLE, "GL_POLYGON_STIPPLE");
#endif
#if defined(GL_EDGE_FLAG)
defconsti(env, "GL-EDGE-FLAG", (GLenum) GL_EDGE_FLAG, "GL_EDGE_FLAG");
#endif
#if defined(GL_LIGHTING)
defconsti(env, "GL-LIGHTING", (GLenum) GL_LIGHTING, "GL_LIGHTING");
#endif
#if defined(GL_LIGHT_MODEL_LOCAL_VIEWER)
defconsti(env, "GL-LIGHT-MODEL-LOCAL-VIEWER", (GLenum) GL_LIGHT_MODEL_LOCAL_VIEWER, "GL_LIGHT_MODEL_LOCAL_VIEWER");
#endif
#if defined(GL_LIGHT_MODEL_TWO_SIDE)
defconsti(env, "GL-LIGHT-MODEL-TWO-SIDE", (GLenum) GL_LIGHT_MODEL_TWO_SIDE, "GL_LIGHT_MODEL_TWO_SIDE");
#endif
#if defined(GL_LIGHT_MODEL_AMBIENT)
defconsti(env, "GL-LIGHT-MODEL-AMBIENT", (GLenum) GL_LIGHT_MODEL_AMBIENT, "GL_LIGHT_MODEL_AMBIENT");
#endif
#if defined(GL_SHADE_MODEL)
defconsti(env, "GL-SHADE-MODEL", (GLenum) GL_SHADE_MODEL, "GL_SHADE_MODEL");
#endif
#if defined(GL_COLOR_MATERIAL_FACE)
defconsti(env, "GL-COLOR-MATERIAL-FACE", (GLenum) GL_COLOR_MATERIAL_FACE, "GL_COLOR_MATERIAL_FACE");
#endif
#if defined(GL_COLOR_MATERIAL_PARAMETER)
defconsti(env, "GL-COLOR-MATERIAL-PARAMETER", (GLenum) GL_COLOR_MATERIAL_PARAMETER, "GL_COLOR_MATERIAL_PARAMETER");
#endif
#if defined(GL_COLOR_MATERIAL)
defconsti(env, "GL-COLOR-MATERIAL", (GLenum) GL_COLOR_MATERIAL, "GL_COLOR_MATERIAL");
#endif
#if defined(GL_FOG)
defconsti(env, "GL-FOG", (GLenum) GL_FOG, "GL_FOG");
#endif
#if defined(GL_FOG_INDEX)
defconsti(env, "GL-FOG-INDEX", (GLenum) GL_FOG_INDEX, "GL_FOG_INDEX");
#endif
#if defined(GL_FOG_DENSITY)
defconsti(env, "GL-FOG-DENSITY", (GLenum) GL_FOG_DENSITY, "GL_FOG_DENSITY");
#endif
#if defined(GL_FOG_START)
defconsti(env, "GL-FOG-START", (GLenum) GL_FOG_START, "GL_FOG_START");
#endif
#if defined(GL_FOG_END)
defconsti(env, "GL-FOG-END", (GLenum) GL_FOG_END, "GL_FOG_END");
#endif
#if defined(GL_FOG_MODE)
defconsti(env, "GL-FOG-MODE", (GLenum) GL_FOG_MODE, "GL_FOG_MODE");
#endif
#if defined(GL_FOG_COLOR)
defconsti(env, "GL-FOG-COLOR", (GLenum) GL_FOG_COLOR, "GL_FOG_COLOR");
#endif
#if defined(GL_ACCUM_CLEAR_VALUE)
defconsti(env, "GL-ACCUM-CLEAR-VALUE", (GLenum) GL_ACCUM_CLEAR_VALUE, "GL_ACCUM_CLEAR_VALUE");
#endif
#if defined(GL_MATRIX_MODE)
defconsti(env, "GL-MATRIX-MODE", (GLenum) GL_MATRIX_MODE, "GL_MATRIX_MODE");
#endif
#if defined(GL_NORMALIZE)
defconsti(env, "GL-NORMALIZE", (GLenum) GL_NORMALIZE, "GL_NORMALIZE");
#endif
#if defined(GL_MODELVIEW_STACK_DEPTH)
defconsti(env, "GL-MODELVIEW-STACK-DEPTH", (GLenum) GL_MODELVIEW_STACK_DEPTH, "GL_MODELVIEW_STACK_DEPTH");
#endif
#if defined(GL_PROJECTION_STACK_DEPTH)
defconsti(env, "GL-PROJECTION-STACK-DEPTH", (GLenum) GL_PROJECTION_STACK_DEPTH, "GL_PROJECTION_STACK_DEPTH");
#endif
#if defined(GL_TEXTURE_STACK_DEPTH)
defconsti(env, "GL-TEXTURE-STACK-DEPTH", (GLenum) GL_TEXTURE_STACK_DEPTH, "GL_TEXTURE_STACK_DEPTH");
#endif
#if defined(GL_MODELVIEW_MATRIX)
defconsti(env, "GL-MODELVIEW-MATRIX", (GLenum) GL_MODELVIEW_MATRIX, "GL_MODELVIEW_MATRIX");
#endif
#if defined(GL_PROJECTION_MATRIX)
defconsti(env, "GL-PROJECTION-MATRIX", (GLenum) GL_PROJECTION_MATRIX, "GL_PROJECTION_MATRIX");
#endif
#if defined(GL_TEXTURE_MATRIX)
defconsti(env, "GL-TEXTURE-MATRIX", (GLenum) GL_TEXTURE_MATRIX, "GL_TEXTURE_MATRIX");
#endif
#if defined(GL_ATTRIB_STACK_DEPTH)
defconsti(env, "GL-ATTRIB-STACK-DEPTH", (GLenum) GL_ATTRIB_STACK_DEPTH, "GL_ATTRIB_STACK_DEPTH");
#endif
#if defined(GL_CLIENT_ATTRIB_STACK_DEPTH)
defconsti(env, "GL-CLIENT-ATTRIB-STACK-DEPTH", (GLenum) GL_CLIENT_ATTRIB_STACK_DEPTH, "GL_CLIENT_ATTRIB_STACK_DEPTH");
#endif
#if defined(GL_ALPHA_TEST)
defconsti(env, "GL-ALPHA-TEST", (GLenum) GL_ALPHA_TEST, "GL_ALPHA_TEST");
#endif
#if defined(GL_ALPHA_TEST_FUNC)
defconsti(env, "GL-ALPHA-TEST-FUNC", (GLenum) GL_ALPHA_TEST_FUNC, "GL_ALPHA_TEST_FUNC");
#endif
#if defined(GL_ALPHA_TEST_REF)
defconsti(env, "GL-ALPHA-TEST-REF", (GLenum) GL_ALPHA_TEST_REF, "GL_ALPHA_TEST_REF");
#endif
#if defined(GL_INDEX_LOGIC_OP)
defconsti(env, "GL-INDEX-LOGIC-OP", (GLenum) GL_INDEX_LOGIC_OP, "GL_INDEX_LOGIC_OP");
#endif
#if defined(GL_LOGIC_OP)
defconsti(env, "GL-LOGIC-OP", (GLenum) GL_LOGIC_OP, "GL_LOGIC_OP");
#endif
#if defined(GL_AUX_BUFFERS)
defconsti(env, "GL-AUX-BUFFERS", (GLenum) GL_AUX_BUFFERS, "GL_AUX_BUFFERS");
#endif
#if defined(GL_INDEX_CLEAR_VALUE)
defconsti(env, "GL-INDEX-CLEAR-VALUE", (GLenum) GL_INDEX_CLEAR_VALUE, "GL_INDEX_CLEAR_VALUE");
#endif
#if defined(GL_INDEX_WRITEMASK)
defconsti(env, "GL-INDEX-WRITEMASK", (GLenum) GL_INDEX_WRITEMASK, "GL_INDEX_WRITEMASK");
#endif
#if defined(GL_INDEX_MODE)
defconsti(env, "GL-INDEX-MODE", (GLenum) GL_INDEX_MODE, "GL_INDEX_MODE");
#endif
#if defined(GL_RGBA_MODE)
defconsti(env, "GL-RGBA-MODE", (GLenum) GL_RGBA_MODE, "GL_RGBA_MODE");
#endif
#if defined(GL_RENDER_MODE)
defconsti(env, "GL-RENDER-MODE", (GLenum) GL_RENDER_MODE, "GL_RENDER_MODE");
#endif
#if defined(GL_PERSPECTIVE_CORRECTION_HINT)
defconsti(env, "GL-PERSPECTIVE-CORRECTION-HINT", (GLenum) GL_PERSPECTIVE_CORRECTION_HINT, "GL_PERSPECTIVE_CORRECTION_HINT");
#endif
#if defined(GL_POINT_SMOOTH_HINT)
defconsti(env, "GL-POINT-SMOOTH-HINT", (GLenum) GL_POINT_SMOOTH_HINT, "GL_POINT_SMOOTH_HINT");
#endif
#if defined(GL_FOG_HINT)
defconsti(env, "GL-FOG-HINT", (GLenum) GL_FOG_HINT, "GL_FOG_HINT");
#endif
#if defined(GL_TEXTURE_GEN_S)
defconsti(env, "GL-TEXTURE-GEN-S", (GLenum) GL_TEXTURE_GEN_S, "GL_TEXTURE_GEN_S");
#endif
#if defined(GL_TEXTURE_GEN_T)
defconsti(env, "GL-TEXTURE-GEN-T", (GLenum) GL_TEXTURE_GEN_T, "GL_TEXTURE_GEN_T");
#endif
#if defined(GL_TEXTURE_GEN_R)
defconsti(env, "GL-TEXTURE-GEN-R", (GLenum) GL_TEXTURE_GEN_R, "GL_TEXTURE_GEN_R");
#endif
#if defined(GL_TEXTURE_GEN_Q)
defconsti(env, "GL-TEXTURE-GEN-Q", (GLenum) GL_TEXTURE_GEN_Q, "GL_TEXTURE_GEN_Q");
#endif
#if defined(GL_PIXEL_MAP_I_TO_I_SIZE)
defconsti(env, "GL-PIXEL-MAP-I-TO-I-SIZE", (GLenum) GL_PIXEL_MAP_I_TO_I_SIZE, "GL_PIXEL_MAP_I_TO_I_SIZE");
#endif
#if defined(GL_PIXEL_MAP_S_TO_S_SIZE)
defconsti(env, "GL-PIXEL-MAP-S-TO-S-SIZE", (GLenum) GL_PIXEL_MAP_S_TO_S_SIZE, "GL_PIXEL_MAP_S_TO_S_SIZE");
#endif
#if defined(GL_PIXEL_MAP_I_TO_R_SIZE)
defconsti(env, "GL-PIXEL-MAP-I-TO-R-SIZE", (GLenum) GL_PIXEL_MAP_I_TO_R_SIZE, "GL_PIXEL_MAP_I_TO_R_SIZE");
#endif
#if defined(GL_PIXEL_MAP_I_TO_G_SIZE)
defconsti(env, "GL-PIXEL-MAP-I-TO-G-SIZE", (GLenum) GL_PIXEL_MAP_I_TO_G_SIZE, "GL_PIXEL_MAP_I_TO_G_SIZE");
#endif
#if defined(GL_PIXEL_MAP_I_TO_B_SIZE)
defconsti(env, "GL-PIXEL-MAP-I-TO-B-SIZE", (GLenum) GL_PIXEL_MAP_I_TO_B_SIZE, "GL_PIXEL_MAP_I_TO_B_SIZE");
#endif
#if defined(GL_PIXEL_MAP_I_TO_A_SIZE)
defconsti(env, "GL-PIXEL-MAP-I-TO-A-SIZE", (GLenum) GL_PIXEL_MAP_I_TO_A_SIZE, "GL_PIXEL_MAP_I_TO_A_SIZE");
#endif
#if defined(GL_PIXEL_MAP_R_TO_R_SIZE)
defconsti(env, "GL-PIXEL-MAP-R-TO-R-SIZE", (GLenum) GL_PIXEL_MAP_R_TO_R_SIZE, "GL_PIXEL_MAP_R_TO_R_SIZE");
#endif
#if defined(GL_PIXEL_MAP_G_TO_G_SIZE)
defconsti(env, "GL-PIXEL-MAP-G-TO-G-SIZE", (GLenum) GL_PIXEL_MAP_G_TO_G_SIZE, "GL_PIXEL_MAP_G_TO_G_SIZE");
#endif
#if defined(GL_PIXEL_MAP_B_TO_B_SIZE)
defconsti(env, "GL-PIXEL-MAP-B-TO-B-SIZE", (GLenum) GL_PIXEL_MAP_B_TO_B_SIZE, "GL_PIXEL_MAP_B_TO_B_SIZE");
#endif
#if defined(GL_PIXEL_MAP_A_TO_A_SIZE)
defconsti(env, "GL-PIXEL-MAP-A-TO-A-SIZE", (GLenum) GL_PIXEL_MAP_A_TO_A_SIZE, "GL_PIXEL_MAP_A_TO_A_SIZE");
#endif
#if defined(GL_MAP_COLOR)
defconsti(env, "GL-MAP-COLOR", (GLenum) GL_MAP_COLOR, "GL_MAP_COLOR");
#endif
#if defined(GL_MAP_STENCIL)
defconsti(env, "GL-MAP-STENCIL", (GLenum) GL_MAP_STENCIL, "GL_MAP_STENCIL");
#endif
#if defined(GL_INDEX_SHIFT)
defconsti(env, "GL-INDEX-SHIFT", (GLenum) GL_INDEX_SHIFT, "GL_INDEX_SHIFT");
#endif
#if defined(GL_INDEX_OFFSET)
defconsti(env, "GL-INDEX-OFFSET", (GLenum) GL_INDEX_OFFSET, "GL_INDEX_OFFSET");
#endif
#if defined(GL_RED_SCALE)
defconsti(env, "GL-RED-SCALE", (GLenum) GL_RED_SCALE, "GL_RED_SCALE");
#endif
#if defined(GL_RED_BIAS)
defconsti(env, "GL-RED-BIAS", (GLenum) GL_RED_BIAS, "GL_RED_BIAS");
#endif
#if defined(GL_ZOOM_X)
defconsti(env, "GL-ZOOM-X", (GLenum) GL_ZOOM_X, "GL_ZOOM_X");
#endif
#if defined(GL_ZOOM_Y)
defconsti(env, "GL-ZOOM-Y", (GLenum) GL_ZOOM_Y, "GL_ZOOM_Y");
#endif
#if defined(GL_GREEN_SCALE)
defconsti(env, "GL-GREEN-SCALE", (GLenum) GL_GREEN_SCALE, "GL_GREEN_SCALE");
#endif
#if defined(GL_GREEN_BIAS)
defconsti(env, "GL-GREEN-BIAS", (GLenum) GL_GREEN_BIAS, "GL_GREEN_BIAS");
#endif
#if defined(GL_BLUE_SCALE)
defconsti(env, "GL-BLUE-SCALE", (GLenum) GL_BLUE_SCALE, "GL_BLUE_SCALE");
#endif
#if defined(GL_BLUE_BIAS)
defconsti(env, "GL-BLUE-BIAS", (GLenum) GL_BLUE_BIAS, "GL_BLUE_BIAS");
#endif
#if defined(GL_ALPHA_SCALE)
defconsti(env, "GL-ALPHA-SCALE", (GLenum) GL_ALPHA_SCALE, "GL_ALPHA_SCALE");
#endif
#if defined(GL_ALPHA_BIAS)
defconsti(env, "GL-ALPHA-BIAS", (GLenum) GL_ALPHA_BIAS, "GL_ALPHA_BIAS");
#endif
#if defined(GL_DEPTH_SCALE)
defconsti(env, "GL-DEPTH-SCALE", (GLenum) GL_DEPTH_SCALE, "GL_DEPTH_SCALE");
#endif
#if defined(GL_DEPTH_BIAS)
defconsti(env, "GL-DEPTH-BIAS", (GLenum) GL_DEPTH_BIAS, "GL_DEPTH_BIAS");
#endif
#if defined(GL_MAX_EVAL_ORDER)
defconsti(env, "GL-MAX-EVAL-ORDER", (GLenum) GL_MAX_EVAL_ORDER, "GL_MAX_EVAL_ORDER");
#endif
#if defined(GL_MAX_LIGHTS)
defconsti(env, "GL-MAX-LIGHTS", (GLenum) GL_MAX_LIGHTS, "GL_MAX_LIGHTS");
#endif
#if defined(GL_MAX_CLIP_PLANES)
defconsti(env, "GL-MAX-CLIP-PLANES", (GLenum) GL_MAX_CLIP_PLANES, "GL_MAX_CLIP_PLANES");
#endif
#if defined(GL_MAX_PIXEL_MAP_TABLE)
defconsti(env, "GL-MAX-PIXEL-MAP-TABLE", (GLenum) GL_MAX_PIXEL_MAP_TABLE, "GL_MAX_PIXEL_MAP_TABLE");
#endif
#if defined(GL_MAX_ATTRIB_STACK_DEPTH)
defconsti(env, "GL-MAX-ATTRIB-STACK-DEPTH", (GLenum) GL_MAX_ATTRIB_STACK_DEPTH, "GL_MAX_ATTRIB_STACK_DEPTH");
#endif
#if defined(GL_MAX_MODELVIEW_STACK_DEPTH)
defconsti(env, "GL-MAX-MODELVIEW-STACK-DEPTH", (GLenum) GL_MAX_MODELVIEW_STACK_DEPTH, "GL_MAX_MODELVIEW_STACK_DEPTH");
#endif
#if defined(GL_MAX_NAME_STACK_DEPTH)
defconsti(env, "GL-MAX-NAME-STACK-DEPTH", (GLenum) GL_MAX_NAME_STACK_DEPTH, "GL_MAX_NAME_STACK_DEPTH");
#endif
#if defined(GL_MAX_PROJECTION_STACK_DEPTH)
defconsti(env, "GL-MAX-PROJECTION-STACK-DEPTH", (GLenum) GL_MAX_PROJECTION_STACK_DEPTH, "GL_MAX_PROJECTION_STACK_DEPTH");
#endif
#if defined(GL_MAX_TEXTURE_STACK_DEPTH)
defconsti(env, "GL-MAX-TEXTURE-STACK-DEPTH", (GLenum) GL_MAX_TEXTURE_STACK_DEPTH, "GL_MAX_TEXTURE_STACK_DEPTH");
#endif
#if defined(GL_MAX_CLIENT_ATTRIB_STACK_DEPTH)
defconsti(env, "GL-MAX-CLIENT-ATTRIB-STACK-DEPTH", (GLenum) GL_MAX_CLIENT_ATTRIB_STACK_DEPTH, "GL_MAX_CLIENT_ATTRIB_STACK_DEPTH");
#endif
#if defined(GL_INDEX_BITS)
defconsti(env, "GL-INDEX-BITS", (GLenum) GL_INDEX_BITS, "GL_INDEX_BITS");
#endif
#if defined(GL_RED_BITS)
defconsti(env, "GL-RED-BITS", (GLenum) GL_RED_BITS, "GL_RED_BITS");
#endif
#if defined(GL_GREEN_BITS)
defconsti(env, "GL-GREEN-BITS", (GLenum) GL_GREEN_BITS, "GL_GREEN_BITS");
#endif
#if defined(GL_BLUE_BITS)
defconsti(env, "GL-BLUE-BITS", (GLenum) GL_BLUE_BITS, "GL_BLUE_BITS");
#endif
#if defined(GL_ALPHA_BITS)
defconsti(env, "GL-ALPHA-BITS", (GLenum) GL_ALPHA_BITS, "GL_ALPHA_BITS");
#endif
#if defined(GL_DEPTH_BITS)
defconsti(env, "GL-DEPTH-BITS", (GLenum) GL_DEPTH_BITS, "GL_DEPTH_BITS");
#endif
#if defined(GL_STENCIL_BITS)
defconsti(env, "GL-STENCIL-BITS", (GLenum) GL_STENCIL_BITS, "GL_STENCIL_BITS");
#endif
#if defined(GL_ACCUM_RED_BITS)
defconsti(env, "GL-ACCUM-RED-BITS", (GLenum) GL_ACCUM_RED_BITS, "GL_ACCUM_RED_BITS");
#endif
#if defined(GL_ACCUM_GREEN_BITS)
defconsti(env, "GL-ACCUM-GREEN-BITS", (GLenum) GL_ACCUM_GREEN_BITS, "GL_ACCUM_GREEN_BITS");
#endif
#if defined(GL_ACCUM_BLUE_BITS)
defconsti(env, "GL-ACCUM-BLUE-BITS", (GLenum) GL_ACCUM_BLUE_BITS, "GL_ACCUM_BLUE_BITS");
#endif
#if defined(GL_ACCUM_ALPHA_BITS)
defconsti(env, "GL-ACCUM-ALPHA-BITS", (GLenum) GL_ACCUM_ALPHA_BITS, "GL_ACCUM_ALPHA_BITS");
#endif
#if defined(GL_NAME_STACK_DEPTH)
defconsti(env, "GL-NAME-STACK-DEPTH", (GLenum) GL_NAME_STACK_DEPTH, "GL_NAME_STACK_DEPTH");
#endif
#if defined(GL_AUTO_NORMAL)
defconsti(env, "GL-AUTO-NORMAL", (GLenum) GL_AUTO_NORMAL, "GL_AUTO_NORMAL");
#endif
#if defined(GL_MAP1_COLOR_4)
defconsti(env, "GL-MAP1-COLOR-4", (GLenum) GL_MAP1_COLOR_4, "GL_MAP1_COLOR_4");
#endif
#if defined(GL_MAP1_INDEX)
defconsti(env, "GL-MAP1-INDEX", (GLenum) GL_MAP1_INDEX, "GL_MAP1_INDEX");
#endif
#if defined(GL_MAP1_NORMAL)
defconsti(env, "GL-MAP1-NORMAL", (GLenum) GL_MAP1_NORMAL, "GL_MAP1_NORMAL");
#endif
#if defined(GL_MAP1_TEXTURE_COORD_1)
defconsti(env, "GL-MAP1-TEXTURE-COORD-1", (GLenum) GL_MAP1_TEXTURE_COORD_1, "GL_MAP1_TEXTURE_COORD_1");
#endif
#if defined(GL_MAP1_TEXTURE_COORD_2)
defconsti(env, "GL-MAP1-TEXTURE-COORD-2", (GLenum) GL_MAP1_TEXTURE_COORD_2, "GL_MAP1_TEXTURE_COORD_2");
#endif
#if defined(GL_MAP1_TEXTURE_COORD_3)
defconsti(env, "GL-MAP1-TEXTURE-COORD-3", (GLenum) GL_MAP1_TEXTURE_COORD_3, "GL_MAP1_TEXTURE_COORD_3");
#endif
#if defined(GL_MAP1_TEXTURE_COORD_4)
defconsti(env, "GL-MAP1-TEXTURE-COORD-4", (GLenum) GL_MAP1_TEXTURE_COORD_4, "GL_MAP1_TEXTURE_COORD_4");
#endif
#if defined(GL_MAP1_VERTEX_3)
defconsti(env, "GL-MAP1-VERTEX-3", (GLenum) GL_MAP1_VERTEX_3, "GL_MAP1_VERTEX_3");
#endif
#if defined(GL_MAP1_VERTEX_4)
defconsti(env, "GL-MAP1-VERTEX-4", (GLenum) GL_MAP1_VERTEX_4, "GL_MAP1_VERTEX_4");
#endif
#if defined(GL_MAP2_COLOR_4)
defconsti(env, "GL-MAP2-COLOR-4", (GLenum) GL_MAP2_COLOR_4, "GL_MAP2_COLOR_4");
#endif
#if defined(GL_MAP2_INDEX)
defconsti(env, "GL-MAP2-INDEX", (GLenum) GL_MAP2_INDEX, "GL_MAP2_INDEX");
#endif
#if defined(GL_MAP2_NORMAL)
defconsti(env, "GL-MAP2-NORMAL", (GLenum) GL_MAP2_NORMAL, "GL_MAP2_NORMAL");
#endif
#if defined(GL_MAP2_TEXTURE_COORD_1)
defconsti(env, "GL-MAP2-TEXTURE-COORD-1", (GLenum) GL_MAP2_TEXTURE_COORD_1, "GL_MAP2_TEXTURE_COORD_1");
#endif
#if defined(GL_MAP2_TEXTURE_COORD_2)
defconsti(env, "GL-MAP2-TEXTURE-COORD-2", (GLenum) GL_MAP2_TEXTURE_COORD_2, "GL_MAP2_TEXTURE_COORD_2");
#endif
#if defined(GL_MAP2_TEXTURE_COORD_3)
defconsti(env, "GL-MAP2-TEXTURE-COORD-3", (GLenum) GL_MAP2_TEXTURE_COORD_3, "GL_MAP2_TEXTURE_COORD_3");
#endif
#if defined(GL_MAP2_TEXTURE_COORD_4)
defconsti(env, "GL-MAP2-TEXTURE-COORD-4", (GLenum) GL_MAP2_TEXTURE_COORD_4, "GL_MAP2_TEXTURE_COORD_4");
#endif
#if defined(GL_MAP2_VERTEX_3)
defconsti(env, "GL-MAP2-VERTEX-3", (GLenum) GL_MAP2_VERTEX_3, "GL_MAP2_VERTEX_3");
#endif
#if defined(GL_MAP2_VERTEX_4)
defconsti(env, "GL-MAP2-VERTEX-4", (GLenum) GL_MAP2_VERTEX_4, "GL_MAP2_VERTEX_4");
#endif
#if defined(GL_MAP1_GRID_DOMAIN)
defconsti(env, "GL-MAP1-GRID-DOMAIN", (GLenum) GL_MAP1_GRID_DOMAIN, "GL_MAP1_GRID_DOMAIN");
#endif
#if defined(GL_MAP1_GRID_SEGMENTS)
defconsti(env, "GL-MAP1-GRID-SEGMENTS", (GLenum) GL_MAP1_GRID_SEGMENTS, "GL_MAP1_GRID_SEGMENTS");
#endif
#if defined(GL_MAP2_GRID_DOMAIN)
defconsti(env, "GL-MAP2-GRID-DOMAIN", (GLenum) GL_MAP2_GRID_DOMAIN, "GL_MAP2_GRID_DOMAIN");
#endif
#if defined(GL_MAP2_GRID_SEGMENTS)
defconsti(env, "GL-MAP2-GRID-SEGMENTS", (GLenum) GL_MAP2_GRID_SEGMENTS, "GL_MAP2_GRID_SEGMENTS");
#endif
#if defined(GL_FEEDBACK_BUFFER_SIZE)
defconsti(env, "GL-FEEDBACK-BUFFER-SIZE", (GLenum) GL_FEEDBACK_BUFFER_SIZE, "GL_FEEDBACK_BUFFER_SIZE");
#endif
#if defined(GL_FEEDBACK_BUFFER_TYPE)
defconsti(env, "GL-FEEDBACK-BUFFER-TYPE", (GLenum) GL_FEEDBACK_BUFFER_TYPE, "GL_FEEDBACK_BUFFER_TYPE");
#endif
#if defined(GL_SELECTION_BUFFER_SIZE)
defconsti(env, "GL-SELECTION-BUFFER-SIZE", (GLenum) GL_SELECTION_BUFFER_SIZE, "GL_SELECTION_BUFFER_SIZE");
#endif
#if defined(GL_VERTEX_ARRAY)
defconsti(env, "GL-VERTEX-ARRAY", (GLenum) GL_VERTEX_ARRAY, "GL_VERTEX_ARRAY");
#endif
#if defined(GL_NORMAL_ARRAY)
defconsti(env, "GL-NORMAL-ARRAY", (GLenum) GL_NORMAL_ARRAY, "GL_NORMAL_ARRAY");
#endif
#if defined(GL_COLOR_ARRAY)
defconsti(env, "GL-COLOR-ARRAY", (GLenum) GL_COLOR_ARRAY, "GL_COLOR_ARRAY");
#endif
#if defined(GL_INDEX_ARRAY)
defconsti(env, "GL-INDEX-ARRAY", (GLenum) GL_INDEX_ARRAY, "GL_INDEX_ARRAY");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY)
defconsti(env, "GL-TEXTURE-COORD-ARRAY", (GLenum) GL_TEXTURE_COORD_ARRAY, "GL_TEXTURE_COORD_ARRAY");
#endif
#if defined(GL_EDGE_FLAG_ARRAY)
defconsti(env, "GL-EDGE-FLAG-ARRAY", (GLenum) GL_EDGE_FLAG_ARRAY, "GL_EDGE_FLAG_ARRAY");
#endif
#if defined(GL_VERTEX_ARRAY_SIZE)
defconsti(env, "GL-VERTEX-ARRAY-SIZE", (GLenum) GL_VERTEX_ARRAY_SIZE, "GL_VERTEX_ARRAY_SIZE");
#endif
#if defined(GL_VERTEX_ARRAY_TYPE)
defconsti(env, "GL-VERTEX-ARRAY-TYPE", (GLenum) GL_VERTEX_ARRAY_TYPE, "GL_VERTEX_ARRAY_TYPE");
#endif
#if defined(GL_VERTEX_ARRAY_STRIDE)
defconsti(env, "GL-VERTEX-ARRAY-STRIDE", (GLenum) GL_VERTEX_ARRAY_STRIDE, "GL_VERTEX_ARRAY_STRIDE");
#endif
#if defined(GL_NORMAL_ARRAY_TYPE)
defconsti(env, "GL-NORMAL-ARRAY-TYPE", (GLenum) GL_NORMAL_ARRAY_TYPE, "GL_NORMAL_ARRAY_TYPE");
#endif
#if defined(GL_NORMAL_ARRAY_STRIDE)
defconsti(env, "GL-NORMAL-ARRAY-STRIDE", (GLenum) GL_NORMAL_ARRAY_STRIDE, "GL_NORMAL_ARRAY_STRIDE");
#endif
#if defined(GL_COLOR_ARRAY_SIZE)
defconsti(env, "GL-COLOR-ARRAY-SIZE", (GLenum) GL_COLOR_ARRAY_SIZE, "GL_COLOR_ARRAY_SIZE");
#endif
#if defined(GL_COLOR_ARRAY_TYPE)
defconsti(env, "GL-COLOR-ARRAY-TYPE", (GLenum) GL_COLOR_ARRAY_TYPE, "GL_COLOR_ARRAY_TYPE");
#endif
#if defined(GL_COLOR_ARRAY_STRIDE)
defconsti(env, "GL-COLOR-ARRAY-STRIDE", (GLenum) GL_COLOR_ARRAY_STRIDE, "GL_COLOR_ARRAY_STRIDE");
#endif
#if defined(GL_INDEX_ARRAY_TYPE)
defconsti(env, "GL-INDEX-ARRAY-TYPE", (GLenum) GL_INDEX_ARRAY_TYPE, "GL_INDEX_ARRAY_TYPE");
#endif
#if defined(GL_INDEX_ARRAY_STRIDE)
defconsti(env, "GL-INDEX-ARRAY-STRIDE", (GLenum) GL_INDEX_ARRAY_STRIDE, "GL_INDEX_ARRAY_STRIDE");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_SIZE)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-SIZE", (GLenum) GL_TEXTURE_COORD_ARRAY_SIZE, "GL_TEXTURE_COORD_ARRAY_SIZE");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_TYPE)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-TYPE", (GLenum) GL_TEXTURE_COORD_ARRAY_TYPE, "GL_TEXTURE_COORD_ARRAY_TYPE");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_STRIDE)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-STRIDE", (GLenum) GL_TEXTURE_COORD_ARRAY_STRIDE, "GL_TEXTURE_COORD_ARRAY_STRIDE");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_STRIDE)
defconsti(env, "GL-EDGE-FLAG-ARRAY-STRIDE", (GLenum) GL_EDGE_FLAG_ARRAY_STRIDE, "GL_EDGE_FLAG_ARRAY_STRIDE");
#endif
#if defined(GL_TEXTURE_COMPONENTS)
defconsti(env, "GL-TEXTURE-COMPONENTS", (GLenum) GL_TEXTURE_COMPONENTS, "GL_TEXTURE_COMPONENTS");
#endif
#if defined(GL_TEXTURE_BORDER)
defconsti(env, "GL-TEXTURE-BORDER", (GLenum) GL_TEXTURE_BORDER, "GL_TEXTURE_BORDER");
#endif
#if defined(GL_TEXTURE_LUMINANCE_SIZE)
defconsti(env, "GL-TEXTURE-LUMINANCE-SIZE", (GLenum) GL_TEXTURE_LUMINANCE_SIZE, "GL_TEXTURE_LUMINANCE_SIZE");
#endif
#if defined(GL_TEXTURE_INTENSITY_SIZE)
defconsti(env, "GL-TEXTURE-INTENSITY-SIZE", (GLenum) GL_TEXTURE_INTENSITY_SIZE, "GL_TEXTURE_INTENSITY_SIZE");
#endif
#if defined(GL_TEXTURE_PRIORITY)
defconsti(env, "GL-TEXTURE-PRIORITY", (GLenum) GL_TEXTURE_PRIORITY, "GL_TEXTURE_PRIORITY");
#endif
#if defined(GL_TEXTURE_RESIDENT)
defconsti(env, "GL-TEXTURE-RESIDENT", (GLenum) GL_TEXTURE_RESIDENT, "GL_TEXTURE_RESIDENT");
#endif
#if defined(GL_AMBIENT)
defconsti(env, "GL-AMBIENT", (GLenum) GL_AMBIENT, "GL_AMBIENT");
#endif
#if defined(GL_DIFFUSE)
defconsti(env, "GL-DIFFUSE", (GLenum) GL_DIFFUSE, "GL_DIFFUSE");
#endif
#if defined(GL_SPECULAR)
defconsti(env, "GL-SPECULAR", (GLenum) GL_SPECULAR, "GL_SPECULAR");
#endif
#if defined(GL_POSITION)
defconsti(env, "GL-POSITION", (GLenum) GL_POSITION, "GL_POSITION");
#endif
#if defined(GL_SPOT_DIRECTION)
defconsti(env, "GL-SPOT-DIRECTION", (GLenum) GL_SPOT_DIRECTION, "GL_SPOT_DIRECTION");
#endif
#if defined(GL_SPOT_EXPONENT)
defconsti(env, "GL-SPOT-EXPONENT", (GLenum) GL_SPOT_EXPONENT, "GL_SPOT_EXPONENT");
#endif
#if defined(GL_SPOT_CUTOFF)
defconsti(env, "GL-SPOT-CUTOFF", (GLenum) GL_SPOT_CUTOFF, "GL_SPOT_CUTOFF");
#endif
#if defined(GL_CONSTANT_ATTENUATION)
defconsti(env, "GL-CONSTANT-ATTENUATION", (GLenum) GL_CONSTANT_ATTENUATION, "GL_CONSTANT_ATTENUATION");
#endif
#if defined(GL_LINEAR_ATTENUATION)
defconsti(env, "GL-LINEAR-ATTENUATION", (GLenum) GL_LINEAR_ATTENUATION, "GL_LINEAR_ATTENUATION");
#endif
#if defined(GL_QUADRATIC_ATTENUATION)
defconsti(env, "GL-QUADRATIC-ATTENUATION", (GLenum) GL_QUADRATIC_ATTENUATION, "GL_QUADRATIC_ATTENUATION");
#endif
#if defined(GL_COMPILE)
defconsti(env, "GL-COMPILE", (GLenum) GL_COMPILE, "GL_COMPILE");
#endif
#if defined(GL_COMPILE_AND_EXECUTE)
defconsti(env, "GL-COMPILE-AND-EXECUTE", (GLenum) GL_COMPILE_AND_EXECUTE, "GL_COMPILE_AND_EXECUTE");
#endif
#if defined(GL_2_BYTES)
defconsti(env, "GL-2-BYTES", (GLenum) GL_2_BYTES, "GL_2_BYTES");
#endif
#if defined(GL_3_BYTES)
defconsti(env, "GL-3-BYTES", (GLenum) GL_3_BYTES, "GL_3_BYTES");
#endif
#if defined(GL_4_BYTES)
defconsti(env, "GL-4-BYTES", (GLenum) GL_4_BYTES, "GL_4_BYTES");
#endif
#if defined(GL_EMISSION)
defconsti(env, "GL-EMISSION", (GLenum) GL_EMISSION, "GL_EMISSION");
#endif
#if defined(GL_SHININESS)
defconsti(env, "GL-SHININESS", (GLenum) GL_SHININESS, "GL_SHININESS");
#endif
#if defined(GL_AMBIENT_AND_DIFFUSE)
defconsti(env, "GL-AMBIENT-AND-DIFFUSE", (GLenum) GL_AMBIENT_AND_DIFFUSE, "GL_AMBIENT_AND_DIFFUSE");
#endif
#if defined(GL_COLOR_INDEXES)
defconsti(env, "GL-COLOR-INDEXES", (GLenum) GL_COLOR_INDEXES, "GL_COLOR_INDEXES");
#endif
#if defined(GL_MODELVIEW)
defconsti(env, "GL-MODELVIEW", (GLenum) GL_MODELVIEW, "GL_MODELVIEW");
#endif
#if defined(GL_PROJECTION)
defconsti(env, "GL-PROJECTION", (GLenum) GL_PROJECTION, "GL_PROJECTION");
#endif
#if defined(GL_COLOR_INDEX)
defconsti(env, "GL-COLOR-INDEX", (GLenum) GL_COLOR_INDEX, "GL_COLOR_INDEX");
#endif
#if defined(GL_LUMINANCE)
defconsti(env, "GL-LUMINANCE", (GLenum) GL_LUMINANCE, "GL_LUMINANCE");
#endif
#if defined(GL_LUMINANCE_ALPHA)
defconsti(env, "GL-LUMINANCE-ALPHA", (GLenum) GL_LUMINANCE_ALPHA, "GL_LUMINANCE_ALPHA");
#endif
#if defined(GL_BITMAP)
defconsti(env, "GL-BITMAP", (GLenum) GL_BITMAP, "GL_BITMAP");
#endif
#if defined(GL_RENDER)
defconsti(env, "GL-RENDER", (GLenum) GL_RENDER, "GL_RENDER");
#endif
#if defined(GL_FEEDBACK)
defconsti(env, "GL-FEEDBACK", (GLenum) GL_FEEDBACK, "GL_FEEDBACK");
#endif
#if defined(GL_SELECT)
defconsti(env, "GL-SELECT", (GLenum) GL_SELECT, "GL_SELECT");
#endif
#if defined(GL_FLAT)
defconsti(env, "GL-FLAT", (GLenum) GL_FLAT, "GL_FLAT");
#endif
#if defined(GL_SMOOTH)
defconsti(env, "GL-SMOOTH", (GLenum) GL_SMOOTH, "GL_SMOOTH");
#endif
#if defined(GL_S)
defconsti(env, "GL-S", (GLenum) GL_S, "GL_S");
#endif
#if defined(GL_T)
defconsti(env, "GL-T", (GLenum) GL_T, "GL_T");
#endif
#if defined(GL_R)
defconsti(env, "GL-R", (GLenum) GL_R, "GL_R");
#endif
#if defined(GL_Q)
defconsti(env, "GL-Q", (GLenum) GL_Q, "GL_Q");
#endif
#if defined(GL_MODULATE)
defconsti(env, "GL-MODULATE", (GLenum) GL_MODULATE, "GL_MODULATE");
#endif
#if defined(GL_DECAL)
defconsti(env, "GL-DECAL", (GLenum) GL_DECAL, "GL_DECAL");
#endif
#if defined(GL_TEXTURE_ENV_MODE)
defconsti(env, "GL-TEXTURE-ENV-MODE", (GLenum) GL_TEXTURE_ENV_MODE, "GL_TEXTURE_ENV_MODE");
#endif
#if defined(GL_TEXTURE_ENV_COLOR)
defconsti(env, "GL-TEXTURE-ENV-COLOR", (GLenum) GL_TEXTURE_ENV_COLOR, "GL_TEXTURE_ENV_COLOR");
#endif
#if defined(GL_TEXTURE_ENV)
defconsti(env, "GL-TEXTURE-ENV", (GLenum) GL_TEXTURE_ENV, "GL_TEXTURE_ENV");
#endif
#if defined(GL_EYE_LINEAR)
defconsti(env, "GL-EYE-LINEAR", (GLenum) GL_EYE_LINEAR, "GL_EYE_LINEAR");
#endif
#if defined(GL_OBJECT_LINEAR)
defconsti(env, "GL-OBJECT-LINEAR", (GLenum) GL_OBJECT_LINEAR, "GL_OBJECT_LINEAR");
#endif
#if defined(GL_SPHERE_MAP)
defconsti(env, "GL-SPHERE-MAP", (GLenum) GL_SPHERE_MAP, "GL_SPHERE_MAP");
#endif
#if defined(GL_TEXTURE_GEN_MODE)
defconsti(env, "GL-TEXTURE-GEN-MODE", (GLenum) GL_TEXTURE_GEN_MODE, "GL_TEXTURE_GEN_MODE");
#endif
#if defined(GL_OBJECT_PLANE)
defconsti(env, "GL-OBJECT-PLANE", (GLenum) GL_OBJECT_PLANE, "GL_OBJECT_PLANE");
#endif
#if defined(GL_EYE_PLANE)
defconsti(env, "GL-EYE-PLANE", (GLenum) GL_EYE_PLANE, "GL_EYE_PLANE");
#endif
#if defined(GL_CLAMP)
defconsti(env, "GL-CLAMP", (GLenum) GL_CLAMP, "GL_CLAMP");
#endif
#if defined(GL_ALPHA4)
defconsti(env, "GL-ALPHA4", (GLenum) GL_ALPHA4, "GL_ALPHA4");
#endif
#if defined(GL_ALPHA8)
defconsti(env, "GL-ALPHA8", (GLenum) GL_ALPHA8, "GL_ALPHA8");
#endif
#if defined(GL_ALPHA12)
defconsti(env, "GL-ALPHA12", (GLenum) GL_ALPHA12, "GL_ALPHA12");
#endif
#if defined(GL_ALPHA16)
defconsti(env, "GL-ALPHA16", (GLenum) GL_ALPHA16, "GL_ALPHA16");
#endif
#if defined(GL_LUMINANCE4)
defconsti(env, "GL-LUMINANCE4", (GLenum) GL_LUMINANCE4, "GL_LUMINANCE4");
#endif
#if defined(GL_LUMINANCE8)
defconsti(env, "GL-LUMINANCE8", (GLenum) GL_LUMINANCE8, "GL_LUMINANCE8");
#endif
#if defined(GL_LUMINANCE12)
defconsti(env, "GL-LUMINANCE12", (GLenum) GL_LUMINANCE12, "GL_LUMINANCE12");
#endif
#if defined(GL_LUMINANCE16)
defconsti(env, "GL-LUMINANCE16", (GLenum) GL_LUMINANCE16, "GL_LUMINANCE16");
#endif
#if defined(GL_LUMINANCE4_ALPHA4)
defconsti(env, "GL-LUMINANCE4-ALPHA4", (GLenum) GL_LUMINANCE4_ALPHA4, "GL_LUMINANCE4_ALPHA4");
#endif
#if defined(GL_LUMINANCE6_ALPHA2)
defconsti(env, "GL-LUMINANCE6-ALPHA2", (GLenum) GL_LUMINANCE6_ALPHA2, "GL_LUMINANCE6_ALPHA2");
#endif
#if defined(GL_LUMINANCE8_ALPHA8)
defconsti(env, "GL-LUMINANCE8-ALPHA8", (GLenum) GL_LUMINANCE8_ALPHA8, "GL_LUMINANCE8_ALPHA8");
#endif
#if defined(GL_LUMINANCE12_ALPHA4)
defconsti(env, "GL-LUMINANCE12-ALPHA4", (GLenum) GL_LUMINANCE12_ALPHA4, "GL_LUMINANCE12_ALPHA4");
#endif
#if defined(GL_LUMINANCE12_ALPHA12)
defconsti(env, "GL-LUMINANCE12-ALPHA12", (GLenum) GL_LUMINANCE12_ALPHA12, "GL_LUMINANCE12_ALPHA12");
#endif
#if defined(GL_LUMINANCE16_ALPHA16)
defconsti(env, "GL-LUMINANCE16-ALPHA16", (GLenum) GL_LUMINANCE16_ALPHA16, "GL_LUMINANCE16_ALPHA16");
#endif
#if defined(GL_INTENSITY)
defconsti(env, "GL-INTENSITY", (GLenum) GL_INTENSITY, "GL_INTENSITY");
#endif
#if defined(GL_INTENSITY4)
defconsti(env, "GL-INTENSITY4", (GLenum) GL_INTENSITY4, "GL_INTENSITY4");
#endif
#if defined(GL_INTENSITY8)
defconsti(env, "GL-INTENSITY8", (GLenum) GL_INTENSITY8, "GL_INTENSITY8");
#endif
#if defined(GL_INTENSITY12)
defconsti(env, "GL-INTENSITY12", (GLenum) GL_INTENSITY12, "GL_INTENSITY12");
#endif
#if defined(GL_INTENSITY16)
defconsti(env, "GL-INTENSITY16", (GLenum) GL_INTENSITY16, "GL_INTENSITY16");
#endif
#if defined(GL_V2F)
defconsti(env, "GL-V2F", (GLenum) GL_V2F, "GL_V2F");
#endif
#if defined(GL_V3F)
defconsti(env, "GL-V3F", (GLenum) GL_V3F, "GL_V3F");
#endif
#if defined(GL_C4UB_V2F)
defconsti(env, "GL-C4UB-V2F", (GLenum) GL_C4UB_V2F, "GL_C4UB_V2F");
#endif
#if defined(GL_C4UB_V3F)
defconsti(env, "GL-C4UB-V3F", (GLenum) GL_C4UB_V3F, "GL_C4UB_V3F");
#endif
#if defined(GL_C3F_V3F)
defconsti(env, "GL-C3F-V3F", (GLenum) GL_C3F_V3F, "GL_C3F_V3F");
#endif
#if defined(GL_N3F_V3F)
defconsti(env, "GL-N3F-V3F", (GLenum) GL_N3F_V3F, "GL_N3F_V3F");
#endif
#if defined(GL_C4F_N3F_V3F)
defconsti(env, "GL-C4F-N3F-V3F", (GLenum) GL_C4F_N3F_V3F, "GL_C4F_N3F_V3F");
#endif
#if defined(GL_T2F_V3F)
defconsti(env, "GL-T2F-V3F", (GLenum) GL_T2F_V3F, "GL_T2F_V3F");
#endif
#if defined(GL_T4F_V4F)
defconsti(env, "GL-T4F-V4F", (GLenum) GL_T4F_V4F, "GL_T4F_V4F");
#endif
#if defined(GL_T2F_C4UB_V3F)
defconsti(env, "GL-T2F-C4UB-V3F", (GLenum) GL_T2F_C4UB_V3F, "GL_T2F_C4UB_V3F");
#endif
#if defined(GL_T2F_C3F_V3F)
defconsti(env, "GL-T2F-C3F-V3F", (GLenum) GL_T2F_C3F_V3F, "GL_T2F_C3F_V3F");
#endif
#if defined(GL_T2F_N3F_V3F)
defconsti(env, "GL-T2F-N3F-V3F", (GLenum) GL_T2F_N3F_V3F, "GL_T2F_N3F_V3F");
#endif
#if defined(GL_T2F_C4F_N3F_V3F)
defconsti(env, "GL-T2F-C4F-N3F-V3F", (GLenum) GL_T2F_C4F_N3F_V3F, "GL_T2F_C4F_N3F_V3F");
#endif
#if defined(GL_T4F_C4F_N3F_V4F)
defconsti(env, "GL-T4F-C4F-N3F-V4F", (GLenum) GL_T4F_C4F_N3F_V4F, "GL_T4F_C4F_N3F_V4F");
#endif
#if defined(GL_CLIP_PLANE0)
defconsti(env, "GL-CLIP-PLANE0", (GLenum) GL_CLIP_PLANE0, "GL_CLIP_PLANE0");
#endif
#if defined(GL_CLIP_PLANE1)
defconsti(env, "GL-CLIP-PLANE1", (GLenum) GL_CLIP_PLANE1, "GL_CLIP_PLANE1");
#endif
#if defined(GL_CLIP_PLANE2)
defconsti(env, "GL-CLIP-PLANE2", (GLenum) GL_CLIP_PLANE2, "GL_CLIP_PLANE2");
#endif
#if defined(GL_CLIP_PLANE3)
defconsti(env, "GL-CLIP-PLANE3", (GLenum) GL_CLIP_PLANE3, "GL_CLIP_PLANE3");
#endif
#if defined(GL_CLIP_PLANE4)
defconsti(env, "GL-CLIP-PLANE4", (GLenum) GL_CLIP_PLANE4, "GL_CLIP_PLANE4");
#endif
#if defined(GL_CLIP_PLANE5)
defconsti(env, "GL-CLIP-PLANE5", (GLenum) GL_CLIP_PLANE5, "GL_CLIP_PLANE5");
#endif
#if defined(GL_LIGHT0)
defconsti(env, "GL-LIGHT0", (GLenum) GL_LIGHT0, "GL_LIGHT0");
#endif
#if defined(GL_LIGHT1)
defconsti(env, "GL-LIGHT1", (GLenum) GL_LIGHT1, "GL_LIGHT1");
#endif
#if defined(GL_LIGHT2)
defconsti(env, "GL-LIGHT2", (GLenum) GL_LIGHT2, "GL_LIGHT2");
#endif
#if defined(GL_LIGHT3)
defconsti(env, "GL-LIGHT3", (GLenum) GL_LIGHT3, "GL_LIGHT3");
#endif
#if defined(GL_LIGHT4)
defconsti(env, "GL-LIGHT4", (GLenum) GL_LIGHT4, "GL_LIGHT4");
#endif
#if defined(GL_LIGHT5)
defconsti(env, "GL-LIGHT5", (GLenum) GL_LIGHT5, "GL_LIGHT5");
#endif
#if defined(GL_LIGHT6)
defconsti(env, "GL-LIGHT6", (GLenum) GL_LIGHT6, "GL_LIGHT6");
#endif
#if defined(GL_LIGHT7)
defconsti(env, "GL-LIGHT7", (GLenum) GL_LIGHT7, "GL_LIGHT7");
#endif
#if defined(GL_RESCALE_NORMAL)
defconsti(env, "GL-RESCALE-NORMAL", (GLenum) GL_RESCALE_NORMAL, "GL_RESCALE_NORMAL");
#endif
#if defined(GL_LIGHT_MODEL_COLOR_CONTROL)
defconsti(env, "GL-LIGHT-MODEL-COLOR-CONTROL", (GLenum) GL_LIGHT_MODEL_COLOR_CONTROL, "GL_LIGHT_MODEL_COLOR_CONTROL");
#endif
#if defined(GL_SINGLE_COLOR)
defconsti(env, "GL-SINGLE-COLOR", (GLenum) GL_SINGLE_COLOR, "GL_SINGLE_COLOR");
#endif
#if defined(GL_SEPARATE_SPECULAR_COLOR)
defconsti(env, "GL-SEPARATE-SPECULAR-COLOR", (GLenum) GL_SEPARATE_SPECULAR_COLOR, "GL_SEPARATE_SPECULAR_COLOR");
#endif
#if defined(GL_ALIASED_POINT_SIZE_RANGE)
defconsti(env, "GL-ALIASED-POINT-SIZE-RANGE", (GLenum) GL_ALIASED_POINT_SIZE_RANGE, "GL_ALIASED_POINT_SIZE_RANGE");
#endif
#if defined(GL_CLIENT_ACTIVE_TEXTURE)
defconsti(env, "GL-CLIENT-ACTIVE-TEXTURE", (GLenum) GL_CLIENT_ACTIVE_TEXTURE, "GL_CLIENT_ACTIVE_TEXTURE");
#endif
#if defined(GL_MAX_TEXTURE_UNITS)
defconsti(env, "GL-MAX-TEXTURE-UNITS", (GLenum) GL_MAX_TEXTURE_UNITS, "GL_MAX_TEXTURE_UNITS");
#endif
#if defined(GL_TRANSPOSE_MODELVIEW_MATRIX)
defconsti(env, "GL-TRANSPOSE-MODELVIEW-MATRIX", (GLenum) GL_TRANSPOSE_MODELVIEW_MATRIX, "GL_TRANSPOSE_MODELVIEW_MATRIX");
#endif
#if defined(GL_TRANSPOSE_PROJECTION_MATRIX)
defconsti(env, "GL-TRANSPOSE-PROJECTION-MATRIX", (GLenum) GL_TRANSPOSE_PROJECTION_MATRIX, "GL_TRANSPOSE_PROJECTION_MATRIX");
#endif
#if defined(GL_TRANSPOSE_TEXTURE_MATRIX)
defconsti(env, "GL-TRANSPOSE-TEXTURE-MATRIX", (GLenum) GL_TRANSPOSE_TEXTURE_MATRIX, "GL_TRANSPOSE_TEXTURE_MATRIX");
#endif
#if defined(GL_TRANSPOSE_COLOR_MATRIX)
defconsti(env, "GL-TRANSPOSE-COLOR-MATRIX", (GLenum) GL_TRANSPOSE_COLOR_MATRIX, "GL_TRANSPOSE_COLOR_MATRIX");
#endif
#if defined(GL_MULTISAMPLE_BIT)
defconsti(env, "GL-MULTISAMPLE-BIT", (GLenum) GL_MULTISAMPLE_BIT, "GL_MULTISAMPLE_BIT");
#endif
#if defined(GL_NORMAL_MAP)
defconsti(env, "GL-NORMAL-MAP", (GLenum) GL_NORMAL_MAP, "GL_NORMAL_MAP");
#endif
#if defined(GL_REFLECTION_MAP)
defconsti(env, "GL-REFLECTION-MAP", (GLenum) GL_REFLECTION_MAP, "GL_REFLECTION_MAP");
#endif
#if defined(GL_COMPRESSED_ALPHA)
defconsti(env, "GL-COMPRESSED-ALPHA", (GLenum) GL_COMPRESSED_ALPHA, "GL_COMPRESSED_ALPHA");
#endif
#if defined(GL_COMPRESSED_LUMINANCE)
defconsti(env, "GL-COMPRESSED-LUMINANCE", (GLenum) GL_COMPRESSED_LUMINANCE, "GL_COMPRESSED_LUMINANCE");
#endif
#if defined(GL_COMPRESSED_LUMINANCE_ALPHA)
defconsti(env, "GL-COMPRESSED-LUMINANCE-ALPHA", (GLenum) GL_COMPRESSED_LUMINANCE_ALPHA, "GL_COMPRESSED_LUMINANCE_ALPHA");
#endif
#if defined(GL_COMPRESSED_INTENSITY)
defconsti(env, "GL-COMPRESSED-INTENSITY", (GLenum) GL_COMPRESSED_INTENSITY, "GL_COMPRESSED_INTENSITY");
#endif
#if defined(GL_COMBINE)
defconsti(env, "GL-COMBINE", (GLenum) GL_COMBINE, "GL_COMBINE");
#endif
#if defined(GL_COMBINE_RGB)
defconsti(env, "GL-COMBINE-RGB", (GLenum) GL_COMBINE_RGB, "GL_COMBINE_RGB");
#endif
#if defined(GL_COMBINE_ALPHA)
defconsti(env, "GL-COMBINE-ALPHA", (GLenum) GL_COMBINE_ALPHA, "GL_COMBINE_ALPHA");
#endif
#if defined(GL_SOURCE0_RGB)
defconsti(env, "GL-SOURCE0-RGB", (GLenum) GL_SOURCE0_RGB, "GL_SOURCE0_RGB");
#endif
#if defined(GL_SOURCE1_RGB)
defconsti(env, "GL-SOURCE1-RGB", (GLenum) GL_SOURCE1_RGB, "GL_SOURCE1_RGB");
#endif
#if defined(GL_SOURCE2_RGB)
defconsti(env, "GL-SOURCE2-RGB", (GLenum) GL_SOURCE2_RGB, "GL_SOURCE2_RGB");
#endif
#if defined(GL_SOURCE0_ALPHA)
defconsti(env, "GL-SOURCE0-ALPHA", (GLenum) GL_SOURCE0_ALPHA, "GL_SOURCE0_ALPHA");
#endif
#if defined(GL_SOURCE1_ALPHA)
defconsti(env, "GL-SOURCE1-ALPHA", (GLenum) GL_SOURCE1_ALPHA, "GL_SOURCE1_ALPHA");
#endif
#if defined(GL_SOURCE2_ALPHA)
defconsti(env, "GL-SOURCE2-ALPHA", (GLenum) GL_SOURCE2_ALPHA, "GL_SOURCE2_ALPHA");
#endif
#if defined(GL_OPERAND0_RGB)
defconsti(env, "GL-OPERAND0-RGB", (GLenum) GL_OPERAND0_RGB, "GL_OPERAND0_RGB");
#endif
#if defined(GL_OPERAND1_RGB)
defconsti(env, "GL-OPERAND1-RGB", (GLenum) GL_OPERAND1_RGB, "GL_OPERAND1_RGB");
#endif
#if defined(GL_OPERAND2_RGB)
defconsti(env, "GL-OPERAND2-RGB", (GLenum) GL_OPERAND2_RGB, "GL_OPERAND2_RGB");
#endif
#if defined(GL_OPERAND0_ALPHA)
defconsti(env, "GL-OPERAND0-ALPHA", (GLenum) GL_OPERAND0_ALPHA, "GL_OPERAND0_ALPHA");
#endif
#if defined(GL_OPERAND1_ALPHA)
defconsti(env, "GL-OPERAND1-ALPHA", (GLenum) GL_OPERAND1_ALPHA, "GL_OPERAND1_ALPHA");
#endif
#if defined(GL_OPERAND2_ALPHA)
defconsti(env, "GL-OPERAND2-ALPHA", (GLenum) GL_OPERAND2_ALPHA, "GL_OPERAND2_ALPHA");
#endif
#if defined(GL_RGB_SCALE)
defconsti(env, "GL-RGB-SCALE", (GLenum) GL_RGB_SCALE, "GL_RGB_SCALE");
#endif
#if defined(GL_ADD_SIGNED)
defconsti(env, "GL-ADD-SIGNED", (GLenum) GL_ADD_SIGNED, "GL_ADD_SIGNED");
#endif
#if defined(GL_INTERPOLATE)
defconsti(env, "GL-INTERPOLATE", (GLenum) GL_INTERPOLATE, "GL_INTERPOLATE");
#endif
#if defined(GL_SUBTRACT)
defconsti(env, "GL-SUBTRACT", (GLenum) GL_SUBTRACT, "GL_SUBTRACT");
#endif
#if defined(GL_CONSTANT)
defconsti(env, "GL-CONSTANT", (GLenum) GL_CONSTANT, "GL_CONSTANT");
#endif
#if defined(GL_PRIMARY_COLOR)
defconsti(env, "GL-PRIMARY-COLOR", (GLenum) GL_PRIMARY_COLOR, "GL_PRIMARY_COLOR");
#endif
#if defined(GL_PREVIOUS)
defconsti(env, "GL-PREVIOUS", (GLenum) GL_PREVIOUS, "GL_PREVIOUS");
#endif
#if defined(GL_DOT3_RGB)
defconsti(env, "GL-DOT3-RGB", (GLenum) GL_DOT3_RGB, "GL_DOT3_RGB");
#endif
#if defined(GL_DOT3_RGBA)
defconsti(env, "GL-DOT3-RGBA", (GLenum) GL_DOT3_RGBA, "GL_DOT3_RGBA");
#endif
#if defined(GL_POINT_SIZE_MIN)
defconsti(env, "GL-POINT-SIZE-MIN", (GLenum) GL_POINT_SIZE_MIN, "GL_POINT_SIZE_MIN");
#endif
#if defined(GL_POINT_SIZE_MAX)
defconsti(env, "GL-POINT-SIZE-MAX", (GLenum) GL_POINT_SIZE_MAX, "GL_POINT_SIZE_MAX");
#endif
#if defined(GL_POINT_DISTANCE_ATTENUATION)
defconsti(env, "GL-POINT-DISTANCE-ATTENUATION", (GLenum) GL_POINT_DISTANCE_ATTENUATION, "GL_POINT_DISTANCE_ATTENUATION");
#endif
#if defined(GL_GENERATE_MIPMAP)
defconsti(env, "GL-GENERATE-MIPMAP", (GLenum) GL_GENERATE_MIPMAP, "GL_GENERATE_MIPMAP");
#endif
#if defined(GL_GENERATE_MIPMAP_HINT)
defconsti(env, "GL-GENERATE-MIPMAP-HINT", (GLenum) GL_GENERATE_MIPMAP_HINT, "GL_GENERATE_MIPMAP_HINT");
#endif
#if defined(GL_FOG_COORDINATE_SOURCE)
defconsti(env, "GL-FOG-COORDINATE-SOURCE", (GLenum) GL_FOG_COORDINATE_SOURCE, "GL_FOG_COORDINATE_SOURCE");
#endif
#if defined(GL_FOG_COORDINATE)
defconsti(env, "GL-FOG-COORDINATE", (GLenum) GL_FOG_COORDINATE, "GL_FOG_COORDINATE");
#endif
#if defined(GL_FRAGMENT_DEPTH)
defconsti(env, "GL-FRAGMENT-DEPTH", (GLenum) GL_FRAGMENT_DEPTH, "GL_FRAGMENT_DEPTH");
#endif
#if defined(GL_CURRENT_FOG_COORDINATE)
defconsti(env, "GL-CURRENT-FOG-COORDINATE", (GLenum) GL_CURRENT_FOG_COORDINATE, "GL_CURRENT_FOG_COORDINATE");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY_TYPE)
defconsti(env, "GL-FOG-COORDINATE-ARRAY-TYPE", (GLenum) GL_FOG_COORDINATE_ARRAY_TYPE, "GL_FOG_COORDINATE_ARRAY_TYPE");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY_STRIDE)
defconsti(env, "GL-FOG-COORDINATE-ARRAY-STRIDE", (GLenum) GL_FOG_COORDINATE_ARRAY_STRIDE, "GL_FOG_COORDINATE_ARRAY_STRIDE");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY_POINTER)
defconsti(env, "GL-FOG-COORDINATE-ARRAY-POINTER", (GLenum) GL_FOG_COORDINATE_ARRAY_POINTER, "GL_FOG_COORDINATE_ARRAY_POINTER");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY)
defconsti(env, "GL-FOG-COORDINATE-ARRAY", (GLenum) GL_FOG_COORDINATE_ARRAY, "GL_FOG_COORDINATE_ARRAY");
#endif
#if defined(GL_COLOR_SUM)
defconsti(env, "GL-COLOR-SUM", (GLenum) GL_COLOR_SUM, "GL_COLOR_SUM");
#endif
#if defined(GL_CURRENT_SECONDARY_COLOR)
defconsti(env, "GL-CURRENT-SECONDARY-COLOR", (GLenum) GL_CURRENT_SECONDARY_COLOR, "GL_CURRENT_SECONDARY_COLOR");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_SIZE)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-SIZE", (GLenum) GL_SECONDARY_COLOR_ARRAY_SIZE, "GL_SECONDARY_COLOR_ARRAY_SIZE");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_TYPE)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-TYPE", (GLenum) GL_SECONDARY_COLOR_ARRAY_TYPE, "GL_SECONDARY_COLOR_ARRAY_TYPE");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_STRIDE)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-STRIDE", (GLenum) GL_SECONDARY_COLOR_ARRAY_STRIDE, "GL_SECONDARY_COLOR_ARRAY_STRIDE");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_POINTER)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-POINTER", (GLenum) GL_SECONDARY_COLOR_ARRAY_POINTER, "GL_SECONDARY_COLOR_ARRAY_POINTER");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY", (GLenum) GL_SECONDARY_COLOR_ARRAY, "GL_SECONDARY_COLOR_ARRAY");
#endif
#if defined(GL_TEXTURE_FILTER_CONTROL)
defconsti(env, "GL-TEXTURE-FILTER-CONTROL", (GLenum) GL_TEXTURE_FILTER_CONTROL, "GL_TEXTURE_FILTER_CONTROL");
#endif
#if defined(GL_DEPTH_TEXTURE_MODE)
defconsti(env, "GL-DEPTH-TEXTURE-MODE", (GLenum) GL_DEPTH_TEXTURE_MODE, "GL_DEPTH_TEXTURE_MODE");
#endif
#if defined(GL_COMPARE_R_TO_TEXTURE)
defconsti(env, "GL-COMPARE-R-TO-TEXTURE", (GLenum) GL_COMPARE_R_TO_TEXTURE, "GL_COMPARE_R_TO_TEXTURE");
#endif
#if defined(GL_VERTEX_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-VERTEX-ARRAY-BUFFER-BINDING", (GLenum) GL_VERTEX_ARRAY_BUFFER_BINDING, "GL_VERTEX_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_NORMAL_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-NORMAL-ARRAY-BUFFER-BINDING", (GLenum) GL_NORMAL_ARRAY_BUFFER_BINDING, "GL_NORMAL_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_COLOR_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-COLOR-ARRAY-BUFFER-BINDING", (GLenum) GL_COLOR_ARRAY_BUFFER_BINDING, "GL_COLOR_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_INDEX_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-INDEX-ARRAY-BUFFER-BINDING", (GLenum) GL_INDEX_ARRAY_BUFFER_BINDING, "GL_INDEX_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-BUFFER-BINDING", (GLenum) GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING, "GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-EDGE-FLAG-ARRAY-BUFFER-BINDING", (GLenum) GL_EDGE_FLAG_ARRAY_BUFFER_BINDING, "GL_EDGE_FLAG_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-BUFFER-BINDING", (GLenum) GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING, "GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-FOG-COORDINATE-ARRAY-BUFFER-BINDING", (GLenum) GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING, "GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_WEIGHT_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-WEIGHT-ARRAY-BUFFER-BINDING", (GLenum) GL_WEIGHT_ARRAY_BUFFER_BINDING, "GL_WEIGHT_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_FOG_COORD_SRC)
defconsti(env, "GL-FOG-COORD-SRC", (GLenum) GL_FOG_COORD_SRC, "GL_FOG_COORD_SRC");
#endif
#if defined(GL_FOG_COORD)
defconsti(env, "GL-FOG-COORD", (GLenum) GL_FOG_COORD, "GL_FOG_COORD");
#endif
#if defined(GL_CURRENT_FOG_COORD)
defconsti(env, "GL-CURRENT-FOG-COORD", (GLenum) GL_CURRENT_FOG_COORD, "GL_CURRENT_FOG_COORD");
#endif
#if defined(GL_FOG_COORD_ARRAY_TYPE)
defconsti(env, "GL-FOG-COORD-ARRAY-TYPE", (GLenum) GL_FOG_COORD_ARRAY_TYPE, "GL_FOG_COORD_ARRAY_TYPE");
#endif
#if defined(GL_FOG_COORD_ARRAY_STRIDE)
defconsti(env, "GL-FOG-COORD-ARRAY-STRIDE", (GLenum) GL_FOG_COORD_ARRAY_STRIDE, "GL_FOG_COORD_ARRAY_STRIDE");
#endif
#if defined(GL_FOG_COORD_ARRAY_POINTER)
defconsti(env, "GL-FOG-COORD-ARRAY-POINTER", (GLenum) GL_FOG_COORD_ARRAY_POINTER, "GL_FOG_COORD_ARRAY_POINTER");
#endif
#if defined(GL_FOG_COORD_ARRAY)
defconsti(env, "GL-FOG-COORD-ARRAY", (GLenum) GL_FOG_COORD_ARRAY, "GL_FOG_COORD_ARRAY");
#endif
#if defined(GL_FOG_COORD_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-FOG-COORD-ARRAY-BUFFER-BINDING", (GLenum) GL_FOG_COORD_ARRAY_BUFFER_BINDING, "GL_FOG_COORD_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_SRC0_RGB)
defconsti(env, "GL-SRC0-RGB", (GLenum) GL_SRC0_RGB, "GL_SRC0_RGB");
#endif
#if defined(GL_SRC1_RGB)
defconsti(env, "GL-SRC1-RGB", (GLenum) GL_SRC1_RGB, "GL_SRC1_RGB");
#endif
#if defined(GL_SRC2_RGB)
defconsti(env, "GL-SRC2-RGB", (GLenum) GL_SRC2_RGB, "GL_SRC2_RGB");
#endif
#if defined(GL_SRC0_ALPHA)
defconsti(env, "GL-SRC0-ALPHA", (GLenum) GL_SRC0_ALPHA, "GL_SRC0_ALPHA");
#endif
#if defined(GL_SRC2_ALPHA)
defconsti(env, "GL-SRC2-ALPHA", (GLenum) GL_SRC2_ALPHA, "GL_SRC2_ALPHA");
#endif
#if defined(GL_VERTEX_PROGRAM_TWO_SIDE)
defconsti(env, "GL-VERTEX-PROGRAM-TWO-SIDE", (GLenum) GL_VERTEX_PROGRAM_TWO_SIDE, "GL_VERTEX_PROGRAM_TWO_SIDE");
#endif
#if defined(GL_POINT_SPRITE)
defconsti(env, "GL-POINT-SPRITE", (GLenum) GL_POINT_SPRITE, "GL_POINT_SPRITE");
#endif
#if defined(GL_COORD_REPLACE)
defconsti(env, "GL-COORD-REPLACE", (GLenum) GL_COORD_REPLACE, "GL_COORD_REPLACE");
#endif
#if defined(GL_MAX_TEXTURE_COORDS)
defconsti(env, "GL-MAX-TEXTURE-COORDS", (GLenum) GL_MAX_TEXTURE_COORDS, "GL_MAX_TEXTURE_COORDS");
#endif
#if defined(GL_CURRENT_RASTER_SECONDARY_COLOR)
defconsti(env, "GL-CURRENT-RASTER-SECONDARY-COLOR", (GLenum) GL_CURRENT_RASTER_SECONDARY_COLOR, "GL_CURRENT_RASTER_SECONDARY_COLOR");
#endif
#if defined(GL_SLUMINANCE_ALPHA)
defconsti(env, "GL-SLUMINANCE-ALPHA", (GLenum) GL_SLUMINANCE_ALPHA, "GL_SLUMINANCE_ALPHA");
#endif
#if defined(GL_SLUMINANCE8_ALPHA8)
defconsti(env, "GL-SLUMINANCE8-ALPHA8", (GLenum) GL_SLUMINANCE8_ALPHA8, "GL_SLUMINANCE8_ALPHA8");
#endif
#if defined(GL_SLUMINANCE)
defconsti(env, "GL-SLUMINANCE", (GLenum) GL_SLUMINANCE, "GL_SLUMINANCE");
#endif
#if defined(GL_SLUMINANCE8)
defconsti(env, "GL-SLUMINANCE8", (GLenum) GL_SLUMINANCE8, "GL_SLUMINANCE8");
#endif
#if defined(GL_COMPRESSED_SLUMINANCE)
defconsti(env, "GL-COMPRESSED-SLUMINANCE", (GLenum) GL_COMPRESSED_SLUMINANCE, "GL_COMPRESSED_SLUMINANCE");
#endif
#if defined(GL_COMPRESSED_SLUMINANCE_ALPHA)
defconsti(env, "GL-COMPRESSED-SLUMINANCE-ALPHA", (GLenum) GL_COMPRESSED_SLUMINANCE_ALPHA, "GL_COMPRESSED_SLUMINANCE_ALPHA");
#endif
#if defined(GL_CLAMP_VERTEX_COLOR)
defconsti(env, "GL-CLAMP-VERTEX-COLOR", (GLenum) GL_CLAMP_VERTEX_COLOR, "GL_CLAMP_VERTEX_COLOR");
#endif
#if defined(GL_CLAMP_FRAGMENT_COLOR)
defconsti(env, "GL-CLAMP-FRAGMENT-COLOR", (GLenum) GL_CLAMP_FRAGMENT_COLOR, "GL_CLAMP_FRAGMENT_COLOR");
#endif
#if defined(GL_ALPHA_INTEGER)
defconsti(env, "GL-ALPHA-INTEGER", (GLenum) GL_ALPHA_INTEGER, "GL_ALPHA_INTEGER");
#endif
#if defined(GL_INDEX)
defconsti(env, "GL-INDEX", (GLenum) GL_INDEX, "GL_INDEX");
#endif
#if defined(GL_TEXTURE_LUMINANCE_TYPE)
defconsti(env, "GL-TEXTURE-LUMINANCE-TYPE", (GLenum) GL_TEXTURE_LUMINANCE_TYPE, "GL_TEXTURE_LUMINANCE_TYPE");
#endif
#if defined(GL_TEXTURE_INTENSITY_TYPE)
defconsti(env, "GL-TEXTURE-INTENSITY-TYPE", (GLenum) GL_TEXTURE_INTENSITY_TYPE, "GL_TEXTURE_INTENSITY_TYPE");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_DIVISOR)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-DIVISOR", (GLenum) GL_VERTEX_ATTRIB_ARRAY_DIVISOR, "GL_VERTEX_ATTRIB_ARRAY_DIVISOR");
#endif
#if defined(GL_SRC1_COLOR)
defconsti(env, "GL-SRC1-COLOR", (GLenum) GL_SRC1_COLOR, "GL_SRC1_COLOR");
#endif
#if defined(GL_ONE_MINUS_SRC1_COLOR)
defconsti(env, "GL-ONE-MINUS-SRC1-COLOR", (GLenum) GL_ONE_MINUS_SRC1_COLOR, "GL_ONE_MINUS_SRC1_COLOR");
#endif
#if defined(GL_ONE_MINUS_SRC1_ALPHA)
defconsti(env, "GL-ONE-MINUS-SRC1-ALPHA", (GLenum) GL_ONE_MINUS_SRC1_ALPHA, "GL_ONE_MINUS_SRC1_ALPHA");
#endif
#if defined(GL_MAX_DUAL_SOURCE_DRAW_BUFFERS)
defconsti(env, "GL-MAX-DUAL-SOURCE-DRAW-BUFFERS", (GLenum) GL_MAX_DUAL_SOURCE_DRAW_BUFFERS, "GL_MAX_DUAL_SOURCE_DRAW_BUFFERS");
#endif
#if defined(GL_ANY_SAMPLES_PASSED)
defconsti(env, "GL-ANY-SAMPLES-PASSED", (GLenum) GL_ANY_SAMPLES_PASSED, "GL_ANY_SAMPLES_PASSED");
#endif
#if defined(GL_SAMPLER_BINDING)
defconsti(env, "GL-SAMPLER-BINDING", (GLenum) GL_SAMPLER_BINDING, "GL_SAMPLER_BINDING");
#endif
#if defined(GL_RGB10_A2UI)
defconsti(env, "GL-RGB10-A2UI", (GLenum) GL_RGB10_A2UI, "GL_RGB10_A2UI");
#endif
#if defined(GL_TEXTURE_SWIZZLE_R)
defconsti(env, "GL-TEXTURE-SWIZZLE-R", (GLenum) GL_TEXTURE_SWIZZLE_R, "GL_TEXTURE_SWIZZLE_R");
#endif
#if defined(GL_TEXTURE_SWIZZLE_G)
defconsti(env, "GL-TEXTURE-SWIZZLE-G", (GLenum) GL_TEXTURE_SWIZZLE_G, "GL_TEXTURE_SWIZZLE_G");
#endif
#if defined(GL_TEXTURE_SWIZZLE_B)
defconsti(env, "GL-TEXTURE-SWIZZLE-B", (GLenum) GL_TEXTURE_SWIZZLE_B, "GL_TEXTURE_SWIZZLE_B");
#endif
#if defined(GL_TEXTURE_SWIZZLE_A)
defconsti(env, "GL-TEXTURE-SWIZZLE-A", (GLenum) GL_TEXTURE_SWIZZLE_A, "GL_TEXTURE_SWIZZLE_A");
#endif
#if defined(GL_TEXTURE_SWIZZLE_RGBA)
defconsti(env, "GL-TEXTURE-SWIZZLE-RGBA", (GLenum) GL_TEXTURE_SWIZZLE_RGBA, "GL_TEXTURE_SWIZZLE_RGBA");
#endif
#if defined(GL_TIME_ELAPSED)
defconsti(env, "GL-TIME-ELAPSED", (GLenum) GL_TIME_ELAPSED, "GL_TIME_ELAPSED");
#endif
#if defined(GL_TIMESTAMP)
defconsti(env, "GL-TIMESTAMP", (GLenum) GL_TIMESTAMP, "GL_TIMESTAMP");
#endif
#if defined(GL_INT_2_10_10_10_REV)
defconsti(env, "GL-INT-2-10-10-10-REV", (GLenum) GL_INT_2_10_10_10_REV, "GL_INT_2_10_10_10_REV");
#endif
#if defined(GL_SAMPLE_SHADING)
defconsti(env, "GL-SAMPLE-SHADING", (GLenum) GL_SAMPLE_SHADING, "GL_SAMPLE_SHADING");
#endif
#if defined(GL_MIN_SAMPLE_SHADING_VALUE)
defconsti(env, "GL-MIN-SAMPLE-SHADING-VALUE", (GLenum) GL_MIN_SAMPLE_SHADING_VALUE, "GL_MIN_SAMPLE_SHADING_VALUE");
#endif
#if defined(GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET)
defconsti(env, "GL-MIN-PROGRAM-TEXTURE-GATHER-OFFSET", (GLenum) GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET, "GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET");
#endif
#if defined(GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET)
defconsti(env, "GL-MAX-PROGRAM-TEXTURE-GATHER-OFFSET", (GLenum) GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET, "GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_ARRAY)
defconsti(env, "GL-TEXTURE-CUBE-MAP-ARRAY", (GLenum) GL_TEXTURE_CUBE_MAP_ARRAY, "GL_TEXTURE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_TEXTURE_BINDING_CUBE_MAP_ARRAY)
defconsti(env, "GL-TEXTURE-BINDING-CUBE-MAP-ARRAY", (GLenum) GL_TEXTURE_BINDING_CUBE_MAP_ARRAY, "GL_TEXTURE_BINDING_CUBE_MAP_ARRAY");
#endif
#if defined(GL_PROXY_TEXTURE_CUBE_MAP_ARRAY)
defconsti(env, "GL-PROXY-TEXTURE-CUBE-MAP-ARRAY", (GLenum) GL_PROXY_TEXTURE_CUBE_MAP_ARRAY, "GL_PROXY_TEXTURE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_SAMPLER_CUBE_MAP_ARRAY)
defconsti(env, "GL-SAMPLER-CUBE-MAP-ARRAY", (GLenum) GL_SAMPLER_CUBE_MAP_ARRAY, "GL_SAMPLER_CUBE_MAP_ARRAY");
#endif
#if defined(GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW)
defconsti(env, "GL-SAMPLER-CUBE-MAP-ARRAY-SHADOW", (GLenum) GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW, "GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW");
#endif
#if defined(GL_INT_SAMPLER_CUBE_MAP_ARRAY)
defconsti(env, "GL-INT-SAMPLER-CUBE-MAP-ARRAY", (GLenum) GL_INT_SAMPLER_CUBE_MAP_ARRAY, "GL_INT_SAMPLER_CUBE_MAP_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-CUBE-MAP-ARRAY", (GLenum) GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY, "GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY");
#endif
#if defined(GL_DRAW_INDIRECT_BUFFER)
defconsti(env, "GL-DRAW-INDIRECT-BUFFER", (GLenum) GL_DRAW_INDIRECT_BUFFER, "GL_DRAW_INDIRECT_BUFFER");
#endif
#if defined(GL_DRAW_INDIRECT_BUFFER_BINDING)
defconsti(env, "GL-DRAW-INDIRECT-BUFFER-BINDING", (GLenum) GL_DRAW_INDIRECT_BUFFER_BINDING, "GL_DRAW_INDIRECT_BUFFER_BINDING");
#endif
#if defined(GL_GEOMETRY_SHADER_INVOCATIONS)
defconsti(env, "GL-GEOMETRY-SHADER-INVOCATIONS", (GLenum) GL_GEOMETRY_SHADER_INVOCATIONS, "GL_GEOMETRY_SHADER_INVOCATIONS");
#endif
#if defined(GL_MAX_GEOMETRY_SHADER_INVOCATIONS)
defconsti(env, "GL-MAX-GEOMETRY-SHADER-INVOCATIONS", (GLenum) GL_MAX_GEOMETRY_SHADER_INVOCATIONS, "GL_MAX_GEOMETRY_SHADER_INVOCATIONS");
#endif
#if defined(GL_MIN_FRAGMENT_INTERPOLATION_OFFSET)
defconsti(env, "GL-MIN-FRAGMENT-INTERPOLATION-OFFSET", (GLenum) GL_MIN_FRAGMENT_INTERPOLATION_OFFSET, "GL_MIN_FRAGMENT_INTERPOLATION_OFFSET");
#endif
#if defined(GL_MAX_FRAGMENT_INTERPOLATION_OFFSET)
defconsti(env, "GL-MAX-FRAGMENT-INTERPOLATION-OFFSET", (GLenum) GL_MAX_FRAGMENT_INTERPOLATION_OFFSET, "GL_MAX_FRAGMENT_INTERPOLATION_OFFSET");
#endif
#if defined(GL_FRAGMENT_INTERPOLATION_OFFSET_BITS)
defconsti(env, "GL-FRAGMENT-INTERPOLATION-OFFSET-BITS", (GLenum) GL_FRAGMENT_INTERPOLATION_OFFSET_BITS, "GL_FRAGMENT_INTERPOLATION_OFFSET_BITS");
#endif
#if defined(GL_MAX_VERTEX_STREAMS)
defconsti(env, "GL-MAX-VERTEX-STREAMS", (GLenum) GL_MAX_VERTEX_STREAMS, "GL_MAX_VERTEX_STREAMS");
#endif
#if defined(GL_DOUBLE_VEC2)
defconsti(env, "GL-DOUBLE-VEC2", (GLenum) GL_DOUBLE_VEC2, "GL_DOUBLE_VEC2");
#endif
#if defined(GL_DOUBLE_VEC3)
defconsti(env, "GL-DOUBLE-VEC3", (GLenum) GL_DOUBLE_VEC3, "GL_DOUBLE_VEC3");
#endif
#if defined(GL_DOUBLE_VEC4)
defconsti(env, "GL-DOUBLE-VEC4", (GLenum) GL_DOUBLE_VEC4, "GL_DOUBLE_VEC4");
#endif
#if defined(GL_DOUBLE_MAT2)
defconsti(env, "GL-DOUBLE-MAT2", (GLenum) GL_DOUBLE_MAT2, "GL_DOUBLE_MAT2");
#endif
#if defined(GL_DOUBLE_MAT3)
defconsti(env, "GL-DOUBLE-MAT3", (GLenum) GL_DOUBLE_MAT3, "GL_DOUBLE_MAT3");
#endif
#if defined(GL_DOUBLE_MAT4)
defconsti(env, "GL-DOUBLE-MAT4", (GLenum) GL_DOUBLE_MAT4, "GL_DOUBLE_MAT4");
#endif
#if defined(GL_DOUBLE_MAT2x3)
defconsti(env, "GL-DOUBLE-MAT2x3", (GLenum) GL_DOUBLE_MAT2x3, "GL_DOUBLE_MAT2x3");
#endif
#if defined(GL_DOUBLE_MAT2x4)
defconsti(env, "GL-DOUBLE-MAT2x4", (GLenum) GL_DOUBLE_MAT2x4, "GL_DOUBLE_MAT2x4");
#endif
#if defined(GL_DOUBLE_MAT3x2)
defconsti(env, "GL-DOUBLE-MAT3x2", (GLenum) GL_DOUBLE_MAT3x2, "GL_DOUBLE_MAT3x2");
#endif
#if defined(GL_DOUBLE_MAT3x4)
defconsti(env, "GL-DOUBLE-MAT3x4", (GLenum) GL_DOUBLE_MAT3x4, "GL_DOUBLE_MAT3x4");
#endif
#if defined(GL_DOUBLE_MAT4x2)
defconsti(env, "GL-DOUBLE-MAT4x2", (GLenum) GL_DOUBLE_MAT4x2, "GL_DOUBLE_MAT4x2");
#endif
#if defined(GL_DOUBLE_MAT4x3)
defconsti(env, "GL-DOUBLE-MAT4x3", (GLenum) GL_DOUBLE_MAT4x3, "GL_DOUBLE_MAT4x3");
#endif
#if defined(GL_ACTIVE_SUBROUTINES)
defconsti(env, "GL-ACTIVE-SUBROUTINES", (GLenum) GL_ACTIVE_SUBROUTINES, "GL_ACTIVE_SUBROUTINES");
#endif
#if defined(GL_ACTIVE_SUBROUTINE_UNIFORMS)
defconsti(env, "GL-ACTIVE-SUBROUTINE-UNIFORMS", (GLenum) GL_ACTIVE_SUBROUTINE_UNIFORMS, "GL_ACTIVE_SUBROUTINE_UNIFORMS");
#endif
#if defined(GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS)
defconsti(env, "GL-ACTIVE-SUBROUTINE-UNIFORM-LOCATIONS", (GLenum) GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS, "GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS");
#endif
#if defined(GL_ACTIVE_SUBROUTINE_MAX_LENGTH)
defconsti(env, "GL-ACTIVE-SUBROUTINE-MAX-LENGTH", (GLenum) GL_ACTIVE_SUBROUTINE_MAX_LENGTH, "GL_ACTIVE_SUBROUTINE_MAX_LENGTH");
#endif
#if defined(GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH)
defconsti(env, "GL-ACTIVE-SUBROUTINE-UNIFORM-MAX-LENGTH", (GLenum) GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH, "GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH");
#endif
#if defined(GL_MAX_SUBROUTINES)
defconsti(env, "GL-MAX-SUBROUTINES", (GLenum) GL_MAX_SUBROUTINES, "GL_MAX_SUBROUTINES");
#endif
#if defined(GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS)
defconsti(env, "GL-MAX-SUBROUTINE-UNIFORM-LOCATIONS", (GLenum) GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS, "GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS");
#endif
#if defined(GL_NUM_COMPATIBLE_SUBROUTINES)
defconsti(env, "GL-NUM-COMPATIBLE-SUBROUTINES", (GLenum) GL_NUM_COMPATIBLE_SUBROUTINES, "GL_NUM_COMPATIBLE_SUBROUTINES");
#endif
#if defined(GL_COMPATIBLE_SUBROUTINES)
defconsti(env, "GL-COMPATIBLE-SUBROUTINES", (GLenum) GL_COMPATIBLE_SUBROUTINES, "GL_COMPATIBLE_SUBROUTINES");
#endif
#if defined(GL_PATCHES)
defconsti(env, "GL-PATCHES", (GLenum) GL_PATCHES, "GL_PATCHES");
#endif
#if defined(GL_PATCH_VERTICES)
defconsti(env, "GL-PATCH-VERTICES", (GLenum) GL_PATCH_VERTICES, "GL_PATCH_VERTICES");
#endif
#if defined(GL_PATCH_DEFAULT_INNER_LEVEL)
defconsti(env, "GL-PATCH-DEFAULT-INNER-LEVEL", (GLenum) GL_PATCH_DEFAULT_INNER_LEVEL, "GL_PATCH_DEFAULT_INNER_LEVEL");
#endif
#if defined(GL_PATCH_DEFAULT_OUTER_LEVEL)
defconsti(env, "GL-PATCH-DEFAULT-OUTER-LEVEL", (GLenum) GL_PATCH_DEFAULT_OUTER_LEVEL, "GL_PATCH_DEFAULT_OUTER_LEVEL");
#endif
#if defined(GL_TESS_CONTROL_OUTPUT_VERTICES)
defconsti(env, "GL-TESS-CONTROL-OUTPUT-VERTICES", (GLenum) GL_TESS_CONTROL_OUTPUT_VERTICES, "GL_TESS_CONTROL_OUTPUT_VERTICES");
#endif
#if defined(GL_TESS_GEN_MODE)
defconsti(env, "GL-TESS-GEN-MODE", (GLenum) GL_TESS_GEN_MODE, "GL_TESS_GEN_MODE");
#endif
#if defined(GL_TESS_GEN_SPACING)
defconsti(env, "GL-TESS-GEN-SPACING", (GLenum) GL_TESS_GEN_SPACING, "GL_TESS_GEN_SPACING");
#endif
#if defined(GL_TESS_GEN_VERTEX_ORDER)
defconsti(env, "GL-TESS-GEN-VERTEX-ORDER", (GLenum) GL_TESS_GEN_VERTEX_ORDER, "GL_TESS_GEN_VERTEX_ORDER");
#endif
#if defined(GL_TESS_GEN_POINT_MODE)
defconsti(env, "GL-TESS-GEN-POINT-MODE", (GLenum) GL_TESS_GEN_POINT_MODE, "GL_TESS_GEN_POINT_MODE");
#endif
#if defined(GL_ISOLINES)
defconsti(env, "GL-ISOLINES", (GLenum) GL_ISOLINES, "GL_ISOLINES");
#endif
#if defined(GL_QUADS)
defconsti(env, "GL-QUADS", (GLenum) GL_QUADS, "GL_QUADS");
#endif
#if defined(GL_FRACTIONAL_ODD)
defconsti(env, "GL-FRACTIONAL-ODD", (GLenum) GL_FRACTIONAL_ODD, "GL_FRACTIONAL_ODD");
#endif
#if defined(GL_FRACTIONAL_EVEN)
defconsti(env, "GL-FRACTIONAL-EVEN", (GLenum) GL_FRACTIONAL_EVEN, "GL_FRACTIONAL_EVEN");
#endif
#if defined(GL_MAX_PATCH_VERTICES)
defconsti(env, "GL-MAX-PATCH-VERTICES", (GLenum) GL_MAX_PATCH_VERTICES, "GL_MAX_PATCH_VERTICES");
#endif
#if defined(GL_MAX_TESS_GEN_LEVEL)
defconsti(env, "GL-MAX-TESS-GEN-LEVEL", (GLenum) GL_MAX_TESS_GEN_LEVEL, "GL_MAX_TESS_GEN_LEVEL");
#endif
#if defined(GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-TESS-CONTROL-UNIFORM-COMPONENTS", (GLenum) GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS, "GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-TESS-EVALUATION-UNIFORM-COMPONENTS", (GLenum) GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS, "GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-TESS-CONTROL-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS, "GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-TESS-EVALUATION-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS, "GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS)
defconsti(env, "GL-MAX-TESS-CONTROL-OUTPUT-COMPONENTS", (GLenum) GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS, "GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_PATCH_COMPONENTS)
defconsti(env, "GL-MAX-TESS-PATCH-COMPONENTS", (GLenum) GL_MAX_TESS_PATCH_COMPONENTS, "GL_MAX_TESS_PATCH_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS)
defconsti(env, "GL-MAX-TESS-CONTROL-TOTAL-OUTPUT-COMPONENTS", (GLenum) GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS, "GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS)
defconsti(env, "GL-MAX-TESS-EVALUATION-OUTPUT-COMPONENTS", (GLenum) GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS, "GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-TESS-CONTROL-UNIFORM-BLOCKS", (GLenum) GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS, "GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-TESS-EVALUATION-UNIFORM-BLOCKS", (GLenum) GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS, "GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_TESS_CONTROL_INPUT_COMPONENTS)
defconsti(env, "GL-MAX-TESS-CONTROL-INPUT-COMPONENTS", (GLenum) GL_MAX_TESS_CONTROL_INPUT_COMPONENTS, "GL_MAX_TESS_CONTROL_INPUT_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS)
defconsti(env, "GL-MAX-TESS-EVALUATION-INPUT-COMPONENTS", (GLenum) GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS, "GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS");
#endif
#if defined(GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-TESS-CONTROL-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-TESS-EVALUATION-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-TESS-CONTROL-SHADER", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER, "GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-TESS-EVALUATION-SHADER", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER, "GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER");
#endif
#if defined(GL_TESS_EVALUATION_SHADER)
defconsti(env, "GL-TESS-EVALUATION-SHADER", (GLenum) GL_TESS_EVALUATION_SHADER, "GL_TESS_EVALUATION_SHADER");
#endif
#if defined(GL_TESS_CONTROL_SHADER)
defconsti(env, "GL-TESS-CONTROL-SHADER", (GLenum) GL_TESS_CONTROL_SHADER, "GL_TESS_CONTROL_SHADER");
#endif
#if defined(GL_TRANSFORM_FEEDBACK)
defconsti(env, "GL-TRANSFORM-FEEDBACK", (GLenum) GL_TRANSFORM_FEEDBACK, "GL_TRANSFORM_FEEDBACK");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-PAUSED", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED, "GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-ACTIVE", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE, "GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BINDING)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BINDING", (GLenum) GL_TRANSFORM_FEEDBACK_BINDING, "GL_TRANSFORM_FEEDBACK_BINDING");
#endif
#if defined(GL_MAX_TRANSFORM_FEEDBACK_BUFFERS)
defconsti(env, "GL-MAX-TRANSFORM-FEEDBACK-BUFFERS", (GLenum) GL_MAX_TRANSFORM_FEEDBACK_BUFFERS, "GL_MAX_TRANSFORM_FEEDBACK_BUFFERS");
#endif
#if defined(GL_MAX_VERTEX_STREAMS)
defconsti(env, "GL-MAX-VERTEX-STREAMS", (GLenum) GL_MAX_VERTEX_STREAMS, "GL_MAX_VERTEX_STREAMS");
#endif
#if defined(GL_FIXED)
defconsti(env, "GL-FIXED", (GLenum) GL_FIXED, "GL_FIXED");
#endif
#if defined(GL_IMPLEMENTATION_COLOR_READ_TYPE)
defconsti(env, "GL-IMPLEMENTATION-COLOR-READ-TYPE", (GLenum) GL_IMPLEMENTATION_COLOR_READ_TYPE, "GL_IMPLEMENTATION_COLOR_READ_TYPE");
#endif
#if defined(GL_IMPLEMENTATION_COLOR_READ_FORMAT)
defconsti(env, "GL-IMPLEMENTATION-COLOR-READ-FORMAT", (GLenum) GL_IMPLEMENTATION_COLOR_READ_FORMAT, "GL_IMPLEMENTATION_COLOR_READ_FORMAT");
#endif
#if defined(GL_LOW_FLOAT)
defconsti(env, "GL-LOW-FLOAT", (GLenum) GL_LOW_FLOAT, "GL_LOW_FLOAT");
#endif
#if defined(GL_MEDIUM_FLOAT)
defconsti(env, "GL-MEDIUM-FLOAT", (GLenum) GL_MEDIUM_FLOAT, "GL_MEDIUM_FLOAT");
#endif
#if defined(GL_HIGH_FLOAT)
defconsti(env, "GL-HIGH-FLOAT", (GLenum) GL_HIGH_FLOAT, "GL_HIGH_FLOAT");
#endif
#if defined(GL_LOW_INT)
defconsti(env, "GL-LOW-INT", (GLenum) GL_LOW_INT, "GL_LOW_INT");
#endif
#if defined(GL_MEDIUM_INT)
defconsti(env, "GL-MEDIUM-INT", (GLenum) GL_MEDIUM_INT, "GL_MEDIUM_INT");
#endif
#if defined(GL_HIGH_INT)
defconsti(env, "GL-HIGH-INT", (GLenum) GL_HIGH_INT, "GL_HIGH_INT");
#endif
#if defined(GL_SHADER_COMPILER)
defconsti(env, "GL-SHADER-COMPILER", (GLenum) GL_SHADER_COMPILER, "GL_SHADER_COMPILER");
#endif
#if defined(GL_SHADER_BINARY_FORMATS)
defconsti(env, "GL-SHADER-BINARY-FORMATS", (GLenum) GL_SHADER_BINARY_FORMATS, "GL_SHADER_BINARY_FORMATS");
#endif
#if defined(GL_NUM_SHADER_BINARY_FORMATS)
defconsti(env, "GL-NUM-SHADER-BINARY-FORMATS", (GLenum) GL_NUM_SHADER_BINARY_FORMATS, "GL_NUM_SHADER_BINARY_FORMATS");
#endif
#if defined(GL_MAX_VERTEX_UNIFORM_VECTORS)
defconsti(env, "GL-MAX-VERTEX-UNIFORM-VECTORS", (GLenum) GL_MAX_VERTEX_UNIFORM_VECTORS, "GL_MAX_VERTEX_UNIFORM_VECTORS");
#endif
#if defined(GL_MAX_VARYING_VECTORS)
defconsti(env, "GL-MAX-VARYING-VECTORS", (GLenum) GL_MAX_VARYING_VECTORS, "GL_MAX_VARYING_VECTORS");
#endif
#if defined(GL_MAX_FRAGMENT_UNIFORM_VECTORS)
defconsti(env, "GL-MAX-FRAGMENT-UNIFORM-VECTORS", (GLenum) GL_MAX_FRAGMENT_UNIFORM_VECTORS, "GL_MAX_FRAGMENT_UNIFORM_VECTORS");
#endif
#if defined(GL_RGB565)
defconsti(env, "GL-RGB565", (GLenum) GL_RGB565, "GL_RGB565");
#endif
#if defined(GL_PROGRAM_BINARY_RETRIEVABLE_HINT)
defconsti(env, "GL-PROGRAM-BINARY-RETRIEVABLE-HINT", (GLenum) GL_PROGRAM_BINARY_RETRIEVABLE_HINT, "GL_PROGRAM_BINARY_RETRIEVABLE_HINT");
#endif
#if defined(GL_PROGRAM_BINARY_LENGTH)
defconsti(env, "GL-PROGRAM-BINARY-LENGTH", (GLenum) GL_PROGRAM_BINARY_LENGTH, "GL_PROGRAM_BINARY_LENGTH");
#endif
#if defined(GL_NUM_PROGRAM_BINARY_FORMATS)
defconsti(env, "GL-NUM-PROGRAM-BINARY-FORMATS", (GLenum) GL_NUM_PROGRAM_BINARY_FORMATS, "GL_NUM_PROGRAM_BINARY_FORMATS");
#endif
#if defined(GL_PROGRAM_BINARY_FORMATS)
defconsti(env, "GL-PROGRAM-BINARY-FORMATS", (GLenum) GL_PROGRAM_BINARY_FORMATS, "GL_PROGRAM_BINARY_FORMATS");
#endif
#if defined(GL_VERTEX_SHADER_BIT)
defconsti(env, "GL-VERTEX-SHADER-BIT", (GLenum) GL_VERTEX_SHADER_BIT, "GL_VERTEX_SHADER_BIT");
#endif
#if defined(GL_FRAGMENT_SHADER_BIT)
defconsti(env, "GL-FRAGMENT-SHADER-BIT", (GLenum) GL_FRAGMENT_SHADER_BIT, "GL_FRAGMENT_SHADER_BIT");
#endif
#if defined(GL_GEOMETRY_SHADER_BIT)
defconsti(env, "GL-GEOMETRY-SHADER-BIT", (GLenum) GL_GEOMETRY_SHADER_BIT, "GL_GEOMETRY_SHADER_BIT");
#endif
#if defined(GL_TESS_CONTROL_SHADER_BIT)
defconsti(env, "GL-TESS-CONTROL-SHADER-BIT", (GLenum) GL_TESS_CONTROL_SHADER_BIT, "GL_TESS_CONTROL_SHADER_BIT");
#endif
#if defined(GL_TESS_EVALUATION_SHADER_BIT)
defconsti(env, "GL-TESS-EVALUATION-SHADER-BIT", (GLenum) GL_TESS_EVALUATION_SHADER_BIT, "GL_TESS_EVALUATION_SHADER_BIT");
#endif
#if defined(GL_ALL_SHADER_BITS)
defconsti(env, "GL-ALL-SHADER-BITS", (GLenum) GL_ALL_SHADER_BITS, "GL_ALL_SHADER_BITS");
#endif
#if defined(GL_PROGRAM_SEPARABLE)
defconsti(env, "GL-PROGRAM-SEPARABLE", (GLenum) GL_PROGRAM_SEPARABLE, "GL_PROGRAM_SEPARABLE");
#endif
#if defined(GL_ACTIVE_PROGRAM)
defconsti(env, "GL-ACTIVE-PROGRAM", (GLenum) GL_ACTIVE_PROGRAM, "GL_ACTIVE_PROGRAM");
#endif
#if defined(GL_PROGRAM_PIPELINE_BINDING)
defconsti(env, "GL-PROGRAM-PIPELINE-BINDING", (GLenum) GL_PROGRAM_PIPELINE_BINDING, "GL_PROGRAM_PIPELINE_BINDING");
#endif
#if defined(GL_MAX_VIEWPORTS)
defconsti(env, "GL-MAX-VIEWPORTS", (GLenum) GL_MAX_VIEWPORTS, "GL_MAX_VIEWPORTS");
#endif
#if defined(GL_VIEWPORT_SUBPIXEL_BITS)
defconsti(env, "GL-VIEWPORT-SUBPIXEL-BITS", (GLenum) GL_VIEWPORT_SUBPIXEL_BITS, "GL_VIEWPORT_SUBPIXEL_BITS");
#endif
#if defined(GL_VIEWPORT_BOUNDS_RANGE)
defconsti(env, "GL-VIEWPORT-BOUNDS-RANGE", (GLenum) GL_VIEWPORT_BOUNDS_RANGE, "GL_VIEWPORT_BOUNDS_RANGE");
#endif
#if defined(GL_LAYER_PROVOKING_VERTEX)
defconsti(env, "GL-LAYER-PROVOKING-VERTEX", (GLenum) GL_LAYER_PROVOKING_VERTEX, "GL_LAYER_PROVOKING_VERTEX");
#endif
#if defined(GL_VIEWPORT_INDEX_PROVOKING_VERTEX)
defconsti(env, "GL-VIEWPORT-INDEX-PROVOKING-VERTEX", (GLenum) GL_VIEWPORT_INDEX_PROVOKING_VERTEX, "GL_VIEWPORT_INDEX_PROVOKING_VERTEX");
#endif
#if defined(GL_UNDEFINED_VERTEX)
defconsti(env, "GL-UNDEFINED-VERTEX", (GLenum) GL_UNDEFINED_VERTEX, "GL_UNDEFINED_VERTEX");
#endif
#if defined(GL_COPY_READ_BUFFER_BINDING)
defconsti(env, "GL-COPY-READ-BUFFER-BINDING", (GLenum) GL_COPY_READ_BUFFER_BINDING, "GL_COPY_READ_BUFFER_BINDING");
#endif
#if defined(GL_COPY_WRITE_BUFFER_BINDING)
defconsti(env, "GL-COPY-WRITE-BUFFER-BINDING", (GLenum) GL_COPY_WRITE_BUFFER_BINDING, "GL_COPY_WRITE_BUFFER_BINDING");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_ACTIVE)
defconsti(env, "GL-TRANSFORM-FEEDBACK-ACTIVE", (GLenum) GL_TRANSFORM_FEEDBACK_ACTIVE, "GL_TRANSFORM_FEEDBACK_ACTIVE");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_PAUSED)
defconsti(env, "GL-TRANSFORM-FEEDBACK-PAUSED", (GLenum) GL_TRANSFORM_FEEDBACK_PAUSED, "GL_TRANSFORM_FEEDBACK_PAUSED");
#endif
#if defined(GL_UNPACK_COMPRESSED_BLOCK_WIDTH)
defconsti(env, "GL-UNPACK-COMPRESSED-BLOCK-WIDTH", (GLenum) GL_UNPACK_COMPRESSED_BLOCK_WIDTH, "GL_UNPACK_COMPRESSED_BLOCK_WIDTH");
#endif
#if defined(GL_UNPACK_COMPRESSED_BLOCK_HEIGHT)
defconsti(env, "GL-UNPACK-COMPRESSED-BLOCK-HEIGHT", (GLenum) GL_UNPACK_COMPRESSED_BLOCK_HEIGHT, "GL_UNPACK_COMPRESSED_BLOCK_HEIGHT");
#endif
#if defined(GL_UNPACK_COMPRESSED_BLOCK_DEPTH)
defconsti(env, "GL-UNPACK-COMPRESSED-BLOCK-DEPTH", (GLenum) GL_UNPACK_COMPRESSED_BLOCK_DEPTH, "GL_UNPACK_COMPRESSED_BLOCK_DEPTH");
#endif
#if defined(GL_UNPACK_COMPRESSED_BLOCK_SIZE)
defconsti(env, "GL-UNPACK-COMPRESSED-BLOCK-SIZE", (GLenum) GL_UNPACK_COMPRESSED_BLOCK_SIZE, "GL_UNPACK_COMPRESSED_BLOCK_SIZE");
#endif
#if defined(GL_PACK_COMPRESSED_BLOCK_WIDTH)
defconsti(env, "GL-PACK-COMPRESSED-BLOCK-WIDTH", (GLenum) GL_PACK_COMPRESSED_BLOCK_WIDTH, "GL_PACK_COMPRESSED_BLOCK_WIDTH");
#endif
#if defined(GL_PACK_COMPRESSED_BLOCK_HEIGHT)
defconsti(env, "GL-PACK-COMPRESSED-BLOCK-HEIGHT", (GLenum) GL_PACK_COMPRESSED_BLOCK_HEIGHT, "GL_PACK_COMPRESSED_BLOCK_HEIGHT");
#endif
#if defined(GL_PACK_COMPRESSED_BLOCK_DEPTH)
defconsti(env, "GL-PACK-COMPRESSED-BLOCK-DEPTH", (GLenum) GL_PACK_COMPRESSED_BLOCK_DEPTH, "GL_PACK_COMPRESSED_BLOCK_DEPTH");
#endif
#if defined(GL_PACK_COMPRESSED_BLOCK_SIZE)
defconsti(env, "GL-PACK-COMPRESSED-BLOCK-SIZE", (GLenum) GL_PACK_COMPRESSED_BLOCK_SIZE, "GL_PACK_COMPRESSED_BLOCK_SIZE");
#endif
#if defined(GL_NUM_SAMPLE_COUNTS)
defconsti(env, "GL-NUM-SAMPLE-COUNTS", (GLenum) GL_NUM_SAMPLE_COUNTS, "GL_NUM_SAMPLE_COUNTS");
#endif
#if defined(GL_MIN_MAP_BUFFER_ALIGNMENT)
defconsti(env, "GL-MIN-MAP-BUFFER-ALIGNMENT", (GLenum) GL_MIN_MAP_BUFFER_ALIGNMENT, "GL_MIN_MAP_BUFFER_ALIGNMENT");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER", (GLenum) GL_ATOMIC_COUNTER_BUFFER, "GL_ATOMIC_COUNTER_BUFFER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_BINDING)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-BINDING", (GLenum) GL_ATOMIC_COUNTER_BUFFER_BINDING, "GL_ATOMIC_COUNTER_BUFFER_BINDING");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_START)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-START", (GLenum) GL_ATOMIC_COUNTER_BUFFER_START, "GL_ATOMIC_COUNTER_BUFFER_START");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_SIZE)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-SIZE", (GLenum) GL_ATOMIC_COUNTER_BUFFER_SIZE, "GL_ATOMIC_COUNTER_BUFFER_SIZE");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-DATA-SIZE", (GLenum) GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE, "GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-ACTIVE-ATOMIC-COUNTERS", (GLenum) GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS, "GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-ACTIVE-ATOMIC-COUNTER-INDICES", (GLenum) GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES, "GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-VERTEX-SHADER", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-TESS-CONTROL-SHADER", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-TESS-EVALUATION-SHADER", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-GEOMETRY-SHADER", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-FRAGMENT-SHADER", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER");
#endif
#if defined(GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-VERTEX-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS, "GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-TESS-CONTROL-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS, "GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-TESS-EVALUATION-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS, "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-GEOMETRY-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS, "GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-FRAGMENT-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS, "GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-COMBINED-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS, "GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_VERTEX_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-VERTEX-ATOMIC-COUNTERS", (GLenum) GL_MAX_VERTEX_ATOMIC_COUNTERS, "GL_MAX_VERTEX_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-TESS-CONTROL-ATOMIC-COUNTERS", (GLenum) GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS, "GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-TESS-EVALUATION-ATOMIC-COUNTERS", (GLenum) GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS, "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_GEOMETRY_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-GEOMETRY-ATOMIC-COUNTERS", (GLenum) GL_MAX_GEOMETRY_ATOMIC_COUNTERS, "GL_MAX_GEOMETRY_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_FRAGMENT_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-FRAGMENT-ATOMIC-COUNTERS", (GLenum) GL_MAX_FRAGMENT_ATOMIC_COUNTERS, "GL_MAX_FRAGMENT_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_COMBINED_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-COMBINED-ATOMIC-COUNTERS", (GLenum) GL_MAX_COMBINED_ATOMIC_COUNTERS, "GL_MAX_COMBINED_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE)
defconsti(env, "GL-MAX-ATOMIC-COUNTER-BUFFER-SIZE", (GLenum) GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE, "GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE");
#endif
#if defined(GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS)
defconsti(env, "GL-MAX-ATOMIC-COUNTER-BUFFER-BINDINGS", (GLenum) GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS, "GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS");
#endif
#if defined(GL_ACTIVE_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-ACTIVE-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_ACTIVE_ATOMIC_COUNTER_BUFFERS, "GL_ACTIVE_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX)
defconsti(env, "GL-UNIFORM-ATOMIC-COUNTER-BUFFER-INDEX", (GLenum) GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX, "GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX");
#endif
#if defined(GL_UNSIGNED_INT_ATOMIC_COUNTER)
defconsti(env, "GL-UNSIGNED-INT-ATOMIC-COUNTER", (GLenum) GL_UNSIGNED_INT_ATOMIC_COUNTER, "GL_UNSIGNED_INT_ATOMIC_COUNTER");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-BARRIER-BIT", (GLenum) GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT, "GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT");
#endif
#if defined(GL_ELEMENT_ARRAY_BARRIER_BIT)
defconsti(env, "GL-ELEMENT-ARRAY-BARRIER-BIT", (GLenum) GL_ELEMENT_ARRAY_BARRIER_BIT, "GL_ELEMENT_ARRAY_BARRIER_BIT");
#endif
#if defined(GL_UNIFORM_BARRIER_BIT)
defconsti(env, "GL-UNIFORM-BARRIER-BIT", (GLenum) GL_UNIFORM_BARRIER_BIT, "GL_UNIFORM_BARRIER_BIT");
#endif
#if defined(GL_TEXTURE_FETCH_BARRIER_BIT)
defconsti(env, "GL-TEXTURE-FETCH-BARRIER-BIT", (GLenum) GL_TEXTURE_FETCH_BARRIER_BIT, "GL_TEXTURE_FETCH_BARRIER_BIT");
#endif
#if defined(GL_SHADER_IMAGE_ACCESS_BARRIER_BIT)
defconsti(env, "GL-SHADER-IMAGE-ACCESS-BARRIER-BIT", (GLenum) GL_SHADER_IMAGE_ACCESS_BARRIER_BIT, "GL_SHADER_IMAGE_ACCESS_BARRIER_BIT");
#endif
#if defined(GL_COMMAND_BARRIER_BIT)
defconsti(env, "GL-COMMAND-BARRIER-BIT", (GLenum) GL_COMMAND_BARRIER_BIT, "GL_COMMAND_BARRIER_BIT");
#endif
#if defined(GL_PIXEL_BUFFER_BARRIER_BIT)
defconsti(env, "GL-PIXEL-BUFFER-BARRIER-BIT", (GLenum) GL_PIXEL_BUFFER_BARRIER_BIT, "GL_PIXEL_BUFFER_BARRIER_BIT");
#endif
#if defined(GL_TEXTURE_UPDATE_BARRIER_BIT)
defconsti(env, "GL-TEXTURE-UPDATE-BARRIER-BIT", (GLenum) GL_TEXTURE_UPDATE_BARRIER_BIT, "GL_TEXTURE_UPDATE_BARRIER_BIT");
#endif
#if defined(GL_BUFFER_UPDATE_BARRIER_BIT)
defconsti(env, "GL-BUFFER-UPDATE-BARRIER-BIT", (GLenum) GL_BUFFER_UPDATE_BARRIER_BIT, "GL_BUFFER_UPDATE_BARRIER_BIT");
#endif
#if defined(GL_FRAMEBUFFER_BARRIER_BIT)
defconsti(env, "GL-FRAMEBUFFER-BARRIER-BIT", (GLenum) GL_FRAMEBUFFER_BARRIER_BIT, "GL_FRAMEBUFFER_BARRIER_BIT");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BARRIER_BIT)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BARRIER-BIT", (GLenum) GL_TRANSFORM_FEEDBACK_BARRIER_BIT, "GL_TRANSFORM_FEEDBACK_BARRIER_BIT");
#endif
#if defined(GL_ATOMIC_COUNTER_BARRIER_BIT)
defconsti(env, "GL-ATOMIC-COUNTER-BARRIER-BIT", (GLenum) GL_ATOMIC_COUNTER_BARRIER_BIT, "GL_ATOMIC_COUNTER_BARRIER_BIT");
#endif
#if defined(GL_ALL_BARRIER_BITS)
defconsti(env, "GL-ALL-BARRIER-BITS", (GLenum) GL_ALL_BARRIER_BITS, "GL_ALL_BARRIER_BITS");
#endif
#if defined(GL_MAX_IMAGE_UNITS)
defconsti(env, "GL-MAX-IMAGE-UNITS", (GLenum) GL_MAX_IMAGE_UNITS, "GL_MAX_IMAGE_UNITS");
#endif
#if defined(GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS)
defconsti(env, "GL-MAX-COMBINED-IMAGE-UNITS-AND-FRAGMENT-OUTPUTS", (GLenum) GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS, "GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS");
#endif
#if defined(GL_IMAGE_BINDING_NAME)
defconsti(env, "GL-IMAGE-BINDING-NAME", (GLenum) GL_IMAGE_BINDING_NAME, "GL_IMAGE_BINDING_NAME");
#endif
#if defined(GL_IMAGE_BINDING_LEVEL)
defconsti(env, "GL-IMAGE-BINDING-LEVEL", (GLenum) GL_IMAGE_BINDING_LEVEL, "GL_IMAGE_BINDING_LEVEL");
#endif
#if defined(GL_IMAGE_BINDING_LAYERED)
defconsti(env, "GL-IMAGE-BINDING-LAYERED", (GLenum) GL_IMAGE_BINDING_LAYERED, "GL_IMAGE_BINDING_LAYERED");
#endif
#if defined(GL_IMAGE_BINDING_LAYER)
defconsti(env, "GL-IMAGE-BINDING-LAYER", (GLenum) GL_IMAGE_BINDING_LAYER, "GL_IMAGE_BINDING_LAYER");
#endif
#if defined(GL_IMAGE_BINDING_ACCESS)
defconsti(env, "GL-IMAGE-BINDING-ACCESS", (GLenum) GL_IMAGE_BINDING_ACCESS, "GL_IMAGE_BINDING_ACCESS");
#endif
#if defined(GL_IMAGE_1D)
defconsti(env, "GL-IMAGE-1D", (GLenum) GL_IMAGE_1D, "GL_IMAGE_1D");
#endif
#if defined(GL_IMAGE_2D)
defconsti(env, "GL-IMAGE-2D", (GLenum) GL_IMAGE_2D, "GL_IMAGE_2D");
#endif
#if defined(GL_IMAGE_3D)
defconsti(env, "GL-IMAGE-3D", (GLenum) GL_IMAGE_3D, "GL_IMAGE_3D");
#endif
#if defined(GL_IMAGE_2D_RECT)
defconsti(env, "GL-IMAGE-2D-RECT", (GLenum) GL_IMAGE_2D_RECT, "GL_IMAGE_2D_RECT");
#endif
#if defined(GL_IMAGE_CUBE)
defconsti(env, "GL-IMAGE-CUBE", (GLenum) GL_IMAGE_CUBE, "GL_IMAGE_CUBE");
#endif
#if defined(GL_IMAGE_BUFFER)
defconsti(env, "GL-IMAGE-BUFFER", (GLenum) GL_IMAGE_BUFFER, "GL_IMAGE_BUFFER");
#endif
#if defined(GL_IMAGE_1D_ARRAY)
defconsti(env, "GL-IMAGE-1D-ARRAY", (GLenum) GL_IMAGE_1D_ARRAY, "GL_IMAGE_1D_ARRAY");
#endif
#if defined(GL_IMAGE_2D_ARRAY)
defconsti(env, "GL-IMAGE-2D-ARRAY", (GLenum) GL_IMAGE_2D_ARRAY, "GL_IMAGE_2D_ARRAY");
#endif
#if defined(GL_IMAGE_CUBE_MAP_ARRAY)
defconsti(env, "GL-IMAGE-CUBE-MAP-ARRAY", (GLenum) GL_IMAGE_CUBE_MAP_ARRAY, "GL_IMAGE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_IMAGE_2D_MULTISAMPLE)
defconsti(env, "GL-IMAGE-2D-MULTISAMPLE", (GLenum) GL_IMAGE_2D_MULTISAMPLE, "GL_IMAGE_2D_MULTISAMPLE");
#endif
#if defined(GL_IMAGE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-IMAGE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_IMAGE_2D_MULTISAMPLE_ARRAY, "GL_IMAGE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_INT_IMAGE_1D)
defconsti(env, "GL-INT-IMAGE-1D", (GLenum) GL_INT_IMAGE_1D, "GL_INT_IMAGE_1D");
#endif
#if defined(GL_INT_IMAGE_2D)
defconsti(env, "GL-INT-IMAGE-2D", (GLenum) GL_INT_IMAGE_2D, "GL_INT_IMAGE_2D");
#endif
#if defined(GL_INT_IMAGE_3D)
defconsti(env, "GL-INT-IMAGE-3D", (GLenum) GL_INT_IMAGE_3D, "GL_INT_IMAGE_3D");
#endif
#if defined(GL_INT_IMAGE_2D_RECT)
defconsti(env, "GL-INT-IMAGE-2D-RECT", (GLenum) GL_INT_IMAGE_2D_RECT, "GL_INT_IMAGE_2D_RECT");
#endif
#if defined(GL_INT_IMAGE_CUBE)
defconsti(env, "GL-INT-IMAGE-CUBE", (GLenum) GL_INT_IMAGE_CUBE, "GL_INT_IMAGE_CUBE");
#endif
#if defined(GL_INT_IMAGE_BUFFER)
defconsti(env, "GL-INT-IMAGE-BUFFER", (GLenum) GL_INT_IMAGE_BUFFER, "GL_INT_IMAGE_BUFFER");
#endif
#if defined(GL_INT_IMAGE_1D_ARRAY)
defconsti(env, "GL-INT-IMAGE-1D-ARRAY", (GLenum) GL_INT_IMAGE_1D_ARRAY, "GL_INT_IMAGE_1D_ARRAY");
#endif
#if defined(GL_INT_IMAGE_2D_ARRAY)
defconsti(env, "GL-INT-IMAGE-2D-ARRAY", (GLenum) GL_INT_IMAGE_2D_ARRAY, "GL_INT_IMAGE_2D_ARRAY");
#endif
#if defined(GL_INT_IMAGE_CUBE_MAP_ARRAY)
defconsti(env, "GL-INT-IMAGE-CUBE-MAP-ARRAY", (GLenum) GL_INT_IMAGE_CUBE_MAP_ARRAY, "GL_INT_IMAGE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_INT_IMAGE_2D_MULTISAMPLE)
defconsti(env, "GL-INT-IMAGE-2D-MULTISAMPLE", (GLenum) GL_INT_IMAGE_2D_MULTISAMPLE, "GL_INT_IMAGE_2D_MULTISAMPLE");
#endif
#if defined(GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-INT-IMAGE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY, "GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_1D)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-1D", (GLenum) GL_UNSIGNED_INT_IMAGE_1D, "GL_UNSIGNED_INT_IMAGE_1D");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D", (GLenum) GL_UNSIGNED_INT_IMAGE_2D, "GL_UNSIGNED_INT_IMAGE_2D");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_3D)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-3D", (GLenum) GL_UNSIGNED_INT_IMAGE_3D, "GL_UNSIGNED_INT_IMAGE_3D");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_RECT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-RECT", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_RECT, "GL_UNSIGNED_INT_IMAGE_2D_RECT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_CUBE)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-CUBE", (GLenum) GL_UNSIGNED_INT_IMAGE_CUBE, "GL_UNSIGNED_INT_IMAGE_CUBE");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_BUFFER)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-BUFFER", (GLenum) GL_UNSIGNED_INT_IMAGE_BUFFER, "GL_UNSIGNED_INT_IMAGE_BUFFER");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_1D_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-1D-ARRAY", (GLenum) GL_UNSIGNED_INT_IMAGE_1D_ARRAY, "GL_UNSIGNED_INT_IMAGE_1D_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-ARRAY", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_ARRAY, "GL_UNSIGNED_INT_IMAGE_2D_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-CUBE-MAP-ARRAY", (GLenum) GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY, "GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-MULTISAMPLE", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE, "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY, "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_MAX_IMAGE_SAMPLES)
defconsti(env, "GL-MAX-IMAGE-SAMPLES", (GLenum) GL_MAX_IMAGE_SAMPLES, "GL_MAX_IMAGE_SAMPLES");
#endif
#if defined(GL_IMAGE_BINDING_FORMAT)
defconsti(env, "GL-IMAGE-BINDING-FORMAT", (GLenum) GL_IMAGE_BINDING_FORMAT, "GL_IMAGE_BINDING_FORMAT");
#endif
#if defined(GL_IMAGE_FORMAT_COMPATIBILITY_TYPE)
defconsti(env, "GL-IMAGE-FORMAT-COMPATIBILITY-TYPE", (GLenum) GL_IMAGE_FORMAT_COMPATIBILITY_TYPE, "GL_IMAGE_FORMAT_COMPATIBILITY_TYPE");
#endif
#if defined(GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE)
defconsti(env, "GL-IMAGE-FORMAT-COMPATIBILITY-BY-SIZE", (GLenum) GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE, "GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE");
#endif
#if defined(GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS)
defconsti(env, "GL-IMAGE-FORMAT-COMPATIBILITY-BY-CLASS", (GLenum) GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS, "GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS");
#endif
#if defined(GL_MAX_VERTEX_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-VERTEX-IMAGE-UNIFORMS", (GLenum) GL_MAX_VERTEX_IMAGE_UNIFORMS, "GL_MAX_VERTEX_IMAGE_UNIFORMS");
#endif
#if defined(GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-TESS-CONTROL-IMAGE-UNIFORMS", (GLenum) GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS, "GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-TESS-EVALUATION-IMAGE-UNIFORMS", (GLenum) GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS, "GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS");
#endif
#if defined(GL_MAX_GEOMETRY_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-GEOMETRY-IMAGE-UNIFORMS", (GLenum) GL_MAX_GEOMETRY_IMAGE_UNIFORMS, "GL_MAX_GEOMETRY_IMAGE_UNIFORMS");
#endif
#if defined(GL_MAX_FRAGMENT_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-FRAGMENT-IMAGE-UNIFORMS", (GLenum) GL_MAX_FRAGMENT_IMAGE_UNIFORMS, "GL_MAX_FRAGMENT_IMAGE_UNIFORMS");
#endif
#if defined(GL_MAX_COMBINED_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-COMBINED-IMAGE-UNIFORMS", (GLenum) GL_MAX_COMBINED_IMAGE_UNIFORMS, "GL_MAX_COMBINED_IMAGE_UNIFORMS");
#endif
#if defined(GL_COMPRESSED_RGBA_BPTC_UNORM)
defconsti(env, "GL-COMPRESSED-RGBA-BPTC-UNORM", (GLenum) GL_COMPRESSED_RGBA_BPTC_UNORM, "GL_COMPRESSED_RGBA_BPTC_UNORM");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-BPTC-UNORM", (GLenum) GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM, "GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM");
#endif
#if defined(GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT)
defconsti(env, "GL-COMPRESSED-RGB-BPTC-SIGNED-FLOAT", (GLenum) GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT, "GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT");
#endif
#if defined(GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT)
defconsti(env, "GL-COMPRESSED-RGB-BPTC-UNSIGNED-FLOAT", (GLenum) GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT, "GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT");
#endif
#if defined(GL_TEXTURE_IMMUTABLE_FORMAT)
defconsti(env, "GL-TEXTURE-IMMUTABLE-FORMAT", (GLenum) GL_TEXTURE_IMMUTABLE_FORMAT, "GL_TEXTURE_IMMUTABLE_FORMAT");
#endif
#if defined(GL_NUM_SHADING_LANGUAGE_VERSIONS)
defconsti(env, "GL-NUM-SHADING-LANGUAGE-VERSIONS", (GLenum) GL_NUM_SHADING_LANGUAGE_VERSIONS, "GL_NUM_SHADING_LANGUAGE_VERSIONS");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_LONG)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-LONG", (GLenum) GL_VERTEX_ATTRIB_ARRAY_LONG, "GL_VERTEX_ATTRIB_ARRAY_LONG");
#endif
#if defined(GL_COMPRESSED_RGB8_ETC2)
defconsti(env, "GL-COMPRESSED-RGB8-ETC2", (GLenum) GL_COMPRESSED_RGB8_ETC2, "GL_COMPRESSED_RGB8_ETC2");
#endif
#if defined(GL_COMPRESSED_SRGB8_ETC2)
defconsti(env, "GL-COMPRESSED-SRGB8-ETC2", (GLenum) GL_COMPRESSED_SRGB8_ETC2, "GL_COMPRESSED_SRGB8_ETC2");
#endif
#if defined(GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2)
defconsti(env, "GL-COMPRESSED-RGB8-PUNCHTHROUGH-ALPHA1-ETC2", (GLenum) GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2, "GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2");
#endif
#if defined(GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2)
defconsti(env, "GL-COMPRESSED-SRGB8-PUNCHTHROUGH-ALPHA1-ETC2", (GLenum) GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2, "GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2");
#endif
#if defined(GL_COMPRESSED_RGBA8_ETC2_EAC)
defconsti(env, "GL-COMPRESSED-RGBA8-ETC2-EAC", (GLenum) GL_COMPRESSED_RGBA8_ETC2_EAC, "GL_COMPRESSED_RGBA8_ETC2_EAC");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ETC2-EAC", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC, "GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC");
#endif
#if defined(GL_COMPRESSED_R11_EAC)
defconsti(env, "GL-COMPRESSED-R11-EAC", (GLenum) GL_COMPRESSED_R11_EAC, "GL_COMPRESSED_R11_EAC");
#endif
#if defined(GL_COMPRESSED_SIGNED_R11_EAC)
defconsti(env, "GL-COMPRESSED-SIGNED-R11-EAC", (GLenum) GL_COMPRESSED_SIGNED_R11_EAC, "GL_COMPRESSED_SIGNED_R11_EAC");
#endif
#if defined(GL_COMPRESSED_RG11_EAC)
defconsti(env, "GL-COMPRESSED-RG11-EAC", (GLenum) GL_COMPRESSED_RG11_EAC, "GL_COMPRESSED_RG11_EAC");
#endif
#if defined(GL_COMPRESSED_SIGNED_RG11_EAC)
defconsti(env, "GL-COMPRESSED-SIGNED-RG11-EAC", (GLenum) GL_COMPRESSED_SIGNED_RG11_EAC, "GL_COMPRESSED_SIGNED_RG11_EAC");
#endif
#if defined(GL_PRIMITIVE_RESTART_FIXED_INDEX)
defconsti(env, "GL-PRIMITIVE-RESTART-FIXED-INDEX", (GLenum) GL_PRIMITIVE_RESTART_FIXED_INDEX, "GL_PRIMITIVE_RESTART_FIXED_INDEX");
#endif
#if defined(GL_ANY_SAMPLES_PASSED_CONSERVATIVE)
defconsti(env, "GL-ANY-SAMPLES-PASSED-CONSERVATIVE", (GLenum) GL_ANY_SAMPLES_PASSED_CONSERVATIVE, "GL_ANY_SAMPLES_PASSED_CONSERVATIVE");
#endif
#if defined(GL_MAX_ELEMENT_INDEX)
defconsti(env, "GL-MAX-ELEMENT-INDEX", (GLenum) GL_MAX_ELEMENT_INDEX, "GL_MAX_ELEMENT_INDEX");
#endif
#if defined(GL_COMPUTE_SHADER)
defconsti(env, "GL-COMPUTE-SHADER", (GLenum) GL_COMPUTE_SHADER, "GL_COMPUTE_SHADER");
#endif
#if defined(GL_MAX_COMPUTE_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-COMPUTE-UNIFORM-BLOCKS", (GLenum) GL_MAX_COMPUTE_UNIFORM_BLOCKS, "GL_MAX_COMPUTE_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-COMPUTE-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS, "GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_COMPUTE_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-COMPUTE-IMAGE-UNIFORMS", (GLenum) GL_MAX_COMPUTE_IMAGE_UNIFORMS, "GL_MAX_COMPUTE_IMAGE_UNIFORMS");
#endif
#if defined(GL_MAX_COMPUTE_SHARED_MEMORY_SIZE)
defconsti(env, "GL-MAX-COMPUTE-SHARED-MEMORY-SIZE", (GLenum) GL_MAX_COMPUTE_SHARED_MEMORY_SIZE, "GL_MAX_COMPUTE_SHARED_MEMORY_SIZE");
#endif
#if defined(GL_MAX_COMPUTE_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMPUTE-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMPUTE_UNIFORM_COMPONENTS, "GL_MAX_COMPUTE_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-COMPUTE-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS, "GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_COMPUTE_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-COMPUTE-ATOMIC-COUNTERS", (GLenum) GL_MAX_COMPUTE_ATOMIC_COUNTERS, "GL_MAX_COMPUTE_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-COMPUTE-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS)
defconsti(env, "GL-MAX-COMPUTE-WORK-GROUP-INVOCATIONS", (GLenum) GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS, "GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS");
#endif
#if defined(GL_MAX_COMPUTE_WORK_GROUP_COUNT)
defconsti(env, "GL-MAX-COMPUTE-WORK-GROUP-COUNT", (GLenum) GL_MAX_COMPUTE_WORK_GROUP_COUNT, "GL_MAX_COMPUTE_WORK_GROUP_COUNT");
#endif
#if defined(GL_MAX_COMPUTE_WORK_GROUP_SIZE)
defconsti(env, "GL-MAX-COMPUTE-WORK-GROUP-SIZE", (GLenum) GL_MAX_COMPUTE_WORK_GROUP_SIZE, "GL_MAX_COMPUTE_WORK_GROUP_SIZE");
#endif
#if defined(GL_COMPUTE_WORK_GROUP_SIZE)
defconsti(env, "GL-COMPUTE-WORK-GROUP-SIZE", (GLenum) GL_COMPUTE_WORK_GROUP_SIZE, "GL_COMPUTE_WORK_GROUP_SIZE");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-COMPUTE-SHADER", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER, "GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-COMPUTE-SHADER", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER");
#endif
#if defined(GL_DISPATCH_INDIRECT_BUFFER)
defconsti(env, "GL-DISPATCH-INDIRECT-BUFFER", (GLenum) GL_DISPATCH_INDIRECT_BUFFER, "GL_DISPATCH_INDIRECT_BUFFER");
#endif
#if defined(GL_DISPATCH_INDIRECT_BUFFER_BINDING)
defconsti(env, "GL-DISPATCH-INDIRECT-BUFFER-BINDING", (GLenum) GL_DISPATCH_INDIRECT_BUFFER_BINDING, "GL_DISPATCH_INDIRECT_BUFFER_BINDING");
#endif
#if defined(GL_COMPUTE_SHADER_BIT)
defconsti(env, "GL-COMPUTE-SHADER-BIT", (GLenum) GL_COMPUTE_SHADER_BIT, "GL_COMPUTE_SHADER_BIT");
#endif
#if defined(GL_DEBUG_OUTPUT_SYNCHRONOUS)
defconsti(env, "GL-DEBUG-OUTPUT-SYNCHRONOUS", (GLenum) GL_DEBUG_OUTPUT_SYNCHRONOUS, "GL_DEBUG_OUTPUT_SYNCHRONOUS");
#endif
#if defined(GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH)
defconsti(env, "GL-DEBUG-NEXT-LOGGED-MESSAGE-LENGTH", (GLenum) GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH, "GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH");
#endif
#if defined(GL_DEBUG_CALLBACK_FUNCTION)
defconsti(env, "GL-DEBUG-CALLBACK-FUNCTION", (GLenum) GL_DEBUG_CALLBACK_FUNCTION, "GL_DEBUG_CALLBACK_FUNCTION");
#endif
#if defined(GL_DEBUG_CALLBACK_USER_PARAM)
defconsti(env, "GL-DEBUG-CALLBACK-USER-PARAM", (GLenum) GL_DEBUG_CALLBACK_USER_PARAM, "GL_DEBUG_CALLBACK_USER_PARAM");
#endif
#if defined(GL_DEBUG_SOURCE_API)
defconsti(env, "GL-DEBUG-SOURCE-API", (GLenum) GL_DEBUG_SOURCE_API, "GL_DEBUG_SOURCE_API");
#endif
#if defined(GL_DEBUG_SOURCE_WINDOW_SYSTEM)
defconsti(env, "GL-DEBUG-SOURCE-WINDOW-SYSTEM", (GLenum) GL_DEBUG_SOURCE_WINDOW_SYSTEM, "GL_DEBUG_SOURCE_WINDOW_SYSTEM");
#endif
#if defined(GL_DEBUG_SOURCE_SHADER_COMPILER)
defconsti(env, "GL-DEBUG-SOURCE-SHADER-COMPILER", (GLenum) GL_DEBUG_SOURCE_SHADER_COMPILER, "GL_DEBUG_SOURCE_SHADER_COMPILER");
#endif
#if defined(GL_DEBUG_SOURCE_THIRD_PARTY)
defconsti(env, "GL-DEBUG-SOURCE-THIRD-PARTY", (GLenum) GL_DEBUG_SOURCE_THIRD_PARTY, "GL_DEBUG_SOURCE_THIRD_PARTY");
#endif
#if defined(GL_DEBUG_SOURCE_APPLICATION)
defconsti(env, "GL-DEBUG-SOURCE-APPLICATION", (GLenum) GL_DEBUG_SOURCE_APPLICATION, "GL_DEBUG_SOURCE_APPLICATION");
#endif
#if defined(GL_DEBUG_SOURCE_OTHER)
defconsti(env, "GL-DEBUG-SOURCE-OTHER", (GLenum) GL_DEBUG_SOURCE_OTHER, "GL_DEBUG_SOURCE_OTHER");
#endif
#if defined(GL_DEBUG_TYPE_ERROR)
defconsti(env, "GL-DEBUG-TYPE-ERROR", (GLenum) GL_DEBUG_TYPE_ERROR, "GL_DEBUG_TYPE_ERROR");
#endif
#if defined(GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR)
defconsti(env, "GL-DEBUG-TYPE-DEPRECATED-BEHAVIOR", (GLenum) GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR, "GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR");
#endif
#if defined(GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR)
defconsti(env, "GL-DEBUG-TYPE-UNDEFINED-BEHAVIOR", (GLenum) GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR, "GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR");
#endif
#if defined(GL_DEBUG_TYPE_PORTABILITY)
defconsti(env, "GL-DEBUG-TYPE-PORTABILITY", (GLenum) GL_DEBUG_TYPE_PORTABILITY, "GL_DEBUG_TYPE_PORTABILITY");
#endif
#if defined(GL_DEBUG_TYPE_PERFORMANCE)
defconsti(env, "GL-DEBUG-TYPE-PERFORMANCE", (GLenum) GL_DEBUG_TYPE_PERFORMANCE, "GL_DEBUG_TYPE_PERFORMANCE");
#endif
#if defined(GL_DEBUG_TYPE_OTHER)
defconsti(env, "GL-DEBUG-TYPE-OTHER", (GLenum) GL_DEBUG_TYPE_OTHER, "GL_DEBUG_TYPE_OTHER");
#endif
#if defined(GL_MAX_DEBUG_MESSAGE_LENGTH)
defconsti(env, "GL-MAX-DEBUG-MESSAGE-LENGTH", (GLenum) GL_MAX_DEBUG_MESSAGE_LENGTH, "GL_MAX_DEBUG_MESSAGE_LENGTH");
#endif
#if defined(GL_MAX_DEBUG_LOGGED_MESSAGES)
defconsti(env, "GL-MAX-DEBUG-LOGGED-MESSAGES", (GLenum) GL_MAX_DEBUG_LOGGED_MESSAGES, "GL_MAX_DEBUG_LOGGED_MESSAGES");
#endif
#if defined(GL_DEBUG_LOGGED_MESSAGES)
defconsti(env, "GL-DEBUG-LOGGED-MESSAGES", (GLenum) GL_DEBUG_LOGGED_MESSAGES, "GL_DEBUG_LOGGED_MESSAGES");
#endif
#if defined(GL_DEBUG_SEVERITY_HIGH)
defconsti(env, "GL-DEBUG-SEVERITY-HIGH", (GLenum) GL_DEBUG_SEVERITY_HIGH, "GL_DEBUG_SEVERITY_HIGH");
#endif
#if defined(GL_DEBUG_SEVERITY_MEDIUM)
defconsti(env, "GL-DEBUG-SEVERITY-MEDIUM", (GLenum) GL_DEBUG_SEVERITY_MEDIUM, "GL_DEBUG_SEVERITY_MEDIUM");
#endif
#if defined(GL_DEBUG_SEVERITY_LOW)
defconsti(env, "GL-DEBUG-SEVERITY-LOW", (GLenum) GL_DEBUG_SEVERITY_LOW, "GL_DEBUG_SEVERITY_LOW");
#endif
#if defined(GL_DEBUG_TYPE_MARKER)
defconsti(env, "GL-DEBUG-TYPE-MARKER", (GLenum) GL_DEBUG_TYPE_MARKER, "GL_DEBUG_TYPE_MARKER");
#endif
#if defined(GL_DEBUG_TYPE_PUSH_GROUP)
defconsti(env, "GL-DEBUG-TYPE-PUSH-GROUP", (GLenum) GL_DEBUG_TYPE_PUSH_GROUP, "GL_DEBUG_TYPE_PUSH_GROUP");
#endif
#if defined(GL_DEBUG_TYPE_POP_GROUP)
defconsti(env, "GL-DEBUG-TYPE-POP-GROUP", (GLenum) GL_DEBUG_TYPE_POP_GROUP, "GL_DEBUG_TYPE_POP_GROUP");
#endif
#if defined(GL_DEBUG_SEVERITY_NOTIFICATION)
defconsti(env, "GL-DEBUG-SEVERITY-NOTIFICATION", (GLenum) GL_DEBUG_SEVERITY_NOTIFICATION, "GL_DEBUG_SEVERITY_NOTIFICATION");
#endif
#if defined(GL_MAX_DEBUG_GROUP_STACK_DEPTH)
defconsti(env, "GL-MAX-DEBUG-GROUP-STACK-DEPTH", (GLenum) GL_MAX_DEBUG_GROUP_STACK_DEPTH, "GL_MAX_DEBUG_GROUP_STACK_DEPTH");
#endif
#if defined(GL_DEBUG_GROUP_STACK_DEPTH)
defconsti(env, "GL-DEBUG-GROUP-STACK-DEPTH", (GLenum) GL_DEBUG_GROUP_STACK_DEPTH, "GL_DEBUG_GROUP_STACK_DEPTH");
#endif
#if defined(GL_BUFFER)
defconsti(env, "GL-BUFFER", (GLenum) GL_BUFFER, "GL_BUFFER");
#endif
#if defined(GL_SHADER)
defconsti(env, "GL-SHADER", (GLenum) GL_SHADER, "GL_SHADER");
#endif
#if defined(GL_PROGRAM)
defconsti(env, "GL-PROGRAM", (GLenum) GL_PROGRAM, "GL_PROGRAM");
#endif
#if defined(GL_VERTEX_ARRAY)
defconsti(env, "GL-VERTEX-ARRAY", (GLenum) GL_VERTEX_ARRAY, "GL_VERTEX_ARRAY");
#endif
#if defined(GL_QUERY)
defconsti(env, "GL-QUERY", (GLenum) GL_QUERY, "GL_QUERY");
#endif
#if defined(GL_PROGRAM_PIPELINE)
defconsti(env, "GL-PROGRAM-PIPELINE", (GLenum) GL_PROGRAM_PIPELINE, "GL_PROGRAM_PIPELINE");
#endif
#if defined(GL_SAMPLER)
defconsti(env, "GL-SAMPLER", (GLenum) GL_SAMPLER, "GL_SAMPLER");
#endif
#if defined(GL_MAX_LABEL_LENGTH)
defconsti(env, "GL-MAX-LABEL-LENGTH", (GLenum) GL_MAX_LABEL_LENGTH, "GL_MAX_LABEL_LENGTH");
#endif
#if defined(GL_DEBUG_OUTPUT)
defconsti(env, "GL-DEBUG-OUTPUT", (GLenum) GL_DEBUG_OUTPUT, "GL_DEBUG_OUTPUT");
#endif
#if defined(GL_CONTEXT_FLAG_DEBUG_BIT)
defconsti(env, "GL-CONTEXT-FLAG-DEBUG-BIT", (GLenum) GL_CONTEXT_FLAG_DEBUG_BIT, "GL_CONTEXT_FLAG_DEBUG_BIT");
#endif
#if defined(GL_MAX_UNIFORM_LOCATIONS)
defconsti(env, "GL-MAX-UNIFORM-LOCATIONS", (GLenum) GL_MAX_UNIFORM_LOCATIONS, "GL_MAX_UNIFORM_LOCATIONS");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_WIDTH)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-WIDTH", (GLenum) GL_FRAMEBUFFER_DEFAULT_WIDTH, "GL_FRAMEBUFFER_DEFAULT_WIDTH");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_HEIGHT)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-HEIGHT", (GLenum) GL_FRAMEBUFFER_DEFAULT_HEIGHT, "GL_FRAMEBUFFER_DEFAULT_HEIGHT");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_LAYERS)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-LAYERS", (GLenum) GL_FRAMEBUFFER_DEFAULT_LAYERS, "GL_FRAMEBUFFER_DEFAULT_LAYERS");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_SAMPLES)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-SAMPLES", (GLenum) GL_FRAMEBUFFER_DEFAULT_SAMPLES, "GL_FRAMEBUFFER_DEFAULT_SAMPLES");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-FIXED-SAMPLE-LOCATIONS", (GLenum) GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS, "GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS");
#endif
#if defined(GL_MAX_FRAMEBUFFER_WIDTH)
defconsti(env, "GL-MAX-FRAMEBUFFER-WIDTH", (GLenum) GL_MAX_FRAMEBUFFER_WIDTH, "GL_MAX_FRAMEBUFFER_WIDTH");
#endif
#if defined(GL_MAX_FRAMEBUFFER_HEIGHT)
defconsti(env, "GL-MAX-FRAMEBUFFER-HEIGHT", (GLenum) GL_MAX_FRAMEBUFFER_HEIGHT, "GL_MAX_FRAMEBUFFER_HEIGHT");
#endif
#if defined(GL_MAX_FRAMEBUFFER_LAYERS)
defconsti(env, "GL-MAX-FRAMEBUFFER-LAYERS", (GLenum) GL_MAX_FRAMEBUFFER_LAYERS, "GL_MAX_FRAMEBUFFER_LAYERS");
#endif
#if defined(GL_MAX_FRAMEBUFFER_SAMPLES)
defconsti(env, "GL-MAX-FRAMEBUFFER-SAMPLES", (GLenum) GL_MAX_FRAMEBUFFER_SAMPLES, "GL_MAX_FRAMEBUFFER_SAMPLES");
#endif
#if defined(GL_INTERNALFORMAT_SUPPORTED)
defconsti(env, "GL-INTERNALFORMAT-SUPPORTED", (GLenum) GL_INTERNALFORMAT_SUPPORTED, "GL_INTERNALFORMAT_SUPPORTED");
#endif
#if defined(GL_INTERNALFORMAT_PREFERRED)
defconsti(env, "GL-INTERNALFORMAT-PREFERRED", (GLenum) GL_INTERNALFORMAT_PREFERRED, "GL_INTERNALFORMAT_PREFERRED");
#endif
#if defined(GL_INTERNALFORMAT_RED_SIZE)
defconsti(env, "GL-INTERNALFORMAT-RED-SIZE", (GLenum) GL_INTERNALFORMAT_RED_SIZE, "GL_INTERNALFORMAT_RED_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_GREEN_SIZE)
defconsti(env, "GL-INTERNALFORMAT-GREEN-SIZE", (GLenum) GL_INTERNALFORMAT_GREEN_SIZE, "GL_INTERNALFORMAT_GREEN_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_BLUE_SIZE)
defconsti(env, "GL-INTERNALFORMAT-BLUE-SIZE", (GLenum) GL_INTERNALFORMAT_BLUE_SIZE, "GL_INTERNALFORMAT_BLUE_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_ALPHA_SIZE)
defconsti(env, "GL-INTERNALFORMAT-ALPHA-SIZE", (GLenum) GL_INTERNALFORMAT_ALPHA_SIZE, "GL_INTERNALFORMAT_ALPHA_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_DEPTH_SIZE)
defconsti(env, "GL-INTERNALFORMAT-DEPTH-SIZE", (GLenum) GL_INTERNALFORMAT_DEPTH_SIZE, "GL_INTERNALFORMAT_DEPTH_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_STENCIL_SIZE)
defconsti(env, "GL-INTERNALFORMAT-STENCIL-SIZE", (GLenum) GL_INTERNALFORMAT_STENCIL_SIZE, "GL_INTERNALFORMAT_STENCIL_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_SHARED_SIZE)
defconsti(env, "GL-INTERNALFORMAT-SHARED-SIZE", (GLenum) GL_INTERNALFORMAT_SHARED_SIZE, "GL_INTERNALFORMAT_SHARED_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_RED_TYPE)
defconsti(env, "GL-INTERNALFORMAT-RED-TYPE", (GLenum) GL_INTERNALFORMAT_RED_TYPE, "GL_INTERNALFORMAT_RED_TYPE");
#endif
#if defined(GL_INTERNALFORMAT_GREEN_TYPE)
defconsti(env, "GL-INTERNALFORMAT-GREEN-TYPE", (GLenum) GL_INTERNALFORMAT_GREEN_TYPE, "GL_INTERNALFORMAT_GREEN_TYPE");
#endif
#if defined(GL_INTERNALFORMAT_BLUE_TYPE)
defconsti(env, "GL-INTERNALFORMAT-BLUE-TYPE", (GLenum) GL_INTERNALFORMAT_BLUE_TYPE, "GL_INTERNALFORMAT_BLUE_TYPE");
#endif
#if defined(GL_INTERNALFORMAT_ALPHA_TYPE)
defconsti(env, "GL-INTERNALFORMAT-ALPHA-TYPE", (GLenum) GL_INTERNALFORMAT_ALPHA_TYPE, "GL_INTERNALFORMAT_ALPHA_TYPE");
#endif
#if defined(GL_INTERNALFORMAT_DEPTH_TYPE)
defconsti(env, "GL-INTERNALFORMAT-DEPTH-TYPE", (GLenum) GL_INTERNALFORMAT_DEPTH_TYPE, "GL_INTERNALFORMAT_DEPTH_TYPE");
#endif
#if defined(GL_INTERNALFORMAT_STENCIL_TYPE)
defconsti(env, "GL-INTERNALFORMAT-STENCIL-TYPE", (GLenum) GL_INTERNALFORMAT_STENCIL_TYPE, "GL_INTERNALFORMAT_STENCIL_TYPE");
#endif
#if defined(GL_MAX_WIDTH)
defconsti(env, "GL-MAX-WIDTH", (GLenum) GL_MAX_WIDTH, "GL_MAX_WIDTH");
#endif
#if defined(GL_MAX_HEIGHT)
defconsti(env, "GL-MAX-HEIGHT", (GLenum) GL_MAX_HEIGHT, "GL_MAX_HEIGHT");
#endif
#if defined(GL_MAX_DEPTH)
defconsti(env, "GL-MAX-DEPTH", (GLenum) GL_MAX_DEPTH, "GL_MAX_DEPTH");
#endif
#if defined(GL_MAX_LAYERS)
defconsti(env, "GL-MAX-LAYERS", (GLenum) GL_MAX_LAYERS, "GL_MAX_LAYERS");
#endif
#if defined(GL_MAX_COMBINED_DIMENSIONS)
defconsti(env, "GL-MAX-COMBINED-DIMENSIONS", (GLenum) GL_MAX_COMBINED_DIMENSIONS, "GL_MAX_COMBINED_DIMENSIONS");
#endif
#if defined(GL_COLOR_COMPONENTS)
defconsti(env, "GL-COLOR-COMPONENTS", (GLenum) GL_COLOR_COMPONENTS, "GL_COLOR_COMPONENTS");
#endif
#if defined(GL_DEPTH_COMPONENTS)
defconsti(env, "GL-DEPTH-COMPONENTS", (GLenum) GL_DEPTH_COMPONENTS, "GL_DEPTH_COMPONENTS");
#endif
#if defined(GL_STENCIL_COMPONENTS)
defconsti(env, "GL-STENCIL-COMPONENTS", (GLenum) GL_STENCIL_COMPONENTS, "GL_STENCIL_COMPONENTS");
#endif
#if defined(GL_COLOR_RENDERABLE)
defconsti(env, "GL-COLOR-RENDERABLE", (GLenum) GL_COLOR_RENDERABLE, "GL_COLOR_RENDERABLE");
#endif
#if defined(GL_DEPTH_RENDERABLE)
defconsti(env, "GL-DEPTH-RENDERABLE", (GLenum) GL_DEPTH_RENDERABLE, "GL_DEPTH_RENDERABLE");
#endif
#if defined(GL_STENCIL_RENDERABLE)
defconsti(env, "GL-STENCIL-RENDERABLE", (GLenum) GL_STENCIL_RENDERABLE, "GL_STENCIL_RENDERABLE");
#endif
#if defined(GL_FRAMEBUFFER_RENDERABLE)
defconsti(env, "GL-FRAMEBUFFER-RENDERABLE", (GLenum) GL_FRAMEBUFFER_RENDERABLE, "GL_FRAMEBUFFER_RENDERABLE");
#endif
#if defined(GL_FRAMEBUFFER_RENDERABLE_LAYERED)
defconsti(env, "GL-FRAMEBUFFER-RENDERABLE-LAYERED", (GLenum) GL_FRAMEBUFFER_RENDERABLE_LAYERED, "GL_FRAMEBUFFER_RENDERABLE_LAYERED");
#endif
#if defined(GL_FRAMEBUFFER_BLEND)
defconsti(env, "GL-FRAMEBUFFER-BLEND", (GLenum) GL_FRAMEBUFFER_BLEND, "GL_FRAMEBUFFER_BLEND");
#endif
#if defined(GL_READ_PIXELS)
defconsti(env, "GL-READ-PIXELS", (GLenum) GL_READ_PIXELS, "GL_READ_PIXELS");
#endif
#if defined(GL_READ_PIXELS_FORMAT)
defconsti(env, "GL-READ-PIXELS-FORMAT", (GLenum) GL_READ_PIXELS_FORMAT, "GL_READ_PIXELS_FORMAT");
#endif
#if defined(GL_READ_PIXELS_TYPE)
defconsti(env, "GL-READ-PIXELS-TYPE", (GLenum) GL_READ_PIXELS_TYPE, "GL_READ_PIXELS_TYPE");
#endif
#if defined(GL_TEXTURE_IMAGE_FORMAT)
defconsti(env, "GL-TEXTURE-IMAGE-FORMAT", (GLenum) GL_TEXTURE_IMAGE_FORMAT, "GL_TEXTURE_IMAGE_FORMAT");
#endif
#if defined(GL_TEXTURE_IMAGE_TYPE)
defconsti(env, "GL-TEXTURE-IMAGE-TYPE", (GLenum) GL_TEXTURE_IMAGE_TYPE, "GL_TEXTURE_IMAGE_TYPE");
#endif
#if defined(GL_GET_TEXTURE_IMAGE_FORMAT)
defconsti(env, "GL-GET-TEXTURE-IMAGE-FORMAT", (GLenum) GL_GET_TEXTURE_IMAGE_FORMAT, "GL_GET_TEXTURE_IMAGE_FORMAT");
#endif
#if defined(GL_GET_TEXTURE_IMAGE_TYPE)
defconsti(env, "GL-GET-TEXTURE-IMAGE-TYPE", (GLenum) GL_GET_TEXTURE_IMAGE_TYPE, "GL_GET_TEXTURE_IMAGE_TYPE");
#endif
#if defined(GL_MIPMAP)
defconsti(env, "GL-MIPMAP", (GLenum) GL_MIPMAP, "GL_MIPMAP");
#endif
#if defined(GL_MANUAL_GENERATE_MIPMAP)
defconsti(env, "GL-MANUAL-GENERATE-MIPMAP", (GLenum) GL_MANUAL_GENERATE_MIPMAP, "GL_MANUAL_GENERATE_MIPMAP");
#endif
#if defined(GL_AUTO_GENERATE_MIPMAP)
defconsti(env, "GL-AUTO-GENERATE-MIPMAP", (GLenum) GL_AUTO_GENERATE_MIPMAP, "GL_AUTO_GENERATE_MIPMAP");
#endif
#if defined(GL_COLOR_ENCODING)
defconsti(env, "GL-COLOR-ENCODING", (GLenum) GL_COLOR_ENCODING, "GL_COLOR_ENCODING");
#endif
#if defined(GL_SRGB_READ)
defconsti(env, "GL-SRGB-READ", (GLenum) GL_SRGB_READ, "GL_SRGB_READ");
#endif
#if defined(GL_SRGB_WRITE)
defconsti(env, "GL-SRGB-WRITE", (GLenum) GL_SRGB_WRITE, "GL_SRGB_WRITE");
#endif
#if defined(GL_FILTER)
defconsti(env, "GL-FILTER", (GLenum) GL_FILTER, "GL_FILTER");
#endif
#if defined(GL_VERTEX_TEXTURE)
defconsti(env, "GL-VERTEX-TEXTURE", (GLenum) GL_VERTEX_TEXTURE, "GL_VERTEX_TEXTURE");
#endif
#if defined(GL_TESS_CONTROL_TEXTURE)
defconsti(env, "GL-TESS-CONTROL-TEXTURE", (GLenum) GL_TESS_CONTROL_TEXTURE, "GL_TESS_CONTROL_TEXTURE");
#endif
#if defined(GL_TESS_EVALUATION_TEXTURE)
defconsti(env, "GL-TESS-EVALUATION-TEXTURE", (GLenum) GL_TESS_EVALUATION_TEXTURE, "GL_TESS_EVALUATION_TEXTURE");
#endif
#if defined(GL_GEOMETRY_TEXTURE)
defconsti(env, "GL-GEOMETRY-TEXTURE", (GLenum) GL_GEOMETRY_TEXTURE, "GL_GEOMETRY_TEXTURE");
#endif
#if defined(GL_FRAGMENT_TEXTURE)
defconsti(env, "GL-FRAGMENT-TEXTURE", (GLenum) GL_FRAGMENT_TEXTURE, "GL_FRAGMENT_TEXTURE");
#endif
#if defined(GL_COMPUTE_TEXTURE)
defconsti(env, "GL-COMPUTE-TEXTURE", (GLenum) GL_COMPUTE_TEXTURE, "GL_COMPUTE_TEXTURE");
#endif
#if defined(GL_TEXTURE_SHADOW)
defconsti(env, "GL-TEXTURE-SHADOW", (GLenum) GL_TEXTURE_SHADOW, "GL_TEXTURE_SHADOW");
#endif
#if defined(GL_TEXTURE_GATHER)
defconsti(env, "GL-TEXTURE-GATHER", (GLenum) GL_TEXTURE_GATHER, "GL_TEXTURE_GATHER");
#endif
#if defined(GL_TEXTURE_GATHER_SHADOW)
defconsti(env, "GL-TEXTURE-GATHER-SHADOW", (GLenum) GL_TEXTURE_GATHER_SHADOW, "GL_TEXTURE_GATHER_SHADOW");
#endif
#if defined(GL_SHADER_IMAGE_LOAD)
defconsti(env, "GL-SHADER-IMAGE-LOAD", (GLenum) GL_SHADER_IMAGE_LOAD, "GL_SHADER_IMAGE_LOAD");
#endif
#if defined(GL_SHADER_IMAGE_STORE)
defconsti(env, "GL-SHADER-IMAGE-STORE", (GLenum) GL_SHADER_IMAGE_STORE, "GL_SHADER_IMAGE_STORE");
#endif
#if defined(GL_SHADER_IMAGE_ATOMIC)
defconsti(env, "GL-SHADER-IMAGE-ATOMIC", (GLenum) GL_SHADER_IMAGE_ATOMIC, "GL_SHADER_IMAGE_ATOMIC");
#endif
#if defined(GL_IMAGE_TEXEL_SIZE)
defconsti(env, "GL-IMAGE-TEXEL-SIZE", (GLenum) GL_IMAGE_TEXEL_SIZE, "GL_IMAGE_TEXEL_SIZE");
#endif
#if defined(GL_IMAGE_COMPATIBILITY_CLASS)
defconsti(env, "GL-IMAGE-COMPATIBILITY-CLASS", (GLenum) GL_IMAGE_COMPATIBILITY_CLASS, "GL_IMAGE_COMPATIBILITY_CLASS");
#endif
#if defined(GL_IMAGE_PIXEL_FORMAT)
defconsti(env, "GL-IMAGE-PIXEL-FORMAT", (GLenum) GL_IMAGE_PIXEL_FORMAT, "GL_IMAGE_PIXEL_FORMAT");
#endif
#if defined(GL_IMAGE_PIXEL_TYPE)
defconsti(env, "GL-IMAGE-PIXEL-TYPE", (GLenum) GL_IMAGE_PIXEL_TYPE, "GL_IMAGE_PIXEL_TYPE");
#endif
#if defined(GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST)
defconsti(env, "GL-SIMULTANEOUS-TEXTURE-AND-DEPTH-TEST", (GLenum) GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST, "GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST");
#endif
#if defined(GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST)
defconsti(env, "GL-SIMULTANEOUS-TEXTURE-AND-STENCIL-TEST", (GLenum) GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST, "GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST");
#endif
#if defined(GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE)
defconsti(env, "GL-SIMULTANEOUS-TEXTURE-AND-DEPTH-WRITE", (GLenum) GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE, "GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE");
#endif
#if defined(GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE)
defconsti(env, "GL-SIMULTANEOUS-TEXTURE-AND-STENCIL-WRITE", (GLenum) GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE, "GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE");
#endif
#if defined(GL_TEXTURE_COMPRESSED_BLOCK_WIDTH)
defconsti(env, "GL-TEXTURE-COMPRESSED-BLOCK-WIDTH", (GLenum) GL_TEXTURE_COMPRESSED_BLOCK_WIDTH, "GL_TEXTURE_COMPRESSED_BLOCK_WIDTH");
#endif
#if defined(GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT)
defconsti(env, "GL-TEXTURE-COMPRESSED-BLOCK-HEIGHT", (GLenum) GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT, "GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT");
#endif
#if defined(GL_TEXTURE_COMPRESSED_BLOCK_SIZE)
defconsti(env, "GL-TEXTURE-COMPRESSED-BLOCK-SIZE", (GLenum) GL_TEXTURE_COMPRESSED_BLOCK_SIZE, "GL_TEXTURE_COMPRESSED_BLOCK_SIZE");
#endif
#if defined(GL_CLEAR_BUFFER)
defconsti(env, "GL-CLEAR-BUFFER", (GLenum) GL_CLEAR_BUFFER, "GL_CLEAR_BUFFER");
#endif
#if defined(GL_TEXTURE_VIEW)
defconsti(env, "GL-TEXTURE-VIEW", (GLenum) GL_TEXTURE_VIEW, "GL_TEXTURE_VIEW");
#endif
#if defined(GL_VIEW_COMPATIBILITY_CLASS)
defconsti(env, "GL-VIEW-COMPATIBILITY-CLASS", (GLenum) GL_VIEW_COMPATIBILITY_CLASS, "GL_VIEW_COMPATIBILITY_CLASS");
#endif
#if defined(GL_FULL_SUPPORT)
defconsti(env, "GL-FULL-SUPPORT", (GLenum) GL_FULL_SUPPORT, "GL_FULL_SUPPORT");
#endif
#if defined(GL_CAVEAT_SUPPORT)
defconsti(env, "GL-CAVEAT-SUPPORT", (GLenum) GL_CAVEAT_SUPPORT, "GL_CAVEAT_SUPPORT");
#endif
#if defined(GL_IMAGE_CLASS_4_X_32)
defconsti(env, "GL-IMAGE-CLASS-4-X-32", (GLenum) GL_IMAGE_CLASS_4_X_32, "GL_IMAGE_CLASS_4_X_32");
#endif
#if defined(GL_IMAGE_CLASS_2_X_32)
defconsti(env, "GL-IMAGE-CLASS-2-X-32", (GLenum) GL_IMAGE_CLASS_2_X_32, "GL_IMAGE_CLASS_2_X_32");
#endif
#if defined(GL_IMAGE_CLASS_1_X_32)
defconsti(env, "GL-IMAGE-CLASS-1-X-32", (GLenum) GL_IMAGE_CLASS_1_X_32, "GL_IMAGE_CLASS_1_X_32");
#endif
#if defined(GL_IMAGE_CLASS_4_X_16)
defconsti(env, "GL-IMAGE-CLASS-4-X-16", (GLenum) GL_IMAGE_CLASS_4_X_16, "GL_IMAGE_CLASS_4_X_16");
#endif
#if defined(GL_IMAGE_CLASS_2_X_16)
defconsti(env, "GL-IMAGE-CLASS-2-X-16", (GLenum) GL_IMAGE_CLASS_2_X_16, "GL_IMAGE_CLASS_2_X_16");
#endif
#if defined(GL_IMAGE_CLASS_1_X_16)
defconsti(env, "GL-IMAGE-CLASS-1-X-16", (GLenum) GL_IMAGE_CLASS_1_X_16, "GL_IMAGE_CLASS_1_X_16");
#endif
#if defined(GL_IMAGE_CLASS_4_X_8)
defconsti(env, "GL-IMAGE-CLASS-4-X-8", (GLenum) GL_IMAGE_CLASS_4_X_8, "GL_IMAGE_CLASS_4_X_8");
#endif
#if defined(GL_IMAGE_CLASS_2_X_8)
defconsti(env, "GL-IMAGE-CLASS-2-X-8", (GLenum) GL_IMAGE_CLASS_2_X_8, "GL_IMAGE_CLASS_2_X_8");
#endif
#if defined(GL_IMAGE_CLASS_1_X_8)
defconsti(env, "GL-IMAGE-CLASS-1-X-8", (GLenum) GL_IMAGE_CLASS_1_X_8, "GL_IMAGE_CLASS_1_X_8");
#endif
#if defined(GL_IMAGE_CLASS_11_11_10)
defconsti(env, "GL-IMAGE-CLASS-11-11-10", (GLenum) GL_IMAGE_CLASS_11_11_10, "GL_IMAGE_CLASS_11_11_10");
#endif
#if defined(GL_IMAGE_CLASS_10_10_10_2)
defconsti(env, "GL-IMAGE-CLASS-10-10-10-2", (GLenum) GL_IMAGE_CLASS_10_10_10_2, "GL_IMAGE_CLASS_10_10_10_2");
#endif
#if defined(GL_VIEW_CLASS_128_BITS)
defconsti(env, "GL-VIEW-CLASS-128-BITS", (GLenum) GL_VIEW_CLASS_128_BITS, "GL_VIEW_CLASS_128_BITS");
#endif
#if defined(GL_VIEW_CLASS_96_BITS)
defconsti(env, "GL-VIEW-CLASS-96-BITS", (GLenum) GL_VIEW_CLASS_96_BITS, "GL_VIEW_CLASS_96_BITS");
#endif
#if defined(GL_VIEW_CLASS_64_BITS)
defconsti(env, "GL-VIEW-CLASS-64-BITS", (GLenum) GL_VIEW_CLASS_64_BITS, "GL_VIEW_CLASS_64_BITS");
#endif
#if defined(GL_VIEW_CLASS_48_BITS)
defconsti(env, "GL-VIEW-CLASS-48-BITS", (GLenum) GL_VIEW_CLASS_48_BITS, "GL_VIEW_CLASS_48_BITS");
#endif
#if defined(GL_VIEW_CLASS_32_BITS)
defconsti(env, "GL-VIEW-CLASS-32-BITS", (GLenum) GL_VIEW_CLASS_32_BITS, "GL_VIEW_CLASS_32_BITS");
#endif
#if defined(GL_VIEW_CLASS_24_BITS)
defconsti(env, "GL-VIEW-CLASS-24-BITS", (GLenum) GL_VIEW_CLASS_24_BITS, "GL_VIEW_CLASS_24_BITS");
#endif
#if defined(GL_VIEW_CLASS_16_BITS)
defconsti(env, "GL-VIEW-CLASS-16-BITS", (GLenum) GL_VIEW_CLASS_16_BITS, "GL_VIEW_CLASS_16_BITS");
#endif
#if defined(GL_VIEW_CLASS_8_BITS)
defconsti(env, "GL-VIEW-CLASS-8-BITS", (GLenum) GL_VIEW_CLASS_8_BITS, "GL_VIEW_CLASS_8_BITS");
#endif
#if defined(GL_VIEW_CLASS_S3TC_DXT1_RGB)
defconsti(env, "GL-VIEW-CLASS-S3TC-DXT1-RGB", (GLenum) GL_VIEW_CLASS_S3TC_DXT1_RGB, "GL_VIEW_CLASS_S3TC_DXT1_RGB");
#endif
#if defined(GL_VIEW_CLASS_S3TC_DXT1_RGBA)
defconsti(env, "GL-VIEW-CLASS-S3TC-DXT1-RGBA", (GLenum) GL_VIEW_CLASS_S3TC_DXT1_RGBA, "GL_VIEW_CLASS_S3TC_DXT1_RGBA");
#endif
#if defined(GL_VIEW_CLASS_S3TC_DXT3_RGBA)
defconsti(env, "GL-VIEW-CLASS-S3TC-DXT3-RGBA", (GLenum) GL_VIEW_CLASS_S3TC_DXT3_RGBA, "GL_VIEW_CLASS_S3TC_DXT3_RGBA");
#endif
#if defined(GL_VIEW_CLASS_S3TC_DXT5_RGBA)
defconsti(env, "GL-VIEW-CLASS-S3TC-DXT5-RGBA", (GLenum) GL_VIEW_CLASS_S3TC_DXT5_RGBA, "GL_VIEW_CLASS_S3TC_DXT5_RGBA");
#endif
#if defined(GL_VIEW_CLASS_RGTC1_RED)
defconsti(env, "GL-VIEW-CLASS-RGTC1-RED", (GLenum) GL_VIEW_CLASS_RGTC1_RED, "GL_VIEW_CLASS_RGTC1_RED");
#endif
#if defined(GL_VIEW_CLASS_RGTC2_RG)
defconsti(env, "GL-VIEW-CLASS-RGTC2-RG", (GLenum) GL_VIEW_CLASS_RGTC2_RG, "GL_VIEW_CLASS_RGTC2_RG");
#endif
#if defined(GL_VIEW_CLASS_BPTC_UNORM)
defconsti(env, "GL-VIEW-CLASS-BPTC-UNORM", (GLenum) GL_VIEW_CLASS_BPTC_UNORM, "GL_VIEW_CLASS_BPTC_UNORM");
#endif
#if defined(GL_VIEW_CLASS_BPTC_FLOAT)
defconsti(env, "GL-VIEW-CLASS-BPTC-FLOAT", (GLenum) GL_VIEW_CLASS_BPTC_FLOAT, "GL_VIEW_CLASS_BPTC_FLOAT");
#endif
#if defined(GL_UNIFORM)
defconsti(env, "GL-UNIFORM", (GLenum) GL_UNIFORM, "GL_UNIFORM");
#endif
#if defined(GL_UNIFORM_BLOCK)
defconsti(env, "GL-UNIFORM-BLOCK", (GLenum) GL_UNIFORM_BLOCK, "GL_UNIFORM_BLOCK");
#endif
#if defined(GL_PROGRAM_INPUT)
defconsti(env, "GL-PROGRAM-INPUT", (GLenum) GL_PROGRAM_INPUT, "GL_PROGRAM_INPUT");
#endif
#if defined(GL_PROGRAM_OUTPUT)
defconsti(env, "GL-PROGRAM-OUTPUT", (GLenum) GL_PROGRAM_OUTPUT, "GL_PROGRAM_OUTPUT");
#endif
#if defined(GL_BUFFER_VARIABLE)
defconsti(env, "GL-BUFFER-VARIABLE", (GLenum) GL_BUFFER_VARIABLE, "GL_BUFFER_VARIABLE");
#endif
#if defined(GL_SHADER_STORAGE_BLOCK)
defconsti(env, "GL-SHADER-STORAGE-BLOCK", (GLenum) GL_SHADER_STORAGE_BLOCK, "GL_SHADER_STORAGE_BLOCK");
#endif
#if defined(GL_VERTEX_SUBROUTINE)
defconsti(env, "GL-VERTEX-SUBROUTINE", (GLenum) GL_VERTEX_SUBROUTINE, "GL_VERTEX_SUBROUTINE");
#endif
#if defined(GL_TESS_CONTROL_SUBROUTINE)
defconsti(env, "GL-TESS-CONTROL-SUBROUTINE", (GLenum) GL_TESS_CONTROL_SUBROUTINE, "GL_TESS_CONTROL_SUBROUTINE");
#endif
#if defined(GL_TESS_EVALUATION_SUBROUTINE)
defconsti(env, "GL-TESS-EVALUATION-SUBROUTINE", (GLenum) GL_TESS_EVALUATION_SUBROUTINE, "GL_TESS_EVALUATION_SUBROUTINE");
#endif
#if defined(GL_GEOMETRY_SUBROUTINE)
defconsti(env, "GL-GEOMETRY-SUBROUTINE", (GLenum) GL_GEOMETRY_SUBROUTINE, "GL_GEOMETRY_SUBROUTINE");
#endif
#if defined(GL_FRAGMENT_SUBROUTINE)
defconsti(env, "GL-FRAGMENT-SUBROUTINE", (GLenum) GL_FRAGMENT_SUBROUTINE, "GL_FRAGMENT_SUBROUTINE");
#endif
#if defined(GL_COMPUTE_SUBROUTINE)
defconsti(env, "GL-COMPUTE-SUBROUTINE", (GLenum) GL_COMPUTE_SUBROUTINE, "GL_COMPUTE_SUBROUTINE");
#endif
#if defined(GL_VERTEX_SUBROUTINE_UNIFORM)
defconsti(env, "GL-VERTEX-SUBROUTINE-UNIFORM", (GLenum) GL_VERTEX_SUBROUTINE_UNIFORM, "GL_VERTEX_SUBROUTINE_UNIFORM");
#endif
#if defined(GL_TESS_CONTROL_SUBROUTINE_UNIFORM)
defconsti(env, "GL-TESS-CONTROL-SUBROUTINE-UNIFORM", (GLenum) GL_TESS_CONTROL_SUBROUTINE_UNIFORM, "GL_TESS_CONTROL_SUBROUTINE_UNIFORM");
#endif
#if defined(GL_TESS_EVALUATION_SUBROUTINE_UNIFORM)
defconsti(env, "GL-TESS-EVALUATION-SUBROUTINE-UNIFORM", (GLenum) GL_TESS_EVALUATION_SUBROUTINE_UNIFORM, "GL_TESS_EVALUATION_SUBROUTINE_UNIFORM");
#endif
#if defined(GL_GEOMETRY_SUBROUTINE_UNIFORM)
defconsti(env, "GL-GEOMETRY-SUBROUTINE-UNIFORM", (GLenum) GL_GEOMETRY_SUBROUTINE_UNIFORM, "GL_GEOMETRY_SUBROUTINE_UNIFORM");
#endif
#if defined(GL_FRAGMENT_SUBROUTINE_UNIFORM)
defconsti(env, "GL-FRAGMENT-SUBROUTINE-UNIFORM", (GLenum) GL_FRAGMENT_SUBROUTINE_UNIFORM, "GL_FRAGMENT_SUBROUTINE_UNIFORM");
#endif
#if defined(GL_COMPUTE_SUBROUTINE_UNIFORM)
defconsti(env, "GL-COMPUTE-SUBROUTINE-UNIFORM", (GLenum) GL_COMPUTE_SUBROUTINE_UNIFORM, "GL_COMPUTE_SUBROUTINE_UNIFORM");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_VARYING)
defconsti(env, "GL-TRANSFORM-FEEDBACK-VARYING", (GLenum) GL_TRANSFORM_FEEDBACK_VARYING, "GL_TRANSFORM_FEEDBACK_VARYING");
#endif
#if defined(GL_ACTIVE_RESOURCES)
defconsti(env, "GL-ACTIVE-RESOURCES", (GLenum) GL_ACTIVE_RESOURCES, "GL_ACTIVE_RESOURCES");
#endif
#if defined(GL_MAX_NAME_LENGTH)
defconsti(env, "GL-MAX-NAME-LENGTH", (GLenum) GL_MAX_NAME_LENGTH, "GL_MAX_NAME_LENGTH");
#endif
#if defined(GL_MAX_NUM_ACTIVE_VARIABLES)
defconsti(env, "GL-MAX-NUM-ACTIVE-VARIABLES", (GLenum) GL_MAX_NUM_ACTIVE_VARIABLES, "GL_MAX_NUM_ACTIVE_VARIABLES");
#endif
#if defined(GL_MAX_NUM_COMPATIBLE_SUBROUTINES)
defconsti(env, "GL-MAX-NUM-COMPATIBLE-SUBROUTINES", (GLenum) GL_MAX_NUM_COMPATIBLE_SUBROUTINES, "GL_MAX_NUM_COMPATIBLE_SUBROUTINES");
#endif
#if defined(GL_NAME_LENGTH)
defconsti(env, "GL-NAME-LENGTH", (GLenum) GL_NAME_LENGTH, "GL_NAME_LENGTH");
#endif
#if defined(GL_TYPE)
defconsti(env, "GL-TYPE", (GLenum) GL_TYPE, "GL_TYPE");
#endif
#if defined(GL_ARRAY_SIZE)
defconsti(env, "GL-ARRAY-SIZE", (GLenum) GL_ARRAY_SIZE, "GL_ARRAY_SIZE");
#endif
#if defined(GL_OFFSET)
defconsti(env, "GL-OFFSET", (GLenum) GL_OFFSET, "GL_OFFSET");
#endif
#if defined(GL_BLOCK_INDEX)
defconsti(env, "GL-BLOCK-INDEX", (GLenum) GL_BLOCK_INDEX, "GL_BLOCK_INDEX");
#endif
#if defined(GL_ARRAY_STRIDE)
defconsti(env, "GL-ARRAY-STRIDE", (GLenum) GL_ARRAY_STRIDE, "GL_ARRAY_STRIDE");
#endif
#if defined(GL_MATRIX_STRIDE)
defconsti(env, "GL-MATRIX-STRIDE", (GLenum) GL_MATRIX_STRIDE, "GL_MATRIX_STRIDE");
#endif
#if defined(GL_IS_ROW_MAJOR)
defconsti(env, "GL-IS-ROW-MAJOR", (GLenum) GL_IS_ROW_MAJOR, "GL_IS_ROW_MAJOR");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_INDEX)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-INDEX", (GLenum) GL_ATOMIC_COUNTER_BUFFER_INDEX, "GL_ATOMIC_COUNTER_BUFFER_INDEX");
#endif
#if defined(GL_BUFFER_BINDING)
defconsti(env, "GL-BUFFER-BINDING", (GLenum) GL_BUFFER_BINDING, "GL_BUFFER_BINDING");
#endif
#if defined(GL_BUFFER_DATA_SIZE)
defconsti(env, "GL-BUFFER-DATA-SIZE", (GLenum) GL_BUFFER_DATA_SIZE, "GL_BUFFER_DATA_SIZE");
#endif
#if defined(GL_NUM_ACTIVE_VARIABLES)
defconsti(env, "GL-NUM-ACTIVE-VARIABLES", (GLenum) GL_NUM_ACTIVE_VARIABLES, "GL_NUM_ACTIVE_VARIABLES");
#endif
#if defined(GL_ACTIVE_VARIABLES)
defconsti(env, "GL-ACTIVE-VARIABLES", (GLenum) GL_ACTIVE_VARIABLES, "GL_ACTIVE_VARIABLES");
#endif
#if defined(GL_REFERENCED_BY_VERTEX_SHADER)
defconsti(env, "GL-REFERENCED-BY-VERTEX-SHADER", (GLenum) GL_REFERENCED_BY_VERTEX_SHADER, "GL_REFERENCED_BY_VERTEX_SHADER");
#endif
#if defined(GL_REFERENCED_BY_TESS_CONTROL_SHADER)
defconsti(env, "GL-REFERENCED-BY-TESS-CONTROL-SHADER", (GLenum) GL_REFERENCED_BY_TESS_CONTROL_SHADER, "GL_REFERENCED_BY_TESS_CONTROL_SHADER");
#endif
#if defined(GL_REFERENCED_BY_TESS_EVALUATION_SHADER)
defconsti(env, "GL-REFERENCED-BY-TESS-EVALUATION-SHADER", (GLenum) GL_REFERENCED_BY_TESS_EVALUATION_SHADER, "GL_REFERENCED_BY_TESS_EVALUATION_SHADER");
#endif
#if defined(GL_REFERENCED_BY_GEOMETRY_SHADER)
defconsti(env, "GL-REFERENCED-BY-GEOMETRY-SHADER", (GLenum) GL_REFERENCED_BY_GEOMETRY_SHADER, "GL_REFERENCED_BY_GEOMETRY_SHADER");
#endif
#if defined(GL_REFERENCED_BY_FRAGMENT_SHADER)
defconsti(env, "GL-REFERENCED-BY-FRAGMENT-SHADER", (GLenum) GL_REFERENCED_BY_FRAGMENT_SHADER, "GL_REFERENCED_BY_FRAGMENT_SHADER");
#endif
#if defined(GL_REFERENCED_BY_COMPUTE_SHADER)
defconsti(env, "GL-REFERENCED-BY-COMPUTE-SHADER", (GLenum) GL_REFERENCED_BY_COMPUTE_SHADER, "GL_REFERENCED_BY_COMPUTE_SHADER");
#endif
#if defined(GL_TOP_LEVEL_ARRAY_SIZE)
defconsti(env, "GL-TOP-LEVEL-ARRAY-SIZE", (GLenum) GL_TOP_LEVEL_ARRAY_SIZE, "GL_TOP_LEVEL_ARRAY_SIZE");
#endif
#if defined(GL_TOP_LEVEL_ARRAY_STRIDE)
defconsti(env, "GL-TOP-LEVEL-ARRAY-STRIDE", (GLenum) GL_TOP_LEVEL_ARRAY_STRIDE, "GL_TOP_LEVEL_ARRAY_STRIDE");
#endif
#if defined(GL_LOCATION)
defconsti(env, "GL-LOCATION", (GLenum) GL_LOCATION, "GL_LOCATION");
#endif
#if defined(GL_LOCATION_INDEX)
defconsti(env, "GL-LOCATION-INDEX", (GLenum) GL_LOCATION_INDEX, "GL_LOCATION_INDEX");
#endif
#if defined(GL_IS_PER_PATCH)
defconsti(env, "GL-IS-PER-PATCH", (GLenum) GL_IS_PER_PATCH, "GL_IS_PER_PATCH");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER)
defconsti(env, "GL-SHADER-STORAGE-BUFFER", (GLenum) GL_SHADER_STORAGE_BUFFER, "GL_SHADER_STORAGE_BUFFER");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER_BINDING)
defconsti(env, "GL-SHADER-STORAGE-BUFFER-BINDING", (GLenum) GL_SHADER_STORAGE_BUFFER_BINDING, "GL_SHADER_STORAGE_BUFFER_BINDING");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER_START)
defconsti(env, "GL-SHADER-STORAGE-BUFFER-START", (GLenum) GL_SHADER_STORAGE_BUFFER_START, "GL_SHADER_STORAGE_BUFFER_START");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER_SIZE)
defconsti(env, "GL-SHADER-STORAGE-BUFFER-SIZE", (GLenum) GL_SHADER_STORAGE_BUFFER_SIZE, "GL_SHADER_STORAGE_BUFFER_SIZE");
#endif
#if defined(GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-VERTEX-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS, "GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-GEOMETRY-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS, "GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-TESS-CONTROL-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS, "GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-TESS-EVALUATION-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS, "GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-FRAGMENT-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS, "GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-COMPUTE-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS, "GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-COMBINED-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS, "GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS)
defconsti(env, "GL-MAX-SHADER-STORAGE-BUFFER-BINDINGS", (GLenum) GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS, "GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS");
#endif
#if defined(GL_MAX_SHADER_STORAGE_BLOCK_SIZE)
defconsti(env, "GL-MAX-SHADER-STORAGE-BLOCK-SIZE", (GLenum) GL_MAX_SHADER_STORAGE_BLOCK_SIZE, "GL_MAX_SHADER_STORAGE_BLOCK_SIZE");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT)
defconsti(env, "GL-SHADER-STORAGE-BUFFER-OFFSET-ALIGNMENT", (GLenum) GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT, "GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT");
#endif
#if defined(GL_SHADER_STORAGE_BARRIER_BIT)
defconsti(env, "GL-SHADER-STORAGE-BARRIER-BIT", (GLenum) GL_SHADER_STORAGE_BARRIER_BIT, "GL_SHADER_STORAGE_BARRIER_BIT");
#endif
#if defined(GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES)
defconsti(env, "GL-MAX-COMBINED-SHADER-OUTPUT-RESOURCES", (GLenum) GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES, "GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES");
#endif
#if defined(GL_DEPTH_STENCIL_TEXTURE_MODE)
defconsti(env, "GL-DEPTH-STENCIL-TEXTURE-MODE", (GLenum) GL_DEPTH_STENCIL_TEXTURE_MODE, "GL_DEPTH_STENCIL_TEXTURE_MODE");
#endif
#if defined(GL_TEXTURE_BUFFER_OFFSET)
defconsti(env, "GL-TEXTURE-BUFFER-OFFSET", (GLenum) GL_TEXTURE_BUFFER_OFFSET, "GL_TEXTURE_BUFFER_OFFSET");
#endif
#if defined(GL_TEXTURE_BUFFER_SIZE)
defconsti(env, "GL-TEXTURE-BUFFER-SIZE", (GLenum) GL_TEXTURE_BUFFER_SIZE, "GL_TEXTURE_BUFFER_SIZE");
#endif
#if defined(GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT)
defconsti(env, "GL-TEXTURE-BUFFER-OFFSET-ALIGNMENT", (GLenum) GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT, "GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT");
#endif
#if defined(GL_TEXTURE_VIEW_MIN_LEVEL)
defconsti(env, "GL-TEXTURE-VIEW-MIN-LEVEL", (GLenum) GL_TEXTURE_VIEW_MIN_LEVEL, "GL_TEXTURE_VIEW_MIN_LEVEL");
#endif
#if defined(GL_TEXTURE_VIEW_NUM_LEVELS)
defconsti(env, "GL-TEXTURE-VIEW-NUM-LEVELS", (GLenum) GL_TEXTURE_VIEW_NUM_LEVELS, "GL_TEXTURE_VIEW_NUM_LEVELS");
#endif
#if defined(GL_TEXTURE_VIEW_MIN_LAYER)
defconsti(env, "GL-TEXTURE-VIEW-MIN-LAYER", (GLenum) GL_TEXTURE_VIEW_MIN_LAYER, "GL_TEXTURE_VIEW_MIN_LAYER");
#endif
#if defined(GL_TEXTURE_VIEW_NUM_LAYERS)
defconsti(env, "GL-TEXTURE-VIEW-NUM-LAYERS", (GLenum) GL_TEXTURE_VIEW_NUM_LAYERS, "GL_TEXTURE_VIEW_NUM_LAYERS");
#endif
#if defined(GL_TEXTURE_IMMUTABLE_LEVELS)
defconsti(env, "GL-TEXTURE-IMMUTABLE-LEVELS", (GLenum) GL_TEXTURE_IMMUTABLE_LEVELS, "GL_TEXTURE_IMMUTABLE_LEVELS");
#endif
#if defined(GL_VERTEX_ATTRIB_BINDING)
defconsti(env, "GL-VERTEX-ATTRIB-BINDING", (GLenum) GL_VERTEX_ATTRIB_BINDING, "GL_VERTEX_ATTRIB_BINDING");
#endif
#if defined(GL_VERTEX_ATTRIB_RELATIVE_OFFSET)
defconsti(env, "GL-VERTEX-ATTRIB-RELATIVE-OFFSET", (GLenum) GL_VERTEX_ATTRIB_RELATIVE_OFFSET, "GL_VERTEX_ATTRIB_RELATIVE_OFFSET");
#endif
#if defined(GL_VERTEX_BINDING_DIVISOR)
defconsti(env, "GL-VERTEX-BINDING-DIVISOR", (GLenum) GL_VERTEX_BINDING_DIVISOR, "GL_VERTEX_BINDING_DIVISOR");
#endif
#if defined(GL_VERTEX_BINDING_OFFSET)
defconsti(env, "GL-VERTEX-BINDING-OFFSET", (GLenum) GL_VERTEX_BINDING_OFFSET, "GL_VERTEX_BINDING_OFFSET");
#endif
#if defined(GL_VERTEX_BINDING_STRIDE)
defconsti(env, "GL-VERTEX-BINDING-STRIDE", (GLenum) GL_VERTEX_BINDING_STRIDE, "GL_VERTEX_BINDING_STRIDE");
#endif
#if defined(GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET)
defconsti(env, "GL-MAX-VERTEX-ATTRIB-RELATIVE-OFFSET", (GLenum) GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET, "GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET");
#endif
#if defined(GL_MAX_VERTEX_ATTRIB_BINDINGS)
defconsti(env, "GL-MAX-VERTEX-ATTRIB-BINDINGS", (GLenum) GL_MAX_VERTEX_ATTRIB_BINDINGS, "GL_MAX_VERTEX_ATTRIB_BINDINGS");
#endif
#if defined(GL_VERTEX_BINDING_BUFFER)
defconsti(env, "GL-VERTEX-BINDING-BUFFER", (GLenum) GL_VERTEX_BINDING_BUFFER, "GL_VERTEX_BINDING_BUFFER");
#endif
#if defined(GL_DISPLAY_LIST)
defconsti(env, "GL-DISPLAY-LIST", (GLenum) GL_DISPLAY_LIST, "GL_DISPLAY_LIST");
#endif
#if defined(GL_STACK_UNDERFLOW)
defconsti(env, "GL-STACK-UNDERFLOW", (GLenum) GL_STACK_UNDERFLOW, "GL_STACK_UNDERFLOW");
#endif
#if defined(GL_STACK_OVERFLOW)
defconsti(env, "GL-STACK-OVERFLOW", (GLenum) GL_STACK_OVERFLOW, "GL_STACK_OVERFLOW");
#endif
#if defined(GL_MAX_VERTEX_ATTRIB_STRIDE)
defconsti(env, "GL-MAX-VERTEX-ATTRIB-STRIDE", (GLenum) GL_MAX_VERTEX_ATTRIB_STRIDE, "GL_MAX_VERTEX_ATTRIB_STRIDE");
#endif
#if defined(GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED)
defconsti(env, "GL-PRIMITIVE-RESTART-FOR-PATCHES-SUPPORTED", (GLenum) GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED, "GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED");
#endif
#if defined(GL_TEXTURE_BUFFER_BINDING)
defconsti(env, "GL-TEXTURE-BUFFER-BINDING", (GLenum) GL_TEXTURE_BUFFER_BINDING, "GL_TEXTURE_BUFFER_BINDING");
#endif
#if defined(GL_MAP_READ_BIT)
defconsti(env, "GL-MAP-READ-BIT", (GLenum) GL_MAP_READ_BIT, "GL_MAP_READ_BIT");
#endif
#if defined(GL_MAP_WRITE_BIT)
defconsti(env, "GL-MAP-WRITE-BIT", (GLenum) GL_MAP_WRITE_BIT, "GL_MAP_WRITE_BIT");
#endif
#if defined(GL_MAP_PERSISTENT_BIT)
defconsti(env, "GL-MAP-PERSISTENT-BIT", (GLenum) GL_MAP_PERSISTENT_BIT, "GL_MAP_PERSISTENT_BIT");
#endif
#if defined(GL_MAP_COHERENT_BIT)
defconsti(env, "GL-MAP-COHERENT-BIT", (GLenum) GL_MAP_COHERENT_BIT, "GL_MAP_COHERENT_BIT");
#endif
#if defined(GL_DYNAMIC_STORAGE_BIT)
defconsti(env, "GL-DYNAMIC-STORAGE-BIT", (GLenum) GL_DYNAMIC_STORAGE_BIT, "GL_DYNAMIC_STORAGE_BIT");
#endif
#if defined(GL_CLIENT_STORAGE_BIT)
defconsti(env, "GL-CLIENT-STORAGE-BIT", (GLenum) GL_CLIENT_STORAGE_BIT, "GL_CLIENT_STORAGE_BIT");
#endif
#if defined(GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT)
defconsti(env, "GL-CLIENT-MAPPED-BUFFER-BARRIER-BIT", (GLenum) GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT, "GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT");
#endif
#if defined(GL_BUFFER_IMMUTABLE_STORAGE)
defconsti(env, "GL-BUFFER-IMMUTABLE-STORAGE", (GLenum) GL_BUFFER_IMMUTABLE_STORAGE, "GL_BUFFER_IMMUTABLE_STORAGE");
#endif
#if defined(GL_BUFFER_STORAGE_FLAGS)
defconsti(env, "GL-BUFFER-STORAGE-FLAGS", (GLenum) GL_BUFFER_STORAGE_FLAGS, "GL_BUFFER_STORAGE_FLAGS");
#endif
#if defined(GL_CLEAR_TEXTURE)
defconsti(env, "GL-CLEAR-TEXTURE", (GLenum) GL_CLEAR_TEXTURE, "GL_CLEAR_TEXTURE");
#endif
#if defined(GL_LOCATION_COMPONENT)
defconsti(env, "GL-LOCATION-COMPONENT", (GLenum) GL_LOCATION_COMPONENT, "GL_LOCATION_COMPONENT");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER, "GL_TRANSFORM_FEEDBACK_BUFFER");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_INDEX)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-INDEX", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_INDEX, "GL_TRANSFORM_FEEDBACK_BUFFER_INDEX");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-STRIDE", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE, "GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE");
#endif
#if defined(GL_QUERY_BUFFER)
defconsti(env, "GL-QUERY-BUFFER", (GLenum) GL_QUERY_BUFFER, "GL_QUERY_BUFFER");
#endif
#if defined(GL_QUERY_BUFFER_BARRIER_BIT)
defconsti(env, "GL-QUERY-BUFFER-BARRIER-BIT", (GLenum) GL_QUERY_BUFFER_BARRIER_BIT, "GL_QUERY_BUFFER_BARRIER_BIT");
#endif
#if defined(GL_QUERY_BUFFER_BINDING)
defconsti(env, "GL-QUERY-BUFFER-BINDING", (GLenum) GL_QUERY_BUFFER_BINDING, "GL_QUERY_BUFFER_BINDING");
#endif
#if defined(GL_QUERY_RESULT_NO_WAIT)
defconsti(env, "GL-QUERY-RESULT-NO-WAIT", (GLenum) GL_QUERY_RESULT_NO_WAIT, "GL_QUERY_RESULT_NO_WAIT");
#endif
#if defined(GL_MIRROR_CLAMP_TO_EDGE)
defconsti(env, "GL-MIRROR-CLAMP-TO-EDGE", (GLenum) GL_MIRROR_CLAMP_TO_EDGE, "GL_MIRROR_CLAMP_TO_EDGE");
#endif
#if defined(GL_STENCIL_INDEX)
defconsti(env, "GL-STENCIL-INDEX", (GLenum) GL_STENCIL_INDEX, "GL_STENCIL_INDEX");
#endif
#if defined(GL_STENCIL_INDEX8)
defconsti(env, "GL-STENCIL-INDEX8", (GLenum) GL_STENCIL_INDEX8, "GL_STENCIL_INDEX8");
#endif
#if defined(GL_UNSIGNED_INT_10F_11F_11F_REV)
defconsti(env, "GL-UNSIGNED-INT-10F-11F-11F-REV", (GLenum) GL_UNSIGNED_INT_10F_11F_11F_REV, "GL_UNSIGNED_INT_10F_11F_11F_REV");
#endif
#if defined(GL_CONTEXT_LOST)
defconsti(env, "GL-CONTEXT-LOST", (GLenum) GL_CONTEXT_LOST, "GL_CONTEXT_LOST");
#endif
#if defined(GL_LOWER_LEFT)
defconsti(env, "GL-LOWER-LEFT", (GLenum) GL_LOWER_LEFT, "GL_LOWER_LEFT");
#endif
#if defined(GL_UPPER_LEFT)
defconsti(env, "GL-UPPER-LEFT", (GLenum) GL_UPPER_LEFT, "GL_UPPER_LEFT");
#endif
#if defined(GL_NEGATIVE_ONE_TO_ONE)
defconsti(env, "GL-NEGATIVE-ONE-TO-ONE", (GLenum) GL_NEGATIVE_ONE_TO_ONE, "GL_NEGATIVE_ONE_TO_ONE");
#endif
#if defined(GL_ZERO_TO_ONE)
defconsti(env, "GL-ZERO-TO-ONE", (GLenum) GL_ZERO_TO_ONE, "GL_ZERO_TO_ONE");
#endif
#if defined(GL_CLIP_ORIGIN)
defconsti(env, "GL-CLIP-ORIGIN", (GLenum) GL_CLIP_ORIGIN, "GL_CLIP_ORIGIN");
#endif
#if defined(GL_CLIP_DEPTH_MODE)
defconsti(env, "GL-CLIP-DEPTH-MODE", (GLenum) GL_CLIP_DEPTH_MODE, "GL_CLIP_DEPTH_MODE");
#endif
#if defined(GL_QUERY_WAIT_INVERTED)
defconsti(env, "GL-QUERY-WAIT-INVERTED", (GLenum) GL_QUERY_WAIT_INVERTED, "GL_QUERY_WAIT_INVERTED");
#endif
#if defined(GL_QUERY_NO_WAIT_INVERTED)
defconsti(env, "GL-QUERY-NO-WAIT-INVERTED", (GLenum) GL_QUERY_NO_WAIT_INVERTED, "GL_QUERY_NO_WAIT_INVERTED");
#endif
#if defined(GL_QUERY_BY_REGION_WAIT_INVERTED)
defconsti(env, "GL-QUERY-BY-REGION-WAIT-INVERTED", (GLenum) GL_QUERY_BY_REGION_WAIT_INVERTED, "GL_QUERY_BY_REGION_WAIT_INVERTED");
#endif
#if defined(GL_QUERY_BY_REGION_NO_WAIT_INVERTED)
defconsti(env, "GL-QUERY-BY-REGION-NO-WAIT-INVERTED", (GLenum) GL_QUERY_BY_REGION_NO_WAIT_INVERTED, "GL_QUERY_BY_REGION_NO_WAIT_INVERTED");
#endif
#if defined(GL_MAX_CULL_DISTANCES)
defconsti(env, "GL-MAX-CULL-DISTANCES", (GLenum) GL_MAX_CULL_DISTANCES, "GL_MAX_CULL_DISTANCES");
#endif
#if defined(GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES)
defconsti(env, "GL-MAX-COMBINED-CLIP-AND-CULL-DISTANCES", (GLenum) GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES, "GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES");
#endif
#if defined(GL_TEXTURE_TARGET)
defconsti(env, "GL-TEXTURE-TARGET", (GLenum) GL_TEXTURE_TARGET, "GL_TEXTURE_TARGET");
#endif
#if defined(GL_QUERY_TARGET)
defconsti(env, "GL-QUERY-TARGET", (GLenum) GL_QUERY_TARGET, "GL_QUERY_TARGET");
#endif
#if defined(GL_TEXTURE_BINDING_1D)
defconsti(env, "GL-TEXTURE-BINDING-1D", (GLenum) GL_TEXTURE_BINDING_1D, "GL_TEXTURE_BINDING_1D");
#endif
#if defined(GL_TEXTURE_BINDING_1D_ARRAY)
defconsti(env, "GL-TEXTURE-BINDING-1D-ARRAY", (GLenum) GL_TEXTURE_BINDING_1D_ARRAY, "GL_TEXTURE_BINDING_1D_ARRAY");
#endif
#if defined(GL_TEXTURE_BINDING_2D)
defconsti(env, "GL-TEXTURE-BINDING-2D", (GLenum) GL_TEXTURE_BINDING_2D, "GL_TEXTURE_BINDING_2D");
#endif
#if defined(GL_TEXTURE_BINDING_2D_ARRAY)
defconsti(env, "GL-TEXTURE-BINDING-2D-ARRAY", (GLenum) GL_TEXTURE_BINDING_2D_ARRAY, "GL_TEXTURE_BINDING_2D_ARRAY");
#endif
#if defined(GL_TEXTURE_BINDING_2D_MULTISAMPLE)
defconsti(env, "GL-TEXTURE-BINDING-2D-MULTISAMPLE", (GLenum) GL_TEXTURE_BINDING_2D_MULTISAMPLE, "GL_TEXTURE_BINDING_2D_MULTISAMPLE");
#endif
#if defined(GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-TEXTURE-BINDING-2D-MULTISAMPLE-ARRAY", (GLenum) GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY, "GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_TEXTURE_BINDING_3D)
defconsti(env, "GL-TEXTURE-BINDING-3D", (GLenum) GL_TEXTURE_BINDING_3D, "GL_TEXTURE_BINDING_3D");
#endif
#if defined(GL_TEXTURE_BINDING_BUFFER)
defconsti(env, "GL-TEXTURE-BINDING-BUFFER", (GLenum) GL_TEXTURE_BINDING_BUFFER, "GL_TEXTURE_BINDING_BUFFER");
#endif
#if defined(GL_TEXTURE_BINDING_CUBE_MAP)
defconsti(env, "GL-TEXTURE-BINDING-CUBE-MAP", (GLenum) GL_TEXTURE_BINDING_CUBE_MAP, "GL_TEXTURE_BINDING_CUBE_MAP");
#endif
#if defined(GL_TEXTURE_BINDING_CUBE_MAP_ARRAY)
defconsti(env, "GL-TEXTURE-BINDING-CUBE-MAP-ARRAY", (GLenum) GL_TEXTURE_BINDING_CUBE_MAP_ARRAY, "GL_TEXTURE_BINDING_CUBE_MAP_ARRAY");
#endif
#if defined(GL_TEXTURE_BINDING_RECTANGLE)
defconsti(env, "GL-TEXTURE-BINDING-RECTANGLE", (GLenum) GL_TEXTURE_BINDING_RECTANGLE, "GL_TEXTURE_BINDING_RECTANGLE");
#endif
#if defined(GL_BACK)
defconsti(env, "GL-BACK", (GLenum) GL_BACK, "GL_BACK");
#endif
#if defined(GL_NO_ERROR)
defconsti(env, "GL-NO-ERROR", (GLenum) GL_NO_ERROR, "GL_NO_ERROR");
#endif
#if defined(GL_GUILTY_CONTEXT_RESET)
defconsti(env, "GL-GUILTY-CONTEXT-RESET", (GLenum) GL_GUILTY_CONTEXT_RESET, "GL_GUILTY_CONTEXT_RESET");
#endif
#if defined(GL_INNOCENT_CONTEXT_RESET)
defconsti(env, "GL-INNOCENT-CONTEXT-RESET", (GLenum) GL_INNOCENT_CONTEXT_RESET, "GL_INNOCENT_CONTEXT_RESET");
#endif
#if defined(GL_UNKNOWN_CONTEXT_RESET)
defconsti(env, "GL-UNKNOWN-CONTEXT-RESET", (GLenum) GL_UNKNOWN_CONTEXT_RESET, "GL_UNKNOWN_CONTEXT_RESET");
#endif
#if defined(GL_RESET_NOTIFICATION_STRATEGY)
defconsti(env, "GL-RESET-NOTIFICATION-STRATEGY", (GLenum) GL_RESET_NOTIFICATION_STRATEGY, "GL_RESET_NOTIFICATION_STRATEGY");
#endif
#if defined(GL_LOSE_CONTEXT_ON_RESET)
defconsti(env, "GL-LOSE-CONTEXT-ON-RESET", (GLenum) GL_LOSE_CONTEXT_ON_RESET, "GL_LOSE_CONTEXT_ON_RESET");
#endif
#if defined(GL_NO_RESET_NOTIFICATION)
defconsti(env, "GL-NO-RESET-NOTIFICATION", (GLenum) GL_NO_RESET_NOTIFICATION, "GL_NO_RESET_NOTIFICATION");
#endif
#if defined(GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT)
defconsti(env, "GL-CONTEXT-FLAG-ROBUST-ACCESS-BIT", (GLenum) GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT, "GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT");
#endif
#if defined(GL_CONTEXT_LOST)
defconsti(env, "GL-CONTEXT-LOST", (GLenum) GL_CONTEXT_LOST, "GL_CONTEXT_LOST");
#endif
#if defined(GL_COLOR_TABLE)
defconsti(env, "GL-COLOR-TABLE", (GLenum) GL_COLOR_TABLE, "GL_COLOR_TABLE");
#endif
#if defined(GL_POST_CONVOLUTION_COLOR_TABLE)
defconsti(env, "GL-POST-CONVOLUTION-COLOR-TABLE", (GLenum) GL_POST_CONVOLUTION_COLOR_TABLE, "GL_POST_CONVOLUTION_COLOR_TABLE");
#endif
#if defined(GL_POST_COLOR_MATRIX_COLOR_TABLE)
defconsti(env, "GL-POST-COLOR-MATRIX-COLOR-TABLE", (GLenum) GL_POST_COLOR_MATRIX_COLOR_TABLE, "GL_POST_COLOR_MATRIX_COLOR_TABLE");
#endif
#if defined(GL_PROXY_COLOR_TABLE)
defconsti(env, "GL-PROXY-COLOR-TABLE", (GLenum) GL_PROXY_COLOR_TABLE, "GL_PROXY_COLOR_TABLE");
#endif
#if defined(GL_PROXY_POST_CONVOLUTION_COLOR_TABLE)
defconsti(env, "GL-PROXY-POST-CONVOLUTION-COLOR-TABLE", (GLenum) GL_PROXY_POST_CONVOLUTION_COLOR_TABLE, "GL_PROXY_POST_CONVOLUTION_COLOR_TABLE");
#endif
#if defined(GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE)
defconsti(env, "GL-PROXY-POST-COLOR-MATRIX-COLOR-TABLE", (GLenum) GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE, "GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE");
#endif
#if defined(GL_CONVOLUTION_1D)
defconsti(env, "GL-CONVOLUTION-1D", (GLenum) GL_CONVOLUTION_1D, "GL_CONVOLUTION_1D");
#endif
#if defined(GL_CONVOLUTION_2D)
defconsti(env, "GL-CONVOLUTION-2D", (GLenum) GL_CONVOLUTION_2D, "GL_CONVOLUTION_2D");
#endif
#if defined(GL_SEPARABLE_2D)
defconsti(env, "GL-SEPARABLE-2D", (GLenum) GL_SEPARABLE_2D, "GL_SEPARABLE_2D");
#endif
#if defined(GL_HISTOGRAM)
defconsti(env, "GL-HISTOGRAM", (GLenum) GL_HISTOGRAM, "GL_HISTOGRAM");
#endif
#if defined(GL_PROXY_HISTOGRAM)
defconsti(env, "GL-PROXY-HISTOGRAM", (GLenum) GL_PROXY_HISTOGRAM, "GL_PROXY_HISTOGRAM");
#endif
#if defined(GL_MINMAX)
defconsti(env, "GL-MINMAX", (GLenum) GL_MINMAX, "GL_MINMAX");
#endif
#if defined(GL_CONTEXT_RELEASE_BEHAVIOR)
defconsti(env, "GL-CONTEXT-RELEASE-BEHAVIOR", (GLenum) GL_CONTEXT_RELEASE_BEHAVIOR, "GL_CONTEXT_RELEASE_BEHAVIOR");
#endif
#if defined(GL_NONE)
defconsti(env, "GL-NONE", (GLenum) GL_NONE, "GL_NONE");
#endif
#if defined(GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH)
defconsti(env, "GL-CONTEXT-RELEASE-BEHAVIOR-FLUSH", (GLenum) GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH, "GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH");
#endif
#if defined(GL_CONTEXT_RELEASE_BEHAVIOR)
defconsti(env, "GL-CONTEXT-RELEASE-BEHAVIOR", (GLenum) GL_CONTEXT_RELEASE_BEHAVIOR, "GL_CONTEXT_RELEASE_BEHAVIOR");
#endif
#if defined(GL_NONE)
defconsti(env, "GL-NONE", (GLenum) GL_NONE, "GL_NONE");
#endif
#if defined(GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH)
defconsti(env, "GL-CONTEXT-RELEASE-BEHAVIOR-FLUSH", (GLenum) GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH, "GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH");
#endif
#if defined(GL_SHADER_BINARY_FORMAT_SPIR_V)
defconsti(env, "GL-SHADER-BINARY-FORMAT-SPIR-V", (GLenum) GL_SHADER_BINARY_FORMAT_SPIR_V, "GL_SHADER_BINARY_FORMAT_SPIR_V");
#endif
#if defined(GL_SPIR_V_BINARY)
defconsti(env, "GL-SPIR-V-BINARY", (GLenum) GL_SPIR_V_BINARY, "GL_SPIR_V_BINARY");
#endif
#if defined(GL_PARAMETER_BUFFER)
defconsti(env, "GL-PARAMETER-BUFFER", (GLenum) GL_PARAMETER_BUFFER, "GL_PARAMETER_BUFFER");
#endif
#if defined(GL_PARAMETER_BUFFER_BINDING)
defconsti(env, "GL-PARAMETER-BUFFER-BINDING", (GLenum) GL_PARAMETER_BUFFER_BINDING, "GL_PARAMETER_BUFFER_BINDING");
#endif
#if defined(GL_CONTEXT_FLAG_NO_ERROR_BIT)
defconsti(env, "GL-CONTEXT-FLAG-NO-ERROR-BIT", (GLenum) GL_CONTEXT_FLAG_NO_ERROR_BIT, "GL_CONTEXT_FLAG_NO_ERROR_BIT");
#endif
#if defined(GL_VERTICES_SUBMITTED)
defconsti(env, "GL-VERTICES-SUBMITTED", (GLenum) GL_VERTICES_SUBMITTED, "GL_VERTICES_SUBMITTED");
#endif
#if defined(GL_PRIMITIVES_SUBMITTED)
defconsti(env, "GL-PRIMITIVES-SUBMITTED", (GLenum) GL_PRIMITIVES_SUBMITTED, "GL_PRIMITIVES_SUBMITTED");
#endif
#if defined(GL_VERTEX_SHADER_INVOCATIONS)
defconsti(env, "GL-VERTEX-SHADER-INVOCATIONS", (GLenum) GL_VERTEX_SHADER_INVOCATIONS, "GL_VERTEX_SHADER_INVOCATIONS");
#endif
#if defined(GL_TESS_CONTROL_SHADER_PATCHES)
defconsti(env, "GL-TESS-CONTROL-SHADER-PATCHES", (GLenum) GL_TESS_CONTROL_SHADER_PATCHES, "GL_TESS_CONTROL_SHADER_PATCHES");
#endif
#if defined(GL_TESS_EVALUATION_SHADER_INVOCATIONS)
defconsti(env, "GL-TESS-EVALUATION-SHADER-INVOCATIONS", (GLenum) GL_TESS_EVALUATION_SHADER_INVOCATIONS, "GL_TESS_EVALUATION_SHADER_INVOCATIONS");
#endif
#if defined(GL_GEOMETRY_SHADER_INVOCATIONS)
defconsti(env, "GL-GEOMETRY-SHADER-INVOCATIONS", (GLenum) GL_GEOMETRY_SHADER_INVOCATIONS, "GL_GEOMETRY_SHADER_INVOCATIONS");
#endif
#if defined(GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED)
defconsti(env, "GL-GEOMETRY-SHADER-PRIMITIVES-EMITTED", (GLenum) GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED, "GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED");
#endif
#if defined(GL_FRAGMENT_SHADER_INVOCATIONS)
defconsti(env, "GL-FRAGMENT-SHADER-INVOCATIONS", (GLenum) GL_FRAGMENT_SHADER_INVOCATIONS, "GL_FRAGMENT_SHADER_INVOCATIONS");
#endif
#if defined(GL_COMPUTE_SHADER_INVOCATIONS)
defconsti(env, "GL-COMPUTE-SHADER-INVOCATIONS", (GLenum) GL_COMPUTE_SHADER_INVOCATIONS, "GL_COMPUTE_SHADER_INVOCATIONS");
#endif
#if defined(GL_CLIPPING_INPUT_PRIMITIVES)
defconsti(env, "GL-CLIPPING-INPUT-PRIMITIVES", (GLenum) GL_CLIPPING_INPUT_PRIMITIVES, "GL_CLIPPING_INPUT_PRIMITIVES");
#endif
#if defined(GL_CLIPPING_OUTPUT_PRIMITIVES)
defconsti(env, "GL-CLIPPING-OUTPUT-PRIMITIVES", (GLenum) GL_CLIPPING_OUTPUT_PRIMITIVES, "GL_CLIPPING_OUTPUT_PRIMITIVES");
#endif
#if defined(GL_POLYGON_OFFSET_CLAMP)
defconsti(env, "GL-POLYGON-OFFSET-CLAMP", (GLenum) GL_POLYGON_OFFSET_CLAMP, "GL_POLYGON_OFFSET_CLAMP");
#endif
#if defined(GL_SPIR_V_EXTENSIONS)
defconsti(env, "GL-SPIR-V-EXTENSIONS", (GLenum) GL_SPIR_V_EXTENSIONS, "GL_SPIR_V_EXTENSIONS");
#endif
#if defined(GL_NUM_SPIR_V_EXTENSIONS)
defconsti(env, "GL-NUM-SPIR-V-EXTENSIONS", (GLenum) GL_NUM_SPIR_V_EXTENSIONS, "GL_NUM_SPIR_V_EXTENSIONS");
#endif
#if defined(GL_TEXTURE_MAX_ANISOTROPY)
defconsti(env, "GL-TEXTURE-MAX-ANISOTROPY", (GLenum) GL_TEXTURE_MAX_ANISOTROPY, "GL_TEXTURE_MAX_ANISOTROPY");
#endif
#if defined(GL_MAX_TEXTURE_MAX_ANISOTROPY)
defconsti(env, "GL-MAX-TEXTURE-MAX-ANISOTROPY", (GLenum) GL_MAX_TEXTURE_MAX_ANISOTROPY, "GL_MAX_TEXTURE_MAX_ANISOTROPY");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_OVERFLOW)
defconsti(env, "GL-TRANSFORM-FEEDBACK-OVERFLOW", (GLenum) GL_TRANSFORM_FEEDBACK_OVERFLOW, "GL_TRANSFORM_FEEDBACK_OVERFLOW");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW)
defconsti(env, "GL-TRANSFORM-FEEDBACK-STREAM-OVERFLOW", (GLenum) GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW, "GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW");
#endif
#if defined(GL_VERSION_ES_CL_1_0)
defconsti(env, "GL-VERSION-ES-CL-1-0", (GLenum) GL_VERSION_ES_CL_1_0, "GL_VERSION_ES_CL_1_0");
#endif
#if defined(GL_VERSION_ES_CM_1_1)
defconsti(env, "GL-VERSION-ES-CM-1-1", (GLenum) GL_VERSION_ES_CM_1_1, "GL_VERSION_ES_CM_1_1");
#endif
#if defined(GL_VERSION_ES_CL_1_1)
defconsti(env, "GL-VERSION-ES-CL-1-1", (GLenum) GL_VERSION_ES_CL_1_1, "GL_VERSION_ES_CL_1_1");
#endif
#if defined(GL_DEPTH_BUFFER_BIT)
defconsti(env, "GL-DEPTH-BUFFER-BIT", (GLenum) GL_DEPTH_BUFFER_BIT, "GL_DEPTH_BUFFER_BIT");
#endif
#if defined(GL_STENCIL_BUFFER_BIT)
defconsti(env, "GL-STENCIL-BUFFER-BIT", (GLenum) GL_STENCIL_BUFFER_BIT, "GL_STENCIL_BUFFER_BIT");
#endif
#if defined(GL_COLOR_BUFFER_BIT)
defconsti(env, "GL-COLOR-BUFFER-BIT", (GLenum) GL_COLOR_BUFFER_BIT, "GL_COLOR_BUFFER_BIT");
#endif
#if defined(GL_FALSE)
defconsti(env, "GL-FALSE", (GLenum) GL_FALSE, "GL_FALSE");
#endif
#if defined(GL_TRUE)
defconsti(env, "GL-TRUE", (GLenum) GL_TRUE, "GL_TRUE");
#endif
#if defined(GL_POINTS)
defconsti(env, "GL-POINTS", (GLenum) GL_POINTS, "GL_POINTS");
#endif
#if defined(GL_LINES)
defconsti(env, "GL-LINES", (GLenum) GL_LINES, "GL_LINES");
#endif
#if defined(GL_LINE_LOOP)
defconsti(env, "GL-LINE-LOOP", (GLenum) GL_LINE_LOOP, "GL_LINE_LOOP");
#endif
#if defined(GL_LINE_STRIP)
defconsti(env, "GL-LINE-STRIP", (GLenum) GL_LINE_STRIP, "GL_LINE_STRIP");
#endif
#if defined(GL_TRIANGLES)
defconsti(env, "GL-TRIANGLES", (GLenum) GL_TRIANGLES, "GL_TRIANGLES");
#endif
#if defined(GL_TRIANGLE_STRIP)
defconsti(env, "GL-TRIANGLE-STRIP", (GLenum) GL_TRIANGLE_STRIP, "GL_TRIANGLE_STRIP");
#endif
#if defined(GL_TRIANGLE_FAN)
defconsti(env, "GL-TRIANGLE-FAN", (GLenum) GL_TRIANGLE_FAN, "GL_TRIANGLE_FAN");
#endif
#if defined(GL_NEVER)
defconsti(env, "GL-NEVER", (GLenum) GL_NEVER, "GL_NEVER");
#endif
#if defined(GL_LESS)
defconsti(env, "GL-LESS", (GLenum) GL_LESS, "GL_LESS");
#endif
#if defined(GL_EQUAL)
defconsti(env, "GL-EQUAL", (GLenum) GL_EQUAL, "GL_EQUAL");
#endif
#if defined(GL_LEQUAL)
defconsti(env, "GL-LEQUAL", (GLenum) GL_LEQUAL, "GL_LEQUAL");
#endif
#if defined(GL_GREATER)
defconsti(env, "GL-GREATER", (GLenum) GL_GREATER, "GL_GREATER");
#endif
#if defined(GL_NOTEQUAL)
defconsti(env, "GL-NOTEQUAL", (GLenum) GL_NOTEQUAL, "GL_NOTEQUAL");
#endif
#if defined(GL_GEQUAL)
defconsti(env, "GL-GEQUAL", (GLenum) GL_GEQUAL, "GL_GEQUAL");
#endif
#if defined(GL_ALWAYS)
defconsti(env, "GL-ALWAYS", (GLenum) GL_ALWAYS, "GL_ALWAYS");
#endif
#if defined(GL_ZERO)
defconsti(env, "GL-ZERO", (GLenum) GL_ZERO, "GL_ZERO");
#endif
#if defined(GL_ONE)
defconsti(env, "GL-ONE", (GLenum) GL_ONE, "GL_ONE");
#endif
#if defined(GL_SRC_COLOR)
defconsti(env, "GL-SRC-COLOR", (GLenum) GL_SRC_COLOR, "GL_SRC_COLOR");
#endif
#if defined(GL_ONE_MINUS_SRC_COLOR)
defconsti(env, "GL-ONE-MINUS-SRC-COLOR", (GLenum) GL_ONE_MINUS_SRC_COLOR, "GL_ONE_MINUS_SRC_COLOR");
#endif
#if defined(GL_SRC_ALPHA)
defconsti(env, "GL-SRC-ALPHA", (GLenum) GL_SRC_ALPHA, "GL_SRC_ALPHA");
#endif
#if defined(GL_ONE_MINUS_SRC_ALPHA)
defconsti(env, "GL-ONE-MINUS-SRC-ALPHA", (GLenum) GL_ONE_MINUS_SRC_ALPHA, "GL_ONE_MINUS_SRC_ALPHA");
#endif
#if defined(GL_DST_ALPHA)
defconsti(env, "GL-DST-ALPHA", (GLenum) GL_DST_ALPHA, "GL_DST_ALPHA");
#endif
#if defined(GL_ONE_MINUS_DST_ALPHA)
defconsti(env, "GL-ONE-MINUS-DST-ALPHA", (GLenum) GL_ONE_MINUS_DST_ALPHA, "GL_ONE_MINUS_DST_ALPHA");
#endif
#if defined(GL_DST_COLOR)
defconsti(env, "GL-DST-COLOR", (GLenum) GL_DST_COLOR, "GL_DST_COLOR");
#endif
#if defined(GL_ONE_MINUS_DST_COLOR)
defconsti(env, "GL-ONE-MINUS-DST-COLOR", (GLenum) GL_ONE_MINUS_DST_COLOR, "GL_ONE_MINUS_DST_COLOR");
#endif
#if defined(GL_SRC_ALPHA_SATURATE)
defconsti(env, "GL-SRC-ALPHA-SATURATE", (GLenum) GL_SRC_ALPHA_SATURATE, "GL_SRC_ALPHA_SATURATE");
#endif
#if defined(GL_CLIP_PLANE0)
defconsti(env, "GL-CLIP-PLANE0", (GLenum) GL_CLIP_PLANE0, "GL_CLIP_PLANE0");
#endif
#if defined(GL_CLIP_PLANE1)
defconsti(env, "GL-CLIP-PLANE1", (GLenum) GL_CLIP_PLANE1, "GL_CLIP_PLANE1");
#endif
#if defined(GL_CLIP_PLANE2)
defconsti(env, "GL-CLIP-PLANE2", (GLenum) GL_CLIP_PLANE2, "GL_CLIP_PLANE2");
#endif
#if defined(GL_CLIP_PLANE3)
defconsti(env, "GL-CLIP-PLANE3", (GLenum) GL_CLIP_PLANE3, "GL_CLIP_PLANE3");
#endif
#if defined(GL_CLIP_PLANE4)
defconsti(env, "GL-CLIP-PLANE4", (GLenum) GL_CLIP_PLANE4, "GL_CLIP_PLANE4");
#endif
#if defined(GL_CLIP_PLANE5)
defconsti(env, "GL-CLIP-PLANE5", (GLenum) GL_CLIP_PLANE5, "GL_CLIP_PLANE5");
#endif
#if defined(GL_FRONT)
defconsti(env, "GL-FRONT", (GLenum) GL_FRONT, "GL_FRONT");
#endif
#if defined(GL_BACK)
defconsti(env, "GL-BACK", (GLenum) GL_BACK, "GL_BACK");
#endif
#if defined(GL_FRONT_AND_BACK)
defconsti(env, "GL-FRONT-AND-BACK", (GLenum) GL_FRONT_AND_BACK, "GL_FRONT_AND_BACK");
#endif
#if defined(GL_FOG)
defconsti(env, "GL-FOG", (GLenum) GL_FOG, "GL_FOG");
#endif
#if defined(GL_LIGHTING)
defconsti(env, "GL-LIGHTING", (GLenum) GL_LIGHTING, "GL_LIGHTING");
#endif
#if defined(GL_TEXTURE_2D)
defconsti(env, "GL-TEXTURE-2D", (GLenum) GL_TEXTURE_2D, "GL_TEXTURE_2D");
#endif
#if defined(GL_CULL_FACE)
defconsti(env, "GL-CULL-FACE", (GLenum) GL_CULL_FACE, "GL_CULL_FACE");
#endif
#if defined(GL_ALPHA_TEST)
defconsti(env, "GL-ALPHA-TEST", (GLenum) GL_ALPHA_TEST, "GL_ALPHA_TEST");
#endif
#if defined(GL_BLEND)
defconsti(env, "GL-BLEND", (GLenum) GL_BLEND, "GL_BLEND");
#endif
#if defined(GL_COLOR_LOGIC_OP)
defconsti(env, "GL-COLOR-LOGIC-OP", (GLenum) GL_COLOR_LOGIC_OP, "GL_COLOR_LOGIC_OP");
#endif
#if defined(GL_DITHER)
defconsti(env, "GL-DITHER", (GLenum) GL_DITHER, "GL_DITHER");
#endif
#if defined(GL_STENCIL_TEST)
defconsti(env, "GL-STENCIL-TEST", (GLenum) GL_STENCIL_TEST, "GL_STENCIL_TEST");
#endif
#if defined(GL_DEPTH_TEST)
defconsti(env, "GL-DEPTH-TEST", (GLenum) GL_DEPTH_TEST, "GL_DEPTH_TEST");
#endif
#if defined(GL_POINT_SMOOTH)
defconsti(env, "GL-POINT-SMOOTH", (GLenum) GL_POINT_SMOOTH, "GL_POINT_SMOOTH");
#endif
#if defined(GL_LINE_SMOOTH)
defconsti(env, "GL-LINE-SMOOTH", (GLenum) GL_LINE_SMOOTH, "GL_LINE_SMOOTH");
#endif
#if defined(GL_SCISSOR_TEST)
defconsti(env, "GL-SCISSOR-TEST", (GLenum) GL_SCISSOR_TEST, "GL_SCISSOR_TEST");
#endif
#if defined(GL_COLOR_MATERIAL)
defconsti(env, "GL-COLOR-MATERIAL", (GLenum) GL_COLOR_MATERIAL, "GL_COLOR_MATERIAL");
#endif
#if defined(GL_NORMALIZE)
defconsti(env, "GL-NORMALIZE", (GLenum) GL_NORMALIZE, "GL_NORMALIZE");
#endif
#if defined(GL_RESCALE_NORMAL)
defconsti(env, "GL-RESCALE-NORMAL", (GLenum) GL_RESCALE_NORMAL, "GL_RESCALE_NORMAL");
#endif
#if defined(GL_VERTEX_ARRAY)
defconsti(env, "GL-VERTEX-ARRAY", (GLenum) GL_VERTEX_ARRAY, "GL_VERTEX_ARRAY");
#endif
#if defined(GL_NORMAL_ARRAY)
defconsti(env, "GL-NORMAL-ARRAY", (GLenum) GL_NORMAL_ARRAY, "GL_NORMAL_ARRAY");
#endif
#if defined(GL_COLOR_ARRAY)
defconsti(env, "GL-COLOR-ARRAY", (GLenum) GL_COLOR_ARRAY, "GL_COLOR_ARRAY");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY)
defconsti(env, "GL-TEXTURE-COORD-ARRAY", (GLenum) GL_TEXTURE_COORD_ARRAY, "GL_TEXTURE_COORD_ARRAY");
#endif
#if defined(GL_MULTISAMPLE)
defconsti(env, "GL-MULTISAMPLE", (GLenum) GL_MULTISAMPLE, "GL_MULTISAMPLE");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_COVERAGE)
defconsti(env, "GL-SAMPLE-ALPHA-TO-COVERAGE", (GLenum) GL_SAMPLE_ALPHA_TO_COVERAGE, "GL_SAMPLE_ALPHA_TO_COVERAGE");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_ONE)
defconsti(env, "GL-SAMPLE-ALPHA-TO-ONE", (GLenum) GL_SAMPLE_ALPHA_TO_ONE, "GL_SAMPLE_ALPHA_TO_ONE");
#endif
#if defined(GL_SAMPLE_COVERAGE)
defconsti(env, "GL-SAMPLE-COVERAGE", (GLenum) GL_SAMPLE_COVERAGE, "GL_SAMPLE_COVERAGE");
#endif
#if defined(GL_NO_ERROR)
defconsti(env, "GL-NO-ERROR", (GLenum) GL_NO_ERROR, "GL_NO_ERROR");
#endif
#if defined(GL_INVALID_ENUM)
defconsti(env, "GL-INVALID-ENUM", (GLenum) GL_INVALID_ENUM, "GL_INVALID_ENUM");
#endif
#if defined(GL_INVALID_VALUE)
defconsti(env, "GL-INVALID-VALUE", (GLenum) GL_INVALID_VALUE, "GL_INVALID_VALUE");
#endif
#if defined(GL_INVALID_OPERATION)
defconsti(env, "GL-INVALID-OPERATION", (GLenum) GL_INVALID_OPERATION, "GL_INVALID_OPERATION");
#endif
#if defined(GL_STACK_OVERFLOW)
defconsti(env, "GL-STACK-OVERFLOW", (GLenum) GL_STACK_OVERFLOW, "GL_STACK_OVERFLOW");
#endif
#if defined(GL_STACK_UNDERFLOW)
defconsti(env, "GL-STACK-UNDERFLOW", (GLenum) GL_STACK_UNDERFLOW, "GL_STACK_UNDERFLOW");
#endif
#if defined(GL_OUT_OF_MEMORY)
defconsti(env, "GL-OUT-OF-MEMORY", (GLenum) GL_OUT_OF_MEMORY, "GL_OUT_OF_MEMORY");
#endif
#if defined(GL_EXP)
defconsti(env, "GL-EXP", (GLenum) GL_EXP, "GL_EXP");
#endif
#if defined(GL_EXP2)
defconsti(env, "GL-EXP2", (GLenum) GL_EXP2, "GL_EXP2");
#endif
#if defined(GL_FOG_DENSITY)
defconsti(env, "GL-FOG-DENSITY", (GLenum) GL_FOG_DENSITY, "GL_FOG_DENSITY");
#endif
#if defined(GL_FOG_START)
defconsti(env, "GL-FOG-START", (GLenum) GL_FOG_START, "GL_FOG_START");
#endif
#if defined(GL_FOG_END)
defconsti(env, "GL-FOG-END", (GLenum) GL_FOG_END, "GL_FOG_END");
#endif
#if defined(GL_FOG_MODE)
defconsti(env, "GL-FOG-MODE", (GLenum) GL_FOG_MODE, "GL_FOG_MODE");
#endif
#if defined(GL_FOG_COLOR)
defconsti(env, "GL-FOG-COLOR", (GLenum) GL_FOG_COLOR, "GL_FOG_COLOR");
#endif
#if defined(GL_CW)
defconsti(env, "GL-CW", (GLenum) GL_CW, "GL_CW");
#endif
#if defined(GL_CCW)
defconsti(env, "GL-CCW", (GLenum) GL_CCW, "GL_CCW");
#endif
#if defined(GL_CURRENT_COLOR)
defconsti(env, "GL-CURRENT-COLOR", (GLenum) GL_CURRENT_COLOR, "GL_CURRENT_COLOR");
#endif
#if defined(GL_CURRENT_NORMAL)
defconsti(env, "GL-CURRENT-NORMAL", (GLenum) GL_CURRENT_NORMAL, "GL_CURRENT_NORMAL");
#endif
#if defined(GL_CURRENT_TEXTURE_COORDS)
defconsti(env, "GL-CURRENT-TEXTURE-COORDS", (GLenum) GL_CURRENT_TEXTURE_COORDS, "GL_CURRENT_TEXTURE_COORDS");
#endif
#if defined(GL_POINT_SIZE)
defconsti(env, "GL-POINT-SIZE", (GLenum) GL_POINT_SIZE, "GL_POINT_SIZE");
#endif
#if defined(GL_POINT_SIZE_MIN)
defconsti(env, "GL-POINT-SIZE-MIN", (GLenum) GL_POINT_SIZE_MIN, "GL_POINT_SIZE_MIN");
#endif
#if defined(GL_POINT_SIZE_MAX)
defconsti(env, "GL-POINT-SIZE-MAX", (GLenum) GL_POINT_SIZE_MAX, "GL_POINT_SIZE_MAX");
#endif
#if defined(GL_POINT_FADE_THRESHOLD_SIZE)
defconsti(env, "GL-POINT-FADE-THRESHOLD-SIZE", (GLenum) GL_POINT_FADE_THRESHOLD_SIZE, "GL_POINT_FADE_THRESHOLD_SIZE");
#endif
#if defined(GL_POINT_DISTANCE_ATTENUATION)
defconsti(env, "GL-POINT-DISTANCE-ATTENUATION", (GLenum) GL_POINT_DISTANCE_ATTENUATION, "GL_POINT_DISTANCE_ATTENUATION");
#endif
#if defined(GL_SMOOTH_POINT_SIZE_RANGE)
defconsti(env, "GL-SMOOTH-POINT-SIZE-RANGE", (GLenum) GL_SMOOTH_POINT_SIZE_RANGE, "GL_SMOOTH_POINT_SIZE_RANGE");
#endif
#if defined(GL_LINE_WIDTH)
defconsti(env, "GL-LINE-WIDTH", (GLenum) GL_LINE_WIDTH, "GL_LINE_WIDTH");
#endif
#if defined(GL_SMOOTH_LINE_WIDTH_RANGE)
defconsti(env, "GL-SMOOTH-LINE-WIDTH-RANGE", (GLenum) GL_SMOOTH_LINE_WIDTH_RANGE, "GL_SMOOTH_LINE_WIDTH_RANGE");
#endif
#if defined(GL_ALIASED_POINT_SIZE_RANGE)
defconsti(env, "GL-ALIASED-POINT-SIZE-RANGE", (GLenum) GL_ALIASED_POINT_SIZE_RANGE, "GL_ALIASED_POINT_SIZE_RANGE");
#endif
#if defined(GL_ALIASED_LINE_WIDTH_RANGE)
defconsti(env, "GL-ALIASED-LINE-WIDTH-RANGE", (GLenum) GL_ALIASED_LINE_WIDTH_RANGE, "GL_ALIASED_LINE_WIDTH_RANGE");
#endif
#if defined(GL_CULL_FACE_MODE)
defconsti(env, "GL-CULL-FACE-MODE", (GLenum) GL_CULL_FACE_MODE, "GL_CULL_FACE_MODE");
#endif
#if defined(GL_FRONT_FACE)
defconsti(env, "GL-FRONT-FACE", (GLenum) GL_FRONT_FACE, "GL_FRONT_FACE");
#endif
#if defined(GL_SHADE_MODEL)
defconsti(env, "GL-SHADE-MODEL", (GLenum) GL_SHADE_MODEL, "GL_SHADE_MODEL");
#endif
#if defined(GL_DEPTH_RANGE)
defconsti(env, "GL-DEPTH-RANGE", (GLenum) GL_DEPTH_RANGE, "GL_DEPTH_RANGE");
#endif
#if defined(GL_DEPTH_WRITEMASK)
defconsti(env, "GL-DEPTH-WRITEMASK", (GLenum) GL_DEPTH_WRITEMASK, "GL_DEPTH_WRITEMASK");
#endif
#if defined(GL_DEPTH_CLEAR_VALUE)
defconsti(env, "GL-DEPTH-CLEAR-VALUE", (GLenum) GL_DEPTH_CLEAR_VALUE, "GL_DEPTH_CLEAR_VALUE");
#endif
#if defined(GL_DEPTH_FUNC)
defconsti(env, "GL-DEPTH-FUNC", (GLenum) GL_DEPTH_FUNC, "GL_DEPTH_FUNC");
#endif
#if defined(GL_STENCIL_CLEAR_VALUE)
defconsti(env, "GL-STENCIL-CLEAR-VALUE", (GLenum) GL_STENCIL_CLEAR_VALUE, "GL_STENCIL_CLEAR_VALUE");
#endif
#if defined(GL_STENCIL_FUNC)
defconsti(env, "GL-STENCIL-FUNC", (GLenum) GL_STENCIL_FUNC, "GL_STENCIL_FUNC");
#endif
#if defined(GL_STENCIL_VALUE_MASK)
defconsti(env, "GL-STENCIL-VALUE-MASK", (GLenum) GL_STENCIL_VALUE_MASK, "GL_STENCIL_VALUE_MASK");
#endif
#if defined(GL_STENCIL_FAIL)
defconsti(env, "GL-STENCIL-FAIL", (GLenum) GL_STENCIL_FAIL, "GL_STENCIL_FAIL");
#endif
#if defined(GL_STENCIL_PASS_DEPTH_FAIL)
defconsti(env, "GL-STENCIL-PASS-DEPTH-FAIL", (GLenum) GL_STENCIL_PASS_DEPTH_FAIL, "GL_STENCIL_PASS_DEPTH_FAIL");
#endif
#if defined(GL_STENCIL_PASS_DEPTH_PASS)
defconsti(env, "GL-STENCIL-PASS-DEPTH-PASS", (GLenum) GL_STENCIL_PASS_DEPTH_PASS, "GL_STENCIL_PASS_DEPTH_PASS");
#endif
#if defined(GL_STENCIL_REF)
defconsti(env, "GL-STENCIL-REF", (GLenum) GL_STENCIL_REF, "GL_STENCIL_REF");
#endif
#if defined(GL_STENCIL_WRITEMASK)
defconsti(env, "GL-STENCIL-WRITEMASK", (GLenum) GL_STENCIL_WRITEMASK, "GL_STENCIL_WRITEMASK");
#endif
#if defined(GL_MATRIX_MODE)
defconsti(env, "GL-MATRIX-MODE", (GLenum) GL_MATRIX_MODE, "GL_MATRIX_MODE");
#endif
#if defined(GL_VIEWPORT)
defconsti(env, "GL-VIEWPORT", (GLenum) GL_VIEWPORT, "GL_VIEWPORT");
#endif
#if defined(GL_MODELVIEW_STACK_DEPTH)
defconsti(env, "GL-MODELVIEW-STACK-DEPTH", (GLenum) GL_MODELVIEW_STACK_DEPTH, "GL_MODELVIEW_STACK_DEPTH");
#endif
#if defined(GL_PROJECTION_STACK_DEPTH)
defconsti(env, "GL-PROJECTION-STACK-DEPTH", (GLenum) GL_PROJECTION_STACK_DEPTH, "GL_PROJECTION_STACK_DEPTH");
#endif
#if defined(GL_TEXTURE_STACK_DEPTH)
defconsti(env, "GL-TEXTURE-STACK-DEPTH", (GLenum) GL_TEXTURE_STACK_DEPTH, "GL_TEXTURE_STACK_DEPTH");
#endif
#if defined(GL_MODELVIEW_MATRIX)
defconsti(env, "GL-MODELVIEW-MATRIX", (GLenum) GL_MODELVIEW_MATRIX, "GL_MODELVIEW_MATRIX");
#endif
#if defined(GL_PROJECTION_MATRIX)
defconsti(env, "GL-PROJECTION-MATRIX", (GLenum) GL_PROJECTION_MATRIX, "GL_PROJECTION_MATRIX");
#endif
#if defined(GL_TEXTURE_MATRIX)
defconsti(env, "GL-TEXTURE-MATRIX", (GLenum) GL_TEXTURE_MATRIX, "GL_TEXTURE_MATRIX");
#endif
#if defined(GL_ALPHA_TEST_FUNC)
defconsti(env, "GL-ALPHA-TEST-FUNC", (GLenum) GL_ALPHA_TEST_FUNC, "GL_ALPHA_TEST_FUNC");
#endif
#if defined(GL_ALPHA_TEST_REF)
defconsti(env, "GL-ALPHA-TEST-REF", (GLenum) GL_ALPHA_TEST_REF, "GL_ALPHA_TEST_REF");
#endif
#if defined(GL_BLEND_DST)
defconsti(env, "GL-BLEND-DST", (GLenum) GL_BLEND_DST, "GL_BLEND_DST");
#endif
#if defined(GL_BLEND_SRC)
defconsti(env, "GL-BLEND-SRC", (GLenum) GL_BLEND_SRC, "GL_BLEND_SRC");
#endif
#if defined(GL_LOGIC_OP_MODE)
defconsti(env, "GL-LOGIC-OP-MODE", (GLenum) GL_LOGIC_OP_MODE, "GL_LOGIC_OP_MODE");
#endif
#if defined(GL_SCISSOR_BOX)
defconsti(env, "GL-SCISSOR-BOX", (GLenum) GL_SCISSOR_BOX, "GL_SCISSOR_BOX");
#endif
#if defined(GL_COLOR_CLEAR_VALUE)
defconsti(env, "GL-COLOR-CLEAR-VALUE", (GLenum) GL_COLOR_CLEAR_VALUE, "GL_COLOR_CLEAR_VALUE");
#endif
#if defined(GL_COLOR_WRITEMASK)
defconsti(env, "GL-COLOR-WRITEMASK", (GLenum) GL_COLOR_WRITEMASK, "GL_COLOR_WRITEMASK");
#endif
#if defined(GL_MAX_LIGHTS)
defconsti(env, "GL-MAX-LIGHTS", (GLenum) GL_MAX_LIGHTS, "GL_MAX_LIGHTS");
#endif
#if defined(GL_MAX_CLIP_PLANES)
defconsti(env, "GL-MAX-CLIP-PLANES", (GLenum) GL_MAX_CLIP_PLANES, "GL_MAX_CLIP_PLANES");
#endif
#if defined(GL_MAX_TEXTURE_SIZE)
defconsti(env, "GL-MAX-TEXTURE-SIZE", (GLenum) GL_MAX_TEXTURE_SIZE, "GL_MAX_TEXTURE_SIZE");
#endif
#if defined(GL_MAX_MODELVIEW_STACK_DEPTH)
defconsti(env, "GL-MAX-MODELVIEW-STACK-DEPTH", (GLenum) GL_MAX_MODELVIEW_STACK_DEPTH, "GL_MAX_MODELVIEW_STACK_DEPTH");
#endif
#if defined(GL_MAX_PROJECTION_STACK_DEPTH)
defconsti(env, "GL-MAX-PROJECTION-STACK-DEPTH", (GLenum) GL_MAX_PROJECTION_STACK_DEPTH, "GL_MAX_PROJECTION_STACK_DEPTH");
#endif
#if defined(GL_MAX_TEXTURE_STACK_DEPTH)
defconsti(env, "GL-MAX-TEXTURE-STACK-DEPTH", (GLenum) GL_MAX_TEXTURE_STACK_DEPTH, "GL_MAX_TEXTURE_STACK_DEPTH");
#endif
#if defined(GL_MAX_VIEWPORT_DIMS)
defconsti(env, "GL-MAX-VIEWPORT-DIMS", (GLenum) GL_MAX_VIEWPORT_DIMS, "GL_MAX_VIEWPORT_DIMS");
#endif
#if defined(GL_MAX_TEXTURE_UNITS)
defconsti(env, "GL-MAX-TEXTURE-UNITS", (GLenum) GL_MAX_TEXTURE_UNITS, "GL_MAX_TEXTURE_UNITS");
#endif
#if defined(GL_SUBPIXEL_BITS)
defconsti(env, "GL-SUBPIXEL-BITS", (GLenum) GL_SUBPIXEL_BITS, "GL_SUBPIXEL_BITS");
#endif
#if defined(GL_RED_BITS)
defconsti(env, "GL-RED-BITS", (GLenum) GL_RED_BITS, "GL_RED_BITS");
#endif
#if defined(GL_GREEN_BITS)
defconsti(env, "GL-GREEN-BITS", (GLenum) GL_GREEN_BITS, "GL_GREEN_BITS");
#endif
#if defined(GL_BLUE_BITS)
defconsti(env, "GL-BLUE-BITS", (GLenum) GL_BLUE_BITS, "GL_BLUE_BITS");
#endif
#if defined(GL_ALPHA_BITS)
defconsti(env, "GL-ALPHA-BITS", (GLenum) GL_ALPHA_BITS, "GL_ALPHA_BITS");
#endif
#if defined(GL_DEPTH_BITS)
defconsti(env, "GL-DEPTH-BITS", (GLenum) GL_DEPTH_BITS, "GL_DEPTH_BITS");
#endif
#if defined(GL_STENCIL_BITS)
defconsti(env, "GL-STENCIL-BITS", (GLenum) GL_STENCIL_BITS, "GL_STENCIL_BITS");
#endif
#if defined(GL_POLYGON_OFFSET_UNITS)
defconsti(env, "GL-POLYGON-OFFSET-UNITS", (GLenum) GL_POLYGON_OFFSET_UNITS, "GL_POLYGON_OFFSET_UNITS");
#endif
#if defined(GL_POLYGON_OFFSET_FILL)
defconsti(env, "GL-POLYGON-OFFSET-FILL", (GLenum) GL_POLYGON_OFFSET_FILL, "GL_POLYGON_OFFSET_FILL");
#endif
#if defined(GL_POLYGON_OFFSET_FACTOR)
defconsti(env, "GL-POLYGON-OFFSET-FACTOR", (GLenum) GL_POLYGON_OFFSET_FACTOR, "GL_POLYGON_OFFSET_FACTOR");
#endif
#if defined(GL_TEXTURE_BINDING_2D)
defconsti(env, "GL-TEXTURE-BINDING-2D", (GLenum) GL_TEXTURE_BINDING_2D, "GL_TEXTURE_BINDING_2D");
#endif
#if defined(GL_VERTEX_ARRAY_SIZE)
defconsti(env, "GL-VERTEX-ARRAY-SIZE", (GLenum) GL_VERTEX_ARRAY_SIZE, "GL_VERTEX_ARRAY_SIZE");
#endif
#if defined(GL_VERTEX_ARRAY_TYPE)
defconsti(env, "GL-VERTEX-ARRAY-TYPE", (GLenum) GL_VERTEX_ARRAY_TYPE, "GL_VERTEX_ARRAY_TYPE");
#endif
#if defined(GL_VERTEX_ARRAY_STRIDE)
defconsti(env, "GL-VERTEX-ARRAY-STRIDE", (GLenum) GL_VERTEX_ARRAY_STRIDE, "GL_VERTEX_ARRAY_STRIDE");
#endif
#if defined(GL_NORMAL_ARRAY_TYPE)
defconsti(env, "GL-NORMAL-ARRAY-TYPE", (GLenum) GL_NORMAL_ARRAY_TYPE, "GL_NORMAL_ARRAY_TYPE");
#endif
#if defined(GL_NORMAL_ARRAY_STRIDE)
defconsti(env, "GL-NORMAL-ARRAY-STRIDE", (GLenum) GL_NORMAL_ARRAY_STRIDE, "GL_NORMAL_ARRAY_STRIDE");
#endif
#if defined(GL_COLOR_ARRAY_SIZE)
defconsti(env, "GL-COLOR-ARRAY-SIZE", (GLenum) GL_COLOR_ARRAY_SIZE, "GL_COLOR_ARRAY_SIZE");
#endif
#if defined(GL_COLOR_ARRAY_TYPE)
defconsti(env, "GL-COLOR-ARRAY-TYPE", (GLenum) GL_COLOR_ARRAY_TYPE, "GL_COLOR_ARRAY_TYPE");
#endif
#if defined(GL_COLOR_ARRAY_STRIDE)
defconsti(env, "GL-COLOR-ARRAY-STRIDE", (GLenum) GL_COLOR_ARRAY_STRIDE, "GL_COLOR_ARRAY_STRIDE");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_SIZE)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-SIZE", (GLenum) GL_TEXTURE_COORD_ARRAY_SIZE, "GL_TEXTURE_COORD_ARRAY_SIZE");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_TYPE)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-TYPE", (GLenum) GL_TEXTURE_COORD_ARRAY_TYPE, "GL_TEXTURE_COORD_ARRAY_TYPE");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_STRIDE)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-STRIDE", (GLenum) GL_TEXTURE_COORD_ARRAY_STRIDE, "GL_TEXTURE_COORD_ARRAY_STRIDE");
#endif
#if defined(GL_VERTEX_ARRAY_POINTER)
defconsti(env, "GL-VERTEX-ARRAY-POINTER", (GLenum) GL_VERTEX_ARRAY_POINTER, "GL_VERTEX_ARRAY_POINTER");
#endif
#if defined(GL_NORMAL_ARRAY_POINTER)
defconsti(env, "GL-NORMAL-ARRAY-POINTER", (GLenum) GL_NORMAL_ARRAY_POINTER, "GL_NORMAL_ARRAY_POINTER");
#endif
#if defined(GL_COLOR_ARRAY_POINTER)
defconsti(env, "GL-COLOR-ARRAY-POINTER", (GLenum) GL_COLOR_ARRAY_POINTER, "GL_COLOR_ARRAY_POINTER");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_POINTER)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-POINTER", (GLenum) GL_TEXTURE_COORD_ARRAY_POINTER, "GL_TEXTURE_COORD_ARRAY_POINTER");
#endif
#if defined(GL_SAMPLE_BUFFERS)
defconsti(env, "GL-SAMPLE-BUFFERS", (GLenum) GL_SAMPLE_BUFFERS, "GL_SAMPLE_BUFFERS");
#endif
#if defined(GL_SAMPLES)
defconsti(env, "GL-SAMPLES", (GLenum) GL_SAMPLES, "GL_SAMPLES");
#endif
#if defined(GL_SAMPLE_COVERAGE_VALUE)
defconsti(env, "GL-SAMPLE-COVERAGE-VALUE", (GLenum) GL_SAMPLE_COVERAGE_VALUE, "GL_SAMPLE_COVERAGE_VALUE");
#endif
#if defined(GL_SAMPLE_COVERAGE_INVERT)
defconsti(env, "GL-SAMPLE-COVERAGE-INVERT", (GLenum) GL_SAMPLE_COVERAGE_INVERT, "GL_SAMPLE_COVERAGE_INVERT");
#endif
#if defined(GL_NUM_COMPRESSED_TEXTURE_FORMATS)
defconsti(env, "GL-NUM-COMPRESSED-TEXTURE-FORMATS", (GLenum) GL_NUM_COMPRESSED_TEXTURE_FORMATS, "GL_NUM_COMPRESSED_TEXTURE_FORMATS");
#endif
#if defined(GL_COMPRESSED_TEXTURE_FORMATS)
defconsti(env, "GL-COMPRESSED-TEXTURE-FORMATS", (GLenum) GL_COMPRESSED_TEXTURE_FORMATS, "GL_COMPRESSED_TEXTURE_FORMATS");
#endif
#if defined(GL_DONT_CARE)
defconsti(env, "GL-DONT-CARE", (GLenum) GL_DONT_CARE, "GL_DONT_CARE");
#endif
#if defined(GL_FASTEST)
defconsti(env, "GL-FASTEST", (GLenum) GL_FASTEST, "GL_FASTEST");
#endif
#if defined(GL_NICEST)
defconsti(env, "GL-NICEST", (GLenum) GL_NICEST, "GL_NICEST");
#endif
#if defined(GL_PERSPECTIVE_CORRECTION_HINT)
defconsti(env, "GL-PERSPECTIVE-CORRECTION-HINT", (GLenum) GL_PERSPECTIVE_CORRECTION_HINT, "GL_PERSPECTIVE_CORRECTION_HINT");
#endif
#if defined(GL_POINT_SMOOTH_HINT)
defconsti(env, "GL-POINT-SMOOTH-HINT", (GLenum) GL_POINT_SMOOTH_HINT, "GL_POINT_SMOOTH_HINT");
#endif
#if defined(GL_LINE_SMOOTH_HINT)
defconsti(env, "GL-LINE-SMOOTH-HINT", (GLenum) GL_LINE_SMOOTH_HINT, "GL_LINE_SMOOTH_HINT");
#endif
#if defined(GL_FOG_HINT)
defconsti(env, "GL-FOG-HINT", (GLenum) GL_FOG_HINT, "GL_FOG_HINT");
#endif
#if defined(GL_GENERATE_MIPMAP_HINT)
defconsti(env, "GL-GENERATE-MIPMAP-HINT", (GLenum) GL_GENERATE_MIPMAP_HINT, "GL_GENERATE_MIPMAP_HINT");
#endif
#if defined(GL_LIGHT_MODEL_AMBIENT)
defconsti(env, "GL-LIGHT-MODEL-AMBIENT", (GLenum) GL_LIGHT_MODEL_AMBIENT, "GL_LIGHT_MODEL_AMBIENT");
#endif
#if defined(GL_LIGHT_MODEL_TWO_SIDE)
defconsti(env, "GL-LIGHT-MODEL-TWO-SIDE", (GLenum) GL_LIGHT_MODEL_TWO_SIDE, "GL_LIGHT_MODEL_TWO_SIDE");
#endif
#if defined(GL_AMBIENT)
defconsti(env, "GL-AMBIENT", (GLenum) GL_AMBIENT, "GL_AMBIENT");
#endif
#if defined(GL_DIFFUSE)
defconsti(env, "GL-DIFFUSE", (GLenum) GL_DIFFUSE, "GL_DIFFUSE");
#endif
#if defined(GL_SPECULAR)
defconsti(env, "GL-SPECULAR", (GLenum) GL_SPECULAR, "GL_SPECULAR");
#endif
#if defined(GL_POSITION)
defconsti(env, "GL-POSITION", (GLenum) GL_POSITION, "GL_POSITION");
#endif
#if defined(GL_SPOT_DIRECTION)
defconsti(env, "GL-SPOT-DIRECTION", (GLenum) GL_SPOT_DIRECTION, "GL_SPOT_DIRECTION");
#endif
#if defined(GL_SPOT_EXPONENT)
defconsti(env, "GL-SPOT-EXPONENT", (GLenum) GL_SPOT_EXPONENT, "GL_SPOT_EXPONENT");
#endif
#if defined(GL_SPOT_CUTOFF)
defconsti(env, "GL-SPOT-CUTOFF", (GLenum) GL_SPOT_CUTOFF, "GL_SPOT_CUTOFF");
#endif
#if defined(GL_CONSTANT_ATTENUATION)
defconsti(env, "GL-CONSTANT-ATTENUATION", (GLenum) GL_CONSTANT_ATTENUATION, "GL_CONSTANT_ATTENUATION");
#endif
#if defined(GL_LINEAR_ATTENUATION)
defconsti(env, "GL-LINEAR-ATTENUATION", (GLenum) GL_LINEAR_ATTENUATION, "GL_LINEAR_ATTENUATION");
#endif
#if defined(GL_QUADRATIC_ATTENUATION)
defconsti(env, "GL-QUADRATIC-ATTENUATION", (GLenum) GL_QUADRATIC_ATTENUATION, "GL_QUADRATIC_ATTENUATION");
#endif
#if defined(GL_BYTE)
defconsti(env, "GL-BYTE", (GLenum) GL_BYTE, "GL_BYTE");
#endif
#if defined(GL_UNSIGNED_BYTE)
defconsti(env, "GL-UNSIGNED-BYTE", (GLenum) GL_UNSIGNED_BYTE, "GL_UNSIGNED_BYTE");
#endif
#if defined(GL_SHORT)
defconsti(env, "GL-SHORT", (GLenum) GL_SHORT, "GL_SHORT");
#endif
#if defined(GL_UNSIGNED_SHORT)
defconsti(env, "GL-UNSIGNED-SHORT", (GLenum) GL_UNSIGNED_SHORT, "GL_UNSIGNED_SHORT");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_FIXED)
defconsti(env, "GL-FIXED", (GLenum) GL_FIXED, "GL_FIXED");
#endif
#if defined(GL_CLEAR)
defconsti(env, "GL-CLEAR", (GLenum) GL_CLEAR, "GL_CLEAR");
#endif
#if defined(GL_AND)
defconsti(env, "GL-AND", (GLenum) GL_AND, "GL_AND");
#endif
#if defined(GL_AND_REVERSE)
defconsti(env, "GL-AND-REVERSE", (GLenum) GL_AND_REVERSE, "GL_AND_REVERSE");
#endif
#if defined(GL_COPY)
defconsti(env, "GL-COPY", (GLenum) GL_COPY, "GL_COPY");
#endif
#if defined(GL_AND_INVERTED)
defconsti(env, "GL-AND-INVERTED", (GLenum) GL_AND_INVERTED, "GL_AND_INVERTED");
#endif
#if defined(GL_NOOP)
defconsti(env, "GL-NOOP", (GLenum) GL_NOOP, "GL_NOOP");
#endif
#if defined(GL_XOR)
defconsti(env, "GL-XOR", (GLenum) GL_XOR, "GL_XOR");
#endif
#if defined(GL_OR)
defconsti(env, "GL-OR", (GLenum) GL_OR, "GL_OR");
#endif
#if defined(GL_NOR)
defconsti(env, "GL-NOR", (GLenum) GL_NOR, "GL_NOR");
#endif
#if defined(GL_EQUIV)
defconsti(env, "GL-EQUIV", (GLenum) GL_EQUIV, "GL_EQUIV");
#endif
#if defined(GL_INVERT)
defconsti(env, "GL-INVERT", (GLenum) GL_INVERT, "GL_INVERT");
#endif
#if defined(GL_OR_REVERSE)
defconsti(env, "GL-OR-REVERSE", (GLenum) GL_OR_REVERSE, "GL_OR_REVERSE");
#endif
#if defined(GL_COPY_INVERTED)
defconsti(env, "GL-COPY-INVERTED", (GLenum) GL_COPY_INVERTED, "GL_COPY_INVERTED");
#endif
#if defined(GL_OR_INVERTED)
defconsti(env, "GL-OR-INVERTED", (GLenum) GL_OR_INVERTED, "GL_OR_INVERTED");
#endif
#if defined(GL_NAND)
defconsti(env, "GL-NAND", (GLenum) GL_NAND, "GL_NAND");
#endif
#if defined(GL_SET)
defconsti(env, "GL-SET", (GLenum) GL_SET, "GL_SET");
#endif
#if defined(GL_EMISSION)
defconsti(env, "GL-EMISSION", (GLenum) GL_EMISSION, "GL_EMISSION");
#endif
#if defined(GL_SHININESS)
defconsti(env, "GL-SHININESS", (GLenum) GL_SHININESS, "GL_SHININESS");
#endif
#if defined(GL_AMBIENT_AND_DIFFUSE)
defconsti(env, "GL-AMBIENT-AND-DIFFUSE", (GLenum) GL_AMBIENT_AND_DIFFUSE, "GL_AMBIENT_AND_DIFFUSE");
#endif
#if defined(GL_MODELVIEW)
defconsti(env, "GL-MODELVIEW", (GLenum) GL_MODELVIEW, "GL_MODELVIEW");
#endif
#if defined(GL_PROJECTION)
defconsti(env, "GL-PROJECTION", (GLenum) GL_PROJECTION, "GL_PROJECTION");
#endif
#if defined(GL_TEXTURE)
defconsti(env, "GL-TEXTURE", (GLenum) GL_TEXTURE, "GL_TEXTURE");
#endif
#if defined(GL_ALPHA)
defconsti(env, "GL-ALPHA", (GLenum) GL_ALPHA, "GL_ALPHA");
#endif
#if defined(GL_RGB)
defconsti(env, "GL-RGB", (GLenum) GL_RGB, "GL_RGB");
#endif
#if defined(GL_RGBA)
defconsti(env, "GL-RGBA", (GLenum) GL_RGBA, "GL_RGBA");
#endif
#if defined(GL_LUMINANCE)
defconsti(env, "GL-LUMINANCE", (GLenum) GL_LUMINANCE, "GL_LUMINANCE");
#endif
#if defined(GL_LUMINANCE_ALPHA)
defconsti(env, "GL-LUMINANCE-ALPHA", (GLenum) GL_LUMINANCE_ALPHA, "GL_LUMINANCE_ALPHA");
#endif
#if defined(GL_UNPACK_ALIGNMENT)
defconsti(env, "GL-UNPACK-ALIGNMENT", (GLenum) GL_UNPACK_ALIGNMENT, "GL_UNPACK_ALIGNMENT");
#endif
#if defined(GL_PACK_ALIGNMENT)
defconsti(env, "GL-PACK-ALIGNMENT", (GLenum) GL_PACK_ALIGNMENT, "GL_PACK_ALIGNMENT");
#endif
#if defined(GL_UNSIGNED_SHORT_4_4_4_4)
defconsti(env, "GL-UNSIGNED-SHORT-4-4-4-4", (GLenum) GL_UNSIGNED_SHORT_4_4_4_4, "GL_UNSIGNED_SHORT_4_4_4_4");
#endif
#if defined(GL_UNSIGNED_SHORT_5_5_5_1)
defconsti(env, "GL-UNSIGNED-SHORT-5-5-5-1", (GLenum) GL_UNSIGNED_SHORT_5_5_5_1, "GL_UNSIGNED_SHORT_5_5_5_1");
#endif
#if defined(GL_UNSIGNED_SHORT_5_6_5)
defconsti(env, "GL-UNSIGNED-SHORT-5-6-5", (GLenum) GL_UNSIGNED_SHORT_5_6_5, "GL_UNSIGNED_SHORT_5_6_5");
#endif
#if defined(GL_FLAT)
defconsti(env, "GL-FLAT", (GLenum) GL_FLAT, "GL_FLAT");
#endif
#if defined(GL_SMOOTH)
defconsti(env, "GL-SMOOTH", (GLenum) GL_SMOOTH, "GL_SMOOTH");
#endif
#if defined(GL_KEEP)
defconsti(env, "GL-KEEP", (GLenum) GL_KEEP, "GL_KEEP");
#endif
#if defined(GL_REPLACE)
defconsti(env, "GL-REPLACE", (GLenum) GL_REPLACE, "GL_REPLACE");
#endif
#if defined(GL_INCR)
defconsti(env, "GL-INCR", (GLenum) GL_INCR, "GL_INCR");
#endif
#if defined(GL_DECR)
defconsti(env, "GL-DECR", (GLenum) GL_DECR, "GL_DECR");
#endif
#if defined(GL_VENDOR)
defconsti(env, "GL-VENDOR", (GLenum) GL_VENDOR, "GL_VENDOR");
#endif
#if defined(GL_RENDERER)
defconsti(env, "GL-RENDERER", (GLenum) GL_RENDERER, "GL_RENDERER");
#endif
#if defined(GL_VERSION)
defconsti(env, "GL-VERSION", (GLenum) GL_VERSION, "GL_VERSION");
#endif
#if defined(GL_EXTENSIONS)
defconsti(env, "GL-EXTENSIONS", (GLenum) GL_EXTENSIONS, "GL_EXTENSIONS");
#endif
#if defined(GL_MODULATE)
defconsti(env, "GL-MODULATE", (GLenum) GL_MODULATE, "GL_MODULATE");
#endif
#if defined(GL_DECAL)
defconsti(env, "GL-DECAL", (GLenum) GL_DECAL, "GL_DECAL");
#endif
#if defined(GL_ADD)
defconsti(env, "GL-ADD", (GLenum) GL_ADD, "GL_ADD");
#endif
#if defined(GL_TEXTURE_ENV_MODE)
defconsti(env, "GL-TEXTURE-ENV-MODE", (GLenum) GL_TEXTURE_ENV_MODE, "GL_TEXTURE_ENV_MODE");
#endif
#if defined(GL_TEXTURE_ENV_COLOR)
defconsti(env, "GL-TEXTURE-ENV-COLOR", (GLenum) GL_TEXTURE_ENV_COLOR, "GL_TEXTURE_ENV_COLOR");
#endif
#if defined(GL_TEXTURE_ENV)
defconsti(env, "GL-TEXTURE-ENV", (GLenum) GL_TEXTURE_ENV, "GL_TEXTURE_ENV");
#endif
#if defined(GL_NEAREST)
defconsti(env, "GL-NEAREST", (GLenum) GL_NEAREST, "GL_NEAREST");
#endif
#if defined(GL_LINEAR)
defconsti(env, "GL-LINEAR", (GLenum) GL_LINEAR, "GL_LINEAR");
#endif
#if defined(GL_NEAREST_MIPMAP_NEAREST)
defconsti(env, "GL-NEAREST-MIPMAP-NEAREST", (GLenum) GL_NEAREST_MIPMAP_NEAREST, "GL_NEAREST_MIPMAP_NEAREST");
#endif
#if defined(GL_LINEAR_MIPMAP_NEAREST)
defconsti(env, "GL-LINEAR-MIPMAP-NEAREST", (GLenum) GL_LINEAR_MIPMAP_NEAREST, "GL_LINEAR_MIPMAP_NEAREST");
#endif
#if defined(GL_NEAREST_MIPMAP_LINEAR)
defconsti(env, "GL-NEAREST-MIPMAP-LINEAR", (GLenum) GL_NEAREST_MIPMAP_LINEAR, "GL_NEAREST_MIPMAP_LINEAR");
#endif
#if defined(GL_LINEAR_MIPMAP_LINEAR)
defconsti(env, "GL-LINEAR-MIPMAP-LINEAR", (GLenum) GL_LINEAR_MIPMAP_LINEAR, "GL_LINEAR_MIPMAP_LINEAR");
#endif
#if defined(GL_TEXTURE_MAG_FILTER)
defconsti(env, "GL-TEXTURE-MAG-FILTER", (GLenum) GL_TEXTURE_MAG_FILTER, "GL_TEXTURE_MAG_FILTER");
#endif
#if defined(GL_TEXTURE_MIN_FILTER)
defconsti(env, "GL-TEXTURE-MIN-FILTER", (GLenum) GL_TEXTURE_MIN_FILTER, "GL_TEXTURE_MIN_FILTER");
#endif
#if defined(GL_TEXTURE_WRAP_S)
defconsti(env, "GL-TEXTURE-WRAP-S", (GLenum) GL_TEXTURE_WRAP_S, "GL_TEXTURE_WRAP_S");
#endif
#if defined(GL_TEXTURE_WRAP_T)
defconsti(env, "GL-TEXTURE-WRAP-T", (GLenum) GL_TEXTURE_WRAP_T, "GL_TEXTURE_WRAP_T");
#endif
#if defined(GL_GENERATE_MIPMAP)
defconsti(env, "GL-GENERATE-MIPMAP", (GLenum) GL_GENERATE_MIPMAP, "GL_GENERATE_MIPMAP");
#endif
#if defined(GL_TEXTURE0)
defconsti(env, "GL-TEXTURE0", (GLenum) GL_TEXTURE0, "GL_TEXTURE0");
#endif
#if defined(GL_TEXTURE1)
defconsti(env, "GL-TEXTURE1", (GLenum) GL_TEXTURE1, "GL_TEXTURE1");
#endif
#if defined(GL_TEXTURE2)
defconsti(env, "GL-TEXTURE2", (GLenum) GL_TEXTURE2, "GL_TEXTURE2");
#endif
#if defined(GL_TEXTURE3)
defconsti(env, "GL-TEXTURE3", (GLenum) GL_TEXTURE3, "GL_TEXTURE3");
#endif
#if defined(GL_TEXTURE4)
defconsti(env, "GL-TEXTURE4", (GLenum) GL_TEXTURE4, "GL_TEXTURE4");
#endif
#if defined(GL_TEXTURE5)
defconsti(env, "GL-TEXTURE5", (GLenum) GL_TEXTURE5, "GL_TEXTURE5");
#endif
#if defined(GL_TEXTURE6)
defconsti(env, "GL-TEXTURE6", (GLenum) GL_TEXTURE6, "GL_TEXTURE6");
#endif
#if defined(GL_TEXTURE7)
defconsti(env, "GL-TEXTURE7", (GLenum) GL_TEXTURE7, "GL_TEXTURE7");
#endif
#if defined(GL_TEXTURE8)
defconsti(env, "GL-TEXTURE8", (GLenum) GL_TEXTURE8, "GL_TEXTURE8");
#endif
#if defined(GL_TEXTURE9)
defconsti(env, "GL-TEXTURE9", (GLenum) GL_TEXTURE9, "GL_TEXTURE9");
#endif
#if defined(GL_TEXTURE10)
defconsti(env, "GL-TEXTURE10", (GLenum) GL_TEXTURE10, "GL_TEXTURE10");
#endif
#if defined(GL_TEXTURE11)
defconsti(env, "GL-TEXTURE11", (GLenum) GL_TEXTURE11, "GL_TEXTURE11");
#endif
#if defined(GL_TEXTURE12)
defconsti(env, "GL-TEXTURE12", (GLenum) GL_TEXTURE12, "GL_TEXTURE12");
#endif
#if defined(GL_TEXTURE13)
defconsti(env, "GL-TEXTURE13", (GLenum) GL_TEXTURE13, "GL_TEXTURE13");
#endif
#if defined(GL_TEXTURE14)
defconsti(env, "GL-TEXTURE14", (GLenum) GL_TEXTURE14, "GL_TEXTURE14");
#endif
#if defined(GL_TEXTURE15)
defconsti(env, "GL-TEXTURE15", (GLenum) GL_TEXTURE15, "GL_TEXTURE15");
#endif
#if defined(GL_TEXTURE16)
defconsti(env, "GL-TEXTURE16", (GLenum) GL_TEXTURE16, "GL_TEXTURE16");
#endif
#if defined(GL_TEXTURE17)
defconsti(env, "GL-TEXTURE17", (GLenum) GL_TEXTURE17, "GL_TEXTURE17");
#endif
#if defined(GL_TEXTURE18)
defconsti(env, "GL-TEXTURE18", (GLenum) GL_TEXTURE18, "GL_TEXTURE18");
#endif
#if defined(GL_TEXTURE19)
defconsti(env, "GL-TEXTURE19", (GLenum) GL_TEXTURE19, "GL_TEXTURE19");
#endif
#if defined(GL_TEXTURE20)
defconsti(env, "GL-TEXTURE20", (GLenum) GL_TEXTURE20, "GL_TEXTURE20");
#endif
#if defined(GL_TEXTURE21)
defconsti(env, "GL-TEXTURE21", (GLenum) GL_TEXTURE21, "GL_TEXTURE21");
#endif
#if defined(GL_TEXTURE22)
defconsti(env, "GL-TEXTURE22", (GLenum) GL_TEXTURE22, "GL_TEXTURE22");
#endif
#if defined(GL_TEXTURE23)
defconsti(env, "GL-TEXTURE23", (GLenum) GL_TEXTURE23, "GL_TEXTURE23");
#endif
#if defined(GL_TEXTURE24)
defconsti(env, "GL-TEXTURE24", (GLenum) GL_TEXTURE24, "GL_TEXTURE24");
#endif
#if defined(GL_TEXTURE25)
defconsti(env, "GL-TEXTURE25", (GLenum) GL_TEXTURE25, "GL_TEXTURE25");
#endif
#if defined(GL_TEXTURE26)
defconsti(env, "GL-TEXTURE26", (GLenum) GL_TEXTURE26, "GL_TEXTURE26");
#endif
#if defined(GL_TEXTURE27)
defconsti(env, "GL-TEXTURE27", (GLenum) GL_TEXTURE27, "GL_TEXTURE27");
#endif
#if defined(GL_TEXTURE28)
defconsti(env, "GL-TEXTURE28", (GLenum) GL_TEXTURE28, "GL_TEXTURE28");
#endif
#if defined(GL_TEXTURE29)
defconsti(env, "GL-TEXTURE29", (GLenum) GL_TEXTURE29, "GL_TEXTURE29");
#endif
#if defined(GL_TEXTURE30)
defconsti(env, "GL-TEXTURE30", (GLenum) GL_TEXTURE30, "GL_TEXTURE30");
#endif
#if defined(GL_TEXTURE31)
defconsti(env, "GL-TEXTURE31", (GLenum) GL_TEXTURE31, "GL_TEXTURE31");
#endif
#if defined(GL_ACTIVE_TEXTURE)
defconsti(env, "GL-ACTIVE-TEXTURE", (GLenum) GL_ACTIVE_TEXTURE, "GL_ACTIVE_TEXTURE");
#endif
#if defined(GL_CLIENT_ACTIVE_TEXTURE)
defconsti(env, "GL-CLIENT-ACTIVE-TEXTURE", (GLenum) GL_CLIENT_ACTIVE_TEXTURE, "GL_CLIENT_ACTIVE_TEXTURE");
#endif
#if defined(GL_REPEAT)
defconsti(env, "GL-REPEAT", (GLenum) GL_REPEAT, "GL_REPEAT");
#endif
#if defined(GL_CLAMP_TO_EDGE)
defconsti(env, "GL-CLAMP-TO-EDGE", (GLenum) GL_CLAMP_TO_EDGE, "GL_CLAMP_TO_EDGE");
#endif
#if defined(GL_LIGHT0)
defconsti(env, "GL-LIGHT0", (GLenum) GL_LIGHT0, "GL_LIGHT0");
#endif
#if defined(GL_LIGHT1)
defconsti(env, "GL-LIGHT1", (GLenum) GL_LIGHT1, "GL_LIGHT1");
#endif
#if defined(GL_LIGHT2)
defconsti(env, "GL-LIGHT2", (GLenum) GL_LIGHT2, "GL_LIGHT2");
#endif
#if defined(GL_LIGHT3)
defconsti(env, "GL-LIGHT3", (GLenum) GL_LIGHT3, "GL_LIGHT3");
#endif
#if defined(GL_LIGHT4)
defconsti(env, "GL-LIGHT4", (GLenum) GL_LIGHT4, "GL_LIGHT4");
#endif
#if defined(GL_LIGHT5)
defconsti(env, "GL-LIGHT5", (GLenum) GL_LIGHT5, "GL_LIGHT5");
#endif
#if defined(GL_LIGHT6)
defconsti(env, "GL-LIGHT6", (GLenum) GL_LIGHT6, "GL_LIGHT6");
#endif
#if defined(GL_LIGHT7)
defconsti(env, "GL-LIGHT7", (GLenum) GL_LIGHT7, "GL_LIGHT7");
#endif
#if defined(GL_ARRAY_BUFFER)
defconsti(env, "GL-ARRAY-BUFFER", (GLenum) GL_ARRAY_BUFFER, "GL_ARRAY_BUFFER");
#endif
#if defined(GL_ELEMENT_ARRAY_BUFFER)
defconsti(env, "GL-ELEMENT-ARRAY-BUFFER", (GLenum) GL_ELEMENT_ARRAY_BUFFER, "GL_ELEMENT_ARRAY_BUFFER");
#endif
#if defined(GL_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-ARRAY-BUFFER-BINDING", (GLenum) GL_ARRAY_BUFFER_BINDING, "GL_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_ELEMENT_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-ELEMENT-ARRAY-BUFFER-BINDING", (GLenum) GL_ELEMENT_ARRAY_BUFFER_BINDING, "GL_ELEMENT_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_VERTEX_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-VERTEX-ARRAY-BUFFER-BINDING", (GLenum) GL_VERTEX_ARRAY_BUFFER_BINDING, "GL_VERTEX_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_NORMAL_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-NORMAL-ARRAY-BUFFER-BINDING", (GLenum) GL_NORMAL_ARRAY_BUFFER_BINDING, "GL_NORMAL_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_COLOR_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-COLOR-ARRAY-BUFFER-BINDING", (GLenum) GL_COLOR_ARRAY_BUFFER_BINDING, "GL_COLOR_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-BUFFER-BINDING", (GLenum) GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING, "GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_STATIC_DRAW)
defconsti(env, "GL-STATIC-DRAW", (GLenum) GL_STATIC_DRAW, "GL_STATIC_DRAW");
#endif
#if defined(GL_DYNAMIC_DRAW)
defconsti(env, "GL-DYNAMIC-DRAW", (GLenum) GL_DYNAMIC_DRAW, "GL_DYNAMIC_DRAW");
#endif
#if defined(GL_BUFFER_SIZE)
defconsti(env, "GL-BUFFER-SIZE", (GLenum) GL_BUFFER_SIZE, "GL_BUFFER_SIZE");
#endif
#if defined(GL_BUFFER_USAGE)
defconsti(env, "GL-BUFFER-USAGE", (GLenum) GL_BUFFER_USAGE, "GL_BUFFER_USAGE");
#endif
#if defined(GL_SUBTRACT)
defconsti(env, "GL-SUBTRACT", (GLenum) GL_SUBTRACT, "GL_SUBTRACT");
#endif
#if defined(GL_COMBINE)
defconsti(env, "GL-COMBINE", (GLenum) GL_COMBINE, "GL_COMBINE");
#endif
#if defined(GL_COMBINE_RGB)
defconsti(env, "GL-COMBINE-RGB", (GLenum) GL_COMBINE_RGB, "GL_COMBINE_RGB");
#endif
#if defined(GL_COMBINE_ALPHA)
defconsti(env, "GL-COMBINE-ALPHA", (GLenum) GL_COMBINE_ALPHA, "GL_COMBINE_ALPHA");
#endif
#if defined(GL_RGB_SCALE)
defconsti(env, "GL-RGB-SCALE", (GLenum) GL_RGB_SCALE, "GL_RGB_SCALE");
#endif
#if defined(GL_ADD_SIGNED)
defconsti(env, "GL-ADD-SIGNED", (GLenum) GL_ADD_SIGNED, "GL_ADD_SIGNED");
#endif
#if defined(GL_INTERPOLATE)
defconsti(env, "GL-INTERPOLATE", (GLenum) GL_INTERPOLATE, "GL_INTERPOLATE");
#endif
#if defined(GL_CONSTANT)
defconsti(env, "GL-CONSTANT", (GLenum) GL_CONSTANT, "GL_CONSTANT");
#endif
#if defined(GL_PRIMARY_COLOR)
defconsti(env, "GL-PRIMARY-COLOR", (GLenum) GL_PRIMARY_COLOR, "GL_PRIMARY_COLOR");
#endif
#if defined(GL_PREVIOUS)
defconsti(env, "GL-PREVIOUS", (GLenum) GL_PREVIOUS, "GL_PREVIOUS");
#endif
#if defined(GL_OPERAND0_RGB)
defconsti(env, "GL-OPERAND0-RGB", (GLenum) GL_OPERAND0_RGB, "GL_OPERAND0_RGB");
#endif
#if defined(GL_OPERAND1_RGB)
defconsti(env, "GL-OPERAND1-RGB", (GLenum) GL_OPERAND1_RGB, "GL_OPERAND1_RGB");
#endif
#if defined(GL_OPERAND2_RGB)
defconsti(env, "GL-OPERAND2-RGB", (GLenum) GL_OPERAND2_RGB, "GL_OPERAND2_RGB");
#endif
#if defined(GL_OPERAND0_ALPHA)
defconsti(env, "GL-OPERAND0-ALPHA", (GLenum) GL_OPERAND0_ALPHA, "GL_OPERAND0_ALPHA");
#endif
#if defined(GL_OPERAND1_ALPHA)
defconsti(env, "GL-OPERAND1-ALPHA", (GLenum) GL_OPERAND1_ALPHA, "GL_OPERAND1_ALPHA");
#endif
#if defined(GL_OPERAND2_ALPHA)
defconsti(env, "GL-OPERAND2-ALPHA", (GLenum) GL_OPERAND2_ALPHA, "GL_OPERAND2_ALPHA");
#endif
#if defined(GL_ALPHA_SCALE)
defconsti(env, "GL-ALPHA-SCALE", (GLenum) GL_ALPHA_SCALE, "GL_ALPHA_SCALE");
#endif
#if defined(GL_SRC0_RGB)
defconsti(env, "GL-SRC0-RGB", (GLenum) GL_SRC0_RGB, "GL_SRC0_RGB");
#endif
#if defined(GL_SRC1_RGB)
defconsti(env, "GL-SRC1-RGB", (GLenum) GL_SRC1_RGB, "GL_SRC1_RGB");
#endif
#if defined(GL_SRC2_RGB)
defconsti(env, "GL-SRC2-RGB", (GLenum) GL_SRC2_RGB, "GL_SRC2_RGB");
#endif
#if defined(GL_SRC0_ALPHA)
defconsti(env, "GL-SRC0-ALPHA", (GLenum) GL_SRC0_ALPHA, "GL_SRC0_ALPHA");
#endif
#if defined(GL_SRC1_ALPHA)
defconsti(env, "GL-SRC1-ALPHA", (GLenum) GL_SRC1_ALPHA, "GL_SRC1_ALPHA");
#endif
#if defined(GL_SRC2_ALPHA)
defconsti(env, "GL-SRC2-ALPHA", (GLenum) GL_SRC2_ALPHA, "GL_SRC2_ALPHA");
#endif
#if defined(GL_DOT3_RGB)
defconsti(env, "GL-DOT3-RGB", (GLenum) GL_DOT3_RGB, "GL_DOT3_RGB");
#endif
#if defined(GL_DOT3_RGBA)
defconsti(env, "GL-DOT3-RGBA", (GLenum) GL_DOT3_RGBA, "GL_DOT3_RGBA");
#endif
#if defined(GL_DEPTH_BUFFER_BIT)
defconsti(env, "GL-DEPTH-BUFFER-BIT", (GLenum) GL_DEPTH_BUFFER_BIT, "GL_DEPTH_BUFFER_BIT");
#endif
#if defined(GL_STENCIL_BUFFER_BIT)
defconsti(env, "GL-STENCIL-BUFFER-BIT", (GLenum) GL_STENCIL_BUFFER_BIT, "GL_STENCIL_BUFFER_BIT");
#endif
#if defined(GL_COLOR_BUFFER_BIT)
defconsti(env, "GL-COLOR-BUFFER-BIT", (GLenum) GL_COLOR_BUFFER_BIT, "GL_COLOR_BUFFER_BIT");
#endif
#if defined(GL_FALSE)
defconsti(env, "GL-FALSE", (GLenum) GL_FALSE, "GL_FALSE");
#endif
#if defined(GL_TRUE)
defconsti(env, "GL-TRUE", (GLenum) GL_TRUE, "GL_TRUE");
#endif
#if defined(GL_POINTS)
defconsti(env, "GL-POINTS", (GLenum) GL_POINTS, "GL_POINTS");
#endif
#if defined(GL_LINES)
defconsti(env, "GL-LINES", (GLenum) GL_LINES, "GL_LINES");
#endif
#if defined(GL_LINE_LOOP)
defconsti(env, "GL-LINE-LOOP", (GLenum) GL_LINE_LOOP, "GL_LINE_LOOP");
#endif
#if defined(GL_LINE_STRIP)
defconsti(env, "GL-LINE-STRIP", (GLenum) GL_LINE_STRIP, "GL_LINE_STRIP");
#endif
#if defined(GL_TRIANGLES)
defconsti(env, "GL-TRIANGLES", (GLenum) GL_TRIANGLES, "GL_TRIANGLES");
#endif
#if defined(GL_TRIANGLE_STRIP)
defconsti(env, "GL-TRIANGLE-STRIP", (GLenum) GL_TRIANGLE_STRIP, "GL_TRIANGLE_STRIP");
#endif
#if defined(GL_TRIANGLE_FAN)
defconsti(env, "GL-TRIANGLE-FAN", (GLenum) GL_TRIANGLE_FAN, "GL_TRIANGLE_FAN");
#endif
#if defined(GL_ZERO)
defconsti(env, "GL-ZERO", (GLenum) GL_ZERO, "GL_ZERO");
#endif
#if defined(GL_ONE)
defconsti(env, "GL-ONE", (GLenum) GL_ONE, "GL_ONE");
#endif
#if defined(GL_SRC_COLOR)
defconsti(env, "GL-SRC-COLOR", (GLenum) GL_SRC_COLOR, "GL_SRC_COLOR");
#endif
#if defined(GL_ONE_MINUS_SRC_COLOR)
defconsti(env, "GL-ONE-MINUS-SRC-COLOR", (GLenum) GL_ONE_MINUS_SRC_COLOR, "GL_ONE_MINUS_SRC_COLOR");
#endif
#if defined(GL_SRC_ALPHA)
defconsti(env, "GL-SRC-ALPHA", (GLenum) GL_SRC_ALPHA, "GL_SRC_ALPHA");
#endif
#if defined(GL_ONE_MINUS_SRC_ALPHA)
defconsti(env, "GL-ONE-MINUS-SRC-ALPHA", (GLenum) GL_ONE_MINUS_SRC_ALPHA, "GL_ONE_MINUS_SRC_ALPHA");
#endif
#if defined(GL_DST_ALPHA)
defconsti(env, "GL-DST-ALPHA", (GLenum) GL_DST_ALPHA, "GL_DST_ALPHA");
#endif
#if defined(GL_ONE_MINUS_DST_ALPHA)
defconsti(env, "GL-ONE-MINUS-DST-ALPHA", (GLenum) GL_ONE_MINUS_DST_ALPHA, "GL_ONE_MINUS_DST_ALPHA");
#endif
#if defined(GL_DST_COLOR)
defconsti(env, "GL-DST-COLOR", (GLenum) GL_DST_COLOR, "GL_DST_COLOR");
#endif
#if defined(GL_ONE_MINUS_DST_COLOR)
defconsti(env, "GL-ONE-MINUS-DST-COLOR", (GLenum) GL_ONE_MINUS_DST_COLOR, "GL_ONE_MINUS_DST_COLOR");
#endif
#if defined(GL_SRC_ALPHA_SATURATE)
defconsti(env, "GL-SRC-ALPHA-SATURATE", (GLenum) GL_SRC_ALPHA_SATURATE, "GL_SRC_ALPHA_SATURATE");
#endif
#if defined(GL_FUNC_ADD)
defconsti(env, "GL-FUNC-ADD", (GLenum) GL_FUNC_ADD, "GL_FUNC_ADD");
#endif
#if defined(GL_BLEND_EQUATION)
defconsti(env, "GL-BLEND-EQUATION", (GLenum) GL_BLEND_EQUATION, "GL_BLEND_EQUATION");
#endif
#if defined(GL_BLEND_EQUATION_RGB)
defconsti(env, "GL-BLEND-EQUATION-RGB", (GLenum) GL_BLEND_EQUATION_RGB, "GL_BLEND_EQUATION_RGB");
#endif
#if defined(GL_BLEND_EQUATION_ALPHA)
defconsti(env, "GL-BLEND-EQUATION-ALPHA", (GLenum) GL_BLEND_EQUATION_ALPHA, "GL_BLEND_EQUATION_ALPHA");
#endif
#if defined(GL_FUNC_SUBTRACT)
defconsti(env, "GL-FUNC-SUBTRACT", (GLenum) GL_FUNC_SUBTRACT, "GL_FUNC_SUBTRACT");
#endif
#if defined(GL_FUNC_REVERSE_SUBTRACT)
defconsti(env, "GL-FUNC-REVERSE-SUBTRACT", (GLenum) GL_FUNC_REVERSE_SUBTRACT, "GL_FUNC_REVERSE_SUBTRACT");
#endif
#if defined(GL_BLEND_DST_RGB)
defconsti(env, "GL-BLEND-DST-RGB", (GLenum) GL_BLEND_DST_RGB, "GL_BLEND_DST_RGB");
#endif
#if defined(GL_BLEND_SRC_RGB)
defconsti(env, "GL-BLEND-SRC-RGB", (GLenum) GL_BLEND_SRC_RGB, "GL_BLEND_SRC_RGB");
#endif
#if defined(GL_BLEND_DST_ALPHA)
defconsti(env, "GL-BLEND-DST-ALPHA", (GLenum) GL_BLEND_DST_ALPHA, "GL_BLEND_DST_ALPHA");
#endif
#if defined(GL_BLEND_SRC_ALPHA)
defconsti(env, "GL-BLEND-SRC-ALPHA", (GLenum) GL_BLEND_SRC_ALPHA, "GL_BLEND_SRC_ALPHA");
#endif
#if defined(GL_CONSTANT_COLOR)
defconsti(env, "GL-CONSTANT-COLOR", (GLenum) GL_CONSTANT_COLOR, "GL_CONSTANT_COLOR");
#endif
#if defined(GL_ONE_MINUS_CONSTANT_COLOR)
defconsti(env, "GL-ONE-MINUS-CONSTANT-COLOR", (GLenum) GL_ONE_MINUS_CONSTANT_COLOR, "GL_ONE_MINUS_CONSTANT_COLOR");
#endif
#if defined(GL_CONSTANT_ALPHA)
defconsti(env, "GL-CONSTANT-ALPHA", (GLenum) GL_CONSTANT_ALPHA, "GL_CONSTANT_ALPHA");
#endif
#if defined(GL_ONE_MINUS_CONSTANT_ALPHA)
defconsti(env, "GL-ONE-MINUS-CONSTANT-ALPHA", (GLenum) GL_ONE_MINUS_CONSTANT_ALPHA, "GL_ONE_MINUS_CONSTANT_ALPHA");
#endif
#if defined(GL_BLEND_COLOR)
defconsti(env, "GL-BLEND-COLOR", (GLenum) GL_BLEND_COLOR, "GL_BLEND_COLOR");
#endif
#if defined(GL_ARRAY_BUFFER)
defconsti(env, "GL-ARRAY-BUFFER", (GLenum) GL_ARRAY_BUFFER, "GL_ARRAY_BUFFER");
#endif
#if defined(GL_ELEMENT_ARRAY_BUFFER)
defconsti(env, "GL-ELEMENT-ARRAY-BUFFER", (GLenum) GL_ELEMENT_ARRAY_BUFFER, "GL_ELEMENT_ARRAY_BUFFER");
#endif
#if defined(GL_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-ARRAY-BUFFER-BINDING", (GLenum) GL_ARRAY_BUFFER_BINDING, "GL_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_ELEMENT_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-ELEMENT-ARRAY-BUFFER-BINDING", (GLenum) GL_ELEMENT_ARRAY_BUFFER_BINDING, "GL_ELEMENT_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_STREAM_DRAW)
defconsti(env, "GL-STREAM-DRAW", (GLenum) GL_STREAM_DRAW, "GL_STREAM_DRAW");
#endif
#if defined(GL_STATIC_DRAW)
defconsti(env, "GL-STATIC-DRAW", (GLenum) GL_STATIC_DRAW, "GL_STATIC_DRAW");
#endif
#if defined(GL_DYNAMIC_DRAW)
defconsti(env, "GL-DYNAMIC-DRAW", (GLenum) GL_DYNAMIC_DRAW, "GL_DYNAMIC_DRAW");
#endif
#if defined(GL_BUFFER_SIZE)
defconsti(env, "GL-BUFFER-SIZE", (GLenum) GL_BUFFER_SIZE, "GL_BUFFER_SIZE");
#endif
#if defined(GL_BUFFER_USAGE)
defconsti(env, "GL-BUFFER-USAGE", (GLenum) GL_BUFFER_USAGE, "GL_BUFFER_USAGE");
#endif
#if defined(GL_CURRENT_VERTEX_ATTRIB)
defconsti(env, "GL-CURRENT-VERTEX-ATTRIB", (GLenum) GL_CURRENT_VERTEX_ATTRIB, "GL_CURRENT_VERTEX_ATTRIB");
#endif
#if defined(GL_FRONT)
defconsti(env, "GL-FRONT", (GLenum) GL_FRONT, "GL_FRONT");
#endif
#if defined(GL_BACK)
defconsti(env, "GL-BACK", (GLenum) GL_BACK, "GL_BACK");
#endif
#if defined(GL_FRONT_AND_BACK)
defconsti(env, "GL-FRONT-AND-BACK", (GLenum) GL_FRONT_AND_BACK, "GL_FRONT_AND_BACK");
#endif
#if defined(GL_TEXTURE_2D)
defconsti(env, "GL-TEXTURE-2D", (GLenum) GL_TEXTURE_2D, "GL_TEXTURE_2D");
#endif
#if defined(GL_CULL_FACE)
defconsti(env, "GL-CULL-FACE", (GLenum) GL_CULL_FACE, "GL_CULL_FACE");
#endif
#if defined(GL_BLEND)
defconsti(env, "GL-BLEND", (GLenum) GL_BLEND, "GL_BLEND");
#endif
#if defined(GL_DITHER)
defconsti(env, "GL-DITHER", (GLenum) GL_DITHER, "GL_DITHER");
#endif
#if defined(GL_STENCIL_TEST)
defconsti(env, "GL-STENCIL-TEST", (GLenum) GL_STENCIL_TEST, "GL_STENCIL_TEST");
#endif
#if defined(GL_DEPTH_TEST)
defconsti(env, "GL-DEPTH-TEST", (GLenum) GL_DEPTH_TEST, "GL_DEPTH_TEST");
#endif
#if defined(GL_SCISSOR_TEST)
defconsti(env, "GL-SCISSOR-TEST", (GLenum) GL_SCISSOR_TEST, "GL_SCISSOR_TEST");
#endif
#if defined(GL_POLYGON_OFFSET_FILL)
defconsti(env, "GL-POLYGON-OFFSET-FILL", (GLenum) GL_POLYGON_OFFSET_FILL, "GL_POLYGON_OFFSET_FILL");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_COVERAGE)
defconsti(env, "GL-SAMPLE-ALPHA-TO-COVERAGE", (GLenum) GL_SAMPLE_ALPHA_TO_COVERAGE, "GL_SAMPLE_ALPHA_TO_COVERAGE");
#endif
#if defined(GL_SAMPLE_COVERAGE)
defconsti(env, "GL-SAMPLE-COVERAGE", (GLenum) GL_SAMPLE_COVERAGE, "GL_SAMPLE_COVERAGE");
#endif
#if defined(GL_NO_ERROR)
defconsti(env, "GL-NO-ERROR", (GLenum) GL_NO_ERROR, "GL_NO_ERROR");
#endif
#if defined(GL_INVALID_ENUM)
defconsti(env, "GL-INVALID-ENUM", (GLenum) GL_INVALID_ENUM, "GL_INVALID_ENUM");
#endif
#if defined(GL_INVALID_VALUE)
defconsti(env, "GL-INVALID-VALUE", (GLenum) GL_INVALID_VALUE, "GL_INVALID_VALUE");
#endif
#if defined(GL_INVALID_OPERATION)
defconsti(env, "GL-INVALID-OPERATION", (GLenum) GL_INVALID_OPERATION, "GL_INVALID_OPERATION");
#endif
#if defined(GL_OUT_OF_MEMORY)
defconsti(env, "GL-OUT-OF-MEMORY", (GLenum) GL_OUT_OF_MEMORY, "GL_OUT_OF_MEMORY");
#endif
#if defined(GL_CW)
defconsti(env, "GL-CW", (GLenum) GL_CW, "GL_CW");
#endif
#if defined(GL_CCW)
defconsti(env, "GL-CCW", (GLenum) GL_CCW, "GL_CCW");
#endif
#if defined(GL_LINE_WIDTH)
defconsti(env, "GL-LINE-WIDTH", (GLenum) GL_LINE_WIDTH, "GL_LINE_WIDTH");
#endif
#if defined(GL_ALIASED_POINT_SIZE_RANGE)
defconsti(env, "GL-ALIASED-POINT-SIZE-RANGE", (GLenum) GL_ALIASED_POINT_SIZE_RANGE, "GL_ALIASED_POINT_SIZE_RANGE");
#endif
#if defined(GL_ALIASED_LINE_WIDTH_RANGE)
defconsti(env, "GL-ALIASED-LINE-WIDTH-RANGE", (GLenum) GL_ALIASED_LINE_WIDTH_RANGE, "GL_ALIASED_LINE_WIDTH_RANGE");
#endif
#if defined(GL_CULL_FACE_MODE)
defconsti(env, "GL-CULL-FACE-MODE", (GLenum) GL_CULL_FACE_MODE, "GL_CULL_FACE_MODE");
#endif
#if defined(GL_FRONT_FACE)
defconsti(env, "GL-FRONT-FACE", (GLenum) GL_FRONT_FACE, "GL_FRONT_FACE");
#endif
#if defined(GL_DEPTH_RANGE)
defconsti(env, "GL-DEPTH-RANGE", (GLenum) GL_DEPTH_RANGE, "GL_DEPTH_RANGE");
#endif
#if defined(GL_DEPTH_WRITEMASK)
defconsti(env, "GL-DEPTH-WRITEMASK", (GLenum) GL_DEPTH_WRITEMASK, "GL_DEPTH_WRITEMASK");
#endif
#if defined(GL_DEPTH_CLEAR_VALUE)
defconsti(env, "GL-DEPTH-CLEAR-VALUE", (GLenum) GL_DEPTH_CLEAR_VALUE, "GL_DEPTH_CLEAR_VALUE");
#endif
#if defined(GL_DEPTH_FUNC)
defconsti(env, "GL-DEPTH-FUNC", (GLenum) GL_DEPTH_FUNC, "GL_DEPTH_FUNC");
#endif
#if defined(GL_STENCIL_CLEAR_VALUE)
defconsti(env, "GL-STENCIL-CLEAR-VALUE", (GLenum) GL_STENCIL_CLEAR_VALUE, "GL_STENCIL_CLEAR_VALUE");
#endif
#if defined(GL_STENCIL_FUNC)
defconsti(env, "GL-STENCIL-FUNC", (GLenum) GL_STENCIL_FUNC, "GL_STENCIL_FUNC");
#endif
#if defined(GL_STENCIL_FAIL)
defconsti(env, "GL-STENCIL-FAIL", (GLenum) GL_STENCIL_FAIL, "GL_STENCIL_FAIL");
#endif
#if defined(GL_STENCIL_PASS_DEPTH_FAIL)
defconsti(env, "GL-STENCIL-PASS-DEPTH-FAIL", (GLenum) GL_STENCIL_PASS_DEPTH_FAIL, "GL_STENCIL_PASS_DEPTH_FAIL");
#endif
#if defined(GL_STENCIL_PASS_DEPTH_PASS)
defconsti(env, "GL-STENCIL-PASS-DEPTH-PASS", (GLenum) GL_STENCIL_PASS_DEPTH_PASS, "GL_STENCIL_PASS_DEPTH_PASS");
#endif
#if defined(GL_STENCIL_REF)
defconsti(env, "GL-STENCIL-REF", (GLenum) GL_STENCIL_REF, "GL_STENCIL_REF");
#endif
#if defined(GL_STENCIL_VALUE_MASK)
defconsti(env, "GL-STENCIL-VALUE-MASK", (GLenum) GL_STENCIL_VALUE_MASK, "GL_STENCIL_VALUE_MASK");
#endif
#if defined(GL_STENCIL_WRITEMASK)
defconsti(env, "GL-STENCIL-WRITEMASK", (GLenum) GL_STENCIL_WRITEMASK, "GL_STENCIL_WRITEMASK");
#endif
#if defined(GL_STENCIL_BACK_FUNC)
defconsti(env, "GL-STENCIL-BACK-FUNC", (GLenum) GL_STENCIL_BACK_FUNC, "GL_STENCIL_BACK_FUNC");
#endif
#if defined(GL_STENCIL_BACK_FAIL)
defconsti(env, "GL-STENCIL-BACK-FAIL", (GLenum) GL_STENCIL_BACK_FAIL, "GL_STENCIL_BACK_FAIL");
#endif
#if defined(GL_STENCIL_BACK_PASS_DEPTH_FAIL)
defconsti(env, "GL-STENCIL-BACK-PASS-DEPTH-FAIL", (GLenum) GL_STENCIL_BACK_PASS_DEPTH_FAIL, "GL_STENCIL_BACK_PASS_DEPTH_FAIL");
#endif
#if defined(GL_STENCIL_BACK_PASS_DEPTH_PASS)
defconsti(env, "GL-STENCIL-BACK-PASS-DEPTH-PASS", (GLenum) GL_STENCIL_BACK_PASS_DEPTH_PASS, "GL_STENCIL_BACK_PASS_DEPTH_PASS");
#endif
#if defined(GL_STENCIL_BACK_REF)
defconsti(env, "GL-STENCIL-BACK-REF", (GLenum) GL_STENCIL_BACK_REF, "GL_STENCIL_BACK_REF");
#endif
#if defined(GL_STENCIL_BACK_VALUE_MASK)
defconsti(env, "GL-STENCIL-BACK-VALUE-MASK", (GLenum) GL_STENCIL_BACK_VALUE_MASK, "GL_STENCIL_BACK_VALUE_MASK");
#endif
#if defined(GL_STENCIL_BACK_WRITEMASK)
defconsti(env, "GL-STENCIL-BACK-WRITEMASK", (GLenum) GL_STENCIL_BACK_WRITEMASK, "GL_STENCIL_BACK_WRITEMASK");
#endif
#if defined(GL_VIEWPORT)
defconsti(env, "GL-VIEWPORT", (GLenum) GL_VIEWPORT, "GL_VIEWPORT");
#endif
#if defined(GL_SCISSOR_BOX)
defconsti(env, "GL-SCISSOR-BOX", (GLenum) GL_SCISSOR_BOX, "GL_SCISSOR_BOX");
#endif
#if defined(GL_COLOR_CLEAR_VALUE)
defconsti(env, "GL-COLOR-CLEAR-VALUE", (GLenum) GL_COLOR_CLEAR_VALUE, "GL_COLOR_CLEAR_VALUE");
#endif
#if defined(GL_COLOR_WRITEMASK)
defconsti(env, "GL-COLOR-WRITEMASK", (GLenum) GL_COLOR_WRITEMASK, "GL_COLOR_WRITEMASK");
#endif
#if defined(GL_UNPACK_ALIGNMENT)
defconsti(env, "GL-UNPACK-ALIGNMENT", (GLenum) GL_UNPACK_ALIGNMENT, "GL_UNPACK_ALIGNMENT");
#endif
#if defined(GL_PACK_ALIGNMENT)
defconsti(env, "GL-PACK-ALIGNMENT", (GLenum) GL_PACK_ALIGNMENT, "GL_PACK_ALIGNMENT");
#endif
#if defined(GL_MAX_TEXTURE_SIZE)
defconsti(env, "GL-MAX-TEXTURE-SIZE", (GLenum) GL_MAX_TEXTURE_SIZE, "GL_MAX_TEXTURE_SIZE");
#endif
#if defined(GL_MAX_VIEWPORT_DIMS)
defconsti(env, "GL-MAX-VIEWPORT-DIMS", (GLenum) GL_MAX_VIEWPORT_DIMS, "GL_MAX_VIEWPORT_DIMS");
#endif
#if defined(GL_SUBPIXEL_BITS)
defconsti(env, "GL-SUBPIXEL-BITS", (GLenum) GL_SUBPIXEL_BITS, "GL_SUBPIXEL_BITS");
#endif
#if defined(GL_RED_BITS)
defconsti(env, "GL-RED-BITS", (GLenum) GL_RED_BITS, "GL_RED_BITS");
#endif
#if defined(GL_GREEN_BITS)
defconsti(env, "GL-GREEN-BITS", (GLenum) GL_GREEN_BITS, "GL_GREEN_BITS");
#endif
#if defined(GL_BLUE_BITS)
defconsti(env, "GL-BLUE-BITS", (GLenum) GL_BLUE_BITS, "GL_BLUE_BITS");
#endif
#if defined(GL_ALPHA_BITS)
defconsti(env, "GL-ALPHA-BITS", (GLenum) GL_ALPHA_BITS, "GL_ALPHA_BITS");
#endif
#if defined(GL_DEPTH_BITS)
defconsti(env, "GL-DEPTH-BITS", (GLenum) GL_DEPTH_BITS, "GL_DEPTH_BITS");
#endif
#if defined(GL_STENCIL_BITS)
defconsti(env, "GL-STENCIL-BITS", (GLenum) GL_STENCIL_BITS, "GL_STENCIL_BITS");
#endif
#if defined(GL_POLYGON_OFFSET_UNITS)
defconsti(env, "GL-POLYGON-OFFSET-UNITS", (GLenum) GL_POLYGON_OFFSET_UNITS, "GL_POLYGON_OFFSET_UNITS");
#endif
#if defined(GL_POLYGON_OFFSET_FACTOR)
defconsti(env, "GL-POLYGON-OFFSET-FACTOR", (GLenum) GL_POLYGON_OFFSET_FACTOR, "GL_POLYGON_OFFSET_FACTOR");
#endif
#if defined(GL_TEXTURE_BINDING_2D)
defconsti(env, "GL-TEXTURE-BINDING-2D", (GLenum) GL_TEXTURE_BINDING_2D, "GL_TEXTURE_BINDING_2D");
#endif
#if defined(GL_SAMPLE_BUFFERS)
defconsti(env, "GL-SAMPLE-BUFFERS", (GLenum) GL_SAMPLE_BUFFERS, "GL_SAMPLE_BUFFERS");
#endif
#if defined(GL_SAMPLES)
defconsti(env, "GL-SAMPLES", (GLenum) GL_SAMPLES, "GL_SAMPLES");
#endif
#if defined(GL_SAMPLE_COVERAGE_VALUE)
defconsti(env, "GL-SAMPLE-COVERAGE-VALUE", (GLenum) GL_SAMPLE_COVERAGE_VALUE, "GL_SAMPLE_COVERAGE_VALUE");
#endif
#if defined(GL_SAMPLE_COVERAGE_INVERT)
defconsti(env, "GL-SAMPLE-COVERAGE-INVERT", (GLenum) GL_SAMPLE_COVERAGE_INVERT, "GL_SAMPLE_COVERAGE_INVERT");
#endif
#if defined(GL_NUM_COMPRESSED_TEXTURE_FORMATS)
defconsti(env, "GL-NUM-COMPRESSED-TEXTURE-FORMATS", (GLenum) GL_NUM_COMPRESSED_TEXTURE_FORMATS, "GL_NUM_COMPRESSED_TEXTURE_FORMATS");
#endif
#if defined(GL_COMPRESSED_TEXTURE_FORMATS)
defconsti(env, "GL-COMPRESSED-TEXTURE-FORMATS", (GLenum) GL_COMPRESSED_TEXTURE_FORMATS, "GL_COMPRESSED_TEXTURE_FORMATS");
#endif
#if defined(GL_DONT_CARE)
defconsti(env, "GL-DONT-CARE", (GLenum) GL_DONT_CARE, "GL_DONT_CARE");
#endif
#if defined(GL_FASTEST)
defconsti(env, "GL-FASTEST", (GLenum) GL_FASTEST, "GL_FASTEST");
#endif
#if defined(GL_NICEST)
defconsti(env, "GL-NICEST", (GLenum) GL_NICEST, "GL_NICEST");
#endif
#if defined(GL_GENERATE_MIPMAP_HINT)
defconsti(env, "GL-GENERATE-MIPMAP-HINT", (GLenum) GL_GENERATE_MIPMAP_HINT, "GL_GENERATE_MIPMAP_HINT");
#endif
#if defined(GL_BYTE)
defconsti(env, "GL-BYTE", (GLenum) GL_BYTE, "GL_BYTE");
#endif
#if defined(GL_UNSIGNED_BYTE)
defconsti(env, "GL-UNSIGNED-BYTE", (GLenum) GL_UNSIGNED_BYTE, "GL_UNSIGNED_BYTE");
#endif
#if defined(GL_SHORT)
defconsti(env, "GL-SHORT", (GLenum) GL_SHORT, "GL_SHORT");
#endif
#if defined(GL_UNSIGNED_SHORT)
defconsti(env, "GL-UNSIGNED-SHORT", (GLenum) GL_UNSIGNED_SHORT, "GL_UNSIGNED_SHORT");
#endif
#if defined(GL_INT)
defconsti(env, "GL-INT", (GLenum) GL_INT, "GL_INT");
#endif
#if defined(GL_UNSIGNED_INT)
defconsti(env, "GL-UNSIGNED-INT", (GLenum) GL_UNSIGNED_INT, "GL_UNSIGNED_INT");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_FIXED)
defconsti(env, "GL-FIXED", (GLenum) GL_FIXED, "GL_FIXED");
#endif
#if defined(GL_DEPTH_COMPONENT)
defconsti(env, "GL-DEPTH-COMPONENT", (GLenum) GL_DEPTH_COMPONENT, "GL_DEPTH_COMPONENT");
#endif
#if defined(GL_ALPHA)
defconsti(env, "GL-ALPHA", (GLenum) GL_ALPHA, "GL_ALPHA");
#endif
#if defined(GL_RGB)
defconsti(env, "GL-RGB", (GLenum) GL_RGB, "GL_RGB");
#endif
#if defined(GL_RGBA)
defconsti(env, "GL-RGBA", (GLenum) GL_RGBA, "GL_RGBA");
#endif
#if defined(GL_LUMINANCE)
defconsti(env, "GL-LUMINANCE", (GLenum) GL_LUMINANCE, "GL_LUMINANCE");
#endif
#if defined(GL_LUMINANCE_ALPHA)
defconsti(env, "GL-LUMINANCE-ALPHA", (GLenum) GL_LUMINANCE_ALPHA, "GL_LUMINANCE_ALPHA");
#endif
#if defined(GL_UNSIGNED_SHORT_4_4_4_4)
defconsti(env, "GL-UNSIGNED-SHORT-4-4-4-4", (GLenum) GL_UNSIGNED_SHORT_4_4_4_4, "GL_UNSIGNED_SHORT_4_4_4_4");
#endif
#if defined(GL_UNSIGNED_SHORT_5_5_5_1)
defconsti(env, "GL-UNSIGNED-SHORT-5-5-5-1", (GLenum) GL_UNSIGNED_SHORT_5_5_5_1, "GL_UNSIGNED_SHORT_5_5_5_1");
#endif
#if defined(GL_UNSIGNED_SHORT_5_6_5)
defconsti(env, "GL-UNSIGNED-SHORT-5-6-5", (GLenum) GL_UNSIGNED_SHORT_5_6_5, "GL_UNSIGNED_SHORT_5_6_5");
#endif
#if defined(GL_FRAGMENT_SHADER)
defconsti(env, "GL-FRAGMENT-SHADER", (GLenum) GL_FRAGMENT_SHADER, "GL_FRAGMENT_SHADER");
#endif
#if defined(GL_VERTEX_SHADER)
defconsti(env, "GL-VERTEX-SHADER", (GLenum) GL_VERTEX_SHADER, "GL_VERTEX_SHADER");
#endif
#if defined(GL_MAX_VERTEX_ATTRIBS)
defconsti(env, "GL-MAX-VERTEX-ATTRIBS", (GLenum) GL_MAX_VERTEX_ATTRIBS, "GL_MAX_VERTEX_ATTRIBS");
#endif
#if defined(GL_MAX_VERTEX_UNIFORM_VECTORS)
defconsti(env, "GL-MAX-VERTEX-UNIFORM-VECTORS", (GLenum) GL_MAX_VERTEX_UNIFORM_VECTORS, "GL_MAX_VERTEX_UNIFORM_VECTORS");
#endif
#if defined(GL_MAX_VARYING_VECTORS)
defconsti(env, "GL-MAX-VARYING-VECTORS", (GLenum) GL_MAX_VARYING_VECTORS, "GL_MAX_VARYING_VECTORS");
#endif
#if defined(GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-COMBINED-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS, "GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-VERTEX-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS, "GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_TEXTURE_IMAGE_UNITS, "GL_MAX_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_FRAGMENT_UNIFORM_VECTORS)
defconsti(env, "GL-MAX-FRAGMENT-UNIFORM-VECTORS", (GLenum) GL_MAX_FRAGMENT_UNIFORM_VECTORS, "GL_MAX_FRAGMENT_UNIFORM_VECTORS");
#endif
#if defined(GL_SHADER_TYPE)
defconsti(env, "GL-SHADER-TYPE", (GLenum) GL_SHADER_TYPE, "GL_SHADER_TYPE");
#endif
#if defined(GL_DELETE_STATUS)
defconsti(env, "GL-DELETE-STATUS", (GLenum) GL_DELETE_STATUS, "GL_DELETE_STATUS");
#endif
#if defined(GL_LINK_STATUS)
defconsti(env, "GL-LINK-STATUS", (GLenum) GL_LINK_STATUS, "GL_LINK_STATUS");
#endif
#if defined(GL_VALIDATE_STATUS)
defconsti(env, "GL-VALIDATE-STATUS", (GLenum) GL_VALIDATE_STATUS, "GL_VALIDATE_STATUS");
#endif
#if defined(GL_ATTACHED_SHADERS)
defconsti(env, "GL-ATTACHED-SHADERS", (GLenum) GL_ATTACHED_SHADERS, "GL_ATTACHED_SHADERS");
#endif
#if defined(GL_ACTIVE_UNIFORMS)
defconsti(env, "GL-ACTIVE-UNIFORMS", (GLenum) GL_ACTIVE_UNIFORMS, "GL_ACTIVE_UNIFORMS");
#endif
#if defined(GL_ACTIVE_UNIFORM_MAX_LENGTH)
defconsti(env, "GL-ACTIVE-UNIFORM-MAX-LENGTH", (GLenum) GL_ACTIVE_UNIFORM_MAX_LENGTH, "GL_ACTIVE_UNIFORM_MAX_LENGTH");
#endif
#if defined(GL_ACTIVE_ATTRIBUTES)
defconsti(env, "GL-ACTIVE-ATTRIBUTES", (GLenum) GL_ACTIVE_ATTRIBUTES, "GL_ACTIVE_ATTRIBUTES");
#endif
#if defined(GL_ACTIVE_ATTRIBUTE_MAX_LENGTH)
defconsti(env, "GL-ACTIVE-ATTRIBUTE-MAX-LENGTH", (GLenum) GL_ACTIVE_ATTRIBUTE_MAX_LENGTH, "GL_ACTIVE_ATTRIBUTE_MAX_LENGTH");
#endif
#if defined(GL_SHADING_LANGUAGE_VERSION)
defconsti(env, "GL-SHADING-LANGUAGE-VERSION", (GLenum) GL_SHADING_LANGUAGE_VERSION, "GL_SHADING_LANGUAGE_VERSION");
#endif
#if defined(GL_CURRENT_PROGRAM)
defconsti(env, "GL-CURRENT-PROGRAM", (GLenum) GL_CURRENT_PROGRAM, "GL_CURRENT_PROGRAM");
#endif
#if defined(GL_NEVER)
defconsti(env, "GL-NEVER", (GLenum) GL_NEVER, "GL_NEVER");
#endif
#if defined(GL_LESS)
defconsti(env, "GL-LESS", (GLenum) GL_LESS, "GL_LESS");
#endif
#if defined(GL_EQUAL)
defconsti(env, "GL-EQUAL", (GLenum) GL_EQUAL, "GL_EQUAL");
#endif
#if defined(GL_LEQUAL)
defconsti(env, "GL-LEQUAL", (GLenum) GL_LEQUAL, "GL_LEQUAL");
#endif
#if defined(GL_GREATER)
defconsti(env, "GL-GREATER", (GLenum) GL_GREATER, "GL_GREATER");
#endif
#if defined(GL_NOTEQUAL)
defconsti(env, "GL-NOTEQUAL", (GLenum) GL_NOTEQUAL, "GL_NOTEQUAL");
#endif
#if defined(GL_GEQUAL)
defconsti(env, "GL-GEQUAL", (GLenum) GL_GEQUAL, "GL_GEQUAL");
#endif
#if defined(GL_ALWAYS)
defconsti(env, "GL-ALWAYS", (GLenum) GL_ALWAYS, "GL_ALWAYS");
#endif
#if defined(GL_KEEP)
defconsti(env, "GL-KEEP", (GLenum) GL_KEEP, "GL_KEEP");
#endif
#if defined(GL_REPLACE)
defconsti(env, "GL-REPLACE", (GLenum) GL_REPLACE, "GL_REPLACE");
#endif
#if defined(GL_INCR)
defconsti(env, "GL-INCR", (GLenum) GL_INCR, "GL_INCR");
#endif
#if defined(GL_DECR)
defconsti(env, "GL-DECR", (GLenum) GL_DECR, "GL_DECR");
#endif
#if defined(GL_INVERT)
defconsti(env, "GL-INVERT", (GLenum) GL_INVERT, "GL_INVERT");
#endif
#if defined(GL_INCR_WRAP)
defconsti(env, "GL-INCR-WRAP", (GLenum) GL_INCR_WRAP, "GL_INCR_WRAP");
#endif
#if defined(GL_DECR_WRAP)
defconsti(env, "GL-DECR-WRAP", (GLenum) GL_DECR_WRAP, "GL_DECR_WRAP");
#endif
#if defined(GL_VENDOR)
defconsti(env, "GL-VENDOR", (GLenum) GL_VENDOR, "GL_VENDOR");
#endif
#if defined(GL_RENDERER)
defconsti(env, "GL-RENDERER", (GLenum) GL_RENDERER, "GL_RENDERER");
#endif
#if defined(GL_VERSION)
defconsti(env, "GL-VERSION", (GLenum) GL_VERSION, "GL_VERSION");
#endif
#if defined(GL_EXTENSIONS)
defconsti(env, "GL-EXTENSIONS", (GLenum) GL_EXTENSIONS, "GL_EXTENSIONS");
#endif
#if defined(GL_NEAREST)
defconsti(env, "GL-NEAREST", (GLenum) GL_NEAREST, "GL_NEAREST");
#endif
#if defined(GL_LINEAR)
defconsti(env, "GL-LINEAR", (GLenum) GL_LINEAR, "GL_LINEAR");
#endif
#if defined(GL_NEAREST_MIPMAP_NEAREST)
defconsti(env, "GL-NEAREST-MIPMAP-NEAREST", (GLenum) GL_NEAREST_MIPMAP_NEAREST, "GL_NEAREST_MIPMAP_NEAREST");
#endif
#if defined(GL_LINEAR_MIPMAP_NEAREST)
defconsti(env, "GL-LINEAR-MIPMAP-NEAREST", (GLenum) GL_LINEAR_MIPMAP_NEAREST, "GL_LINEAR_MIPMAP_NEAREST");
#endif
#if defined(GL_NEAREST_MIPMAP_LINEAR)
defconsti(env, "GL-NEAREST-MIPMAP-LINEAR", (GLenum) GL_NEAREST_MIPMAP_LINEAR, "GL_NEAREST_MIPMAP_LINEAR");
#endif
#if defined(GL_LINEAR_MIPMAP_LINEAR)
defconsti(env, "GL-LINEAR-MIPMAP-LINEAR", (GLenum) GL_LINEAR_MIPMAP_LINEAR, "GL_LINEAR_MIPMAP_LINEAR");
#endif
#if defined(GL_TEXTURE_MAG_FILTER)
defconsti(env, "GL-TEXTURE-MAG-FILTER", (GLenum) GL_TEXTURE_MAG_FILTER, "GL_TEXTURE_MAG_FILTER");
#endif
#if defined(GL_TEXTURE_MIN_FILTER)
defconsti(env, "GL-TEXTURE-MIN-FILTER", (GLenum) GL_TEXTURE_MIN_FILTER, "GL_TEXTURE_MIN_FILTER");
#endif
#if defined(GL_TEXTURE_WRAP_S)
defconsti(env, "GL-TEXTURE-WRAP-S", (GLenum) GL_TEXTURE_WRAP_S, "GL_TEXTURE_WRAP_S");
#endif
#if defined(GL_TEXTURE_WRAP_T)
defconsti(env, "GL-TEXTURE-WRAP-T", (GLenum) GL_TEXTURE_WRAP_T, "GL_TEXTURE_WRAP_T");
#endif
#if defined(GL_TEXTURE)
defconsti(env, "GL-TEXTURE", (GLenum) GL_TEXTURE, "GL_TEXTURE");
#endif
#if defined(GL_TEXTURE_CUBE_MAP)
defconsti(env, "GL-TEXTURE-CUBE-MAP", (GLenum) GL_TEXTURE_CUBE_MAP, "GL_TEXTURE_CUBE_MAP");
#endif
#if defined(GL_TEXTURE_BINDING_CUBE_MAP)
defconsti(env, "GL-TEXTURE-BINDING-CUBE-MAP", (GLenum) GL_TEXTURE_BINDING_CUBE_MAP, "GL_TEXTURE_BINDING_CUBE_MAP");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_X)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-X", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_X, "GL_TEXTURE_CUBE_MAP_POSITIVE_X");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_X)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-X", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_X, "GL_TEXTURE_CUBE_MAP_NEGATIVE_X");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_Y)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-Y", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_Y, "GL_TEXTURE_CUBE_MAP_POSITIVE_Y");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_Y)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-Y", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_Z)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-Z", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_Z, "GL_TEXTURE_CUBE_MAP_POSITIVE_Z");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_Z)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-Z", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z");
#endif
#if defined(GL_MAX_CUBE_MAP_TEXTURE_SIZE)
defconsti(env, "GL-MAX-CUBE-MAP-TEXTURE-SIZE", (GLenum) GL_MAX_CUBE_MAP_TEXTURE_SIZE, "GL_MAX_CUBE_MAP_TEXTURE_SIZE");
#endif
#if defined(GL_TEXTURE0)
defconsti(env, "GL-TEXTURE0", (GLenum) GL_TEXTURE0, "GL_TEXTURE0");
#endif
#if defined(GL_TEXTURE1)
defconsti(env, "GL-TEXTURE1", (GLenum) GL_TEXTURE1, "GL_TEXTURE1");
#endif
#if defined(GL_TEXTURE2)
defconsti(env, "GL-TEXTURE2", (GLenum) GL_TEXTURE2, "GL_TEXTURE2");
#endif
#if defined(GL_TEXTURE3)
defconsti(env, "GL-TEXTURE3", (GLenum) GL_TEXTURE3, "GL_TEXTURE3");
#endif
#if defined(GL_TEXTURE4)
defconsti(env, "GL-TEXTURE4", (GLenum) GL_TEXTURE4, "GL_TEXTURE4");
#endif
#if defined(GL_TEXTURE5)
defconsti(env, "GL-TEXTURE5", (GLenum) GL_TEXTURE5, "GL_TEXTURE5");
#endif
#if defined(GL_TEXTURE6)
defconsti(env, "GL-TEXTURE6", (GLenum) GL_TEXTURE6, "GL_TEXTURE6");
#endif
#if defined(GL_TEXTURE7)
defconsti(env, "GL-TEXTURE7", (GLenum) GL_TEXTURE7, "GL_TEXTURE7");
#endif
#if defined(GL_TEXTURE8)
defconsti(env, "GL-TEXTURE8", (GLenum) GL_TEXTURE8, "GL_TEXTURE8");
#endif
#if defined(GL_TEXTURE9)
defconsti(env, "GL-TEXTURE9", (GLenum) GL_TEXTURE9, "GL_TEXTURE9");
#endif
#if defined(GL_TEXTURE10)
defconsti(env, "GL-TEXTURE10", (GLenum) GL_TEXTURE10, "GL_TEXTURE10");
#endif
#if defined(GL_TEXTURE11)
defconsti(env, "GL-TEXTURE11", (GLenum) GL_TEXTURE11, "GL_TEXTURE11");
#endif
#if defined(GL_TEXTURE12)
defconsti(env, "GL-TEXTURE12", (GLenum) GL_TEXTURE12, "GL_TEXTURE12");
#endif
#if defined(GL_TEXTURE13)
defconsti(env, "GL-TEXTURE13", (GLenum) GL_TEXTURE13, "GL_TEXTURE13");
#endif
#if defined(GL_TEXTURE14)
defconsti(env, "GL-TEXTURE14", (GLenum) GL_TEXTURE14, "GL_TEXTURE14");
#endif
#if defined(GL_TEXTURE15)
defconsti(env, "GL-TEXTURE15", (GLenum) GL_TEXTURE15, "GL_TEXTURE15");
#endif
#if defined(GL_TEXTURE16)
defconsti(env, "GL-TEXTURE16", (GLenum) GL_TEXTURE16, "GL_TEXTURE16");
#endif
#if defined(GL_TEXTURE17)
defconsti(env, "GL-TEXTURE17", (GLenum) GL_TEXTURE17, "GL_TEXTURE17");
#endif
#if defined(GL_TEXTURE18)
defconsti(env, "GL-TEXTURE18", (GLenum) GL_TEXTURE18, "GL_TEXTURE18");
#endif
#if defined(GL_TEXTURE19)
defconsti(env, "GL-TEXTURE19", (GLenum) GL_TEXTURE19, "GL_TEXTURE19");
#endif
#if defined(GL_TEXTURE20)
defconsti(env, "GL-TEXTURE20", (GLenum) GL_TEXTURE20, "GL_TEXTURE20");
#endif
#if defined(GL_TEXTURE21)
defconsti(env, "GL-TEXTURE21", (GLenum) GL_TEXTURE21, "GL_TEXTURE21");
#endif
#if defined(GL_TEXTURE22)
defconsti(env, "GL-TEXTURE22", (GLenum) GL_TEXTURE22, "GL_TEXTURE22");
#endif
#if defined(GL_TEXTURE23)
defconsti(env, "GL-TEXTURE23", (GLenum) GL_TEXTURE23, "GL_TEXTURE23");
#endif
#if defined(GL_TEXTURE24)
defconsti(env, "GL-TEXTURE24", (GLenum) GL_TEXTURE24, "GL_TEXTURE24");
#endif
#if defined(GL_TEXTURE25)
defconsti(env, "GL-TEXTURE25", (GLenum) GL_TEXTURE25, "GL_TEXTURE25");
#endif
#if defined(GL_TEXTURE26)
defconsti(env, "GL-TEXTURE26", (GLenum) GL_TEXTURE26, "GL_TEXTURE26");
#endif
#if defined(GL_TEXTURE27)
defconsti(env, "GL-TEXTURE27", (GLenum) GL_TEXTURE27, "GL_TEXTURE27");
#endif
#if defined(GL_TEXTURE28)
defconsti(env, "GL-TEXTURE28", (GLenum) GL_TEXTURE28, "GL_TEXTURE28");
#endif
#if defined(GL_TEXTURE29)
defconsti(env, "GL-TEXTURE29", (GLenum) GL_TEXTURE29, "GL_TEXTURE29");
#endif
#if defined(GL_TEXTURE30)
defconsti(env, "GL-TEXTURE30", (GLenum) GL_TEXTURE30, "GL_TEXTURE30");
#endif
#if defined(GL_TEXTURE31)
defconsti(env, "GL-TEXTURE31", (GLenum) GL_TEXTURE31, "GL_TEXTURE31");
#endif
#if defined(GL_ACTIVE_TEXTURE)
defconsti(env, "GL-ACTIVE-TEXTURE", (GLenum) GL_ACTIVE_TEXTURE, "GL_ACTIVE_TEXTURE");
#endif
#if defined(GL_REPEAT)
defconsti(env, "GL-REPEAT", (GLenum) GL_REPEAT, "GL_REPEAT");
#endif
#if defined(GL_CLAMP_TO_EDGE)
defconsti(env, "GL-CLAMP-TO-EDGE", (GLenum) GL_CLAMP_TO_EDGE, "GL_CLAMP_TO_EDGE");
#endif
#if defined(GL_MIRRORED_REPEAT)
defconsti(env, "GL-MIRRORED-REPEAT", (GLenum) GL_MIRRORED_REPEAT, "GL_MIRRORED_REPEAT");
#endif
#if defined(GL_FLOAT_VEC2)
defconsti(env, "GL-FLOAT-VEC2", (GLenum) GL_FLOAT_VEC2, "GL_FLOAT_VEC2");
#endif
#if defined(GL_FLOAT_VEC3)
defconsti(env, "GL-FLOAT-VEC3", (GLenum) GL_FLOAT_VEC3, "GL_FLOAT_VEC3");
#endif
#if defined(GL_FLOAT_VEC4)
defconsti(env, "GL-FLOAT-VEC4", (GLenum) GL_FLOAT_VEC4, "GL_FLOAT_VEC4");
#endif
#if defined(GL_INT_VEC2)
defconsti(env, "GL-INT-VEC2", (GLenum) GL_INT_VEC2, "GL_INT_VEC2");
#endif
#if defined(GL_INT_VEC3)
defconsti(env, "GL-INT-VEC3", (GLenum) GL_INT_VEC3, "GL_INT_VEC3");
#endif
#if defined(GL_INT_VEC4)
defconsti(env, "GL-INT-VEC4", (GLenum) GL_INT_VEC4, "GL_INT_VEC4");
#endif
#if defined(GL_BOOL)
defconsti(env, "GL-BOOL", (GLenum) GL_BOOL, "GL_BOOL");
#endif
#if defined(GL_BOOL_VEC2)
defconsti(env, "GL-BOOL-VEC2", (GLenum) GL_BOOL_VEC2, "GL_BOOL_VEC2");
#endif
#if defined(GL_BOOL_VEC3)
defconsti(env, "GL-BOOL-VEC3", (GLenum) GL_BOOL_VEC3, "GL_BOOL_VEC3");
#endif
#if defined(GL_BOOL_VEC4)
defconsti(env, "GL-BOOL-VEC4", (GLenum) GL_BOOL_VEC4, "GL_BOOL_VEC4");
#endif
#if defined(GL_FLOAT_MAT2)
defconsti(env, "GL-FLOAT-MAT2", (GLenum) GL_FLOAT_MAT2, "GL_FLOAT_MAT2");
#endif
#if defined(GL_FLOAT_MAT3)
defconsti(env, "GL-FLOAT-MAT3", (GLenum) GL_FLOAT_MAT3, "GL_FLOAT_MAT3");
#endif
#if defined(GL_FLOAT_MAT4)
defconsti(env, "GL-FLOAT-MAT4", (GLenum) GL_FLOAT_MAT4, "GL_FLOAT_MAT4");
#endif
#if defined(GL_SAMPLER_2D)
defconsti(env, "GL-SAMPLER-2D", (GLenum) GL_SAMPLER_2D, "GL_SAMPLER_2D");
#endif
#if defined(GL_SAMPLER_CUBE)
defconsti(env, "GL-SAMPLER-CUBE", (GLenum) GL_SAMPLER_CUBE, "GL_SAMPLER_CUBE");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_ENABLED)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-ENABLED", (GLenum) GL_VERTEX_ATTRIB_ARRAY_ENABLED, "GL_VERTEX_ATTRIB_ARRAY_ENABLED");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_SIZE)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-SIZE", (GLenum) GL_VERTEX_ATTRIB_ARRAY_SIZE, "GL_VERTEX_ATTRIB_ARRAY_SIZE");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_STRIDE)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-STRIDE", (GLenum) GL_VERTEX_ATTRIB_ARRAY_STRIDE, "GL_VERTEX_ATTRIB_ARRAY_STRIDE");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_TYPE)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-TYPE", (GLenum) GL_VERTEX_ATTRIB_ARRAY_TYPE, "GL_VERTEX_ATTRIB_ARRAY_TYPE");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_NORMALIZED)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-NORMALIZED", (GLenum) GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, "GL_VERTEX_ATTRIB_ARRAY_NORMALIZED");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_POINTER)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-POINTER", (GLenum) GL_VERTEX_ATTRIB_ARRAY_POINTER, "GL_VERTEX_ATTRIB_ARRAY_POINTER");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-BUFFER-BINDING", (GLenum) GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, "GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_IMPLEMENTATION_COLOR_READ_TYPE)
defconsti(env, "GL-IMPLEMENTATION-COLOR-READ-TYPE", (GLenum) GL_IMPLEMENTATION_COLOR_READ_TYPE, "GL_IMPLEMENTATION_COLOR_READ_TYPE");
#endif
#if defined(GL_IMPLEMENTATION_COLOR_READ_FORMAT)
defconsti(env, "GL-IMPLEMENTATION-COLOR-READ-FORMAT", (GLenum) GL_IMPLEMENTATION_COLOR_READ_FORMAT, "GL_IMPLEMENTATION_COLOR_READ_FORMAT");
#endif
#if defined(GL_COMPILE_STATUS)
defconsti(env, "GL-COMPILE-STATUS", (GLenum) GL_COMPILE_STATUS, "GL_COMPILE_STATUS");
#endif
#if defined(GL_INFO_LOG_LENGTH)
defconsti(env, "GL-INFO-LOG-LENGTH", (GLenum) GL_INFO_LOG_LENGTH, "GL_INFO_LOG_LENGTH");
#endif
#if defined(GL_SHADER_SOURCE_LENGTH)
defconsti(env, "GL-SHADER-SOURCE-LENGTH", (GLenum) GL_SHADER_SOURCE_LENGTH, "GL_SHADER_SOURCE_LENGTH");
#endif
#if defined(GL_SHADER_COMPILER)
defconsti(env, "GL-SHADER-COMPILER", (GLenum) GL_SHADER_COMPILER, "GL_SHADER_COMPILER");
#endif
#if defined(GL_SHADER_BINARY_FORMATS)
defconsti(env, "GL-SHADER-BINARY-FORMATS", (GLenum) GL_SHADER_BINARY_FORMATS, "GL_SHADER_BINARY_FORMATS");
#endif
#if defined(GL_NUM_SHADER_BINARY_FORMATS)
defconsti(env, "GL-NUM-SHADER-BINARY-FORMATS", (GLenum) GL_NUM_SHADER_BINARY_FORMATS, "GL_NUM_SHADER_BINARY_FORMATS");
#endif
#if defined(GL_LOW_FLOAT)
defconsti(env, "GL-LOW-FLOAT", (GLenum) GL_LOW_FLOAT, "GL_LOW_FLOAT");
#endif
#if defined(GL_MEDIUM_FLOAT)
defconsti(env, "GL-MEDIUM-FLOAT", (GLenum) GL_MEDIUM_FLOAT, "GL_MEDIUM_FLOAT");
#endif
#if defined(GL_HIGH_FLOAT)
defconsti(env, "GL-HIGH-FLOAT", (GLenum) GL_HIGH_FLOAT, "GL_HIGH_FLOAT");
#endif
#if defined(GL_LOW_INT)
defconsti(env, "GL-LOW-INT", (GLenum) GL_LOW_INT, "GL_LOW_INT");
#endif
#if defined(GL_MEDIUM_INT)
defconsti(env, "GL-MEDIUM-INT", (GLenum) GL_MEDIUM_INT, "GL_MEDIUM_INT");
#endif
#if defined(GL_HIGH_INT)
defconsti(env, "GL-HIGH-INT", (GLenum) GL_HIGH_INT, "GL_HIGH_INT");
#endif
#if defined(GL_FRAMEBUFFER)
defconsti(env, "GL-FRAMEBUFFER", (GLenum) GL_FRAMEBUFFER, "GL_FRAMEBUFFER");
#endif
#if defined(GL_RENDERBUFFER)
defconsti(env, "GL-RENDERBUFFER", (GLenum) GL_RENDERBUFFER, "GL_RENDERBUFFER");
#endif
#if defined(GL_RGBA4)
defconsti(env, "GL-RGBA4", (GLenum) GL_RGBA4, "GL_RGBA4");
#endif
#if defined(GL_RGB5_A1)
defconsti(env, "GL-RGB5-A1", (GLenum) GL_RGB5_A1, "GL_RGB5_A1");
#endif
#if defined(GL_RGB565)
defconsti(env, "GL-RGB565", (GLenum) GL_RGB565, "GL_RGB565");
#endif
#if defined(GL_DEPTH_COMPONENT16)
defconsti(env, "GL-DEPTH-COMPONENT16", (GLenum) GL_DEPTH_COMPONENT16, "GL_DEPTH_COMPONENT16");
#endif
#if defined(GL_STENCIL_INDEX8)
defconsti(env, "GL-STENCIL-INDEX8", (GLenum) GL_STENCIL_INDEX8, "GL_STENCIL_INDEX8");
#endif
#if defined(GL_RENDERBUFFER_WIDTH)
defconsti(env, "GL-RENDERBUFFER-WIDTH", (GLenum) GL_RENDERBUFFER_WIDTH, "GL_RENDERBUFFER_WIDTH");
#endif
#if defined(GL_RENDERBUFFER_HEIGHT)
defconsti(env, "GL-RENDERBUFFER-HEIGHT", (GLenum) GL_RENDERBUFFER_HEIGHT, "GL_RENDERBUFFER_HEIGHT");
#endif
#if defined(GL_RENDERBUFFER_INTERNAL_FORMAT)
defconsti(env, "GL-RENDERBUFFER-INTERNAL-FORMAT", (GLenum) GL_RENDERBUFFER_INTERNAL_FORMAT, "GL_RENDERBUFFER_INTERNAL_FORMAT");
#endif
#if defined(GL_RENDERBUFFER_RED_SIZE)
defconsti(env, "GL-RENDERBUFFER-RED-SIZE", (GLenum) GL_RENDERBUFFER_RED_SIZE, "GL_RENDERBUFFER_RED_SIZE");
#endif
#if defined(GL_RENDERBUFFER_GREEN_SIZE)
defconsti(env, "GL-RENDERBUFFER-GREEN-SIZE", (GLenum) GL_RENDERBUFFER_GREEN_SIZE, "GL_RENDERBUFFER_GREEN_SIZE");
#endif
#if defined(GL_RENDERBUFFER_BLUE_SIZE)
defconsti(env, "GL-RENDERBUFFER-BLUE-SIZE", (GLenum) GL_RENDERBUFFER_BLUE_SIZE, "GL_RENDERBUFFER_BLUE_SIZE");
#endif
#if defined(GL_RENDERBUFFER_ALPHA_SIZE)
defconsti(env, "GL-RENDERBUFFER-ALPHA-SIZE", (GLenum) GL_RENDERBUFFER_ALPHA_SIZE, "GL_RENDERBUFFER_ALPHA_SIZE");
#endif
#if defined(GL_RENDERBUFFER_DEPTH_SIZE)
defconsti(env, "GL-RENDERBUFFER-DEPTH-SIZE", (GLenum) GL_RENDERBUFFER_DEPTH_SIZE, "GL_RENDERBUFFER_DEPTH_SIZE");
#endif
#if defined(GL_RENDERBUFFER_STENCIL_SIZE)
defconsti(env, "GL-RENDERBUFFER-STENCIL-SIZE", (GLenum) GL_RENDERBUFFER_STENCIL_SIZE, "GL_RENDERBUFFER_STENCIL_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-OBJECT-TYPE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-OBJECT-NAME", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-LEVEL", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-CUBE-MAP-FACE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE");
#endif
#if defined(GL_COLOR_ATTACHMENT0)
defconsti(env, "GL-COLOR-ATTACHMENT0", (GLenum) GL_COLOR_ATTACHMENT0, "GL_COLOR_ATTACHMENT0");
#endif
#if defined(GL_DEPTH_ATTACHMENT)
defconsti(env, "GL-DEPTH-ATTACHMENT", (GLenum) GL_DEPTH_ATTACHMENT, "GL_DEPTH_ATTACHMENT");
#endif
#if defined(GL_STENCIL_ATTACHMENT)
defconsti(env, "GL-STENCIL-ATTACHMENT", (GLenum) GL_STENCIL_ATTACHMENT, "GL_STENCIL_ATTACHMENT");
#endif
#if defined(GL_NONE)
defconsti(env, "GL-NONE", (GLenum) GL_NONE, "GL_NONE");
#endif
#if defined(GL_FRAMEBUFFER_COMPLETE)
defconsti(env, "GL-FRAMEBUFFER-COMPLETE", (GLenum) GL_FRAMEBUFFER_COMPLETE, "GL_FRAMEBUFFER_COMPLETE");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-ATTACHMENT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT, "GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MISSING-ATTACHMENT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT, "GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-DIMENSIONS", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS, "GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS");
#endif
#if defined(GL_FRAMEBUFFER_UNSUPPORTED)
defconsti(env, "GL-FRAMEBUFFER-UNSUPPORTED", (GLenum) GL_FRAMEBUFFER_UNSUPPORTED, "GL_FRAMEBUFFER_UNSUPPORTED");
#endif
#if defined(GL_FRAMEBUFFER_BINDING)
defconsti(env, "GL-FRAMEBUFFER-BINDING", (GLenum) GL_FRAMEBUFFER_BINDING, "GL_FRAMEBUFFER_BINDING");
#endif
#if defined(GL_RENDERBUFFER_BINDING)
defconsti(env, "GL-RENDERBUFFER-BINDING", (GLenum) GL_RENDERBUFFER_BINDING, "GL_RENDERBUFFER_BINDING");
#endif
#if defined(GL_MAX_RENDERBUFFER_SIZE)
defconsti(env, "GL-MAX-RENDERBUFFER-SIZE", (GLenum) GL_MAX_RENDERBUFFER_SIZE, "GL_MAX_RENDERBUFFER_SIZE");
#endif
#if defined(GL_INVALID_FRAMEBUFFER_OPERATION)
defconsti(env, "GL-INVALID-FRAMEBUFFER-OPERATION", (GLenum) GL_INVALID_FRAMEBUFFER_OPERATION, "GL_INVALID_FRAMEBUFFER_OPERATION");
#endif
#if defined(GL_READ_BUFFER)
defconsti(env, "GL-READ-BUFFER", (GLenum) GL_READ_BUFFER, "GL_READ_BUFFER");
#endif
#if defined(GL_UNPACK_ROW_LENGTH)
defconsti(env, "GL-UNPACK-ROW-LENGTH", (GLenum) GL_UNPACK_ROW_LENGTH, "GL_UNPACK_ROW_LENGTH");
#endif
#if defined(GL_UNPACK_SKIP_ROWS)
defconsti(env, "GL-UNPACK-SKIP-ROWS", (GLenum) GL_UNPACK_SKIP_ROWS, "GL_UNPACK_SKIP_ROWS");
#endif
#if defined(GL_UNPACK_SKIP_PIXELS)
defconsti(env, "GL-UNPACK-SKIP-PIXELS", (GLenum) GL_UNPACK_SKIP_PIXELS, "GL_UNPACK_SKIP_PIXELS");
#endif
#if defined(GL_PACK_ROW_LENGTH)
defconsti(env, "GL-PACK-ROW-LENGTH", (GLenum) GL_PACK_ROW_LENGTH, "GL_PACK_ROW_LENGTH");
#endif
#if defined(GL_PACK_SKIP_ROWS)
defconsti(env, "GL-PACK-SKIP-ROWS", (GLenum) GL_PACK_SKIP_ROWS, "GL_PACK_SKIP_ROWS");
#endif
#if defined(GL_PACK_SKIP_PIXELS)
defconsti(env, "GL-PACK-SKIP-PIXELS", (GLenum) GL_PACK_SKIP_PIXELS, "GL_PACK_SKIP_PIXELS");
#endif
#if defined(GL_COLOR)
defconsti(env, "GL-COLOR", (GLenum) GL_COLOR, "GL_COLOR");
#endif
#if defined(GL_DEPTH)
defconsti(env, "GL-DEPTH", (GLenum) GL_DEPTH, "GL_DEPTH");
#endif
#if defined(GL_STENCIL)
defconsti(env, "GL-STENCIL", (GLenum) GL_STENCIL, "GL_STENCIL");
#endif
#if defined(GL_RED)
defconsti(env, "GL-RED", (GLenum) GL_RED, "GL_RED");
#endif
#if defined(GL_RGB8)
defconsti(env, "GL-RGB8", (GLenum) GL_RGB8, "GL_RGB8");
#endif
#if defined(GL_RGBA8)
defconsti(env, "GL-RGBA8", (GLenum) GL_RGBA8, "GL_RGBA8");
#endif
#if defined(GL_RGB10_A2)
defconsti(env, "GL-RGB10-A2", (GLenum) GL_RGB10_A2, "GL_RGB10_A2");
#endif
#if defined(GL_TEXTURE_BINDING_3D)
defconsti(env, "GL-TEXTURE-BINDING-3D", (GLenum) GL_TEXTURE_BINDING_3D, "GL_TEXTURE_BINDING_3D");
#endif
#if defined(GL_UNPACK_SKIP_IMAGES)
defconsti(env, "GL-UNPACK-SKIP-IMAGES", (GLenum) GL_UNPACK_SKIP_IMAGES, "GL_UNPACK_SKIP_IMAGES");
#endif
#if defined(GL_UNPACK_IMAGE_HEIGHT)
defconsti(env, "GL-UNPACK-IMAGE-HEIGHT", (GLenum) GL_UNPACK_IMAGE_HEIGHT, "GL_UNPACK_IMAGE_HEIGHT");
#endif
#if defined(GL_TEXTURE_3D)
defconsti(env, "GL-TEXTURE-3D", (GLenum) GL_TEXTURE_3D, "GL_TEXTURE_3D");
#endif
#if defined(GL_TEXTURE_WRAP_R)
defconsti(env, "GL-TEXTURE-WRAP-R", (GLenum) GL_TEXTURE_WRAP_R, "GL_TEXTURE_WRAP_R");
#endif
#if defined(GL_MAX_3D_TEXTURE_SIZE)
defconsti(env, "GL-MAX-3D-TEXTURE-SIZE", (GLenum) GL_MAX_3D_TEXTURE_SIZE, "GL_MAX_3D_TEXTURE_SIZE");
#endif
#if defined(GL_UNSIGNED_INT_2_10_10_10_REV)
defconsti(env, "GL-UNSIGNED-INT-2-10-10-10-REV", (GLenum) GL_UNSIGNED_INT_2_10_10_10_REV, "GL_UNSIGNED_INT_2_10_10_10_REV");
#endif
#if defined(GL_MAX_ELEMENTS_VERTICES)
defconsti(env, "GL-MAX-ELEMENTS-VERTICES", (GLenum) GL_MAX_ELEMENTS_VERTICES, "GL_MAX_ELEMENTS_VERTICES");
#endif
#if defined(GL_MAX_ELEMENTS_INDICES)
defconsti(env, "GL-MAX-ELEMENTS-INDICES", (GLenum) GL_MAX_ELEMENTS_INDICES, "GL_MAX_ELEMENTS_INDICES");
#endif
#if defined(GL_TEXTURE_MIN_LOD)
defconsti(env, "GL-TEXTURE-MIN-LOD", (GLenum) GL_TEXTURE_MIN_LOD, "GL_TEXTURE_MIN_LOD");
#endif
#if defined(GL_TEXTURE_MAX_LOD)
defconsti(env, "GL-TEXTURE-MAX-LOD", (GLenum) GL_TEXTURE_MAX_LOD, "GL_TEXTURE_MAX_LOD");
#endif
#if defined(GL_TEXTURE_BASE_LEVEL)
defconsti(env, "GL-TEXTURE-BASE-LEVEL", (GLenum) GL_TEXTURE_BASE_LEVEL, "GL_TEXTURE_BASE_LEVEL");
#endif
#if defined(GL_TEXTURE_MAX_LEVEL)
defconsti(env, "GL-TEXTURE-MAX-LEVEL", (GLenum) GL_TEXTURE_MAX_LEVEL, "GL_TEXTURE_MAX_LEVEL");
#endif
#if defined(GL_MIN)
defconsti(env, "GL-MIN", (GLenum) GL_MIN, "GL_MIN");
#endif
#if defined(GL_MAX)
defconsti(env, "GL-MAX", (GLenum) GL_MAX, "GL_MAX");
#endif
#if defined(GL_DEPTH_COMPONENT24)
defconsti(env, "GL-DEPTH-COMPONENT24", (GLenum) GL_DEPTH_COMPONENT24, "GL_DEPTH_COMPONENT24");
#endif
#if defined(GL_MAX_TEXTURE_LOD_BIAS)
defconsti(env, "GL-MAX-TEXTURE-LOD-BIAS", (GLenum) GL_MAX_TEXTURE_LOD_BIAS, "GL_MAX_TEXTURE_LOD_BIAS");
#endif
#if defined(GL_TEXTURE_COMPARE_MODE)
defconsti(env, "GL-TEXTURE-COMPARE-MODE", (GLenum) GL_TEXTURE_COMPARE_MODE, "GL_TEXTURE_COMPARE_MODE");
#endif
#if defined(GL_TEXTURE_COMPARE_FUNC)
defconsti(env, "GL-TEXTURE-COMPARE-FUNC", (GLenum) GL_TEXTURE_COMPARE_FUNC, "GL_TEXTURE_COMPARE_FUNC");
#endif
#if defined(GL_CURRENT_QUERY)
defconsti(env, "GL-CURRENT-QUERY", (GLenum) GL_CURRENT_QUERY, "GL_CURRENT_QUERY");
#endif
#if defined(GL_QUERY_RESULT)
defconsti(env, "GL-QUERY-RESULT", (GLenum) GL_QUERY_RESULT, "GL_QUERY_RESULT");
#endif
#if defined(GL_QUERY_RESULT_AVAILABLE)
defconsti(env, "GL-QUERY-RESULT-AVAILABLE", (GLenum) GL_QUERY_RESULT_AVAILABLE, "GL_QUERY_RESULT_AVAILABLE");
#endif
#if defined(GL_BUFFER_MAPPED)
defconsti(env, "GL-BUFFER-MAPPED", (GLenum) GL_BUFFER_MAPPED, "GL_BUFFER_MAPPED");
#endif
#if defined(GL_BUFFER_MAP_POINTER)
defconsti(env, "GL-BUFFER-MAP-POINTER", (GLenum) GL_BUFFER_MAP_POINTER, "GL_BUFFER_MAP_POINTER");
#endif
#if defined(GL_STREAM_READ)
defconsti(env, "GL-STREAM-READ", (GLenum) GL_STREAM_READ, "GL_STREAM_READ");
#endif
#if defined(GL_STREAM_COPY)
defconsti(env, "GL-STREAM-COPY", (GLenum) GL_STREAM_COPY, "GL_STREAM_COPY");
#endif
#if defined(GL_STATIC_READ)
defconsti(env, "GL-STATIC-READ", (GLenum) GL_STATIC_READ, "GL_STATIC_READ");
#endif
#if defined(GL_STATIC_COPY)
defconsti(env, "GL-STATIC-COPY", (GLenum) GL_STATIC_COPY, "GL_STATIC_COPY");
#endif
#if defined(GL_DYNAMIC_READ)
defconsti(env, "GL-DYNAMIC-READ", (GLenum) GL_DYNAMIC_READ, "GL_DYNAMIC_READ");
#endif
#if defined(GL_DYNAMIC_COPY)
defconsti(env, "GL-DYNAMIC-COPY", (GLenum) GL_DYNAMIC_COPY, "GL_DYNAMIC_COPY");
#endif
#if defined(GL_MAX_DRAW_BUFFERS)
defconsti(env, "GL-MAX-DRAW-BUFFERS", (GLenum) GL_MAX_DRAW_BUFFERS, "GL_MAX_DRAW_BUFFERS");
#endif
#if defined(GL_DRAW_BUFFER0)
defconsti(env, "GL-DRAW-BUFFER0", (GLenum) GL_DRAW_BUFFER0, "GL_DRAW_BUFFER0");
#endif
#if defined(GL_DRAW_BUFFER1)
defconsti(env, "GL-DRAW-BUFFER1", (GLenum) GL_DRAW_BUFFER1, "GL_DRAW_BUFFER1");
#endif
#if defined(GL_DRAW_BUFFER2)
defconsti(env, "GL-DRAW-BUFFER2", (GLenum) GL_DRAW_BUFFER2, "GL_DRAW_BUFFER2");
#endif
#if defined(GL_DRAW_BUFFER3)
defconsti(env, "GL-DRAW-BUFFER3", (GLenum) GL_DRAW_BUFFER3, "GL_DRAW_BUFFER3");
#endif
#if defined(GL_DRAW_BUFFER4)
defconsti(env, "GL-DRAW-BUFFER4", (GLenum) GL_DRAW_BUFFER4, "GL_DRAW_BUFFER4");
#endif
#if defined(GL_DRAW_BUFFER5)
defconsti(env, "GL-DRAW-BUFFER5", (GLenum) GL_DRAW_BUFFER5, "GL_DRAW_BUFFER5");
#endif
#if defined(GL_DRAW_BUFFER6)
defconsti(env, "GL-DRAW-BUFFER6", (GLenum) GL_DRAW_BUFFER6, "GL_DRAW_BUFFER6");
#endif
#if defined(GL_DRAW_BUFFER7)
defconsti(env, "GL-DRAW-BUFFER7", (GLenum) GL_DRAW_BUFFER7, "GL_DRAW_BUFFER7");
#endif
#if defined(GL_DRAW_BUFFER8)
defconsti(env, "GL-DRAW-BUFFER8", (GLenum) GL_DRAW_BUFFER8, "GL_DRAW_BUFFER8");
#endif
#if defined(GL_DRAW_BUFFER9)
defconsti(env, "GL-DRAW-BUFFER9", (GLenum) GL_DRAW_BUFFER9, "GL_DRAW_BUFFER9");
#endif
#if defined(GL_DRAW_BUFFER10)
defconsti(env, "GL-DRAW-BUFFER10", (GLenum) GL_DRAW_BUFFER10, "GL_DRAW_BUFFER10");
#endif
#if defined(GL_DRAW_BUFFER11)
defconsti(env, "GL-DRAW-BUFFER11", (GLenum) GL_DRAW_BUFFER11, "GL_DRAW_BUFFER11");
#endif
#if defined(GL_DRAW_BUFFER12)
defconsti(env, "GL-DRAW-BUFFER12", (GLenum) GL_DRAW_BUFFER12, "GL_DRAW_BUFFER12");
#endif
#if defined(GL_DRAW_BUFFER13)
defconsti(env, "GL-DRAW-BUFFER13", (GLenum) GL_DRAW_BUFFER13, "GL_DRAW_BUFFER13");
#endif
#if defined(GL_DRAW_BUFFER14)
defconsti(env, "GL-DRAW-BUFFER14", (GLenum) GL_DRAW_BUFFER14, "GL_DRAW_BUFFER14");
#endif
#if defined(GL_DRAW_BUFFER15)
defconsti(env, "GL-DRAW-BUFFER15", (GLenum) GL_DRAW_BUFFER15, "GL_DRAW_BUFFER15");
#endif
#if defined(GL_MAX_FRAGMENT_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-FRAGMENT-UNIFORM-COMPONENTS", (GLenum) GL_MAX_FRAGMENT_UNIFORM_COMPONENTS, "GL_MAX_FRAGMENT_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_VERTEX_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-VERTEX-UNIFORM-COMPONENTS", (GLenum) GL_MAX_VERTEX_UNIFORM_COMPONENTS, "GL_MAX_VERTEX_UNIFORM_COMPONENTS");
#endif
#if defined(GL_SAMPLER_3D)
defconsti(env, "GL-SAMPLER-3D", (GLenum) GL_SAMPLER_3D, "GL_SAMPLER_3D");
#endif
#if defined(GL_SAMPLER_2D_SHADOW)
defconsti(env, "GL-SAMPLER-2D-SHADOW", (GLenum) GL_SAMPLER_2D_SHADOW, "GL_SAMPLER_2D_SHADOW");
#endif
#if defined(GL_FRAGMENT_SHADER_DERIVATIVE_HINT)
defconsti(env, "GL-FRAGMENT-SHADER-DERIVATIVE-HINT", (GLenum) GL_FRAGMENT_SHADER_DERIVATIVE_HINT, "GL_FRAGMENT_SHADER_DERIVATIVE_HINT");
#endif
#if defined(GL_PIXEL_PACK_BUFFER)
defconsti(env, "GL-PIXEL-PACK-BUFFER", (GLenum) GL_PIXEL_PACK_BUFFER, "GL_PIXEL_PACK_BUFFER");
#endif
#if defined(GL_PIXEL_UNPACK_BUFFER)
defconsti(env, "GL-PIXEL-UNPACK-BUFFER", (GLenum) GL_PIXEL_UNPACK_BUFFER, "GL_PIXEL_UNPACK_BUFFER");
#endif
#if defined(GL_PIXEL_PACK_BUFFER_BINDING)
defconsti(env, "GL-PIXEL-PACK-BUFFER-BINDING", (GLenum) GL_PIXEL_PACK_BUFFER_BINDING, "GL_PIXEL_PACK_BUFFER_BINDING");
#endif
#if defined(GL_PIXEL_UNPACK_BUFFER_BINDING)
defconsti(env, "GL-PIXEL-UNPACK-BUFFER-BINDING", (GLenum) GL_PIXEL_UNPACK_BUFFER_BINDING, "GL_PIXEL_UNPACK_BUFFER_BINDING");
#endif
#if defined(GL_FLOAT_MAT2x3)
defconsti(env, "GL-FLOAT-MAT2x3", (GLenum) GL_FLOAT_MAT2x3, "GL_FLOAT_MAT2x3");
#endif
#if defined(GL_FLOAT_MAT2x4)
defconsti(env, "GL-FLOAT-MAT2x4", (GLenum) GL_FLOAT_MAT2x4, "GL_FLOAT_MAT2x4");
#endif
#if defined(GL_FLOAT_MAT3x2)
defconsti(env, "GL-FLOAT-MAT3x2", (GLenum) GL_FLOAT_MAT3x2, "GL_FLOAT_MAT3x2");
#endif
#if defined(GL_FLOAT_MAT3x4)
defconsti(env, "GL-FLOAT-MAT3x4", (GLenum) GL_FLOAT_MAT3x4, "GL_FLOAT_MAT3x4");
#endif
#if defined(GL_FLOAT_MAT4x2)
defconsti(env, "GL-FLOAT-MAT4x2", (GLenum) GL_FLOAT_MAT4x2, "GL_FLOAT_MAT4x2");
#endif
#if defined(GL_FLOAT_MAT4x3)
defconsti(env, "GL-FLOAT-MAT4x3", (GLenum) GL_FLOAT_MAT4x3, "GL_FLOAT_MAT4x3");
#endif
#if defined(GL_SRGB)
defconsti(env, "GL-SRGB", (GLenum) GL_SRGB, "GL_SRGB");
#endif
#if defined(GL_SRGB8)
defconsti(env, "GL-SRGB8", (GLenum) GL_SRGB8, "GL_SRGB8");
#endif
#if defined(GL_SRGB8_ALPHA8)
defconsti(env, "GL-SRGB8-ALPHA8", (GLenum) GL_SRGB8_ALPHA8, "GL_SRGB8_ALPHA8");
#endif
#if defined(GL_COMPARE_REF_TO_TEXTURE)
defconsti(env, "GL-COMPARE-REF-TO-TEXTURE", (GLenum) GL_COMPARE_REF_TO_TEXTURE, "GL_COMPARE_REF_TO_TEXTURE");
#endif
#if defined(GL_MAJOR_VERSION)
defconsti(env, "GL-MAJOR-VERSION", (GLenum) GL_MAJOR_VERSION, "GL_MAJOR_VERSION");
#endif
#if defined(GL_MINOR_VERSION)
defconsti(env, "GL-MINOR-VERSION", (GLenum) GL_MINOR_VERSION, "GL_MINOR_VERSION");
#endif
#if defined(GL_NUM_EXTENSIONS)
defconsti(env, "GL-NUM-EXTENSIONS", (GLenum) GL_NUM_EXTENSIONS, "GL_NUM_EXTENSIONS");
#endif
#if defined(GL_RGBA32F)
defconsti(env, "GL-RGBA32F", (GLenum) GL_RGBA32F, "GL_RGBA32F");
#endif
#if defined(GL_RGB32F)
defconsti(env, "GL-RGB32F", (GLenum) GL_RGB32F, "GL_RGB32F");
#endif
#if defined(GL_RGBA16F)
defconsti(env, "GL-RGBA16F", (GLenum) GL_RGBA16F, "GL_RGBA16F");
#endif
#if defined(GL_RGB16F)
defconsti(env, "GL-RGB16F", (GLenum) GL_RGB16F, "GL_RGB16F");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_INTEGER)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-INTEGER", (GLenum) GL_VERTEX_ATTRIB_ARRAY_INTEGER, "GL_VERTEX_ATTRIB_ARRAY_INTEGER");
#endif
#if defined(GL_MAX_ARRAY_TEXTURE_LAYERS)
defconsti(env, "GL-MAX-ARRAY-TEXTURE-LAYERS", (GLenum) GL_MAX_ARRAY_TEXTURE_LAYERS, "GL_MAX_ARRAY_TEXTURE_LAYERS");
#endif
#if defined(GL_MIN_PROGRAM_TEXEL_OFFSET)
defconsti(env, "GL-MIN-PROGRAM-TEXEL-OFFSET", (GLenum) GL_MIN_PROGRAM_TEXEL_OFFSET, "GL_MIN_PROGRAM_TEXEL_OFFSET");
#endif
#if defined(GL_MAX_PROGRAM_TEXEL_OFFSET)
defconsti(env, "GL-MAX-PROGRAM-TEXEL-OFFSET", (GLenum) GL_MAX_PROGRAM_TEXEL_OFFSET, "GL_MAX_PROGRAM_TEXEL_OFFSET");
#endif
#if defined(GL_MAX_VARYING_COMPONENTS)
defconsti(env, "GL-MAX-VARYING-COMPONENTS", (GLenum) GL_MAX_VARYING_COMPONENTS, "GL_MAX_VARYING_COMPONENTS");
#endif
#if defined(GL_TEXTURE_2D_ARRAY)
defconsti(env, "GL-TEXTURE-2D-ARRAY", (GLenum) GL_TEXTURE_2D_ARRAY, "GL_TEXTURE_2D_ARRAY");
#endif
#if defined(GL_TEXTURE_BINDING_2D_ARRAY)
defconsti(env, "GL-TEXTURE-BINDING-2D-ARRAY", (GLenum) GL_TEXTURE_BINDING_2D_ARRAY, "GL_TEXTURE_BINDING_2D_ARRAY");
#endif
#if defined(GL_R11F_G11F_B10F)
defconsti(env, "GL-R11F-G11F-B10F", (GLenum) GL_R11F_G11F_B10F, "GL_R11F_G11F_B10F");
#endif
#if defined(GL_UNSIGNED_INT_10F_11F_11F_REV)
defconsti(env, "GL-UNSIGNED-INT-10F-11F-11F-REV", (GLenum) GL_UNSIGNED_INT_10F_11F_11F_REV, "GL_UNSIGNED_INT_10F_11F_11F_REV");
#endif
#if defined(GL_RGB9_E5)
defconsti(env, "GL-RGB9-E5", (GLenum) GL_RGB9_E5, "GL_RGB9_E5");
#endif
#if defined(GL_UNSIGNED_INT_5_9_9_9_REV)
defconsti(env, "GL-UNSIGNED-INT-5-9-9-9-REV", (GLenum) GL_UNSIGNED_INT_5_9_9_9_REV, "GL_UNSIGNED_INT_5_9_9_9_REV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH)
defconsti(env, "GL-TRANSFORM-FEEDBACK-VARYING-MAX-LENGTH", (GLenum) GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH, "GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_MODE)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-MODE", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_MODE, "GL_TRANSFORM_FEEDBACK_BUFFER_MODE");
#endif
#if defined(GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS)
defconsti(env, "GL-MAX-TRANSFORM-FEEDBACK-SEPARATE-COMPONENTS", (GLenum) GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS, "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_VARYINGS)
defconsti(env, "GL-TRANSFORM-FEEDBACK-VARYINGS", (GLenum) GL_TRANSFORM_FEEDBACK_VARYINGS, "GL_TRANSFORM_FEEDBACK_VARYINGS");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_START)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-START", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_START, "GL_TRANSFORM_FEEDBACK_BUFFER_START");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_SIZE)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-SIZE", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_SIZE, "GL_TRANSFORM_FEEDBACK_BUFFER_SIZE");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN)
defconsti(env, "GL-TRANSFORM-FEEDBACK-PRIMITIVES-WRITTEN", (GLenum) GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN, "GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN");
#endif
#if defined(GL_RASTERIZER_DISCARD)
defconsti(env, "GL-RASTERIZER-DISCARD", (GLenum) GL_RASTERIZER_DISCARD, "GL_RASTERIZER_DISCARD");
#endif
#if defined(GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS)
defconsti(env, "GL-MAX-TRANSFORM-FEEDBACK-INTERLEAVED-COMPONENTS", (GLenum) GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS, "GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS");
#endif
#if defined(GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS)
defconsti(env, "GL-MAX-TRANSFORM-FEEDBACK-SEPARATE-ATTRIBS", (GLenum) GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS, "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS");
#endif
#if defined(GL_INTERLEAVED_ATTRIBS)
defconsti(env, "GL-INTERLEAVED-ATTRIBS", (GLenum) GL_INTERLEAVED_ATTRIBS, "GL_INTERLEAVED_ATTRIBS");
#endif
#if defined(GL_SEPARATE_ATTRIBS)
defconsti(env, "GL-SEPARATE-ATTRIBS", (GLenum) GL_SEPARATE_ATTRIBS, "GL_SEPARATE_ATTRIBS");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER, "GL_TRANSFORM_FEEDBACK_BUFFER");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_BINDING)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-BINDING", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_BINDING, "GL_TRANSFORM_FEEDBACK_BUFFER_BINDING");
#endif
#if defined(GL_RGBA32UI)
defconsti(env, "GL-RGBA32UI", (GLenum) GL_RGBA32UI, "GL_RGBA32UI");
#endif
#if defined(GL_RGB32UI)
defconsti(env, "GL-RGB32UI", (GLenum) GL_RGB32UI, "GL_RGB32UI");
#endif
#if defined(GL_RGBA16UI)
defconsti(env, "GL-RGBA16UI", (GLenum) GL_RGBA16UI, "GL_RGBA16UI");
#endif
#if defined(GL_RGB16UI)
defconsti(env, "GL-RGB16UI", (GLenum) GL_RGB16UI, "GL_RGB16UI");
#endif
#if defined(GL_RGBA8UI)
defconsti(env, "GL-RGBA8UI", (GLenum) GL_RGBA8UI, "GL_RGBA8UI");
#endif
#if defined(GL_RGB8UI)
defconsti(env, "GL-RGB8UI", (GLenum) GL_RGB8UI, "GL_RGB8UI");
#endif
#if defined(GL_RGBA32I)
defconsti(env, "GL-RGBA32I", (GLenum) GL_RGBA32I, "GL_RGBA32I");
#endif
#if defined(GL_RGB32I)
defconsti(env, "GL-RGB32I", (GLenum) GL_RGB32I, "GL_RGB32I");
#endif
#if defined(GL_RGBA16I)
defconsti(env, "GL-RGBA16I", (GLenum) GL_RGBA16I, "GL_RGBA16I");
#endif
#if defined(GL_RGB16I)
defconsti(env, "GL-RGB16I", (GLenum) GL_RGB16I, "GL_RGB16I");
#endif
#if defined(GL_RGBA8I)
defconsti(env, "GL-RGBA8I", (GLenum) GL_RGBA8I, "GL_RGBA8I");
#endif
#if defined(GL_RGB8I)
defconsti(env, "GL-RGB8I", (GLenum) GL_RGB8I, "GL_RGB8I");
#endif
#if defined(GL_RED_INTEGER)
defconsti(env, "GL-RED-INTEGER", (GLenum) GL_RED_INTEGER, "GL_RED_INTEGER");
#endif
#if defined(GL_RGB_INTEGER)
defconsti(env, "GL-RGB-INTEGER", (GLenum) GL_RGB_INTEGER, "GL_RGB_INTEGER");
#endif
#if defined(GL_RGBA_INTEGER)
defconsti(env, "GL-RGBA-INTEGER", (GLenum) GL_RGBA_INTEGER, "GL_RGBA_INTEGER");
#endif
#if defined(GL_SAMPLER_2D_ARRAY)
defconsti(env, "GL-SAMPLER-2D-ARRAY", (GLenum) GL_SAMPLER_2D_ARRAY, "GL_SAMPLER_2D_ARRAY");
#endif
#if defined(GL_SAMPLER_2D_ARRAY_SHADOW)
defconsti(env, "GL-SAMPLER-2D-ARRAY-SHADOW", (GLenum) GL_SAMPLER_2D_ARRAY_SHADOW, "GL_SAMPLER_2D_ARRAY_SHADOW");
#endif
#if defined(GL_SAMPLER_CUBE_SHADOW)
defconsti(env, "GL-SAMPLER-CUBE-SHADOW", (GLenum) GL_SAMPLER_CUBE_SHADOW, "GL_SAMPLER_CUBE_SHADOW");
#endif
#if defined(GL_UNSIGNED_INT_VEC2)
defconsti(env, "GL-UNSIGNED-INT-VEC2", (GLenum) GL_UNSIGNED_INT_VEC2, "GL_UNSIGNED_INT_VEC2");
#endif
#if defined(GL_UNSIGNED_INT_VEC3)
defconsti(env, "GL-UNSIGNED-INT-VEC3", (GLenum) GL_UNSIGNED_INT_VEC3, "GL_UNSIGNED_INT_VEC3");
#endif
#if defined(GL_UNSIGNED_INT_VEC4)
defconsti(env, "GL-UNSIGNED-INT-VEC4", (GLenum) GL_UNSIGNED_INT_VEC4, "GL_UNSIGNED_INT_VEC4");
#endif
#if defined(GL_INT_SAMPLER_2D)
defconsti(env, "GL-INT-SAMPLER-2D", (GLenum) GL_INT_SAMPLER_2D, "GL_INT_SAMPLER_2D");
#endif
#if defined(GL_INT_SAMPLER_3D)
defconsti(env, "GL-INT-SAMPLER-3D", (GLenum) GL_INT_SAMPLER_3D, "GL_INT_SAMPLER_3D");
#endif
#if defined(GL_INT_SAMPLER_CUBE)
defconsti(env, "GL-INT-SAMPLER-CUBE", (GLenum) GL_INT_SAMPLER_CUBE, "GL_INT_SAMPLER_CUBE");
#endif
#if defined(GL_INT_SAMPLER_2D_ARRAY)
defconsti(env, "GL-INT-SAMPLER-2D-ARRAY", (GLenum) GL_INT_SAMPLER_2D_ARRAY, "GL_INT_SAMPLER_2D_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D, "GL_UNSIGNED_INT_SAMPLER_2D");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_3D)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-3D", (GLenum) GL_UNSIGNED_INT_SAMPLER_3D, "GL_UNSIGNED_INT_SAMPLER_3D");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_CUBE)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-CUBE", (GLenum) GL_UNSIGNED_INT_SAMPLER_CUBE, "GL_UNSIGNED_INT_SAMPLER_CUBE");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-ARRAY", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_ARRAY, "GL_UNSIGNED_INT_SAMPLER_2D_ARRAY");
#endif
#if defined(GL_BUFFER_ACCESS_FLAGS)
defconsti(env, "GL-BUFFER-ACCESS-FLAGS", (GLenum) GL_BUFFER_ACCESS_FLAGS, "GL_BUFFER_ACCESS_FLAGS");
#endif
#if defined(GL_BUFFER_MAP_LENGTH)
defconsti(env, "GL-BUFFER-MAP-LENGTH", (GLenum) GL_BUFFER_MAP_LENGTH, "GL_BUFFER_MAP_LENGTH");
#endif
#if defined(GL_BUFFER_MAP_OFFSET)
defconsti(env, "GL-BUFFER-MAP-OFFSET", (GLenum) GL_BUFFER_MAP_OFFSET, "GL_BUFFER_MAP_OFFSET");
#endif
#if defined(GL_DEPTH_COMPONENT32F)
defconsti(env, "GL-DEPTH-COMPONENT32F", (GLenum) GL_DEPTH_COMPONENT32F, "GL_DEPTH_COMPONENT32F");
#endif
#if defined(GL_DEPTH32F_STENCIL8)
defconsti(env, "GL-DEPTH32F-STENCIL8", (GLenum) GL_DEPTH32F_STENCIL8, "GL_DEPTH32F_STENCIL8");
#endif
#if defined(GL_FLOAT_32_UNSIGNED_INT_24_8_REV)
defconsti(env, "GL-FLOAT-32-UNSIGNED-INT-24-8-REV", (GLenum) GL_FLOAT_32_UNSIGNED_INT_24_8_REV, "GL_FLOAT_32_UNSIGNED_INT_24_8_REV");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-COLOR-ENCODING", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING, "GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-COMPONENT-TYPE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE, "GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-RED-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-GREEN-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-BLUE-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-ALPHA-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-DEPTH-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-STENCIL-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT", (GLenum) GL_FRAMEBUFFER_DEFAULT, "GL_FRAMEBUFFER_DEFAULT");
#endif
#if defined(GL_FRAMEBUFFER_UNDEFINED)
defconsti(env, "GL-FRAMEBUFFER-UNDEFINED", (GLenum) GL_FRAMEBUFFER_UNDEFINED, "GL_FRAMEBUFFER_UNDEFINED");
#endif
#if defined(GL_DEPTH_STENCIL_ATTACHMENT)
defconsti(env, "GL-DEPTH-STENCIL-ATTACHMENT", (GLenum) GL_DEPTH_STENCIL_ATTACHMENT, "GL_DEPTH_STENCIL_ATTACHMENT");
#endif
#if defined(GL_DEPTH_STENCIL)
defconsti(env, "GL-DEPTH-STENCIL", (GLenum) GL_DEPTH_STENCIL, "GL_DEPTH_STENCIL");
#endif
#if defined(GL_UNSIGNED_INT_24_8)
defconsti(env, "GL-UNSIGNED-INT-24-8", (GLenum) GL_UNSIGNED_INT_24_8, "GL_UNSIGNED_INT_24_8");
#endif
#if defined(GL_DEPTH24_STENCIL8)
defconsti(env, "GL-DEPTH24-STENCIL8", (GLenum) GL_DEPTH24_STENCIL8, "GL_DEPTH24_STENCIL8");
#endif
#if defined(GL_UNSIGNED_NORMALIZED)
defconsti(env, "GL-UNSIGNED-NORMALIZED", (GLenum) GL_UNSIGNED_NORMALIZED, "GL_UNSIGNED_NORMALIZED");
#endif
#if defined(GL_DRAW_FRAMEBUFFER_BINDING)
defconsti(env, "GL-DRAW-FRAMEBUFFER-BINDING", (GLenum) GL_DRAW_FRAMEBUFFER_BINDING, "GL_DRAW_FRAMEBUFFER_BINDING");
#endif
#if defined(GL_READ_FRAMEBUFFER)
defconsti(env, "GL-READ-FRAMEBUFFER", (GLenum) GL_READ_FRAMEBUFFER, "GL_READ_FRAMEBUFFER");
#endif
#if defined(GL_DRAW_FRAMEBUFFER)
defconsti(env, "GL-DRAW-FRAMEBUFFER", (GLenum) GL_DRAW_FRAMEBUFFER, "GL_DRAW_FRAMEBUFFER");
#endif
#if defined(GL_READ_FRAMEBUFFER_BINDING)
defconsti(env, "GL-READ-FRAMEBUFFER-BINDING", (GLenum) GL_READ_FRAMEBUFFER_BINDING, "GL_READ_FRAMEBUFFER_BINDING");
#endif
#if defined(GL_RENDERBUFFER_SAMPLES)
defconsti(env, "GL-RENDERBUFFER-SAMPLES", (GLenum) GL_RENDERBUFFER_SAMPLES, "GL_RENDERBUFFER_SAMPLES");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-LAYER", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER");
#endif
#if defined(GL_MAX_COLOR_ATTACHMENTS)
defconsti(env, "GL-MAX-COLOR-ATTACHMENTS", (GLenum) GL_MAX_COLOR_ATTACHMENTS, "GL_MAX_COLOR_ATTACHMENTS");
#endif
#if defined(GL_COLOR_ATTACHMENT1)
defconsti(env, "GL-COLOR-ATTACHMENT1", (GLenum) GL_COLOR_ATTACHMENT1, "GL_COLOR_ATTACHMENT1");
#endif
#if defined(GL_COLOR_ATTACHMENT2)
defconsti(env, "GL-COLOR-ATTACHMENT2", (GLenum) GL_COLOR_ATTACHMENT2, "GL_COLOR_ATTACHMENT2");
#endif
#if defined(GL_COLOR_ATTACHMENT3)
defconsti(env, "GL-COLOR-ATTACHMENT3", (GLenum) GL_COLOR_ATTACHMENT3, "GL_COLOR_ATTACHMENT3");
#endif
#if defined(GL_COLOR_ATTACHMENT4)
defconsti(env, "GL-COLOR-ATTACHMENT4", (GLenum) GL_COLOR_ATTACHMENT4, "GL_COLOR_ATTACHMENT4");
#endif
#if defined(GL_COLOR_ATTACHMENT5)
defconsti(env, "GL-COLOR-ATTACHMENT5", (GLenum) GL_COLOR_ATTACHMENT5, "GL_COLOR_ATTACHMENT5");
#endif
#if defined(GL_COLOR_ATTACHMENT6)
defconsti(env, "GL-COLOR-ATTACHMENT6", (GLenum) GL_COLOR_ATTACHMENT6, "GL_COLOR_ATTACHMENT6");
#endif
#if defined(GL_COLOR_ATTACHMENT7)
defconsti(env, "GL-COLOR-ATTACHMENT7", (GLenum) GL_COLOR_ATTACHMENT7, "GL_COLOR_ATTACHMENT7");
#endif
#if defined(GL_COLOR_ATTACHMENT8)
defconsti(env, "GL-COLOR-ATTACHMENT8", (GLenum) GL_COLOR_ATTACHMENT8, "GL_COLOR_ATTACHMENT8");
#endif
#if defined(GL_COLOR_ATTACHMENT9)
defconsti(env, "GL-COLOR-ATTACHMENT9", (GLenum) GL_COLOR_ATTACHMENT9, "GL_COLOR_ATTACHMENT9");
#endif
#if defined(GL_COLOR_ATTACHMENT10)
defconsti(env, "GL-COLOR-ATTACHMENT10", (GLenum) GL_COLOR_ATTACHMENT10, "GL_COLOR_ATTACHMENT10");
#endif
#if defined(GL_COLOR_ATTACHMENT11)
defconsti(env, "GL-COLOR-ATTACHMENT11", (GLenum) GL_COLOR_ATTACHMENT11, "GL_COLOR_ATTACHMENT11");
#endif
#if defined(GL_COLOR_ATTACHMENT12)
defconsti(env, "GL-COLOR-ATTACHMENT12", (GLenum) GL_COLOR_ATTACHMENT12, "GL_COLOR_ATTACHMENT12");
#endif
#if defined(GL_COLOR_ATTACHMENT13)
defconsti(env, "GL-COLOR-ATTACHMENT13", (GLenum) GL_COLOR_ATTACHMENT13, "GL_COLOR_ATTACHMENT13");
#endif
#if defined(GL_COLOR_ATTACHMENT14)
defconsti(env, "GL-COLOR-ATTACHMENT14", (GLenum) GL_COLOR_ATTACHMENT14, "GL_COLOR_ATTACHMENT14");
#endif
#if defined(GL_COLOR_ATTACHMENT15)
defconsti(env, "GL-COLOR-ATTACHMENT15", (GLenum) GL_COLOR_ATTACHMENT15, "GL_COLOR_ATTACHMENT15");
#endif
#if defined(GL_COLOR_ATTACHMENT16)
defconsti(env, "GL-COLOR-ATTACHMENT16", (GLenum) GL_COLOR_ATTACHMENT16, "GL_COLOR_ATTACHMENT16");
#endif
#if defined(GL_COLOR_ATTACHMENT17)
defconsti(env, "GL-COLOR-ATTACHMENT17", (GLenum) GL_COLOR_ATTACHMENT17, "GL_COLOR_ATTACHMENT17");
#endif
#if defined(GL_COLOR_ATTACHMENT18)
defconsti(env, "GL-COLOR-ATTACHMENT18", (GLenum) GL_COLOR_ATTACHMENT18, "GL_COLOR_ATTACHMENT18");
#endif
#if defined(GL_COLOR_ATTACHMENT19)
defconsti(env, "GL-COLOR-ATTACHMENT19", (GLenum) GL_COLOR_ATTACHMENT19, "GL_COLOR_ATTACHMENT19");
#endif
#if defined(GL_COLOR_ATTACHMENT20)
defconsti(env, "GL-COLOR-ATTACHMENT20", (GLenum) GL_COLOR_ATTACHMENT20, "GL_COLOR_ATTACHMENT20");
#endif
#if defined(GL_COLOR_ATTACHMENT21)
defconsti(env, "GL-COLOR-ATTACHMENT21", (GLenum) GL_COLOR_ATTACHMENT21, "GL_COLOR_ATTACHMENT21");
#endif
#if defined(GL_COLOR_ATTACHMENT22)
defconsti(env, "GL-COLOR-ATTACHMENT22", (GLenum) GL_COLOR_ATTACHMENT22, "GL_COLOR_ATTACHMENT22");
#endif
#if defined(GL_COLOR_ATTACHMENT23)
defconsti(env, "GL-COLOR-ATTACHMENT23", (GLenum) GL_COLOR_ATTACHMENT23, "GL_COLOR_ATTACHMENT23");
#endif
#if defined(GL_COLOR_ATTACHMENT24)
defconsti(env, "GL-COLOR-ATTACHMENT24", (GLenum) GL_COLOR_ATTACHMENT24, "GL_COLOR_ATTACHMENT24");
#endif
#if defined(GL_COLOR_ATTACHMENT25)
defconsti(env, "GL-COLOR-ATTACHMENT25", (GLenum) GL_COLOR_ATTACHMENT25, "GL_COLOR_ATTACHMENT25");
#endif
#if defined(GL_COLOR_ATTACHMENT26)
defconsti(env, "GL-COLOR-ATTACHMENT26", (GLenum) GL_COLOR_ATTACHMENT26, "GL_COLOR_ATTACHMENT26");
#endif
#if defined(GL_COLOR_ATTACHMENT27)
defconsti(env, "GL-COLOR-ATTACHMENT27", (GLenum) GL_COLOR_ATTACHMENT27, "GL_COLOR_ATTACHMENT27");
#endif
#if defined(GL_COLOR_ATTACHMENT28)
defconsti(env, "GL-COLOR-ATTACHMENT28", (GLenum) GL_COLOR_ATTACHMENT28, "GL_COLOR_ATTACHMENT28");
#endif
#if defined(GL_COLOR_ATTACHMENT29)
defconsti(env, "GL-COLOR-ATTACHMENT29", (GLenum) GL_COLOR_ATTACHMENT29, "GL_COLOR_ATTACHMENT29");
#endif
#if defined(GL_COLOR_ATTACHMENT30)
defconsti(env, "GL-COLOR-ATTACHMENT30", (GLenum) GL_COLOR_ATTACHMENT30, "GL_COLOR_ATTACHMENT30");
#endif
#if defined(GL_COLOR_ATTACHMENT31)
defconsti(env, "GL-COLOR-ATTACHMENT31", (GLenum) GL_COLOR_ATTACHMENT31, "GL_COLOR_ATTACHMENT31");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MULTISAMPLE", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE, "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE");
#endif
#if defined(GL_MAX_SAMPLES)
defconsti(env, "GL-MAX-SAMPLES", (GLenum) GL_MAX_SAMPLES, "GL_MAX_SAMPLES");
#endif
#if defined(GL_HALF_FLOAT)
defconsti(env, "GL-HALF-FLOAT", (GLenum) GL_HALF_FLOAT, "GL_HALF_FLOAT");
#endif
#if defined(GL_MAP_READ_BIT)
defconsti(env, "GL-MAP-READ-BIT", (GLenum) GL_MAP_READ_BIT, "GL_MAP_READ_BIT");
#endif
#if defined(GL_MAP_WRITE_BIT)
defconsti(env, "GL-MAP-WRITE-BIT", (GLenum) GL_MAP_WRITE_BIT, "GL_MAP_WRITE_BIT");
#endif
#if defined(GL_MAP_INVALIDATE_RANGE_BIT)
defconsti(env, "GL-MAP-INVALIDATE-RANGE-BIT", (GLenum) GL_MAP_INVALIDATE_RANGE_BIT, "GL_MAP_INVALIDATE_RANGE_BIT");
#endif
#if defined(GL_MAP_INVALIDATE_BUFFER_BIT)
defconsti(env, "GL-MAP-INVALIDATE-BUFFER-BIT", (GLenum) GL_MAP_INVALIDATE_BUFFER_BIT, "GL_MAP_INVALIDATE_BUFFER_BIT");
#endif
#if defined(GL_MAP_FLUSH_EXPLICIT_BIT)
defconsti(env, "GL-MAP-FLUSH-EXPLICIT-BIT", (GLenum) GL_MAP_FLUSH_EXPLICIT_BIT, "GL_MAP_FLUSH_EXPLICIT_BIT");
#endif
#if defined(GL_MAP_UNSYNCHRONIZED_BIT)
defconsti(env, "GL-MAP-UNSYNCHRONIZED-BIT", (GLenum) GL_MAP_UNSYNCHRONIZED_BIT, "GL_MAP_UNSYNCHRONIZED_BIT");
#endif
#if defined(GL_RG)
defconsti(env, "GL-RG", (GLenum) GL_RG, "GL_RG");
#endif
#if defined(GL_RG_INTEGER)
defconsti(env, "GL-RG-INTEGER", (GLenum) GL_RG_INTEGER, "GL_RG_INTEGER");
#endif
#if defined(GL_R8)
defconsti(env, "GL-R8", (GLenum) GL_R8, "GL_R8");
#endif
#if defined(GL_RG8)
defconsti(env, "GL-RG8", (GLenum) GL_RG8, "GL_RG8");
#endif
#if defined(GL_R16F)
defconsti(env, "GL-R16F", (GLenum) GL_R16F, "GL_R16F");
#endif
#if defined(GL_R32F)
defconsti(env, "GL-R32F", (GLenum) GL_R32F, "GL_R32F");
#endif
#if defined(GL_RG16F)
defconsti(env, "GL-RG16F", (GLenum) GL_RG16F, "GL_RG16F");
#endif
#if defined(GL_RG32F)
defconsti(env, "GL-RG32F", (GLenum) GL_RG32F, "GL_RG32F");
#endif
#if defined(GL_R8I)
defconsti(env, "GL-R8I", (GLenum) GL_R8I, "GL_R8I");
#endif
#if defined(GL_R8UI)
defconsti(env, "GL-R8UI", (GLenum) GL_R8UI, "GL_R8UI");
#endif
#if defined(GL_R16I)
defconsti(env, "GL-R16I", (GLenum) GL_R16I, "GL_R16I");
#endif
#if defined(GL_R16UI)
defconsti(env, "GL-R16UI", (GLenum) GL_R16UI, "GL_R16UI");
#endif
#if defined(GL_R32I)
defconsti(env, "GL-R32I", (GLenum) GL_R32I, "GL_R32I");
#endif
#if defined(GL_R32UI)
defconsti(env, "GL-R32UI", (GLenum) GL_R32UI, "GL_R32UI");
#endif
#if defined(GL_RG8I)
defconsti(env, "GL-RG8I", (GLenum) GL_RG8I, "GL_RG8I");
#endif
#if defined(GL_RG8UI)
defconsti(env, "GL-RG8UI", (GLenum) GL_RG8UI, "GL_RG8UI");
#endif
#if defined(GL_RG16I)
defconsti(env, "GL-RG16I", (GLenum) GL_RG16I, "GL_RG16I");
#endif
#if defined(GL_RG16UI)
defconsti(env, "GL-RG16UI", (GLenum) GL_RG16UI, "GL_RG16UI");
#endif
#if defined(GL_RG32I)
defconsti(env, "GL-RG32I", (GLenum) GL_RG32I, "GL_RG32I");
#endif
#if defined(GL_RG32UI)
defconsti(env, "GL-RG32UI", (GLenum) GL_RG32UI, "GL_RG32UI");
#endif
#if defined(GL_VERTEX_ARRAY_BINDING)
defconsti(env, "GL-VERTEX-ARRAY-BINDING", (GLenum) GL_VERTEX_ARRAY_BINDING, "GL_VERTEX_ARRAY_BINDING");
#endif
#if defined(GL_R8_SNORM)
defconsti(env, "GL-R8-SNORM", (GLenum) GL_R8_SNORM, "GL_R8_SNORM");
#endif
#if defined(GL_RG8_SNORM)
defconsti(env, "GL-RG8-SNORM", (GLenum) GL_RG8_SNORM, "GL_RG8_SNORM");
#endif
#if defined(GL_RGB8_SNORM)
defconsti(env, "GL-RGB8-SNORM", (GLenum) GL_RGB8_SNORM, "GL_RGB8_SNORM");
#endif
#if defined(GL_RGBA8_SNORM)
defconsti(env, "GL-RGBA8-SNORM", (GLenum) GL_RGBA8_SNORM, "GL_RGBA8_SNORM");
#endif
#if defined(GL_SIGNED_NORMALIZED)
defconsti(env, "GL-SIGNED-NORMALIZED", (GLenum) GL_SIGNED_NORMALIZED, "GL_SIGNED_NORMALIZED");
#endif
#if defined(GL_PRIMITIVE_RESTART_FIXED_INDEX)
defconsti(env, "GL-PRIMITIVE-RESTART-FIXED-INDEX", (GLenum) GL_PRIMITIVE_RESTART_FIXED_INDEX, "GL_PRIMITIVE_RESTART_FIXED_INDEX");
#endif
#if defined(GL_COPY_READ_BUFFER)
defconsti(env, "GL-COPY-READ-BUFFER", (GLenum) GL_COPY_READ_BUFFER, "GL_COPY_READ_BUFFER");
#endif
#if defined(GL_COPY_WRITE_BUFFER)
defconsti(env, "GL-COPY-WRITE-BUFFER", (GLenum) GL_COPY_WRITE_BUFFER, "GL_COPY_WRITE_BUFFER");
#endif
#if defined(GL_COPY_READ_BUFFER_BINDING)
defconsti(env, "GL-COPY-READ-BUFFER-BINDING", (GLenum) GL_COPY_READ_BUFFER_BINDING, "GL_COPY_READ_BUFFER_BINDING");
#endif
#if defined(GL_COPY_WRITE_BUFFER_BINDING)
defconsti(env, "GL-COPY-WRITE-BUFFER-BINDING", (GLenum) GL_COPY_WRITE_BUFFER_BINDING, "GL_COPY_WRITE_BUFFER_BINDING");
#endif
#if defined(GL_UNIFORM_BUFFER)
defconsti(env, "GL-UNIFORM-BUFFER", (GLenum) GL_UNIFORM_BUFFER, "GL_UNIFORM_BUFFER");
#endif
#if defined(GL_UNIFORM_BUFFER_BINDING)
defconsti(env, "GL-UNIFORM-BUFFER-BINDING", (GLenum) GL_UNIFORM_BUFFER_BINDING, "GL_UNIFORM_BUFFER_BINDING");
#endif
#if defined(GL_UNIFORM_BUFFER_START)
defconsti(env, "GL-UNIFORM-BUFFER-START", (GLenum) GL_UNIFORM_BUFFER_START, "GL_UNIFORM_BUFFER_START");
#endif
#if defined(GL_UNIFORM_BUFFER_SIZE)
defconsti(env, "GL-UNIFORM-BUFFER-SIZE", (GLenum) GL_UNIFORM_BUFFER_SIZE, "GL_UNIFORM_BUFFER_SIZE");
#endif
#if defined(GL_MAX_VERTEX_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-VERTEX-UNIFORM-BLOCKS", (GLenum) GL_MAX_VERTEX_UNIFORM_BLOCKS, "GL_MAX_VERTEX_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_FRAGMENT_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-FRAGMENT-UNIFORM-BLOCKS", (GLenum) GL_MAX_FRAGMENT_UNIFORM_BLOCKS, "GL_MAX_FRAGMENT_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_COMBINED_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-COMBINED-UNIFORM-BLOCKS", (GLenum) GL_MAX_COMBINED_UNIFORM_BLOCKS, "GL_MAX_COMBINED_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_UNIFORM_BUFFER_BINDINGS)
defconsti(env, "GL-MAX-UNIFORM-BUFFER-BINDINGS", (GLenum) GL_MAX_UNIFORM_BUFFER_BINDINGS, "GL_MAX_UNIFORM_BUFFER_BINDINGS");
#endif
#if defined(GL_MAX_UNIFORM_BLOCK_SIZE)
defconsti(env, "GL-MAX-UNIFORM-BLOCK-SIZE", (GLenum) GL_MAX_UNIFORM_BLOCK_SIZE, "GL_MAX_UNIFORM_BLOCK_SIZE");
#endif
#if defined(GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-VERTEX-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-FRAGMENT-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS");
#endif
#if defined(GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT)
defconsti(env, "GL-UNIFORM-BUFFER-OFFSET-ALIGNMENT", (GLenum) GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT, "GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT");
#endif
#if defined(GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH)
defconsti(env, "GL-ACTIVE-UNIFORM-BLOCK-MAX-NAME-LENGTH", (GLenum) GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH, "GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH");
#endif
#if defined(GL_ACTIVE_UNIFORM_BLOCKS)
defconsti(env, "GL-ACTIVE-UNIFORM-BLOCKS", (GLenum) GL_ACTIVE_UNIFORM_BLOCKS, "GL_ACTIVE_UNIFORM_BLOCKS");
#endif
#if defined(GL_UNIFORM_TYPE)
defconsti(env, "GL-UNIFORM-TYPE", (GLenum) GL_UNIFORM_TYPE, "GL_UNIFORM_TYPE");
#endif
#if defined(GL_UNIFORM_SIZE)
defconsti(env, "GL-UNIFORM-SIZE", (GLenum) GL_UNIFORM_SIZE, "GL_UNIFORM_SIZE");
#endif
#if defined(GL_UNIFORM_NAME_LENGTH)
defconsti(env, "GL-UNIFORM-NAME-LENGTH", (GLenum) GL_UNIFORM_NAME_LENGTH, "GL_UNIFORM_NAME_LENGTH");
#endif
#if defined(GL_UNIFORM_BLOCK_INDEX)
defconsti(env, "GL-UNIFORM-BLOCK-INDEX", (GLenum) GL_UNIFORM_BLOCK_INDEX, "GL_UNIFORM_BLOCK_INDEX");
#endif
#if defined(GL_UNIFORM_OFFSET)
defconsti(env, "GL-UNIFORM-OFFSET", (GLenum) GL_UNIFORM_OFFSET, "GL_UNIFORM_OFFSET");
#endif
#if defined(GL_UNIFORM_ARRAY_STRIDE)
defconsti(env, "GL-UNIFORM-ARRAY-STRIDE", (GLenum) GL_UNIFORM_ARRAY_STRIDE, "GL_UNIFORM_ARRAY_STRIDE");
#endif
#if defined(GL_UNIFORM_MATRIX_STRIDE)
defconsti(env, "GL-UNIFORM-MATRIX-STRIDE", (GLenum) GL_UNIFORM_MATRIX_STRIDE, "GL_UNIFORM_MATRIX_STRIDE");
#endif
#if defined(GL_UNIFORM_IS_ROW_MAJOR)
defconsti(env, "GL-UNIFORM-IS-ROW-MAJOR", (GLenum) GL_UNIFORM_IS_ROW_MAJOR, "GL_UNIFORM_IS_ROW_MAJOR");
#endif
#if defined(GL_UNIFORM_BLOCK_BINDING)
defconsti(env, "GL-UNIFORM-BLOCK-BINDING", (GLenum) GL_UNIFORM_BLOCK_BINDING, "GL_UNIFORM_BLOCK_BINDING");
#endif
#if defined(GL_UNIFORM_BLOCK_DATA_SIZE)
defconsti(env, "GL-UNIFORM-BLOCK-DATA-SIZE", (GLenum) GL_UNIFORM_BLOCK_DATA_SIZE, "GL_UNIFORM_BLOCK_DATA_SIZE");
#endif
#if defined(GL_UNIFORM_BLOCK_NAME_LENGTH)
defconsti(env, "GL-UNIFORM-BLOCK-NAME-LENGTH", (GLenum) GL_UNIFORM_BLOCK_NAME_LENGTH, "GL_UNIFORM_BLOCK_NAME_LENGTH");
#endif
#if defined(GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS)
defconsti(env, "GL-UNIFORM-BLOCK-ACTIVE-UNIFORMS", (GLenum) GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS, "GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS");
#endif
#if defined(GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES)
defconsti(env, "GL-UNIFORM-BLOCK-ACTIVE-UNIFORM-INDICES", (GLenum) GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES, "GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-VERTEX-SHADER", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER, "GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-FRAGMENT-SHADER", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER, "GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER");
#endif
#if defined(GL_INVALID_INDEX)
defconsti(env, "GL-INVALID-INDEX", (GLenum) GL_INVALID_INDEX, "GL_INVALID_INDEX");
#endif
#if defined(GL_MAX_VERTEX_OUTPUT_COMPONENTS)
defconsti(env, "GL-MAX-VERTEX-OUTPUT-COMPONENTS", (GLenum) GL_MAX_VERTEX_OUTPUT_COMPONENTS, "GL_MAX_VERTEX_OUTPUT_COMPONENTS");
#endif
#if defined(GL_MAX_FRAGMENT_INPUT_COMPONENTS)
defconsti(env, "GL-MAX-FRAGMENT-INPUT-COMPONENTS", (GLenum) GL_MAX_FRAGMENT_INPUT_COMPONENTS, "GL_MAX_FRAGMENT_INPUT_COMPONENTS");
#endif
#if defined(GL_MAX_SERVER_WAIT_TIMEOUT)
defconsti(env, "GL-MAX-SERVER-WAIT-TIMEOUT", (GLenum) GL_MAX_SERVER_WAIT_TIMEOUT, "GL_MAX_SERVER_WAIT_TIMEOUT");
#endif
#if defined(GL_OBJECT_TYPE)
defconsti(env, "GL-OBJECT-TYPE", (GLenum) GL_OBJECT_TYPE, "GL_OBJECT_TYPE");
#endif
#if defined(GL_SYNC_CONDITION)
defconsti(env, "GL-SYNC-CONDITION", (GLenum) GL_SYNC_CONDITION, "GL_SYNC_CONDITION");
#endif
#if defined(GL_SYNC_STATUS)
defconsti(env, "GL-SYNC-STATUS", (GLenum) GL_SYNC_STATUS, "GL_SYNC_STATUS");
#endif
#if defined(GL_SYNC_FLAGS)
defconsti(env, "GL-SYNC-FLAGS", (GLenum) GL_SYNC_FLAGS, "GL_SYNC_FLAGS");
#endif
#if defined(GL_SYNC_FENCE)
defconsti(env, "GL-SYNC-FENCE", (GLenum) GL_SYNC_FENCE, "GL_SYNC_FENCE");
#endif
#if defined(GL_SYNC_GPU_COMMANDS_COMPLETE)
defconsti(env, "GL-SYNC-GPU-COMMANDS-COMPLETE", (GLenum) GL_SYNC_GPU_COMMANDS_COMPLETE, "GL_SYNC_GPU_COMMANDS_COMPLETE");
#endif
#if defined(GL_UNSIGNALED)
defconsti(env, "GL-UNSIGNALED", (GLenum) GL_UNSIGNALED, "GL_UNSIGNALED");
#endif
#if defined(GL_SIGNALED)
defconsti(env, "GL-SIGNALED", (GLenum) GL_SIGNALED, "GL_SIGNALED");
#endif
#if defined(GL_ALREADY_SIGNALED)
defconsti(env, "GL-ALREADY-SIGNALED", (GLenum) GL_ALREADY_SIGNALED, "GL_ALREADY_SIGNALED");
#endif
#if defined(GL_TIMEOUT_EXPIRED)
defconsti(env, "GL-TIMEOUT-EXPIRED", (GLenum) GL_TIMEOUT_EXPIRED, "GL_TIMEOUT_EXPIRED");
#endif
#if defined(GL_CONDITION_SATISFIED)
defconsti(env, "GL-CONDITION-SATISFIED", (GLenum) GL_CONDITION_SATISFIED, "GL_CONDITION_SATISFIED");
#endif
#if defined(GL_WAIT_FAILED)
defconsti(env, "GL-WAIT-FAILED", (GLenum) GL_WAIT_FAILED, "GL_WAIT_FAILED");
#endif
#if defined(GL_SYNC_FLUSH_COMMANDS_BIT)
defconsti(env, "GL-SYNC-FLUSH-COMMANDS-BIT", (GLenum) GL_SYNC_FLUSH_COMMANDS_BIT, "GL_SYNC_FLUSH_COMMANDS_BIT");
#endif
#if defined(GL_TIMEOUT_IGNORED)
defconsti(env, "GL-TIMEOUT-IGNORED", (GLenum) GL_TIMEOUT_IGNORED, "GL_TIMEOUT_IGNORED");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_DIVISOR)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-DIVISOR", (GLenum) GL_VERTEX_ATTRIB_ARRAY_DIVISOR, "GL_VERTEX_ATTRIB_ARRAY_DIVISOR");
#endif
#if defined(GL_ANY_SAMPLES_PASSED)
defconsti(env, "GL-ANY-SAMPLES-PASSED", (GLenum) GL_ANY_SAMPLES_PASSED, "GL_ANY_SAMPLES_PASSED");
#endif
#if defined(GL_ANY_SAMPLES_PASSED_CONSERVATIVE)
defconsti(env, "GL-ANY-SAMPLES-PASSED-CONSERVATIVE", (GLenum) GL_ANY_SAMPLES_PASSED_CONSERVATIVE, "GL_ANY_SAMPLES_PASSED_CONSERVATIVE");
#endif
#if defined(GL_SAMPLER_BINDING)
defconsti(env, "GL-SAMPLER-BINDING", (GLenum) GL_SAMPLER_BINDING, "GL_SAMPLER_BINDING");
#endif
#if defined(GL_RGB10_A2UI)
defconsti(env, "GL-RGB10-A2UI", (GLenum) GL_RGB10_A2UI, "GL_RGB10_A2UI");
#endif
#if defined(GL_TEXTURE_SWIZZLE_R)
defconsti(env, "GL-TEXTURE-SWIZZLE-R", (GLenum) GL_TEXTURE_SWIZZLE_R, "GL_TEXTURE_SWIZZLE_R");
#endif
#if defined(GL_TEXTURE_SWIZZLE_G)
defconsti(env, "GL-TEXTURE-SWIZZLE-G", (GLenum) GL_TEXTURE_SWIZZLE_G, "GL_TEXTURE_SWIZZLE_G");
#endif
#if defined(GL_TEXTURE_SWIZZLE_B)
defconsti(env, "GL-TEXTURE-SWIZZLE-B", (GLenum) GL_TEXTURE_SWIZZLE_B, "GL_TEXTURE_SWIZZLE_B");
#endif
#if defined(GL_TEXTURE_SWIZZLE_A)
defconsti(env, "GL-TEXTURE-SWIZZLE-A", (GLenum) GL_TEXTURE_SWIZZLE_A, "GL_TEXTURE_SWIZZLE_A");
#endif
#if defined(GL_GREEN)
defconsti(env, "GL-GREEN", (GLenum) GL_GREEN, "GL_GREEN");
#endif
#if defined(GL_BLUE)
defconsti(env, "GL-BLUE", (GLenum) GL_BLUE, "GL_BLUE");
#endif
#if defined(GL_INT_2_10_10_10_REV)
defconsti(env, "GL-INT-2-10-10-10-REV", (GLenum) GL_INT_2_10_10_10_REV, "GL_INT_2_10_10_10_REV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK)
defconsti(env, "GL-TRANSFORM-FEEDBACK", (GLenum) GL_TRANSFORM_FEEDBACK, "GL_TRANSFORM_FEEDBACK");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_PAUSED)
defconsti(env, "GL-TRANSFORM-FEEDBACK-PAUSED", (GLenum) GL_TRANSFORM_FEEDBACK_PAUSED, "GL_TRANSFORM_FEEDBACK_PAUSED");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_ACTIVE)
defconsti(env, "GL-TRANSFORM-FEEDBACK-ACTIVE", (GLenum) GL_TRANSFORM_FEEDBACK_ACTIVE, "GL_TRANSFORM_FEEDBACK_ACTIVE");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BINDING)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BINDING", (GLenum) GL_TRANSFORM_FEEDBACK_BINDING, "GL_TRANSFORM_FEEDBACK_BINDING");
#endif
#if defined(GL_PROGRAM_BINARY_RETRIEVABLE_HINT)
defconsti(env, "GL-PROGRAM-BINARY-RETRIEVABLE-HINT", (GLenum) GL_PROGRAM_BINARY_RETRIEVABLE_HINT, "GL_PROGRAM_BINARY_RETRIEVABLE_HINT");
#endif
#if defined(GL_PROGRAM_BINARY_LENGTH)
defconsti(env, "GL-PROGRAM-BINARY-LENGTH", (GLenum) GL_PROGRAM_BINARY_LENGTH, "GL_PROGRAM_BINARY_LENGTH");
#endif
#if defined(GL_NUM_PROGRAM_BINARY_FORMATS)
defconsti(env, "GL-NUM-PROGRAM-BINARY-FORMATS", (GLenum) GL_NUM_PROGRAM_BINARY_FORMATS, "GL_NUM_PROGRAM_BINARY_FORMATS");
#endif
#if defined(GL_PROGRAM_BINARY_FORMATS)
defconsti(env, "GL-PROGRAM-BINARY-FORMATS", (GLenum) GL_PROGRAM_BINARY_FORMATS, "GL_PROGRAM_BINARY_FORMATS");
#endif
#if defined(GL_COMPRESSED_R11_EAC)
defconsti(env, "GL-COMPRESSED-R11-EAC", (GLenum) GL_COMPRESSED_R11_EAC, "GL_COMPRESSED_R11_EAC");
#endif
#if defined(GL_COMPRESSED_SIGNED_R11_EAC)
defconsti(env, "GL-COMPRESSED-SIGNED-R11-EAC", (GLenum) GL_COMPRESSED_SIGNED_R11_EAC, "GL_COMPRESSED_SIGNED_R11_EAC");
#endif
#if defined(GL_COMPRESSED_RG11_EAC)
defconsti(env, "GL-COMPRESSED-RG11-EAC", (GLenum) GL_COMPRESSED_RG11_EAC, "GL_COMPRESSED_RG11_EAC");
#endif
#if defined(GL_COMPRESSED_SIGNED_RG11_EAC)
defconsti(env, "GL-COMPRESSED-SIGNED-RG11-EAC", (GLenum) GL_COMPRESSED_SIGNED_RG11_EAC, "GL_COMPRESSED_SIGNED_RG11_EAC");
#endif
#if defined(GL_COMPRESSED_RGB8_ETC2)
defconsti(env, "GL-COMPRESSED-RGB8-ETC2", (GLenum) GL_COMPRESSED_RGB8_ETC2, "GL_COMPRESSED_RGB8_ETC2");
#endif
#if defined(GL_COMPRESSED_SRGB8_ETC2)
defconsti(env, "GL-COMPRESSED-SRGB8-ETC2", (GLenum) GL_COMPRESSED_SRGB8_ETC2, "GL_COMPRESSED_SRGB8_ETC2");
#endif
#if defined(GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2)
defconsti(env, "GL-COMPRESSED-RGB8-PUNCHTHROUGH-ALPHA1-ETC2", (GLenum) GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2, "GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2");
#endif
#if defined(GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2)
defconsti(env, "GL-COMPRESSED-SRGB8-PUNCHTHROUGH-ALPHA1-ETC2", (GLenum) GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2, "GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2");
#endif
#if defined(GL_COMPRESSED_RGBA8_ETC2_EAC)
defconsti(env, "GL-COMPRESSED-RGBA8-ETC2-EAC", (GLenum) GL_COMPRESSED_RGBA8_ETC2_EAC, "GL_COMPRESSED_RGBA8_ETC2_EAC");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ETC2-EAC", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC, "GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC");
#endif
#if defined(GL_TEXTURE_IMMUTABLE_FORMAT)
defconsti(env, "GL-TEXTURE-IMMUTABLE-FORMAT", (GLenum) GL_TEXTURE_IMMUTABLE_FORMAT, "GL_TEXTURE_IMMUTABLE_FORMAT");
#endif
#if defined(GL_MAX_ELEMENT_INDEX)
defconsti(env, "GL-MAX-ELEMENT-INDEX", (GLenum) GL_MAX_ELEMENT_INDEX, "GL_MAX_ELEMENT_INDEX");
#endif
#if defined(GL_NUM_SAMPLE_COUNTS)
defconsti(env, "GL-NUM-SAMPLE-COUNTS", (GLenum) GL_NUM_SAMPLE_COUNTS, "GL_NUM_SAMPLE_COUNTS");
#endif
#if defined(GL_TEXTURE_IMMUTABLE_LEVELS)
defconsti(env, "GL-TEXTURE-IMMUTABLE-LEVELS", (GLenum) GL_TEXTURE_IMMUTABLE_LEVELS, "GL_TEXTURE_IMMUTABLE_LEVELS");
#endif
#if defined(GL_COMPUTE_SHADER)
defconsti(env, "GL-COMPUTE-SHADER", (GLenum) GL_COMPUTE_SHADER, "GL_COMPUTE_SHADER");
#endif
#if defined(GL_MAX_COMPUTE_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-COMPUTE-UNIFORM-BLOCKS", (GLenum) GL_MAX_COMPUTE_UNIFORM_BLOCKS, "GL_MAX_COMPUTE_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-COMPUTE-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS, "GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_COMPUTE_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-COMPUTE-IMAGE-UNIFORMS", (GLenum) GL_MAX_COMPUTE_IMAGE_UNIFORMS, "GL_MAX_COMPUTE_IMAGE_UNIFORMS");
#endif
#if defined(GL_MAX_COMPUTE_SHARED_MEMORY_SIZE)
defconsti(env, "GL-MAX-COMPUTE-SHARED-MEMORY-SIZE", (GLenum) GL_MAX_COMPUTE_SHARED_MEMORY_SIZE, "GL_MAX_COMPUTE_SHARED_MEMORY_SIZE");
#endif
#if defined(GL_MAX_COMPUTE_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMPUTE-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMPUTE_UNIFORM_COMPONENTS, "GL_MAX_COMPUTE_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-COMPUTE-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS, "GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_COMPUTE_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-COMPUTE-ATOMIC-COUNTERS", (GLenum) GL_MAX_COMPUTE_ATOMIC_COUNTERS, "GL_MAX_COMPUTE_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-COMPUTE-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS)
defconsti(env, "GL-MAX-COMPUTE-WORK-GROUP-INVOCATIONS", (GLenum) GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS, "GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS");
#endif
#if defined(GL_MAX_COMPUTE_WORK_GROUP_COUNT)
defconsti(env, "GL-MAX-COMPUTE-WORK-GROUP-COUNT", (GLenum) GL_MAX_COMPUTE_WORK_GROUP_COUNT, "GL_MAX_COMPUTE_WORK_GROUP_COUNT");
#endif
#if defined(GL_MAX_COMPUTE_WORK_GROUP_SIZE)
defconsti(env, "GL-MAX-COMPUTE-WORK-GROUP-SIZE", (GLenum) GL_MAX_COMPUTE_WORK_GROUP_SIZE, "GL_MAX_COMPUTE_WORK_GROUP_SIZE");
#endif
#if defined(GL_COMPUTE_WORK_GROUP_SIZE)
defconsti(env, "GL-COMPUTE-WORK-GROUP-SIZE", (GLenum) GL_COMPUTE_WORK_GROUP_SIZE, "GL_COMPUTE_WORK_GROUP_SIZE");
#endif
#if defined(GL_DISPATCH_INDIRECT_BUFFER)
defconsti(env, "GL-DISPATCH-INDIRECT-BUFFER", (GLenum) GL_DISPATCH_INDIRECT_BUFFER, "GL_DISPATCH_INDIRECT_BUFFER");
#endif
#if defined(GL_DISPATCH_INDIRECT_BUFFER_BINDING)
defconsti(env, "GL-DISPATCH-INDIRECT-BUFFER-BINDING", (GLenum) GL_DISPATCH_INDIRECT_BUFFER_BINDING, "GL_DISPATCH_INDIRECT_BUFFER_BINDING");
#endif
#if defined(GL_COMPUTE_SHADER_BIT)
defconsti(env, "GL-COMPUTE-SHADER-BIT", (GLenum) GL_COMPUTE_SHADER_BIT, "GL_COMPUTE_SHADER_BIT");
#endif
#if defined(GL_DRAW_INDIRECT_BUFFER)
defconsti(env, "GL-DRAW-INDIRECT-BUFFER", (GLenum) GL_DRAW_INDIRECT_BUFFER, "GL_DRAW_INDIRECT_BUFFER");
#endif
#if defined(GL_DRAW_INDIRECT_BUFFER_BINDING)
defconsti(env, "GL-DRAW-INDIRECT-BUFFER-BINDING", (GLenum) GL_DRAW_INDIRECT_BUFFER_BINDING, "GL_DRAW_INDIRECT_BUFFER_BINDING");
#endif
#if defined(GL_MAX_UNIFORM_LOCATIONS)
defconsti(env, "GL-MAX-UNIFORM-LOCATIONS", (GLenum) GL_MAX_UNIFORM_LOCATIONS, "GL_MAX_UNIFORM_LOCATIONS");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_WIDTH)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-WIDTH", (GLenum) GL_FRAMEBUFFER_DEFAULT_WIDTH, "GL_FRAMEBUFFER_DEFAULT_WIDTH");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_HEIGHT)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-HEIGHT", (GLenum) GL_FRAMEBUFFER_DEFAULT_HEIGHT, "GL_FRAMEBUFFER_DEFAULT_HEIGHT");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_SAMPLES)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-SAMPLES", (GLenum) GL_FRAMEBUFFER_DEFAULT_SAMPLES, "GL_FRAMEBUFFER_DEFAULT_SAMPLES");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-FIXED-SAMPLE-LOCATIONS", (GLenum) GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS, "GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS");
#endif
#if defined(GL_MAX_FRAMEBUFFER_WIDTH)
defconsti(env, "GL-MAX-FRAMEBUFFER-WIDTH", (GLenum) GL_MAX_FRAMEBUFFER_WIDTH, "GL_MAX_FRAMEBUFFER_WIDTH");
#endif
#if defined(GL_MAX_FRAMEBUFFER_HEIGHT)
defconsti(env, "GL-MAX-FRAMEBUFFER-HEIGHT", (GLenum) GL_MAX_FRAMEBUFFER_HEIGHT, "GL_MAX_FRAMEBUFFER_HEIGHT");
#endif
#if defined(GL_MAX_FRAMEBUFFER_SAMPLES)
defconsti(env, "GL-MAX-FRAMEBUFFER-SAMPLES", (GLenum) GL_MAX_FRAMEBUFFER_SAMPLES, "GL_MAX_FRAMEBUFFER_SAMPLES");
#endif
#if defined(GL_UNIFORM)
defconsti(env, "GL-UNIFORM", (GLenum) GL_UNIFORM, "GL_UNIFORM");
#endif
#if defined(GL_UNIFORM_BLOCK)
defconsti(env, "GL-UNIFORM-BLOCK", (GLenum) GL_UNIFORM_BLOCK, "GL_UNIFORM_BLOCK");
#endif
#if defined(GL_PROGRAM_INPUT)
defconsti(env, "GL-PROGRAM-INPUT", (GLenum) GL_PROGRAM_INPUT, "GL_PROGRAM_INPUT");
#endif
#if defined(GL_PROGRAM_OUTPUT)
defconsti(env, "GL-PROGRAM-OUTPUT", (GLenum) GL_PROGRAM_OUTPUT, "GL_PROGRAM_OUTPUT");
#endif
#if defined(GL_BUFFER_VARIABLE)
defconsti(env, "GL-BUFFER-VARIABLE", (GLenum) GL_BUFFER_VARIABLE, "GL_BUFFER_VARIABLE");
#endif
#if defined(GL_SHADER_STORAGE_BLOCK)
defconsti(env, "GL-SHADER-STORAGE-BLOCK", (GLenum) GL_SHADER_STORAGE_BLOCK, "GL_SHADER_STORAGE_BLOCK");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER", (GLenum) GL_ATOMIC_COUNTER_BUFFER, "GL_ATOMIC_COUNTER_BUFFER");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_VARYING)
defconsti(env, "GL-TRANSFORM-FEEDBACK-VARYING", (GLenum) GL_TRANSFORM_FEEDBACK_VARYING, "GL_TRANSFORM_FEEDBACK_VARYING");
#endif
#if defined(GL_ACTIVE_RESOURCES)
defconsti(env, "GL-ACTIVE-RESOURCES", (GLenum) GL_ACTIVE_RESOURCES, "GL_ACTIVE_RESOURCES");
#endif
#if defined(GL_MAX_NAME_LENGTH)
defconsti(env, "GL-MAX-NAME-LENGTH", (GLenum) GL_MAX_NAME_LENGTH, "GL_MAX_NAME_LENGTH");
#endif
#if defined(GL_MAX_NUM_ACTIVE_VARIABLES)
defconsti(env, "GL-MAX-NUM-ACTIVE-VARIABLES", (GLenum) GL_MAX_NUM_ACTIVE_VARIABLES, "GL_MAX_NUM_ACTIVE_VARIABLES");
#endif
#if defined(GL_NAME_LENGTH)
defconsti(env, "GL-NAME-LENGTH", (GLenum) GL_NAME_LENGTH, "GL_NAME_LENGTH");
#endif
#if defined(GL_TYPE)
defconsti(env, "GL-TYPE", (GLenum) GL_TYPE, "GL_TYPE");
#endif
#if defined(GL_ARRAY_SIZE)
defconsti(env, "GL-ARRAY-SIZE", (GLenum) GL_ARRAY_SIZE, "GL_ARRAY_SIZE");
#endif
#if defined(GL_OFFSET)
defconsti(env, "GL-OFFSET", (GLenum) GL_OFFSET, "GL_OFFSET");
#endif
#if defined(GL_BLOCK_INDEX)
defconsti(env, "GL-BLOCK-INDEX", (GLenum) GL_BLOCK_INDEX, "GL_BLOCK_INDEX");
#endif
#if defined(GL_ARRAY_STRIDE)
defconsti(env, "GL-ARRAY-STRIDE", (GLenum) GL_ARRAY_STRIDE, "GL_ARRAY_STRIDE");
#endif
#if defined(GL_MATRIX_STRIDE)
defconsti(env, "GL-MATRIX-STRIDE", (GLenum) GL_MATRIX_STRIDE, "GL_MATRIX_STRIDE");
#endif
#if defined(GL_IS_ROW_MAJOR)
defconsti(env, "GL-IS-ROW-MAJOR", (GLenum) GL_IS_ROW_MAJOR, "GL_IS_ROW_MAJOR");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_INDEX)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-INDEX", (GLenum) GL_ATOMIC_COUNTER_BUFFER_INDEX, "GL_ATOMIC_COUNTER_BUFFER_INDEX");
#endif
#if defined(GL_BUFFER_BINDING)
defconsti(env, "GL-BUFFER-BINDING", (GLenum) GL_BUFFER_BINDING, "GL_BUFFER_BINDING");
#endif
#if defined(GL_BUFFER_DATA_SIZE)
defconsti(env, "GL-BUFFER-DATA-SIZE", (GLenum) GL_BUFFER_DATA_SIZE, "GL_BUFFER_DATA_SIZE");
#endif
#if defined(GL_NUM_ACTIVE_VARIABLES)
defconsti(env, "GL-NUM-ACTIVE-VARIABLES", (GLenum) GL_NUM_ACTIVE_VARIABLES, "GL_NUM_ACTIVE_VARIABLES");
#endif
#if defined(GL_ACTIVE_VARIABLES)
defconsti(env, "GL-ACTIVE-VARIABLES", (GLenum) GL_ACTIVE_VARIABLES, "GL_ACTIVE_VARIABLES");
#endif
#if defined(GL_REFERENCED_BY_VERTEX_SHADER)
defconsti(env, "GL-REFERENCED-BY-VERTEX-SHADER", (GLenum) GL_REFERENCED_BY_VERTEX_SHADER, "GL_REFERENCED_BY_VERTEX_SHADER");
#endif
#if defined(GL_REFERENCED_BY_FRAGMENT_SHADER)
defconsti(env, "GL-REFERENCED-BY-FRAGMENT-SHADER", (GLenum) GL_REFERENCED_BY_FRAGMENT_SHADER, "GL_REFERENCED_BY_FRAGMENT_SHADER");
#endif
#if defined(GL_REFERENCED_BY_COMPUTE_SHADER)
defconsti(env, "GL-REFERENCED-BY-COMPUTE-SHADER", (GLenum) GL_REFERENCED_BY_COMPUTE_SHADER, "GL_REFERENCED_BY_COMPUTE_SHADER");
#endif
#if defined(GL_TOP_LEVEL_ARRAY_SIZE)
defconsti(env, "GL-TOP-LEVEL-ARRAY-SIZE", (GLenum) GL_TOP_LEVEL_ARRAY_SIZE, "GL_TOP_LEVEL_ARRAY_SIZE");
#endif
#if defined(GL_TOP_LEVEL_ARRAY_STRIDE)
defconsti(env, "GL-TOP-LEVEL-ARRAY-STRIDE", (GLenum) GL_TOP_LEVEL_ARRAY_STRIDE, "GL_TOP_LEVEL_ARRAY_STRIDE");
#endif
#if defined(GL_LOCATION)
defconsti(env, "GL-LOCATION", (GLenum) GL_LOCATION, "GL_LOCATION");
#endif
#if defined(GL_VERTEX_SHADER_BIT)
defconsti(env, "GL-VERTEX-SHADER-BIT", (GLenum) GL_VERTEX_SHADER_BIT, "GL_VERTEX_SHADER_BIT");
#endif
#if defined(GL_FRAGMENT_SHADER_BIT)
defconsti(env, "GL-FRAGMENT-SHADER-BIT", (GLenum) GL_FRAGMENT_SHADER_BIT, "GL_FRAGMENT_SHADER_BIT");
#endif
#if defined(GL_ALL_SHADER_BITS)
defconsti(env, "GL-ALL-SHADER-BITS", (GLenum) GL_ALL_SHADER_BITS, "GL_ALL_SHADER_BITS");
#endif
#if defined(GL_PROGRAM_SEPARABLE)
defconsti(env, "GL-PROGRAM-SEPARABLE", (GLenum) GL_PROGRAM_SEPARABLE, "GL_PROGRAM_SEPARABLE");
#endif
#if defined(GL_ACTIVE_PROGRAM)
defconsti(env, "GL-ACTIVE-PROGRAM", (GLenum) GL_ACTIVE_PROGRAM, "GL_ACTIVE_PROGRAM");
#endif
#if defined(GL_PROGRAM_PIPELINE_BINDING)
defconsti(env, "GL-PROGRAM-PIPELINE-BINDING", (GLenum) GL_PROGRAM_PIPELINE_BINDING, "GL_PROGRAM_PIPELINE_BINDING");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER", (GLenum) GL_ATOMIC_COUNTER_BUFFER, "GL_ATOMIC_COUNTER_BUFFER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_BINDING)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-BINDING", (GLenum) GL_ATOMIC_COUNTER_BUFFER_BINDING, "GL_ATOMIC_COUNTER_BUFFER_BINDING");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_START)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-START", (GLenum) GL_ATOMIC_COUNTER_BUFFER_START, "GL_ATOMIC_COUNTER_BUFFER_START");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_SIZE)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-SIZE", (GLenum) GL_ATOMIC_COUNTER_BUFFER_SIZE, "GL_ATOMIC_COUNTER_BUFFER_SIZE");
#endif
#if defined(GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-VERTEX-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS, "GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-FRAGMENT-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS, "GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-COMPUTE-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS, "GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-COMBINED-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS, "GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_VERTEX_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-VERTEX-ATOMIC-COUNTERS", (GLenum) GL_MAX_VERTEX_ATOMIC_COUNTERS, "GL_MAX_VERTEX_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_FRAGMENT_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-FRAGMENT-ATOMIC-COUNTERS", (GLenum) GL_MAX_FRAGMENT_ATOMIC_COUNTERS, "GL_MAX_FRAGMENT_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_COMPUTE_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-COMPUTE-ATOMIC-COUNTERS", (GLenum) GL_MAX_COMPUTE_ATOMIC_COUNTERS, "GL_MAX_COMPUTE_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_COMBINED_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-COMBINED-ATOMIC-COUNTERS", (GLenum) GL_MAX_COMBINED_ATOMIC_COUNTERS, "GL_MAX_COMBINED_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE)
defconsti(env, "GL-MAX-ATOMIC-COUNTER-BUFFER-SIZE", (GLenum) GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE, "GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE");
#endif
#if defined(GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS)
defconsti(env, "GL-MAX-ATOMIC-COUNTER-BUFFER-BINDINGS", (GLenum) GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS, "GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS");
#endif
#if defined(GL_ACTIVE_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-ACTIVE-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_ACTIVE_ATOMIC_COUNTER_BUFFERS, "GL_ACTIVE_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_UNSIGNED_INT_ATOMIC_COUNTER)
defconsti(env, "GL-UNSIGNED-INT-ATOMIC-COUNTER", (GLenum) GL_UNSIGNED_INT_ATOMIC_COUNTER, "GL_UNSIGNED_INT_ATOMIC_COUNTER");
#endif
#if defined(GL_MAX_IMAGE_UNITS)
defconsti(env, "GL-MAX-IMAGE-UNITS", (GLenum) GL_MAX_IMAGE_UNITS, "GL_MAX_IMAGE_UNITS");
#endif
#if defined(GL_MAX_VERTEX_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-VERTEX-IMAGE-UNIFORMS", (GLenum) GL_MAX_VERTEX_IMAGE_UNIFORMS, "GL_MAX_VERTEX_IMAGE_UNIFORMS");
#endif
#if defined(GL_MAX_FRAGMENT_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-FRAGMENT-IMAGE-UNIFORMS", (GLenum) GL_MAX_FRAGMENT_IMAGE_UNIFORMS, "GL_MAX_FRAGMENT_IMAGE_UNIFORMS");
#endif
#if defined(GL_MAX_COMPUTE_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-COMPUTE-IMAGE-UNIFORMS", (GLenum) GL_MAX_COMPUTE_IMAGE_UNIFORMS, "GL_MAX_COMPUTE_IMAGE_UNIFORMS");
#endif
#if defined(GL_MAX_COMBINED_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-COMBINED-IMAGE-UNIFORMS", (GLenum) GL_MAX_COMBINED_IMAGE_UNIFORMS, "GL_MAX_COMBINED_IMAGE_UNIFORMS");
#endif
#if defined(GL_IMAGE_BINDING_NAME)
defconsti(env, "GL-IMAGE-BINDING-NAME", (GLenum) GL_IMAGE_BINDING_NAME, "GL_IMAGE_BINDING_NAME");
#endif
#if defined(GL_IMAGE_BINDING_LEVEL)
defconsti(env, "GL-IMAGE-BINDING-LEVEL", (GLenum) GL_IMAGE_BINDING_LEVEL, "GL_IMAGE_BINDING_LEVEL");
#endif
#if defined(GL_IMAGE_BINDING_LAYERED)
defconsti(env, "GL-IMAGE-BINDING-LAYERED", (GLenum) GL_IMAGE_BINDING_LAYERED, "GL_IMAGE_BINDING_LAYERED");
#endif
#if defined(GL_IMAGE_BINDING_LAYER)
defconsti(env, "GL-IMAGE-BINDING-LAYER", (GLenum) GL_IMAGE_BINDING_LAYER, "GL_IMAGE_BINDING_LAYER");
#endif
#if defined(GL_IMAGE_BINDING_ACCESS)
defconsti(env, "GL-IMAGE-BINDING-ACCESS", (GLenum) GL_IMAGE_BINDING_ACCESS, "GL_IMAGE_BINDING_ACCESS");
#endif
#if defined(GL_IMAGE_BINDING_FORMAT)
defconsti(env, "GL-IMAGE-BINDING-FORMAT", (GLenum) GL_IMAGE_BINDING_FORMAT, "GL_IMAGE_BINDING_FORMAT");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-BARRIER-BIT", (GLenum) GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT, "GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT");
#endif
#if defined(GL_ELEMENT_ARRAY_BARRIER_BIT)
defconsti(env, "GL-ELEMENT-ARRAY-BARRIER-BIT", (GLenum) GL_ELEMENT_ARRAY_BARRIER_BIT, "GL_ELEMENT_ARRAY_BARRIER_BIT");
#endif
#if defined(GL_UNIFORM_BARRIER_BIT)
defconsti(env, "GL-UNIFORM-BARRIER-BIT", (GLenum) GL_UNIFORM_BARRIER_BIT, "GL_UNIFORM_BARRIER_BIT");
#endif
#if defined(GL_TEXTURE_FETCH_BARRIER_BIT)
defconsti(env, "GL-TEXTURE-FETCH-BARRIER-BIT", (GLenum) GL_TEXTURE_FETCH_BARRIER_BIT, "GL_TEXTURE_FETCH_BARRIER_BIT");
#endif
#if defined(GL_SHADER_IMAGE_ACCESS_BARRIER_BIT)
defconsti(env, "GL-SHADER-IMAGE-ACCESS-BARRIER-BIT", (GLenum) GL_SHADER_IMAGE_ACCESS_BARRIER_BIT, "GL_SHADER_IMAGE_ACCESS_BARRIER_BIT");
#endif
#if defined(GL_COMMAND_BARRIER_BIT)
defconsti(env, "GL-COMMAND-BARRIER-BIT", (GLenum) GL_COMMAND_BARRIER_BIT, "GL_COMMAND_BARRIER_BIT");
#endif
#if defined(GL_PIXEL_BUFFER_BARRIER_BIT)
defconsti(env, "GL-PIXEL-BUFFER-BARRIER-BIT", (GLenum) GL_PIXEL_BUFFER_BARRIER_BIT, "GL_PIXEL_BUFFER_BARRIER_BIT");
#endif
#if defined(GL_TEXTURE_UPDATE_BARRIER_BIT)
defconsti(env, "GL-TEXTURE-UPDATE-BARRIER-BIT", (GLenum) GL_TEXTURE_UPDATE_BARRIER_BIT, "GL_TEXTURE_UPDATE_BARRIER_BIT");
#endif
#if defined(GL_BUFFER_UPDATE_BARRIER_BIT)
defconsti(env, "GL-BUFFER-UPDATE-BARRIER-BIT", (GLenum) GL_BUFFER_UPDATE_BARRIER_BIT, "GL_BUFFER_UPDATE_BARRIER_BIT");
#endif
#if defined(GL_FRAMEBUFFER_BARRIER_BIT)
defconsti(env, "GL-FRAMEBUFFER-BARRIER-BIT", (GLenum) GL_FRAMEBUFFER_BARRIER_BIT, "GL_FRAMEBUFFER_BARRIER_BIT");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BARRIER_BIT)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BARRIER-BIT", (GLenum) GL_TRANSFORM_FEEDBACK_BARRIER_BIT, "GL_TRANSFORM_FEEDBACK_BARRIER_BIT");
#endif
#if defined(GL_ATOMIC_COUNTER_BARRIER_BIT)
defconsti(env, "GL-ATOMIC-COUNTER-BARRIER-BIT", (GLenum) GL_ATOMIC_COUNTER_BARRIER_BIT, "GL_ATOMIC_COUNTER_BARRIER_BIT");
#endif
#if defined(GL_ALL_BARRIER_BITS)
defconsti(env, "GL-ALL-BARRIER-BITS", (GLenum) GL_ALL_BARRIER_BITS, "GL_ALL_BARRIER_BITS");
#endif
#if defined(GL_IMAGE_2D)
defconsti(env, "GL-IMAGE-2D", (GLenum) GL_IMAGE_2D, "GL_IMAGE_2D");
#endif
#if defined(GL_IMAGE_3D)
defconsti(env, "GL-IMAGE-3D", (GLenum) GL_IMAGE_3D, "GL_IMAGE_3D");
#endif
#if defined(GL_IMAGE_CUBE)
defconsti(env, "GL-IMAGE-CUBE", (GLenum) GL_IMAGE_CUBE, "GL_IMAGE_CUBE");
#endif
#if defined(GL_IMAGE_2D_ARRAY)
defconsti(env, "GL-IMAGE-2D-ARRAY", (GLenum) GL_IMAGE_2D_ARRAY, "GL_IMAGE_2D_ARRAY");
#endif
#if defined(GL_INT_IMAGE_2D)
defconsti(env, "GL-INT-IMAGE-2D", (GLenum) GL_INT_IMAGE_2D, "GL_INT_IMAGE_2D");
#endif
#if defined(GL_INT_IMAGE_3D)
defconsti(env, "GL-INT-IMAGE-3D", (GLenum) GL_INT_IMAGE_3D, "GL_INT_IMAGE_3D");
#endif
#if defined(GL_INT_IMAGE_CUBE)
defconsti(env, "GL-INT-IMAGE-CUBE", (GLenum) GL_INT_IMAGE_CUBE, "GL_INT_IMAGE_CUBE");
#endif
#if defined(GL_INT_IMAGE_2D_ARRAY)
defconsti(env, "GL-INT-IMAGE-2D-ARRAY", (GLenum) GL_INT_IMAGE_2D_ARRAY, "GL_INT_IMAGE_2D_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D", (GLenum) GL_UNSIGNED_INT_IMAGE_2D, "GL_UNSIGNED_INT_IMAGE_2D");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_3D)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-3D", (GLenum) GL_UNSIGNED_INT_IMAGE_3D, "GL_UNSIGNED_INT_IMAGE_3D");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_CUBE)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-CUBE", (GLenum) GL_UNSIGNED_INT_IMAGE_CUBE, "GL_UNSIGNED_INT_IMAGE_CUBE");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-ARRAY", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_ARRAY, "GL_UNSIGNED_INT_IMAGE_2D_ARRAY");
#endif
#if defined(GL_IMAGE_FORMAT_COMPATIBILITY_TYPE)
defconsti(env, "GL-IMAGE-FORMAT-COMPATIBILITY-TYPE", (GLenum) GL_IMAGE_FORMAT_COMPATIBILITY_TYPE, "GL_IMAGE_FORMAT_COMPATIBILITY_TYPE");
#endif
#if defined(GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE)
defconsti(env, "GL-IMAGE-FORMAT-COMPATIBILITY-BY-SIZE", (GLenum) GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE, "GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE");
#endif
#if defined(GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS)
defconsti(env, "GL-IMAGE-FORMAT-COMPATIBILITY-BY-CLASS", (GLenum) GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS, "GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS");
#endif
#if defined(GL_READ_ONLY)
defconsti(env, "GL-READ-ONLY", (GLenum) GL_READ_ONLY, "GL_READ_ONLY");
#endif
#if defined(GL_WRITE_ONLY)
defconsti(env, "GL-WRITE-ONLY", (GLenum) GL_WRITE_ONLY, "GL_WRITE_ONLY");
#endif
#if defined(GL_READ_WRITE)
defconsti(env, "GL-READ-WRITE", (GLenum) GL_READ_WRITE, "GL_READ_WRITE");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER)
defconsti(env, "GL-SHADER-STORAGE-BUFFER", (GLenum) GL_SHADER_STORAGE_BUFFER, "GL_SHADER_STORAGE_BUFFER");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER_BINDING)
defconsti(env, "GL-SHADER-STORAGE-BUFFER-BINDING", (GLenum) GL_SHADER_STORAGE_BUFFER_BINDING, "GL_SHADER_STORAGE_BUFFER_BINDING");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER_START)
defconsti(env, "GL-SHADER-STORAGE-BUFFER-START", (GLenum) GL_SHADER_STORAGE_BUFFER_START, "GL_SHADER_STORAGE_BUFFER_START");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER_SIZE)
defconsti(env, "GL-SHADER-STORAGE-BUFFER-SIZE", (GLenum) GL_SHADER_STORAGE_BUFFER_SIZE, "GL_SHADER_STORAGE_BUFFER_SIZE");
#endif
#if defined(GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-VERTEX-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS, "GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-FRAGMENT-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS, "GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-COMPUTE-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS, "GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-COMBINED-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS, "GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS)
defconsti(env, "GL-MAX-SHADER-STORAGE-BUFFER-BINDINGS", (GLenum) GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS, "GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS");
#endif
#if defined(GL_MAX_SHADER_STORAGE_BLOCK_SIZE)
defconsti(env, "GL-MAX-SHADER-STORAGE-BLOCK-SIZE", (GLenum) GL_MAX_SHADER_STORAGE_BLOCK_SIZE, "GL_MAX_SHADER_STORAGE_BLOCK_SIZE");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT)
defconsti(env, "GL-SHADER-STORAGE-BUFFER-OFFSET-ALIGNMENT", (GLenum) GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT, "GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT");
#endif
#if defined(GL_SHADER_STORAGE_BARRIER_BIT)
defconsti(env, "GL-SHADER-STORAGE-BARRIER-BIT", (GLenum) GL_SHADER_STORAGE_BARRIER_BIT, "GL_SHADER_STORAGE_BARRIER_BIT");
#endif
#if defined(GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES)
defconsti(env, "GL-MAX-COMBINED-SHADER-OUTPUT-RESOURCES", (GLenum) GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES, "GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES");
#endif
#if defined(GL_DEPTH_STENCIL_TEXTURE_MODE)
defconsti(env, "GL-DEPTH-STENCIL-TEXTURE-MODE", (GLenum) GL_DEPTH_STENCIL_TEXTURE_MODE, "GL_DEPTH_STENCIL_TEXTURE_MODE");
#endif
#if defined(GL_STENCIL_INDEX)
defconsti(env, "GL-STENCIL-INDEX", (GLenum) GL_STENCIL_INDEX, "GL_STENCIL_INDEX");
#endif
#if defined(GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET)
defconsti(env, "GL-MIN-PROGRAM-TEXTURE-GATHER-OFFSET", (GLenum) GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET, "GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET");
#endif
#if defined(GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET)
defconsti(env, "GL-MAX-PROGRAM-TEXTURE-GATHER-OFFSET", (GLenum) GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET, "GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET");
#endif
#if defined(GL_SAMPLE_POSITION)
defconsti(env, "GL-SAMPLE-POSITION", (GLenum) GL_SAMPLE_POSITION, "GL_SAMPLE_POSITION");
#endif
#if defined(GL_SAMPLE_MASK)
defconsti(env, "GL-SAMPLE-MASK", (GLenum) GL_SAMPLE_MASK, "GL_SAMPLE_MASK");
#endif
#if defined(GL_SAMPLE_MASK_VALUE)
defconsti(env, "GL-SAMPLE-MASK-VALUE", (GLenum) GL_SAMPLE_MASK_VALUE, "GL_SAMPLE_MASK_VALUE");
#endif
#if defined(GL_TEXTURE_2D_MULTISAMPLE)
defconsti(env, "GL-TEXTURE-2D-MULTISAMPLE", (GLenum) GL_TEXTURE_2D_MULTISAMPLE, "GL_TEXTURE_2D_MULTISAMPLE");
#endif
#if defined(GL_MAX_SAMPLE_MASK_WORDS)
defconsti(env, "GL-MAX-SAMPLE-MASK-WORDS", (GLenum) GL_MAX_SAMPLE_MASK_WORDS, "GL_MAX_SAMPLE_MASK_WORDS");
#endif
#if defined(GL_MAX_COLOR_TEXTURE_SAMPLES)
defconsti(env, "GL-MAX-COLOR-TEXTURE-SAMPLES", (GLenum) GL_MAX_COLOR_TEXTURE_SAMPLES, "GL_MAX_COLOR_TEXTURE_SAMPLES");
#endif
#if defined(GL_MAX_DEPTH_TEXTURE_SAMPLES)
defconsti(env, "GL-MAX-DEPTH-TEXTURE-SAMPLES", (GLenum) GL_MAX_DEPTH_TEXTURE_SAMPLES, "GL_MAX_DEPTH_TEXTURE_SAMPLES");
#endif
#if defined(GL_MAX_INTEGER_SAMPLES)
defconsti(env, "GL-MAX-INTEGER-SAMPLES", (GLenum) GL_MAX_INTEGER_SAMPLES, "GL_MAX_INTEGER_SAMPLES");
#endif
#if defined(GL_TEXTURE_BINDING_2D_MULTISAMPLE)
defconsti(env, "GL-TEXTURE-BINDING-2D-MULTISAMPLE", (GLenum) GL_TEXTURE_BINDING_2D_MULTISAMPLE, "GL_TEXTURE_BINDING_2D_MULTISAMPLE");
#endif
#if defined(GL_TEXTURE_SAMPLES)
defconsti(env, "GL-TEXTURE-SAMPLES", (GLenum) GL_TEXTURE_SAMPLES, "GL_TEXTURE_SAMPLES");
#endif
#if defined(GL_TEXTURE_FIXED_SAMPLE_LOCATIONS)
defconsti(env, "GL-TEXTURE-FIXED-SAMPLE-LOCATIONS", (GLenum) GL_TEXTURE_FIXED_SAMPLE_LOCATIONS, "GL_TEXTURE_FIXED_SAMPLE_LOCATIONS");
#endif
#if defined(GL_TEXTURE_WIDTH)
defconsti(env, "GL-TEXTURE-WIDTH", (GLenum) GL_TEXTURE_WIDTH, "GL_TEXTURE_WIDTH");
#endif
#if defined(GL_TEXTURE_HEIGHT)
defconsti(env, "GL-TEXTURE-HEIGHT", (GLenum) GL_TEXTURE_HEIGHT, "GL_TEXTURE_HEIGHT");
#endif
#if defined(GL_TEXTURE_DEPTH)
defconsti(env, "GL-TEXTURE-DEPTH", (GLenum) GL_TEXTURE_DEPTH, "GL_TEXTURE_DEPTH");
#endif
#if defined(GL_TEXTURE_INTERNAL_FORMAT)
defconsti(env, "GL-TEXTURE-INTERNAL-FORMAT", (GLenum) GL_TEXTURE_INTERNAL_FORMAT, "GL_TEXTURE_INTERNAL_FORMAT");
#endif
#if defined(GL_TEXTURE_RED_SIZE)
defconsti(env, "GL-TEXTURE-RED-SIZE", (GLenum) GL_TEXTURE_RED_SIZE, "GL_TEXTURE_RED_SIZE");
#endif
#if defined(GL_TEXTURE_GREEN_SIZE)
defconsti(env, "GL-TEXTURE-GREEN-SIZE", (GLenum) GL_TEXTURE_GREEN_SIZE, "GL_TEXTURE_GREEN_SIZE");
#endif
#if defined(GL_TEXTURE_BLUE_SIZE)
defconsti(env, "GL-TEXTURE-BLUE-SIZE", (GLenum) GL_TEXTURE_BLUE_SIZE, "GL_TEXTURE_BLUE_SIZE");
#endif
#if defined(GL_TEXTURE_ALPHA_SIZE)
defconsti(env, "GL-TEXTURE-ALPHA-SIZE", (GLenum) GL_TEXTURE_ALPHA_SIZE, "GL_TEXTURE_ALPHA_SIZE");
#endif
#if defined(GL_TEXTURE_DEPTH_SIZE)
defconsti(env, "GL-TEXTURE-DEPTH-SIZE", (GLenum) GL_TEXTURE_DEPTH_SIZE, "GL_TEXTURE_DEPTH_SIZE");
#endif
#if defined(GL_TEXTURE_STENCIL_SIZE)
defconsti(env, "GL-TEXTURE-STENCIL-SIZE", (GLenum) GL_TEXTURE_STENCIL_SIZE, "GL_TEXTURE_STENCIL_SIZE");
#endif
#if defined(GL_TEXTURE_SHARED_SIZE)
defconsti(env, "GL-TEXTURE-SHARED-SIZE", (GLenum) GL_TEXTURE_SHARED_SIZE, "GL_TEXTURE_SHARED_SIZE");
#endif
#if defined(GL_TEXTURE_RED_TYPE)
defconsti(env, "GL-TEXTURE-RED-TYPE", (GLenum) GL_TEXTURE_RED_TYPE, "GL_TEXTURE_RED_TYPE");
#endif
#if defined(GL_TEXTURE_GREEN_TYPE)
defconsti(env, "GL-TEXTURE-GREEN-TYPE", (GLenum) GL_TEXTURE_GREEN_TYPE, "GL_TEXTURE_GREEN_TYPE");
#endif
#if defined(GL_TEXTURE_BLUE_TYPE)
defconsti(env, "GL-TEXTURE-BLUE-TYPE", (GLenum) GL_TEXTURE_BLUE_TYPE, "GL_TEXTURE_BLUE_TYPE");
#endif
#if defined(GL_TEXTURE_ALPHA_TYPE)
defconsti(env, "GL-TEXTURE-ALPHA-TYPE", (GLenum) GL_TEXTURE_ALPHA_TYPE, "GL_TEXTURE_ALPHA_TYPE");
#endif
#if defined(GL_TEXTURE_DEPTH_TYPE)
defconsti(env, "GL-TEXTURE-DEPTH-TYPE", (GLenum) GL_TEXTURE_DEPTH_TYPE, "GL_TEXTURE_DEPTH_TYPE");
#endif
#if defined(GL_TEXTURE_COMPRESSED)
defconsti(env, "GL-TEXTURE-COMPRESSED", (GLenum) GL_TEXTURE_COMPRESSED, "GL_TEXTURE_COMPRESSED");
#endif
#if defined(GL_SAMPLER_2D_MULTISAMPLE)
defconsti(env, "GL-SAMPLER-2D-MULTISAMPLE", (GLenum) GL_SAMPLER_2D_MULTISAMPLE, "GL_SAMPLER_2D_MULTISAMPLE");
#endif
#if defined(GL_INT_SAMPLER_2D_MULTISAMPLE)
defconsti(env, "GL-INT-SAMPLER-2D-MULTISAMPLE", (GLenum) GL_INT_SAMPLER_2D_MULTISAMPLE, "GL_INT_SAMPLER_2D_MULTISAMPLE");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-MULTISAMPLE", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE, "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE");
#endif
#if defined(GL_VERTEX_ATTRIB_BINDING)
defconsti(env, "GL-VERTEX-ATTRIB-BINDING", (GLenum) GL_VERTEX_ATTRIB_BINDING, "GL_VERTEX_ATTRIB_BINDING");
#endif
#if defined(GL_VERTEX_ATTRIB_RELATIVE_OFFSET)
defconsti(env, "GL-VERTEX-ATTRIB-RELATIVE-OFFSET", (GLenum) GL_VERTEX_ATTRIB_RELATIVE_OFFSET, "GL_VERTEX_ATTRIB_RELATIVE_OFFSET");
#endif
#if defined(GL_VERTEX_BINDING_DIVISOR)
defconsti(env, "GL-VERTEX-BINDING-DIVISOR", (GLenum) GL_VERTEX_BINDING_DIVISOR, "GL_VERTEX_BINDING_DIVISOR");
#endif
#if defined(GL_VERTEX_BINDING_OFFSET)
defconsti(env, "GL-VERTEX-BINDING-OFFSET", (GLenum) GL_VERTEX_BINDING_OFFSET, "GL_VERTEX_BINDING_OFFSET");
#endif
#if defined(GL_VERTEX_BINDING_STRIDE)
defconsti(env, "GL-VERTEX-BINDING-STRIDE", (GLenum) GL_VERTEX_BINDING_STRIDE, "GL_VERTEX_BINDING_STRIDE");
#endif
#if defined(GL_VERTEX_BINDING_BUFFER)
defconsti(env, "GL-VERTEX-BINDING-BUFFER", (GLenum) GL_VERTEX_BINDING_BUFFER, "GL_VERTEX_BINDING_BUFFER");
#endif
#if defined(GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET)
defconsti(env, "GL-MAX-VERTEX-ATTRIB-RELATIVE-OFFSET", (GLenum) GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET, "GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET");
#endif
#if defined(GL_MAX_VERTEX_ATTRIB_BINDINGS)
defconsti(env, "GL-MAX-VERTEX-ATTRIB-BINDINGS", (GLenum) GL_MAX_VERTEX_ATTRIB_BINDINGS, "GL_MAX_VERTEX_ATTRIB_BINDINGS");
#endif
#if defined(GL_MAX_VERTEX_ATTRIB_STRIDE)
defconsti(env, "GL-MAX-VERTEX-ATTRIB-STRIDE", (GLenum) GL_MAX_VERTEX_ATTRIB_STRIDE, "GL_MAX_VERTEX_ATTRIB_STRIDE");
#endif
#if defined(GL_MULTISAMPLE_LINE_WIDTH_RANGE)
defconsti(env, "GL-MULTISAMPLE-LINE-WIDTH-RANGE", (GLenum) GL_MULTISAMPLE_LINE_WIDTH_RANGE, "GL_MULTISAMPLE_LINE_WIDTH_RANGE");
#endif
#if defined(GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY)
defconsti(env, "GL-MULTISAMPLE-LINE-WIDTH-GRANULARITY", (GLenum) GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY, "GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY");
#endif
#if defined(GL_MULTIPLY)
defconsti(env, "GL-MULTIPLY", (GLenum) GL_MULTIPLY, "GL_MULTIPLY");
#endif
#if defined(GL_SCREEN)
defconsti(env, "GL-SCREEN", (GLenum) GL_SCREEN, "GL_SCREEN");
#endif
#if defined(GL_OVERLAY)
defconsti(env, "GL-OVERLAY", (GLenum) GL_OVERLAY, "GL_OVERLAY");
#endif
#if defined(GL_DARKEN)
defconsti(env, "GL-DARKEN", (GLenum) GL_DARKEN, "GL_DARKEN");
#endif
#if defined(GL_LIGHTEN)
defconsti(env, "GL-LIGHTEN", (GLenum) GL_LIGHTEN, "GL_LIGHTEN");
#endif
#if defined(GL_COLORDODGE)
defconsti(env, "GL-COLORDODGE", (GLenum) GL_COLORDODGE, "GL_COLORDODGE");
#endif
#if defined(GL_COLORBURN)
defconsti(env, "GL-COLORBURN", (GLenum) GL_COLORBURN, "GL_COLORBURN");
#endif
#if defined(GL_HARDLIGHT)
defconsti(env, "GL-HARDLIGHT", (GLenum) GL_HARDLIGHT, "GL_HARDLIGHT");
#endif
#if defined(GL_SOFTLIGHT)
defconsti(env, "GL-SOFTLIGHT", (GLenum) GL_SOFTLIGHT, "GL_SOFTLIGHT");
#endif
#if defined(GL_DIFFERENCE)
defconsti(env, "GL-DIFFERENCE", (GLenum) GL_DIFFERENCE, "GL_DIFFERENCE");
#endif
#if defined(GL_EXCLUSION)
defconsti(env, "GL-EXCLUSION", (GLenum) GL_EXCLUSION, "GL_EXCLUSION");
#endif
#if defined(GL_HSL_HUE)
defconsti(env, "GL-HSL-HUE", (GLenum) GL_HSL_HUE, "GL_HSL_HUE");
#endif
#if defined(GL_HSL_SATURATION)
defconsti(env, "GL-HSL-SATURATION", (GLenum) GL_HSL_SATURATION, "GL_HSL_SATURATION");
#endif
#if defined(GL_HSL_COLOR)
defconsti(env, "GL-HSL-COLOR", (GLenum) GL_HSL_COLOR, "GL_HSL_COLOR");
#endif
#if defined(GL_HSL_LUMINOSITY)
defconsti(env, "GL-HSL-LUMINOSITY", (GLenum) GL_HSL_LUMINOSITY, "GL_HSL_LUMINOSITY");
#endif
#if defined(GL_DEBUG_OUTPUT_SYNCHRONOUS)
defconsti(env, "GL-DEBUG-OUTPUT-SYNCHRONOUS", (GLenum) GL_DEBUG_OUTPUT_SYNCHRONOUS, "GL_DEBUG_OUTPUT_SYNCHRONOUS");
#endif
#if defined(GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH)
defconsti(env, "GL-DEBUG-NEXT-LOGGED-MESSAGE-LENGTH", (GLenum) GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH, "GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH");
#endif
#if defined(GL_DEBUG_CALLBACK_FUNCTION)
defconsti(env, "GL-DEBUG-CALLBACK-FUNCTION", (GLenum) GL_DEBUG_CALLBACK_FUNCTION, "GL_DEBUG_CALLBACK_FUNCTION");
#endif
#if defined(GL_DEBUG_CALLBACK_USER_PARAM)
defconsti(env, "GL-DEBUG-CALLBACK-USER-PARAM", (GLenum) GL_DEBUG_CALLBACK_USER_PARAM, "GL_DEBUG_CALLBACK_USER_PARAM");
#endif
#if defined(GL_DEBUG_SOURCE_API)
defconsti(env, "GL-DEBUG-SOURCE-API", (GLenum) GL_DEBUG_SOURCE_API, "GL_DEBUG_SOURCE_API");
#endif
#if defined(GL_DEBUG_SOURCE_WINDOW_SYSTEM)
defconsti(env, "GL-DEBUG-SOURCE-WINDOW-SYSTEM", (GLenum) GL_DEBUG_SOURCE_WINDOW_SYSTEM, "GL_DEBUG_SOURCE_WINDOW_SYSTEM");
#endif
#if defined(GL_DEBUG_SOURCE_SHADER_COMPILER)
defconsti(env, "GL-DEBUG-SOURCE-SHADER-COMPILER", (GLenum) GL_DEBUG_SOURCE_SHADER_COMPILER, "GL_DEBUG_SOURCE_SHADER_COMPILER");
#endif
#if defined(GL_DEBUG_SOURCE_THIRD_PARTY)
defconsti(env, "GL-DEBUG-SOURCE-THIRD-PARTY", (GLenum) GL_DEBUG_SOURCE_THIRD_PARTY, "GL_DEBUG_SOURCE_THIRD_PARTY");
#endif
#if defined(GL_DEBUG_SOURCE_APPLICATION)
defconsti(env, "GL-DEBUG-SOURCE-APPLICATION", (GLenum) GL_DEBUG_SOURCE_APPLICATION, "GL_DEBUG_SOURCE_APPLICATION");
#endif
#if defined(GL_DEBUG_SOURCE_OTHER)
defconsti(env, "GL-DEBUG-SOURCE-OTHER", (GLenum) GL_DEBUG_SOURCE_OTHER, "GL_DEBUG_SOURCE_OTHER");
#endif
#if defined(GL_DEBUG_TYPE_ERROR)
defconsti(env, "GL-DEBUG-TYPE-ERROR", (GLenum) GL_DEBUG_TYPE_ERROR, "GL_DEBUG_TYPE_ERROR");
#endif
#if defined(GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR)
defconsti(env, "GL-DEBUG-TYPE-DEPRECATED-BEHAVIOR", (GLenum) GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR, "GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR");
#endif
#if defined(GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR)
defconsti(env, "GL-DEBUG-TYPE-UNDEFINED-BEHAVIOR", (GLenum) GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR, "GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR");
#endif
#if defined(GL_DEBUG_TYPE_PORTABILITY)
defconsti(env, "GL-DEBUG-TYPE-PORTABILITY", (GLenum) GL_DEBUG_TYPE_PORTABILITY, "GL_DEBUG_TYPE_PORTABILITY");
#endif
#if defined(GL_DEBUG_TYPE_PERFORMANCE)
defconsti(env, "GL-DEBUG-TYPE-PERFORMANCE", (GLenum) GL_DEBUG_TYPE_PERFORMANCE, "GL_DEBUG_TYPE_PERFORMANCE");
#endif
#if defined(GL_DEBUG_TYPE_OTHER)
defconsti(env, "GL-DEBUG-TYPE-OTHER", (GLenum) GL_DEBUG_TYPE_OTHER, "GL_DEBUG_TYPE_OTHER");
#endif
#if defined(GL_DEBUG_TYPE_MARKER)
defconsti(env, "GL-DEBUG-TYPE-MARKER", (GLenum) GL_DEBUG_TYPE_MARKER, "GL_DEBUG_TYPE_MARKER");
#endif
#if defined(GL_DEBUG_TYPE_PUSH_GROUP)
defconsti(env, "GL-DEBUG-TYPE-PUSH-GROUP", (GLenum) GL_DEBUG_TYPE_PUSH_GROUP, "GL_DEBUG_TYPE_PUSH_GROUP");
#endif
#if defined(GL_DEBUG_TYPE_POP_GROUP)
defconsti(env, "GL-DEBUG-TYPE-POP-GROUP", (GLenum) GL_DEBUG_TYPE_POP_GROUP, "GL_DEBUG_TYPE_POP_GROUP");
#endif
#if defined(GL_DEBUG_SEVERITY_NOTIFICATION)
defconsti(env, "GL-DEBUG-SEVERITY-NOTIFICATION", (GLenum) GL_DEBUG_SEVERITY_NOTIFICATION, "GL_DEBUG_SEVERITY_NOTIFICATION");
#endif
#if defined(GL_MAX_DEBUG_GROUP_STACK_DEPTH)
defconsti(env, "GL-MAX-DEBUG-GROUP-STACK-DEPTH", (GLenum) GL_MAX_DEBUG_GROUP_STACK_DEPTH, "GL_MAX_DEBUG_GROUP_STACK_DEPTH");
#endif
#if defined(GL_DEBUG_GROUP_STACK_DEPTH)
defconsti(env, "GL-DEBUG-GROUP-STACK-DEPTH", (GLenum) GL_DEBUG_GROUP_STACK_DEPTH, "GL_DEBUG_GROUP_STACK_DEPTH");
#endif
#if defined(GL_BUFFER)
defconsti(env, "GL-BUFFER", (GLenum) GL_BUFFER, "GL_BUFFER");
#endif
#if defined(GL_SHADER)
defconsti(env, "GL-SHADER", (GLenum) GL_SHADER, "GL_SHADER");
#endif
#if defined(GL_PROGRAM)
defconsti(env, "GL-PROGRAM", (GLenum) GL_PROGRAM, "GL_PROGRAM");
#endif
#if defined(GL_VERTEX_ARRAY)
defconsti(env, "GL-VERTEX-ARRAY", (GLenum) GL_VERTEX_ARRAY, "GL_VERTEX_ARRAY");
#endif
#if defined(GL_QUERY)
defconsti(env, "GL-QUERY", (GLenum) GL_QUERY, "GL_QUERY");
#endif
#if defined(GL_PROGRAM_PIPELINE)
defconsti(env, "GL-PROGRAM-PIPELINE", (GLenum) GL_PROGRAM_PIPELINE, "GL_PROGRAM_PIPELINE");
#endif
#if defined(GL_SAMPLER)
defconsti(env, "GL-SAMPLER", (GLenum) GL_SAMPLER, "GL_SAMPLER");
#endif
#if defined(GL_MAX_LABEL_LENGTH)
defconsti(env, "GL-MAX-LABEL-LENGTH", (GLenum) GL_MAX_LABEL_LENGTH, "GL_MAX_LABEL_LENGTH");
#endif
#if defined(GL_MAX_DEBUG_MESSAGE_LENGTH)
defconsti(env, "GL-MAX-DEBUG-MESSAGE-LENGTH", (GLenum) GL_MAX_DEBUG_MESSAGE_LENGTH, "GL_MAX_DEBUG_MESSAGE_LENGTH");
#endif
#if defined(GL_MAX_DEBUG_LOGGED_MESSAGES)
defconsti(env, "GL-MAX-DEBUG-LOGGED-MESSAGES", (GLenum) GL_MAX_DEBUG_LOGGED_MESSAGES, "GL_MAX_DEBUG_LOGGED_MESSAGES");
#endif
#if defined(GL_DEBUG_LOGGED_MESSAGES)
defconsti(env, "GL-DEBUG-LOGGED-MESSAGES", (GLenum) GL_DEBUG_LOGGED_MESSAGES, "GL_DEBUG_LOGGED_MESSAGES");
#endif
#if defined(GL_DEBUG_SEVERITY_HIGH)
defconsti(env, "GL-DEBUG-SEVERITY-HIGH", (GLenum) GL_DEBUG_SEVERITY_HIGH, "GL_DEBUG_SEVERITY_HIGH");
#endif
#if defined(GL_DEBUG_SEVERITY_MEDIUM)
defconsti(env, "GL-DEBUG-SEVERITY-MEDIUM", (GLenum) GL_DEBUG_SEVERITY_MEDIUM, "GL_DEBUG_SEVERITY_MEDIUM");
#endif
#if defined(GL_DEBUG_SEVERITY_LOW)
defconsti(env, "GL-DEBUG-SEVERITY-LOW", (GLenum) GL_DEBUG_SEVERITY_LOW, "GL_DEBUG_SEVERITY_LOW");
#endif
#if defined(GL_DEBUG_OUTPUT)
defconsti(env, "GL-DEBUG-OUTPUT", (GLenum) GL_DEBUG_OUTPUT, "GL_DEBUG_OUTPUT");
#endif
#if defined(GL_CONTEXT_FLAG_DEBUG_BIT)
defconsti(env, "GL-CONTEXT-FLAG-DEBUG-BIT", (GLenum) GL_CONTEXT_FLAG_DEBUG_BIT, "GL_CONTEXT_FLAG_DEBUG_BIT");
#endif
#if defined(GL_STACK_OVERFLOW)
defconsti(env, "GL-STACK-OVERFLOW", (GLenum) GL_STACK_OVERFLOW, "GL_STACK_OVERFLOW");
#endif
#if defined(GL_STACK_UNDERFLOW)
defconsti(env, "GL-STACK-UNDERFLOW", (GLenum) GL_STACK_UNDERFLOW, "GL_STACK_UNDERFLOW");
#endif
#if defined(GL_GEOMETRY_SHADER)
defconsti(env, "GL-GEOMETRY-SHADER", (GLenum) GL_GEOMETRY_SHADER, "GL_GEOMETRY_SHADER");
#endif
#if defined(GL_GEOMETRY_SHADER_BIT)
defconsti(env, "GL-GEOMETRY-SHADER-BIT", (GLenum) GL_GEOMETRY_SHADER_BIT, "GL_GEOMETRY_SHADER_BIT");
#endif
#if defined(GL_GEOMETRY_VERTICES_OUT)
defconsti(env, "GL-GEOMETRY-VERTICES-OUT", (GLenum) GL_GEOMETRY_VERTICES_OUT, "GL_GEOMETRY_VERTICES_OUT");
#endif
#if defined(GL_GEOMETRY_INPUT_TYPE)
defconsti(env, "GL-GEOMETRY-INPUT-TYPE", (GLenum) GL_GEOMETRY_INPUT_TYPE, "GL_GEOMETRY_INPUT_TYPE");
#endif
#if defined(GL_GEOMETRY_OUTPUT_TYPE)
defconsti(env, "GL-GEOMETRY-OUTPUT-TYPE", (GLenum) GL_GEOMETRY_OUTPUT_TYPE, "GL_GEOMETRY_OUTPUT_TYPE");
#endif
#if defined(GL_GEOMETRY_SHADER_INVOCATIONS)
defconsti(env, "GL-GEOMETRY-SHADER-INVOCATIONS", (GLenum) GL_GEOMETRY_SHADER_INVOCATIONS, "GL_GEOMETRY_SHADER_INVOCATIONS");
#endif
#if defined(GL_LAYER_PROVOKING_VERTEX)
defconsti(env, "GL-LAYER-PROVOKING-VERTEX", (GLenum) GL_LAYER_PROVOKING_VERTEX, "GL_LAYER_PROVOKING_VERTEX");
#endif
#if defined(GL_LINES_ADJACENCY)
defconsti(env, "GL-LINES-ADJACENCY", (GLenum) GL_LINES_ADJACENCY, "GL_LINES_ADJACENCY");
#endif
#if defined(GL_LINE_STRIP_ADJACENCY)
defconsti(env, "GL-LINE-STRIP-ADJACENCY", (GLenum) GL_LINE_STRIP_ADJACENCY, "GL_LINE_STRIP_ADJACENCY");
#endif
#if defined(GL_TRIANGLES_ADJACENCY)
defconsti(env, "GL-TRIANGLES-ADJACENCY", (GLenum) GL_TRIANGLES_ADJACENCY, "GL_TRIANGLES_ADJACENCY");
#endif
#if defined(GL_TRIANGLE_STRIP_ADJACENCY)
defconsti(env, "GL-TRIANGLE-STRIP-ADJACENCY", (GLenum) GL_TRIANGLE_STRIP_ADJACENCY, "GL_TRIANGLE_STRIP_ADJACENCY");
#endif
#if defined(GL_MAX_GEOMETRY_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-GEOMETRY-UNIFORM-COMPONENTS", (GLenum) GL_MAX_GEOMETRY_UNIFORM_COMPONENTS, "GL_MAX_GEOMETRY_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_GEOMETRY_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-GEOMETRY-UNIFORM-BLOCKS", (GLenum) GL_MAX_GEOMETRY_UNIFORM_BLOCKS, "GL_MAX_GEOMETRY_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-GEOMETRY-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_GEOMETRY_INPUT_COMPONENTS)
defconsti(env, "GL-MAX-GEOMETRY-INPUT-COMPONENTS", (GLenum) GL_MAX_GEOMETRY_INPUT_COMPONENTS, "GL_MAX_GEOMETRY_INPUT_COMPONENTS");
#endif
#if defined(GL_MAX_GEOMETRY_OUTPUT_COMPONENTS)
defconsti(env, "GL-MAX-GEOMETRY-OUTPUT-COMPONENTS", (GLenum) GL_MAX_GEOMETRY_OUTPUT_COMPONENTS, "GL_MAX_GEOMETRY_OUTPUT_COMPONENTS");
#endif
#if defined(GL_MAX_GEOMETRY_OUTPUT_VERTICES)
defconsti(env, "GL-MAX-GEOMETRY-OUTPUT-VERTICES", (GLenum) GL_MAX_GEOMETRY_OUTPUT_VERTICES, "GL_MAX_GEOMETRY_OUTPUT_VERTICES");
#endif
#if defined(GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS)
defconsti(env, "GL-MAX-GEOMETRY-TOTAL-OUTPUT-COMPONENTS", (GLenum) GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS, "GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS");
#endif
#if defined(GL_MAX_GEOMETRY_SHADER_INVOCATIONS)
defconsti(env, "GL-MAX-GEOMETRY-SHADER-INVOCATIONS", (GLenum) GL_MAX_GEOMETRY_SHADER_INVOCATIONS, "GL_MAX_GEOMETRY_SHADER_INVOCATIONS");
#endif
#if defined(GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-GEOMETRY-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS, "GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-GEOMETRY-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS, "GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_GEOMETRY_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-GEOMETRY-ATOMIC-COUNTERS", (GLenum) GL_MAX_GEOMETRY_ATOMIC_COUNTERS, "GL_MAX_GEOMETRY_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_GEOMETRY_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-GEOMETRY-IMAGE-UNIFORMS", (GLenum) GL_MAX_GEOMETRY_IMAGE_UNIFORMS, "GL_MAX_GEOMETRY_IMAGE_UNIFORMS");
#endif
#if defined(GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-GEOMETRY-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS, "GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_FIRST_VERTEX_CONVENTION)
defconsti(env, "GL-FIRST-VERTEX-CONVENTION", (GLenum) GL_FIRST_VERTEX_CONVENTION, "GL_FIRST_VERTEX_CONVENTION");
#endif
#if defined(GL_LAST_VERTEX_CONVENTION)
defconsti(env, "GL-LAST-VERTEX-CONVENTION", (GLenum) GL_LAST_VERTEX_CONVENTION, "GL_LAST_VERTEX_CONVENTION");
#endif
#if defined(GL_UNDEFINED_VERTEX)
defconsti(env, "GL-UNDEFINED-VERTEX", (GLenum) GL_UNDEFINED_VERTEX, "GL_UNDEFINED_VERTEX");
#endif
#if defined(GL_PRIMITIVES_GENERATED)
defconsti(env, "GL-PRIMITIVES-GENERATED", (GLenum) GL_PRIMITIVES_GENERATED, "GL_PRIMITIVES_GENERATED");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_LAYERS)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-LAYERS", (GLenum) GL_FRAMEBUFFER_DEFAULT_LAYERS, "GL_FRAMEBUFFER_DEFAULT_LAYERS");
#endif
#if defined(GL_MAX_FRAMEBUFFER_LAYERS)
defconsti(env, "GL-MAX-FRAMEBUFFER-LAYERS", (GLenum) GL_MAX_FRAMEBUFFER_LAYERS, "GL_MAX_FRAMEBUFFER_LAYERS");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-LAYER-TARGETS", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS, "GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_LAYERED)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-LAYERED", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_LAYERED, "GL_FRAMEBUFFER_ATTACHMENT_LAYERED");
#endif
#if defined(GL_REFERENCED_BY_GEOMETRY_SHADER)
defconsti(env, "GL-REFERENCED-BY-GEOMETRY-SHADER", (GLenum) GL_REFERENCED_BY_GEOMETRY_SHADER, "GL_REFERENCED_BY_GEOMETRY_SHADER");
#endif
#if defined(GL_PRIMITIVE_BOUNDING_BOX)
defconsti(env, "GL-PRIMITIVE-BOUNDING-BOX", (GLenum) GL_PRIMITIVE_BOUNDING_BOX, "GL_PRIMITIVE_BOUNDING_BOX");
#endif
#if defined(GL_NO_ERROR)
defconsti(env, "GL-NO-ERROR", (GLenum) GL_NO_ERROR, "GL_NO_ERROR");
#endif
#if defined(GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT)
defconsti(env, "GL-CONTEXT-FLAG-ROBUST-ACCESS-BIT", (GLenum) GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT, "GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT");
#endif
#if defined(GL_CONTEXT_FLAGS)
defconsti(env, "GL-CONTEXT-FLAGS", (GLenum) GL_CONTEXT_FLAGS, "GL_CONTEXT_FLAGS");
#endif
#if defined(GL_LOSE_CONTEXT_ON_RESET)
defconsti(env, "GL-LOSE-CONTEXT-ON-RESET", (GLenum) GL_LOSE_CONTEXT_ON_RESET, "GL_LOSE_CONTEXT_ON_RESET");
#endif
#if defined(GL_GUILTY_CONTEXT_RESET)
defconsti(env, "GL-GUILTY-CONTEXT-RESET", (GLenum) GL_GUILTY_CONTEXT_RESET, "GL_GUILTY_CONTEXT_RESET");
#endif
#if defined(GL_INNOCENT_CONTEXT_RESET)
defconsti(env, "GL-INNOCENT-CONTEXT-RESET", (GLenum) GL_INNOCENT_CONTEXT_RESET, "GL_INNOCENT_CONTEXT_RESET");
#endif
#if defined(GL_UNKNOWN_CONTEXT_RESET)
defconsti(env, "GL-UNKNOWN-CONTEXT-RESET", (GLenum) GL_UNKNOWN_CONTEXT_RESET, "GL_UNKNOWN_CONTEXT_RESET");
#endif
#if defined(GL_RESET_NOTIFICATION_STRATEGY)
defconsti(env, "GL-RESET-NOTIFICATION-STRATEGY", (GLenum) GL_RESET_NOTIFICATION_STRATEGY, "GL_RESET_NOTIFICATION_STRATEGY");
#endif
#if defined(GL_NO_RESET_NOTIFICATION)
defconsti(env, "GL-NO-RESET-NOTIFICATION", (GLenum) GL_NO_RESET_NOTIFICATION, "GL_NO_RESET_NOTIFICATION");
#endif
#if defined(GL_CONTEXT_LOST)
defconsti(env, "GL-CONTEXT-LOST", (GLenum) GL_CONTEXT_LOST, "GL_CONTEXT_LOST");
#endif
#if defined(GL_SAMPLE_SHADING)
defconsti(env, "GL-SAMPLE-SHADING", (GLenum) GL_SAMPLE_SHADING, "GL_SAMPLE_SHADING");
#endif
#if defined(GL_MIN_SAMPLE_SHADING_VALUE)
defconsti(env, "GL-MIN-SAMPLE-SHADING-VALUE", (GLenum) GL_MIN_SAMPLE_SHADING_VALUE, "GL_MIN_SAMPLE_SHADING_VALUE");
#endif
#if defined(GL_MIN_FRAGMENT_INTERPOLATION_OFFSET)
defconsti(env, "GL-MIN-FRAGMENT-INTERPOLATION-OFFSET", (GLenum) GL_MIN_FRAGMENT_INTERPOLATION_OFFSET, "GL_MIN_FRAGMENT_INTERPOLATION_OFFSET");
#endif
#if defined(GL_MAX_FRAGMENT_INTERPOLATION_OFFSET)
defconsti(env, "GL-MAX-FRAGMENT-INTERPOLATION-OFFSET", (GLenum) GL_MAX_FRAGMENT_INTERPOLATION_OFFSET, "GL_MAX_FRAGMENT_INTERPOLATION_OFFSET");
#endif
#if defined(GL_FRAGMENT_INTERPOLATION_OFFSET_BITS)
defconsti(env, "GL-FRAGMENT-INTERPOLATION-OFFSET-BITS", (GLenum) GL_FRAGMENT_INTERPOLATION_OFFSET_BITS, "GL_FRAGMENT_INTERPOLATION_OFFSET_BITS");
#endif
#if defined(GL_PATCHES)
defconsti(env, "GL-PATCHES", (GLenum) GL_PATCHES, "GL_PATCHES");
#endif
#if defined(GL_PATCH_VERTICES)
defconsti(env, "GL-PATCH-VERTICES", (GLenum) GL_PATCH_VERTICES, "GL_PATCH_VERTICES");
#endif
#if defined(GL_TESS_CONTROL_OUTPUT_VERTICES)
defconsti(env, "GL-TESS-CONTROL-OUTPUT-VERTICES", (GLenum) GL_TESS_CONTROL_OUTPUT_VERTICES, "GL_TESS_CONTROL_OUTPUT_VERTICES");
#endif
#if defined(GL_TESS_GEN_MODE)
defconsti(env, "GL-TESS-GEN-MODE", (GLenum) GL_TESS_GEN_MODE, "GL_TESS_GEN_MODE");
#endif
#if defined(GL_TESS_GEN_SPACING)
defconsti(env, "GL-TESS-GEN-SPACING", (GLenum) GL_TESS_GEN_SPACING, "GL_TESS_GEN_SPACING");
#endif
#if defined(GL_TESS_GEN_VERTEX_ORDER)
defconsti(env, "GL-TESS-GEN-VERTEX-ORDER", (GLenum) GL_TESS_GEN_VERTEX_ORDER, "GL_TESS_GEN_VERTEX_ORDER");
#endif
#if defined(GL_TESS_GEN_POINT_MODE)
defconsti(env, "GL-TESS-GEN-POINT-MODE", (GLenum) GL_TESS_GEN_POINT_MODE, "GL_TESS_GEN_POINT_MODE");
#endif
#if defined(GL_TRIANGLES)
defconsti(env, "GL-TRIANGLES", (GLenum) GL_TRIANGLES, "GL_TRIANGLES");
#endif
#if defined(GL_ISOLINES)
defconsti(env, "GL-ISOLINES", (GLenum) GL_ISOLINES, "GL_ISOLINES");
#endif
#if defined(GL_QUADS)
defconsti(env, "GL-QUADS", (GLenum) GL_QUADS, "GL_QUADS");
#endif
#if defined(GL_EQUAL)
defconsti(env, "GL-EQUAL", (GLenum) GL_EQUAL, "GL_EQUAL");
#endif
#if defined(GL_FRACTIONAL_ODD)
defconsti(env, "GL-FRACTIONAL-ODD", (GLenum) GL_FRACTIONAL_ODD, "GL_FRACTIONAL_ODD");
#endif
#if defined(GL_FRACTIONAL_EVEN)
defconsti(env, "GL-FRACTIONAL-EVEN", (GLenum) GL_FRACTIONAL_EVEN, "GL_FRACTIONAL_EVEN");
#endif
#if defined(GL_CCW)
defconsti(env, "GL-CCW", (GLenum) GL_CCW, "GL_CCW");
#endif
#if defined(GL_CW)
defconsti(env, "GL-CW", (GLenum) GL_CW, "GL_CW");
#endif
#if defined(GL_MAX_PATCH_VERTICES)
defconsti(env, "GL-MAX-PATCH-VERTICES", (GLenum) GL_MAX_PATCH_VERTICES, "GL_MAX_PATCH_VERTICES");
#endif
#if defined(GL_MAX_TESS_GEN_LEVEL)
defconsti(env, "GL-MAX-TESS-GEN-LEVEL", (GLenum) GL_MAX_TESS_GEN_LEVEL, "GL_MAX_TESS_GEN_LEVEL");
#endif
#if defined(GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-TESS-CONTROL-UNIFORM-COMPONENTS", (GLenum) GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS, "GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-TESS-EVALUATION-UNIFORM-COMPONENTS", (GLenum) GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS, "GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-TESS-CONTROL-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS, "GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-TESS-EVALUATION-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS, "GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS)
defconsti(env, "GL-MAX-TESS-CONTROL-OUTPUT-COMPONENTS", (GLenum) GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS, "GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_PATCH_COMPONENTS)
defconsti(env, "GL-MAX-TESS-PATCH-COMPONENTS", (GLenum) GL_MAX_TESS_PATCH_COMPONENTS, "GL_MAX_TESS_PATCH_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS)
defconsti(env, "GL-MAX-TESS-CONTROL-TOTAL-OUTPUT-COMPONENTS", (GLenum) GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS, "GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS)
defconsti(env, "GL-MAX-TESS-EVALUATION-OUTPUT-COMPONENTS", (GLenum) GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS, "GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-TESS-CONTROL-UNIFORM-BLOCKS", (GLenum) GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS, "GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-TESS-EVALUATION-UNIFORM-BLOCKS", (GLenum) GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS, "GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_TESS_CONTROL_INPUT_COMPONENTS)
defconsti(env, "GL-MAX-TESS-CONTROL-INPUT-COMPONENTS", (GLenum) GL_MAX_TESS_CONTROL_INPUT_COMPONENTS, "GL_MAX_TESS_CONTROL_INPUT_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS)
defconsti(env, "GL-MAX-TESS-EVALUATION-INPUT-COMPONENTS", (GLenum) GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS, "GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS");
#endif
#if defined(GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-TESS-CONTROL-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-TESS-EVALUATION-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-TESS-CONTROL-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS, "GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-TESS-EVALUATION-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS, "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-TESS-CONTROL-ATOMIC-COUNTERS", (GLenum) GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS, "GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-TESS-EVALUATION-ATOMIC-COUNTERS", (GLenum) GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS, "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-TESS-CONTROL-IMAGE-UNIFORMS", (GLenum) GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS, "GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-TESS-EVALUATION-IMAGE-UNIFORMS", (GLenum) GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS, "GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS");
#endif
#if defined(GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-TESS-CONTROL-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS, "GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-TESS-EVALUATION-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS, "GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED)
defconsti(env, "GL-PRIMITIVE-RESTART-FOR-PATCHES-SUPPORTED", (GLenum) GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED, "GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED");
#endif
#if defined(GL_IS_PER_PATCH)
defconsti(env, "GL-IS-PER-PATCH", (GLenum) GL_IS_PER_PATCH, "GL_IS_PER_PATCH");
#endif
#if defined(GL_REFERENCED_BY_TESS_CONTROL_SHADER)
defconsti(env, "GL-REFERENCED-BY-TESS-CONTROL-SHADER", (GLenum) GL_REFERENCED_BY_TESS_CONTROL_SHADER, "GL_REFERENCED_BY_TESS_CONTROL_SHADER");
#endif
#if defined(GL_REFERENCED_BY_TESS_EVALUATION_SHADER)
defconsti(env, "GL-REFERENCED-BY-TESS-EVALUATION-SHADER", (GLenum) GL_REFERENCED_BY_TESS_EVALUATION_SHADER, "GL_REFERENCED_BY_TESS_EVALUATION_SHADER");
#endif
#if defined(GL_TESS_CONTROL_SHADER)
defconsti(env, "GL-TESS-CONTROL-SHADER", (GLenum) GL_TESS_CONTROL_SHADER, "GL_TESS_CONTROL_SHADER");
#endif
#if defined(GL_TESS_EVALUATION_SHADER)
defconsti(env, "GL-TESS-EVALUATION-SHADER", (GLenum) GL_TESS_EVALUATION_SHADER, "GL_TESS_EVALUATION_SHADER");
#endif
#if defined(GL_TESS_CONTROL_SHADER_BIT)
defconsti(env, "GL-TESS-CONTROL-SHADER-BIT", (GLenum) GL_TESS_CONTROL_SHADER_BIT, "GL_TESS_CONTROL_SHADER_BIT");
#endif
#if defined(GL_TESS_EVALUATION_SHADER_BIT)
defconsti(env, "GL-TESS-EVALUATION-SHADER-BIT", (GLenum) GL_TESS_EVALUATION_SHADER_BIT, "GL_TESS_EVALUATION_SHADER_BIT");
#endif
#if defined(GL_TEXTURE_BORDER_COLOR)
defconsti(env, "GL-TEXTURE-BORDER-COLOR", (GLenum) GL_TEXTURE_BORDER_COLOR, "GL_TEXTURE_BORDER_COLOR");
#endif
#if defined(GL_CLAMP_TO_BORDER)
defconsti(env, "GL-CLAMP-TO-BORDER", (GLenum) GL_CLAMP_TO_BORDER, "GL_CLAMP_TO_BORDER");
#endif
#if defined(GL_TEXTURE_BUFFER)
defconsti(env, "GL-TEXTURE-BUFFER", (GLenum) GL_TEXTURE_BUFFER, "GL_TEXTURE_BUFFER");
#endif
#if defined(GL_TEXTURE_BUFFER_BINDING)
defconsti(env, "GL-TEXTURE-BUFFER-BINDING", (GLenum) GL_TEXTURE_BUFFER_BINDING, "GL_TEXTURE_BUFFER_BINDING");
#endif
#if defined(GL_MAX_TEXTURE_BUFFER_SIZE)
defconsti(env, "GL-MAX-TEXTURE-BUFFER-SIZE", (GLenum) GL_MAX_TEXTURE_BUFFER_SIZE, "GL_MAX_TEXTURE_BUFFER_SIZE");
#endif
#if defined(GL_TEXTURE_BINDING_BUFFER)
defconsti(env, "GL-TEXTURE-BINDING-BUFFER", (GLenum) GL_TEXTURE_BINDING_BUFFER, "GL_TEXTURE_BINDING_BUFFER");
#endif
#if defined(GL_TEXTURE_BUFFER_DATA_STORE_BINDING)
defconsti(env, "GL-TEXTURE-BUFFER-DATA-STORE-BINDING", (GLenum) GL_TEXTURE_BUFFER_DATA_STORE_BINDING, "GL_TEXTURE_BUFFER_DATA_STORE_BINDING");
#endif
#if defined(GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT)
defconsti(env, "GL-TEXTURE-BUFFER-OFFSET-ALIGNMENT", (GLenum) GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT, "GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT");
#endif
#if defined(GL_SAMPLER_BUFFER)
defconsti(env, "GL-SAMPLER-BUFFER", (GLenum) GL_SAMPLER_BUFFER, "GL_SAMPLER_BUFFER");
#endif
#if defined(GL_INT_SAMPLER_BUFFER)
defconsti(env, "GL-INT-SAMPLER-BUFFER", (GLenum) GL_INT_SAMPLER_BUFFER, "GL_INT_SAMPLER_BUFFER");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_BUFFER)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-BUFFER", (GLenum) GL_UNSIGNED_INT_SAMPLER_BUFFER, "GL_UNSIGNED_INT_SAMPLER_BUFFER");
#endif
#if defined(GL_IMAGE_BUFFER)
defconsti(env, "GL-IMAGE-BUFFER", (GLenum) GL_IMAGE_BUFFER, "GL_IMAGE_BUFFER");
#endif
#if defined(GL_INT_IMAGE_BUFFER)
defconsti(env, "GL-INT-IMAGE-BUFFER", (GLenum) GL_INT_IMAGE_BUFFER, "GL_INT_IMAGE_BUFFER");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_BUFFER)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-BUFFER", (GLenum) GL_UNSIGNED_INT_IMAGE_BUFFER, "GL_UNSIGNED_INT_IMAGE_BUFFER");
#endif
#if defined(GL_TEXTURE_BUFFER_OFFSET)
defconsti(env, "GL-TEXTURE-BUFFER-OFFSET", (GLenum) GL_TEXTURE_BUFFER_OFFSET, "GL_TEXTURE_BUFFER_OFFSET");
#endif
#if defined(GL_TEXTURE_BUFFER_SIZE)
defconsti(env, "GL-TEXTURE-BUFFER-SIZE", (GLenum) GL_TEXTURE_BUFFER_SIZE, "GL_TEXTURE_BUFFER_SIZE");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_4x4)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-4x4", (GLenum) GL_COMPRESSED_RGBA_ASTC_4x4, "GL_COMPRESSED_RGBA_ASTC_4x4");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_5x4)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-5x4", (GLenum) GL_COMPRESSED_RGBA_ASTC_5x4, "GL_COMPRESSED_RGBA_ASTC_5x4");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_5x5)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-5x5", (GLenum) GL_COMPRESSED_RGBA_ASTC_5x5, "GL_COMPRESSED_RGBA_ASTC_5x5");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_6x5)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-6x5", (GLenum) GL_COMPRESSED_RGBA_ASTC_6x5, "GL_COMPRESSED_RGBA_ASTC_6x5");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_6x6)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-6x6", (GLenum) GL_COMPRESSED_RGBA_ASTC_6x6, "GL_COMPRESSED_RGBA_ASTC_6x6");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_8x5)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-8x5", (GLenum) GL_COMPRESSED_RGBA_ASTC_8x5, "GL_COMPRESSED_RGBA_ASTC_8x5");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_8x6)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-8x6", (GLenum) GL_COMPRESSED_RGBA_ASTC_8x6, "GL_COMPRESSED_RGBA_ASTC_8x6");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_8x8)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-8x8", (GLenum) GL_COMPRESSED_RGBA_ASTC_8x8, "GL_COMPRESSED_RGBA_ASTC_8x8");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x5)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x5", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x5, "GL_COMPRESSED_RGBA_ASTC_10x5");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x6)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x6", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x6, "GL_COMPRESSED_RGBA_ASTC_10x6");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x8)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x8", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x8, "GL_COMPRESSED_RGBA_ASTC_10x8");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x10)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x10", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x10, "GL_COMPRESSED_RGBA_ASTC_10x10");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_12x10)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-12x10", (GLenum) GL_COMPRESSED_RGBA_ASTC_12x10, "GL_COMPRESSED_RGBA_ASTC_12x10");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_12x12)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-12x12", (GLenum) GL_COMPRESSED_RGBA_ASTC_12x12, "GL_COMPRESSED_RGBA_ASTC_12x12");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-4x4", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-5x4", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-5x5", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-6x5", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-6x6", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-8x5", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-8x6", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-8x8", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x5", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x6", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x8", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x10", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-12x10", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-12x12", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_ARRAY)
defconsti(env, "GL-TEXTURE-CUBE-MAP-ARRAY", (GLenum) GL_TEXTURE_CUBE_MAP_ARRAY, "GL_TEXTURE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_TEXTURE_BINDING_CUBE_MAP_ARRAY)
defconsti(env, "GL-TEXTURE-BINDING-CUBE-MAP-ARRAY", (GLenum) GL_TEXTURE_BINDING_CUBE_MAP_ARRAY, "GL_TEXTURE_BINDING_CUBE_MAP_ARRAY");
#endif
#if defined(GL_SAMPLER_CUBE_MAP_ARRAY)
defconsti(env, "GL-SAMPLER-CUBE-MAP-ARRAY", (GLenum) GL_SAMPLER_CUBE_MAP_ARRAY, "GL_SAMPLER_CUBE_MAP_ARRAY");
#endif
#if defined(GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW)
defconsti(env, "GL-SAMPLER-CUBE-MAP-ARRAY-SHADOW", (GLenum) GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW, "GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW");
#endif
#if defined(GL_INT_SAMPLER_CUBE_MAP_ARRAY)
defconsti(env, "GL-INT-SAMPLER-CUBE-MAP-ARRAY", (GLenum) GL_INT_SAMPLER_CUBE_MAP_ARRAY, "GL_INT_SAMPLER_CUBE_MAP_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-CUBE-MAP-ARRAY", (GLenum) GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY, "GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY");
#endif
#if defined(GL_IMAGE_CUBE_MAP_ARRAY)
defconsti(env, "GL-IMAGE-CUBE-MAP-ARRAY", (GLenum) GL_IMAGE_CUBE_MAP_ARRAY, "GL_IMAGE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_INT_IMAGE_CUBE_MAP_ARRAY)
defconsti(env, "GL-INT-IMAGE-CUBE-MAP-ARRAY", (GLenum) GL_INT_IMAGE_CUBE_MAP_ARRAY, "GL_INT_IMAGE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-CUBE-MAP-ARRAY", (GLenum) GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY, "GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_STENCIL_INDEX)
defconsti(env, "GL-STENCIL-INDEX", (GLenum) GL_STENCIL_INDEX, "GL_STENCIL_INDEX");
#endif
#if defined(GL_STENCIL_INDEX8)
defconsti(env, "GL-STENCIL-INDEX8", (GLenum) GL_STENCIL_INDEX8, "GL_STENCIL_INDEX8");
#endif
#if defined(GL_TEXTURE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-TEXTURE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_TEXTURE_2D_MULTISAMPLE_ARRAY, "GL_TEXTURE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-TEXTURE-BINDING-2D-MULTISAMPLE-ARRAY", (GLenum) GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY, "GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_SAMPLER_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-SAMPLER-2D-MULTISAMPLE-ARRAY", (GLenum) GL_SAMPLER_2D_MULTISAMPLE_ARRAY, "GL_SAMPLER_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-INT-SAMPLER-2D-MULTISAMPLE-ARRAY", (GLenum) GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY, "GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-MULTISAMPLE-ARRAY", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY, "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_DEPTH_BUFFER_BIT)
defconsti(env, "GL-DEPTH-BUFFER-BIT", (GLenum) GL_DEPTH_BUFFER_BIT, "GL_DEPTH_BUFFER_BIT");
#endif
#if defined(GL_STENCIL_BUFFER_BIT)
defconsti(env, "GL-STENCIL-BUFFER-BIT", (GLenum) GL_STENCIL_BUFFER_BIT, "GL_STENCIL_BUFFER_BIT");
#endif
#if defined(GL_COLOR_BUFFER_BIT)
defconsti(env, "GL-COLOR-BUFFER-BIT", (GLenum) GL_COLOR_BUFFER_BIT, "GL_COLOR_BUFFER_BIT");
#endif
#if defined(GL_FALSE)
defconsti(env, "GL-FALSE", (GLenum) GL_FALSE, "GL_FALSE");
#endif
#if defined(GL_TRUE)
defconsti(env, "GL-TRUE", (GLenum) GL_TRUE, "GL_TRUE");
#endif
#if defined(GL_POINTS)
defconsti(env, "GL-POINTS", (GLenum) GL_POINTS, "GL_POINTS");
#endif
#if defined(GL_LINES)
defconsti(env, "GL-LINES", (GLenum) GL_LINES, "GL_LINES");
#endif
#if defined(GL_LINE_LOOP)
defconsti(env, "GL-LINE-LOOP", (GLenum) GL_LINE_LOOP, "GL_LINE_LOOP");
#endif
#if defined(GL_LINE_STRIP)
defconsti(env, "GL-LINE-STRIP", (GLenum) GL_LINE_STRIP, "GL_LINE_STRIP");
#endif
#if defined(GL_TRIANGLES)
defconsti(env, "GL-TRIANGLES", (GLenum) GL_TRIANGLES, "GL_TRIANGLES");
#endif
#if defined(GL_TRIANGLE_STRIP)
defconsti(env, "GL-TRIANGLE-STRIP", (GLenum) GL_TRIANGLE_STRIP, "GL_TRIANGLE_STRIP");
#endif
#if defined(GL_TRIANGLE_FAN)
defconsti(env, "GL-TRIANGLE-FAN", (GLenum) GL_TRIANGLE_FAN, "GL_TRIANGLE_FAN");
#endif
#if defined(GL_ZERO)
defconsti(env, "GL-ZERO", (GLenum) GL_ZERO, "GL_ZERO");
#endif
#if defined(GL_ONE)
defconsti(env, "GL-ONE", (GLenum) GL_ONE, "GL_ONE");
#endif
#if defined(GL_SRC_COLOR)
defconsti(env, "GL-SRC-COLOR", (GLenum) GL_SRC_COLOR, "GL_SRC_COLOR");
#endif
#if defined(GL_ONE_MINUS_SRC_COLOR)
defconsti(env, "GL-ONE-MINUS-SRC-COLOR", (GLenum) GL_ONE_MINUS_SRC_COLOR, "GL_ONE_MINUS_SRC_COLOR");
#endif
#if defined(GL_SRC_ALPHA)
defconsti(env, "GL-SRC-ALPHA", (GLenum) GL_SRC_ALPHA, "GL_SRC_ALPHA");
#endif
#if defined(GL_ONE_MINUS_SRC_ALPHA)
defconsti(env, "GL-ONE-MINUS-SRC-ALPHA", (GLenum) GL_ONE_MINUS_SRC_ALPHA, "GL_ONE_MINUS_SRC_ALPHA");
#endif
#if defined(GL_DST_ALPHA)
defconsti(env, "GL-DST-ALPHA", (GLenum) GL_DST_ALPHA, "GL_DST_ALPHA");
#endif
#if defined(GL_ONE_MINUS_DST_ALPHA)
defconsti(env, "GL-ONE-MINUS-DST-ALPHA", (GLenum) GL_ONE_MINUS_DST_ALPHA, "GL_ONE_MINUS_DST_ALPHA");
#endif
#if defined(GL_DST_COLOR)
defconsti(env, "GL-DST-COLOR", (GLenum) GL_DST_COLOR, "GL_DST_COLOR");
#endif
#if defined(GL_ONE_MINUS_DST_COLOR)
defconsti(env, "GL-ONE-MINUS-DST-COLOR", (GLenum) GL_ONE_MINUS_DST_COLOR, "GL_ONE_MINUS_DST_COLOR");
#endif
#if defined(GL_SRC_ALPHA_SATURATE)
defconsti(env, "GL-SRC-ALPHA-SATURATE", (GLenum) GL_SRC_ALPHA_SATURATE, "GL_SRC_ALPHA_SATURATE");
#endif
#if defined(GL_FUNC_ADD)
defconsti(env, "GL-FUNC-ADD", (GLenum) GL_FUNC_ADD, "GL_FUNC_ADD");
#endif
#if defined(GL_BLEND_EQUATION)
defconsti(env, "GL-BLEND-EQUATION", (GLenum) GL_BLEND_EQUATION, "GL_BLEND_EQUATION");
#endif
#if defined(GL_BLEND_EQUATION_RGB)
defconsti(env, "GL-BLEND-EQUATION-RGB", (GLenum) GL_BLEND_EQUATION_RGB, "GL_BLEND_EQUATION_RGB");
#endif
#if defined(GL_BLEND_EQUATION_ALPHA)
defconsti(env, "GL-BLEND-EQUATION-ALPHA", (GLenum) GL_BLEND_EQUATION_ALPHA, "GL_BLEND_EQUATION_ALPHA");
#endif
#if defined(GL_FUNC_SUBTRACT)
defconsti(env, "GL-FUNC-SUBTRACT", (GLenum) GL_FUNC_SUBTRACT, "GL_FUNC_SUBTRACT");
#endif
#if defined(GL_FUNC_REVERSE_SUBTRACT)
defconsti(env, "GL-FUNC-REVERSE-SUBTRACT", (GLenum) GL_FUNC_REVERSE_SUBTRACT, "GL_FUNC_REVERSE_SUBTRACT");
#endif
#if defined(GL_BLEND_DST_RGB)
defconsti(env, "GL-BLEND-DST-RGB", (GLenum) GL_BLEND_DST_RGB, "GL_BLEND_DST_RGB");
#endif
#if defined(GL_BLEND_SRC_RGB)
defconsti(env, "GL-BLEND-SRC-RGB", (GLenum) GL_BLEND_SRC_RGB, "GL_BLEND_SRC_RGB");
#endif
#if defined(GL_BLEND_DST_ALPHA)
defconsti(env, "GL-BLEND-DST-ALPHA", (GLenum) GL_BLEND_DST_ALPHA, "GL_BLEND_DST_ALPHA");
#endif
#if defined(GL_BLEND_SRC_ALPHA)
defconsti(env, "GL-BLEND-SRC-ALPHA", (GLenum) GL_BLEND_SRC_ALPHA, "GL_BLEND_SRC_ALPHA");
#endif
#if defined(GL_CONSTANT_COLOR)
defconsti(env, "GL-CONSTANT-COLOR", (GLenum) GL_CONSTANT_COLOR, "GL_CONSTANT_COLOR");
#endif
#if defined(GL_ONE_MINUS_CONSTANT_COLOR)
defconsti(env, "GL-ONE-MINUS-CONSTANT-COLOR", (GLenum) GL_ONE_MINUS_CONSTANT_COLOR, "GL_ONE_MINUS_CONSTANT_COLOR");
#endif
#if defined(GL_CONSTANT_ALPHA)
defconsti(env, "GL-CONSTANT-ALPHA", (GLenum) GL_CONSTANT_ALPHA, "GL_CONSTANT_ALPHA");
#endif
#if defined(GL_ONE_MINUS_CONSTANT_ALPHA)
defconsti(env, "GL-ONE-MINUS-CONSTANT-ALPHA", (GLenum) GL_ONE_MINUS_CONSTANT_ALPHA, "GL_ONE_MINUS_CONSTANT_ALPHA");
#endif
#if defined(GL_BLEND_COLOR)
defconsti(env, "GL-BLEND-COLOR", (GLenum) GL_BLEND_COLOR, "GL_BLEND_COLOR");
#endif
#if defined(GL_ARRAY_BUFFER)
defconsti(env, "GL-ARRAY-BUFFER", (GLenum) GL_ARRAY_BUFFER, "GL_ARRAY_BUFFER");
#endif
#if defined(GL_ELEMENT_ARRAY_BUFFER)
defconsti(env, "GL-ELEMENT-ARRAY-BUFFER", (GLenum) GL_ELEMENT_ARRAY_BUFFER, "GL_ELEMENT_ARRAY_BUFFER");
#endif
#if defined(GL_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-ARRAY-BUFFER-BINDING", (GLenum) GL_ARRAY_BUFFER_BINDING, "GL_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_ELEMENT_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-ELEMENT-ARRAY-BUFFER-BINDING", (GLenum) GL_ELEMENT_ARRAY_BUFFER_BINDING, "GL_ELEMENT_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_STREAM_DRAW)
defconsti(env, "GL-STREAM-DRAW", (GLenum) GL_STREAM_DRAW, "GL_STREAM_DRAW");
#endif
#if defined(GL_STATIC_DRAW)
defconsti(env, "GL-STATIC-DRAW", (GLenum) GL_STATIC_DRAW, "GL_STATIC_DRAW");
#endif
#if defined(GL_DYNAMIC_DRAW)
defconsti(env, "GL-DYNAMIC-DRAW", (GLenum) GL_DYNAMIC_DRAW, "GL_DYNAMIC_DRAW");
#endif
#if defined(GL_BUFFER_SIZE)
defconsti(env, "GL-BUFFER-SIZE", (GLenum) GL_BUFFER_SIZE, "GL_BUFFER_SIZE");
#endif
#if defined(GL_BUFFER_USAGE)
defconsti(env, "GL-BUFFER-USAGE", (GLenum) GL_BUFFER_USAGE, "GL_BUFFER_USAGE");
#endif
#if defined(GL_CURRENT_VERTEX_ATTRIB)
defconsti(env, "GL-CURRENT-VERTEX-ATTRIB", (GLenum) GL_CURRENT_VERTEX_ATTRIB, "GL_CURRENT_VERTEX_ATTRIB");
#endif
#if defined(GL_FRONT)
defconsti(env, "GL-FRONT", (GLenum) GL_FRONT, "GL_FRONT");
#endif
#if defined(GL_BACK)
defconsti(env, "GL-BACK", (GLenum) GL_BACK, "GL_BACK");
#endif
#if defined(GL_FRONT_AND_BACK)
defconsti(env, "GL-FRONT-AND-BACK", (GLenum) GL_FRONT_AND_BACK, "GL_FRONT_AND_BACK");
#endif
#if defined(GL_TEXTURE_2D)
defconsti(env, "GL-TEXTURE-2D", (GLenum) GL_TEXTURE_2D, "GL_TEXTURE_2D");
#endif
#if defined(GL_CULL_FACE)
defconsti(env, "GL-CULL-FACE", (GLenum) GL_CULL_FACE, "GL_CULL_FACE");
#endif
#if defined(GL_BLEND)
defconsti(env, "GL-BLEND", (GLenum) GL_BLEND, "GL_BLEND");
#endif
#if defined(GL_DITHER)
defconsti(env, "GL-DITHER", (GLenum) GL_DITHER, "GL_DITHER");
#endif
#if defined(GL_STENCIL_TEST)
defconsti(env, "GL-STENCIL-TEST", (GLenum) GL_STENCIL_TEST, "GL_STENCIL_TEST");
#endif
#if defined(GL_DEPTH_TEST)
defconsti(env, "GL-DEPTH-TEST", (GLenum) GL_DEPTH_TEST, "GL_DEPTH_TEST");
#endif
#if defined(GL_SCISSOR_TEST)
defconsti(env, "GL-SCISSOR-TEST", (GLenum) GL_SCISSOR_TEST, "GL_SCISSOR_TEST");
#endif
#if defined(GL_POLYGON_OFFSET_FILL)
defconsti(env, "GL-POLYGON-OFFSET-FILL", (GLenum) GL_POLYGON_OFFSET_FILL, "GL_POLYGON_OFFSET_FILL");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_COVERAGE)
defconsti(env, "GL-SAMPLE-ALPHA-TO-COVERAGE", (GLenum) GL_SAMPLE_ALPHA_TO_COVERAGE, "GL_SAMPLE_ALPHA_TO_COVERAGE");
#endif
#if defined(GL_SAMPLE_COVERAGE)
defconsti(env, "GL-SAMPLE-COVERAGE", (GLenum) GL_SAMPLE_COVERAGE, "GL_SAMPLE_COVERAGE");
#endif
#if defined(GL_NO_ERROR)
defconsti(env, "GL-NO-ERROR", (GLenum) GL_NO_ERROR, "GL_NO_ERROR");
#endif
#if defined(GL_INVALID_ENUM)
defconsti(env, "GL-INVALID-ENUM", (GLenum) GL_INVALID_ENUM, "GL_INVALID_ENUM");
#endif
#if defined(GL_INVALID_VALUE)
defconsti(env, "GL-INVALID-VALUE", (GLenum) GL_INVALID_VALUE, "GL_INVALID_VALUE");
#endif
#if defined(GL_INVALID_OPERATION)
defconsti(env, "GL-INVALID-OPERATION", (GLenum) GL_INVALID_OPERATION, "GL_INVALID_OPERATION");
#endif
#if defined(GL_OUT_OF_MEMORY)
defconsti(env, "GL-OUT-OF-MEMORY", (GLenum) GL_OUT_OF_MEMORY, "GL_OUT_OF_MEMORY");
#endif
#if defined(GL_INVALID_FRAMEBUFFER_OPERATION)
defconsti(env, "GL-INVALID-FRAMEBUFFER-OPERATION", (GLenum) GL_INVALID_FRAMEBUFFER_OPERATION, "GL_INVALID_FRAMEBUFFER_OPERATION");
#endif
#if defined(GL_CONTEXT_LOST)
defconsti(env, "GL-CONTEXT-LOST", (GLenum) GL_CONTEXT_LOST, "GL_CONTEXT_LOST");
#endif
#if defined(GL_CW)
defconsti(env, "GL-CW", (GLenum) GL_CW, "GL_CW");
#endif
#if defined(GL_CCW)
defconsti(env, "GL-CCW", (GLenum) GL_CCW, "GL_CCW");
#endif
#if defined(GL_LINE_WIDTH)
defconsti(env, "GL-LINE-WIDTH", (GLenum) GL_LINE_WIDTH, "GL_LINE_WIDTH");
#endif
#if defined(GL_ALIASED_POINT_SIZE_RANGE)
defconsti(env, "GL-ALIASED-POINT-SIZE-RANGE", (GLenum) GL_ALIASED_POINT_SIZE_RANGE, "GL_ALIASED_POINT_SIZE_RANGE");
#endif
#if defined(GL_ALIASED_LINE_WIDTH_RANGE)
defconsti(env, "GL-ALIASED-LINE-WIDTH-RANGE", (GLenum) GL_ALIASED_LINE_WIDTH_RANGE, "GL_ALIASED_LINE_WIDTH_RANGE");
#endif
#if defined(GL_CULL_FACE_MODE)
defconsti(env, "GL-CULL-FACE-MODE", (GLenum) GL_CULL_FACE_MODE, "GL_CULL_FACE_MODE");
#endif
#if defined(GL_FRONT_FACE)
defconsti(env, "GL-FRONT-FACE", (GLenum) GL_FRONT_FACE, "GL_FRONT_FACE");
#endif
#if defined(GL_DEPTH_RANGE)
defconsti(env, "GL-DEPTH-RANGE", (GLenum) GL_DEPTH_RANGE, "GL_DEPTH_RANGE");
#endif
#if defined(GL_DEPTH_WRITEMASK)
defconsti(env, "GL-DEPTH-WRITEMASK", (GLenum) GL_DEPTH_WRITEMASK, "GL_DEPTH_WRITEMASK");
#endif
#if defined(GL_DEPTH_CLEAR_VALUE)
defconsti(env, "GL-DEPTH-CLEAR-VALUE", (GLenum) GL_DEPTH_CLEAR_VALUE, "GL_DEPTH_CLEAR_VALUE");
#endif
#if defined(GL_DEPTH_FUNC)
defconsti(env, "GL-DEPTH-FUNC", (GLenum) GL_DEPTH_FUNC, "GL_DEPTH_FUNC");
#endif
#if defined(GL_STENCIL_CLEAR_VALUE)
defconsti(env, "GL-STENCIL-CLEAR-VALUE", (GLenum) GL_STENCIL_CLEAR_VALUE, "GL_STENCIL_CLEAR_VALUE");
#endif
#if defined(GL_STENCIL_FUNC)
defconsti(env, "GL-STENCIL-FUNC", (GLenum) GL_STENCIL_FUNC, "GL_STENCIL_FUNC");
#endif
#if defined(GL_STENCIL_FAIL)
defconsti(env, "GL-STENCIL-FAIL", (GLenum) GL_STENCIL_FAIL, "GL_STENCIL_FAIL");
#endif
#if defined(GL_STENCIL_PASS_DEPTH_FAIL)
defconsti(env, "GL-STENCIL-PASS-DEPTH-FAIL", (GLenum) GL_STENCIL_PASS_DEPTH_FAIL, "GL_STENCIL_PASS_DEPTH_FAIL");
#endif
#if defined(GL_STENCIL_PASS_DEPTH_PASS)
defconsti(env, "GL-STENCIL-PASS-DEPTH-PASS", (GLenum) GL_STENCIL_PASS_DEPTH_PASS, "GL_STENCIL_PASS_DEPTH_PASS");
#endif
#if defined(GL_STENCIL_REF)
defconsti(env, "GL-STENCIL-REF", (GLenum) GL_STENCIL_REF, "GL_STENCIL_REF");
#endif
#if defined(GL_STENCIL_VALUE_MASK)
defconsti(env, "GL-STENCIL-VALUE-MASK", (GLenum) GL_STENCIL_VALUE_MASK, "GL_STENCIL_VALUE_MASK");
#endif
#if defined(GL_STENCIL_WRITEMASK)
defconsti(env, "GL-STENCIL-WRITEMASK", (GLenum) GL_STENCIL_WRITEMASK, "GL_STENCIL_WRITEMASK");
#endif
#if defined(GL_STENCIL_BACK_FUNC)
defconsti(env, "GL-STENCIL-BACK-FUNC", (GLenum) GL_STENCIL_BACK_FUNC, "GL_STENCIL_BACK_FUNC");
#endif
#if defined(GL_STENCIL_BACK_FAIL)
defconsti(env, "GL-STENCIL-BACK-FAIL", (GLenum) GL_STENCIL_BACK_FAIL, "GL_STENCIL_BACK_FAIL");
#endif
#if defined(GL_STENCIL_BACK_PASS_DEPTH_FAIL)
defconsti(env, "GL-STENCIL-BACK-PASS-DEPTH-FAIL", (GLenum) GL_STENCIL_BACK_PASS_DEPTH_FAIL, "GL_STENCIL_BACK_PASS_DEPTH_FAIL");
#endif
#if defined(GL_STENCIL_BACK_PASS_DEPTH_PASS)
defconsti(env, "GL-STENCIL-BACK-PASS-DEPTH-PASS", (GLenum) GL_STENCIL_BACK_PASS_DEPTH_PASS, "GL_STENCIL_BACK_PASS_DEPTH_PASS");
#endif
#if defined(GL_STENCIL_BACK_REF)
defconsti(env, "GL-STENCIL-BACK-REF", (GLenum) GL_STENCIL_BACK_REF, "GL_STENCIL_BACK_REF");
#endif
#if defined(GL_STENCIL_BACK_VALUE_MASK)
defconsti(env, "GL-STENCIL-BACK-VALUE-MASK", (GLenum) GL_STENCIL_BACK_VALUE_MASK, "GL_STENCIL_BACK_VALUE_MASK");
#endif
#if defined(GL_STENCIL_BACK_WRITEMASK)
defconsti(env, "GL-STENCIL-BACK-WRITEMASK", (GLenum) GL_STENCIL_BACK_WRITEMASK, "GL_STENCIL_BACK_WRITEMASK");
#endif
#if defined(GL_VIEWPORT)
defconsti(env, "GL-VIEWPORT", (GLenum) GL_VIEWPORT, "GL_VIEWPORT");
#endif
#if defined(GL_SCISSOR_BOX)
defconsti(env, "GL-SCISSOR-BOX", (GLenum) GL_SCISSOR_BOX, "GL_SCISSOR_BOX");
#endif
#if defined(GL_COLOR_CLEAR_VALUE)
defconsti(env, "GL-COLOR-CLEAR-VALUE", (GLenum) GL_COLOR_CLEAR_VALUE, "GL_COLOR_CLEAR_VALUE");
#endif
#if defined(GL_COLOR_WRITEMASK)
defconsti(env, "GL-COLOR-WRITEMASK", (GLenum) GL_COLOR_WRITEMASK, "GL_COLOR_WRITEMASK");
#endif
#if defined(GL_UNPACK_ALIGNMENT)
defconsti(env, "GL-UNPACK-ALIGNMENT", (GLenum) GL_UNPACK_ALIGNMENT, "GL_UNPACK_ALIGNMENT");
#endif
#if defined(GL_PACK_ALIGNMENT)
defconsti(env, "GL-PACK-ALIGNMENT", (GLenum) GL_PACK_ALIGNMENT, "GL_PACK_ALIGNMENT");
#endif
#if defined(GL_MAX_TEXTURE_SIZE)
defconsti(env, "GL-MAX-TEXTURE-SIZE", (GLenum) GL_MAX_TEXTURE_SIZE, "GL_MAX_TEXTURE_SIZE");
#endif
#if defined(GL_MAX_VIEWPORT_DIMS)
defconsti(env, "GL-MAX-VIEWPORT-DIMS", (GLenum) GL_MAX_VIEWPORT_DIMS, "GL_MAX_VIEWPORT_DIMS");
#endif
#if defined(GL_SUBPIXEL_BITS)
defconsti(env, "GL-SUBPIXEL-BITS", (GLenum) GL_SUBPIXEL_BITS, "GL_SUBPIXEL_BITS");
#endif
#if defined(GL_RED_BITS)
defconsti(env, "GL-RED-BITS", (GLenum) GL_RED_BITS, "GL_RED_BITS");
#endif
#if defined(GL_GREEN_BITS)
defconsti(env, "GL-GREEN-BITS", (GLenum) GL_GREEN_BITS, "GL_GREEN_BITS");
#endif
#if defined(GL_BLUE_BITS)
defconsti(env, "GL-BLUE-BITS", (GLenum) GL_BLUE_BITS, "GL_BLUE_BITS");
#endif
#if defined(GL_ALPHA_BITS)
defconsti(env, "GL-ALPHA-BITS", (GLenum) GL_ALPHA_BITS, "GL_ALPHA_BITS");
#endif
#if defined(GL_DEPTH_BITS)
defconsti(env, "GL-DEPTH-BITS", (GLenum) GL_DEPTH_BITS, "GL_DEPTH_BITS");
#endif
#if defined(GL_STENCIL_BITS)
defconsti(env, "GL-STENCIL-BITS", (GLenum) GL_STENCIL_BITS, "GL_STENCIL_BITS");
#endif
#if defined(GL_POLYGON_OFFSET_UNITS)
defconsti(env, "GL-POLYGON-OFFSET-UNITS", (GLenum) GL_POLYGON_OFFSET_UNITS, "GL_POLYGON_OFFSET_UNITS");
#endif
#if defined(GL_POLYGON_OFFSET_FACTOR)
defconsti(env, "GL-POLYGON-OFFSET-FACTOR", (GLenum) GL_POLYGON_OFFSET_FACTOR, "GL_POLYGON_OFFSET_FACTOR");
#endif
#if defined(GL_TEXTURE_BINDING_2D)
defconsti(env, "GL-TEXTURE-BINDING-2D", (GLenum) GL_TEXTURE_BINDING_2D, "GL_TEXTURE_BINDING_2D");
#endif
#if defined(GL_SAMPLE_BUFFERS)
defconsti(env, "GL-SAMPLE-BUFFERS", (GLenum) GL_SAMPLE_BUFFERS, "GL_SAMPLE_BUFFERS");
#endif
#if defined(GL_SAMPLES)
defconsti(env, "GL-SAMPLES", (GLenum) GL_SAMPLES, "GL_SAMPLES");
#endif
#if defined(GL_SAMPLE_COVERAGE_VALUE)
defconsti(env, "GL-SAMPLE-COVERAGE-VALUE", (GLenum) GL_SAMPLE_COVERAGE_VALUE, "GL_SAMPLE_COVERAGE_VALUE");
#endif
#if defined(GL_SAMPLE_COVERAGE_INVERT)
defconsti(env, "GL-SAMPLE-COVERAGE-INVERT", (GLenum) GL_SAMPLE_COVERAGE_INVERT, "GL_SAMPLE_COVERAGE_INVERT");
#endif
#if defined(GL_NUM_COMPRESSED_TEXTURE_FORMATS)
defconsti(env, "GL-NUM-COMPRESSED-TEXTURE-FORMATS", (GLenum) GL_NUM_COMPRESSED_TEXTURE_FORMATS, "GL_NUM_COMPRESSED_TEXTURE_FORMATS");
#endif
#if defined(GL_COMPRESSED_TEXTURE_FORMATS)
defconsti(env, "GL-COMPRESSED-TEXTURE-FORMATS", (GLenum) GL_COMPRESSED_TEXTURE_FORMATS, "GL_COMPRESSED_TEXTURE_FORMATS");
#endif
#if defined(GL_DONT_CARE)
defconsti(env, "GL-DONT-CARE", (GLenum) GL_DONT_CARE, "GL_DONT_CARE");
#endif
#if defined(GL_FASTEST)
defconsti(env, "GL-FASTEST", (GLenum) GL_FASTEST, "GL_FASTEST");
#endif
#if defined(GL_NICEST)
defconsti(env, "GL-NICEST", (GLenum) GL_NICEST, "GL_NICEST");
#endif
#if defined(GL_GENERATE_MIPMAP_HINT)
defconsti(env, "GL-GENERATE-MIPMAP-HINT", (GLenum) GL_GENERATE_MIPMAP_HINT, "GL_GENERATE_MIPMAP_HINT");
#endif
#if defined(GL_BYTE)
defconsti(env, "GL-BYTE", (GLenum) GL_BYTE, "GL_BYTE");
#endif
#if defined(GL_UNSIGNED_BYTE)
defconsti(env, "GL-UNSIGNED-BYTE", (GLenum) GL_UNSIGNED_BYTE, "GL_UNSIGNED_BYTE");
#endif
#if defined(GL_SHORT)
defconsti(env, "GL-SHORT", (GLenum) GL_SHORT, "GL_SHORT");
#endif
#if defined(GL_UNSIGNED_SHORT)
defconsti(env, "GL-UNSIGNED-SHORT", (GLenum) GL_UNSIGNED_SHORT, "GL_UNSIGNED_SHORT");
#endif
#if defined(GL_INT)
defconsti(env, "GL-INT", (GLenum) GL_INT, "GL_INT");
#endif
#if defined(GL_UNSIGNED_INT)
defconsti(env, "GL-UNSIGNED-INT", (GLenum) GL_UNSIGNED_INT, "GL_UNSIGNED_INT");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_RED)
defconsti(env, "GL-RED", (GLenum) GL_RED, "GL_RED");
#endif
#if defined(GL_RG)
defconsti(env, "GL-RG", (GLenum) GL_RG, "GL_RG");
#endif
#if defined(GL_RGB)
defconsti(env, "GL-RGB", (GLenum) GL_RGB, "GL_RGB");
#endif
#if defined(GL_RGBA)
defconsti(env, "GL-RGBA", (GLenum) GL_RGBA, "GL_RGBA");
#endif
#if defined(GL_UNSIGNED_SHORT_4_4_4_4)
defconsti(env, "GL-UNSIGNED-SHORT-4-4-4-4", (GLenum) GL_UNSIGNED_SHORT_4_4_4_4, "GL_UNSIGNED_SHORT_4_4_4_4");
#endif
#if defined(GL_UNSIGNED_SHORT_5_5_5_1)
defconsti(env, "GL-UNSIGNED-SHORT-5-5-5-1", (GLenum) GL_UNSIGNED_SHORT_5_5_5_1, "GL_UNSIGNED_SHORT_5_5_5_1");
#endif
#if defined(GL_UNSIGNED_SHORT_5_6_5)
defconsti(env, "GL-UNSIGNED-SHORT-5-6-5", (GLenum) GL_UNSIGNED_SHORT_5_6_5, "GL_UNSIGNED_SHORT_5_6_5");
#endif
#if defined(GL_MAX_VERTEX_ATTRIBS)
defconsti(env, "GL-MAX-VERTEX-ATTRIBS", (GLenum) GL_MAX_VERTEX_ATTRIBS, "GL_MAX_VERTEX_ATTRIBS");
#endif
#if defined(GL_MAX_VERTEX_UNIFORM_VECTORS)
defconsti(env, "GL-MAX-VERTEX-UNIFORM-VECTORS", (GLenum) GL_MAX_VERTEX_UNIFORM_VECTORS, "GL_MAX_VERTEX_UNIFORM_VECTORS");
#endif
#if defined(GL_MAX_VARYING_VECTORS)
defconsti(env, "GL-MAX-VARYING-VECTORS", (GLenum) GL_MAX_VARYING_VECTORS, "GL_MAX_VARYING_VECTORS");
#endif
#if defined(GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-COMBINED-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS, "GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-VERTEX-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS, "GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_TEXTURE_IMAGE_UNITS, "GL_MAX_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_FRAGMENT_UNIFORM_VECTORS)
defconsti(env, "GL-MAX-FRAGMENT-UNIFORM-VECTORS", (GLenum) GL_MAX_FRAGMENT_UNIFORM_VECTORS, "GL_MAX_FRAGMENT_UNIFORM_VECTORS");
#endif
#if defined(GL_LINK_STATUS)
defconsti(env, "GL-LINK-STATUS", (GLenum) GL_LINK_STATUS, "GL_LINK_STATUS");
#endif
#if defined(GL_SHADING_LANGUAGE_VERSION)
defconsti(env, "GL-SHADING-LANGUAGE-VERSION", (GLenum) GL_SHADING_LANGUAGE_VERSION, "GL_SHADING_LANGUAGE_VERSION");
#endif
#if defined(GL_CURRENT_PROGRAM)
defconsti(env, "GL-CURRENT-PROGRAM", (GLenum) GL_CURRENT_PROGRAM, "GL_CURRENT_PROGRAM");
#endif
#if defined(GL_NEVER)
defconsti(env, "GL-NEVER", (GLenum) GL_NEVER, "GL_NEVER");
#endif
#if defined(GL_LESS)
defconsti(env, "GL-LESS", (GLenum) GL_LESS, "GL_LESS");
#endif
#if defined(GL_EQUAL)
defconsti(env, "GL-EQUAL", (GLenum) GL_EQUAL, "GL_EQUAL");
#endif
#if defined(GL_LEQUAL)
defconsti(env, "GL-LEQUAL", (GLenum) GL_LEQUAL, "GL_LEQUAL");
#endif
#if defined(GL_GREATER)
defconsti(env, "GL-GREATER", (GLenum) GL_GREATER, "GL_GREATER");
#endif
#if defined(GL_NOTEQUAL)
defconsti(env, "GL-NOTEQUAL", (GLenum) GL_NOTEQUAL, "GL_NOTEQUAL");
#endif
#if defined(GL_GEQUAL)
defconsti(env, "GL-GEQUAL", (GLenum) GL_GEQUAL, "GL_GEQUAL");
#endif
#if defined(GL_ALWAYS)
defconsti(env, "GL-ALWAYS", (GLenum) GL_ALWAYS, "GL_ALWAYS");
#endif
#if defined(GL_KEEP)
defconsti(env, "GL-KEEP", (GLenum) GL_KEEP, "GL_KEEP");
#endif
#if defined(GL_REPLACE)
defconsti(env, "GL-REPLACE", (GLenum) GL_REPLACE, "GL_REPLACE");
#endif
#if defined(GL_INCR)
defconsti(env, "GL-INCR", (GLenum) GL_INCR, "GL_INCR");
#endif
#if defined(GL_DECR)
defconsti(env, "GL-DECR", (GLenum) GL_DECR, "GL_DECR");
#endif
#if defined(GL_INVERT)
defconsti(env, "GL-INVERT", (GLenum) GL_INVERT, "GL_INVERT");
#endif
#if defined(GL_INCR_WRAP)
defconsti(env, "GL-INCR-WRAP", (GLenum) GL_INCR_WRAP, "GL_INCR_WRAP");
#endif
#if defined(GL_DECR_WRAP)
defconsti(env, "GL-DECR-WRAP", (GLenum) GL_DECR_WRAP, "GL_DECR_WRAP");
#endif
#if defined(GL_VENDOR)
defconsti(env, "GL-VENDOR", (GLenum) GL_VENDOR, "GL_VENDOR");
#endif
#if defined(GL_RENDERER)
defconsti(env, "GL-RENDERER", (GLenum) GL_RENDERER, "GL_RENDERER");
#endif
#if defined(GL_VERSION)
defconsti(env, "GL-VERSION", (GLenum) GL_VERSION, "GL_VERSION");
#endif
#if defined(GL_EXTENSIONS)
defconsti(env, "GL-EXTENSIONS", (GLenum) GL_EXTENSIONS, "GL_EXTENSIONS");
#endif
#if defined(GL_NEAREST)
defconsti(env, "GL-NEAREST", (GLenum) GL_NEAREST, "GL_NEAREST");
#endif
#if defined(GL_LINEAR)
defconsti(env, "GL-LINEAR", (GLenum) GL_LINEAR, "GL_LINEAR");
#endif
#if defined(GL_NEAREST_MIPMAP_NEAREST)
defconsti(env, "GL-NEAREST-MIPMAP-NEAREST", (GLenum) GL_NEAREST_MIPMAP_NEAREST, "GL_NEAREST_MIPMAP_NEAREST");
#endif
#if defined(GL_LINEAR_MIPMAP_NEAREST)
defconsti(env, "GL-LINEAR-MIPMAP-NEAREST", (GLenum) GL_LINEAR_MIPMAP_NEAREST, "GL_LINEAR_MIPMAP_NEAREST");
#endif
#if defined(GL_NEAREST_MIPMAP_LINEAR)
defconsti(env, "GL-NEAREST-MIPMAP-LINEAR", (GLenum) GL_NEAREST_MIPMAP_LINEAR, "GL_NEAREST_MIPMAP_LINEAR");
#endif
#if defined(GL_LINEAR_MIPMAP_LINEAR)
defconsti(env, "GL-LINEAR-MIPMAP-LINEAR", (GLenum) GL_LINEAR_MIPMAP_LINEAR, "GL_LINEAR_MIPMAP_LINEAR");
#endif
#if defined(GL_TEXTURE_MAG_FILTER)
defconsti(env, "GL-TEXTURE-MAG-FILTER", (GLenum) GL_TEXTURE_MAG_FILTER, "GL_TEXTURE_MAG_FILTER");
#endif
#if defined(GL_TEXTURE_MIN_FILTER)
defconsti(env, "GL-TEXTURE-MIN-FILTER", (GLenum) GL_TEXTURE_MIN_FILTER, "GL_TEXTURE_MIN_FILTER");
#endif
#if defined(GL_TEXTURE_WRAP_S)
defconsti(env, "GL-TEXTURE-WRAP-S", (GLenum) GL_TEXTURE_WRAP_S, "GL_TEXTURE_WRAP_S");
#endif
#if defined(GL_TEXTURE_WRAP_T)
defconsti(env, "GL-TEXTURE-WRAP-T", (GLenum) GL_TEXTURE_WRAP_T, "GL_TEXTURE_WRAP_T");
#endif
#if defined(GL_TEXTURE_IMMUTABLE_FORMAT)
defconsti(env, "GL-TEXTURE-IMMUTABLE-FORMAT", (GLenum) GL_TEXTURE_IMMUTABLE_FORMAT, "GL_TEXTURE_IMMUTABLE_FORMAT");
#endif
#if defined(GL_TEXTURE)
defconsti(env, "GL-TEXTURE", (GLenum) GL_TEXTURE, "GL_TEXTURE");
#endif
#if defined(GL_TEXTURE0)
defconsti(env, "GL-TEXTURE0", (GLenum) GL_TEXTURE0, "GL_TEXTURE0");
#endif
#if defined(GL_TEXTURE1)
defconsti(env, "GL-TEXTURE1", (GLenum) GL_TEXTURE1, "GL_TEXTURE1");
#endif
#if defined(GL_TEXTURE2)
defconsti(env, "GL-TEXTURE2", (GLenum) GL_TEXTURE2, "GL_TEXTURE2");
#endif
#if defined(GL_TEXTURE3)
defconsti(env, "GL-TEXTURE3", (GLenum) GL_TEXTURE3, "GL_TEXTURE3");
#endif
#if defined(GL_TEXTURE4)
defconsti(env, "GL-TEXTURE4", (GLenum) GL_TEXTURE4, "GL_TEXTURE4");
#endif
#if defined(GL_TEXTURE5)
defconsti(env, "GL-TEXTURE5", (GLenum) GL_TEXTURE5, "GL_TEXTURE5");
#endif
#if defined(GL_TEXTURE6)
defconsti(env, "GL-TEXTURE6", (GLenum) GL_TEXTURE6, "GL_TEXTURE6");
#endif
#if defined(GL_TEXTURE7)
defconsti(env, "GL-TEXTURE7", (GLenum) GL_TEXTURE7, "GL_TEXTURE7");
#endif
#if defined(GL_TEXTURE8)
defconsti(env, "GL-TEXTURE8", (GLenum) GL_TEXTURE8, "GL_TEXTURE8");
#endif
#if defined(GL_TEXTURE9)
defconsti(env, "GL-TEXTURE9", (GLenum) GL_TEXTURE9, "GL_TEXTURE9");
#endif
#if defined(GL_TEXTURE10)
defconsti(env, "GL-TEXTURE10", (GLenum) GL_TEXTURE10, "GL_TEXTURE10");
#endif
#if defined(GL_TEXTURE11)
defconsti(env, "GL-TEXTURE11", (GLenum) GL_TEXTURE11, "GL_TEXTURE11");
#endif
#if defined(GL_TEXTURE12)
defconsti(env, "GL-TEXTURE12", (GLenum) GL_TEXTURE12, "GL_TEXTURE12");
#endif
#if defined(GL_TEXTURE13)
defconsti(env, "GL-TEXTURE13", (GLenum) GL_TEXTURE13, "GL_TEXTURE13");
#endif
#if defined(GL_TEXTURE14)
defconsti(env, "GL-TEXTURE14", (GLenum) GL_TEXTURE14, "GL_TEXTURE14");
#endif
#if defined(GL_TEXTURE15)
defconsti(env, "GL-TEXTURE15", (GLenum) GL_TEXTURE15, "GL_TEXTURE15");
#endif
#if defined(GL_TEXTURE16)
defconsti(env, "GL-TEXTURE16", (GLenum) GL_TEXTURE16, "GL_TEXTURE16");
#endif
#if defined(GL_TEXTURE17)
defconsti(env, "GL-TEXTURE17", (GLenum) GL_TEXTURE17, "GL_TEXTURE17");
#endif
#if defined(GL_TEXTURE18)
defconsti(env, "GL-TEXTURE18", (GLenum) GL_TEXTURE18, "GL_TEXTURE18");
#endif
#if defined(GL_TEXTURE19)
defconsti(env, "GL-TEXTURE19", (GLenum) GL_TEXTURE19, "GL_TEXTURE19");
#endif
#if defined(GL_TEXTURE20)
defconsti(env, "GL-TEXTURE20", (GLenum) GL_TEXTURE20, "GL_TEXTURE20");
#endif
#if defined(GL_TEXTURE21)
defconsti(env, "GL-TEXTURE21", (GLenum) GL_TEXTURE21, "GL_TEXTURE21");
#endif
#if defined(GL_TEXTURE22)
defconsti(env, "GL-TEXTURE22", (GLenum) GL_TEXTURE22, "GL_TEXTURE22");
#endif
#if defined(GL_TEXTURE23)
defconsti(env, "GL-TEXTURE23", (GLenum) GL_TEXTURE23, "GL_TEXTURE23");
#endif
#if defined(GL_TEXTURE24)
defconsti(env, "GL-TEXTURE24", (GLenum) GL_TEXTURE24, "GL_TEXTURE24");
#endif
#if defined(GL_TEXTURE25)
defconsti(env, "GL-TEXTURE25", (GLenum) GL_TEXTURE25, "GL_TEXTURE25");
#endif
#if defined(GL_TEXTURE26)
defconsti(env, "GL-TEXTURE26", (GLenum) GL_TEXTURE26, "GL_TEXTURE26");
#endif
#if defined(GL_TEXTURE27)
defconsti(env, "GL-TEXTURE27", (GLenum) GL_TEXTURE27, "GL_TEXTURE27");
#endif
#if defined(GL_TEXTURE28)
defconsti(env, "GL-TEXTURE28", (GLenum) GL_TEXTURE28, "GL_TEXTURE28");
#endif
#if defined(GL_TEXTURE29)
defconsti(env, "GL-TEXTURE29", (GLenum) GL_TEXTURE29, "GL_TEXTURE29");
#endif
#if defined(GL_TEXTURE30)
defconsti(env, "GL-TEXTURE30", (GLenum) GL_TEXTURE30, "GL_TEXTURE30");
#endif
#if defined(GL_TEXTURE31)
defconsti(env, "GL-TEXTURE31", (GLenum) GL_TEXTURE31, "GL_TEXTURE31");
#endif
#if defined(GL_ACTIVE_TEXTURE)
defconsti(env, "GL-ACTIVE-TEXTURE", (GLenum) GL_ACTIVE_TEXTURE, "GL_ACTIVE_TEXTURE");
#endif
#if defined(GL_REPEAT)
defconsti(env, "GL-REPEAT", (GLenum) GL_REPEAT, "GL_REPEAT");
#endif
#if defined(GL_CLAMP_TO_EDGE)
defconsti(env, "GL-CLAMP-TO-EDGE", (GLenum) GL_CLAMP_TO_EDGE, "GL_CLAMP_TO_EDGE");
#endif
#if defined(GL_MIRRORED_REPEAT)
defconsti(env, "GL-MIRRORED-REPEAT", (GLenum) GL_MIRRORED_REPEAT, "GL_MIRRORED_REPEAT");
#endif
#if defined(GL_SAMPLER_2D)
defconsti(env, "GL-SAMPLER-2D", (GLenum) GL_SAMPLER_2D, "GL_SAMPLER_2D");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_ENABLED)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-ENABLED", (GLenum) GL_VERTEX_ATTRIB_ARRAY_ENABLED, "GL_VERTEX_ATTRIB_ARRAY_ENABLED");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_SIZE)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-SIZE", (GLenum) GL_VERTEX_ATTRIB_ARRAY_SIZE, "GL_VERTEX_ATTRIB_ARRAY_SIZE");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_STRIDE)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-STRIDE", (GLenum) GL_VERTEX_ATTRIB_ARRAY_STRIDE, "GL_VERTEX_ATTRIB_ARRAY_STRIDE");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_TYPE)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-TYPE", (GLenum) GL_VERTEX_ATTRIB_ARRAY_TYPE, "GL_VERTEX_ATTRIB_ARRAY_TYPE");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_NORMALIZED)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-NORMALIZED", (GLenum) GL_VERTEX_ATTRIB_ARRAY_NORMALIZED, "GL_VERTEX_ATTRIB_ARRAY_NORMALIZED");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_POINTER)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-POINTER", (GLenum) GL_VERTEX_ATTRIB_ARRAY_POINTER, "GL_VERTEX_ATTRIB_ARRAY_POINTER");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-BUFFER-BINDING", (GLenum) GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, "GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING");
#endif
#if defined(GL_IMPLEMENTATION_COLOR_READ_TYPE)
defconsti(env, "GL-IMPLEMENTATION-COLOR-READ-TYPE", (GLenum) GL_IMPLEMENTATION_COLOR_READ_TYPE, "GL_IMPLEMENTATION_COLOR_READ_TYPE");
#endif
#if defined(GL_IMPLEMENTATION_COLOR_READ_FORMAT)
defconsti(env, "GL-IMPLEMENTATION-COLOR-READ-FORMAT", (GLenum) GL_IMPLEMENTATION_COLOR_READ_FORMAT, "GL_IMPLEMENTATION_COLOR_READ_FORMAT");
#endif
#if defined(GL_NUM_PROGRAM_BINARY_FORMATS)
defconsti(env, "GL-NUM-PROGRAM-BINARY-FORMATS", (GLenum) GL_NUM_PROGRAM_BINARY_FORMATS, "GL_NUM_PROGRAM_BINARY_FORMATS");
#endif
#if defined(GL_PROGRAM_BINARY_FORMATS)
defconsti(env, "GL-PROGRAM-BINARY-FORMATS", (GLenum) GL_PROGRAM_BINARY_FORMATS, "GL_PROGRAM_BINARY_FORMATS");
#endif
#if defined(GL_LOW_FLOAT)
defconsti(env, "GL-LOW-FLOAT", (GLenum) GL_LOW_FLOAT, "GL_LOW_FLOAT");
#endif
#if defined(GL_MEDIUM_FLOAT)
defconsti(env, "GL-MEDIUM-FLOAT", (GLenum) GL_MEDIUM_FLOAT, "GL_MEDIUM_FLOAT");
#endif
#if defined(GL_HIGH_FLOAT)
defconsti(env, "GL-HIGH-FLOAT", (GLenum) GL_HIGH_FLOAT, "GL_HIGH_FLOAT");
#endif
#if defined(GL_LOW_INT)
defconsti(env, "GL-LOW-INT", (GLenum) GL_LOW_INT, "GL_LOW_INT");
#endif
#if defined(GL_MEDIUM_INT)
defconsti(env, "GL-MEDIUM-INT", (GLenum) GL_MEDIUM_INT, "GL_MEDIUM_INT");
#endif
#if defined(GL_HIGH_INT)
defconsti(env, "GL-HIGH-INT", (GLenum) GL_HIGH_INT, "GL_HIGH_INT");
#endif
#if defined(GL_FRAMEBUFFER)
defconsti(env, "GL-FRAMEBUFFER", (GLenum) GL_FRAMEBUFFER, "GL_FRAMEBUFFER");
#endif
#if defined(GL_RENDERBUFFER)
defconsti(env, "GL-RENDERBUFFER", (GLenum) GL_RENDERBUFFER, "GL_RENDERBUFFER");
#endif
#if defined(GL_R8)
defconsti(env, "GL-R8", (GLenum) GL_R8, "GL_R8");
#endif
#if defined(GL_RG8)
defconsti(env, "GL-RG8", (GLenum) GL_RG8, "GL_RG8");
#endif
#if defined(GL_RGB8)
defconsti(env, "GL-RGB8", (GLenum) GL_RGB8, "GL_RGB8");
#endif
#if defined(GL_RGBA8)
defconsti(env, "GL-RGBA8", (GLenum) GL_RGBA8, "GL_RGBA8");
#endif
#if defined(GL_RGBA4)
defconsti(env, "GL-RGBA4", (GLenum) GL_RGBA4, "GL_RGBA4");
#endif
#if defined(GL_RGB5_A1)
defconsti(env, "GL-RGB5-A1", (GLenum) GL_RGB5_A1, "GL_RGB5_A1");
#endif
#if defined(GL_RGB565)
defconsti(env, "GL-RGB565", (GLenum) GL_RGB565, "GL_RGB565");
#endif
#if defined(GL_DEPTH_COMPONENT16)
defconsti(env, "GL-DEPTH-COMPONENT16", (GLenum) GL_DEPTH_COMPONENT16, "GL_DEPTH_COMPONENT16");
#endif
#if defined(GL_STENCIL_INDEX8)
defconsti(env, "GL-STENCIL-INDEX8", (GLenum) GL_STENCIL_INDEX8, "GL_STENCIL_INDEX8");
#endif
#if defined(GL_RENDERBUFFER_WIDTH)
defconsti(env, "GL-RENDERBUFFER-WIDTH", (GLenum) GL_RENDERBUFFER_WIDTH, "GL_RENDERBUFFER_WIDTH");
#endif
#if defined(GL_RENDERBUFFER_HEIGHT)
defconsti(env, "GL-RENDERBUFFER-HEIGHT", (GLenum) GL_RENDERBUFFER_HEIGHT, "GL_RENDERBUFFER_HEIGHT");
#endif
#if defined(GL_RENDERBUFFER_INTERNAL_FORMAT)
defconsti(env, "GL-RENDERBUFFER-INTERNAL-FORMAT", (GLenum) GL_RENDERBUFFER_INTERNAL_FORMAT, "GL_RENDERBUFFER_INTERNAL_FORMAT");
#endif
#if defined(GL_RENDERBUFFER_RED_SIZE)
defconsti(env, "GL-RENDERBUFFER-RED-SIZE", (GLenum) GL_RENDERBUFFER_RED_SIZE, "GL_RENDERBUFFER_RED_SIZE");
#endif
#if defined(GL_RENDERBUFFER_GREEN_SIZE)
defconsti(env, "GL-RENDERBUFFER-GREEN-SIZE", (GLenum) GL_RENDERBUFFER_GREEN_SIZE, "GL_RENDERBUFFER_GREEN_SIZE");
#endif
#if defined(GL_RENDERBUFFER_BLUE_SIZE)
defconsti(env, "GL-RENDERBUFFER-BLUE-SIZE", (GLenum) GL_RENDERBUFFER_BLUE_SIZE, "GL_RENDERBUFFER_BLUE_SIZE");
#endif
#if defined(GL_RENDERBUFFER_ALPHA_SIZE)
defconsti(env, "GL-RENDERBUFFER-ALPHA-SIZE", (GLenum) GL_RENDERBUFFER_ALPHA_SIZE, "GL_RENDERBUFFER_ALPHA_SIZE");
#endif
#if defined(GL_RENDERBUFFER_DEPTH_SIZE)
defconsti(env, "GL-RENDERBUFFER-DEPTH-SIZE", (GLenum) GL_RENDERBUFFER_DEPTH_SIZE, "GL_RENDERBUFFER_DEPTH_SIZE");
#endif
#if defined(GL_RENDERBUFFER_STENCIL_SIZE)
defconsti(env, "GL-RENDERBUFFER-STENCIL-SIZE", (GLenum) GL_RENDERBUFFER_STENCIL_SIZE, "GL_RENDERBUFFER_STENCIL_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-OBJECT-TYPE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-OBJECT-NAME", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-LEVEL", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL");
#endif
#if defined(GL_COLOR_ATTACHMENT0)
defconsti(env, "GL-COLOR-ATTACHMENT0", (GLenum) GL_COLOR_ATTACHMENT0, "GL_COLOR_ATTACHMENT0");
#endif
#if defined(GL_DEPTH_ATTACHMENT)
defconsti(env, "GL-DEPTH-ATTACHMENT", (GLenum) GL_DEPTH_ATTACHMENT, "GL_DEPTH_ATTACHMENT");
#endif
#if defined(GL_STENCIL_ATTACHMENT)
defconsti(env, "GL-STENCIL-ATTACHMENT", (GLenum) GL_STENCIL_ATTACHMENT, "GL_STENCIL_ATTACHMENT");
#endif
#if defined(GL_NONE)
defconsti(env, "GL-NONE", (GLenum) GL_NONE, "GL_NONE");
#endif
#if defined(GL_FRAMEBUFFER_COMPLETE)
defconsti(env, "GL-FRAMEBUFFER-COMPLETE", (GLenum) GL_FRAMEBUFFER_COMPLETE, "GL_FRAMEBUFFER_COMPLETE");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-ATTACHMENT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT, "GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MISSING-ATTACHMENT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT, "GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-DIMENSIONS", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS, "GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS");
#endif
#if defined(GL_FRAMEBUFFER_UNSUPPORTED)
defconsti(env, "GL-FRAMEBUFFER-UNSUPPORTED", (GLenum) GL_FRAMEBUFFER_UNSUPPORTED, "GL_FRAMEBUFFER_UNSUPPORTED");
#endif
#if defined(GL_FRAMEBUFFER_UNDEFINED)
defconsti(env, "GL-FRAMEBUFFER-UNDEFINED", (GLenum) GL_FRAMEBUFFER_UNDEFINED, "GL_FRAMEBUFFER_UNDEFINED");
#endif
#if defined(GL_FRAMEBUFFER_BINDING)
defconsti(env, "GL-FRAMEBUFFER-BINDING", (GLenum) GL_FRAMEBUFFER_BINDING, "GL_FRAMEBUFFER_BINDING");
#endif
#if defined(GL_RENDERBUFFER_BINDING)
defconsti(env, "GL-RENDERBUFFER-BINDING", (GLenum) GL_RENDERBUFFER_BINDING, "GL_RENDERBUFFER_BINDING");
#endif
#if defined(GL_MAX_RENDERBUFFER_SIZE)
defconsti(env, "GL-MAX-RENDERBUFFER-SIZE", (GLenum) GL_MAX_RENDERBUFFER_SIZE, "GL_MAX_RENDERBUFFER_SIZE");
#endif
#if defined(GL_NO_ERROR)
defconsti(env, "GL-NO-ERROR", (GLenum) GL_NO_ERROR, "GL_NO_ERROR");
#endif
#if defined(GL_GUILTY_CONTEXT_RESET)
defconsti(env, "GL-GUILTY-CONTEXT-RESET", (GLenum) GL_GUILTY_CONTEXT_RESET, "GL_GUILTY_CONTEXT_RESET");
#endif
#if defined(GL_INNOCENT_CONTEXT_RESET)
defconsti(env, "GL-INNOCENT-CONTEXT-RESET", (GLenum) GL_INNOCENT_CONTEXT_RESET, "GL_INNOCENT_CONTEXT_RESET");
#endif
#if defined(GL_UNKNOWN_CONTEXT_RESET)
defconsti(env, "GL-UNKNOWN-CONTEXT-RESET", (GLenum) GL_UNKNOWN_CONTEXT_RESET, "GL_UNKNOWN_CONTEXT_RESET");
#endif
#if defined(GL_CONTEXT_ROBUST_ACCESS)
defconsti(env, "GL-CONTEXT-ROBUST-ACCESS", (GLenum) GL_CONTEXT_ROBUST_ACCESS, "GL_CONTEXT_ROBUST_ACCESS");
#endif
#if defined(GL_RESET_NOTIFICATION_STRATEGY)
defconsti(env, "GL-RESET-NOTIFICATION-STRATEGY", (GLenum) GL_RESET_NOTIFICATION_STRATEGY, "GL_RESET_NOTIFICATION_STRATEGY");
#endif
#if defined(GL_LOSE_CONTEXT_ON_RESET)
defconsti(env, "GL-LOSE-CONTEXT-ON-RESET", (GLenum) GL_LOSE_CONTEXT_ON_RESET, "GL_LOSE_CONTEXT_ON_RESET");
#endif
#if defined(GL_MULTISAMPLE_3DFX)
defconsti(env, "GL-MULTISAMPLE-3DFX", (GLenum) GL_MULTISAMPLE_3DFX, "GL_MULTISAMPLE_3DFX");
#endif
#if defined(GL_SAMPLE_BUFFERS_3DFX)
defconsti(env, "GL-SAMPLE-BUFFERS-3DFX", (GLenum) GL_SAMPLE_BUFFERS_3DFX, "GL_SAMPLE_BUFFERS_3DFX");
#endif
#if defined(GL_SAMPLES_3DFX)
defconsti(env, "GL-SAMPLES-3DFX", (GLenum) GL_SAMPLES_3DFX, "GL_SAMPLES_3DFX");
#endif
#if defined(GL_MULTISAMPLE_BIT_3DFX)
defconsti(env, "GL-MULTISAMPLE-BIT-3DFX", (GLenum) GL_MULTISAMPLE_BIT_3DFX, "GL_MULTISAMPLE_BIT_3DFX");
#endif
#if defined(GL_COMPRESSED_RGB_FXT1_3DFX)
defconsti(env, "GL-COMPRESSED-RGB-FXT1-3DFX", (GLenum) GL_COMPRESSED_RGB_FXT1_3DFX, "GL_COMPRESSED_RGB_FXT1_3DFX");
#endif
#if defined(GL_COMPRESSED_RGBA_FXT1_3DFX)
defconsti(env, "GL-COMPRESSED-RGBA-FXT1-3DFX", (GLenum) GL_COMPRESSED_RGBA_FXT1_3DFX, "GL_COMPRESSED_RGBA_FXT1_3DFX");
#endif
#if defined(GL_FACTOR_MIN_AMD)
defconsti(env, "GL-FACTOR-MIN-AMD", (GLenum) GL_FACTOR_MIN_AMD, "GL_FACTOR_MIN_AMD");
#endif
#if defined(GL_FACTOR_MAX_AMD)
defconsti(env, "GL-FACTOR-MAX-AMD", (GLenum) GL_FACTOR_MAX_AMD, "GL_FACTOR_MAX_AMD");
#endif
#if defined(GL_3DC_X_AMD)
defconsti(env, "GL-3DC-X-AMD", (GLenum) GL_3DC_X_AMD, "GL_3DC_X_AMD");
#endif
#if defined(GL_3DC_XY_AMD)
defconsti(env, "GL-3DC-XY-AMD", (GLenum) GL_3DC_XY_AMD, "GL_3DC_XY_AMD");
#endif
#if defined(GL_ATC_RGB_AMD)
defconsti(env, "GL-ATC-RGB-AMD", (GLenum) GL_ATC_RGB_AMD, "GL_ATC_RGB_AMD");
#endif
#if defined(GL_ATC_RGBA_EXPLICIT_ALPHA_AMD)
defconsti(env, "GL-ATC-RGBA-EXPLICIT-ALPHA-AMD", (GLenum) GL_ATC_RGBA_EXPLICIT_ALPHA_AMD, "GL_ATC_RGBA_EXPLICIT_ALPHA_AMD");
#endif
#if defined(GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD)
defconsti(env, "GL-ATC-RGBA-INTERPOLATED-ALPHA-AMD", (GLenum) GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD, "GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD");
#endif
#if defined(GL_MAX_DEBUG_MESSAGE_LENGTH_AMD)
defconsti(env, "GL-MAX-DEBUG-MESSAGE-LENGTH-AMD", (GLenum) GL_MAX_DEBUG_MESSAGE_LENGTH_AMD, "GL_MAX_DEBUG_MESSAGE_LENGTH_AMD");
#endif
#if defined(GL_MAX_DEBUG_LOGGED_MESSAGES_AMD)
defconsti(env, "GL-MAX-DEBUG-LOGGED-MESSAGES-AMD", (GLenum) GL_MAX_DEBUG_LOGGED_MESSAGES_AMD, "GL_MAX_DEBUG_LOGGED_MESSAGES_AMD");
#endif
#if defined(GL_DEBUG_LOGGED_MESSAGES_AMD)
defconsti(env, "GL-DEBUG-LOGGED-MESSAGES-AMD", (GLenum) GL_DEBUG_LOGGED_MESSAGES_AMD, "GL_DEBUG_LOGGED_MESSAGES_AMD");
#endif
#if defined(GL_DEBUG_SEVERITY_HIGH_AMD)
defconsti(env, "GL-DEBUG-SEVERITY-HIGH-AMD", (GLenum) GL_DEBUG_SEVERITY_HIGH_AMD, "GL_DEBUG_SEVERITY_HIGH_AMD");
#endif
#if defined(GL_DEBUG_SEVERITY_MEDIUM_AMD)
defconsti(env, "GL-DEBUG-SEVERITY-MEDIUM-AMD", (GLenum) GL_DEBUG_SEVERITY_MEDIUM_AMD, "GL_DEBUG_SEVERITY_MEDIUM_AMD");
#endif
#if defined(GL_DEBUG_SEVERITY_LOW_AMD)
defconsti(env, "GL-DEBUG-SEVERITY-LOW-AMD", (GLenum) GL_DEBUG_SEVERITY_LOW_AMD, "GL_DEBUG_SEVERITY_LOW_AMD");
#endif
#if defined(GL_DEBUG_CATEGORY_API_ERROR_AMD)
defconsti(env, "GL-DEBUG-CATEGORY-API-ERROR-AMD", (GLenum) GL_DEBUG_CATEGORY_API_ERROR_AMD, "GL_DEBUG_CATEGORY_API_ERROR_AMD");
#endif
#if defined(GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD)
defconsti(env, "GL-DEBUG-CATEGORY-WINDOW-SYSTEM-AMD", (GLenum) GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD, "GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD");
#endif
#if defined(GL_DEBUG_CATEGORY_DEPRECATION_AMD)
defconsti(env, "GL-DEBUG-CATEGORY-DEPRECATION-AMD", (GLenum) GL_DEBUG_CATEGORY_DEPRECATION_AMD, "GL_DEBUG_CATEGORY_DEPRECATION_AMD");
#endif
#if defined(GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD)
defconsti(env, "GL-DEBUG-CATEGORY-UNDEFINED-BEHAVIOR-AMD", (GLenum) GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD, "GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD");
#endif
#if defined(GL_DEBUG_CATEGORY_PERFORMANCE_AMD)
defconsti(env, "GL-DEBUG-CATEGORY-PERFORMANCE-AMD", (GLenum) GL_DEBUG_CATEGORY_PERFORMANCE_AMD, "GL_DEBUG_CATEGORY_PERFORMANCE_AMD");
#endif
#if defined(GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD)
defconsti(env, "GL-DEBUG-CATEGORY-SHADER-COMPILER-AMD", (GLenum) GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD, "GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD");
#endif
#if defined(GL_DEBUG_CATEGORY_APPLICATION_AMD)
defconsti(env, "GL-DEBUG-CATEGORY-APPLICATION-AMD", (GLenum) GL_DEBUG_CATEGORY_APPLICATION_AMD, "GL_DEBUG_CATEGORY_APPLICATION_AMD");
#endif
#if defined(GL_DEBUG_CATEGORY_OTHER_AMD)
defconsti(env, "GL-DEBUG-CATEGORY-OTHER-AMD", (GLenum) GL_DEBUG_CATEGORY_OTHER_AMD, "GL_DEBUG_CATEGORY_OTHER_AMD");
#endif
#if defined(GL_DEPTH_CLAMP_NEAR_AMD)
defconsti(env, "GL-DEPTH-CLAMP-NEAR-AMD", (GLenum) GL_DEPTH_CLAMP_NEAR_AMD, "GL_DEPTH_CLAMP_NEAR_AMD");
#endif
#if defined(GL_DEPTH_CLAMP_FAR_AMD)
defconsti(env, "GL-DEPTH-CLAMP-FAR-AMD", (GLenum) GL_DEPTH_CLAMP_FAR_AMD, "GL_DEPTH_CLAMP_FAR_AMD");
#endif
#if defined(GL_RENDERBUFFER_STORAGE_SAMPLES_AMD)
defconsti(env, "GL-RENDERBUFFER-STORAGE-SAMPLES-AMD", (GLenum) GL_RENDERBUFFER_STORAGE_SAMPLES_AMD, "GL_RENDERBUFFER_STORAGE_SAMPLES_AMD");
#endif
#if defined(GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD)
defconsti(env, "GL-MAX-COLOR-FRAMEBUFFER-SAMPLES-AMD", (GLenum) GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD, "GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD");
#endif
#if defined(GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD)
defconsti(env, "GL-MAX-COLOR-FRAMEBUFFER-STORAGE-SAMPLES-AMD", (GLenum) GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD, "GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD");
#endif
#if defined(GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD)
defconsti(env, "GL-MAX-DEPTH-STENCIL-FRAMEBUFFER-SAMPLES-AMD", (GLenum) GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD, "GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD");
#endif
#if defined(GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD)
defconsti(env, "GL-NUM-SUPPORTED-MULTISAMPLE-MODES-AMD", (GLenum) GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD, "GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD");
#endif
#if defined(GL_SUPPORTED_MULTISAMPLE_MODES_AMD)
defconsti(env, "GL-SUPPORTED-MULTISAMPLE-MODES-AMD", (GLenum) GL_SUPPORTED_MULTISAMPLE_MODES_AMD, "GL_SUPPORTED_MULTISAMPLE_MODES_AMD");
#endif
#if defined(GL_SUBSAMPLE_DISTANCE_AMD)
defconsti(env, "GL-SUBSAMPLE-DISTANCE-AMD", (GLenum) GL_SUBSAMPLE_DISTANCE_AMD, "GL_SUBSAMPLE_DISTANCE_AMD");
#endif
#if defined(GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD)
defconsti(env, "GL-PIXELS-PER-SAMPLE-PATTERN-X-AMD", (GLenum) GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD, "GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD");
#endif
#if defined(GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD)
defconsti(env, "GL-PIXELS-PER-SAMPLE-PATTERN-Y-AMD", (GLenum) GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD, "GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD");
#endif
#if defined(GL_ALL_PIXELS_AMD)
defconsti(env, "GL-ALL-PIXELS-AMD", (GLenum) GL_ALL_PIXELS_AMD, "GL_ALL_PIXELS_AMD");
#endif
#if defined(GL_FLOAT16_NV)
defconsti(env, "GL-FLOAT16-NV", (GLenum) GL_FLOAT16_NV, "GL_FLOAT16_NV");
#endif
#if defined(GL_FLOAT16_VEC2_NV)
defconsti(env, "GL-FLOAT16-VEC2-NV", (GLenum) GL_FLOAT16_VEC2_NV, "GL_FLOAT16_VEC2_NV");
#endif
#if defined(GL_FLOAT16_VEC3_NV)
defconsti(env, "GL-FLOAT16-VEC3-NV", (GLenum) GL_FLOAT16_VEC3_NV, "GL_FLOAT16_VEC3_NV");
#endif
#if defined(GL_FLOAT16_VEC4_NV)
defconsti(env, "GL-FLOAT16-VEC4-NV", (GLenum) GL_FLOAT16_VEC4_NV, "GL_FLOAT16_VEC4_NV");
#endif
#if defined(GL_FLOAT16_MAT2_AMD)
defconsti(env, "GL-FLOAT16-MAT2-AMD", (GLenum) GL_FLOAT16_MAT2_AMD, "GL_FLOAT16_MAT2_AMD");
#endif
#if defined(GL_FLOAT16_MAT3_AMD)
defconsti(env, "GL-FLOAT16-MAT3-AMD", (GLenum) GL_FLOAT16_MAT3_AMD, "GL_FLOAT16_MAT3_AMD");
#endif
#if defined(GL_FLOAT16_MAT4_AMD)
defconsti(env, "GL-FLOAT16-MAT4-AMD", (GLenum) GL_FLOAT16_MAT4_AMD, "GL_FLOAT16_MAT4_AMD");
#endif
#if defined(GL_FLOAT16_MAT2x3_AMD)
defconsti(env, "GL-FLOAT16-MAT2x3-AMD", (GLenum) GL_FLOAT16_MAT2x3_AMD, "GL_FLOAT16_MAT2x3_AMD");
#endif
#if defined(GL_FLOAT16_MAT2x4_AMD)
defconsti(env, "GL-FLOAT16-MAT2x4-AMD", (GLenum) GL_FLOAT16_MAT2x4_AMD, "GL_FLOAT16_MAT2x4_AMD");
#endif
#if defined(GL_FLOAT16_MAT3x2_AMD)
defconsti(env, "GL-FLOAT16-MAT3x2-AMD", (GLenum) GL_FLOAT16_MAT3x2_AMD, "GL_FLOAT16_MAT3x2_AMD");
#endif
#if defined(GL_FLOAT16_MAT3x4_AMD)
defconsti(env, "GL-FLOAT16-MAT3x4-AMD", (GLenum) GL_FLOAT16_MAT3x4_AMD, "GL_FLOAT16_MAT3x4_AMD");
#endif
#if defined(GL_FLOAT16_MAT4x2_AMD)
defconsti(env, "GL-FLOAT16-MAT4x2-AMD", (GLenum) GL_FLOAT16_MAT4x2_AMD, "GL_FLOAT16_MAT4x2_AMD");
#endif
#if defined(GL_FLOAT16_MAT4x3_AMD)
defconsti(env, "GL-FLOAT16-MAT4x3-AMD", (GLenum) GL_FLOAT16_MAT4x3_AMD, "GL_FLOAT16_MAT4x3_AMD");
#endif
#if defined(GL_INT64_NV)
defconsti(env, "GL-INT64-NV", (GLenum) GL_INT64_NV, "GL_INT64_NV");
#endif
#if defined(GL_UNSIGNED_INT64_NV)
defconsti(env, "GL-UNSIGNED-INT64-NV", (GLenum) GL_UNSIGNED_INT64_NV, "GL_UNSIGNED_INT64_NV");
#endif
#if defined(GL_INT8_NV)
defconsti(env, "GL-INT8-NV", (GLenum) GL_INT8_NV, "GL_INT8_NV");
#endif
#if defined(GL_INT8_VEC2_NV)
defconsti(env, "GL-INT8-VEC2-NV", (GLenum) GL_INT8_VEC2_NV, "GL_INT8_VEC2_NV");
#endif
#if defined(GL_INT8_VEC3_NV)
defconsti(env, "GL-INT8-VEC3-NV", (GLenum) GL_INT8_VEC3_NV, "GL_INT8_VEC3_NV");
#endif
#if defined(GL_INT8_VEC4_NV)
defconsti(env, "GL-INT8-VEC4-NV", (GLenum) GL_INT8_VEC4_NV, "GL_INT8_VEC4_NV");
#endif
#if defined(GL_INT16_NV)
defconsti(env, "GL-INT16-NV", (GLenum) GL_INT16_NV, "GL_INT16_NV");
#endif
#if defined(GL_INT16_VEC2_NV)
defconsti(env, "GL-INT16-VEC2-NV", (GLenum) GL_INT16_VEC2_NV, "GL_INT16_VEC2_NV");
#endif
#if defined(GL_INT16_VEC3_NV)
defconsti(env, "GL-INT16-VEC3-NV", (GLenum) GL_INT16_VEC3_NV, "GL_INT16_VEC3_NV");
#endif
#if defined(GL_INT16_VEC4_NV)
defconsti(env, "GL-INT16-VEC4-NV", (GLenum) GL_INT16_VEC4_NV, "GL_INT16_VEC4_NV");
#endif
#if defined(GL_INT64_VEC2_NV)
defconsti(env, "GL-INT64-VEC2-NV", (GLenum) GL_INT64_VEC2_NV, "GL_INT64_VEC2_NV");
#endif
#if defined(GL_INT64_VEC3_NV)
defconsti(env, "GL-INT64-VEC3-NV", (GLenum) GL_INT64_VEC3_NV, "GL_INT64_VEC3_NV");
#endif
#if defined(GL_INT64_VEC4_NV)
defconsti(env, "GL-INT64-VEC4-NV", (GLenum) GL_INT64_VEC4_NV, "GL_INT64_VEC4_NV");
#endif
#if defined(GL_UNSIGNED_INT8_NV)
defconsti(env, "GL-UNSIGNED-INT8-NV", (GLenum) GL_UNSIGNED_INT8_NV, "GL_UNSIGNED_INT8_NV");
#endif
#if defined(GL_UNSIGNED_INT8_VEC2_NV)
defconsti(env, "GL-UNSIGNED-INT8-VEC2-NV", (GLenum) GL_UNSIGNED_INT8_VEC2_NV, "GL_UNSIGNED_INT8_VEC2_NV");
#endif
#if defined(GL_UNSIGNED_INT8_VEC3_NV)
defconsti(env, "GL-UNSIGNED-INT8-VEC3-NV", (GLenum) GL_UNSIGNED_INT8_VEC3_NV, "GL_UNSIGNED_INT8_VEC3_NV");
#endif
#if defined(GL_UNSIGNED_INT8_VEC4_NV)
defconsti(env, "GL-UNSIGNED-INT8-VEC4-NV", (GLenum) GL_UNSIGNED_INT8_VEC4_NV, "GL_UNSIGNED_INT8_VEC4_NV");
#endif
#if defined(GL_UNSIGNED_INT16_NV)
defconsti(env, "GL-UNSIGNED-INT16-NV", (GLenum) GL_UNSIGNED_INT16_NV, "GL_UNSIGNED_INT16_NV");
#endif
#if defined(GL_UNSIGNED_INT16_VEC2_NV)
defconsti(env, "GL-UNSIGNED-INT16-VEC2-NV", (GLenum) GL_UNSIGNED_INT16_VEC2_NV, "GL_UNSIGNED_INT16_VEC2_NV");
#endif
#if defined(GL_UNSIGNED_INT16_VEC3_NV)
defconsti(env, "GL-UNSIGNED-INT16-VEC3-NV", (GLenum) GL_UNSIGNED_INT16_VEC3_NV, "GL_UNSIGNED_INT16_VEC3_NV");
#endif
#if defined(GL_UNSIGNED_INT16_VEC4_NV)
defconsti(env, "GL-UNSIGNED-INT16-VEC4-NV", (GLenum) GL_UNSIGNED_INT16_VEC4_NV, "GL_UNSIGNED_INT16_VEC4_NV");
#endif
#if defined(GL_UNSIGNED_INT64_VEC2_NV)
defconsti(env, "GL-UNSIGNED-INT64-VEC2-NV", (GLenum) GL_UNSIGNED_INT64_VEC2_NV, "GL_UNSIGNED_INT64_VEC2_NV");
#endif
#if defined(GL_UNSIGNED_INT64_VEC3_NV)
defconsti(env, "GL-UNSIGNED-INT64-VEC3-NV", (GLenum) GL_UNSIGNED_INT64_VEC3_NV, "GL_UNSIGNED_INT64_VEC3_NV");
#endif
#if defined(GL_UNSIGNED_INT64_VEC4_NV)
defconsti(env, "GL-UNSIGNED-INT64-VEC4-NV", (GLenum) GL_UNSIGNED_INT64_VEC4_NV, "GL_UNSIGNED_INT64_VEC4_NV");
#endif
#if defined(GL_FLOAT16_NV)
defconsti(env, "GL-FLOAT16-NV", (GLenum) GL_FLOAT16_NV, "GL_FLOAT16_NV");
#endif
#if defined(GL_FLOAT16_VEC2_NV)
defconsti(env, "GL-FLOAT16-VEC2-NV", (GLenum) GL_FLOAT16_VEC2_NV, "GL_FLOAT16_VEC2_NV");
#endif
#if defined(GL_FLOAT16_VEC3_NV)
defconsti(env, "GL-FLOAT16-VEC3-NV", (GLenum) GL_FLOAT16_VEC3_NV, "GL_FLOAT16_VEC3_NV");
#endif
#if defined(GL_FLOAT16_VEC4_NV)
defconsti(env, "GL-FLOAT16-VEC4-NV", (GLenum) GL_FLOAT16_VEC4_NV, "GL_FLOAT16_VEC4_NV");
#endif
#if defined(GL_VERTEX_ELEMENT_SWIZZLE_AMD)
defconsti(env, "GL-VERTEX-ELEMENT-SWIZZLE-AMD", (GLenum) GL_VERTEX_ELEMENT_SWIZZLE_AMD, "GL_VERTEX_ELEMENT_SWIZZLE_AMD");
#endif
#if defined(GL_VERTEX_ID_SWIZZLE_AMD)
defconsti(env, "GL-VERTEX-ID-SWIZZLE-AMD", (GLenum) GL_VERTEX_ID_SWIZZLE_AMD, "GL_VERTEX_ID_SWIZZLE_AMD");
#endif
#if defined(GL_RED)
defconsti(env, "GL-RED", (GLenum) GL_RED, "GL_RED");
#endif
#if defined(GL_GREEN)
defconsti(env, "GL-GREEN", (GLenum) GL_GREEN, "GL_GREEN");
#endif
#if defined(GL_BLUE)
defconsti(env, "GL-BLUE", (GLenum) GL_BLUE, "GL_BLUE");
#endif
#if defined(GL_ALPHA)
defconsti(env, "GL-ALPHA", (GLenum) GL_ALPHA, "GL_ALPHA");
#endif
#if defined(GL_RG8UI)
defconsti(env, "GL-RG8UI", (GLenum) GL_RG8UI, "GL_RG8UI");
#endif
#if defined(GL_RG16UI)
defconsti(env, "GL-RG16UI", (GLenum) GL_RG16UI, "GL_RG16UI");
#endif
#if defined(GL_RGBA8UI)
defconsti(env, "GL-RGBA8UI", (GLenum) GL_RGBA8UI, "GL_RGBA8UI");
#endif
#if defined(GL_DATA_BUFFER_AMD)
defconsti(env, "GL-DATA-BUFFER-AMD", (GLenum) GL_DATA_BUFFER_AMD, "GL_DATA_BUFFER_AMD");
#endif
#if defined(GL_PERFORMANCE_MONITOR_AMD)
defconsti(env, "GL-PERFORMANCE-MONITOR-AMD", (GLenum) GL_PERFORMANCE_MONITOR_AMD, "GL_PERFORMANCE_MONITOR_AMD");
#endif
#if defined(GL_QUERY_OBJECT_AMD)
defconsti(env, "GL-QUERY-OBJECT-AMD", (GLenum) GL_QUERY_OBJECT_AMD, "GL_QUERY_OBJECT_AMD");
#endif
#if defined(GL_VERTEX_ARRAY_OBJECT_AMD)
defconsti(env, "GL-VERTEX-ARRAY-OBJECT-AMD", (GLenum) GL_VERTEX_ARRAY_OBJECT_AMD, "GL_VERTEX_ARRAY_OBJECT_AMD");
#endif
#if defined(GL_SAMPLER_OBJECT_AMD)
defconsti(env, "GL-SAMPLER-OBJECT-AMD", (GLenum) GL_SAMPLER_OBJECT_AMD, "GL_SAMPLER_OBJECT_AMD");
#endif
#if defined(GL_OCCLUSION_QUERY_EVENT_MASK_AMD)
defconsti(env, "GL-OCCLUSION-QUERY-EVENT-MASK-AMD", (GLenum) GL_OCCLUSION_QUERY_EVENT_MASK_AMD, "GL_OCCLUSION_QUERY_EVENT_MASK_AMD");
#endif
#if defined(GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD)
defconsti(env, "GL-QUERY-DEPTH-PASS-EVENT-BIT-AMD", (GLenum) GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD, "GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD");
#endif
#if defined(GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD)
defconsti(env, "GL-QUERY-DEPTH-FAIL-EVENT-BIT-AMD", (GLenum) GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD, "GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD");
#endif
#if defined(GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD)
defconsti(env, "GL-QUERY-STENCIL-FAIL-EVENT-BIT-AMD", (GLenum) GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD, "GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD");
#endif
#if defined(GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD)
defconsti(env, "GL-QUERY-DEPTH-BOUNDS-FAIL-EVENT-BIT-AMD", (GLenum) GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD, "GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD");
#endif
#if defined(GL_QUERY_ALL_EVENT_BITS_AMD)
defconsti(env, "GL-QUERY-ALL-EVENT-BITS-AMD", (GLenum) GL_QUERY_ALL_EVENT_BITS_AMD, "GL_QUERY_ALL_EVENT_BITS_AMD");
#endif
#if defined(GL_COUNTER_TYPE_AMD)
defconsti(env, "GL-COUNTER-TYPE-AMD", (GLenum) GL_COUNTER_TYPE_AMD, "GL_COUNTER_TYPE_AMD");
#endif
#if defined(GL_COUNTER_RANGE_AMD)
defconsti(env, "GL-COUNTER-RANGE-AMD", (GLenum) GL_COUNTER_RANGE_AMD, "GL_COUNTER_RANGE_AMD");
#endif
#if defined(GL_UNSIGNED_INT64_AMD)
defconsti(env, "GL-UNSIGNED-INT64-AMD", (GLenum) GL_UNSIGNED_INT64_AMD, "GL_UNSIGNED_INT64_AMD");
#endif
#if defined(GL_PERCENTAGE_AMD)
defconsti(env, "GL-PERCENTAGE-AMD", (GLenum) GL_PERCENTAGE_AMD, "GL_PERCENTAGE_AMD");
#endif
#if defined(GL_PERFMON_RESULT_AVAILABLE_AMD)
defconsti(env, "GL-PERFMON-RESULT-AVAILABLE-AMD", (GLenum) GL_PERFMON_RESULT_AVAILABLE_AMD, "GL_PERFMON_RESULT_AVAILABLE_AMD");
#endif
#if defined(GL_PERFMON_RESULT_SIZE_AMD)
defconsti(env, "GL-PERFMON-RESULT-SIZE-AMD", (GLenum) GL_PERFMON_RESULT_SIZE_AMD, "GL_PERFMON_RESULT_SIZE_AMD");
#endif
#if defined(GL_PERFMON_RESULT_AMD)
defconsti(env, "GL-PERFMON-RESULT-AMD", (GLenum) GL_PERFMON_RESULT_AMD, "GL_PERFMON_RESULT_AMD");
#endif
#if defined(GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD)
defconsti(env, "GL-EXTERNAL-VIRTUAL-MEMORY-BUFFER-AMD", (GLenum) GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD, "GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD");
#endif
#if defined(GL_Z400_BINARY_AMD)
defconsti(env, "GL-Z400-BINARY-AMD", (GLenum) GL_Z400_BINARY_AMD, "GL_Z400_BINARY_AMD");
#endif
#if defined(GL_QUERY_BUFFER_AMD)
defconsti(env, "GL-QUERY-BUFFER-AMD", (GLenum) GL_QUERY_BUFFER_AMD, "GL_QUERY_BUFFER_AMD");
#endif
#if defined(GL_QUERY_BUFFER_BINDING_AMD)
defconsti(env, "GL-QUERY-BUFFER-BINDING-AMD", (GLenum) GL_QUERY_BUFFER_BINDING_AMD, "GL_QUERY_BUFFER_BINDING_AMD");
#endif
#if defined(GL_QUERY_RESULT_NO_WAIT_AMD)
defconsti(env, "GL-QUERY-RESULT-NO-WAIT-AMD", (GLenum) GL_QUERY_RESULT_NO_WAIT_AMD, "GL_QUERY_RESULT_NO_WAIT_AMD");
#endif
#if defined(GL_SUBSAMPLE_DISTANCE_AMD)
defconsti(env, "GL-SUBSAMPLE-DISTANCE-AMD", (GLenum) GL_SUBSAMPLE_DISTANCE_AMD, "GL_SUBSAMPLE_DISTANCE_AMD");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_SEAMLESS)
defconsti(env, "GL-TEXTURE-CUBE-MAP-SEAMLESS", (GLenum) GL_TEXTURE_CUBE_MAP_SEAMLESS, "GL_TEXTURE_CUBE_MAP_SEAMLESS");
#endif
#if defined(GL_VIRTUAL_PAGE_SIZE_X_AMD)
defconsti(env, "GL-VIRTUAL-PAGE-SIZE-X-AMD", (GLenum) GL_VIRTUAL_PAGE_SIZE_X_AMD, "GL_VIRTUAL_PAGE_SIZE_X_AMD");
#endif
#if defined(GL_VIRTUAL_PAGE_SIZE_Y_AMD)
defconsti(env, "GL-VIRTUAL-PAGE-SIZE-Y-AMD", (GLenum) GL_VIRTUAL_PAGE_SIZE_Y_AMD, "GL_VIRTUAL_PAGE_SIZE_Y_AMD");
#endif
#if defined(GL_VIRTUAL_PAGE_SIZE_Z_AMD)
defconsti(env, "GL-VIRTUAL-PAGE-SIZE-Z-AMD", (GLenum) GL_VIRTUAL_PAGE_SIZE_Z_AMD, "GL_VIRTUAL_PAGE_SIZE_Z_AMD");
#endif
#if defined(GL_MAX_SPARSE_TEXTURE_SIZE_AMD)
defconsti(env, "GL-MAX-SPARSE-TEXTURE-SIZE-AMD", (GLenum) GL_MAX_SPARSE_TEXTURE_SIZE_AMD, "GL_MAX_SPARSE_TEXTURE_SIZE_AMD");
#endif
#if defined(GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD)
defconsti(env, "GL-MAX-SPARSE-3D-TEXTURE-SIZE-AMD", (GLenum) GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD, "GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD");
#endif
#if defined(GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS)
defconsti(env, "GL-MAX-SPARSE-ARRAY-TEXTURE-LAYERS", (GLenum) GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS, "GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS");
#endif
#if defined(GL_MIN_SPARSE_LEVEL_AMD)
defconsti(env, "GL-MIN-SPARSE-LEVEL-AMD", (GLenum) GL_MIN_SPARSE_LEVEL_AMD, "GL_MIN_SPARSE_LEVEL_AMD");
#endif
#if defined(GL_MIN_LOD_WARNING_AMD)
defconsti(env, "GL-MIN-LOD-WARNING-AMD", (GLenum) GL_MIN_LOD_WARNING_AMD, "GL_MIN_LOD_WARNING_AMD");
#endif
#if defined(GL_TEXTURE_STORAGE_SPARSE_BIT_AMD)
defconsti(env, "GL-TEXTURE-STORAGE-SPARSE-BIT-AMD", (GLenum) GL_TEXTURE_STORAGE_SPARSE_BIT_AMD, "GL_TEXTURE_STORAGE_SPARSE_BIT_AMD");
#endif
#if defined(GL_SET_AMD)
defconsti(env, "GL-SET-AMD", (GLenum) GL_SET_AMD, "GL_SET_AMD");
#endif
#if defined(GL_REPLACE_VALUE_AMD)
defconsti(env, "GL-REPLACE-VALUE-AMD", (GLenum) GL_REPLACE_VALUE_AMD, "GL_REPLACE_VALUE_AMD");
#endif
#if defined(GL_STENCIL_OP_VALUE_AMD)
defconsti(env, "GL-STENCIL-OP-VALUE-AMD", (GLenum) GL_STENCIL_OP_VALUE_AMD, "GL_STENCIL_OP_VALUE_AMD");
#endif
#if defined(GL_STENCIL_BACK_OP_VALUE_AMD)
defconsti(env, "GL-STENCIL-BACK-OP-VALUE-AMD", (GLenum) GL_STENCIL_BACK_OP_VALUE_AMD, "GL_STENCIL_BACK_OP_VALUE_AMD");
#endif
#if defined(GL_STREAM_RASTERIZATION_AMD)
defconsti(env, "GL-STREAM-RASTERIZATION-AMD", (GLenum) GL_STREAM_RASTERIZATION_AMD, "GL_STREAM_RASTERIZATION_AMD");
#endif
#if defined(GL_SAMPLER_BUFFER_AMD)
defconsti(env, "GL-SAMPLER-BUFFER-AMD", (GLenum) GL_SAMPLER_BUFFER_AMD, "GL_SAMPLER_BUFFER_AMD");
#endif
#if defined(GL_INT_SAMPLER_BUFFER_AMD)
defconsti(env, "GL-INT-SAMPLER-BUFFER-AMD", (GLenum) GL_INT_SAMPLER_BUFFER_AMD, "GL_INT_SAMPLER_BUFFER_AMD");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-BUFFER-AMD", (GLenum) GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD, "GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD");
#endif
#if defined(GL_TESSELLATION_MODE_AMD)
defconsti(env, "GL-TESSELLATION-MODE-AMD", (GLenum) GL_TESSELLATION_MODE_AMD, "GL_TESSELLATION_MODE_AMD");
#endif
#if defined(GL_TESSELLATION_FACTOR_AMD)
defconsti(env, "GL-TESSELLATION-FACTOR-AMD", (GLenum) GL_TESSELLATION_FACTOR_AMD, "GL_TESSELLATION_FACTOR_AMD");
#endif
#if defined(GL_DISCRETE_AMD)
defconsti(env, "GL-DISCRETE-AMD", (GLenum) GL_DISCRETE_AMD, "GL_DISCRETE_AMD");
#endif
#if defined(GL_CONTINUOUS_AMD)
defconsti(env, "GL-CONTINUOUS-AMD", (GLenum) GL_CONTINUOUS_AMD, "GL_CONTINUOUS_AMD");
#endif
#if defined(GL_DEPTH_COMPONENT)
defconsti(env, "GL-DEPTH-COMPONENT", (GLenum) GL_DEPTH_COMPONENT, "GL_DEPTH_COMPONENT");
#endif
#if defined(GL_DEPTH_STENCIL_OES)
defconsti(env, "GL-DEPTH-STENCIL-OES", (GLenum) GL_DEPTH_STENCIL_OES, "GL_DEPTH_STENCIL_OES");
#endif
#if defined(GL_UNSIGNED_SHORT)
defconsti(env, "GL-UNSIGNED-SHORT", (GLenum) GL_UNSIGNED_SHORT, "GL_UNSIGNED_SHORT");
#endif
#if defined(GL_UNSIGNED_INT)
defconsti(env, "GL-UNSIGNED-INT", (GLenum) GL_UNSIGNED_INT, "GL_UNSIGNED_INT");
#endif
#if defined(GL_UNSIGNED_INT_24_8_OES)
defconsti(env, "GL-UNSIGNED-INT-24-8-OES", (GLenum) GL_UNSIGNED_INT_24_8_OES, "GL_UNSIGNED_INT_24_8_OES");
#endif
#if defined(GL_DEPTH_COMPONENT16)
defconsti(env, "GL-DEPTH-COMPONENT16", (GLenum) GL_DEPTH_COMPONENT16, "GL_DEPTH_COMPONENT16");
#endif
#if defined(GL_DEPTH_COMPONENT32_OES)
defconsti(env, "GL-DEPTH-COMPONENT32-OES", (GLenum) GL_DEPTH_COMPONENT32_OES, "GL_DEPTH_COMPONENT32_OES");
#endif
#if defined(GL_DEPTH24_STENCIL8_OES)
defconsti(env, "GL-DEPTH24-STENCIL8-OES", (GLenum) GL_DEPTH24_STENCIL8_OES, "GL_DEPTH24_STENCIL8_OES");
#endif
#if defined(GL_READ_FRAMEBUFFER_ANGLE)
defconsti(env, "GL-READ-FRAMEBUFFER-ANGLE", (GLenum) GL_READ_FRAMEBUFFER_ANGLE, "GL_READ_FRAMEBUFFER_ANGLE");
#endif
#if defined(GL_DRAW_FRAMEBUFFER_ANGLE)
defconsti(env, "GL-DRAW-FRAMEBUFFER-ANGLE", (GLenum) GL_DRAW_FRAMEBUFFER_ANGLE, "GL_DRAW_FRAMEBUFFER_ANGLE");
#endif
#if defined(GL_DRAW_FRAMEBUFFER_BINDING_ANGLE)
defconsti(env, "GL-DRAW-FRAMEBUFFER-BINDING-ANGLE", (GLenum) GL_DRAW_FRAMEBUFFER_BINDING_ANGLE, "GL_DRAW_FRAMEBUFFER_BINDING_ANGLE");
#endif
#if defined(GL_READ_FRAMEBUFFER_BINDING_ANGLE)
defconsti(env, "GL-READ-FRAMEBUFFER-BINDING-ANGLE", (GLenum) GL_READ_FRAMEBUFFER_BINDING_ANGLE, "GL_READ_FRAMEBUFFER_BINDING_ANGLE");
#endif
#if defined(GL_RENDERBUFFER_SAMPLES_ANGLE)
defconsti(env, "GL-RENDERBUFFER-SAMPLES-ANGLE", (GLenum) GL_RENDERBUFFER_SAMPLES_ANGLE, "GL_RENDERBUFFER_SAMPLES_ANGLE");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MULTISAMPLE-ANGLE", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE, "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE");
#endif
#if defined(GL_MAX_SAMPLES_ANGLE)
defconsti(env, "GL-MAX-SAMPLES-ANGLE", (GLenum) GL_MAX_SAMPLES_ANGLE, "GL_MAX_SAMPLES_ANGLE");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-DIVISOR-ANGLE", (GLenum) GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE, "GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE");
#endif
#if defined(GL_PACK_REVERSE_ROW_ORDER_ANGLE)
defconsti(env, "GL-PACK-REVERSE-ROW-ORDER-ANGLE", (GLenum) GL_PACK_REVERSE_ROW_ORDER_ANGLE, "GL_PACK_REVERSE_ROW_ORDER_ANGLE");
#endif
#if defined(GL_PROGRAM_BINARY_ANGLE)
defconsti(env, "GL-PROGRAM-BINARY-ANGLE", (GLenum) GL_PROGRAM_BINARY_ANGLE, "GL_PROGRAM_BINARY_ANGLE");
#endif
#if defined(GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE)
defconsti(env, "GL-COMPRESSED-RGBA-S3TC-DXT3-ANGLE", (GLenum) GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE, "GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE");
#endif
#if defined(GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE)
defconsti(env, "GL-COMPRESSED-RGBA-S3TC-DXT5-ANGLE", (GLenum) GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE, "GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE");
#endif
#if defined(GL_TEXTURE_USAGE_ANGLE)
defconsti(env, "GL-TEXTURE-USAGE-ANGLE", (GLenum) GL_TEXTURE_USAGE_ANGLE, "GL_TEXTURE_USAGE_ANGLE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_ANGLE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-ANGLE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_ANGLE, "GL_FRAMEBUFFER_ATTACHMENT_ANGLE");
#endif
#if defined(GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE)
defconsti(env, "GL-TRANSLATED-SHADER-SOURCE-LENGTH-ANGLE", (GLenum) GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE, "GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE");
#endif
#if defined(GL_AUX_DEPTH_STENCIL_APPLE)
defconsti(env, "GL-AUX-DEPTH-STENCIL-APPLE", (GLenum) GL_AUX_DEPTH_STENCIL_APPLE, "GL_AUX_DEPTH_STENCIL_APPLE");
#endif
#if defined(GL_UNPACK_CLIENT_STORAGE_APPLE)
defconsti(env, "GL-UNPACK-CLIENT-STORAGE-APPLE", (GLenum) GL_UNPACK_CLIENT_STORAGE_APPLE, "GL_UNPACK_CLIENT_STORAGE_APPLE");
#endif
#if defined(GL_MAX_CLIP_DISTANCES_APPLE)
defconsti(env, "GL-MAX-CLIP-DISTANCES-APPLE", (GLenum) GL_MAX_CLIP_DISTANCES_APPLE, "GL_MAX_CLIP_DISTANCES_APPLE");
#endif
#if defined(GL_CLIP_DISTANCE0_APPLE)
defconsti(env, "GL-CLIP-DISTANCE0-APPLE", (GLenum) GL_CLIP_DISTANCE0_APPLE, "GL_CLIP_DISTANCE0_APPLE");
#endif
#if defined(GL_CLIP_DISTANCE1_APPLE)
defconsti(env, "GL-CLIP-DISTANCE1-APPLE", (GLenum) GL_CLIP_DISTANCE1_APPLE, "GL_CLIP_DISTANCE1_APPLE");
#endif
#if defined(GL_CLIP_DISTANCE2_APPLE)
defconsti(env, "GL-CLIP-DISTANCE2-APPLE", (GLenum) GL_CLIP_DISTANCE2_APPLE, "GL_CLIP_DISTANCE2_APPLE");
#endif
#if defined(GL_CLIP_DISTANCE3_APPLE)
defconsti(env, "GL-CLIP-DISTANCE3-APPLE", (GLenum) GL_CLIP_DISTANCE3_APPLE, "GL_CLIP_DISTANCE3_APPLE");
#endif
#if defined(GL_CLIP_DISTANCE4_APPLE)
defconsti(env, "GL-CLIP-DISTANCE4-APPLE", (GLenum) GL_CLIP_DISTANCE4_APPLE, "GL_CLIP_DISTANCE4_APPLE");
#endif
#if defined(GL_CLIP_DISTANCE5_APPLE)
defconsti(env, "GL-CLIP-DISTANCE5-APPLE", (GLenum) GL_CLIP_DISTANCE5_APPLE, "GL_CLIP_DISTANCE5_APPLE");
#endif
#if defined(GL_CLIP_DISTANCE6_APPLE)
defconsti(env, "GL-CLIP-DISTANCE6-APPLE", (GLenum) GL_CLIP_DISTANCE6_APPLE, "GL_CLIP_DISTANCE6_APPLE");
#endif
#if defined(GL_CLIP_DISTANCE7_APPLE)
defconsti(env, "GL-CLIP-DISTANCE7-APPLE", (GLenum) GL_CLIP_DISTANCE7_APPLE, "GL_CLIP_DISTANCE7_APPLE");
#endif
#if defined(GL_ELEMENT_ARRAY_APPLE)
defconsti(env, "GL-ELEMENT-ARRAY-APPLE", (GLenum) GL_ELEMENT_ARRAY_APPLE, "GL_ELEMENT_ARRAY_APPLE");
#endif
#if defined(GL_ELEMENT_ARRAY_TYPE_APPLE)
defconsti(env, "GL-ELEMENT-ARRAY-TYPE-APPLE", (GLenum) GL_ELEMENT_ARRAY_TYPE_APPLE, "GL_ELEMENT_ARRAY_TYPE_APPLE");
#endif
#if defined(GL_ELEMENT_ARRAY_POINTER_APPLE)
defconsti(env, "GL-ELEMENT-ARRAY-POINTER-APPLE", (GLenum) GL_ELEMENT_ARRAY_POINTER_APPLE, "GL_ELEMENT_ARRAY_POINTER_APPLE");
#endif
#if defined(GL_DRAW_PIXELS_APPLE)
defconsti(env, "GL-DRAW-PIXELS-APPLE", (GLenum) GL_DRAW_PIXELS_APPLE, "GL_DRAW_PIXELS_APPLE");
#endif
#if defined(GL_FENCE_APPLE)
defconsti(env, "GL-FENCE-APPLE", (GLenum) GL_FENCE_APPLE, "GL_FENCE_APPLE");
#endif
#if defined(GL_HALF_APPLE)
defconsti(env, "GL-HALF-APPLE", (GLenum) GL_HALF_APPLE, "GL_HALF_APPLE");
#endif
#if defined(GL_RGBA_FLOAT32_APPLE)
defconsti(env, "GL-RGBA-FLOAT32-APPLE", (GLenum) GL_RGBA_FLOAT32_APPLE, "GL_RGBA_FLOAT32_APPLE");
#endif
#if defined(GL_RGB_FLOAT32_APPLE)
defconsti(env, "GL-RGB-FLOAT32-APPLE", (GLenum) GL_RGB_FLOAT32_APPLE, "GL_RGB_FLOAT32_APPLE");
#endif
#if defined(GL_ALPHA_FLOAT32_APPLE)
defconsti(env, "GL-ALPHA-FLOAT32-APPLE", (GLenum) GL_ALPHA_FLOAT32_APPLE, "GL_ALPHA_FLOAT32_APPLE");
#endif
#if defined(GL_INTENSITY_FLOAT32_APPLE)
defconsti(env, "GL-INTENSITY-FLOAT32-APPLE", (GLenum) GL_INTENSITY_FLOAT32_APPLE, "GL_INTENSITY_FLOAT32_APPLE");
#endif
#if defined(GL_LUMINANCE_FLOAT32_APPLE)
defconsti(env, "GL-LUMINANCE-FLOAT32-APPLE", (GLenum) GL_LUMINANCE_FLOAT32_APPLE, "GL_LUMINANCE_FLOAT32_APPLE");
#endif
#if defined(GL_LUMINANCE_ALPHA_FLOAT32_APPLE)
defconsti(env, "GL-LUMINANCE-ALPHA-FLOAT32-APPLE", (GLenum) GL_LUMINANCE_ALPHA_FLOAT32_APPLE, "GL_LUMINANCE_ALPHA_FLOAT32_APPLE");
#endif
#if defined(GL_RGBA_FLOAT16_APPLE)
defconsti(env, "GL-RGBA-FLOAT16-APPLE", (GLenum) GL_RGBA_FLOAT16_APPLE, "GL_RGBA_FLOAT16_APPLE");
#endif
#if defined(GL_RGB_FLOAT16_APPLE)
defconsti(env, "GL-RGB-FLOAT16-APPLE", (GLenum) GL_RGB_FLOAT16_APPLE, "GL_RGB_FLOAT16_APPLE");
#endif
#if defined(GL_ALPHA_FLOAT16_APPLE)
defconsti(env, "GL-ALPHA-FLOAT16-APPLE", (GLenum) GL_ALPHA_FLOAT16_APPLE, "GL_ALPHA_FLOAT16_APPLE");
#endif
#if defined(GL_INTENSITY_FLOAT16_APPLE)
defconsti(env, "GL-INTENSITY-FLOAT16-APPLE", (GLenum) GL_INTENSITY_FLOAT16_APPLE, "GL_INTENSITY_FLOAT16_APPLE");
#endif
#if defined(GL_LUMINANCE_FLOAT16_APPLE)
defconsti(env, "GL-LUMINANCE-FLOAT16-APPLE", (GLenum) GL_LUMINANCE_FLOAT16_APPLE, "GL_LUMINANCE_FLOAT16_APPLE");
#endif
#if defined(GL_LUMINANCE_ALPHA_FLOAT16_APPLE)
defconsti(env, "GL-LUMINANCE-ALPHA-FLOAT16-APPLE", (GLenum) GL_LUMINANCE_ALPHA_FLOAT16_APPLE, "GL_LUMINANCE_ALPHA_FLOAT16_APPLE");
#endif
#if defined(GL_COLOR_FLOAT_APPLE)
defconsti(env, "GL-COLOR-FLOAT-APPLE", (GLenum) GL_COLOR_FLOAT_APPLE, "GL_COLOR_FLOAT_APPLE");
#endif
#if defined(GL_BUFFER_SERIALIZED_MODIFY_APPLE)
defconsti(env, "GL-BUFFER-SERIALIZED-MODIFY-APPLE", (GLenum) GL_BUFFER_SERIALIZED_MODIFY_APPLE, "GL_BUFFER_SERIALIZED_MODIFY_APPLE");
#endif
#if defined(GL_BUFFER_FLUSHING_UNMAP_APPLE)
defconsti(env, "GL-BUFFER-FLUSHING-UNMAP-APPLE", (GLenum) GL_BUFFER_FLUSHING_UNMAP_APPLE, "GL_BUFFER_FLUSHING_UNMAP_APPLE");
#endif
#if defined(GL_RENDERBUFFER_SAMPLES_APPLE)
defconsti(env, "GL-RENDERBUFFER-SAMPLES-APPLE", (GLenum) GL_RENDERBUFFER_SAMPLES_APPLE, "GL_RENDERBUFFER_SAMPLES_APPLE");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MULTISAMPLE-APPLE", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE, "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE");
#endif
#if defined(GL_MAX_SAMPLES_APPLE)
defconsti(env, "GL-MAX-SAMPLES-APPLE", (GLenum) GL_MAX_SAMPLES_APPLE, "GL_MAX_SAMPLES_APPLE");
#endif
#if defined(GL_READ_FRAMEBUFFER_APPLE)
defconsti(env, "GL-READ-FRAMEBUFFER-APPLE", (GLenum) GL_READ_FRAMEBUFFER_APPLE, "GL_READ_FRAMEBUFFER_APPLE");
#endif
#if defined(GL_DRAW_FRAMEBUFFER_APPLE)
defconsti(env, "GL-DRAW-FRAMEBUFFER-APPLE", (GLenum) GL_DRAW_FRAMEBUFFER_APPLE, "GL_DRAW_FRAMEBUFFER_APPLE");
#endif
#if defined(GL_DRAW_FRAMEBUFFER_BINDING_APPLE)
defconsti(env, "GL-DRAW-FRAMEBUFFER-BINDING-APPLE", (GLenum) GL_DRAW_FRAMEBUFFER_BINDING_APPLE, "GL_DRAW_FRAMEBUFFER_BINDING_APPLE");
#endif
#if defined(GL_READ_FRAMEBUFFER_BINDING_APPLE)
defconsti(env, "GL-READ-FRAMEBUFFER-BINDING-APPLE", (GLenum) GL_READ_FRAMEBUFFER_BINDING_APPLE, "GL_READ_FRAMEBUFFER_BINDING_APPLE");
#endif
#if defined(GL_BUFFER_OBJECT_APPLE)
defconsti(env, "GL-BUFFER-OBJECT-APPLE", (GLenum) GL_BUFFER_OBJECT_APPLE, "GL_BUFFER_OBJECT_APPLE");
#endif
#if defined(GL_RELEASED_APPLE)
defconsti(env, "GL-RELEASED-APPLE", (GLenum) GL_RELEASED_APPLE, "GL_RELEASED_APPLE");
#endif
#if defined(GL_VOLATILE_APPLE)
defconsti(env, "GL-VOLATILE-APPLE", (GLenum) GL_VOLATILE_APPLE, "GL_VOLATILE_APPLE");
#endif
#if defined(GL_RETAINED_APPLE)
defconsti(env, "GL-RETAINED-APPLE", (GLenum) GL_RETAINED_APPLE, "GL_RETAINED_APPLE");
#endif
#if defined(GL_UNDEFINED_APPLE)
defconsti(env, "GL-UNDEFINED-APPLE", (GLenum) GL_UNDEFINED_APPLE, "GL_UNDEFINED_APPLE");
#endif
#if defined(GL_PURGEABLE_APPLE)
defconsti(env, "GL-PURGEABLE-APPLE", (GLenum) GL_PURGEABLE_APPLE, "GL_PURGEABLE_APPLE");
#endif
#if defined(GL_RGB_422_APPLE)
defconsti(env, "GL-RGB-422-APPLE", (GLenum) GL_RGB_422_APPLE, "GL_RGB_422_APPLE");
#endif
#if defined(GL_UNSIGNED_SHORT_8_8_APPLE)
defconsti(env, "GL-UNSIGNED-SHORT-8-8-APPLE", (GLenum) GL_UNSIGNED_SHORT_8_8_APPLE, "GL_UNSIGNED_SHORT_8_8_APPLE");
#endif
#if defined(GL_UNSIGNED_SHORT_8_8_REV_APPLE)
defconsti(env, "GL-UNSIGNED-SHORT-8-8-REV-APPLE", (GLenum) GL_UNSIGNED_SHORT_8_8_REV_APPLE, "GL_UNSIGNED_SHORT_8_8_REV_APPLE");
#endif
#if defined(GL_RGB_RAW_422_APPLE)
defconsti(env, "GL-RGB-RAW-422-APPLE", (GLenum) GL_RGB_RAW_422_APPLE, "GL_RGB_RAW_422_APPLE");
#endif
#if defined(GL_PACK_ROW_BYTES_APPLE)
defconsti(env, "GL-PACK-ROW-BYTES-APPLE", (GLenum) GL_PACK_ROW_BYTES_APPLE, "GL_PACK_ROW_BYTES_APPLE");
#endif
#if defined(GL_UNPACK_ROW_BYTES_APPLE)
defconsti(env, "GL-UNPACK-ROW-BYTES-APPLE", (GLenum) GL_UNPACK_ROW_BYTES_APPLE, "GL_UNPACK_ROW_BYTES_APPLE");
#endif
#if defined(GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE)
defconsti(env, "GL-LIGHT-MODEL-SPECULAR-VECTOR-APPLE", (GLenum) GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE, "GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE");
#endif
#if defined(GL_SYNC_OBJECT_APPLE)
defconsti(env, "GL-SYNC-OBJECT-APPLE", (GLenum) GL_SYNC_OBJECT_APPLE, "GL_SYNC_OBJECT_APPLE");
#endif
#if defined(GL_MAX_SERVER_WAIT_TIMEOUT_APPLE)
defconsti(env, "GL-MAX-SERVER-WAIT-TIMEOUT-APPLE", (GLenum) GL_MAX_SERVER_WAIT_TIMEOUT_APPLE, "GL_MAX_SERVER_WAIT_TIMEOUT_APPLE");
#endif
#if defined(GL_OBJECT_TYPE_APPLE)
defconsti(env, "GL-OBJECT-TYPE-APPLE", (GLenum) GL_OBJECT_TYPE_APPLE, "GL_OBJECT_TYPE_APPLE");
#endif
#if defined(GL_SYNC_CONDITION_APPLE)
defconsti(env, "GL-SYNC-CONDITION-APPLE", (GLenum) GL_SYNC_CONDITION_APPLE, "GL_SYNC_CONDITION_APPLE");
#endif
#if defined(GL_SYNC_STATUS_APPLE)
defconsti(env, "GL-SYNC-STATUS-APPLE", (GLenum) GL_SYNC_STATUS_APPLE, "GL_SYNC_STATUS_APPLE");
#endif
#if defined(GL_SYNC_FLAGS_APPLE)
defconsti(env, "GL-SYNC-FLAGS-APPLE", (GLenum) GL_SYNC_FLAGS_APPLE, "GL_SYNC_FLAGS_APPLE");
#endif
#if defined(GL_SYNC_FENCE_APPLE)
defconsti(env, "GL-SYNC-FENCE-APPLE", (GLenum) GL_SYNC_FENCE_APPLE, "GL_SYNC_FENCE_APPLE");
#endif
#if defined(GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE)
defconsti(env, "GL-SYNC-GPU-COMMANDS-COMPLETE-APPLE", (GLenum) GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE, "GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE");
#endif
#if defined(GL_UNSIGNALED_APPLE)
defconsti(env, "GL-UNSIGNALED-APPLE", (GLenum) GL_UNSIGNALED_APPLE, "GL_UNSIGNALED_APPLE");
#endif
#if defined(GL_SIGNALED_APPLE)
defconsti(env, "GL-SIGNALED-APPLE", (GLenum) GL_SIGNALED_APPLE, "GL_SIGNALED_APPLE");
#endif
#if defined(GL_ALREADY_SIGNALED_APPLE)
defconsti(env, "GL-ALREADY-SIGNALED-APPLE", (GLenum) GL_ALREADY_SIGNALED_APPLE, "GL_ALREADY_SIGNALED_APPLE");
#endif
#if defined(GL_TIMEOUT_EXPIRED_APPLE)
defconsti(env, "GL-TIMEOUT-EXPIRED-APPLE", (GLenum) GL_TIMEOUT_EXPIRED_APPLE, "GL_TIMEOUT_EXPIRED_APPLE");
#endif
#if defined(GL_CONDITION_SATISFIED_APPLE)
defconsti(env, "GL-CONDITION-SATISFIED-APPLE", (GLenum) GL_CONDITION_SATISFIED_APPLE, "GL_CONDITION_SATISFIED_APPLE");
#endif
#if defined(GL_WAIT_FAILED_APPLE)
defconsti(env, "GL-WAIT-FAILED-APPLE", (GLenum) GL_WAIT_FAILED_APPLE, "GL_WAIT_FAILED_APPLE");
#endif
#if defined(GL_SYNC_FLUSH_COMMANDS_BIT_APPLE)
defconsti(env, "GL-SYNC-FLUSH-COMMANDS-BIT-APPLE", (GLenum) GL_SYNC_FLUSH_COMMANDS_BIT_APPLE, "GL_SYNC_FLUSH_COMMANDS_BIT_APPLE");
#endif
#if defined(GL_TIMEOUT_IGNORED_APPLE)
defconsti(env, "GL-TIMEOUT-IGNORED-APPLE", (GLenum) GL_TIMEOUT_IGNORED_APPLE, "GL_TIMEOUT_IGNORED_APPLE");
#endif
#if defined(GL_BGRA_EXT)
defconsti(env, "GL-BGRA-EXT", (GLenum) GL_BGRA_EXT, "GL_BGRA_EXT");
#endif
#if defined(GL_BGRA8_EXT)
defconsti(env, "GL-BGRA8-EXT", (GLenum) GL_BGRA8_EXT, "GL_BGRA8_EXT");
#endif
#if defined(GL_TEXTURE_MAX_LEVEL_APPLE)
defconsti(env, "GL-TEXTURE-MAX-LEVEL-APPLE", (GLenum) GL_TEXTURE_MAX_LEVEL_APPLE, "GL_TEXTURE_MAX_LEVEL_APPLE");
#endif
#if defined(GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE)
defconsti(env, "GL-UNSIGNED-INT-10F-11F-11F-REV-APPLE", (GLenum) GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE, "GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE");
#endif
#if defined(GL_UNSIGNED_INT_5_9_9_9_REV_APPLE)
defconsti(env, "GL-UNSIGNED-INT-5-9-9-9-REV-APPLE", (GLenum) GL_UNSIGNED_INT_5_9_9_9_REV_APPLE, "GL_UNSIGNED_INT_5_9_9_9_REV_APPLE");
#endif
#if defined(GL_R11F_G11F_B10F_APPLE)
defconsti(env, "GL-R11F-G11F-B10F-APPLE", (GLenum) GL_R11F_G11F_B10F_APPLE, "GL_R11F_G11F_B10F_APPLE");
#endif
#if defined(GL_RGB9_E5_APPLE)
defconsti(env, "GL-RGB9-E5-APPLE", (GLenum) GL_RGB9_E5_APPLE, "GL_RGB9_E5_APPLE");
#endif
#if defined(GL_TEXTURE_RANGE_LENGTH_APPLE)
defconsti(env, "GL-TEXTURE-RANGE-LENGTH-APPLE", (GLenum) GL_TEXTURE_RANGE_LENGTH_APPLE, "GL_TEXTURE_RANGE_LENGTH_APPLE");
#endif
#if defined(GL_TEXTURE_RANGE_POINTER_APPLE)
defconsti(env, "GL-TEXTURE-RANGE-POINTER-APPLE", (GLenum) GL_TEXTURE_RANGE_POINTER_APPLE, "GL_TEXTURE_RANGE_POINTER_APPLE");
#endif
#if defined(GL_TEXTURE_STORAGE_HINT_APPLE)
defconsti(env, "GL-TEXTURE-STORAGE-HINT-APPLE", (GLenum) GL_TEXTURE_STORAGE_HINT_APPLE, "GL_TEXTURE_STORAGE_HINT_APPLE");
#endif
#if defined(GL_STORAGE_PRIVATE_APPLE)
defconsti(env, "GL-STORAGE-PRIVATE-APPLE", (GLenum) GL_STORAGE_PRIVATE_APPLE, "GL_STORAGE_PRIVATE_APPLE");
#endif
#if defined(GL_STORAGE_CACHED_APPLE)
defconsti(env, "GL-STORAGE-CACHED-APPLE", (GLenum) GL_STORAGE_CACHED_APPLE, "GL_STORAGE_CACHED_APPLE");
#endif
#if defined(GL_STORAGE_SHARED_APPLE)
defconsti(env, "GL-STORAGE-SHARED-APPLE", (GLenum) GL_STORAGE_SHARED_APPLE, "GL_STORAGE_SHARED_APPLE");
#endif
#if defined(GL_TRANSFORM_HINT_APPLE)
defconsti(env, "GL-TRANSFORM-HINT-APPLE", (GLenum) GL_TRANSFORM_HINT_APPLE, "GL_TRANSFORM_HINT_APPLE");
#endif
#if defined(GL_VERTEX_ARRAY_BINDING_APPLE)
defconsti(env, "GL-VERTEX-ARRAY-BINDING-APPLE", (GLenum) GL_VERTEX_ARRAY_BINDING_APPLE, "GL_VERTEX_ARRAY_BINDING_APPLE");
#endif
#if defined(GL_VERTEX_ARRAY_RANGE_APPLE)
defconsti(env, "GL-VERTEX-ARRAY-RANGE-APPLE", (GLenum) GL_VERTEX_ARRAY_RANGE_APPLE, "GL_VERTEX_ARRAY_RANGE_APPLE");
#endif
#if defined(GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE)
defconsti(env, "GL-VERTEX-ARRAY-RANGE-LENGTH-APPLE", (GLenum) GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE, "GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE");
#endif
#if defined(GL_VERTEX_ARRAY_STORAGE_HINT_APPLE)
defconsti(env, "GL-VERTEX-ARRAY-STORAGE-HINT-APPLE", (GLenum) GL_VERTEX_ARRAY_STORAGE_HINT_APPLE, "GL_VERTEX_ARRAY_STORAGE_HINT_APPLE");
#endif
#if defined(GL_VERTEX_ARRAY_RANGE_POINTER_APPLE)
defconsti(env, "GL-VERTEX-ARRAY-RANGE-POINTER-APPLE", (GLenum) GL_VERTEX_ARRAY_RANGE_POINTER_APPLE, "GL_VERTEX_ARRAY_RANGE_POINTER_APPLE");
#endif
#if defined(GL_STORAGE_CLIENT_APPLE)
defconsti(env, "GL-STORAGE-CLIENT-APPLE", (GLenum) GL_STORAGE_CLIENT_APPLE, "GL_STORAGE_CLIENT_APPLE");
#endif
#if defined(GL_STORAGE_CACHED_APPLE)
defconsti(env, "GL-STORAGE-CACHED-APPLE", (GLenum) GL_STORAGE_CACHED_APPLE, "GL_STORAGE_CACHED_APPLE");
#endif
#if defined(GL_STORAGE_SHARED_APPLE)
defconsti(env, "GL-STORAGE-SHARED-APPLE", (GLenum) GL_STORAGE_SHARED_APPLE, "GL_STORAGE_SHARED_APPLE");
#endif
#if defined(GL_VERTEX_ATTRIB_MAP1_APPLE)
defconsti(env, "GL-VERTEX-ATTRIB-MAP1-APPLE", (GLenum) GL_VERTEX_ATTRIB_MAP1_APPLE, "GL_VERTEX_ATTRIB_MAP1_APPLE");
#endif
#if defined(GL_VERTEX_ATTRIB_MAP2_APPLE)
defconsti(env, "GL-VERTEX-ATTRIB-MAP2-APPLE", (GLenum) GL_VERTEX_ATTRIB_MAP2_APPLE, "GL_VERTEX_ATTRIB_MAP2_APPLE");
#endif
#if defined(GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE)
defconsti(env, "GL-VERTEX-ATTRIB-MAP1-SIZE-APPLE", (GLenum) GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE, "GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE");
#endif
#if defined(GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE)
defconsti(env, "GL-VERTEX-ATTRIB-MAP1-COEFF-APPLE", (GLenum) GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE, "GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE");
#endif
#if defined(GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE)
defconsti(env, "GL-VERTEX-ATTRIB-MAP1-ORDER-APPLE", (GLenum) GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE, "GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE");
#endif
#if defined(GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE)
defconsti(env, "GL-VERTEX-ATTRIB-MAP1-DOMAIN-APPLE", (GLenum) GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE, "GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE");
#endif
#if defined(GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE)
defconsti(env, "GL-VERTEX-ATTRIB-MAP2-SIZE-APPLE", (GLenum) GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE, "GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE");
#endif
#if defined(GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE)
defconsti(env, "GL-VERTEX-ATTRIB-MAP2-COEFF-APPLE", (GLenum) GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE, "GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE");
#endif
#if defined(GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE)
defconsti(env, "GL-VERTEX-ATTRIB-MAP2-ORDER-APPLE", (GLenum) GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE, "GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE");
#endif
#if defined(GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE)
defconsti(env, "GL-VERTEX-ATTRIB-MAP2-DOMAIN-APPLE", (GLenum) GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE, "GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE");
#endif
#if defined(GL_YCBCR_422_APPLE)
defconsti(env, "GL-YCBCR-422-APPLE", (GLenum) GL_YCBCR_422_APPLE, "GL_YCBCR_422_APPLE");
#endif
#if defined(GL_UNSIGNED_SHORT_8_8_APPLE)
defconsti(env, "GL-UNSIGNED-SHORT-8-8-APPLE", (GLenum) GL_UNSIGNED_SHORT_8_8_APPLE, "GL_UNSIGNED_SHORT_8_8_APPLE");
#endif
#if defined(GL_UNSIGNED_SHORT_8_8_REV_APPLE)
defconsti(env, "GL-UNSIGNED-SHORT-8-8-REV-APPLE", (GLenum) GL_UNSIGNED_SHORT_8_8_REV_APPLE, "GL_UNSIGNED_SHORT_8_8_REV_APPLE");
#endif
#if defined(GL_FIXED)
defconsti(env, "GL-FIXED", (GLenum) GL_FIXED, "GL_FIXED");
#endif
#if defined(GL_IMPLEMENTATION_COLOR_READ_TYPE)
defconsti(env, "GL-IMPLEMENTATION-COLOR-READ-TYPE", (GLenum) GL_IMPLEMENTATION_COLOR_READ_TYPE, "GL_IMPLEMENTATION_COLOR_READ_TYPE");
#endif
#if defined(GL_IMPLEMENTATION_COLOR_READ_FORMAT)
defconsti(env, "GL-IMPLEMENTATION-COLOR-READ-FORMAT", (GLenum) GL_IMPLEMENTATION_COLOR_READ_FORMAT, "GL_IMPLEMENTATION_COLOR_READ_FORMAT");
#endif
#if defined(GL_LOW_FLOAT)
defconsti(env, "GL-LOW-FLOAT", (GLenum) GL_LOW_FLOAT, "GL_LOW_FLOAT");
#endif
#if defined(GL_MEDIUM_FLOAT)
defconsti(env, "GL-MEDIUM-FLOAT", (GLenum) GL_MEDIUM_FLOAT, "GL_MEDIUM_FLOAT");
#endif
#if defined(GL_HIGH_FLOAT)
defconsti(env, "GL-HIGH-FLOAT", (GLenum) GL_HIGH_FLOAT, "GL_HIGH_FLOAT");
#endif
#if defined(GL_LOW_INT)
defconsti(env, "GL-LOW-INT", (GLenum) GL_LOW_INT, "GL_LOW_INT");
#endif
#if defined(GL_MEDIUM_INT)
defconsti(env, "GL-MEDIUM-INT", (GLenum) GL_MEDIUM_INT, "GL_MEDIUM_INT");
#endif
#if defined(GL_HIGH_INT)
defconsti(env, "GL-HIGH-INT", (GLenum) GL_HIGH_INT, "GL_HIGH_INT");
#endif
#if defined(GL_SHADER_COMPILER)
defconsti(env, "GL-SHADER-COMPILER", (GLenum) GL_SHADER_COMPILER, "GL_SHADER_COMPILER");
#endif
#if defined(GL_SHADER_BINARY_FORMATS)
defconsti(env, "GL-SHADER-BINARY-FORMATS", (GLenum) GL_SHADER_BINARY_FORMATS, "GL_SHADER_BINARY_FORMATS");
#endif
#if defined(GL_NUM_SHADER_BINARY_FORMATS)
defconsti(env, "GL-NUM-SHADER-BINARY-FORMATS", (GLenum) GL_NUM_SHADER_BINARY_FORMATS, "GL_NUM_SHADER_BINARY_FORMATS");
#endif
#if defined(GL_MAX_VERTEX_UNIFORM_VECTORS)
defconsti(env, "GL-MAX-VERTEX-UNIFORM-VECTORS", (GLenum) GL_MAX_VERTEX_UNIFORM_VECTORS, "GL_MAX_VERTEX_UNIFORM_VECTORS");
#endif
#if defined(GL_MAX_VARYING_VECTORS)
defconsti(env, "GL-MAX-VARYING-VECTORS", (GLenum) GL_MAX_VARYING_VECTORS, "GL_MAX_VARYING_VECTORS");
#endif
#if defined(GL_MAX_FRAGMENT_UNIFORM_VECTORS)
defconsti(env, "GL-MAX-FRAGMENT-UNIFORM-VECTORS", (GLenum) GL_MAX_FRAGMENT_UNIFORM_VECTORS, "GL_MAX_FRAGMENT_UNIFORM_VECTORS");
#endif
#if defined(GL_RGB565)
defconsti(env, "GL-RGB565", (GLenum) GL_RGB565, "GL_RGB565");
#endif
#if defined(GL_BACK)
defconsti(env, "GL-BACK", (GLenum) GL_BACK, "GL_BACK");
#endif
#if defined(GL_PRIMITIVE_BOUNDING_BOX_ARB)
defconsti(env, "GL-PRIMITIVE-BOUNDING-BOX-ARB", (GLenum) GL_PRIMITIVE_BOUNDING_BOX_ARB, "GL_PRIMITIVE_BOUNDING_BOX_ARB");
#endif
#if defined(GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB)
defconsti(env, "GL-MULTISAMPLE-LINE-WIDTH-RANGE-ARB", (GLenum) GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB, "GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB");
#endif
#if defined(GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB)
defconsti(env, "GL-MULTISAMPLE-LINE-WIDTH-GRANULARITY-ARB", (GLenum) GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB, "GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB");
#endif
#if defined(GL_COMPRESSED_RGB8_ETC2)
defconsti(env, "GL-COMPRESSED-RGB8-ETC2", (GLenum) GL_COMPRESSED_RGB8_ETC2, "GL_COMPRESSED_RGB8_ETC2");
#endif
#if defined(GL_COMPRESSED_SRGB8_ETC2)
defconsti(env, "GL-COMPRESSED-SRGB8-ETC2", (GLenum) GL_COMPRESSED_SRGB8_ETC2, "GL_COMPRESSED_SRGB8_ETC2");
#endif
#if defined(GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2)
defconsti(env, "GL-COMPRESSED-RGB8-PUNCHTHROUGH-ALPHA1-ETC2", (GLenum) GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2, "GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2");
#endif
#if defined(GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2)
defconsti(env, "GL-COMPRESSED-SRGB8-PUNCHTHROUGH-ALPHA1-ETC2", (GLenum) GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2, "GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2");
#endif
#if defined(GL_COMPRESSED_RGBA8_ETC2_EAC)
defconsti(env, "GL-COMPRESSED-RGBA8-ETC2-EAC", (GLenum) GL_COMPRESSED_RGBA8_ETC2_EAC, "GL_COMPRESSED_RGBA8_ETC2_EAC");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ETC2-EAC", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC, "GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC");
#endif
#if defined(GL_COMPRESSED_R11_EAC)
defconsti(env, "GL-COMPRESSED-R11-EAC", (GLenum) GL_COMPRESSED_R11_EAC, "GL_COMPRESSED_R11_EAC");
#endif
#if defined(GL_COMPRESSED_SIGNED_R11_EAC)
defconsti(env, "GL-COMPRESSED-SIGNED-R11-EAC", (GLenum) GL_COMPRESSED_SIGNED_R11_EAC, "GL_COMPRESSED_SIGNED_R11_EAC");
#endif
#if defined(GL_COMPRESSED_RG11_EAC)
defconsti(env, "GL-COMPRESSED-RG11-EAC", (GLenum) GL_COMPRESSED_RG11_EAC, "GL_COMPRESSED_RG11_EAC");
#endif
#if defined(GL_COMPRESSED_SIGNED_RG11_EAC)
defconsti(env, "GL-COMPRESSED-SIGNED-RG11-EAC", (GLenum) GL_COMPRESSED_SIGNED_RG11_EAC, "GL_COMPRESSED_SIGNED_RG11_EAC");
#endif
#if defined(GL_PRIMITIVE_RESTART_FIXED_INDEX)
defconsti(env, "GL-PRIMITIVE-RESTART-FIXED-INDEX", (GLenum) GL_PRIMITIVE_RESTART_FIXED_INDEX, "GL_PRIMITIVE_RESTART_FIXED_INDEX");
#endif
#if defined(GL_ANY_SAMPLES_PASSED_CONSERVATIVE)
defconsti(env, "GL-ANY-SAMPLES-PASSED-CONSERVATIVE", (GLenum) GL_ANY_SAMPLES_PASSED_CONSERVATIVE, "GL_ANY_SAMPLES_PASSED_CONSERVATIVE");
#endif
#if defined(GL_MAX_ELEMENT_INDEX)
defconsti(env, "GL-MAX-ELEMENT-INDEX", (GLenum) GL_MAX_ELEMENT_INDEX, "GL_MAX_ELEMENT_INDEX");
#endif
#if defined(GL_UNSIGNED_INT64_ARB)
defconsti(env, "GL-UNSIGNED-INT64-ARB", (GLenum) GL_UNSIGNED_INT64_ARB, "GL_UNSIGNED_INT64_ARB");
#endif
#if defined(GL_SRC1_COLOR)
defconsti(env, "GL-SRC1-COLOR", (GLenum) GL_SRC1_COLOR, "GL_SRC1_COLOR");
#endif
#if defined(GL_SRC1_ALPHA)
defconsti(env, "GL-SRC1-ALPHA", (GLenum) GL_SRC1_ALPHA, "GL_SRC1_ALPHA");
#endif
#if defined(GL_ONE_MINUS_SRC1_COLOR)
defconsti(env, "GL-ONE-MINUS-SRC1-COLOR", (GLenum) GL_ONE_MINUS_SRC1_COLOR, "GL_ONE_MINUS_SRC1_COLOR");
#endif
#if defined(GL_ONE_MINUS_SRC1_ALPHA)
defconsti(env, "GL-ONE-MINUS-SRC1-ALPHA", (GLenum) GL_ONE_MINUS_SRC1_ALPHA, "GL_ONE_MINUS_SRC1_ALPHA");
#endif
#if defined(GL_MAX_DUAL_SOURCE_DRAW_BUFFERS)
defconsti(env, "GL-MAX-DUAL-SOURCE-DRAW-BUFFERS", (GLenum) GL_MAX_DUAL_SOURCE_DRAW_BUFFERS, "GL_MAX_DUAL_SOURCE_DRAW_BUFFERS");
#endif
#if defined(GL_MAP_READ_BIT)
defconsti(env, "GL-MAP-READ-BIT", (GLenum) GL_MAP_READ_BIT, "GL_MAP_READ_BIT");
#endif
#if defined(GL_MAP_WRITE_BIT)
defconsti(env, "GL-MAP-WRITE-BIT", (GLenum) GL_MAP_WRITE_BIT, "GL_MAP_WRITE_BIT");
#endif
#if defined(GL_MAP_PERSISTENT_BIT)
defconsti(env, "GL-MAP-PERSISTENT-BIT", (GLenum) GL_MAP_PERSISTENT_BIT, "GL_MAP_PERSISTENT_BIT");
#endif
#if defined(GL_MAP_COHERENT_BIT)
defconsti(env, "GL-MAP-COHERENT-BIT", (GLenum) GL_MAP_COHERENT_BIT, "GL_MAP_COHERENT_BIT");
#endif
#if defined(GL_DYNAMIC_STORAGE_BIT)
defconsti(env, "GL-DYNAMIC-STORAGE-BIT", (GLenum) GL_DYNAMIC_STORAGE_BIT, "GL_DYNAMIC_STORAGE_BIT");
#endif
#if defined(GL_CLIENT_STORAGE_BIT)
defconsti(env, "GL-CLIENT-STORAGE-BIT", (GLenum) GL_CLIENT_STORAGE_BIT, "GL_CLIENT_STORAGE_BIT");
#endif
#if defined(GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT)
defconsti(env, "GL-CLIENT-MAPPED-BUFFER-BARRIER-BIT", (GLenum) GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT, "GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT");
#endif
#if defined(GL_BUFFER_IMMUTABLE_STORAGE)
defconsti(env, "GL-BUFFER-IMMUTABLE-STORAGE", (GLenum) GL_BUFFER_IMMUTABLE_STORAGE, "GL_BUFFER_IMMUTABLE_STORAGE");
#endif
#if defined(GL_BUFFER_STORAGE_FLAGS)
defconsti(env, "GL-BUFFER-STORAGE-FLAGS", (GLenum) GL_BUFFER_STORAGE_FLAGS, "GL_BUFFER_STORAGE_FLAGS");
#endif
#if defined(GL_SYNC_CL_EVENT_ARB)
defconsti(env, "GL-SYNC-CL-EVENT-ARB", (GLenum) GL_SYNC_CL_EVENT_ARB, "GL_SYNC_CL_EVENT_ARB");
#endif
#if defined(GL_SYNC_CL_EVENT_COMPLETE_ARB)
defconsti(env, "GL-SYNC-CL-EVENT-COMPLETE-ARB", (GLenum) GL_SYNC_CL_EVENT_COMPLETE_ARB, "GL_SYNC_CL_EVENT_COMPLETE_ARB");
#endif
#if defined(GL_CLEAR_TEXTURE)
defconsti(env, "GL-CLEAR-TEXTURE", (GLenum) GL_CLEAR_TEXTURE, "GL_CLEAR_TEXTURE");
#endif
#if defined(GL_LOWER_LEFT)
defconsti(env, "GL-LOWER-LEFT", (GLenum) GL_LOWER_LEFT, "GL_LOWER_LEFT");
#endif
#if defined(GL_UPPER_LEFT)
defconsti(env, "GL-UPPER-LEFT", (GLenum) GL_UPPER_LEFT, "GL_UPPER_LEFT");
#endif
#if defined(GL_NEGATIVE_ONE_TO_ONE)
defconsti(env, "GL-NEGATIVE-ONE-TO-ONE", (GLenum) GL_NEGATIVE_ONE_TO_ONE, "GL_NEGATIVE_ONE_TO_ONE");
#endif
#if defined(GL_ZERO_TO_ONE)
defconsti(env, "GL-ZERO-TO-ONE", (GLenum) GL_ZERO_TO_ONE, "GL_ZERO_TO_ONE");
#endif
#if defined(GL_CLIP_ORIGIN)
defconsti(env, "GL-CLIP-ORIGIN", (GLenum) GL_CLIP_ORIGIN, "GL_CLIP_ORIGIN");
#endif
#if defined(GL_CLIP_DEPTH_MODE)
defconsti(env, "GL-CLIP-DEPTH-MODE", (GLenum) GL_CLIP_DEPTH_MODE, "GL_CLIP_DEPTH_MODE");
#endif
#if defined(GL_RGBA_FLOAT_MODE_ARB)
defconsti(env, "GL-RGBA-FLOAT-MODE-ARB", (GLenum) GL_RGBA_FLOAT_MODE_ARB, "GL_RGBA_FLOAT_MODE_ARB");
#endif
#if defined(GL_CLAMP_VERTEX_COLOR_ARB)
defconsti(env, "GL-CLAMP-VERTEX-COLOR-ARB", (GLenum) GL_CLAMP_VERTEX_COLOR_ARB, "GL_CLAMP_VERTEX_COLOR_ARB");
#endif
#if defined(GL_CLAMP_FRAGMENT_COLOR_ARB)
defconsti(env, "GL-CLAMP-FRAGMENT-COLOR-ARB", (GLenum) GL_CLAMP_FRAGMENT_COLOR_ARB, "GL_CLAMP_FRAGMENT_COLOR_ARB");
#endif
#if defined(GL_CLAMP_READ_COLOR_ARB)
defconsti(env, "GL-CLAMP-READ-COLOR-ARB", (GLenum) GL_CLAMP_READ_COLOR_ARB, "GL_CLAMP_READ_COLOR_ARB");
#endif
#if defined(GL_FIXED_ONLY_ARB)
defconsti(env, "GL-FIXED-ONLY-ARB", (GLenum) GL_FIXED_ONLY_ARB, "GL_FIXED_ONLY_ARB");
#endif
#if defined(GL_UNPACK_COMPRESSED_BLOCK_WIDTH)
defconsti(env, "GL-UNPACK-COMPRESSED-BLOCK-WIDTH", (GLenum) GL_UNPACK_COMPRESSED_BLOCK_WIDTH, "GL_UNPACK_COMPRESSED_BLOCK_WIDTH");
#endif
#if defined(GL_UNPACK_COMPRESSED_BLOCK_HEIGHT)
defconsti(env, "GL-UNPACK-COMPRESSED-BLOCK-HEIGHT", (GLenum) GL_UNPACK_COMPRESSED_BLOCK_HEIGHT, "GL_UNPACK_COMPRESSED_BLOCK_HEIGHT");
#endif
#if defined(GL_UNPACK_COMPRESSED_BLOCK_DEPTH)
defconsti(env, "GL-UNPACK-COMPRESSED-BLOCK-DEPTH", (GLenum) GL_UNPACK_COMPRESSED_BLOCK_DEPTH, "GL_UNPACK_COMPRESSED_BLOCK_DEPTH");
#endif
#if defined(GL_UNPACK_COMPRESSED_BLOCK_SIZE)
defconsti(env, "GL-UNPACK-COMPRESSED-BLOCK-SIZE", (GLenum) GL_UNPACK_COMPRESSED_BLOCK_SIZE, "GL_UNPACK_COMPRESSED_BLOCK_SIZE");
#endif
#if defined(GL_PACK_COMPRESSED_BLOCK_WIDTH)
defconsti(env, "GL-PACK-COMPRESSED-BLOCK-WIDTH", (GLenum) GL_PACK_COMPRESSED_BLOCK_WIDTH, "GL_PACK_COMPRESSED_BLOCK_WIDTH");
#endif
#if defined(GL_PACK_COMPRESSED_BLOCK_HEIGHT)
defconsti(env, "GL-PACK-COMPRESSED-BLOCK-HEIGHT", (GLenum) GL_PACK_COMPRESSED_BLOCK_HEIGHT, "GL_PACK_COMPRESSED_BLOCK_HEIGHT");
#endif
#if defined(GL_PACK_COMPRESSED_BLOCK_DEPTH)
defconsti(env, "GL-PACK-COMPRESSED-BLOCK-DEPTH", (GLenum) GL_PACK_COMPRESSED_BLOCK_DEPTH, "GL_PACK_COMPRESSED_BLOCK_DEPTH");
#endif
#if defined(GL_PACK_COMPRESSED_BLOCK_SIZE)
defconsti(env, "GL-PACK-COMPRESSED-BLOCK-SIZE", (GLenum) GL_PACK_COMPRESSED_BLOCK_SIZE, "GL_PACK_COMPRESSED_BLOCK_SIZE");
#endif
#if defined(GL_COMPUTE_SHADER)
defconsti(env, "GL-COMPUTE-SHADER", (GLenum) GL_COMPUTE_SHADER, "GL_COMPUTE_SHADER");
#endif
#if defined(GL_MAX_COMPUTE_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-COMPUTE-UNIFORM-BLOCKS", (GLenum) GL_MAX_COMPUTE_UNIFORM_BLOCKS, "GL_MAX_COMPUTE_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-COMPUTE-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS, "GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_COMPUTE_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-COMPUTE-IMAGE-UNIFORMS", (GLenum) GL_MAX_COMPUTE_IMAGE_UNIFORMS, "GL_MAX_COMPUTE_IMAGE_UNIFORMS");
#endif
#if defined(GL_MAX_COMPUTE_SHARED_MEMORY_SIZE)
defconsti(env, "GL-MAX-COMPUTE-SHARED-MEMORY-SIZE", (GLenum) GL_MAX_COMPUTE_SHARED_MEMORY_SIZE, "GL_MAX_COMPUTE_SHARED_MEMORY_SIZE");
#endif
#if defined(GL_MAX_COMPUTE_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMPUTE-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMPUTE_UNIFORM_COMPONENTS, "GL_MAX_COMPUTE_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-COMPUTE-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS, "GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_COMPUTE_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-COMPUTE-ATOMIC-COUNTERS", (GLenum) GL_MAX_COMPUTE_ATOMIC_COUNTERS, "GL_MAX_COMPUTE_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-COMPUTE-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS)
defconsti(env, "GL-MAX-COMPUTE-WORK-GROUP-INVOCATIONS", (GLenum) GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS, "GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS");
#endif
#if defined(GL_MAX_COMPUTE_WORK_GROUP_COUNT)
defconsti(env, "GL-MAX-COMPUTE-WORK-GROUP-COUNT", (GLenum) GL_MAX_COMPUTE_WORK_GROUP_COUNT, "GL_MAX_COMPUTE_WORK_GROUP_COUNT");
#endif
#if defined(GL_MAX_COMPUTE_WORK_GROUP_SIZE)
defconsti(env, "GL-MAX-COMPUTE-WORK-GROUP-SIZE", (GLenum) GL_MAX_COMPUTE_WORK_GROUP_SIZE, "GL_MAX_COMPUTE_WORK_GROUP_SIZE");
#endif
#if defined(GL_COMPUTE_WORK_GROUP_SIZE)
defconsti(env, "GL-COMPUTE-WORK-GROUP-SIZE", (GLenum) GL_COMPUTE_WORK_GROUP_SIZE, "GL_COMPUTE_WORK_GROUP_SIZE");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-COMPUTE-SHADER", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER, "GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-COMPUTE-SHADER", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER");
#endif
#if defined(GL_DISPATCH_INDIRECT_BUFFER)
defconsti(env, "GL-DISPATCH-INDIRECT-BUFFER", (GLenum) GL_DISPATCH_INDIRECT_BUFFER, "GL_DISPATCH_INDIRECT_BUFFER");
#endif
#if defined(GL_DISPATCH_INDIRECT_BUFFER_BINDING)
defconsti(env, "GL-DISPATCH-INDIRECT-BUFFER-BINDING", (GLenum) GL_DISPATCH_INDIRECT_BUFFER_BINDING, "GL_DISPATCH_INDIRECT_BUFFER_BINDING");
#endif
#if defined(GL_COMPUTE_SHADER_BIT)
defconsti(env, "GL-COMPUTE-SHADER-BIT", (GLenum) GL_COMPUTE_SHADER_BIT, "GL_COMPUTE_SHADER_BIT");
#endif
#if defined(GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB)
defconsti(env, "GL-MAX-COMPUTE-VARIABLE-GROUP-INVOCATIONS-ARB", (GLenum) GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB, "GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB");
#endif
#if defined(GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB)
defconsti(env, "GL-MAX-COMPUTE-FIXED-GROUP-INVOCATIONS-ARB", (GLenum) GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB, "GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB");
#endif
#if defined(GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB)
defconsti(env, "GL-MAX-COMPUTE-VARIABLE-GROUP-SIZE-ARB", (GLenum) GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB, "GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB");
#endif
#if defined(GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB)
defconsti(env, "GL-MAX-COMPUTE-FIXED-GROUP-SIZE-ARB", (GLenum) GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB, "GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB");
#endif
#if defined(GL_QUERY_WAIT_INVERTED)
defconsti(env, "GL-QUERY-WAIT-INVERTED", (GLenum) GL_QUERY_WAIT_INVERTED, "GL_QUERY_WAIT_INVERTED");
#endif
#if defined(GL_QUERY_NO_WAIT_INVERTED)
defconsti(env, "GL-QUERY-NO-WAIT-INVERTED", (GLenum) GL_QUERY_NO_WAIT_INVERTED, "GL_QUERY_NO_WAIT_INVERTED");
#endif
#if defined(GL_QUERY_BY_REGION_WAIT_INVERTED)
defconsti(env, "GL-QUERY-BY-REGION-WAIT-INVERTED", (GLenum) GL_QUERY_BY_REGION_WAIT_INVERTED, "GL_QUERY_BY_REGION_WAIT_INVERTED");
#endif
#if defined(GL_QUERY_BY_REGION_NO_WAIT_INVERTED)
defconsti(env, "GL-QUERY-BY-REGION-NO-WAIT-INVERTED", (GLenum) GL_QUERY_BY_REGION_NO_WAIT_INVERTED, "GL_QUERY_BY_REGION_NO_WAIT_INVERTED");
#endif
#if defined(GL_COPY_READ_BUFFER)
defconsti(env, "GL-COPY-READ-BUFFER", (GLenum) GL_COPY_READ_BUFFER, "GL_COPY_READ_BUFFER");
#endif
#if defined(GL_COPY_WRITE_BUFFER)
defconsti(env, "GL-COPY-WRITE-BUFFER", (GLenum) GL_COPY_WRITE_BUFFER, "GL_COPY_WRITE_BUFFER");
#endif
#if defined(GL_MAX_CULL_DISTANCES)
defconsti(env, "GL-MAX-CULL-DISTANCES", (GLenum) GL_MAX_CULL_DISTANCES, "GL_MAX_CULL_DISTANCES");
#endif
#if defined(GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES)
defconsti(env, "GL-MAX-COMBINED-CLIP-AND-CULL-DISTANCES", (GLenum) GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES, "GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES");
#endif
#if defined(GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB)
defconsti(env, "GL-DEBUG-OUTPUT-SYNCHRONOUS-ARB", (GLenum) GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB, "GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB");
#endif
#if defined(GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB)
defconsti(env, "GL-DEBUG-NEXT-LOGGED-MESSAGE-LENGTH-ARB", (GLenum) GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB, "GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB");
#endif
#if defined(GL_DEBUG_CALLBACK_FUNCTION_ARB)
defconsti(env, "GL-DEBUG-CALLBACK-FUNCTION-ARB", (GLenum) GL_DEBUG_CALLBACK_FUNCTION_ARB, "GL_DEBUG_CALLBACK_FUNCTION_ARB");
#endif
#if defined(GL_DEBUG_CALLBACK_USER_PARAM_ARB)
defconsti(env, "GL-DEBUG-CALLBACK-USER-PARAM-ARB", (GLenum) GL_DEBUG_CALLBACK_USER_PARAM_ARB, "GL_DEBUG_CALLBACK_USER_PARAM_ARB");
#endif
#if defined(GL_DEBUG_SOURCE_API_ARB)
defconsti(env, "GL-DEBUG-SOURCE-API-ARB", (GLenum) GL_DEBUG_SOURCE_API_ARB, "GL_DEBUG_SOURCE_API_ARB");
#endif
#if defined(GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB)
defconsti(env, "GL-DEBUG-SOURCE-WINDOW-SYSTEM-ARB", (GLenum) GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB, "GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB");
#endif
#if defined(GL_DEBUG_SOURCE_SHADER_COMPILER_ARB)
defconsti(env, "GL-DEBUG-SOURCE-SHADER-COMPILER-ARB", (GLenum) GL_DEBUG_SOURCE_SHADER_COMPILER_ARB, "GL_DEBUG_SOURCE_SHADER_COMPILER_ARB");
#endif
#if defined(GL_DEBUG_SOURCE_THIRD_PARTY_ARB)
defconsti(env, "GL-DEBUG-SOURCE-THIRD-PARTY-ARB", (GLenum) GL_DEBUG_SOURCE_THIRD_PARTY_ARB, "GL_DEBUG_SOURCE_THIRD_PARTY_ARB");
#endif
#if defined(GL_DEBUG_SOURCE_APPLICATION_ARB)
defconsti(env, "GL-DEBUG-SOURCE-APPLICATION-ARB", (GLenum) GL_DEBUG_SOURCE_APPLICATION_ARB, "GL_DEBUG_SOURCE_APPLICATION_ARB");
#endif
#if defined(GL_DEBUG_SOURCE_OTHER_ARB)
defconsti(env, "GL-DEBUG-SOURCE-OTHER-ARB", (GLenum) GL_DEBUG_SOURCE_OTHER_ARB, "GL_DEBUG_SOURCE_OTHER_ARB");
#endif
#if defined(GL_DEBUG_TYPE_ERROR_ARB)
defconsti(env, "GL-DEBUG-TYPE-ERROR-ARB", (GLenum) GL_DEBUG_TYPE_ERROR_ARB, "GL_DEBUG_TYPE_ERROR_ARB");
#endif
#if defined(GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB)
defconsti(env, "GL-DEBUG-TYPE-DEPRECATED-BEHAVIOR-ARB", (GLenum) GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB, "GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB");
#endif
#if defined(GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB)
defconsti(env, "GL-DEBUG-TYPE-UNDEFINED-BEHAVIOR-ARB", (GLenum) GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB, "GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB");
#endif
#if defined(GL_DEBUG_TYPE_PORTABILITY_ARB)
defconsti(env, "GL-DEBUG-TYPE-PORTABILITY-ARB", (GLenum) GL_DEBUG_TYPE_PORTABILITY_ARB, "GL_DEBUG_TYPE_PORTABILITY_ARB");
#endif
#if defined(GL_DEBUG_TYPE_PERFORMANCE_ARB)
defconsti(env, "GL-DEBUG-TYPE-PERFORMANCE-ARB", (GLenum) GL_DEBUG_TYPE_PERFORMANCE_ARB, "GL_DEBUG_TYPE_PERFORMANCE_ARB");
#endif
#if defined(GL_DEBUG_TYPE_OTHER_ARB)
defconsti(env, "GL-DEBUG-TYPE-OTHER-ARB", (GLenum) GL_DEBUG_TYPE_OTHER_ARB, "GL_DEBUG_TYPE_OTHER_ARB");
#endif
#if defined(GL_MAX_DEBUG_MESSAGE_LENGTH_ARB)
defconsti(env, "GL-MAX-DEBUG-MESSAGE-LENGTH-ARB", (GLenum) GL_MAX_DEBUG_MESSAGE_LENGTH_ARB, "GL_MAX_DEBUG_MESSAGE_LENGTH_ARB");
#endif
#if defined(GL_MAX_DEBUG_LOGGED_MESSAGES_ARB)
defconsti(env, "GL-MAX-DEBUG-LOGGED-MESSAGES-ARB", (GLenum) GL_MAX_DEBUG_LOGGED_MESSAGES_ARB, "GL_MAX_DEBUG_LOGGED_MESSAGES_ARB");
#endif
#if defined(GL_DEBUG_LOGGED_MESSAGES_ARB)
defconsti(env, "GL-DEBUG-LOGGED-MESSAGES-ARB", (GLenum) GL_DEBUG_LOGGED_MESSAGES_ARB, "GL_DEBUG_LOGGED_MESSAGES_ARB");
#endif
#if defined(GL_DEBUG_SEVERITY_HIGH_ARB)
defconsti(env, "GL-DEBUG-SEVERITY-HIGH-ARB", (GLenum) GL_DEBUG_SEVERITY_HIGH_ARB, "GL_DEBUG_SEVERITY_HIGH_ARB");
#endif
#if defined(GL_DEBUG_SEVERITY_MEDIUM_ARB)
defconsti(env, "GL-DEBUG-SEVERITY-MEDIUM-ARB", (GLenum) GL_DEBUG_SEVERITY_MEDIUM_ARB, "GL_DEBUG_SEVERITY_MEDIUM_ARB");
#endif
#if defined(GL_DEBUG_SEVERITY_LOW_ARB)
defconsti(env, "GL-DEBUG-SEVERITY-LOW-ARB", (GLenum) GL_DEBUG_SEVERITY_LOW_ARB, "GL_DEBUG_SEVERITY_LOW_ARB");
#endif
#if defined(GL_DEPTH_COMPONENT32F)
defconsti(env, "GL-DEPTH-COMPONENT32F", (GLenum) GL_DEPTH_COMPONENT32F, "GL_DEPTH_COMPONENT32F");
#endif
#if defined(GL_DEPTH32F_STENCIL8)
defconsti(env, "GL-DEPTH32F-STENCIL8", (GLenum) GL_DEPTH32F_STENCIL8, "GL_DEPTH32F_STENCIL8");
#endif
#if defined(GL_FLOAT_32_UNSIGNED_INT_24_8_REV)
defconsti(env, "GL-FLOAT-32-UNSIGNED-INT-24-8-REV", (GLenum) GL_FLOAT_32_UNSIGNED_INT_24_8_REV, "GL_FLOAT_32_UNSIGNED_INT_24_8_REV");
#endif
#if defined(GL_DEPTH_CLAMP)
defconsti(env, "GL-DEPTH-CLAMP", (GLenum) GL_DEPTH_CLAMP, "GL_DEPTH_CLAMP");
#endif
#if defined(GL_DEPTH_COMPONENT16_ARB)
defconsti(env, "GL-DEPTH-COMPONENT16-ARB", (GLenum) GL_DEPTH_COMPONENT16_ARB, "GL_DEPTH_COMPONENT16_ARB");
#endif
#if defined(GL_DEPTH_COMPONENT24_ARB)
defconsti(env, "GL-DEPTH-COMPONENT24-ARB", (GLenum) GL_DEPTH_COMPONENT24_ARB, "GL_DEPTH_COMPONENT24_ARB");
#endif
#if defined(GL_DEPTH_COMPONENT32_ARB)
defconsti(env, "GL-DEPTH-COMPONENT32-ARB", (GLenum) GL_DEPTH_COMPONENT32_ARB, "GL_DEPTH_COMPONENT32_ARB");
#endif
#if defined(GL_TEXTURE_DEPTH_SIZE_ARB)
defconsti(env, "GL-TEXTURE-DEPTH-SIZE-ARB", (GLenum) GL_TEXTURE_DEPTH_SIZE_ARB, "GL_TEXTURE_DEPTH_SIZE_ARB");
#endif
#if defined(GL_DEPTH_TEXTURE_MODE_ARB)
defconsti(env, "GL-DEPTH-TEXTURE-MODE-ARB", (GLenum) GL_DEPTH_TEXTURE_MODE_ARB, "GL_DEPTH_TEXTURE_MODE_ARB");
#endif
#if defined(GL_TEXTURE_TARGET)
defconsti(env, "GL-TEXTURE-TARGET", (GLenum) GL_TEXTURE_TARGET, "GL_TEXTURE_TARGET");
#endif
#if defined(GL_QUERY_TARGET)
defconsti(env, "GL-QUERY-TARGET", (GLenum) GL_QUERY_TARGET, "GL_QUERY_TARGET");
#endif
#if defined(GL_TEXTURE_BINDING_1D)
defconsti(env, "GL-TEXTURE-BINDING-1D", (GLenum) GL_TEXTURE_BINDING_1D, "GL_TEXTURE_BINDING_1D");
#endif
#if defined(GL_TEXTURE_BINDING_1D_ARRAY)
defconsti(env, "GL-TEXTURE-BINDING-1D-ARRAY", (GLenum) GL_TEXTURE_BINDING_1D_ARRAY, "GL_TEXTURE_BINDING_1D_ARRAY");
#endif
#if defined(GL_TEXTURE_BINDING_2D)
defconsti(env, "GL-TEXTURE-BINDING-2D", (GLenum) GL_TEXTURE_BINDING_2D, "GL_TEXTURE_BINDING_2D");
#endif
#if defined(GL_TEXTURE_BINDING_2D_ARRAY)
defconsti(env, "GL-TEXTURE-BINDING-2D-ARRAY", (GLenum) GL_TEXTURE_BINDING_2D_ARRAY, "GL_TEXTURE_BINDING_2D_ARRAY");
#endif
#if defined(GL_TEXTURE_BINDING_2D_MULTISAMPLE)
defconsti(env, "GL-TEXTURE-BINDING-2D-MULTISAMPLE", (GLenum) GL_TEXTURE_BINDING_2D_MULTISAMPLE, "GL_TEXTURE_BINDING_2D_MULTISAMPLE");
#endif
#if defined(GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-TEXTURE-BINDING-2D-MULTISAMPLE-ARRAY", (GLenum) GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY, "GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_TEXTURE_BINDING_3D)
defconsti(env, "GL-TEXTURE-BINDING-3D", (GLenum) GL_TEXTURE_BINDING_3D, "GL_TEXTURE_BINDING_3D");
#endif
#if defined(GL_TEXTURE_BINDING_BUFFER)
defconsti(env, "GL-TEXTURE-BINDING-BUFFER", (GLenum) GL_TEXTURE_BINDING_BUFFER, "GL_TEXTURE_BINDING_BUFFER");
#endif
#if defined(GL_TEXTURE_BINDING_CUBE_MAP)
defconsti(env, "GL-TEXTURE-BINDING-CUBE-MAP", (GLenum) GL_TEXTURE_BINDING_CUBE_MAP, "GL_TEXTURE_BINDING_CUBE_MAP");
#endif
#if defined(GL_TEXTURE_BINDING_CUBE_MAP_ARRAY)
defconsti(env, "GL-TEXTURE-BINDING-CUBE-MAP-ARRAY", (GLenum) GL_TEXTURE_BINDING_CUBE_MAP_ARRAY, "GL_TEXTURE_BINDING_CUBE_MAP_ARRAY");
#endif
#if defined(GL_TEXTURE_BINDING_RECTANGLE)
defconsti(env, "GL-TEXTURE-BINDING-RECTANGLE", (GLenum) GL_TEXTURE_BINDING_RECTANGLE, "GL_TEXTURE_BINDING_RECTANGLE");
#endif
#if defined(GL_MAX_DRAW_BUFFERS_ARB)
defconsti(env, "GL-MAX-DRAW-BUFFERS-ARB", (GLenum) GL_MAX_DRAW_BUFFERS_ARB, "GL_MAX_DRAW_BUFFERS_ARB");
#endif
#if defined(GL_DRAW_BUFFER0_ARB)
defconsti(env, "GL-DRAW-BUFFER0-ARB", (GLenum) GL_DRAW_BUFFER0_ARB, "GL_DRAW_BUFFER0_ARB");
#endif
#if defined(GL_DRAW_BUFFER1_ARB)
defconsti(env, "GL-DRAW-BUFFER1-ARB", (GLenum) GL_DRAW_BUFFER1_ARB, "GL_DRAW_BUFFER1_ARB");
#endif
#if defined(GL_DRAW_BUFFER2_ARB)
defconsti(env, "GL-DRAW-BUFFER2-ARB", (GLenum) GL_DRAW_BUFFER2_ARB, "GL_DRAW_BUFFER2_ARB");
#endif
#if defined(GL_DRAW_BUFFER3_ARB)
defconsti(env, "GL-DRAW-BUFFER3-ARB", (GLenum) GL_DRAW_BUFFER3_ARB, "GL_DRAW_BUFFER3_ARB");
#endif
#if defined(GL_DRAW_BUFFER4_ARB)
defconsti(env, "GL-DRAW-BUFFER4-ARB", (GLenum) GL_DRAW_BUFFER4_ARB, "GL_DRAW_BUFFER4_ARB");
#endif
#if defined(GL_DRAW_BUFFER5_ARB)
defconsti(env, "GL-DRAW-BUFFER5-ARB", (GLenum) GL_DRAW_BUFFER5_ARB, "GL_DRAW_BUFFER5_ARB");
#endif
#if defined(GL_DRAW_BUFFER6_ARB)
defconsti(env, "GL-DRAW-BUFFER6-ARB", (GLenum) GL_DRAW_BUFFER6_ARB, "GL_DRAW_BUFFER6_ARB");
#endif
#if defined(GL_DRAW_BUFFER7_ARB)
defconsti(env, "GL-DRAW-BUFFER7-ARB", (GLenum) GL_DRAW_BUFFER7_ARB, "GL_DRAW_BUFFER7_ARB");
#endif
#if defined(GL_DRAW_BUFFER8_ARB)
defconsti(env, "GL-DRAW-BUFFER8-ARB", (GLenum) GL_DRAW_BUFFER8_ARB, "GL_DRAW_BUFFER8_ARB");
#endif
#if defined(GL_DRAW_BUFFER9_ARB)
defconsti(env, "GL-DRAW-BUFFER9-ARB", (GLenum) GL_DRAW_BUFFER9_ARB, "GL_DRAW_BUFFER9_ARB");
#endif
#if defined(GL_DRAW_BUFFER10_ARB)
defconsti(env, "GL-DRAW-BUFFER10-ARB", (GLenum) GL_DRAW_BUFFER10_ARB, "GL_DRAW_BUFFER10_ARB");
#endif
#if defined(GL_DRAW_BUFFER11_ARB)
defconsti(env, "GL-DRAW-BUFFER11-ARB", (GLenum) GL_DRAW_BUFFER11_ARB, "GL_DRAW_BUFFER11_ARB");
#endif
#if defined(GL_DRAW_BUFFER12_ARB)
defconsti(env, "GL-DRAW-BUFFER12-ARB", (GLenum) GL_DRAW_BUFFER12_ARB, "GL_DRAW_BUFFER12_ARB");
#endif
#if defined(GL_DRAW_BUFFER13_ARB)
defconsti(env, "GL-DRAW-BUFFER13-ARB", (GLenum) GL_DRAW_BUFFER13_ARB, "GL_DRAW_BUFFER13_ARB");
#endif
#if defined(GL_DRAW_BUFFER14_ARB)
defconsti(env, "GL-DRAW-BUFFER14-ARB", (GLenum) GL_DRAW_BUFFER14_ARB, "GL_DRAW_BUFFER14_ARB");
#endif
#if defined(GL_DRAW_BUFFER15_ARB)
defconsti(env, "GL-DRAW-BUFFER15-ARB", (GLenum) GL_DRAW_BUFFER15_ARB, "GL_DRAW_BUFFER15_ARB");
#endif
#if defined(GL_DRAW_INDIRECT_BUFFER)
defconsti(env, "GL-DRAW-INDIRECT-BUFFER", (GLenum) GL_DRAW_INDIRECT_BUFFER, "GL_DRAW_INDIRECT_BUFFER");
#endif
#if defined(GL_DRAW_INDIRECT_BUFFER_BINDING)
defconsti(env, "GL-DRAW-INDIRECT-BUFFER-BINDING", (GLenum) GL_DRAW_INDIRECT_BUFFER_BINDING, "GL_DRAW_INDIRECT_BUFFER_BINDING");
#endif
#if defined(GL_LOCATION_COMPONENT)
defconsti(env, "GL-LOCATION-COMPONENT", (GLenum) GL_LOCATION_COMPONENT, "GL_LOCATION_COMPONENT");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER, "GL_TRANSFORM_FEEDBACK_BUFFER");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_INDEX)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-INDEX", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_INDEX, "GL_TRANSFORM_FEEDBACK_BUFFER_INDEX");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-STRIDE", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE, "GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE");
#endif
#if defined(GL_MAX_UNIFORM_LOCATIONS)
defconsti(env, "GL-MAX-UNIFORM-LOCATIONS", (GLenum) GL_MAX_UNIFORM_LOCATIONS, "GL_MAX_UNIFORM_LOCATIONS");
#endif
#if defined(GL_FRAGMENT_PROGRAM_ARB)
defconsti(env, "GL-FRAGMENT-PROGRAM-ARB", (GLenum) GL_FRAGMENT_PROGRAM_ARB, "GL_FRAGMENT_PROGRAM_ARB");
#endif
#if defined(GL_PROGRAM_FORMAT_ASCII_ARB)
defconsti(env, "GL-PROGRAM-FORMAT-ASCII-ARB", (GLenum) GL_PROGRAM_FORMAT_ASCII_ARB, "GL_PROGRAM_FORMAT_ASCII_ARB");
#endif
#if defined(GL_PROGRAM_LENGTH_ARB)
defconsti(env, "GL-PROGRAM-LENGTH-ARB", (GLenum) GL_PROGRAM_LENGTH_ARB, "GL_PROGRAM_LENGTH_ARB");
#endif
#if defined(GL_PROGRAM_FORMAT_ARB)
defconsti(env, "GL-PROGRAM-FORMAT-ARB", (GLenum) GL_PROGRAM_FORMAT_ARB, "GL_PROGRAM_FORMAT_ARB");
#endif
#if defined(GL_PROGRAM_BINDING_ARB)
defconsti(env, "GL-PROGRAM-BINDING-ARB", (GLenum) GL_PROGRAM_BINDING_ARB, "GL_PROGRAM_BINDING_ARB");
#endif
#if defined(GL_PROGRAM_INSTRUCTIONS_ARB)
defconsti(env, "GL-PROGRAM-INSTRUCTIONS-ARB", (GLenum) GL_PROGRAM_INSTRUCTIONS_ARB, "GL_PROGRAM_INSTRUCTIONS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_INSTRUCTIONS_ARB)
defconsti(env, "GL-MAX-PROGRAM-INSTRUCTIONS-ARB", (GLenum) GL_MAX_PROGRAM_INSTRUCTIONS_ARB, "GL_MAX_PROGRAM_INSTRUCTIONS_ARB");
#endif
#if defined(GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB)
defconsti(env, "GL-PROGRAM-NATIVE-INSTRUCTIONS-ARB", (GLenum) GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB, "GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB)
defconsti(env, "GL-MAX-PROGRAM-NATIVE-INSTRUCTIONS-ARB", (GLenum) GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB, "GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB");
#endif
#if defined(GL_PROGRAM_TEMPORARIES_ARB)
defconsti(env, "GL-PROGRAM-TEMPORARIES-ARB", (GLenum) GL_PROGRAM_TEMPORARIES_ARB, "GL_PROGRAM_TEMPORARIES_ARB");
#endif
#if defined(GL_MAX_PROGRAM_TEMPORARIES_ARB)
defconsti(env, "GL-MAX-PROGRAM-TEMPORARIES-ARB", (GLenum) GL_MAX_PROGRAM_TEMPORARIES_ARB, "GL_MAX_PROGRAM_TEMPORARIES_ARB");
#endif
#if defined(GL_PROGRAM_NATIVE_TEMPORARIES_ARB)
defconsti(env, "GL-PROGRAM-NATIVE-TEMPORARIES-ARB", (GLenum) GL_PROGRAM_NATIVE_TEMPORARIES_ARB, "GL_PROGRAM_NATIVE_TEMPORARIES_ARB");
#endif
#if defined(GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB)
defconsti(env, "GL-MAX-PROGRAM-NATIVE-TEMPORARIES-ARB", (GLenum) GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB, "GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB");
#endif
#if defined(GL_PROGRAM_PARAMETERS_ARB)
defconsti(env, "GL-PROGRAM-PARAMETERS-ARB", (GLenum) GL_PROGRAM_PARAMETERS_ARB, "GL_PROGRAM_PARAMETERS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_PARAMETERS_ARB)
defconsti(env, "GL-MAX-PROGRAM-PARAMETERS-ARB", (GLenum) GL_MAX_PROGRAM_PARAMETERS_ARB, "GL_MAX_PROGRAM_PARAMETERS_ARB");
#endif
#if defined(GL_PROGRAM_NATIVE_PARAMETERS_ARB)
defconsti(env, "GL-PROGRAM-NATIVE-PARAMETERS-ARB", (GLenum) GL_PROGRAM_NATIVE_PARAMETERS_ARB, "GL_PROGRAM_NATIVE_PARAMETERS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB)
defconsti(env, "GL-MAX-PROGRAM-NATIVE-PARAMETERS-ARB", (GLenum) GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB, "GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB");
#endif
#if defined(GL_PROGRAM_ATTRIBS_ARB)
defconsti(env, "GL-PROGRAM-ATTRIBS-ARB", (GLenum) GL_PROGRAM_ATTRIBS_ARB, "GL_PROGRAM_ATTRIBS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_ATTRIBS_ARB)
defconsti(env, "GL-MAX-PROGRAM-ATTRIBS-ARB", (GLenum) GL_MAX_PROGRAM_ATTRIBS_ARB, "GL_MAX_PROGRAM_ATTRIBS_ARB");
#endif
#if defined(GL_PROGRAM_NATIVE_ATTRIBS_ARB)
defconsti(env, "GL-PROGRAM-NATIVE-ATTRIBS-ARB", (GLenum) GL_PROGRAM_NATIVE_ATTRIBS_ARB, "GL_PROGRAM_NATIVE_ATTRIBS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB)
defconsti(env, "GL-MAX-PROGRAM-NATIVE-ATTRIBS-ARB", (GLenum) GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB, "GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB)
defconsti(env, "GL-MAX-PROGRAM-LOCAL-PARAMETERS-ARB", (GLenum) GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB, "GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_ENV_PARAMETERS_ARB)
defconsti(env, "GL-MAX-PROGRAM-ENV-PARAMETERS-ARB", (GLenum) GL_MAX_PROGRAM_ENV_PARAMETERS_ARB, "GL_MAX_PROGRAM_ENV_PARAMETERS_ARB");
#endif
#if defined(GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB)
defconsti(env, "GL-PROGRAM-UNDER-NATIVE-LIMITS-ARB", (GLenum) GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB, "GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB");
#endif
#if defined(GL_PROGRAM_ALU_INSTRUCTIONS_ARB)
defconsti(env, "GL-PROGRAM-ALU-INSTRUCTIONS-ARB", (GLenum) GL_PROGRAM_ALU_INSTRUCTIONS_ARB, "GL_PROGRAM_ALU_INSTRUCTIONS_ARB");
#endif
#if defined(GL_PROGRAM_TEX_INSTRUCTIONS_ARB)
defconsti(env, "GL-PROGRAM-TEX-INSTRUCTIONS-ARB", (GLenum) GL_PROGRAM_TEX_INSTRUCTIONS_ARB, "GL_PROGRAM_TEX_INSTRUCTIONS_ARB");
#endif
#if defined(GL_PROGRAM_TEX_INDIRECTIONS_ARB)
defconsti(env, "GL-PROGRAM-TEX-INDIRECTIONS-ARB", (GLenum) GL_PROGRAM_TEX_INDIRECTIONS_ARB, "GL_PROGRAM_TEX_INDIRECTIONS_ARB");
#endif
#if defined(GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB)
defconsti(env, "GL-PROGRAM-NATIVE-ALU-INSTRUCTIONS-ARB", (GLenum) GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB, "GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB");
#endif
#if defined(GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB)
defconsti(env, "GL-PROGRAM-NATIVE-TEX-INSTRUCTIONS-ARB", (GLenum) GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB, "GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB");
#endif
#if defined(GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB)
defconsti(env, "GL-PROGRAM-NATIVE-TEX-INDIRECTIONS-ARB", (GLenum) GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB, "GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB)
defconsti(env, "GL-MAX-PROGRAM-ALU-INSTRUCTIONS-ARB", (GLenum) GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB, "GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB)
defconsti(env, "GL-MAX-PROGRAM-TEX-INSTRUCTIONS-ARB", (GLenum) GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB, "GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB)
defconsti(env, "GL-MAX-PROGRAM-TEX-INDIRECTIONS-ARB", (GLenum) GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB, "GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB)
defconsti(env, "GL-MAX-PROGRAM-NATIVE-ALU-INSTRUCTIONS-ARB", (GLenum) GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB, "GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB)
defconsti(env, "GL-MAX-PROGRAM-NATIVE-TEX-INSTRUCTIONS-ARB", (GLenum) GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB, "GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB)
defconsti(env, "GL-MAX-PROGRAM-NATIVE-TEX-INDIRECTIONS-ARB", (GLenum) GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB, "GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB");
#endif
#if defined(GL_PROGRAM_STRING_ARB)
defconsti(env, "GL-PROGRAM-STRING-ARB", (GLenum) GL_PROGRAM_STRING_ARB, "GL_PROGRAM_STRING_ARB");
#endif
#if defined(GL_PROGRAM_ERROR_POSITION_ARB)
defconsti(env, "GL-PROGRAM-ERROR-POSITION-ARB", (GLenum) GL_PROGRAM_ERROR_POSITION_ARB, "GL_PROGRAM_ERROR_POSITION_ARB");
#endif
#if defined(GL_CURRENT_MATRIX_ARB)
defconsti(env, "GL-CURRENT-MATRIX-ARB", (GLenum) GL_CURRENT_MATRIX_ARB, "GL_CURRENT_MATRIX_ARB");
#endif
#if defined(GL_TRANSPOSE_CURRENT_MATRIX_ARB)
defconsti(env, "GL-TRANSPOSE-CURRENT-MATRIX-ARB", (GLenum) GL_TRANSPOSE_CURRENT_MATRIX_ARB, "GL_TRANSPOSE_CURRENT_MATRIX_ARB");
#endif
#if defined(GL_CURRENT_MATRIX_STACK_DEPTH_ARB)
defconsti(env, "GL-CURRENT-MATRIX-STACK-DEPTH-ARB", (GLenum) GL_CURRENT_MATRIX_STACK_DEPTH_ARB, "GL_CURRENT_MATRIX_STACK_DEPTH_ARB");
#endif
#if defined(GL_MAX_PROGRAM_MATRICES_ARB)
defconsti(env, "GL-MAX-PROGRAM-MATRICES-ARB", (GLenum) GL_MAX_PROGRAM_MATRICES_ARB, "GL_MAX_PROGRAM_MATRICES_ARB");
#endif
#if defined(GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB)
defconsti(env, "GL-MAX-PROGRAM-MATRIX-STACK-DEPTH-ARB", (GLenum) GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB, "GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB");
#endif
#if defined(GL_MAX_TEXTURE_COORDS_ARB)
defconsti(env, "GL-MAX-TEXTURE-COORDS-ARB", (GLenum) GL_MAX_TEXTURE_COORDS_ARB, "GL_MAX_TEXTURE_COORDS_ARB");
#endif
#if defined(GL_MAX_TEXTURE_IMAGE_UNITS_ARB)
defconsti(env, "GL-MAX-TEXTURE-IMAGE-UNITS-ARB", (GLenum) GL_MAX_TEXTURE_IMAGE_UNITS_ARB, "GL_MAX_TEXTURE_IMAGE_UNITS_ARB");
#endif
#if defined(GL_PROGRAM_ERROR_STRING_ARB)
defconsti(env, "GL-PROGRAM-ERROR-STRING-ARB", (GLenum) GL_PROGRAM_ERROR_STRING_ARB, "GL_PROGRAM_ERROR_STRING_ARB");
#endif
#if defined(GL_MATRIX0_ARB)
defconsti(env, "GL-MATRIX0-ARB", (GLenum) GL_MATRIX0_ARB, "GL_MATRIX0_ARB");
#endif
#if defined(GL_MATRIX1_ARB)
defconsti(env, "GL-MATRIX1-ARB", (GLenum) GL_MATRIX1_ARB, "GL_MATRIX1_ARB");
#endif
#if defined(GL_MATRIX2_ARB)
defconsti(env, "GL-MATRIX2-ARB", (GLenum) GL_MATRIX2_ARB, "GL_MATRIX2_ARB");
#endif
#if defined(GL_MATRIX3_ARB)
defconsti(env, "GL-MATRIX3-ARB", (GLenum) GL_MATRIX3_ARB, "GL_MATRIX3_ARB");
#endif
#if defined(GL_MATRIX4_ARB)
defconsti(env, "GL-MATRIX4-ARB", (GLenum) GL_MATRIX4_ARB, "GL_MATRIX4_ARB");
#endif
#if defined(GL_MATRIX5_ARB)
defconsti(env, "GL-MATRIX5-ARB", (GLenum) GL_MATRIX5_ARB, "GL_MATRIX5_ARB");
#endif
#if defined(GL_MATRIX6_ARB)
defconsti(env, "GL-MATRIX6-ARB", (GLenum) GL_MATRIX6_ARB, "GL_MATRIX6_ARB");
#endif
#if defined(GL_MATRIX7_ARB)
defconsti(env, "GL-MATRIX7-ARB", (GLenum) GL_MATRIX7_ARB, "GL_MATRIX7_ARB");
#endif
#if defined(GL_MATRIX8_ARB)
defconsti(env, "GL-MATRIX8-ARB", (GLenum) GL_MATRIX8_ARB, "GL_MATRIX8_ARB");
#endif
#if defined(GL_MATRIX9_ARB)
defconsti(env, "GL-MATRIX9-ARB", (GLenum) GL_MATRIX9_ARB, "GL_MATRIX9_ARB");
#endif
#if defined(GL_MATRIX10_ARB)
defconsti(env, "GL-MATRIX10-ARB", (GLenum) GL_MATRIX10_ARB, "GL_MATRIX10_ARB");
#endif
#if defined(GL_MATRIX11_ARB)
defconsti(env, "GL-MATRIX11-ARB", (GLenum) GL_MATRIX11_ARB, "GL_MATRIX11_ARB");
#endif
#if defined(GL_MATRIX12_ARB)
defconsti(env, "GL-MATRIX12-ARB", (GLenum) GL_MATRIX12_ARB, "GL_MATRIX12_ARB");
#endif
#if defined(GL_MATRIX13_ARB)
defconsti(env, "GL-MATRIX13-ARB", (GLenum) GL_MATRIX13_ARB, "GL_MATRIX13_ARB");
#endif
#if defined(GL_MATRIX14_ARB)
defconsti(env, "GL-MATRIX14-ARB", (GLenum) GL_MATRIX14_ARB, "GL_MATRIX14_ARB");
#endif
#if defined(GL_MATRIX15_ARB)
defconsti(env, "GL-MATRIX15-ARB", (GLenum) GL_MATRIX15_ARB, "GL_MATRIX15_ARB");
#endif
#if defined(GL_MATRIX16_ARB)
defconsti(env, "GL-MATRIX16-ARB", (GLenum) GL_MATRIX16_ARB, "GL_MATRIX16_ARB");
#endif
#if defined(GL_MATRIX17_ARB)
defconsti(env, "GL-MATRIX17-ARB", (GLenum) GL_MATRIX17_ARB, "GL_MATRIX17_ARB");
#endif
#if defined(GL_MATRIX18_ARB)
defconsti(env, "GL-MATRIX18-ARB", (GLenum) GL_MATRIX18_ARB, "GL_MATRIX18_ARB");
#endif
#if defined(GL_MATRIX19_ARB)
defconsti(env, "GL-MATRIX19-ARB", (GLenum) GL_MATRIX19_ARB, "GL_MATRIX19_ARB");
#endif
#if defined(GL_MATRIX20_ARB)
defconsti(env, "GL-MATRIX20-ARB", (GLenum) GL_MATRIX20_ARB, "GL_MATRIX20_ARB");
#endif
#if defined(GL_MATRIX21_ARB)
defconsti(env, "GL-MATRIX21-ARB", (GLenum) GL_MATRIX21_ARB, "GL_MATRIX21_ARB");
#endif
#if defined(GL_MATRIX22_ARB)
defconsti(env, "GL-MATRIX22-ARB", (GLenum) GL_MATRIX22_ARB, "GL_MATRIX22_ARB");
#endif
#if defined(GL_MATRIX23_ARB)
defconsti(env, "GL-MATRIX23-ARB", (GLenum) GL_MATRIX23_ARB, "GL_MATRIX23_ARB");
#endif
#if defined(GL_MATRIX24_ARB)
defconsti(env, "GL-MATRIX24-ARB", (GLenum) GL_MATRIX24_ARB, "GL_MATRIX24_ARB");
#endif
#if defined(GL_MATRIX25_ARB)
defconsti(env, "GL-MATRIX25-ARB", (GLenum) GL_MATRIX25_ARB, "GL_MATRIX25_ARB");
#endif
#if defined(GL_MATRIX26_ARB)
defconsti(env, "GL-MATRIX26-ARB", (GLenum) GL_MATRIX26_ARB, "GL_MATRIX26_ARB");
#endif
#if defined(GL_MATRIX27_ARB)
defconsti(env, "GL-MATRIX27-ARB", (GLenum) GL_MATRIX27_ARB, "GL_MATRIX27_ARB");
#endif
#if defined(GL_MATRIX28_ARB)
defconsti(env, "GL-MATRIX28-ARB", (GLenum) GL_MATRIX28_ARB, "GL_MATRIX28_ARB");
#endif
#if defined(GL_MATRIX29_ARB)
defconsti(env, "GL-MATRIX29-ARB", (GLenum) GL_MATRIX29_ARB, "GL_MATRIX29_ARB");
#endif
#if defined(GL_MATRIX30_ARB)
defconsti(env, "GL-MATRIX30-ARB", (GLenum) GL_MATRIX30_ARB, "GL_MATRIX30_ARB");
#endif
#if defined(GL_MATRIX31_ARB)
defconsti(env, "GL-MATRIX31-ARB", (GLenum) GL_MATRIX31_ARB, "GL_MATRIX31_ARB");
#endif
#if defined(GL_FRAGMENT_SHADER_ARB)
defconsti(env, "GL-FRAGMENT-SHADER-ARB", (GLenum) GL_FRAGMENT_SHADER_ARB, "GL_FRAGMENT_SHADER_ARB");
#endif
#if defined(GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB)
defconsti(env, "GL-MAX-FRAGMENT-UNIFORM-COMPONENTS-ARB", (GLenum) GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB, "GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB");
#endif
#if defined(GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB)
defconsti(env, "GL-FRAGMENT-SHADER-DERIVATIVE-HINT-ARB", (GLenum) GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB, "GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_WIDTH)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-WIDTH", (GLenum) GL_FRAMEBUFFER_DEFAULT_WIDTH, "GL_FRAMEBUFFER_DEFAULT_WIDTH");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_HEIGHT)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-HEIGHT", (GLenum) GL_FRAMEBUFFER_DEFAULT_HEIGHT, "GL_FRAMEBUFFER_DEFAULT_HEIGHT");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_LAYERS)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-LAYERS", (GLenum) GL_FRAMEBUFFER_DEFAULT_LAYERS, "GL_FRAMEBUFFER_DEFAULT_LAYERS");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_SAMPLES)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-SAMPLES", (GLenum) GL_FRAMEBUFFER_DEFAULT_SAMPLES, "GL_FRAMEBUFFER_DEFAULT_SAMPLES");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-FIXED-SAMPLE-LOCATIONS", (GLenum) GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS, "GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS");
#endif
#if defined(GL_MAX_FRAMEBUFFER_WIDTH)
defconsti(env, "GL-MAX-FRAMEBUFFER-WIDTH", (GLenum) GL_MAX_FRAMEBUFFER_WIDTH, "GL_MAX_FRAMEBUFFER_WIDTH");
#endif
#if defined(GL_MAX_FRAMEBUFFER_HEIGHT)
defconsti(env, "GL-MAX-FRAMEBUFFER-HEIGHT", (GLenum) GL_MAX_FRAMEBUFFER_HEIGHT, "GL_MAX_FRAMEBUFFER_HEIGHT");
#endif
#if defined(GL_MAX_FRAMEBUFFER_LAYERS)
defconsti(env, "GL-MAX-FRAMEBUFFER-LAYERS", (GLenum) GL_MAX_FRAMEBUFFER_LAYERS, "GL_MAX_FRAMEBUFFER_LAYERS");
#endif
#if defined(GL_MAX_FRAMEBUFFER_SAMPLES)
defconsti(env, "GL-MAX-FRAMEBUFFER-SAMPLES", (GLenum) GL_MAX_FRAMEBUFFER_SAMPLES, "GL_MAX_FRAMEBUFFER_SAMPLES");
#endif
#if defined(GL_INVALID_FRAMEBUFFER_OPERATION)
defconsti(env, "GL-INVALID-FRAMEBUFFER-OPERATION", (GLenum) GL_INVALID_FRAMEBUFFER_OPERATION, "GL_INVALID_FRAMEBUFFER_OPERATION");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-COLOR-ENCODING", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING, "GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-COMPONENT-TYPE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE, "GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-RED-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-GREEN-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-BLUE-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-ALPHA-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-DEPTH-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-STENCIL-SIZE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE, "GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT", (GLenum) GL_FRAMEBUFFER_DEFAULT, "GL_FRAMEBUFFER_DEFAULT");
#endif
#if defined(GL_FRAMEBUFFER_UNDEFINED)
defconsti(env, "GL-FRAMEBUFFER-UNDEFINED", (GLenum) GL_FRAMEBUFFER_UNDEFINED, "GL_FRAMEBUFFER_UNDEFINED");
#endif
#if defined(GL_DEPTH_STENCIL_ATTACHMENT)
defconsti(env, "GL-DEPTH-STENCIL-ATTACHMENT", (GLenum) GL_DEPTH_STENCIL_ATTACHMENT, "GL_DEPTH_STENCIL_ATTACHMENT");
#endif
#if defined(GL_MAX_RENDERBUFFER_SIZE)
defconsti(env, "GL-MAX-RENDERBUFFER-SIZE", (GLenum) GL_MAX_RENDERBUFFER_SIZE, "GL_MAX_RENDERBUFFER_SIZE");
#endif
#if defined(GL_DEPTH_STENCIL)
defconsti(env, "GL-DEPTH-STENCIL", (GLenum) GL_DEPTH_STENCIL, "GL_DEPTH_STENCIL");
#endif
#if defined(GL_UNSIGNED_INT_24_8)
defconsti(env, "GL-UNSIGNED-INT-24-8", (GLenum) GL_UNSIGNED_INT_24_8, "GL_UNSIGNED_INT_24_8");
#endif
#if defined(GL_DEPTH24_STENCIL8)
defconsti(env, "GL-DEPTH24-STENCIL8", (GLenum) GL_DEPTH24_STENCIL8, "GL_DEPTH24_STENCIL8");
#endif
#if defined(GL_TEXTURE_STENCIL_SIZE)
defconsti(env, "GL-TEXTURE-STENCIL-SIZE", (GLenum) GL_TEXTURE_STENCIL_SIZE, "GL_TEXTURE_STENCIL_SIZE");
#endif
#if defined(GL_UNSIGNED_NORMALIZED)
defconsti(env, "GL-UNSIGNED-NORMALIZED", (GLenum) GL_UNSIGNED_NORMALIZED, "GL_UNSIGNED_NORMALIZED");
#endif
#if defined(GL_FRAMEBUFFER_BINDING)
defconsti(env, "GL-FRAMEBUFFER-BINDING", (GLenum) GL_FRAMEBUFFER_BINDING, "GL_FRAMEBUFFER_BINDING");
#endif
#if defined(GL_DRAW_FRAMEBUFFER_BINDING)
defconsti(env, "GL-DRAW-FRAMEBUFFER-BINDING", (GLenum) GL_DRAW_FRAMEBUFFER_BINDING, "GL_DRAW_FRAMEBUFFER_BINDING");
#endif
#if defined(GL_RENDERBUFFER_BINDING)
defconsti(env, "GL-RENDERBUFFER-BINDING", (GLenum) GL_RENDERBUFFER_BINDING, "GL_RENDERBUFFER_BINDING");
#endif
#if defined(GL_READ_FRAMEBUFFER)
defconsti(env, "GL-READ-FRAMEBUFFER", (GLenum) GL_READ_FRAMEBUFFER, "GL_READ_FRAMEBUFFER");
#endif
#if defined(GL_DRAW_FRAMEBUFFER)
defconsti(env, "GL-DRAW-FRAMEBUFFER", (GLenum) GL_DRAW_FRAMEBUFFER, "GL_DRAW_FRAMEBUFFER");
#endif
#if defined(GL_READ_FRAMEBUFFER_BINDING)
defconsti(env, "GL-READ-FRAMEBUFFER-BINDING", (GLenum) GL_READ_FRAMEBUFFER_BINDING, "GL_READ_FRAMEBUFFER_BINDING");
#endif
#if defined(GL_RENDERBUFFER_SAMPLES)
defconsti(env, "GL-RENDERBUFFER-SAMPLES", (GLenum) GL_RENDERBUFFER_SAMPLES, "GL_RENDERBUFFER_SAMPLES");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-OBJECT-TYPE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-OBJECT-NAME", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-LEVEL", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-CUBE-MAP-FACE", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-LAYER", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER");
#endif
#if defined(GL_FRAMEBUFFER_COMPLETE)
defconsti(env, "GL-FRAMEBUFFER-COMPLETE", (GLenum) GL_FRAMEBUFFER_COMPLETE, "GL_FRAMEBUFFER_COMPLETE");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-ATTACHMENT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT, "GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MISSING-ATTACHMENT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT, "GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-DRAW-BUFFER", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER, "GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-READ-BUFFER", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER, "GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER");
#endif
#if defined(GL_FRAMEBUFFER_UNSUPPORTED)
defconsti(env, "GL-FRAMEBUFFER-UNSUPPORTED", (GLenum) GL_FRAMEBUFFER_UNSUPPORTED, "GL_FRAMEBUFFER_UNSUPPORTED");
#endif
#if defined(GL_MAX_COLOR_ATTACHMENTS)
defconsti(env, "GL-MAX-COLOR-ATTACHMENTS", (GLenum) GL_MAX_COLOR_ATTACHMENTS, "GL_MAX_COLOR_ATTACHMENTS");
#endif
#if defined(GL_COLOR_ATTACHMENT0)
defconsti(env, "GL-COLOR-ATTACHMENT0", (GLenum) GL_COLOR_ATTACHMENT0, "GL_COLOR_ATTACHMENT0");
#endif
#if defined(GL_COLOR_ATTACHMENT1)
defconsti(env, "GL-COLOR-ATTACHMENT1", (GLenum) GL_COLOR_ATTACHMENT1, "GL_COLOR_ATTACHMENT1");
#endif
#if defined(GL_COLOR_ATTACHMENT2)
defconsti(env, "GL-COLOR-ATTACHMENT2", (GLenum) GL_COLOR_ATTACHMENT2, "GL_COLOR_ATTACHMENT2");
#endif
#if defined(GL_COLOR_ATTACHMENT3)
defconsti(env, "GL-COLOR-ATTACHMENT3", (GLenum) GL_COLOR_ATTACHMENT3, "GL_COLOR_ATTACHMENT3");
#endif
#if defined(GL_COLOR_ATTACHMENT4)
defconsti(env, "GL-COLOR-ATTACHMENT4", (GLenum) GL_COLOR_ATTACHMENT4, "GL_COLOR_ATTACHMENT4");
#endif
#if defined(GL_COLOR_ATTACHMENT5)
defconsti(env, "GL-COLOR-ATTACHMENT5", (GLenum) GL_COLOR_ATTACHMENT5, "GL_COLOR_ATTACHMENT5");
#endif
#if defined(GL_COLOR_ATTACHMENT6)
defconsti(env, "GL-COLOR-ATTACHMENT6", (GLenum) GL_COLOR_ATTACHMENT6, "GL_COLOR_ATTACHMENT6");
#endif
#if defined(GL_COLOR_ATTACHMENT7)
defconsti(env, "GL-COLOR-ATTACHMENT7", (GLenum) GL_COLOR_ATTACHMENT7, "GL_COLOR_ATTACHMENT7");
#endif
#if defined(GL_COLOR_ATTACHMENT8)
defconsti(env, "GL-COLOR-ATTACHMENT8", (GLenum) GL_COLOR_ATTACHMENT8, "GL_COLOR_ATTACHMENT8");
#endif
#if defined(GL_COLOR_ATTACHMENT9)
defconsti(env, "GL-COLOR-ATTACHMENT9", (GLenum) GL_COLOR_ATTACHMENT9, "GL_COLOR_ATTACHMENT9");
#endif
#if defined(GL_COLOR_ATTACHMENT10)
defconsti(env, "GL-COLOR-ATTACHMENT10", (GLenum) GL_COLOR_ATTACHMENT10, "GL_COLOR_ATTACHMENT10");
#endif
#if defined(GL_COLOR_ATTACHMENT11)
defconsti(env, "GL-COLOR-ATTACHMENT11", (GLenum) GL_COLOR_ATTACHMENT11, "GL_COLOR_ATTACHMENT11");
#endif
#if defined(GL_COLOR_ATTACHMENT12)
defconsti(env, "GL-COLOR-ATTACHMENT12", (GLenum) GL_COLOR_ATTACHMENT12, "GL_COLOR_ATTACHMENT12");
#endif
#if defined(GL_COLOR_ATTACHMENT13)
defconsti(env, "GL-COLOR-ATTACHMENT13", (GLenum) GL_COLOR_ATTACHMENT13, "GL_COLOR_ATTACHMENT13");
#endif
#if defined(GL_COLOR_ATTACHMENT14)
defconsti(env, "GL-COLOR-ATTACHMENT14", (GLenum) GL_COLOR_ATTACHMENT14, "GL_COLOR_ATTACHMENT14");
#endif
#if defined(GL_COLOR_ATTACHMENT15)
defconsti(env, "GL-COLOR-ATTACHMENT15", (GLenum) GL_COLOR_ATTACHMENT15, "GL_COLOR_ATTACHMENT15");
#endif
#if defined(GL_DEPTH_ATTACHMENT)
defconsti(env, "GL-DEPTH-ATTACHMENT", (GLenum) GL_DEPTH_ATTACHMENT, "GL_DEPTH_ATTACHMENT");
#endif
#if defined(GL_STENCIL_ATTACHMENT)
defconsti(env, "GL-STENCIL-ATTACHMENT", (GLenum) GL_STENCIL_ATTACHMENT, "GL_STENCIL_ATTACHMENT");
#endif
#if defined(GL_FRAMEBUFFER)
defconsti(env, "GL-FRAMEBUFFER", (GLenum) GL_FRAMEBUFFER, "GL_FRAMEBUFFER");
#endif
#if defined(GL_RENDERBUFFER)
defconsti(env, "GL-RENDERBUFFER", (GLenum) GL_RENDERBUFFER, "GL_RENDERBUFFER");
#endif
#if defined(GL_RENDERBUFFER_WIDTH)
defconsti(env, "GL-RENDERBUFFER-WIDTH", (GLenum) GL_RENDERBUFFER_WIDTH, "GL_RENDERBUFFER_WIDTH");
#endif
#if defined(GL_RENDERBUFFER_HEIGHT)
defconsti(env, "GL-RENDERBUFFER-HEIGHT", (GLenum) GL_RENDERBUFFER_HEIGHT, "GL_RENDERBUFFER_HEIGHT");
#endif
#if defined(GL_RENDERBUFFER_INTERNAL_FORMAT)
defconsti(env, "GL-RENDERBUFFER-INTERNAL-FORMAT", (GLenum) GL_RENDERBUFFER_INTERNAL_FORMAT, "GL_RENDERBUFFER_INTERNAL_FORMAT");
#endif
#if defined(GL_STENCIL_INDEX1)
defconsti(env, "GL-STENCIL-INDEX1", (GLenum) GL_STENCIL_INDEX1, "GL_STENCIL_INDEX1");
#endif
#if defined(GL_STENCIL_INDEX4)
defconsti(env, "GL-STENCIL-INDEX4", (GLenum) GL_STENCIL_INDEX4, "GL_STENCIL_INDEX4");
#endif
#if defined(GL_STENCIL_INDEX8)
defconsti(env, "GL-STENCIL-INDEX8", (GLenum) GL_STENCIL_INDEX8, "GL_STENCIL_INDEX8");
#endif
#if defined(GL_STENCIL_INDEX16)
defconsti(env, "GL-STENCIL-INDEX16", (GLenum) GL_STENCIL_INDEX16, "GL_STENCIL_INDEX16");
#endif
#if defined(GL_RENDERBUFFER_RED_SIZE)
defconsti(env, "GL-RENDERBUFFER-RED-SIZE", (GLenum) GL_RENDERBUFFER_RED_SIZE, "GL_RENDERBUFFER_RED_SIZE");
#endif
#if defined(GL_RENDERBUFFER_GREEN_SIZE)
defconsti(env, "GL-RENDERBUFFER-GREEN-SIZE", (GLenum) GL_RENDERBUFFER_GREEN_SIZE, "GL_RENDERBUFFER_GREEN_SIZE");
#endif
#if defined(GL_RENDERBUFFER_BLUE_SIZE)
defconsti(env, "GL-RENDERBUFFER-BLUE-SIZE", (GLenum) GL_RENDERBUFFER_BLUE_SIZE, "GL_RENDERBUFFER_BLUE_SIZE");
#endif
#if defined(GL_RENDERBUFFER_ALPHA_SIZE)
defconsti(env, "GL-RENDERBUFFER-ALPHA-SIZE", (GLenum) GL_RENDERBUFFER_ALPHA_SIZE, "GL_RENDERBUFFER_ALPHA_SIZE");
#endif
#if defined(GL_RENDERBUFFER_DEPTH_SIZE)
defconsti(env, "GL-RENDERBUFFER-DEPTH-SIZE", (GLenum) GL_RENDERBUFFER_DEPTH_SIZE, "GL_RENDERBUFFER_DEPTH_SIZE");
#endif
#if defined(GL_RENDERBUFFER_STENCIL_SIZE)
defconsti(env, "GL-RENDERBUFFER-STENCIL-SIZE", (GLenum) GL_RENDERBUFFER_STENCIL_SIZE, "GL_RENDERBUFFER_STENCIL_SIZE");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MULTISAMPLE", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE, "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE");
#endif
#if defined(GL_MAX_SAMPLES)
defconsti(env, "GL-MAX-SAMPLES", (GLenum) GL_MAX_SAMPLES, "GL_MAX_SAMPLES");
#endif
#if defined(GL_INDEX)
defconsti(env, "GL-INDEX", (GLenum) GL_INDEX, "GL_INDEX");
#endif
#if defined(GL_FRAMEBUFFER_SRGB)
defconsti(env, "GL-FRAMEBUFFER-SRGB", (GLenum) GL_FRAMEBUFFER_SRGB, "GL_FRAMEBUFFER_SRGB");
#endif
#if defined(GL_LINES_ADJACENCY_ARB)
defconsti(env, "GL-LINES-ADJACENCY-ARB", (GLenum) GL_LINES_ADJACENCY_ARB, "GL_LINES_ADJACENCY_ARB");
#endif
#if defined(GL_LINE_STRIP_ADJACENCY_ARB)
defconsti(env, "GL-LINE-STRIP-ADJACENCY-ARB", (GLenum) GL_LINE_STRIP_ADJACENCY_ARB, "GL_LINE_STRIP_ADJACENCY_ARB");
#endif
#if defined(GL_TRIANGLES_ADJACENCY_ARB)
defconsti(env, "GL-TRIANGLES-ADJACENCY-ARB", (GLenum) GL_TRIANGLES_ADJACENCY_ARB, "GL_TRIANGLES_ADJACENCY_ARB");
#endif
#if defined(GL_TRIANGLE_STRIP_ADJACENCY_ARB)
defconsti(env, "GL-TRIANGLE-STRIP-ADJACENCY-ARB", (GLenum) GL_TRIANGLE_STRIP_ADJACENCY_ARB, "GL_TRIANGLE_STRIP_ADJACENCY_ARB");
#endif
#if defined(GL_PROGRAM_POINT_SIZE_ARB)
defconsti(env, "GL-PROGRAM-POINT-SIZE-ARB", (GLenum) GL_PROGRAM_POINT_SIZE_ARB, "GL_PROGRAM_POINT_SIZE_ARB");
#endif
#if defined(GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB)
defconsti(env, "GL-MAX-GEOMETRY-TEXTURE-IMAGE-UNITS-ARB", (GLenum) GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB, "GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-LAYERED-ARB", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB, "GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-LAYER-TARGETS-ARB", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB, "GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-LAYER-COUNT-ARB", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB, "GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB");
#endif
#if defined(GL_GEOMETRY_SHADER_ARB)
defconsti(env, "GL-GEOMETRY-SHADER-ARB", (GLenum) GL_GEOMETRY_SHADER_ARB, "GL_GEOMETRY_SHADER_ARB");
#endif
#if defined(GL_GEOMETRY_VERTICES_OUT_ARB)
defconsti(env, "GL-GEOMETRY-VERTICES-OUT-ARB", (GLenum) GL_GEOMETRY_VERTICES_OUT_ARB, "GL_GEOMETRY_VERTICES_OUT_ARB");
#endif
#if defined(GL_GEOMETRY_INPUT_TYPE_ARB)
defconsti(env, "GL-GEOMETRY-INPUT-TYPE-ARB", (GLenum) GL_GEOMETRY_INPUT_TYPE_ARB, "GL_GEOMETRY_INPUT_TYPE_ARB");
#endif
#if defined(GL_GEOMETRY_OUTPUT_TYPE_ARB)
defconsti(env, "GL-GEOMETRY-OUTPUT-TYPE-ARB", (GLenum) GL_GEOMETRY_OUTPUT_TYPE_ARB, "GL_GEOMETRY_OUTPUT_TYPE_ARB");
#endif
#if defined(GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB)
defconsti(env, "GL-MAX-GEOMETRY-VARYING-COMPONENTS-ARB", (GLenum) GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB, "GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB");
#endif
#if defined(GL_MAX_VERTEX_VARYING_COMPONENTS_ARB)
defconsti(env, "GL-MAX-VERTEX-VARYING-COMPONENTS-ARB", (GLenum) GL_MAX_VERTEX_VARYING_COMPONENTS_ARB, "GL_MAX_VERTEX_VARYING_COMPONENTS_ARB");
#endif
#if defined(GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB)
defconsti(env, "GL-MAX-GEOMETRY-UNIFORM-COMPONENTS-ARB", (GLenum) GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB, "GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB");
#endif
#if defined(GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB)
defconsti(env, "GL-MAX-GEOMETRY-OUTPUT-VERTICES-ARB", (GLenum) GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB, "GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB");
#endif
#if defined(GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB)
defconsti(env, "GL-MAX-GEOMETRY-TOTAL-OUTPUT-COMPONENTS-ARB", (GLenum) GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB, "GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB");
#endif
#if defined(GL_MAX_VARYING_COMPONENTS)
defconsti(env, "GL-MAX-VARYING-COMPONENTS", (GLenum) GL_MAX_VARYING_COMPONENTS, "GL_MAX_VARYING_COMPONENTS");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-LAYER", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER");
#endif
#if defined(GL_PROGRAM_BINARY_RETRIEVABLE_HINT)
defconsti(env, "GL-PROGRAM-BINARY-RETRIEVABLE-HINT", (GLenum) GL_PROGRAM_BINARY_RETRIEVABLE_HINT, "GL_PROGRAM_BINARY_RETRIEVABLE_HINT");
#endif
#if defined(GL_PROGRAM_BINARY_LENGTH)
defconsti(env, "GL-PROGRAM-BINARY-LENGTH", (GLenum) GL_PROGRAM_BINARY_LENGTH, "GL_PROGRAM_BINARY_LENGTH");
#endif
#if defined(GL_NUM_PROGRAM_BINARY_FORMATS)
defconsti(env, "GL-NUM-PROGRAM-BINARY-FORMATS", (GLenum) GL_NUM_PROGRAM_BINARY_FORMATS, "GL_NUM_PROGRAM_BINARY_FORMATS");
#endif
#if defined(GL_PROGRAM_BINARY_FORMATS)
defconsti(env, "GL-PROGRAM-BINARY-FORMATS", (GLenum) GL_PROGRAM_BINARY_FORMATS, "GL_PROGRAM_BINARY_FORMATS");
#endif
#if defined(GL_SHADER_BINARY_FORMAT_SPIR_V_ARB)
defconsti(env, "GL-SHADER-BINARY-FORMAT-SPIR-V-ARB", (GLenum) GL_SHADER_BINARY_FORMAT_SPIR_V_ARB, "GL_SHADER_BINARY_FORMAT_SPIR_V_ARB");
#endif
#if defined(GL_SPIR_V_BINARY_ARB)
defconsti(env, "GL-SPIR-V-BINARY-ARB", (GLenum) GL_SPIR_V_BINARY_ARB, "GL_SPIR_V_BINARY_ARB");
#endif
#if defined(GL_GEOMETRY_SHADER_INVOCATIONS)
defconsti(env, "GL-GEOMETRY-SHADER-INVOCATIONS", (GLenum) GL_GEOMETRY_SHADER_INVOCATIONS, "GL_GEOMETRY_SHADER_INVOCATIONS");
#endif
#if defined(GL_MAX_GEOMETRY_SHADER_INVOCATIONS)
defconsti(env, "GL-MAX-GEOMETRY-SHADER-INVOCATIONS", (GLenum) GL_MAX_GEOMETRY_SHADER_INVOCATIONS, "GL_MAX_GEOMETRY_SHADER_INVOCATIONS");
#endif
#if defined(GL_MIN_FRAGMENT_INTERPOLATION_OFFSET)
defconsti(env, "GL-MIN-FRAGMENT-INTERPOLATION-OFFSET", (GLenum) GL_MIN_FRAGMENT_INTERPOLATION_OFFSET, "GL_MIN_FRAGMENT_INTERPOLATION_OFFSET");
#endif
#if defined(GL_MAX_FRAGMENT_INTERPOLATION_OFFSET)
defconsti(env, "GL-MAX-FRAGMENT-INTERPOLATION-OFFSET", (GLenum) GL_MAX_FRAGMENT_INTERPOLATION_OFFSET, "GL_MAX_FRAGMENT_INTERPOLATION_OFFSET");
#endif
#if defined(GL_FRAGMENT_INTERPOLATION_OFFSET_BITS)
defconsti(env, "GL-FRAGMENT-INTERPOLATION-OFFSET-BITS", (GLenum) GL_FRAGMENT_INTERPOLATION_OFFSET_BITS, "GL_FRAGMENT_INTERPOLATION_OFFSET_BITS");
#endif
#if defined(GL_MAX_VERTEX_STREAMS)
defconsti(env, "GL-MAX-VERTEX-STREAMS", (GLenum) GL_MAX_VERTEX_STREAMS, "GL_MAX_VERTEX_STREAMS");
#endif
#if defined(GL_DOUBLE)
defconsti(env, "GL-DOUBLE", (GLenum) GL_DOUBLE, "GL_DOUBLE");
#endif
#if defined(GL_DOUBLE_VEC2)
defconsti(env, "GL-DOUBLE-VEC2", (GLenum) GL_DOUBLE_VEC2, "GL_DOUBLE_VEC2");
#endif
#if defined(GL_DOUBLE_VEC3)
defconsti(env, "GL-DOUBLE-VEC3", (GLenum) GL_DOUBLE_VEC3, "GL_DOUBLE_VEC3");
#endif
#if defined(GL_DOUBLE_VEC4)
defconsti(env, "GL-DOUBLE-VEC4", (GLenum) GL_DOUBLE_VEC4, "GL_DOUBLE_VEC4");
#endif
#if defined(GL_DOUBLE_MAT2)
defconsti(env, "GL-DOUBLE-MAT2", (GLenum) GL_DOUBLE_MAT2, "GL_DOUBLE_MAT2");
#endif
#if defined(GL_DOUBLE_MAT3)
defconsti(env, "GL-DOUBLE-MAT3", (GLenum) GL_DOUBLE_MAT3, "GL_DOUBLE_MAT3");
#endif
#if defined(GL_DOUBLE_MAT4)
defconsti(env, "GL-DOUBLE-MAT4", (GLenum) GL_DOUBLE_MAT4, "GL_DOUBLE_MAT4");
#endif
#if defined(GL_DOUBLE_MAT2x3)
defconsti(env, "GL-DOUBLE-MAT2x3", (GLenum) GL_DOUBLE_MAT2x3, "GL_DOUBLE_MAT2x3");
#endif
#if defined(GL_DOUBLE_MAT2x4)
defconsti(env, "GL-DOUBLE-MAT2x4", (GLenum) GL_DOUBLE_MAT2x4, "GL_DOUBLE_MAT2x4");
#endif
#if defined(GL_DOUBLE_MAT3x2)
defconsti(env, "GL-DOUBLE-MAT3x2", (GLenum) GL_DOUBLE_MAT3x2, "GL_DOUBLE_MAT3x2");
#endif
#if defined(GL_DOUBLE_MAT3x4)
defconsti(env, "GL-DOUBLE-MAT3x4", (GLenum) GL_DOUBLE_MAT3x4, "GL_DOUBLE_MAT3x4");
#endif
#if defined(GL_DOUBLE_MAT4x2)
defconsti(env, "GL-DOUBLE-MAT4x2", (GLenum) GL_DOUBLE_MAT4x2, "GL_DOUBLE_MAT4x2");
#endif
#if defined(GL_DOUBLE_MAT4x3)
defconsti(env, "GL-DOUBLE-MAT4x3", (GLenum) GL_DOUBLE_MAT4x3, "GL_DOUBLE_MAT4x3");
#endif
#if defined(GL_INT64_ARB)
defconsti(env, "GL-INT64-ARB", (GLenum) GL_INT64_ARB, "GL_INT64_ARB");
#endif
#if defined(GL_UNSIGNED_INT64_ARB)
defconsti(env, "GL-UNSIGNED-INT64-ARB", (GLenum) GL_UNSIGNED_INT64_ARB, "GL_UNSIGNED_INT64_ARB");
#endif
#if defined(GL_INT64_VEC2_ARB)
defconsti(env, "GL-INT64-VEC2-ARB", (GLenum) GL_INT64_VEC2_ARB, "GL_INT64_VEC2_ARB");
#endif
#if defined(GL_INT64_VEC3_ARB)
defconsti(env, "GL-INT64-VEC3-ARB", (GLenum) GL_INT64_VEC3_ARB, "GL_INT64_VEC3_ARB");
#endif
#if defined(GL_INT64_VEC4_ARB)
defconsti(env, "GL-INT64-VEC4-ARB", (GLenum) GL_INT64_VEC4_ARB, "GL_INT64_VEC4_ARB");
#endif
#if defined(GL_UNSIGNED_INT64_VEC2_ARB)
defconsti(env, "GL-UNSIGNED-INT64-VEC2-ARB", (GLenum) GL_UNSIGNED_INT64_VEC2_ARB, "GL_UNSIGNED_INT64_VEC2_ARB");
#endif
#if defined(GL_UNSIGNED_INT64_VEC3_ARB)
defconsti(env, "GL-UNSIGNED-INT64-VEC3-ARB", (GLenum) GL_UNSIGNED_INT64_VEC3_ARB, "GL_UNSIGNED_INT64_VEC3_ARB");
#endif
#if defined(GL_UNSIGNED_INT64_VEC4_ARB)
defconsti(env, "GL-UNSIGNED-INT64-VEC4-ARB", (GLenum) GL_UNSIGNED_INT64_VEC4_ARB, "GL_UNSIGNED_INT64_VEC4_ARB");
#endif
#if defined(GL_HALF_FLOAT_ARB)
defconsti(env, "GL-HALF-FLOAT-ARB", (GLenum) GL_HALF_FLOAT_ARB, "GL_HALF_FLOAT_ARB");
#endif
#if defined(GL_HALF_FLOAT)
defconsti(env, "GL-HALF-FLOAT", (GLenum) GL_HALF_FLOAT, "GL_HALF_FLOAT");
#endif
#if defined(GL_BLEND_COLOR)
defconsti(env, "GL-BLEND-COLOR", (GLenum) GL_BLEND_COLOR, "GL_BLEND_COLOR");
#endif
#if defined(GL_BLEND_EQUATION)
defconsti(env, "GL-BLEND-EQUATION", (GLenum) GL_BLEND_EQUATION, "GL_BLEND_EQUATION");
#endif
#if defined(GL_CONSTANT_COLOR)
defconsti(env, "GL-CONSTANT-COLOR", (GLenum) GL_CONSTANT_COLOR, "GL_CONSTANT_COLOR");
#endif
#if defined(GL_ONE_MINUS_CONSTANT_COLOR)
defconsti(env, "GL-ONE-MINUS-CONSTANT-COLOR", (GLenum) GL_ONE_MINUS_CONSTANT_COLOR, "GL_ONE_MINUS_CONSTANT_COLOR");
#endif
#if defined(GL_CONSTANT_ALPHA)
defconsti(env, "GL-CONSTANT-ALPHA", (GLenum) GL_CONSTANT_ALPHA, "GL_CONSTANT_ALPHA");
#endif
#if defined(GL_ONE_MINUS_CONSTANT_ALPHA)
defconsti(env, "GL-ONE-MINUS-CONSTANT-ALPHA", (GLenum) GL_ONE_MINUS_CONSTANT_ALPHA, "GL_ONE_MINUS_CONSTANT_ALPHA");
#endif
#if defined(GL_FUNC_ADD)
defconsti(env, "GL-FUNC-ADD", (GLenum) GL_FUNC_ADD, "GL_FUNC_ADD");
#endif
#if defined(GL_FUNC_REVERSE_SUBTRACT)
defconsti(env, "GL-FUNC-REVERSE-SUBTRACT", (GLenum) GL_FUNC_REVERSE_SUBTRACT, "GL_FUNC_REVERSE_SUBTRACT");
#endif
#if defined(GL_FUNC_SUBTRACT)
defconsti(env, "GL-FUNC-SUBTRACT", (GLenum) GL_FUNC_SUBTRACT, "GL_FUNC_SUBTRACT");
#endif
#if defined(GL_MIN)
defconsti(env, "GL-MIN", (GLenum) GL_MIN, "GL_MIN");
#endif
#if defined(GL_MAX)
defconsti(env, "GL-MAX", (GLenum) GL_MAX, "GL_MAX");
#endif
#if defined(GL_CONVOLUTION_1D)
defconsti(env, "GL-CONVOLUTION-1D", (GLenum) GL_CONVOLUTION_1D, "GL_CONVOLUTION_1D");
#endif
#if defined(GL_CONVOLUTION_2D)
defconsti(env, "GL-CONVOLUTION-2D", (GLenum) GL_CONVOLUTION_2D, "GL_CONVOLUTION_2D");
#endif
#if defined(GL_SEPARABLE_2D)
defconsti(env, "GL-SEPARABLE-2D", (GLenum) GL_SEPARABLE_2D, "GL_SEPARABLE_2D");
#endif
#if defined(GL_CONVOLUTION_BORDER_MODE)
defconsti(env, "GL-CONVOLUTION-BORDER-MODE", (GLenum) GL_CONVOLUTION_BORDER_MODE, "GL_CONVOLUTION_BORDER_MODE");
#endif
#if defined(GL_CONVOLUTION_FILTER_SCALE)
defconsti(env, "GL-CONVOLUTION-FILTER-SCALE", (GLenum) GL_CONVOLUTION_FILTER_SCALE, "GL_CONVOLUTION_FILTER_SCALE");
#endif
#if defined(GL_CONVOLUTION_FILTER_BIAS)
defconsti(env, "GL-CONVOLUTION-FILTER-BIAS", (GLenum) GL_CONVOLUTION_FILTER_BIAS, "GL_CONVOLUTION_FILTER_BIAS");
#endif
#if defined(GL_REDUCE)
defconsti(env, "GL-REDUCE", (GLenum) GL_REDUCE, "GL_REDUCE");
#endif
#if defined(GL_CONVOLUTION_FORMAT)
defconsti(env, "GL-CONVOLUTION-FORMAT", (GLenum) GL_CONVOLUTION_FORMAT, "GL_CONVOLUTION_FORMAT");
#endif
#if defined(GL_CONVOLUTION_WIDTH)
defconsti(env, "GL-CONVOLUTION-WIDTH", (GLenum) GL_CONVOLUTION_WIDTH, "GL_CONVOLUTION_WIDTH");
#endif
#if defined(GL_CONVOLUTION_HEIGHT)
defconsti(env, "GL-CONVOLUTION-HEIGHT", (GLenum) GL_CONVOLUTION_HEIGHT, "GL_CONVOLUTION_HEIGHT");
#endif
#if defined(GL_MAX_CONVOLUTION_WIDTH)
defconsti(env, "GL-MAX-CONVOLUTION-WIDTH", (GLenum) GL_MAX_CONVOLUTION_WIDTH, "GL_MAX_CONVOLUTION_WIDTH");
#endif
#if defined(GL_MAX_CONVOLUTION_HEIGHT)
defconsti(env, "GL-MAX-CONVOLUTION-HEIGHT", (GLenum) GL_MAX_CONVOLUTION_HEIGHT, "GL_MAX_CONVOLUTION_HEIGHT");
#endif
#if defined(GL_POST_CONVOLUTION_RED_SCALE)
defconsti(env, "GL-POST-CONVOLUTION-RED-SCALE", (GLenum) GL_POST_CONVOLUTION_RED_SCALE, "GL_POST_CONVOLUTION_RED_SCALE");
#endif
#if defined(GL_POST_CONVOLUTION_GREEN_SCALE)
defconsti(env, "GL-POST-CONVOLUTION-GREEN-SCALE", (GLenum) GL_POST_CONVOLUTION_GREEN_SCALE, "GL_POST_CONVOLUTION_GREEN_SCALE");
#endif
#if defined(GL_POST_CONVOLUTION_BLUE_SCALE)
defconsti(env, "GL-POST-CONVOLUTION-BLUE-SCALE", (GLenum) GL_POST_CONVOLUTION_BLUE_SCALE, "GL_POST_CONVOLUTION_BLUE_SCALE");
#endif
#if defined(GL_POST_CONVOLUTION_ALPHA_SCALE)
defconsti(env, "GL-POST-CONVOLUTION-ALPHA-SCALE", (GLenum) GL_POST_CONVOLUTION_ALPHA_SCALE, "GL_POST_CONVOLUTION_ALPHA_SCALE");
#endif
#if defined(GL_POST_CONVOLUTION_RED_BIAS)
defconsti(env, "GL-POST-CONVOLUTION-RED-BIAS", (GLenum) GL_POST_CONVOLUTION_RED_BIAS, "GL_POST_CONVOLUTION_RED_BIAS");
#endif
#if defined(GL_POST_CONVOLUTION_GREEN_BIAS)
defconsti(env, "GL-POST-CONVOLUTION-GREEN-BIAS", (GLenum) GL_POST_CONVOLUTION_GREEN_BIAS, "GL_POST_CONVOLUTION_GREEN_BIAS");
#endif
#if defined(GL_POST_CONVOLUTION_BLUE_BIAS)
defconsti(env, "GL-POST-CONVOLUTION-BLUE-BIAS", (GLenum) GL_POST_CONVOLUTION_BLUE_BIAS, "GL_POST_CONVOLUTION_BLUE_BIAS");
#endif
#if defined(GL_POST_CONVOLUTION_ALPHA_BIAS)
defconsti(env, "GL-POST-CONVOLUTION-ALPHA-BIAS", (GLenum) GL_POST_CONVOLUTION_ALPHA_BIAS, "GL_POST_CONVOLUTION_ALPHA_BIAS");
#endif
#if defined(GL_HISTOGRAM)
defconsti(env, "GL-HISTOGRAM", (GLenum) GL_HISTOGRAM, "GL_HISTOGRAM");
#endif
#if defined(GL_PROXY_HISTOGRAM)
defconsti(env, "GL-PROXY-HISTOGRAM", (GLenum) GL_PROXY_HISTOGRAM, "GL_PROXY_HISTOGRAM");
#endif
#if defined(GL_HISTOGRAM_WIDTH)
defconsti(env, "GL-HISTOGRAM-WIDTH", (GLenum) GL_HISTOGRAM_WIDTH, "GL_HISTOGRAM_WIDTH");
#endif
#if defined(GL_HISTOGRAM_FORMAT)
defconsti(env, "GL-HISTOGRAM-FORMAT", (GLenum) GL_HISTOGRAM_FORMAT, "GL_HISTOGRAM_FORMAT");
#endif
#if defined(GL_HISTOGRAM_RED_SIZE)
defconsti(env, "GL-HISTOGRAM-RED-SIZE", (GLenum) GL_HISTOGRAM_RED_SIZE, "GL_HISTOGRAM_RED_SIZE");
#endif
#if defined(GL_HISTOGRAM_GREEN_SIZE)
defconsti(env, "GL-HISTOGRAM-GREEN-SIZE", (GLenum) GL_HISTOGRAM_GREEN_SIZE, "GL_HISTOGRAM_GREEN_SIZE");
#endif
#if defined(GL_HISTOGRAM_BLUE_SIZE)
defconsti(env, "GL-HISTOGRAM-BLUE-SIZE", (GLenum) GL_HISTOGRAM_BLUE_SIZE, "GL_HISTOGRAM_BLUE_SIZE");
#endif
#if defined(GL_HISTOGRAM_ALPHA_SIZE)
defconsti(env, "GL-HISTOGRAM-ALPHA-SIZE", (GLenum) GL_HISTOGRAM_ALPHA_SIZE, "GL_HISTOGRAM_ALPHA_SIZE");
#endif
#if defined(GL_HISTOGRAM_LUMINANCE_SIZE)
defconsti(env, "GL-HISTOGRAM-LUMINANCE-SIZE", (GLenum) GL_HISTOGRAM_LUMINANCE_SIZE, "GL_HISTOGRAM_LUMINANCE_SIZE");
#endif
#if defined(GL_HISTOGRAM_SINK)
defconsti(env, "GL-HISTOGRAM-SINK", (GLenum) GL_HISTOGRAM_SINK, "GL_HISTOGRAM_SINK");
#endif
#if defined(GL_MINMAX)
defconsti(env, "GL-MINMAX", (GLenum) GL_MINMAX, "GL_MINMAX");
#endif
#if defined(GL_MINMAX_FORMAT)
defconsti(env, "GL-MINMAX-FORMAT", (GLenum) GL_MINMAX_FORMAT, "GL_MINMAX_FORMAT");
#endif
#if defined(GL_MINMAX_SINK)
defconsti(env, "GL-MINMAX-SINK", (GLenum) GL_MINMAX_SINK, "GL_MINMAX_SINK");
#endif
#if defined(GL_TABLE_TOO_LARGE)
defconsti(env, "GL-TABLE-TOO-LARGE", (GLenum) GL_TABLE_TOO_LARGE, "GL_TABLE_TOO_LARGE");
#endif
#if defined(GL_COLOR_MATRIX)
defconsti(env, "GL-COLOR-MATRIX", (GLenum) GL_COLOR_MATRIX, "GL_COLOR_MATRIX");
#endif
#if defined(GL_COLOR_MATRIX_STACK_DEPTH)
defconsti(env, "GL-COLOR-MATRIX-STACK-DEPTH", (GLenum) GL_COLOR_MATRIX_STACK_DEPTH, "GL_COLOR_MATRIX_STACK_DEPTH");
#endif
#if defined(GL_MAX_COLOR_MATRIX_STACK_DEPTH)
defconsti(env, "GL-MAX-COLOR-MATRIX-STACK-DEPTH", (GLenum) GL_MAX_COLOR_MATRIX_STACK_DEPTH, "GL_MAX_COLOR_MATRIX_STACK_DEPTH");
#endif
#if defined(GL_POST_COLOR_MATRIX_RED_SCALE)
defconsti(env, "GL-POST-COLOR-MATRIX-RED-SCALE", (GLenum) GL_POST_COLOR_MATRIX_RED_SCALE, "GL_POST_COLOR_MATRIX_RED_SCALE");
#endif
#if defined(GL_POST_COLOR_MATRIX_GREEN_SCALE)
defconsti(env, "GL-POST-COLOR-MATRIX-GREEN-SCALE", (GLenum) GL_POST_COLOR_MATRIX_GREEN_SCALE, "GL_POST_COLOR_MATRIX_GREEN_SCALE");
#endif
#if defined(GL_POST_COLOR_MATRIX_BLUE_SCALE)
defconsti(env, "GL-POST-COLOR-MATRIX-BLUE-SCALE", (GLenum) GL_POST_COLOR_MATRIX_BLUE_SCALE, "GL_POST_COLOR_MATRIX_BLUE_SCALE");
#endif
#if defined(GL_POST_COLOR_MATRIX_ALPHA_SCALE)
defconsti(env, "GL-POST-COLOR-MATRIX-ALPHA-SCALE", (GLenum) GL_POST_COLOR_MATRIX_ALPHA_SCALE, "GL_POST_COLOR_MATRIX_ALPHA_SCALE");
#endif
#if defined(GL_POST_COLOR_MATRIX_RED_BIAS)
defconsti(env, "GL-POST-COLOR-MATRIX-RED-BIAS", (GLenum) GL_POST_COLOR_MATRIX_RED_BIAS, "GL_POST_COLOR_MATRIX_RED_BIAS");
#endif
#if defined(GL_POST_COLOR_MATRIX_GREEN_BIAS)
defconsti(env, "GL-POST-COLOR-MATRIX-GREEN-BIAS", (GLenum) GL_POST_COLOR_MATRIX_GREEN_BIAS, "GL_POST_COLOR_MATRIX_GREEN_BIAS");
#endif
#if defined(GL_POST_COLOR_MATRIX_BLUE_BIAS)
defconsti(env, "GL-POST-COLOR-MATRIX-BLUE-BIAS", (GLenum) GL_POST_COLOR_MATRIX_BLUE_BIAS, "GL_POST_COLOR_MATRIX_BLUE_BIAS");
#endif
#if defined(GL_POST_COLOR_MATRIX_ALPHA_BIAS)
defconsti(env, "GL-POST-COLOR-MATRIX-ALPHA-BIAS", (GLenum) GL_POST_COLOR_MATRIX_ALPHA_BIAS, "GL_POST_COLOR_MATRIX_ALPHA_BIAS");
#endif
#if defined(GL_COLOR_TABLE)
defconsti(env, "GL-COLOR-TABLE", (GLenum) GL_COLOR_TABLE, "GL_COLOR_TABLE");
#endif
#if defined(GL_POST_CONVOLUTION_COLOR_TABLE)
defconsti(env, "GL-POST-CONVOLUTION-COLOR-TABLE", (GLenum) GL_POST_CONVOLUTION_COLOR_TABLE, "GL_POST_CONVOLUTION_COLOR_TABLE");
#endif
#if defined(GL_POST_COLOR_MATRIX_COLOR_TABLE)
defconsti(env, "GL-POST-COLOR-MATRIX-COLOR-TABLE", (GLenum) GL_POST_COLOR_MATRIX_COLOR_TABLE, "GL_POST_COLOR_MATRIX_COLOR_TABLE");
#endif
#if defined(GL_PROXY_COLOR_TABLE)
defconsti(env, "GL-PROXY-COLOR-TABLE", (GLenum) GL_PROXY_COLOR_TABLE, "GL_PROXY_COLOR_TABLE");
#endif
#if defined(GL_PROXY_POST_CONVOLUTION_COLOR_TABLE)
defconsti(env, "GL-PROXY-POST-CONVOLUTION-COLOR-TABLE", (GLenum) GL_PROXY_POST_CONVOLUTION_COLOR_TABLE, "GL_PROXY_POST_CONVOLUTION_COLOR_TABLE");
#endif
#if defined(GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE)
defconsti(env, "GL-PROXY-POST-COLOR-MATRIX-COLOR-TABLE", (GLenum) GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE, "GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE");
#endif
#if defined(GL_COLOR_TABLE_SCALE)
defconsti(env, "GL-COLOR-TABLE-SCALE", (GLenum) GL_COLOR_TABLE_SCALE, "GL_COLOR_TABLE_SCALE");
#endif
#if defined(GL_COLOR_TABLE_BIAS)
defconsti(env, "GL-COLOR-TABLE-BIAS", (GLenum) GL_COLOR_TABLE_BIAS, "GL_COLOR_TABLE_BIAS");
#endif
#if defined(GL_COLOR_TABLE_FORMAT)
defconsti(env, "GL-COLOR-TABLE-FORMAT", (GLenum) GL_COLOR_TABLE_FORMAT, "GL_COLOR_TABLE_FORMAT");
#endif
#if defined(GL_COLOR_TABLE_WIDTH)
defconsti(env, "GL-COLOR-TABLE-WIDTH", (GLenum) GL_COLOR_TABLE_WIDTH, "GL_COLOR_TABLE_WIDTH");
#endif
#if defined(GL_COLOR_TABLE_RED_SIZE)
defconsti(env, "GL-COLOR-TABLE-RED-SIZE", (GLenum) GL_COLOR_TABLE_RED_SIZE, "GL_COLOR_TABLE_RED_SIZE");
#endif
#if defined(GL_COLOR_TABLE_GREEN_SIZE)
defconsti(env, "GL-COLOR-TABLE-GREEN-SIZE", (GLenum) GL_COLOR_TABLE_GREEN_SIZE, "GL_COLOR_TABLE_GREEN_SIZE");
#endif
#if defined(GL_COLOR_TABLE_BLUE_SIZE)
defconsti(env, "GL-COLOR-TABLE-BLUE-SIZE", (GLenum) GL_COLOR_TABLE_BLUE_SIZE, "GL_COLOR_TABLE_BLUE_SIZE");
#endif
#if defined(GL_COLOR_TABLE_ALPHA_SIZE)
defconsti(env, "GL-COLOR-TABLE-ALPHA-SIZE", (GLenum) GL_COLOR_TABLE_ALPHA_SIZE, "GL_COLOR_TABLE_ALPHA_SIZE");
#endif
#if defined(GL_COLOR_TABLE_LUMINANCE_SIZE)
defconsti(env, "GL-COLOR-TABLE-LUMINANCE-SIZE", (GLenum) GL_COLOR_TABLE_LUMINANCE_SIZE, "GL_COLOR_TABLE_LUMINANCE_SIZE");
#endif
#if defined(GL_COLOR_TABLE_INTENSITY_SIZE)
defconsti(env, "GL-COLOR-TABLE-INTENSITY-SIZE", (GLenum) GL_COLOR_TABLE_INTENSITY_SIZE, "GL_COLOR_TABLE_INTENSITY_SIZE");
#endif
#if defined(GL_CONSTANT_BORDER)
defconsti(env, "GL-CONSTANT-BORDER", (GLenum) GL_CONSTANT_BORDER, "GL_CONSTANT_BORDER");
#endif
#if defined(GL_REPLICATE_BORDER)
defconsti(env, "GL-REPLICATE-BORDER", (GLenum) GL_REPLICATE_BORDER, "GL_REPLICATE_BORDER");
#endif
#if defined(GL_CONVOLUTION_BORDER_COLOR)
defconsti(env, "GL-CONVOLUTION-BORDER-COLOR", (GLenum) GL_CONVOLUTION_BORDER_COLOR, "GL_CONVOLUTION_BORDER_COLOR");
#endif
#if defined(GL_PARAMETER_BUFFER_ARB)
defconsti(env, "GL-PARAMETER-BUFFER-ARB", (GLenum) GL_PARAMETER_BUFFER_ARB, "GL_PARAMETER_BUFFER_ARB");
#endif
#if defined(GL_PARAMETER_BUFFER_BINDING_ARB)
defconsti(env, "GL-PARAMETER-BUFFER-BINDING-ARB", (GLenum) GL_PARAMETER_BUFFER_BINDING_ARB, "GL_PARAMETER_BUFFER_BINDING_ARB");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-DIVISOR-ARB", (GLenum) GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB, "GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB");
#endif
#if defined(GL_NUM_SAMPLE_COUNTS)
defconsti(env, "GL-NUM-SAMPLE-COUNTS", (GLenum) GL_NUM_SAMPLE_COUNTS, "GL_NUM_SAMPLE_COUNTS");
#endif
#if defined(GL_IMAGE_FORMAT_COMPATIBILITY_TYPE)
defconsti(env, "GL-IMAGE-FORMAT-COMPATIBILITY-TYPE", (GLenum) GL_IMAGE_FORMAT_COMPATIBILITY_TYPE, "GL_IMAGE_FORMAT_COMPATIBILITY_TYPE");
#endif
#if defined(GL_NUM_SAMPLE_COUNTS)
defconsti(env, "GL-NUM-SAMPLE-COUNTS", (GLenum) GL_NUM_SAMPLE_COUNTS, "GL_NUM_SAMPLE_COUNTS");
#endif
#if defined(GL_RENDERBUFFER)
defconsti(env, "GL-RENDERBUFFER", (GLenum) GL_RENDERBUFFER, "GL_RENDERBUFFER");
#endif
#if defined(GL_SAMPLES)
defconsti(env, "GL-SAMPLES", (GLenum) GL_SAMPLES, "GL_SAMPLES");
#endif
#if defined(GL_TEXTURE_1D)
defconsti(env, "GL-TEXTURE-1D", (GLenum) GL_TEXTURE_1D, "GL_TEXTURE_1D");
#endif
#if defined(GL_TEXTURE_1D_ARRAY)
defconsti(env, "GL-TEXTURE-1D-ARRAY", (GLenum) GL_TEXTURE_1D_ARRAY, "GL_TEXTURE_1D_ARRAY");
#endif
#if defined(GL_TEXTURE_2D)
defconsti(env, "GL-TEXTURE-2D", (GLenum) GL_TEXTURE_2D, "GL_TEXTURE_2D");
#endif
#if defined(GL_TEXTURE_2D_ARRAY)
defconsti(env, "GL-TEXTURE-2D-ARRAY", (GLenum) GL_TEXTURE_2D_ARRAY, "GL_TEXTURE_2D_ARRAY");
#endif
#if defined(GL_TEXTURE_3D)
defconsti(env, "GL-TEXTURE-3D", (GLenum) GL_TEXTURE_3D, "GL_TEXTURE_3D");
#endif
#if defined(GL_TEXTURE_CUBE_MAP)
defconsti(env, "GL-TEXTURE-CUBE-MAP", (GLenum) GL_TEXTURE_CUBE_MAP, "GL_TEXTURE_CUBE_MAP");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_ARRAY)
defconsti(env, "GL-TEXTURE-CUBE-MAP-ARRAY", (GLenum) GL_TEXTURE_CUBE_MAP_ARRAY, "GL_TEXTURE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_TEXTURE_RECTANGLE)
defconsti(env, "GL-TEXTURE-RECTANGLE", (GLenum) GL_TEXTURE_RECTANGLE, "GL_TEXTURE_RECTANGLE");
#endif
#if defined(GL_TEXTURE_BUFFER)
defconsti(env, "GL-TEXTURE-BUFFER", (GLenum) GL_TEXTURE_BUFFER, "GL_TEXTURE_BUFFER");
#endif
#if defined(GL_TEXTURE_2D_MULTISAMPLE)
defconsti(env, "GL-TEXTURE-2D-MULTISAMPLE", (GLenum) GL_TEXTURE_2D_MULTISAMPLE, "GL_TEXTURE_2D_MULTISAMPLE");
#endif
#if defined(GL_TEXTURE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-TEXTURE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_TEXTURE_2D_MULTISAMPLE_ARRAY, "GL_TEXTURE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_TEXTURE_COMPRESSED)
defconsti(env, "GL-TEXTURE-COMPRESSED", (GLenum) GL_TEXTURE_COMPRESSED, "GL_TEXTURE_COMPRESSED");
#endif
#if defined(GL_INTERNALFORMAT_SUPPORTED)
defconsti(env, "GL-INTERNALFORMAT-SUPPORTED", (GLenum) GL_INTERNALFORMAT_SUPPORTED, "GL_INTERNALFORMAT_SUPPORTED");
#endif
#if defined(GL_INTERNALFORMAT_PREFERRED)
defconsti(env, "GL-INTERNALFORMAT-PREFERRED", (GLenum) GL_INTERNALFORMAT_PREFERRED, "GL_INTERNALFORMAT_PREFERRED");
#endif
#if defined(GL_INTERNALFORMAT_RED_SIZE)
defconsti(env, "GL-INTERNALFORMAT-RED-SIZE", (GLenum) GL_INTERNALFORMAT_RED_SIZE, "GL_INTERNALFORMAT_RED_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_GREEN_SIZE)
defconsti(env, "GL-INTERNALFORMAT-GREEN-SIZE", (GLenum) GL_INTERNALFORMAT_GREEN_SIZE, "GL_INTERNALFORMAT_GREEN_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_BLUE_SIZE)
defconsti(env, "GL-INTERNALFORMAT-BLUE-SIZE", (GLenum) GL_INTERNALFORMAT_BLUE_SIZE, "GL_INTERNALFORMAT_BLUE_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_ALPHA_SIZE)
defconsti(env, "GL-INTERNALFORMAT-ALPHA-SIZE", (GLenum) GL_INTERNALFORMAT_ALPHA_SIZE, "GL_INTERNALFORMAT_ALPHA_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_DEPTH_SIZE)
defconsti(env, "GL-INTERNALFORMAT-DEPTH-SIZE", (GLenum) GL_INTERNALFORMAT_DEPTH_SIZE, "GL_INTERNALFORMAT_DEPTH_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_STENCIL_SIZE)
defconsti(env, "GL-INTERNALFORMAT-STENCIL-SIZE", (GLenum) GL_INTERNALFORMAT_STENCIL_SIZE, "GL_INTERNALFORMAT_STENCIL_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_SHARED_SIZE)
defconsti(env, "GL-INTERNALFORMAT-SHARED-SIZE", (GLenum) GL_INTERNALFORMAT_SHARED_SIZE, "GL_INTERNALFORMAT_SHARED_SIZE");
#endif
#if defined(GL_INTERNALFORMAT_RED_TYPE)
defconsti(env, "GL-INTERNALFORMAT-RED-TYPE", (GLenum) GL_INTERNALFORMAT_RED_TYPE, "GL_INTERNALFORMAT_RED_TYPE");
#endif
#if defined(GL_INTERNALFORMAT_GREEN_TYPE)
defconsti(env, "GL-INTERNALFORMAT-GREEN-TYPE", (GLenum) GL_INTERNALFORMAT_GREEN_TYPE, "GL_INTERNALFORMAT_GREEN_TYPE");
#endif
#if defined(GL_INTERNALFORMAT_BLUE_TYPE)
defconsti(env, "GL-INTERNALFORMAT-BLUE-TYPE", (GLenum) GL_INTERNALFORMAT_BLUE_TYPE, "GL_INTERNALFORMAT_BLUE_TYPE");
#endif
#if defined(GL_INTERNALFORMAT_ALPHA_TYPE)
defconsti(env, "GL-INTERNALFORMAT-ALPHA-TYPE", (GLenum) GL_INTERNALFORMAT_ALPHA_TYPE, "GL_INTERNALFORMAT_ALPHA_TYPE");
#endif
#if defined(GL_INTERNALFORMAT_DEPTH_TYPE)
defconsti(env, "GL-INTERNALFORMAT-DEPTH-TYPE", (GLenum) GL_INTERNALFORMAT_DEPTH_TYPE, "GL_INTERNALFORMAT_DEPTH_TYPE");
#endif
#if defined(GL_INTERNALFORMAT_STENCIL_TYPE)
defconsti(env, "GL-INTERNALFORMAT-STENCIL-TYPE", (GLenum) GL_INTERNALFORMAT_STENCIL_TYPE, "GL_INTERNALFORMAT_STENCIL_TYPE");
#endif
#if defined(GL_MAX_WIDTH)
defconsti(env, "GL-MAX-WIDTH", (GLenum) GL_MAX_WIDTH, "GL_MAX_WIDTH");
#endif
#if defined(GL_MAX_HEIGHT)
defconsti(env, "GL-MAX-HEIGHT", (GLenum) GL_MAX_HEIGHT, "GL_MAX_HEIGHT");
#endif
#if defined(GL_MAX_DEPTH)
defconsti(env, "GL-MAX-DEPTH", (GLenum) GL_MAX_DEPTH, "GL_MAX_DEPTH");
#endif
#if defined(GL_MAX_LAYERS)
defconsti(env, "GL-MAX-LAYERS", (GLenum) GL_MAX_LAYERS, "GL_MAX_LAYERS");
#endif
#if defined(GL_MAX_COMBINED_DIMENSIONS)
defconsti(env, "GL-MAX-COMBINED-DIMENSIONS", (GLenum) GL_MAX_COMBINED_DIMENSIONS, "GL_MAX_COMBINED_DIMENSIONS");
#endif
#if defined(GL_COLOR_COMPONENTS)
defconsti(env, "GL-COLOR-COMPONENTS", (GLenum) GL_COLOR_COMPONENTS, "GL_COLOR_COMPONENTS");
#endif
#if defined(GL_DEPTH_COMPONENTS)
defconsti(env, "GL-DEPTH-COMPONENTS", (GLenum) GL_DEPTH_COMPONENTS, "GL_DEPTH_COMPONENTS");
#endif
#if defined(GL_STENCIL_COMPONENTS)
defconsti(env, "GL-STENCIL-COMPONENTS", (GLenum) GL_STENCIL_COMPONENTS, "GL_STENCIL_COMPONENTS");
#endif
#if defined(GL_COLOR_RENDERABLE)
defconsti(env, "GL-COLOR-RENDERABLE", (GLenum) GL_COLOR_RENDERABLE, "GL_COLOR_RENDERABLE");
#endif
#if defined(GL_DEPTH_RENDERABLE)
defconsti(env, "GL-DEPTH-RENDERABLE", (GLenum) GL_DEPTH_RENDERABLE, "GL_DEPTH_RENDERABLE");
#endif
#if defined(GL_STENCIL_RENDERABLE)
defconsti(env, "GL-STENCIL-RENDERABLE", (GLenum) GL_STENCIL_RENDERABLE, "GL_STENCIL_RENDERABLE");
#endif
#if defined(GL_FRAMEBUFFER_RENDERABLE)
defconsti(env, "GL-FRAMEBUFFER-RENDERABLE", (GLenum) GL_FRAMEBUFFER_RENDERABLE, "GL_FRAMEBUFFER_RENDERABLE");
#endif
#if defined(GL_FRAMEBUFFER_RENDERABLE_LAYERED)
defconsti(env, "GL-FRAMEBUFFER-RENDERABLE-LAYERED", (GLenum) GL_FRAMEBUFFER_RENDERABLE_LAYERED, "GL_FRAMEBUFFER_RENDERABLE_LAYERED");
#endif
#if defined(GL_FRAMEBUFFER_BLEND)
defconsti(env, "GL-FRAMEBUFFER-BLEND", (GLenum) GL_FRAMEBUFFER_BLEND, "GL_FRAMEBUFFER_BLEND");
#endif
#if defined(GL_READ_PIXELS)
defconsti(env, "GL-READ-PIXELS", (GLenum) GL_READ_PIXELS, "GL_READ_PIXELS");
#endif
#if defined(GL_READ_PIXELS_FORMAT)
defconsti(env, "GL-READ-PIXELS-FORMAT", (GLenum) GL_READ_PIXELS_FORMAT, "GL_READ_PIXELS_FORMAT");
#endif
#if defined(GL_READ_PIXELS_TYPE)
defconsti(env, "GL-READ-PIXELS-TYPE", (GLenum) GL_READ_PIXELS_TYPE, "GL_READ_PIXELS_TYPE");
#endif
#if defined(GL_TEXTURE_IMAGE_FORMAT)
defconsti(env, "GL-TEXTURE-IMAGE-FORMAT", (GLenum) GL_TEXTURE_IMAGE_FORMAT, "GL_TEXTURE_IMAGE_FORMAT");
#endif
#if defined(GL_TEXTURE_IMAGE_TYPE)
defconsti(env, "GL-TEXTURE-IMAGE-TYPE", (GLenum) GL_TEXTURE_IMAGE_TYPE, "GL_TEXTURE_IMAGE_TYPE");
#endif
#if defined(GL_GET_TEXTURE_IMAGE_FORMAT)
defconsti(env, "GL-GET-TEXTURE-IMAGE-FORMAT", (GLenum) GL_GET_TEXTURE_IMAGE_FORMAT, "GL_GET_TEXTURE_IMAGE_FORMAT");
#endif
#if defined(GL_GET_TEXTURE_IMAGE_TYPE)
defconsti(env, "GL-GET-TEXTURE-IMAGE-TYPE", (GLenum) GL_GET_TEXTURE_IMAGE_TYPE, "GL_GET_TEXTURE_IMAGE_TYPE");
#endif
#if defined(GL_MIPMAP)
defconsti(env, "GL-MIPMAP", (GLenum) GL_MIPMAP, "GL_MIPMAP");
#endif
#if defined(GL_MANUAL_GENERATE_MIPMAP)
defconsti(env, "GL-MANUAL-GENERATE-MIPMAP", (GLenum) GL_MANUAL_GENERATE_MIPMAP, "GL_MANUAL_GENERATE_MIPMAP");
#endif
#if defined(GL_AUTO_GENERATE_MIPMAP)
defconsti(env, "GL-AUTO-GENERATE-MIPMAP", (GLenum) GL_AUTO_GENERATE_MIPMAP, "GL_AUTO_GENERATE_MIPMAP");
#endif
#if defined(GL_COLOR_ENCODING)
defconsti(env, "GL-COLOR-ENCODING", (GLenum) GL_COLOR_ENCODING, "GL_COLOR_ENCODING");
#endif
#if defined(GL_SRGB_READ)
defconsti(env, "GL-SRGB-READ", (GLenum) GL_SRGB_READ, "GL_SRGB_READ");
#endif
#if defined(GL_SRGB_WRITE)
defconsti(env, "GL-SRGB-WRITE", (GLenum) GL_SRGB_WRITE, "GL_SRGB_WRITE");
#endif
#if defined(GL_SRGB_DECODE_ARB)
defconsti(env, "GL-SRGB-DECODE-ARB", (GLenum) GL_SRGB_DECODE_ARB, "GL_SRGB_DECODE_ARB");
#endif
#if defined(GL_FILTER)
defconsti(env, "GL-FILTER", (GLenum) GL_FILTER, "GL_FILTER");
#endif
#if defined(GL_VERTEX_TEXTURE)
defconsti(env, "GL-VERTEX-TEXTURE", (GLenum) GL_VERTEX_TEXTURE, "GL_VERTEX_TEXTURE");
#endif
#if defined(GL_TESS_CONTROL_TEXTURE)
defconsti(env, "GL-TESS-CONTROL-TEXTURE", (GLenum) GL_TESS_CONTROL_TEXTURE, "GL_TESS_CONTROL_TEXTURE");
#endif
#if defined(GL_TESS_EVALUATION_TEXTURE)
defconsti(env, "GL-TESS-EVALUATION-TEXTURE", (GLenum) GL_TESS_EVALUATION_TEXTURE, "GL_TESS_EVALUATION_TEXTURE");
#endif
#if defined(GL_GEOMETRY_TEXTURE)
defconsti(env, "GL-GEOMETRY-TEXTURE", (GLenum) GL_GEOMETRY_TEXTURE, "GL_GEOMETRY_TEXTURE");
#endif
#if defined(GL_FRAGMENT_TEXTURE)
defconsti(env, "GL-FRAGMENT-TEXTURE", (GLenum) GL_FRAGMENT_TEXTURE, "GL_FRAGMENT_TEXTURE");
#endif
#if defined(GL_COMPUTE_TEXTURE)
defconsti(env, "GL-COMPUTE-TEXTURE", (GLenum) GL_COMPUTE_TEXTURE, "GL_COMPUTE_TEXTURE");
#endif
#if defined(GL_TEXTURE_SHADOW)
defconsti(env, "GL-TEXTURE-SHADOW", (GLenum) GL_TEXTURE_SHADOW, "GL_TEXTURE_SHADOW");
#endif
#if defined(GL_TEXTURE_GATHER)
defconsti(env, "GL-TEXTURE-GATHER", (GLenum) GL_TEXTURE_GATHER, "GL_TEXTURE_GATHER");
#endif
#if defined(GL_TEXTURE_GATHER_SHADOW)
defconsti(env, "GL-TEXTURE-GATHER-SHADOW", (GLenum) GL_TEXTURE_GATHER_SHADOW, "GL_TEXTURE_GATHER_SHADOW");
#endif
#if defined(GL_SHADER_IMAGE_LOAD)
defconsti(env, "GL-SHADER-IMAGE-LOAD", (GLenum) GL_SHADER_IMAGE_LOAD, "GL_SHADER_IMAGE_LOAD");
#endif
#if defined(GL_SHADER_IMAGE_STORE)
defconsti(env, "GL-SHADER-IMAGE-STORE", (GLenum) GL_SHADER_IMAGE_STORE, "GL_SHADER_IMAGE_STORE");
#endif
#if defined(GL_SHADER_IMAGE_ATOMIC)
defconsti(env, "GL-SHADER-IMAGE-ATOMIC", (GLenum) GL_SHADER_IMAGE_ATOMIC, "GL_SHADER_IMAGE_ATOMIC");
#endif
#if defined(GL_IMAGE_TEXEL_SIZE)
defconsti(env, "GL-IMAGE-TEXEL-SIZE", (GLenum) GL_IMAGE_TEXEL_SIZE, "GL_IMAGE_TEXEL_SIZE");
#endif
#if defined(GL_IMAGE_COMPATIBILITY_CLASS)
defconsti(env, "GL-IMAGE-COMPATIBILITY-CLASS", (GLenum) GL_IMAGE_COMPATIBILITY_CLASS, "GL_IMAGE_COMPATIBILITY_CLASS");
#endif
#if defined(GL_IMAGE_PIXEL_FORMAT)
defconsti(env, "GL-IMAGE-PIXEL-FORMAT", (GLenum) GL_IMAGE_PIXEL_FORMAT, "GL_IMAGE_PIXEL_FORMAT");
#endif
#if defined(GL_IMAGE_PIXEL_TYPE)
defconsti(env, "GL-IMAGE-PIXEL-TYPE", (GLenum) GL_IMAGE_PIXEL_TYPE, "GL_IMAGE_PIXEL_TYPE");
#endif
#if defined(GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST)
defconsti(env, "GL-SIMULTANEOUS-TEXTURE-AND-DEPTH-TEST", (GLenum) GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST, "GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST");
#endif
#if defined(GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST)
defconsti(env, "GL-SIMULTANEOUS-TEXTURE-AND-STENCIL-TEST", (GLenum) GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST, "GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST");
#endif
#if defined(GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE)
defconsti(env, "GL-SIMULTANEOUS-TEXTURE-AND-DEPTH-WRITE", (GLenum) GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE, "GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE");
#endif
#if defined(GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE)
defconsti(env, "GL-SIMULTANEOUS-TEXTURE-AND-STENCIL-WRITE", (GLenum) GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE, "GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE");
#endif
#if defined(GL_TEXTURE_COMPRESSED_BLOCK_WIDTH)
defconsti(env, "GL-TEXTURE-COMPRESSED-BLOCK-WIDTH", (GLenum) GL_TEXTURE_COMPRESSED_BLOCK_WIDTH, "GL_TEXTURE_COMPRESSED_BLOCK_WIDTH");
#endif
#if defined(GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT)
defconsti(env, "GL-TEXTURE-COMPRESSED-BLOCK-HEIGHT", (GLenum) GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT, "GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT");
#endif
#if defined(GL_TEXTURE_COMPRESSED_BLOCK_SIZE)
defconsti(env, "GL-TEXTURE-COMPRESSED-BLOCK-SIZE", (GLenum) GL_TEXTURE_COMPRESSED_BLOCK_SIZE, "GL_TEXTURE_COMPRESSED_BLOCK_SIZE");
#endif
#if defined(GL_CLEAR_BUFFER)
defconsti(env, "GL-CLEAR-BUFFER", (GLenum) GL_CLEAR_BUFFER, "GL_CLEAR_BUFFER");
#endif
#if defined(GL_TEXTURE_VIEW)
defconsti(env, "GL-TEXTURE-VIEW", (GLenum) GL_TEXTURE_VIEW, "GL_TEXTURE_VIEW");
#endif
#if defined(GL_VIEW_COMPATIBILITY_CLASS)
defconsti(env, "GL-VIEW-COMPATIBILITY-CLASS", (GLenum) GL_VIEW_COMPATIBILITY_CLASS, "GL_VIEW_COMPATIBILITY_CLASS");
#endif
#if defined(GL_FULL_SUPPORT)
defconsti(env, "GL-FULL-SUPPORT", (GLenum) GL_FULL_SUPPORT, "GL_FULL_SUPPORT");
#endif
#if defined(GL_CAVEAT_SUPPORT)
defconsti(env, "GL-CAVEAT-SUPPORT", (GLenum) GL_CAVEAT_SUPPORT, "GL_CAVEAT_SUPPORT");
#endif
#if defined(GL_IMAGE_CLASS_4_X_32)
defconsti(env, "GL-IMAGE-CLASS-4-X-32", (GLenum) GL_IMAGE_CLASS_4_X_32, "GL_IMAGE_CLASS_4_X_32");
#endif
#if defined(GL_IMAGE_CLASS_2_X_32)
defconsti(env, "GL-IMAGE-CLASS-2-X-32", (GLenum) GL_IMAGE_CLASS_2_X_32, "GL_IMAGE_CLASS_2_X_32");
#endif
#if defined(GL_IMAGE_CLASS_1_X_32)
defconsti(env, "GL-IMAGE-CLASS-1-X-32", (GLenum) GL_IMAGE_CLASS_1_X_32, "GL_IMAGE_CLASS_1_X_32");
#endif
#if defined(GL_IMAGE_CLASS_4_X_16)
defconsti(env, "GL-IMAGE-CLASS-4-X-16", (GLenum) GL_IMAGE_CLASS_4_X_16, "GL_IMAGE_CLASS_4_X_16");
#endif
#if defined(GL_IMAGE_CLASS_2_X_16)
defconsti(env, "GL-IMAGE-CLASS-2-X-16", (GLenum) GL_IMAGE_CLASS_2_X_16, "GL_IMAGE_CLASS_2_X_16");
#endif
#if defined(GL_IMAGE_CLASS_1_X_16)
defconsti(env, "GL-IMAGE-CLASS-1-X-16", (GLenum) GL_IMAGE_CLASS_1_X_16, "GL_IMAGE_CLASS_1_X_16");
#endif
#if defined(GL_IMAGE_CLASS_4_X_8)
defconsti(env, "GL-IMAGE-CLASS-4-X-8", (GLenum) GL_IMAGE_CLASS_4_X_8, "GL_IMAGE_CLASS_4_X_8");
#endif
#if defined(GL_IMAGE_CLASS_2_X_8)
defconsti(env, "GL-IMAGE-CLASS-2-X-8", (GLenum) GL_IMAGE_CLASS_2_X_8, "GL_IMAGE_CLASS_2_X_8");
#endif
#if defined(GL_IMAGE_CLASS_1_X_8)
defconsti(env, "GL-IMAGE-CLASS-1-X-8", (GLenum) GL_IMAGE_CLASS_1_X_8, "GL_IMAGE_CLASS_1_X_8");
#endif
#if defined(GL_IMAGE_CLASS_11_11_10)
defconsti(env, "GL-IMAGE-CLASS-11-11-10", (GLenum) GL_IMAGE_CLASS_11_11_10, "GL_IMAGE_CLASS_11_11_10");
#endif
#if defined(GL_IMAGE_CLASS_10_10_10_2)
defconsti(env, "GL-IMAGE-CLASS-10-10-10-2", (GLenum) GL_IMAGE_CLASS_10_10_10_2, "GL_IMAGE_CLASS_10_10_10_2");
#endif
#if defined(GL_VIEW_CLASS_128_BITS)
defconsti(env, "GL-VIEW-CLASS-128-BITS", (GLenum) GL_VIEW_CLASS_128_BITS, "GL_VIEW_CLASS_128_BITS");
#endif
#if defined(GL_VIEW_CLASS_96_BITS)
defconsti(env, "GL-VIEW-CLASS-96-BITS", (GLenum) GL_VIEW_CLASS_96_BITS, "GL_VIEW_CLASS_96_BITS");
#endif
#if defined(GL_VIEW_CLASS_64_BITS)
defconsti(env, "GL-VIEW-CLASS-64-BITS", (GLenum) GL_VIEW_CLASS_64_BITS, "GL_VIEW_CLASS_64_BITS");
#endif
#if defined(GL_VIEW_CLASS_48_BITS)
defconsti(env, "GL-VIEW-CLASS-48-BITS", (GLenum) GL_VIEW_CLASS_48_BITS, "GL_VIEW_CLASS_48_BITS");
#endif
#if defined(GL_VIEW_CLASS_32_BITS)
defconsti(env, "GL-VIEW-CLASS-32-BITS", (GLenum) GL_VIEW_CLASS_32_BITS, "GL_VIEW_CLASS_32_BITS");
#endif
#if defined(GL_VIEW_CLASS_24_BITS)
defconsti(env, "GL-VIEW-CLASS-24-BITS", (GLenum) GL_VIEW_CLASS_24_BITS, "GL_VIEW_CLASS_24_BITS");
#endif
#if defined(GL_VIEW_CLASS_16_BITS)
defconsti(env, "GL-VIEW-CLASS-16-BITS", (GLenum) GL_VIEW_CLASS_16_BITS, "GL_VIEW_CLASS_16_BITS");
#endif
#if defined(GL_VIEW_CLASS_8_BITS)
defconsti(env, "GL-VIEW-CLASS-8-BITS", (GLenum) GL_VIEW_CLASS_8_BITS, "GL_VIEW_CLASS_8_BITS");
#endif
#if defined(GL_VIEW_CLASS_S3TC_DXT1_RGB)
defconsti(env, "GL-VIEW-CLASS-S3TC-DXT1-RGB", (GLenum) GL_VIEW_CLASS_S3TC_DXT1_RGB, "GL_VIEW_CLASS_S3TC_DXT1_RGB");
#endif
#if defined(GL_VIEW_CLASS_S3TC_DXT1_RGBA)
defconsti(env, "GL-VIEW-CLASS-S3TC-DXT1-RGBA", (GLenum) GL_VIEW_CLASS_S3TC_DXT1_RGBA, "GL_VIEW_CLASS_S3TC_DXT1_RGBA");
#endif
#if defined(GL_VIEW_CLASS_S3TC_DXT3_RGBA)
defconsti(env, "GL-VIEW-CLASS-S3TC-DXT3-RGBA", (GLenum) GL_VIEW_CLASS_S3TC_DXT3_RGBA, "GL_VIEW_CLASS_S3TC_DXT3_RGBA");
#endif
#if defined(GL_VIEW_CLASS_S3TC_DXT5_RGBA)
defconsti(env, "GL-VIEW-CLASS-S3TC-DXT5-RGBA", (GLenum) GL_VIEW_CLASS_S3TC_DXT5_RGBA, "GL_VIEW_CLASS_S3TC_DXT5_RGBA");
#endif
#if defined(GL_VIEW_CLASS_RGTC1_RED)
defconsti(env, "GL-VIEW-CLASS-RGTC1-RED", (GLenum) GL_VIEW_CLASS_RGTC1_RED, "GL_VIEW_CLASS_RGTC1_RED");
#endif
#if defined(GL_VIEW_CLASS_RGTC2_RG)
defconsti(env, "GL-VIEW-CLASS-RGTC2-RG", (GLenum) GL_VIEW_CLASS_RGTC2_RG, "GL_VIEW_CLASS_RGTC2_RG");
#endif
#if defined(GL_VIEW_CLASS_BPTC_UNORM)
defconsti(env, "GL-VIEW-CLASS-BPTC-UNORM", (GLenum) GL_VIEW_CLASS_BPTC_UNORM, "GL_VIEW_CLASS_BPTC_UNORM");
#endif
#if defined(GL_VIEW_CLASS_BPTC_FLOAT)
defconsti(env, "GL-VIEW-CLASS-BPTC-FLOAT", (GLenum) GL_VIEW_CLASS_BPTC_FLOAT, "GL_VIEW_CLASS_BPTC_FLOAT");
#endif
#if defined(GL_VIEW_CLASS_EAC_R11)
defconsti(env, "GL-VIEW-CLASS-EAC-R11", (GLenum) GL_VIEW_CLASS_EAC_R11, "GL_VIEW_CLASS_EAC_R11");
#endif
#if defined(GL_VIEW_CLASS_EAC_RG11)
defconsti(env, "GL-VIEW-CLASS-EAC-RG11", (GLenum) GL_VIEW_CLASS_EAC_RG11, "GL_VIEW_CLASS_EAC_RG11");
#endif
#if defined(GL_VIEW_CLASS_ETC2_RGB)
defconsti(env, "GL-VIEW-CLASS-ETC2-RGB", (GLenum) GL_VIEW_CLASS_ETC2_RGB, "GL_VIEW_CLASS_ETC2_RGB");
#endif
#if defined(GL_VIEW_CLASS_ETC2_RGBA)
defconsti(env, "GL-VIEW-CLASS-ETC2-RGBA", (GLenum) GL_VIEW_CLASS_ETC2_RGBA, "GL_VIEW_CLASS_ETC2_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ETC2_EAC_RGBA)
defconsti(env, "GL-VIEW-CLASS-ETC2-EAC-RGBA", (GLenum) GL_VIEW_CLASS_ETC2_EAC_RGBA, "GL_VIEW_CLASS_ETC2_EAC_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_4x4_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-4x4-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_4x4_RGBA, "GL_VIEW_CLASS_ASTC_4x4_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_5x4_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-5x4-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_5x4_RGBA, "GL_VIEW_CLASS_ASTC_5x4_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_5x5_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-5x5-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_5x5_RGBA, "GL_VIEW_CLASS_ASTC_5x5_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_6x5_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-6x5-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_6x5_RGBA, "GL_VIEW_CLASS_ASTC_6x5_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_6x6_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-6x6-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_6x6_RGBA, "GL_VIEW_CLASS_ASTC_6x6_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_8x5_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-8x5-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_8x5_RGBA, "GL_VIEW_CLASS_ASTC_8x5_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_8x6_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-8x6-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_8x6_RGBA, "GL_VIEW_CLASS_ASTC_8x6_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_8x8_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-8x8-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_8x8_RGBA, "GL_VIEW_CLASS_ASTC_8x8_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_10x5_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-10x5-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_10x5_RGBA, "GL_VIEW_CLASS_ASTC_10x5_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_10x6_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-10x6-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_10x6_RGBA, "GL_VIEW_CLASS_ASTC_10x6_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_10x8_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-10x8-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_10x8_RGBA, "GL_VIEW_CLASS_ASTC_10x8_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_10x10_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-10x10-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_10x10_RGBA, "GL_VIEW_CLASS_ASTC_10x10_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_12x10_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-12x10-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_12x10_RGBA, "GL_VIEW_CLASS_ASTC_12x10_RGBA");
#endif
#if defined(GL_VIEW_CLASS_ASTC_12x12_RGBA)
defconsti(env, "GL-VIEW-CLASS-ASTC-12x12-RGBA", (GLenum) GL_VIEW_CLASS_ASTC_12x12_RGBA, "GL_VIEW_CLASS_ASTC_12x12_RGBA");
#endif
#if defined(GL_MIN_MAP_BUFFER_ALIGNMENT)
defconsti(env, "GL-MIN-MAP-BUFFER-ALIGNMENT", (GLenum) GL_MIN_MAP_BUFFER_ALIGNMENT, "GL_MIN_MAP_BUFFER_ALIGNMENT");
#endif
#if defined(GL_MAP_READ_BIT)
defconsti(env, "GL-MAP-READ-BIT", (GLenum) GL_MAP_READ_BIT, "GL_MAP_READ_BIT");
#endif
#if defined(GL_MAP_WRITE_BIT)
defconsti(env, "GL-MAP-WRITE-BIT", (GLenum) GL_MAP_WRITE_BIT, "GL_MAP_WRITE_BIT");
#endif
#if defined(GL_MAP_INVALIDATE_RANGE_BIT)
defconsti(env, "GL-MAP-INVALIDATE-RANGE-BIT", (GLenum) GL_MAP_INVALIDATE_RANGE_BIT, "GL_MAP_INVALIDATE_RANGE_BIT");
#endif
#if defined(GL_MAP_INVALIDATE_BUFFER_BIT)
defconsti(env, "GL-MAP-INVALIDATE-BUFFER-BIT", (GLenum) GL_MAP_INVALIDATE_BUFFER_BIT, "GL_MAP_INVALIDATE_BUFFER_BIT");
#endif
#if defined(GL_MAP_FLUSH_EXPLICIT_BIT)
defconsti(env, "GL-MAP-FLUSH-EXPLICIT-BIT", (GLenum) GL_MAP_FLUSH_EXPLICIT_BIT, "GL_MAP_FLUSH_EXPLICIT_BIT");
#endif
#if defined(GL_MAP_UNSYNCHRONIZED_BIT)
defconsti(env, "GL-MAP-UNSYNCHRONIZED-BIT", (GLenum) GL_MAP_UNSYNCHRONIZED_BIT, "GL_MAP_UNSYNCHRONIZED_BIT");
#endif
#if defined(GL_MATRIX_PALETTE_ARB)
defconsti(env, "GL-MATRIX-PALETTE-ARB", (GLenum) GL_MATRIX_PALETTE_ARB, "GL_MATRIX_PALETTE_ARB");
#endif
#if defined(GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB)
defconsti(env, "GL-MAX-MATRIX-PALETTE-STACK-DEPTH-ARB", (GLenum) GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB, "GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB");
#endif
#if defined(GL_MAX_PALETTE_MATRICES_ARB)
defconsti(env, "GL-MAX-PALETTE-MATRICES-ARB", (GLenum) GL_MAX_PALETTE_MATRICES_ARB, "GL_MAX_PALETTE_MATRICES_ARB");
#endif
#if defined(GL_CURRENT_PALETTE_MATRIX_ARB)
defconsti(env, "GL-CURRENT-PALETTE-MATRIX-ARB", (GLenum) GL_CURRENT_PALETTE_MATRIX_ARB, "GL_CURRENT_PALETTE_MATRIX_ARB");
#endif
#if defined(GL_MATRIX_INDEX_ARRAY_ARB)
defconsti(env, "GL-MATRIX-INDEX-ARRAY-ARB", (GLenum) GL_MATRIX_INDEX_ARRAY_ARB, "GL_MATRIX_INDEX_ARRAY_ARB");
#endif
#if defined(GL_CURRENT_MATRIX_INDEX_ARB)
defconsti(env, "GL-CURRENT-MATRIX-INDEX-ARB", (GLenum) GL_CURRENT_MATRIX_INDEX_ARB, "GL_CURRENT_MATRIX_INDEX_ARB");
#endif
#if defined(GL_MATRIX_INDEX_ARRAY_SIZE_ARB)
defconsti(env, "GL-MATRIX-INDEX-ARRAY-SIZE-ARB", (GLenum) GL_MATRIX_INDEX_ARRAY_SIZE_ARB, "GL_MATRIX_INDEX_ARRAY_SIZE_ARB");
#endif
#if defined(GL_MATRIX_INDEX_ARRAY_TYPE_ARB)
defconsti(env, "GL-MATRIX-INDEX-ARRAY-TYPE-ARB", (GLenum) GL_MATRIX_INDEX_ARRAY_TYPE_ARB, "GL_MATRIX_INDEX_ARRAY_TYPE_ARB");
#endif
#if defined(GL_MATRIX_INDEX_ARRAY_STRIDE_ARB)
defconsti(env, "GL-MATRIX-INDEX-ARRAY-STRIDE-ARB", (GLenum) GL_MATRIX_INDEX_ARRAY_STRIDE_ARB, "GL_MATRIX_INDEX_ARRAY_STRIDE_ARB");
#endif
#if defined(GL_MATRIX_INDEX_ARRAY_POINTER_ARB)
defconsti(env, "GL-MATRIX-INDEX-ARRAY-POINTER-ARB", (GLenum) GL_MATRIX_INDEX_ARRAY_POINTER_ARB, "GL_MATRIX_INDEX_ARRAY_POINTER_ARB");
#endif
#if defined(GL_MULTISAMPLE_ARB)
defconsti(env, "GL-MULTISAMPLE-ARB", (GLenum) GL_MULTISAMPLE_ARB, "GL_MULTISAMPLE_ARB");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_COVERAGE_ARB)
defconsti(env, "GL-SAMPLE-ALPHA-TO-COVERAGE-ARB", (GLenum) GL_SAMPLE_ALPHA_TO_COVERAGE_ARB, "GL_SAMPLE_ALPHA_TO_COVERAGE_ARB");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_ONE_ARB)
defconsti(env, "GL-SAMPLE-ALPHA-TO-ONE-ARB", (GLenum) GL_SAMPLE_ALPHA_TO_ONE_ARB, "GL_SAMPLE_ALPHA_TO_ONE_ARB");
#endif
#if defined(GL_SAMPLE_COVERAGE_ARB)
defconsti(env, "GL-SAMPLE-COVERAGE-ARB", (GLenum) GL_SAMPLE_COVERAGE_ARB, "GL_SAMPLE_COVERAGE_ARB");
#endif
#if defined(GL_SAMPLE_BUFFERS_ARB)
defconsti(env, "GL-SAMPLE-BUFFERS-ARB", (GLenum) GL_SAMPLE_BUFFERS_ARB, "GL_SAMPLE_BUFFERS_ARB");
#endif
#if defined(GL_SAMPLES_ARB)
defconsti(env, "GL-SAMPLES-ARB", (GLenum) GL_SAMPLES_ARB, "GL_SAMPLES_ARB");
#endif
#if defined(GL_SAMPLE_COVERAGE_VALUE_ARB)
defconsti(env, "GL-SAMPLE-COVERAGE-VALUE-ARB", (GLenum) GL_SAMPLE_COVERAGE_VALUE_ARB, "GL_SAMPLE_COVERAGE_VALUE_ARB");
#endif
#if defined(GL_SAMPLE_COVERAGE_INVERT_ARB)
defconsti(env, "GL-SAMPLE-COVERAGE-INVERT-ARB", (GLenum) GL_SAMPLE_COVERAGE_INVERT_ARB, "GL_SAMPLE_COVERAGE_INVERT_ARB");
#endif
#if defined(GL_MULTISAMPLE_BIT_ARB)
defconsti(env, "GL-MULTISAMPLE-BIT-ARB", (GLenum) GL_MULTISAMPLE_BIT_ARB, "GL_MULTISAMPLE_BIT_ARB");
#endif
#if defined(GL_TEXTURE0_ARB)
defconsti(env, "GL-TEXTURE0-ARB", (GLenum) GL_TEXTURE0_ARB, "GL_TEXTURE0_ARB");
#endif
#if defined(GL_TEXTURE1_ARB)
defconsti(env, "GL-TEXTURE1-ARB", (GLenum) GL_TEXTURE1_ARB, "GL_TEXTURE1_ARB");
#endif
#if defined(GL_TEXTURE2_ARB)
defconsti(env, "GL-TEXTURE2-ARB", (GLenum) GL_TEXTURE2_ARB, "GL_TEXTURE2_ARB");
#endif
#if defined(GL_TEXTURE3_ARB)
defconsti(env, "GL-TEXTURE3-ARB", (GLenum) GL_TEXTURE3_ARB, "GL_TEXTURE3_ARB");
#endif
#if defined(GL_TEXTURE4_ARB)
defconsti(env, "GL-TEXTURE4-ARB", (GLenum) GL_TEXTURE4_ARB, "GL_TEXTURE4_ARB");
#endif
#if defined(GL_TEXTURE5_ARB)
defconsti(env, "GL-TEXTURE5-ARB", (GLenum) GL_TEXTURE5_ARB, "GL_TEXTURE5_ARB");
#endif
#if defined(GL_TEXTURE6_ARB)
defconsti(env, "GL-TEXTURE6-ARB", (GLenum) GL_TEXTURE6_ARB, "GL_TEXTURE6_ARB");
#endif
#if defined(GL_TEXTURE7_ARB)
defconsti(env, "GL-TEXTURE7-ARB", (GLenum) GL_TEXTURE7_ARB, "GL_TEXTURE7_ARB");
#endif
#if defined(GL_TEXTURE8_ARB)
defconsti(env, "GL-TEXTURE8-ARB", (GLenum) GL_TEXTURE8_ARB, "GL_TEXTURE8_ARB");
#endif
#if defined(GL_TEXTURE9_ARB)
defconsti(env, "GL-TEXTURE9-ARB", (GLenum) GL_TEXTURE9_ARB, "GL_TEXTURE9_ARB");
#endif
#if defined(GL_TEXTURE10_ARB)
defconsti(env, "GL-TEXTURE10-ARB", (GLenum) GL_TEXTURE10_ARB, "GL_TEXTURE10_ARB");
#endif
#if defined(GL_TEXTURE11_ARB)
defconsti(env, "GL-TEXTURE11-ARB", (GLenum) GL_TEXTURE11_ARB, "GL_TEXTURE11_ARB");
#endif
#if defined(GL_TEXTURE12_ARB)
defconsti(env, "GL-TEXTURE12-ARB", (GLenum) GL_TEXTURE12_ARB, "GL_TEXTURE12_ARB");
#endif
#if defined(GL_TEXTURE13_ARB)
defconsti(env, "GL-TEXTURE13-ARB", (GLenum) GL_TEXTURE13_ARB, "GL_TEXTURE13_ARB");
#endif
#if defined(GL_TEXTURE14_ARB)
defconsti(env, "GL-TEXTURE14-ARB", (GLenum) GL_TEXTURE14_ARB, "GL_TEXTURE14_ARB");
#endif
#if defined(GL_TEXTURE15_ARB)
defconsti(env, "GL-TEXTURE15-ARB", (GLenum) GL_TEXTURE15_ARB, "GL_TEXTURE15_ARB");
#endif
#if defined(GL_TEXTURE16_ARB)
defconsti(env, "GL-TEXTURE16-ARB", (GLenum) GL_TEXTURE16_ARB, "GL_TEXTURE16_ARB");
#endif
#if defined(GL_TEXTURE17_ARB)
defconsti(env, "GL-TEXTURE17-ARB", (GLenum) GL_TEXTURE17_ARB, "GL_TEXTURE17_ARB");
#endif
#if defined(GL_TEXTURE18_ARB)
defconsti(env, "GL-TEXTURE18-ARB", (GLenum) GL_TEXTURE18_ARB, "GL_TEXTURE18_ARB");
#endif
#if defined(GL_TEXTURE19_ARB)
defconsti(env, "GL-TEXTURE19-ARB", (GLenum) GL_TEXTURE19_ARB, "GL_TEXTURE19_ARB");
#endif
#if defined(GL_TEXTURE20_ARB)
defconsti(env, "GL-TEXTURE20-ARB", (GLenum) GL_TEXTURE20_ARB, "GL_TEXTURE20_ARB");
#endif
#if defined(GL_TEXTURE21_ARB)
defconsti(env, "GL-TEXTURE21-ARB", (GLenum) GL_TEXTURE21_ARB, "GL_TEXTURE21_ARB");
#endif
#if defined(GL_TEXTURE22_ARB)
defconsti(env, "GL-TEXTURE22-ARB", (GLenum) GL_TEXTURE22_ARB, "GL_TEXTURE22_ARB");
#endif
#if defined(GL_TEXTURE23_ARB)
defconsti(env, "GL-TEXTURE23-ARB", (GLenum) GL_TEXTURE23_ARB, "GL_TEXTURE23_ARB");
#endif
#if defined(GL_TEXTURE24_ARB)
defconsti(env, "GL-TEXTURE24-ARB", (GLenum) GL_TEXTURE24_ARB, "GL_TEXTURE24_ARB");
#endif
#if defined(GL_TEXTURE25_ARB)
defconsti(env, "GL-TEXTURE25-ARB", (GLenum) GL_TEXTURE25_ARB, "GL_TEXTURE25_ARB");
#endif
#if defined(GL_TEXTURE26_ARB)
defconsti(env, "GL-TEXTURE26-ARB", (GLenum) GL_TEXTURE26_ARB, "GL_TEXTURE26_ARB");
#endif
#if defined(GL_TEXTURE27_ARB)
defconsti(env, "GL-TEXTURE27-ARB", (GLenum) GL_TEXTURE27_ARB, "GL_TEXTURE27_ARB");
#endif
#if defined(GL_TEXTURE28_ARB)
defconsti(env, "GL-TEXTURE28-ARB", (GLenum) GL_TEXTURE28_ARB, "GL_TEXTURE28_ARB");
#endif
#if defined(GL_TEXTURE29_ARB)
defconsti(env, "GL-TEXTURE29-ARB", (GLenum) GL_TEXTURE29_ARB, "GL_TEXTURE29_ARB");
#endif
#if defined(GL_TEXTURE30_ARB)
defconsti(env, "GL-TEXTURE30-ARB", (GLenum) GL_TEXTURE30_ARB, "GL_TEXTURE30_ARB");
#endif
#if defined(GL_TEXTURE31_ARB)
defconsti(env, "GL-TEXTURE31-ARB", (GLenum) GL_TEXTURE31_ARB, "GL_TEXTURE31_ARB");
#endif
#if defined(GL_ACTIVE_TEXTURE_ARB)
defconsti(env, "GL-ACTIVE-TEXTURE-ARB", (GLenum) GL_ACTIVE_TEXTURE_ARB, "GL_ACTIVE_TEXTURE_ARB");
#endif
#if defined(GL_CLIENT_ACTIVE_TEXTURE_ARB)
defconsti(env, "GL-CLIENT-ACTIVE-TEXTURE-ARB", (GLenum) GL_CLIENT_ACTIVE_TEXTURE_ARB, "GL_CLIENT_ACTIVE_TEXTURE_ARB");
#endif
#if defined(GL_MAX_TEXTURE_UNITS_ARB)
defconsti(env, "GL-MAX-TEXTURE-UNITS-ARB", (GLenum) GL_MAX_TEXTURE_UNITS_ARB, "GL_MAX_TEXTURE_UNITS_ARB");
#endif
#if defined(GL_QUERY_COUNTER_BITS_ARB)
defconsti(env, "GL-QUERY-COUNTER-BITS-ARB", (GLenum) GL_QUERY_COUNTER_BITS_ARB, "GL_QUERY_COUNTER_BITS_ARB");
#endif
#if defined(GL_CURRENT_QUERY_ARB)
defconsti(env, "GL-CURRENT-QUERY-ARB", (GLenum) GL_CURRENT_QUERY_ARB, "GL_CURRENT_QUERY_ARB");
#endif
#if defined(GL_QUERY_RESULT_ARB)
defconsti(env, "GL-QUERY-RESULT-ARB", (GLenum) GL_QUERY_RESULT_ARB, "GL_QUERY_RESULT_ARB");
#endif
#if defined(GL_QUERY_RESULT_AVAILABLE_ARB)
defconsti(env, "GL-QUERY-RESULT-AVAILABLE-ARB", (GLenum) GL_QUERY_RESULT_AVAILABLE_ARB, "GL_QUERY_RESULT_AVAILABLE_ARB");
#endif
#if defined(GL_SAMPLES_PASSED_ARB)
defconsti(env, "GL-SAMPLES-PASSED-ARB", (GLenum) GL_SAMPLES_PASSED_ARB, "GL_SAMPLES_PASSED_ARB");
#endif
#if defined(GL_ANY_SAMPLES_PASSED)
defconsti(env, "GL-ANY-SAMPLES-PASSED", (GLenum) GL_ANY_SAMPLES_PASSED, "GL_ANY_SAMPLES_PASSED");
#endif
#if defined(GL_MAX_SHADER_COMPILER_THREADS_ARB)
defconsti(env, "GL-MAX-SHADER-COMPILER-THREADS-ARB", (GLenum) GL_MAX_SHADER_COMPILER_THREADS_ARB, "GL_MAX_SHADER_COMPILER_THREADS_ARB");
#endif
#if defined(GL_COMPLETION_STATUS_ARB)
defconsti(env, "GL-COMPLETION-STATUS-ARB", (GLenum) GL_COMPLETION_STATUS_ARB, "GL_COMPLETION_STATUS_ARB");
#endif
#if defined(GL_VERTICES_SUBMITTED_ARB)
defconsti(env, "GL-VERTICES-SUBMITTED-ARB", (GLenum) GL_VERTICES_SUBMITTED_ARB, "GL_VERTICES_SUBMITTED_ARB");
#endif
#if defined(GL_PRIMITIVES_SUBMITTED_ARB)
defconsti(env, "GL-PRIMITIVES-SUBMITTED-ARB", (GLenum) GL_PRIMITIVES_SUBMITTED_ARB, "GL_PRIMITIVES_SUBMITTED_ARB");
#endif
#if defined(GL_VERTEX_SHADER_INVOCATIONS_ARB)
defconsti(env, "GL-VERTEX-SHADER-INVOCATIONS-ARB", (GLenum) GL_VERTEX_SHADER_INVOCATIONS_ARB, "GL_VERTEX_SHADER_INVOCATIONS_ARB");
#endif
#if defined(GL_TESS_CONTROL_SHADER_PATCHES_ARB)
defconsti(env, "GL-TESS-CONTROL-SHADER-PATCHES-ARB", (GLenum) GL_TESS_CONTROL_SHADER_PATCHES_ARB, "GL_TESS_CONTROL_SHADER_PATCHES_ARB");
#endif
#if defined(GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB)
defconsti(env, "GL-TESS-EVALUATION-SHADER-INVOCATIONS-ARB", (GLenum) GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB, "GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB");
#endif
#if defined(GL_GEOMETRY_SHADER_INVOCATIONS)
defconsti(env, "GL-GEOMETRY-SHADER-INVOCATIONS", (GLenum) GL_GEOMETRY_SHADER_INVOCATIONS, "GL_GEOMETRY_SHADER_INVOCATIONS");
#endif
#if defined(GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB)
defconsti(env, "GL-GEOMETRY-SHADER-PRIMITIVES-EMITTED-ARB", (GLenum) GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB, "GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB");
#endif
#if defined(GL_FRAGMENT_SHADER_INVOCATIONS_ARB)
defconsti(env, "GL-FRAGMENT-SHADER-INVOCATIONS-ARB", (GLenum) GL_FRAGMENT_SHADER_INVOCATIONS_ARB, "GL_FRAGMENT_SHADER_INVOCATIONS_ARB");
#endif
#if defined(GL_COMPUTE_SHADER_INVOCATIONS_ARB)
defconsti(env, "GL-COMPUTE-SHADER-INVOCATIONS-ARB", (GLenum) GL_COMPUTE_SHADER_INVOCATIONS_ARB, "GL_COMPUTE_SHADER_INVOCATIONS_ARB");
#endif
#if defined(GL_CLIPPING_INPUT_PRIMITIVES_ARB)
defconsti(env, "GL-CLIPPING-INPUT-PRIMITIVES-ARB", (GLenum) GL_CLIPPING_INPUT_PRIMITIVES_ARB, "GL_CLIPPING_INPUT_PRIMITIVES_ARB");
#endif
#if defined(GL_CLIPPING_OUTPUT_PRIMITIVES_ARB)
defconsti(env, "GL-CLIPPING-OUTPUT-PRIMITIVES-ARB", (GLenum) GL_CLIPPING_OUTPUT_PRIMITIVES_ARB, "GL_CLIPPING_OUTPUT_PRIMITIVES_ARB");
#endif
#if defined(GL_PIXEL_PACK_BUFFER_ARB)
defconsti(env, "GL-PIXEL-PACK-BUFFER-ARB", (GLenum) GL_PIXEL_PACK_BUFFER_ARB, "GL_PIXEL_PACK_BUFFER_ARB");
#endif
#if defined(GL_PIXEL_UNPACK_BUFFER_ARB)
defconsti(env, "GL-PIXEL-UNPACK-BUFFER-ARB", (GLenum) GL_PIXEL_UNPACK_BUFFER_ARB, "GL_PIXEL_UNPACK_BUFFER_ARB");
#endif
#if defined(GL_PIXEL_PACK_BUFFER_BINDING_ARB)
defconsti(env, "GL-PIXEL-PACK-BUFFER-BINDING-ARB", (GLenum) GL_PIXEL_PACK_BUFFER_BINDING_ARB, "GL_PIXEL_PACK_BUFFER_BINDING_ARB");
#endif
#if defined(GL_PIXEL_UNPACK_BUFFER_BINDING_ARB)
defconsti(env, "GL-PIXEL-UNPACK-BUFFER-BINDING-ARB", (GLenum) GL_PIXEL_UNPACK_BUFFER_BINDING_ARB, "GL_PIXEL_UNPACK_BUFFER_BINDING_ARB");
#endif
#if defined(GL_POINT_SIZE_MIN_ARB)
defconsti(env, "GL-POINT-SIZE-MIN-ARB", (GLenum) GL_POINT_SIZE_MIN_ARB, "GL_POINT_SIZE_MIN_ARB");
#endif
#if defined(GL_POINT_SIZE_MAX_ARB)
defconsti(env, "GL-POINT-SIZE-MAX-ARB", (GLenum) GL_POINT_SIZE_MAX_ARB, "GL_POINT_SIZE_MAX_ARB");
#endif
#if defined(GL_POINT_FADE_THRESHOLD_SIZE_ARB)
defconsti(env, "GL-POINT-FADE-THRESHOLD-SIZE-ARB", (GLenum) GL_POINT_FADE_THRESHOLD_SIZE_ARB, "GL_POINT_FADE_THRESHOLD_SIZE_ARB");
#endif
#if defined(GL_POINT_DISTANCE_ATTENUATION_ARB)
defconsti(env, "GL-POINT-DISTANCE-ATTENUATION-ARB", (GLenum) GL_POINT_DISTANCE_ATTENUATION_ARB, "GL_POINT_DISTANCE_ATTENUATION_ARB");
#endif
#if defined(GL_POINT_SPRITE_ARB)
defconsti(env, "GL-POINT-SPRITE-ARB", (GLenum) GL_POINT_SPRITE_ARB, "GL_POINT_SPRITE_ARB");
#endif
#if defined(GL_COORD_REPLACE_ARB)
defconsti(env, "GL-COORD-REPLACE-ARB", (GLenum) GL_COORD_REPLACE_ARB, "GL_COORD_REPLACE_ARB");
#endif
#if defined(GL_POLYGON_OFFSET_CLAMP)
defconsti(env, "GL-POLYGON-OFFSET-CLAMP", (GLenum) GL_POLYGON_OFFSET_CLAMP, "GL_POLYGON_OFFSET_CLAMP");
#endif
#if defined(GL_UNIFORM)
defconsti(env, "GL-UNIFORM", (GLenum) GL_UNIFORM, "GL_UNIFORM");
#endif
#if defined(GL_UNIFORM_BLOCK)
defconsti(env, "GL-UNIFORM-BLOCK", (GLenum) GL_UNIFORM_BLOCK, "GL_UNIFORM_BLOCK");
#endif
#if defined(GL_PROGRAM_INPUT)
defconsti(env, "GL-PROGRAM-INPUT", (GLenum) GL_PROGRAM_INPUT, "GL_PROGRAM_INPUT");
#endif
#if defined(GL_PROGRAM_OUTPUT)
defconsti(env, "GL-PROGRAM-OUTPUT", (GLenum) GL_PROGRAM_OUTPUT, "GL_PROGRAM_OUTPUT");
#endif
#if defined(GL_BUFFER_VARIABLE)
defconsti(env, "GL-BUFFER-VARIABLE", (GLenum) GL_BUFFER_VARIABLE, "GL_BUFFER_VARIABLE");
#endif
#if defined(GL_SHADER_STORAGE_BLOCK)
defconsti(env, "GL-SHADER-STORAGE-BLOCK", (GLenum) GL_SHADER_STORAGE_BLOCK, "GL_SHADER_STORAGE_BLOCK");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER", (GLenum) GL_ATOMIC_COUNTER_BUFFER, "GL_ATOMIC_COUNTER_BUFFER");
#endif
#if defined(GL_VERTEX_SUBROUTINE)
defconsti(env, "GL-VERTEX-SUBROUTINE", (GLenum) GL_VERTEX_SUBROUTINE, "GL_VERTEX_SUBROUTINE");
#endif
#if defined(GL_TESS_CONTROL_SUBROUTINE)
defconsti(env, "GL-TESS-CONTROL-SUBROUTINE", (GLenum) GL_TESS_CONTROL_SUBROUTINE, "GL_TESS_CONTROL_SUBROUTINE");
#endif
#if defined(GL_TESS_EVALUATION_SUBROUTINE)
defconsti(env, "GL-TESS-EVALUATION-SUBROUTINE", (GLenum) GL_TESS_EVALUATION_SUBROUTINE, "GL_TESS_EVALUATION_SUBROUTINE");
#endif
#if defined(GL_GEOMETRY_SUBROUTINE)
defconsti(env, "GL-GEOMETRY-SUBROUTINE", (GLenum) GL_GEOMETRY_SUBROUTINE, "GL_GEOMETRY_SUBROUTINE");
#endif
#if defined(GL_FRAGMENT_SUBROUTINE)
defconsti(env, "GL-FRAGMENT-SUBROUTINE", (GLenum) GL_FRAGMENT_SUBROUTINE, "GL_FRAGMENT_SUBROUTINE");
#endif
#if defined(GL_COMPUTE_SUBROUTINE)
defconsti(env, "GL-COMPUTE-SUBROUTINE", (GLenum) GL_COMPUTE_SUBROUTINE, "GL_COMPUTE_SUBROUTINE");
#endif
#if defined(GL_VERTEX_SUBROUTINE_UNIFORM)
defconsti(env, "GL-VERTEX-SUBROUTINE-UNIFORM", (GLenum) GL_VERTEX_SUBROUTINE_UNIFORM, "GL_VERTEX_SUBROUTINE_UNIFORM");
#endif
#if defined(GL_TESS_CONTROL_SUBROUTINE_UNIFORM)
defconsti(env, "GL-TESS-CONTROL-SUBROUTINE-UNIFORM", (GLenum) GL_TESS_CONTROL_SUBROUTINE_UNIFORM, "GL_TESS_CONTROL_SUBROUTINE_UNIFORM");
#endif
#if defined(GL_TESS_EVALUATION_SUBROUTINE_UNIFORM)
defconsti(env, "GL-TESS-EVALUATION-SUBROUTINE-UNIFORM", (GLenum) GL_TESS_EVALUATION_SUBROUTINE_UNIFORM, "GL_TESS_EVALUATION_SUBROUTINE_UNIFORM");
#endif
#if defined(GL_GEOMETRY_SUBROUTINE_UNIFORM)
defconsti(env, "GL-GEOMETRY-SUBROUTINE-UNIFORM", (GLenum) GL_GEOMETRY_SUBROUTINE_UNIFORM, "GL_GEOMETRY_SUBROUTINE_UNIFORM");
#endif
#if defined(GL_FRAGMENT_SUBROUTINE_UNIFORM)
defconsti(env, "GL-FRAGMENT-SUBROUTINE-UNIFORM", (GLenum) GL_FRAGMENT_SUBROUTINE_UNIFORM, "GL_FRAGMENT_SUBROUTINE_UNIFORM");
#endif
#if defined(GL_COMPUTE_SUBROUTINE_UNIFORM)
defconsti(env, "GL-COMPUTE-SUBROUTINE-UNIFORM", (GLenum) GL_COMPUTE_SUBROUTINE_UNIFORM, "GL_COMPUTE_SUBROUTINE_UNIFORM");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_VARYING)
defconsti(env, "GL-TRANSFORM-FEEDBACK-VARYING", (GLenum) GL_TRANSFORM_FEEDBACK_VARYING, "GL_TRANSFORM_FEEDBACK_VARYING");
#endif
#if defined(GL_ACTIVE_RESOURCES)
defconsti(env, "GL-ACTIVE-RESOURCES", (GLenum) GL_ACTIVE_RESOURCES, "GL_ACTIVE_RESOURCES");
#endif
#if defined(GL_MAX_NAME_LENGTH)
defconsti(env, "GL-MAX-NAME-LENGTH", (GLenum) GL_MAX_NAME_LENGTH, "GL_MAX_NAME_LENGTH");
#endif
#if defined(GL_MAX_NUM_ACTIVE_VARIABLES)
defconsti(env, "GL-MAX-NUM-ACTIVE-VARIABLES", (GLenum) GL_MAX_NUM_ACTIVE_VARIABLES, "GL_MAX_NUM_ACTIVE_VARIABLES");
#endif
#if defined(GL_MAX_NUM_COMPATIBLE_SUBROUTINES)
defconsti(env, "GL-MAX-NUM-COMPATIBLE-SUBROUTINES", (GLenum) GL_MAX_NUM_COMPATIBLE_SUBROUTINES, "GL_MAX_NUM_COMPATIBLE_SUBROUTINES");
#endif
#if defined(GL_NAME_LENGTH)
defconsti(env, "GL-NAME-LENGTH", (GLenum) GL_NAME_LENGTH, "GL_NAME_LENGTH");
#endif
#if defined(GL_TYPE)
defconsti(env, "GL-TYPE", (GLenum) GL_TYPE, "GL_TYPE");
#endif
#if defined(GL_ARRAY_SIZE)
defconsti(env, "GL-ARRAY-SIZE", (GLenum) GL_ARRAY_SIZE, "GL_ARRAY_SIZE");
#endif
#if defined(GL_OFFSET)
defconsti(env, "GL-OFFSET", (GLenum) GL_OFFSET, "GL_OFFSET");
#endif
#if defined(GL_BLOCK_INDEX)
defconsti(env, "GL-BLOCK-INDEX", (GLenum) GL_BLOCK_INDEX, "GL_BLOCK_INDEX");
#endif
#if defined(GL_ARRAY_STRIDE)
defconsti(env, "GL-ARRAY-STRIDE", (GLenum) GL_ARRAY_STRIDE, "GL_ARRAY_STRIDE");
#endif
#if defined(GL_MATRIX_STRIDE)
defconsti(env, "GL-MATRIX-STRIDE", (GLenum) GL_MATRIX_STRIDE, "GL_MATRIX_STRIDE");
#endif
#if defined(GL_IS_ROW_MAJOR)
defconsti(env, "GL-IS-ROW-MAJOR", (GLenum) GL_IS_ROW_MAJOR, "GL_IS_ROW_MAJOR");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_INDEX)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-INDEX", (GLenum) GL_ATOMIC_COUNTER_BUFFER_INDEX, "GL_ATOMIC_COUNTER_BUFFER_INDEX");
#endif
#if defined(GL_BUFFER_BINDING)
defconsti(env, "GL-BUFFER-BINDING", (GLenum) GL_BUFFER_BINDING, "GL_BUFFER_BINDING");
#endif
#if defined(GL_BUFFER_DATA_SIZE)
defconsti(env, "GL-BUFFER-DATA-SIZE", (GLenum) GL_BUFFER_DATA_SIZE, "GL_BUFFER_DATA_SIZE");
#endif
#if defined(GL_NUM_ACTIVE_VARIABLES)
defconsti(env, "GL-NUM-ACTIVE-VARIABLES", (GLenum) GL_NUM_ACTIVE_VARIABLES, "GL_NUM_ACTIVE_VARIABLES");
#endif
#if defined(GL_ACTIVE_VARIABLES)
defconsti(env, "GL-ACTIVE-VARIABLES", (GLenum) GL_ACTIVE_VARIABLES, "GL_ACTIVE_VARIABLES");
#endif
#if defined(GL_REFERENCED_BY_VERTEX_SHADER)
defconsti(env, "GL-REFERENCED-BY-VERTEX-SHADER", (GLenum) GL_REFERENCED_BY_VERTEX_SHADER, "GL_REFERENCED_BY_VERTEX_SHADER");
#endif
#if defined(GL_REFERENCED_BY_TESS_CONTROL_SHADER)
defconsti(env, "GL-REFERENCED-BY-TESS-CONTROL-SHADER", (GLenum) GL_REFERENCED_BY_TESS_CONTROL_SHADER, "GL_REFERENCED_BY_TESS_CONTROL_SHADER");
#endif
#if defined(GL_REFERENCED_BY_TESS_EVALUATION_SHADER)
defconsti(env, "GL-REFERENCED-BY-TESS-EVALUATION-SHADER", (GLenum) GL_REFERENCED_BY_TESS_EVALUATION_SHADER, "GL_REFERENCED_BY_TESS_EVALUATION_SHADER");
#endif
#if defined(GL_REFERENCED_BY_GEOMETRY_SHADER)
defconsti(env, "GL-REFERENCED-BY-GEOMETRY-SHADER", (GLenum) GL_REFERENCED_BY_GEOMETRY_SHADER, "GL_REFERENCED_BY_GEOMETRY_SHADER");
#endif
#if defined(GL_REFERENCED_BY_FRAGMENT_SHADER)
defconsti(env, "GL-REFERENCED-BY-FRAGMENT-SHADER", (GLenum) GL_REFERENCED_BY_FRAGMENT_SHADER, "GL_REFERENCED_BY_FRAGMENT_SHADER");
#endif
#if defined(GL_REFERENCED_BY_COMPUTE_SHADER)
defconsti(env, "GL-REFERENCED-BY-COMPUTE-SHADER", (GLenum) GL_REFERENCED_BY_COMPUTE_SHADER, "GL_REFERENCED_BY_COMPUTE_SHADER");
#endif
#if defined(GL_TOP_LEVEL_ARRAY_SIZE)
defconsti(env, "GL-TOP-LEVEL-ARRAY-SIZE", (GLenum) GL_TOP_LEVEL_ARRAY_SIZE, "GL_TOP_LEVEL_ARRAY_SIZE");
#endif
#if defined(GL_TOP_LEVEL_ARRAY_STRIDE)
defconsti(env, "GL-TOP-LEVEL-ARRAY-STRIDE", (GLenum) GL_TOP_LEVEL_ARRAY_STRIDE, "GL_TOP_LEVEL_ARRAY_STRIDE");
#endif
#if defined(GL_LOCATION)
defconsti(env, "GL-LOCATION", (GLenum) GL_LOCATION, "GL_LOCATION");
#endif
#if defined(GL_LOCATION_INDEX)
defconsti(env, "GL-LOCATION-INDEX", (GLenum) GL_LOCATION_INDEX, "GL_LOCATION_INDEX");
#endif
#if defined(GL_IS_PER_PATCH)
defconsti(env, "GL-IS-PER-PATCH", (GLenum) GL_IS_PER_PATCH, "GL_IS_PER_PATCH");
#endif
#if defined(GL_NUM_COMPATIBLE_SUBROUTINES)
defconsti(env, "GL-NUM-COMPATIBLE-SUBROUTINES", (GLenum) GL_NUM_COMPATIBLE_SUBROUTINES, "GL_NUM_COMPATIBLE_SUBROUTINES");
#endif
#if defined(GL_COMPATIBLE_SUBROUTINES)
defconsti(env, "GL-COMPATIBLE-SUBROUTINES", (GLenum) GL_COMPATIBLE_SUBROUTINES, "GL_COMPATIBLE_SUBROUTINES");
#endif
#if defined(GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION)
defconsti(env, "GL-QUADS-FOLLOW-PROVOKING-VERTEX-CONVENTION", (GLenum) GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION, "GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION");
#endif
#if defined(GL_FIRST_VERTEX_CONVENTION)
defconsti(env, "GL-FIRST-VERTEX-CONVENTION", (GLenum) GL_FIRST_VERTEX_CONVENTION, "GL_FIRST_VERTEX_CONVENTION");
#endif
#if defined(GL_LAST_VERTEX_CONVENTION)
defconsti(env, "GL-LAST-VERTEX-CONVENTION", (GLenum) GL_LAST_VERTEX_CONVENTION, "GL_LAST_VERTEX_CONVENTION");
#endif
#if defined(GL_PROVOKING_VERTEX)
defconsti(env, "GL-PROVOKING-VERTEX", (GLenum) GL_PROVOKING_VERTEX, "GL_PROVOKING_VERTEX");
#endif
#if defined(GL_QUERY_BUFFER)
defconsti(env, "GL-QUERY-BUFFER", (GLenum) GL_QUERY_BUFFER, "GL_QUERY_BUFFER");
#endif
#if defined(GL_QUERY_BUFFER_BARRIER_BIT)
defconsti(env, "GL-QUERY-BUFFER-BARRIER-BIT", (GLenum) GL_QUERY_BUFFER_BARRIER_BIT, "GL_QUERY_BUFFER_BARRIER_BIT");
#endif
#if defined(GL_QUERY_BUFFER_BINDING)
defconsti(env, "GL-QUERY-BUFFER-BINDING", (GLenum) GL_QUERY_BUFFER_BINDING, "GL_QUERY_BUFFER_BINDING");
#endif
#if defined(GL_QUERY_RESULT_NO_WAIT)
defconsti(env, "GL-QUERY-RESULT-NO-WAIT", (GLenum) GL_QUERY_RESULT_NO_WAIT, "GL_QUERY_RESULT_NO_WAIT");
#endif
#if defined(GL_NO_ERROR)
defconsti(env, "GL-NO-ERROR", (GLenum) GL_NO_ERROR, "GL_NO_ERROR");
#endif
#if defined(GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB)
defconsti(env, "GL-CONTEXT-FLAG-ROBUST-ACCESS-BIT-ARB", (GLenum) GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB, "GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB");
#endif
#if defined(GL_LOSE_CONTEXT_ON_RESET_ARB)
defconsti(env, "GL-LOSE-CONTEXT-ON-RESET-ARB", (GLenum) GL_LOSE_CONTEXT_ON_RESET_ARB, "GL_LOSE_CONTEXT_ON_RESET_ARB");
#endif
#if defined(GL_GUILTY_CONTEXT_RESET_ARB)
defconsti(env, "GL-GUILTY-CONTEXT-RESET-ARB", (GLenum) GL_GUILTY_CONTEXT_RESET_ARB, "GL_GUILTY_CONTEXT_RESET_ARB");
#endif
#if defined(GL_INNOCENT_CONTEXT_RESET_ARB)
defconsti(env, "GL-INNOCENT-CONTEXT-RESET-ARB", (GLenum) GL_INNOCENT_CONTEXT_RESET_ARB, "GL_INNOCENT_CONTEXT_RESET_ARB");
#endif
#if defined(GL_UNKNOWN_CONTEXT_RESET_ARB)
defconsti(env, "GL-UNKNOWN-CONTEXT-RESET-ARB", (GLenum) GL_UNKNOWN_CONTEXT_RESET_ARB, "GL_UNKNOWN_CONTEXT_RESET_ARB");
#endif
#if defined(GL_RESET_NOTIFICATION_STRATEGY_ARB)
defconsti(env, "GL-RESET-NOTIFICATION-STRATEGY-ARB", (GLenum) GL_RESET_NOTIFICATION_STRATEGY_ARB, "GL_RESET_NOTIFICATION_STRATEGY_ARB");
#endif
#if defined(GL_NO_RESET_NOTIFICATION_ARB)
defconsti(env, "GL-NO-RESET-NOTIFICATION-ARB", (GLenum) GL_NO_RESET_NOTIFICATION_ARB, "GL_NO_RESET_NOTIFICATION_ARB");
#endif
#if defined(GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB)
defconsti(env, "GL-SAMPLE-LOCATION-SUBPIXEL-BITS-ARB", (GLenum) GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB, "GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB");
#endif
#if defined(GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB)
defconsti(env, "GL-SAMPLE-LOCATION-PIXEL-GRID-WIDTH-ARB", (GLenum) GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB, "GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB");
#endif
#if defined(GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB)
defconsti(env, "GL-SAMPLE-LOCATION-PIXEL-GRID-HEIGHT-ARB", (GLenum) GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB, "GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB");
#endif
#if defined(GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB)
defconsti(env, "GL-PROGRAMMABLE-SAMPLE-LOCATION-TABLE-SIZE-ARB", (GLenum) GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB, "GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB");
#endif
#if defined(GL_SAMPLE_LOCATION_ARB)
defconsti(env, "GL-SAMPLE-LOCATION-ARB", (GLenum) GL_SAMPLE_LOCATION_ARB, "GL_SAMPLE_LOCATION_ARB");
#endif
#if defined(GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB)
defconsti(env, "GL-PROGRAMMABLE-SAMPLE-LOCATION-ARB", (GLenum) GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB, "GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB");
#endif
#if defined(GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB)
defconsti(env, "GL-FRAMEBUFFER-PROGRAMMABLE-SAMPLE-LOCATIONS-ARB", (GLenum) GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB, "GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB");
#endif
#if defined(GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB)
defconsti(env, "GL-FRAMEBUFFER-SAMPLE-LOCATION-PIXEL-GRID-ARB", (GLenum) GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB, "GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB");
#endif
#if defined(GL_SAMPLE_SHADING_ARB)
defconsti(env, "GL-SAMPLE-SHADING-ARB", (GLenum) GL_SAMPLE_SHADING_ARB, "GL_SAMPLE_SHADING_ARB");
#endif
#if defined(GL_MIN_SAMPLE_SHADING_VALUE_ARB)
defconsti(env, "GL-MIN-SAMPLE-SHADING-VALUE-ARB", (GLenum) GL_MIN_SAMPLE_SHADING_VALUE_ARB, "GL_MIN_SAMPLE_SHADING_VALUE_ARB");
#endif
#if defined(GL_SAMPLER_BINDING)
defconsti(env, "GL-SAMPLER-BINDING", (GLenum) GL_SAMPLER_BINDING, "GL_SAMPLER_BINDING");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_SEAMLESS)
defconsti(env, "GL-TEXTURE-CUBE-MAP-SEAMLESS", (GLenum) GL_TEXTURE_CUBE_MAP_SEAMLESS, "GL_TEXTURE_CUBE_MAP_SEAMLESS");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_SEAMLESS)
defconsti(env, "GL-TEXTURE-CUBE-MAP-SEAMLESS", (GLenum) GL_TEXTURE_CUBE_MAP_SEAMLESS, "GL_TEXTURE_CUBE_MAP_SEAMLESS");
#endif
#if defined(GL_VERTEX_SHADER_BIT)
defconsti(env, "GL-VERTEX-SHADER-BIT", (GLenum) GL_VERTEX_SHADER_BIT, "GL_VERTEX_SHADER_BIT");
#endif
#if defined(GL_FRAGMENT_SHADER_BIT)
defconsti(env, "GL-FRAGMENT-SHADER-BIT", (GLenum) GL_FRAGMENT_SHADER_BIT, "GL_FRAGMENT_SHADER_BIT");
#endif
#if defined(GL_GEOMETRY_SHADER_BIT)
defconsti(env, "GL-GEOMETRY-SHADER-BIT", (GLenum) GL_GEOMETRY_SHADER_BIT, "GL_GEOMETRY_SHADER_BIT");
#endif
#if defined(GL_TESS_CONTROL_SHADER_BIT)
defconsti(env, "GL-TESS-CONTROL-SHADER-BIT", (GLenum) GL_TESS_CONTROL_SHADER_BIT, "GL_TESS_CONTROL_SHADER_BIT");
#endif
#if defined(GL_TESS_EVALUATION_SHADER_BIT)
defconsti(env, "GL-TESS-EVALUATION-SHADER-BIT", (GLenum) GL_TESS_EVALUATION_SHADER_BIT, "GL_TESS_EVALUATION_SHADER_BIT");
#endif
#if defined(GL_ALL_SHADER_BITS)
defconsti(env, "GL-ALL-SHADER-BITS", (GLenum) GL_ALL_SHADER_BITS, "GL_ALL_SHADER_BITS");
#endif
#if defined(GL_PROGRAM_SEPARABLE)
defconsti(env, "GL-PROGRAM-SEPARABLE", (GLenum) GL_PROGRAM_SEPARABLE, "GL_PROGRAM_SEPARABLE");
#endif
#if defined(GL_ACTIVE_PROGRAM)
defconsti(env, "GL-ACTIVE-PROGRAM", (GLenum) GL_ACTIVE_PROGRAM, "GL_ACTIVE_PROGRAM");
#endif
#if defined(GL_PROGRAM_PIPELINE_BINDING)
defconsti(env, "GL-PROGRAM-PIPELINE-BINDING", (GLenum) GL_PROGRAM_PIPELINE_BINDING, "GL_PROGRAM_PIPELINE_BINDING");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER", (GLenum) GL_ATOMIC_COUNTER_BUFFER, "GL_ATOMIC_COUNTER_BUFFER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_BINDING)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-BINDING", (GLenum) GL_ATOMIC_COUNTER_BUFFER_BINDING, "GL_ATOMIC_COUNTER_BUFFER_BINDING");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_START)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-START", (GLenum) GL_ATOMIC_COUNTER_BUFFER_START, "GL_ATOMIC_COUNTER_BUFFER_START");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_SIZE)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-SIZE", (GLenum) GL_ATOMIC_COUNTER_BUFFER_SIZE, "GL_ATOMIC_COUNTER_BUFFER_SIZE");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-DATA-SIZE", (GLenum) GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE, "GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-ACTIVE-ATOMIC-COUNTERS", (GLenum) GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS, "GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-ACTIVE-ATOMIC-COUNTER-INDICES", (GLenum) GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES, "GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-VERTEX-SHADER", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-TESS-CONTROL-SHADER", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-TESS-EVALUATION-SHADER", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-GEOMETRY-SHADER", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-FRAGMENT-SHADER", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER");
#endif
#if defined(GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-VERTEX-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS, "GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-TESS-CONTROL-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS, "GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-TESS-EVALUATION-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS, "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-GEOMETRY-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS, "GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-FRAGMENT-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS, "GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-MAX-COMBINED-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS, "GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_MAX_VERTEX_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-VERTEX-ATOMIC-COUNTERS", (GLenum) GL_MAX_VERTEX_ATOMIC_COUNTERS, "GL_MAX_VERTEX_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-TESS-CONTROL-ATOMIC-COUNTERS", (GLenum) GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS, "GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-TESS-EVALUATION-ATOMIC-COUNTERS", (GLenum) GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS, "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_GEOMETRY_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-GEOMETRY-ATOMIC-COUNTERS", (GLenum) GL_MAX_GEOMETRY_ATOMIC_COUNTERS, "GL_MAX_GEOMETRY_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_FRAGMENT_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-FRAGMENT-ATOMIC-COUNTERS", (GLenum) GL_MAX_FRAGMENT_ATOMIC_COUNTERS, "GL_MAX_FRAGMENT_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_COMBINED_ATOMIC_COUNTERS)
defconsti(env, "GL-MAX-COMBINED-ATOMIC-COUNTERS", (GLenum) GL_MAX_COMBINED_ATOMIC_COUNTERS, "GL_MAX_COMBINED_ATOMIC_COUNTERS");
#endif
#if defined(GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE)
defconsti(env, "GL-MAX-ATOMIC-COUNTER-BUFFER-SIZE", (GLenum) GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE, "GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE");
#endif
#if defined(GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS)
defconsti(env, "GL-MAX-ATOMIC-COUNTER-BUFFER-BINDINGS", (GLenum) GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS, "GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS");
#endif
#if defined(GL_ACTIVE_ATOMIC_COUNTER_BUFFERS)
defconsti(env, "GL-ACTIVE-ATOMIC-COUNTER-BUFFERS", (GLenum) GL_ACTIVE_ATOMIC_COUNTER_BUFFERS, "GL_ACTIVE_ATOMIC_COUNTER_BUFFERS");
#endif
#if defined(GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX)
defconsti(env, "GL-UNIFORM-ATOMIC-COUNTER-BUFFER-INDEX", (GLenum) GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX, "GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX");
#endif
#if defined(GL_UNSIGNED_INT_ATOMIC_COUNTER)
defconsti(env, "GL-UNSIGNED-INT-ATOMIC-COUNTER", (GLenum) GL_UNSIGNED_INT_ATOMIC_COUNTER, "GL_UNSIGNED_INT_ATOMIC_COUNTER");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-BARRIER-BIT", (GLenum) GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT, "GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT");
#endif
#if defined(GL_ELEMENT_ARRAY_BARRIER_BIT)
defconsti(env, "GL-ELEMENT-ARRAY-BARRIER-BIT", (GLenum) GL_ELEMENT_ARRAY_BARRIER_BIT, "GL_ELEMENT_ARRAY_BARRIER_BIT");
#endif
#if defined(GL_UNIFORM_BARRIER_BIT)
defconsti(env, "GL-UNIFORM-BARRIER-BIT", (GLenum) GL_UNIFORM_BARRIER_BIT, "GL_UNIFORM_BARRIER_BIT");
#endif
#if defined(GL_TEXTURE_FETCH_BARRIER_BIT)
defconsti(env, "GL-TEXTURE-FETCH-BARRIER-BIT", (GLenum) GL_TEXTURE_FETCH_BARRIER_BIT, "GL_TEXTURE_FETCH_BARRIER_BIT");
#endif
#if defined(GL_SHADER_IMAGE_ACCESS_BARRIER_BIT)
defconsti(env, "GL-SHADER-IMAGE-ACCESS-BARRIER-BIT", (GLenum) GL_SHADER_IMAGE_ACCESS_BARRIER_BIT, "GL_SHADER_IMAGE_ACCESS_BARRIER_BIT");
#endif
#if defined(GL_COMMAND_BARRIER_BIT)
defconsti(env, "GL-COMMAND-BARRIER-BIT", (GLenum) GL_COMMAND_BARRIER_BIT, "GL_COMMAND_BARRIER_BIT");
#endif
#if defined(GL_PIXEL_BUFFER_BARRIER_BIT)
defconsti(env, "GL-PIXEL-BUFFER-BARRIER-BIT", (GLenum) GL_PIXEL_BUFFER_BARRIER_BIT, "GL_PIXEL_BUFFER_BARRIER_BIT");
#endif
#if defined(GL_TEXTURE_UPDATE_BARRIER_BIT)
defconsti(env, "GL-TEXTURE-UPDATE-BARRIER-BIT", (GLenum) GL_TEXTURE_UPDATE_BARRIER_BIT, "GL_TEXTURE_UPDATE_BARRIER_BIT");
#endif
#if defined(GL_BUFFER_UPDATE_BARRIER_BIT)
defconsti(env, "GL-BUFFER-UPDATE-BARRIER-BIT", (GLenum) GL_BUFFER_UPDATE_BARRIER_BIT, "GL_BUFFER_UPDATE_BARRIER_BIT");
#endif
#if defined(GL_FRAMEBUFFER_BARRIER_BIT)
defconsti(env, "GL-FRAMEBUFFER-BARRIER-BIT", (GLenum) GL_FRAMEBUFFER_BARRIER_BIT, "GL_FRAMEBUFFER_BARRIER_BIT");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BARRIER_BIT)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BARRIER-BIT", (GLenum) GL_TRANSFORM_FEEDBACK_BARRIER_BIT, "GL_TRANSFORM_FEEDBACK_BARRIER_BIT");
#endif
#if defined(GL_ATOMIC_COUNTER_BARRIER_BIT)
defconsti(env, "GL-ATOMIC-COUNTER-BARRIER-BIT", (GLenum) GL_ATOMIC_COUNTER_BARRIER_BIT, "GL_ATOMIC_COUNTER_BARRIER_BIT");
#endif
#if defined(GL_ALL_BARRIER_BITS)
defconsti(env, "GL-ALL-BARRIER-BITS", (GLenum) GL_ALL_BARRIER_BITS, "GL_ALL_BARRIER_BITS");
#endif
#if defined(GL_MAX_IMAGE_UNITS)
defconsti(env, "GL-MAX-IMAGE-UNITS", (GLenum) GL_MAX_IMAGE_UNITS, "GL_MAX_IMAGE_UNITS");
#endif
#if defined(GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS)
defconsti(env, "GL-MAX-COMBINED-IMAGE-UNITS-AND-FRAGMENT-OUTPUTS", (GLenum) GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS, "GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS");
#endif
#if defined(GL_IMAGE_BINDING_NAME)
defconsti(env, "GL-IMAGE-BINDING-NAME", (GLenum) GL_IMAGE_BINDING_NAME, "GL_IMAGE_BINDING_NAME");
#endif
#if defined(GL_IMAGE_BINDING_LEVEL)
defconsti(env, "GL-IMAGE-BINDING-LEVEL", (GLenum) GL_IMAGE_BINDING_LEVEL, "GL_IMAGE_BINDING_LEVEL");
#endif
#if defined(GL_IMAGE_BINDING_LAYERED)
defconsti(env, "GL-IMAGE-BINDING-LAYERED", (GLenum) GL_IMAGE_BINDING_LAYERED, "GL_IMAGE_BINDING_LAYERED");
#endif
#if defined(GL_IMAGE_BINDING_LAYER)
defconsti(env, "GL-IMAGE-BINDING-LAYER", (GLenum) GL_IMAGE_BINDING_LAYER, "GL_IMAGE_BINDING_LAYER");
#endif
#if defined(GL_IMAGE_BINDING_ACCESS)
defconsti(env, "GL-IMAGE-BINDING-ACCESS", (GLenum) GL_IMAGE_BINDING_ACCESS, "GL_IMAGE_BINDING_ACCESS");
#endif
#if defined(GL_IMAGE_1D)
defconsti(env, "GL-IMAGE-1D", (GLenum) GL_IMAGE_1D, "GL_IMAGE_1D");
#endif
#if defined(GL_IMAGE_2D)
defconsti(env, "GL-IMAGE-2D", (GLenum) GL_IMAGE_2D, "GL_IMAGE_2D");
#endif
#if defined(GL_IMAGE_3D)
defconsti(env, "GL-IMAGE-3D", (GLenum) GL_IMAGE_3D, "GL_IMAGE_3D");
#endif
#if defined(GL_IMAGE_2D_RECT)
defconsti(env, "GL-IMAGE-2D-RECT", (GLenum) GL_IMAGE_2D_RECT, "GL_IMAGE_2D_RECT");
#endif
#if defined(GL_IMAGE_CUBE)
defconsti(env, "GL-IMAGE-CUBE", (GLenum) GL_IMAGE_CUBE, "GL_IMAGE_CUBE");
#endif
#if defined(GL_IMAGE_BUFFER)
defconsti(env, "GL-IMAGE-BUFFER", (GLenum) GL_IMAGE_BUFFER, "GL_IMAGE_BUFFER");
#endif
#if defined(GL_IMAGE_1D_ARRAY)
defconsti(env, "GL-IMAGE-1D-ARRAY", (GLenum) GL_IMAGE_1D_ARRAY, "GL_IMAGE_1D_ARRAY");
#endif
#if defined(GL_IMAGE_2D_ARRAY)
defconsti(env, "GL-IMAGE-2D-ARRAY", (GLenum) GL_IMAGE_2D_ARRAY, "GL_IMAGE_2D_ARRAY");
#endif
#if defined(GL_IMAGE_CUBE_MAP_ARRAY)
defconsti(env, "GL-IMAGE-CUBE-MAP-ARRAY", (GLenum) GL_IMAGE_CUBE_MAP_ARRAY, "GL_IMAGE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_IMAGE_2D_MULTISAMPLE)
defconsti(env, "GL-IMAGE-2D-MULTISAMPLE", (GLenum) GL_IMAGE_2D_MULTISAMPLE, "GL_IMAGE_2D_MULTISAMPLE");
#endif
#if defined(GL_IMAGE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-IMAGE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_IMAGE_2D_MULTISAMPLE_ARRAY, "GL_IMAGE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_INT_IMAGE_1D)
defconsti(env, "GL-INT-IMAGE-1D", (GLenum) GL_INT_IMAGE_1D, "GL_INT_IMAGE_1D");
#endif
#if defined(GL_INT_IMAGE_2D)
defconsti(env, "GL-INT-IMAGE-2D", (GLenum) GL_INT_IMAGE_2D, "GL_INT_IMAGE_2D");
#endif
#if defined(GL_INT_IMAGE_3D)
defconsti(env, "GL-INT-IMAGE-3D", (GLenum) GL_INT_IMAGE_3D, "GL_INT_IMAGE_3D");
#endif
#if defined(GL_INT_IMAGE_2D_RECT)
defconsti(env, "GL-INT-IMAGE-2D-RECT", (GLenum) GL_INT_IMAGE_2D_RECT, "GL_INT_IMAGE_2D_RECT");
#endif
#if defined(GL_INT_IMAGE_CUBE)
defconsti(env, "GL-INT-IMAGE-CUBE", (GLenum) GL_INT_IMAGE_CUBE, "GL_INT_IMAGE_CUBE");
#endif
#if defined(GL_INT_IMAGE_BUFFER)
defconsti(env, "GL-INT-IMAGE-BUFFER", (GLenum) GL_INT_IMAGE_BUFFER, "GL_INT_IMAGE_BUFFER");
#endif
#if defined(GL_INT_IMAGE_1D_ARRAY)
defconsti(env, "GL-INT-IMAGE-1D-ARRAY", (GLenum) GL_INT_IMAGE_1D_ARRAY, "GL_INT_IMAGE_1D_ARRAY");
#endif
#if defined(GL_INT_IMAGE_2D_ARRAY)
defconsti(env, "GL-INT-IMAGE-2D-ARRAY", (GLenum) GL_INT_IMAGE_2D_ARRAY, "GL_INT_IMAGE_2D_ARRAY");
#endif
#if defined(GL_INT_IMAGE_CUBE_MAP_ARRAY)
defconsti(env, "GL-INT-IMAGE-CUBE-MAP-ARRAY", (GLenum) GL_INT_IMAGE_CUBE_MAP_ARRAY, "GL_INT_IMAGE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_INT_IMAGE_2D_MULTISAMPLE)
defconsti(env, "GL-INT-IMAGE-2D-MULTISAMPLE", (GLenum) GL_INT_IMAGE_2D_MULTISAMPLE, "GL_INT_IMAGE_2D_MULTISAMPLE");
#endif
#if defined(GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-INT-IMAGE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY, "GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_1D)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-1D", (GLenum) GL_UNSIGNED_INT_IMAGE_1D, "GL_UNSIGNED_INT_IMAGE_1D");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D", (GLenum) GL_UNSIGNED_INT_IMAGE_2D, "GL_UNSIGNED_INT_IMAGE_2D");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_3D)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-3D", (GLenum) GL_UNSIGNED_INT_IMAGE_3D, "GL_UNSIGNED_INT_IMAGE_3D");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_RECT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-RECT", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_RECT, "GL_UNSIGNED_INT_IMAGE_2D_RECT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_CUBE)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-CUBE", (GLenum) GL_UNSIGNED_INT_IMAGE_CUBE, "GL_UNSIGNED_INT_IMAGE_CUBE");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_BUFFER)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-BUFFER", (GLenum) GL_UNSIGNED_INT_IMAGE_BUFFER, "GL_UNSIGNED_INT_IMAGE_BUFFER");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_1D_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-1D-ARRAY", (GLenum) GL_UNSIGNED_INT_IMAGE_1D_ARRAY, "GL_UNSIGNED_INT_IMAGE_1D_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-ARRAY", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_ARRAY, "GL_UNSIGNED_INT_IMAGE_2D_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-CUBE-MAP-ARRAY", (GLenum) GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY, "GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-MULTISAMPLE", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE, "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY, "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_MAX_IMAGE_SAMPLES)
defconsti(env, "GL-MAX-IMAGE-SAMPLES", (GLenum) GL_MAX_IMAGE_SAMPLES, "GL_MAX_IMAGE_SAMPLES");
#endif
#if defined(GL_IMAGE_BINDING_FORMAT)
defconsti(env, "GL-IMAGE-BINDING-FORMAT", (GLenum) GL_IMAGE_BINDING_FORMAT, "GL_IMAGE_BINDING_FORMAT");
#endif
#if defined(GL_IMAGE_FORMAT_COMPATIBILITY_TYPE)
defconsti(env, "GL-IMAGE-FORMAT-COMPATIBILITY-TYPE", (GLenum) GL_IMAGE_FORMAT_COMPATIBILITY_TYPE, "GL_IMAGE_FORMAT_COMPATIBILITY_TYPE");
#endif
#if defined(GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE)
defconsti(env, "GL-IMAGE-FORMAT-COMPATIBILITY-BY-SIZE", (GLenum) GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE, "GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE");
#endif
#if defined(GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS)
defconsti(env, "GL-IMAGE-FORMAT-COMPATIBILITY-BY-CLASS", (GLenum) GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS, "GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS");
#endif
#if defined(GL_MAX_VERTEX_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-VERTEX-IMAGE-UNIFORMS", (GLenum) GL_MAX_VERTEX_IMAGE_UNIFORMS, "GL_MAX_VERTEX_IMAGE_UNIFORMS");
#endif
#if defined(GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-TESS-CONTROL-IMAGE-UNIFORMS", (GLenum) GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS, "GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-TESS-EVALUATION-IMAGE-UNIFORMS", (GLenum) GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS, "GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS");
#endif
#if defined(GL_MAX_GEOMETRY_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-GEOMETRY-IMAGE-UNIFORMS", (GLenum) GL_MAX_GEOMETRY_IMAGE_UNIFORMS, "GL_MAX_GEOMETRY_IMAGE_UNIFORMS");
#endif
#if defined(GL_MAX_FRAGMENT_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-FRAGMENT-IMAGE-UNIFORMS", (GLenum) GL_MAX_FRAGMENT_IMAGE_UNIFORMS, "GL_MAX_FRAGMENT_IMAGE_UNIFORMS");
#endif
#if defined(GL_MAX_COMBINED_IMAGE_UNIFORMS)
defconsti(env, "GL-MAX-COMBINED-IMAGE-UNIFORMS", (GLenum) GL_MAX_COMBINED_IMAGE_UNIFORMS, "GL_MAX_COMBINED_IMAGE_UNIFORMS");
#endif
#if defined(GL_PROGRAM_OBJECT_ARB)
defconsti(env, "GL-PROGRAM-OBJECT-ARB", (GLenum) GL_PROGRAM_OBJECT_ARB, "GL_PROGRAM_OBJECT_ARB");
#endif
#if defined(GL_SHADER_OBJECT_ARB)
defconsti(env, "GL-SHADER-OBJECT-ARB", (GLenum) GL_SHADER_OBJECT_ARB, "GL_SHADER_OBJECT_ARB");
#endif
#if defined(GL_OBJECT_TYPE_ARB)
defconsti(env, "GL-OBJECT-TYPE-ARB", (GLenum) GL_OBJECT_TYPE_ARB, "GL_OBJECT_TYPE_ARB");
#endif
#if defined(GL_OBJECT_SUBTYPE_ARB)
defconsti(env, "GL-OBJECT-SUBTYPE-ARB", (GLenum) GL_OBJECT_SUBTYPE_ARB, "GL_OBJECT_SUBTYPE_ARB");
#endif
#if defined(GL_FLOAT_VEC2_ARB)
defconsti(env, "GL-FLOAT-VEC2-ARB", (GLenum) GL_FLOAT_VEC2_ARB, "GL_FLOAT_VEC2_ARB");
#endif
#if defined(GL_FLOAT_VEC3_ARB)
defconsti(env, "GL-FLOAT-VEC3-ARB", (GLenum) GL_FLOAT_VEC3_ARB, "GL_FLOAT_VEC3_ARB");
#endif
#if defined(GL_FLOAT_VEC4_ARB)
defconsti(env, "GL-FLOAT-VEC4-ARB", (GLenum) GL_FLOAT_VEC4_ARB, "GL_FLOAT_VEC4_ARB");
#endif
#if defined(GL_INT_VEC2_ARB)
defconsti(env, "GL-INT-VEC2-ARB", (GLenum) GL_INT_VEC2_ARB, "GL_INT_VEC2_ARB");
#endif
#if defined(GL_INT_VEC3_ARB)
defconsti(env, "GL-INT-VEC3-ARB", (GLenum) GL_INT_VEC3_ARB, "GL_INT_VEC3_ARB");
#endif
#if defined(GL_INT_VEC4_ARB)
defconsti(env, "GL-INT-VEC4-ARB", (GLenum) GL_INT_VEC4_ARB, "GL_INT_VEC4_ARB");
#endif
#if defined(GL_BOOL_ARB)
defconsti(env, "GL-BOOL-ARB", (GLenum) GL_BOOL_ARB, "GL_BOOL_ARB");
#endif
#if defined(GL_BOOL_VEC2_ARB)
defconsti(env, "GL-BOOL-VEC2-ARB", (GLenum) GL_BOOL_VEC2_ARB, "GL_BOOL_VEC2_ARB");
#endif
#if defined(GL_BOOL_VEC3_ARB)
defconsti(env, "GL-BOOL-VEC3-ARB", (GLenum) GL_BOOL_VEC3_ARB, "GL_BOOL_VEC3_ARB");
#endif
#if defined(GL_BOOL_VEC4_ARB)
defconsti(env, "GL-BOOL-VEC4-ARB", (GLenum) GL_BOOL_VEC4_ARB, "GL_BOOL_VEC4_ARB");
#endif
#if defined(GL_FLOAT_MAT2_ARB)
defconsti(env, "GL-FLOAT-MAT2-ARB", (GLenum) GL_FLOAT_MAT2_ARB, "GL_FLOAT_MAT2_ARB");
#endif
#if defined(GL_FLOAT_MAT3_ARB)
defconsti(env, "GL-FLOAT-MAT3-ARB", (GLenum) GL_FLOAT_MAT3_ARB, "GL_FLOAT_MAT3_ARB");
#endif
#if defined(GL_FLOAT_MAT4_ARB)
defconsti(env, "GL-FLOAT-MAT4-ARB", (GLenum) GL_FLOAT_MAT4_ARB, "GL_FLOAT_MAT4_ARB");
#endif
#if defined(GL_SAMPLER_1D_ARB)
defconsti(env, "GL-SAMPLER-1D-ARB", (GLenum) GL_SAMPLER_1D_ARB, "GL_SAMPLER_1D_ARB");
#endif
#if defined(GL_SAMPLER_2D_ARB)
defconsti(env, "GL-SAMPLER-2D-ARB", (GLenum) GL_SAMPLER_2D_ARB, "GL_SAMPLER_2D_ARB");
#endif
#if defined(GL_SAMPLER_3D_ARB)
defconsti(env, "GL-SAMPLER-3D-ARB", (GLenum) GL_SAMPLER_3D_ARB, "GL_SAMPLER_3D_ARB");
#endif
#if defined(GL_SAMPLER_CUBE_ARB)
defconsti(env, "GL-SAMPLER-CUBE-ARB", (GLenum) GL_SAMPLER_CUBE_ARB, "GL_SAMPLER_CUBE_ARB");
#endif
#if defined(GL_SAMPLER_1D_SHADOW_ARB)
defconsti(env, "GL-SAMPLER-1D-SHADOW-ARB", (GLenum) GL_SAMPLER_1D_SHADOW_ARB, "GL_SAMPLER_1D_SHADOW_ARB");
#endif
#if defined(GL_SAMPLER_2D_SHADOW_ARB)
defconsti(env, "GL-SAMPLER-2D-SHADOW-ARB", (GLenum) GL_SAMPLER_2D_SHADOW_ARB, "GL_SAMPLER_2D_SHADOW_ARB");
#endif
#if defined(GL_SAMPLER_2D_RECT_ARB)
defconsti(env, "GL-SAMPLER-2D-RECT-ARB", (GLenum) GL_SAMPLER_2D_RECT_ARB, "GL_SAMPLER_2D_RECT_ARB");
#endif
#if defined(GL_SAMPLER_2D_RECT_SHADOW_ARB)
defconsti(env, "GL-SAMPLER-2D-RECT-SHADOW-ARB", (GLenum) GL_SAMPLER_2D_RECT_SHADOW_ARB, "GL_SAMPLER_2D_RECT_SHADOW_ARB");
#endif
#if defined(GL_OBJECT_DELETE_STATUS_ARB)
defconsti(env, "GL-OBJECT-DELETE-STATUS-ARB", (GLenum) GL_OBJECT_DELETE_STATUS_ARB, "GL_OBJECT_DELETE_STATUS_ARB");
#endif
#if defined(GL_OBJECT_COMPILE_STATUS_ARB)
defconsti(env, "GL-OBJECT-COMPILE-STATUS-ARB", (GLenum) GL_OBJECT_COMPILE_STATUS_ARB, "GL_OBJECT_COMPILE_STATUS_ARB");
#endif
#if defined(GL_OBJECT_LINK_STATUS_ARB)
defconsti(env, "GL-OBJECT-LINK-STATUS-ARB", (GLenum) GL_OBJECT_LINK_STATUS_ARB, "GL_OBJECT_LINK_STATUS_ARB");
#endif
#if defined(GL_OBJECT_VALIDATE_STATUS_ARB)
defconsti(env, "GL-OBJECT-VALIDATE-STATUS-ARB", (GLenum) GL_OBJECT_VALIDATE_STATUS_ARB, "GL_OBJECT_VALIDATE_STATUS_ARB");
#endif
#if defined(GL_OBJECT_INFO_LOG_LENGTH_ARB)
defconsti(env, "GL-OBJECT-INFO-LOG-LENGTH-ARB", (GLenum) GL_OBJECT_INFO_LOG_LENGTH_ARB, "GL_OBJECT_INFO_LOG_LENGTH_ARB");
#endif
#if defined(GL_OBJECT_ATTACHED_OBJECTS_ARB)
defconsti(env, "GL-OBJECT-ATTACHED-OBJECTS-ARB", (GLenum) GL_OBJECT_ATTACHED_OBJECTS_ARB, "GL_OBJECT_ATTACHED_OBJECTS_ARB");
#endif
#if defined(GL_OBJECT_ACTIVE_UNIFORMS_ARB)
defconsti(env, "GL-OBJECT-ACTIVE-UNIFORMS-ARB", (GLenum) GL_OBJECT_ACTIVE_UNIFORMS_ARB, "GL_OBJECT_ACTIVE_UNIFORMS_ARB");
#endif
#if defined(GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB)
defconsti(env, "GL-OBJECT-ACTIVE-UNIFORM-MAX-LENGTH-ARB", (GLenum) GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB, "GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB");
#endif
#if defined(GL_OBJECT_SHADER_SOURCE_LENGTH_ARB)
defconsti(env, "GL-OBJECT-SHADER-SOURCE-LENGTH-ARB", (GLenum) GL_OBJECT_SHADER_SOURCE_LENGTH_ARB, "GL_OBJECT_SHADER_SOURCE_LENGTH_ARB");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER)
defconsti(env, "GL-SHADER-STORAGE-BUFFER", (GLenum) GL_SHADER_STORAGE_BUFFER, "GL_SHADER_STORAGE_BUFFER");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER_BINDING)
defconsti(env, "GL-SHADER-STORAGE-BUFFER-BINDING", (GLenum) GL_SHADER_STORAGE_BUFFER_BINDING, "GL_SHADER_STORAGE_BUFFER_BINDING");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER_START)
defconsti(env, "GL-SHADER-STORAGE-BUFFER-START", (GLenum) GL_SHADER_STORAGE_BUFFER_START, "GL_SHADER_STORAGE_BUFFER_START");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER_SIZE)
defconsti(env, "GL-SHADER-STORAGE-BUFFER-SIZE", (GLenum) GL_SHADER_STORAGE_BUFFER_SIZE, "GL_SHADER_STORAGE_BUFFER_SIZE");
#endif
#if defined(GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-VERTEX-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS, "GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-GEOMETRY-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS, "GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-TESS-CONTROL-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS, "GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-TESS-EVALUATION-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS, "GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-FRAGMENT-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS, "GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-COMPUTE-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS, "GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS)
defconsti(env, "GL-MAX-COMBINED-SHADER-STORAGE-BLOCKS", (GLenum) GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS, "GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS");
#endif
#if defined(GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS)
defconsti(env, "GL-MAX-SHADER-STORAGE-BUFFER-BINDINGS", (GLenum) GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS, "GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS");
#endif
#if defined(GL_MAX_SHADER_STORAGE_BLOCK_SIZE)
defconsti(env, "GL-MAX-SHADER-STORAGE-BLOCK-SIZE", (GLenum) GL_MAX_SHADER_STORAGE_BLOCK_SIZE, "GL_MAX_SHADER_STORAGE_BLOCK_SIZE");
#endif
#if defined(GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT)
defconsti(env, "GL-SHADER-STORAGE-BUFFER-OFFSET-ALIGNMENT", (GLenum) GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT, "GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT");
#endif
#if defined(GL_SHADER_STORAGE_BARRIER_BIT)
defconsti(env, "GL-SHADER-STORAGE-BARRIER-BIT", (GLenum) GL_SHADER_STORAGE_BARRIER_BIT, "GL_SHADER_STORAGE_BARRIER_BIT");
#endif
#if defined(GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES)
defconsti(env, "GL-MAX-COMBINED-SHADER-OUTPUT-RESOURCES", (GLenum) GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES, "GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES");
#endif
#if defined(GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS)
defconsti(env, "GL-MAX-COMBINED-IMAGE-UNITS-AND-FRAGMENT-OUTPUTS", (GLenum) GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS, "GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS");
#endif
#if defined(GL_ACTIVE_SUBROUTINES)
defconsti(env, "GL-ACTIVE-SUBROUTINES", (GLenum) GL_ACTIVE_SUBROUTINES, "GL_ACTIVE_SUBROUTINES");
#endif
#if defined(GL_ACTIVE_SUBROUTINE_UNIFORMS)
defconsti(env, "GL-ACTIVE-SUBROUTINE-UNIFORMS", (GLenum) GL_ACTIVE_SUBROUTINE_UNIFORMS, "GL_ACTIVE_SUBROUTINE_UNIFORMS");
#endif
#if defined(GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS)
defconsti(env, "GL-ACTIVE-SUBROUTINE-UNIFORM-LOCATIONS", (GLenum) GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS, "GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS");
#endif
#if defined(GL_ACTIVE_SUBROUTINE_MAX_LENGTH)
defconsti(env, "GL-ACTIVE-SUBROUTINE-MAX-LENGTH", (GLenum) GL_ACTIVE_SUBROUTINE_MAX_LENGTH, "GL_ACTIVE_SUBROUTINE_MAX_LENGTH");
#endif
#if defined(GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH)
defconsti(env, "GL-ACTIVE-SUBROUTINE-UNIFORM-MAX-LENGTH", (GLenum) GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH, "GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH");
#endif
#if defined(GL_MAX_SUBROUTINES)
defconsti(env, "GL-MAX-SUBROUTINES", (GLenum) GL_MAX_SUBROUTINES, "GL_MAX_SUBROUTINES");
#endif
#if defined(GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS)
defconsti(env, "GL-MAX-SUBROUTINE-UNIFORM-LOCATIONS", (GLenum) GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS, "GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS");
#endif
#if defined(GL_NUM_COMPATIBLE_SUBROUTINES)
defconsti(env, "GL-NUM-COMPATIBLE-SUBROUTINES", (GLenum) GL_NUM_COMPATIBLE_SUBROUTINES, "GL_NUM_COMPATIBLE_SUBROUTINES");
#endif
#if defined(GL_COMPATIBLE_SUBROUTINES)
defconsti(env, "GL-COMPATIBLE-SUBROUTINES", (GLenum) GL_COMPATIBLE_SUBROUTINES, "GL_COMPATIBLE_SUBROUTINES");
#endif
#if defined(GL_UNIFORM_SIZE)
defconsti(env, "GL-UNIFORM-SIZE", (GLenum) GL_UNIFORM_SIZE, "GL_UNIFORM_SIZE");
#endif
#if defined(GL_UNIFORM_NAME_LENGTH)
defconsti(env, "GL-UNIFORM-NAME-LENGTH", (GLenum) GL_UNIFORM_NAME_LENGTH, "GL_UNIFORM_NAME_LENGTH");
#endif
#if defined(GL_SHADING_LANGUAGE_VERSION_ARB)
defconsti(env, "GL-SHADING-LANGUAGE-VERSION-ARB", (GLenum) GL_SHADING_LANGUAGE_VERSION_ARB, "GL_SHADING_LANGUAGE_VERSION_ARB");
#endif
#if defined(GL_SHADER_INCLUDE_ARB)
defconsti(env, "GL-SHADER-INCLUDE-ARB", (GLenum) GL_SHADER_INCLUDE_ARB, "GL_SHADER_INCLUDE_ARB");
#endif
#if defined(GL_NAMED_STRING_LENGTH_ARB)
defconsti(env, "GL-NAMED-STRING-LENGTH-ARB", (GLenum) GL_NAMED_STRING_LENGTH_ARB, "GL_NAMED_STRING_LENGTH_ARB");
#endif
#if defined(GL_NAMED_STRING_TYPE_ARB)
defconsti(env, "GL-NAMED-STRING-TYPE-ARB", (GLenum) GL_NAMED_STRING_TYPE_ARB, "GL_NAMED_STRING_TYPE_ARB");
#endif
#if defined(GL_TEXTURE_COMPARE_MODE_ARB)
defconsti(env, "GL-TEXTURE-COMPARE-MODE-ARB", (GLenum) GL_TEXTURE_COMPARE_MODE_ARB, "GL_TEXTURE_COMPARE_MODE_ARB");
#endif
#if defined(GL_TEXTURE_COMPARE_FUNC_ARB)
defconsti(env, "GL-TEXTURE-COMPARE-FUNC-ARB", (GLenum) GL_TEXTURE_COMPARE_FUNC_ARB, "GL_TEXTURE_COMPARE_FUNC_ARB");
#endif
#if defined(GL_COMPARE_R_TO_TEXTURE_ARB)
defconsti(env, "GL-COMPARE-R-TO-TEXTURE-ARB", (GLenum) GL_COMPARE_R_TO_TEXTURE_ARB, "GL_COMPARE_R_TO_TEXTURE_ARB");
#endif
#if defined(GL_TEXTURE_COMPARE_FAIL_VALUE_ARB)
defconsti(env, "GL-TEXTURE-COMPARE-FAIL-VALUE-ARB", (GLenum) GL_TEXTURE_COMPARE_FAIL_VALUE_ARB, "GL_TEXTURE_COMPARE_FAIL_VALUE_ARB");
#endif
#if defined(GL_SPARSE_STORAGE_BIT_ARB)
defconsti(env, "GL-SPARSE-STORAGE-BIT-ARB", (GLenum) GL_SPARSE_STORAGE_BIT_ARB, "GL_SPARSE_STORAGE_BIT_ARB");
#endif
#if defined(GL_SPARSE_BUFFER_PAGE_SIZE_ARB)
defconsti(env, "GL-SPARSE-BUFFER-PAGE-SIZE-ARB", (GLenum) GL_SPARSE_BUFFER_PAGE_SIZE_ARB, "GL_SPARSE_BUFFER_PAGE_SIZE_ARB");
#endif
#if defined(GL_TEXTURE_SPARSE_ARB)
defconsti(env, "GL-TEXTURE-SPARSE-ARB", (GLenum) GL_TEXTURE_SPARSE_ARB, "GL_TEXTURE_SPARSE_ARB");
#endif
#if defined(GL_VIRTUAL_PAGE_SIZE_INDEX_ARB)
defconsti(env, "GL-VIRTUAL-PAGE-SIZE-INDEX-ARB", (GLenum) GL_VIRTUAL_PAGE_SIZE_INDEX_ARB, "GL_VIRTUAL_PAGE_SIZE_INDEX_ARB");
#endif
#if defined(GL_NUM_SPARSE_LEVELS_ARB)
defconsti(env, "GL-NUM-SPARSE-LEVELS-ARB", (GLenum) GL_NUM_SPARSE_LEVELS_ARB, "GL_NUM_SPARSE_LEVELS_ARB");
#endif
#if defined(GL_NUM_VIRTUAL_PAGE_SIZES_ARB)
defconsti(env, "GL-NUM-VIRTUAL-PAGE-SIZES-ARB", (GLenum) GL_NUM_VIRTUAL_PAGE_SIZES_ARB, "GL_NUM_VIRTUAL_PAGE_SIZES_ARB");
#endif
#if defined(GL_VIRTUAL_PAGE_SIZE_X_ARB)
defconsti(env, "GL-VIRTUAL-PAGE-SIZE-X-ARB", (GLenum) GL_VIRTUAL_PAGE_SIZE_X_ARB, "GL_VIRTUAL_PAGE_SIZE_X_ARB");
#endif
#if defined(GL_VIRTUAL_PAGE_SIZE_Y_ARB)
defconsti(env, "GL-VIRTUAL-PAGE-SIZE-Y-ARB", (GLenum) GL_VIRTUAL_PAGE_SIZE_Y_ARB, "GL_VIRTUAL_PAGE_SIZE_Y_ARB");
#endif
#if defined(GL_VIRTUAL_PAGE_SIZE_Z_ARB)
defconsti(env, "GL-VIRTUAL-PAGE-SIZE-Z-ARB", (GLenum) GL_VIRTUAL_PAGE_SIZE_Z_ARB, "GL_VIRTUAL_PAGE_SIZE_Z_ARB");
#endif
#if defined(GL_MAX_SPARSE_TEXTURE_SIZE_ARB)
defconsti(env, "GL-MAX-SPARSE-TEXTURE-SIZE-ARB", (GLenum) GL_MAX_SPARSE_TEXTURE_SIZE_ARB, "GL_MAX_SPARSE_TEXTURE_SIZE_ARB");
#endif
#if defined(GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB)
defconsti(env, "GL-MAX-SPARSE-3D-TEXTURE-SIZE-ARB", (GLenum) GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB, "GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB");
#endif
#if defined(GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB)
defconsti(env, "GL-MAX-SPARSE-ARRAY-TEXTURE-LAYERS-ARB", (GLenum) GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB, "GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB");
#endif
#if defined(GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB)
defconsti(env, "GL-SPARSE-TEXTURE-FULL-ARRAY-CUBE-MIPMAPS-ARB", (GLenum) GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB, "GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB");
#endif
#if defined(GL_SPIR_V_EXTENSIONS)
defconsti(env, "GL-SPIR-V-EXTENSIONS", (GLenum) GL_SPIR_V_EXTENSIONS, "GL_SPIR_V_EXTENSIONS");
#endif
#if defined(GL_NUM_SPIR_V_EXTENSIONS)
defconsti(env, "GL-NUM-SPIR-V-EXTENSIONS", (GLenum) GL_NUM_SPIR_V_EXTENSIONS, "GL_NUM_SPIR_V_EXTENSIONS");
#endif
#if defined(GL_DEPTH_STENCIL_TEXTURE_MODE)
defconsti(env, "GL-DEPTH-STENCIL-TEXTURE-MODE", (GLenum) GL_DEPTH_STENCIL_TEXTURE_MODE, "GL_DEPTH_STENCIL_TEXTURE_MODE");
#endif
#if defined(GL_MAX_SERVER_WAIT_TIMEOUT)
defconsti(env, "GL-MAX-SERVER-WAIT-TIMEOUT", (GLenum) GL_MAX_SERVER_WAIT_TIMEOUT, "GL_MAX_SERVER_WAIT_TIMEOUT");
#endif
#if defined(GL_OBJECT_TYPE)
defconsti(env, "GL-OBJECT-TYPE", (GLenum) GL_OBJECT_TYPE, "GL_OBJECT_TYPE");
#endif
#if defined(GL_SYNC_CONDITION)
defconsti(env, "GL-SYNC-CONDITION", (GLenum) GL_SYNC_CONDITION, "GL_SYNC_CONDITION");
#endif
#if defined(GL_SYNC_STATUS)
defconsti(env, "GL-SYNC-STATUS", (GLenum) GL_SYNC_STATUS, "GL_SYNC_STATUS");
#endif
#if defined(GL_SYNC_FLAGS)
defconsti(env, "GL-SYNC-FLAGS", (GLenum) GL_SYNC_FLAGS, "GL_SYNC_FLAGS");
#endif
#if defined(GL_SYNC_FENCE)
defconsti(env, "GL-SYNC-FENCE", (GLenum) GL_SYNC_FENCE, "GL_SYNC_FENCE");
#endif
#if defined(GL_SYNC_GPU_COMMANDS_COMPLETE)
defconsti(env, "GL-SYNC-GPU-COMMANDS-COMPLETE", (GLenum) GL_SYNC_GPU_COMMANDS_COMPLETE, "GL_SYNC_GPU_COMMANDS_COMPLETE");
#endif
#if defined(GL_UNSIGNALED)
defconsti(env, "GL-UNSIGNALED", (GLenum) GL_UNSIGNALED, "GL_UNSIGNALED");
#endif
#if defined(GL_SIGNALED)
defconsti(env, "GL-SIGNALED", (GLenum) GL_SIGNALED, "GL_SIGNALED");
#endif
#if defined(GL_ALREADY_SIGNALED)
defconsti(env, "GL-ALREADY-SIGNALED", (GLenum) GL_ALREADY_SIGNALED, "GL_ALREADY_SIGNALED");
#endif
#if defined(GL_TIMEOUT_EXPIRED)
defconsti(env, "GL-TIMEOUT-EXPIRED", (GLenum) GL_TIMEOUT_EXPIRED, "GL_TIMEOUT_EXPIRED");
#endif
#if defined(GL_CONDITION_SATISFIED)
defconsti(env, "GL-CONDITION-SATISFIED", (GLenum) GL_CONDITION_SATISFIED, "GL_CONDITION_SATISFIED");
#endif
#if defined(GL_WAIT_FAILED)
defconsti(env, "GL-WAIT-FAILED", (GLenum) GL_WAIT_FAILED, "GL_WAIT_FAILED");
#endif
#if defined(GL_SYNC_FLUSH_COMMANDS_BIT)
defconsti(env, "GL-SYNC-FLUSH-COMMANDS-BIT", (GLenum) GL_SYNC_FLUSH_COMMANDS_BIT, "GL_SYNC_FLUSH_COMMANDS_BIT");
#endif
#if defined(GL_TIMEOUT_IGNORED)
defconsti(env, "GL-TIMEOUT-IGNORED", (GLenum) GL_TIMEOUT_IGNORED, "GL_TIMEOUT_IGNORED");
#endif
#if defined(GL_PATCHES)
defconsti(env, "GL-PATCHES", (GLenum) GL_PATCHES, "GL_PATCHES");
#endif
#if defined(GL_PATCH_VERTICES)
defconsti(env, "GL-PATCH-VERTICES", (GLenum) GL_PATCH_VERTICES, "GL_PATCH_VERTICES");
#endif
#if defined(GL_PATCH_DEFAULT_INNER_LEVEL)
defconsti(env, "GL-PATCH-DEFAULT-INNER-LEVEL", (GLenum) GL_PATCH_DEFAULT_INNER_LEVEL, "GL_PATCH_DEFAULT_INNER_LEVEL");
#endif
#if defined(GL_PATCH_DEFAULT_OUTER_LEVEL)
defconsti(env, "GL-PATCH-DEFAULT-OUTER-LEVEL", (GLenum) GL_PATCH_DEFAULT_OUTER_LEVEL, "GL_PATCH_DEFAULT_OUTER_LEVEL");
#endif
#if defined(GL_TESS_CONTROL_OUTPUT_VERTICES)
defconsti(env, "GL-TESS-CONTROL-OUTPUT-VERTICES", (GLenum) GL_TESS_CONTROL_OUTPUT_VERTICES, "GL_TESS_CONTROL_OUTPUT_VERTICES");
#endif
#if defined(GL_TESS_GEN_MODE)
defconsti(env, "GL-TESS-GEN-MODE", (GLenum) GL_TESS_GEN_MODE, "GL_TESS_GEN_MODE");
#endif
#if defined(GL_TESS_GEN_SPACING)
defconsti(env, "GL-TESS-GEN-SPACING", (GLenum) GL_TESS_GEN_SPACING, "GL_TESS_GEN_SPACING");
#endif
#if defined(GL_TESS_GEN_VERTEX_ORDER)
defconsti(env, "GL-TESS-GEN-VERTEX-ORDER", (GLenum) GL_TESS_GEN_VERTEX_ORDER, "GL_TESS_GEN_VERTEX_ORDER");
#endif
#if defined(GL_TESS_GEN_POINT_MODE)
defconsti(env, "GL-TESS-GEN-POINT-MODE", (GLenum) GL_TESS_GEN_POINT_MODE, "GL_TESS_GEN_POINT_MODE");
#endif
#if defined(GL_TRIANGLES)
defconsti(env, "GL-TRIANGLES", (GLenum) GL_TRIANGLES, "GL_TRIANGLES");
#endif
#if defined(GL_ISOLINES)
defconsti(env, "GL-ISOLINES", (GLenum) GL_ISOLINES, "GL_ISOLINES");
#endif
#if defined(GL_QUADS)
defconsti(env, "GL-QUADS", (GLenum) GL_QUADS, "GL_QUADS");
#endif
#if defined(GL_EQUAL)
defconsti(env, "GL-EQUAL", (GLenum) GL_EQUAL, "GL_EQUAL");
#endif
#if defined(GL_FRACTIONAL_ODD)
defconsti(env, "GL-FRACTIONAL-ODD", (GLenum) GL_FRACTIONAL_ODD, "GL_FRACTIONAL_ODD");
#endif
#if defined(GL_FRACTIONAL_EVEN)
defconsti(env, "GL-FRACTIONAL-EVEN", (GLenum) GL_FRACTIONAL_EVEN, "GL_FRACTIONAL_EVEN");
#endif
#if defined(GL_CCW)
defconsti(env, "GL-CCW", (GLenum) GL_CCW, "GL_CCW");
#endif
#if defined(GL_CW)
defconsti(env, "GL-CW", (GLenum) GL_CW, "GL_CW");
#endif
#if defined(GL_MAX_PATCH_VERTICES)
defconsti(env, "GL-MAX-PATCH-VERTICES", (GLenum) GL_MAX_PATCH_VERTICES, "GL_MAX_PATCH_VERTICES");
#endif
#if defined(GL_MAX_TESS_GEN_LEVEL)
defconsti(env, "GL-MAX-TESS-GEN-LEVEL", (GLenum) GL_MAX_TESS_GEN_LEVEL, "GL_MAX_TESS_GEN_LEVEL");
#endif
#if defined(GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-TESS-CONTROL-UNIFORM-COMPONENTS", (GLenum) GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS, "GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-TESS-EVALUATION-UNIFORM-COMPONENTS", (GLenum) GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS, "GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-TESS-CONTROL-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS, "GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS)
defconsti(env, "GL-MAX-TESS-EVALUATION-TEXTURE-IMAGE-UNITS", (GLenum) GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS, "GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS");
#endif
#if defined(GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS)
defconsti(env, "GL-MAX-TESS-CONTROL-OUTPUT-COMPONENTS", (GLenum) GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS, "GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_PATCH_COMPONENTS)
defconsti(env, "GL-MAX-TESS-PATCH-COMPONENTS", (GLenum) GL_MAX_TESS_PATCH_COMPONENTS, "GL_MAX_TESS_PATCH_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS)
defconsti(env, "GL-MAX-TESS-CONTROL-TOTAL-OUTPUT-COMPONENTS", (GLenum) GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS, "GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS)
defconsti(env, "GL-MAX-TESS-EVALUATION-OUTPUT-COMPONENTS", (GLenum) GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS, "GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-TESS-CONTROL-UNIFORM-BLOCKS", (GLenum) GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS, "GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-TESS-EVALUATION-UNIFORM-BLOCKS", (GLenum) GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS, "GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_TESS_CONTROL_INPUT_COMPONENTS)
defconsti(env, "GL-MAX-TESS-CONTROL-INPUT-COMPONENTS", (GLenum) GL_MAX_TESS_CONTROL_INPUT_COMPONENTS, "GL_MAX_TESS_CONTROL_INPUT_COMPONENTS");
#endif
#if defined(GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS)
defconsti(env, "GL-MAX-TESS-EVALUATION-INPUT-COMPONENTS", (GLenum) GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS, "GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS");
#endif
#if defined(GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-TESS-CONTROL-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-TESS-EVALUATION-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-TESS-CONTROL-SHADER", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER, "GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-TESS-EVALUATION-SHADER", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER, "GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER");
#endif
#if defined(GL_TESS_EVALUATION_SHADER)
defconsti(env, "GL-TESS-EVALUATION-SHADER", (GLenum) GL_TESS_EVALUATION_SHADER, "GL_TESS_EVALUATION_SHADER");
#endif
#if defined(GL_TESS_CONTROL_SHADER)
defconsti(env, "GL-TESS-CONTROL-SHADER", (GLenum) GL_TESS_CONTROL_SHADER, "GL_TESS_CONTROL_SHADER");
#endif
#if defined(GL_CLAMP_TO_BORDER_ARB)
defconsti(env, "GL-CLAMP-TO-BORDER-ARB", (GLenum) GL_CLAMP_TO_BORDER_ARB, "GL_CLAMP_TO_BORDER_ARB");
#endif
#if defined(GL_TEXTURE_BUFFER_ARB)
defconsti(env, "GL-TEXTURE-BUFFER-ARB", (GLenum) GL_TEXTURE_BUFFER_ARB, "GL_TEXTURE_BUFFER_ARB");
#endif
#if defined(GL_MAX_TEXTURE_BUFFER_SIZE_ARB)
defconsti(env, "GL-MAX-TEXTURE-BUFFER-SIZE-ARB", (GLenum) GL_MAX_TEXTURE_BUFFER_SIZE_ARB, "GL_MAX_TEXTURE_BUFFER_SIZE_ARB");
#endif
#if defined(GL_TEXTURE_BINDING_BUFFER_ARB)
defconsti(env, "GL-TEXTURE-BINDING-BUFFER-ARB", (GLenum) GL_TEXTURE_BINDING_BUFFER_ARB, "GL_TEXTURE_BINDING_BUFFER_ARB");
#endif
#if defined(GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB)
defconsti(env, "GL-TEXTURE-BUFFER-DATA-STORE-BINDING-ARB", (GLenum) GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB, "GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB");
#endif
#if defined(GL_TEXTURE_BUFFER_FORMAT_ARB)
defconsti(env, "GL-TEXTURE-BUFFER-FORMAT-ARB", (GLenum) GL_TEXTURE_BUFFER_FORMAT_ARB, "GL_TEXTURE_BUFFER_FORMAT_ARB");
#endif
#if defined(GL_RGB32F)
defconsti(env, "GL-RGB32F", (GLenum) GL_RGB32F, "GL_RGB32F");
#endif
#if defined(GL_RGB32UI)
defconsti(env, "GL-RGB32UI", (GLenum) GL_RGB32UI, "GL_RGB32UI");
#endif
#if defined(GL_RGB32I)
defconsti(env, "GL-RGB32I", (GLenum) GL_RGB32I, "GL_RGB32I");
#endif
#if defined(GL_TEXTURE_BUFFER_OFFSET)
defconsti(env, "GL-TEXTURE-BUFFER-OFFSET", (GLenum) GL_TEXTURE_BUFFER_OFFSET, "GL_TEXTURE_BUFFER_OFFSET");
#endif
#if defined(GL_TEXTURE_BUFFER_SIZE)
defconsti(env, "GL-TEXTURE-BUFFER-SIZE", (GLenum) GL_TEXTURE_BUFFER_SIZE, "GL_TEXTURE_BUFFER_SIZE");
#endif
#if defined(GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT)
defconsti(env, "GL-TEXTURE-BUFFER-OFFSET-ALIGNMENT", (GLenum) GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT, "GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT");
#endif
#if defined(GL_COMPRESSED_ALPHA_ARB)
defconsti(env, "GL-COMPRESSED-ALPHA-ARB", (GLenum) GL_COMPRESSED_ALPHA_ARB, "GL_COMPRESSED_ALPHA_ARB");
#endif
#if defined(GL_COMPRESSED_LUMINANCE_ARB)
defconsti(env, "GL-COMPRESSED-LUMINANCE-ARB", (GLenum) GL_COMPRESSED_LUMINANCE_ARB, "GL_COMPRESSED_LUMINANCE_ARB");
#endif
#if defined(GL_COMPRESSED_LUMINANCE_ALPHA_ARB)
defconsti(env, "GL-COMPRESSED-LUMINANCE-ALPHA-ARB", (GLenum) GL_COMPRESSED_LUMINANCE_ALPHA_ARB, "GL_COMPRESSED_LUMINANCE_ALPHA_ARB");
#endif
#if defined(GL_COMPRESSED_INTENSITY_ARB)
defconsti(env, "GL-COMPRESSED-INTENSITY-ARB", (GLenum) GL_COMPRESSED_INTENSITY_ARB, "GL_COMPRESSED_INTENSITY_ARB");
#endif
#if defined(GL_COMPRESSED_RGB_ARB)
defconsti(env, "GL-COMPRESSED-RGB-ARB", (GLenum) GL_COMPRESSED_RGB_ARB, "GL_COMPRESSED_RGB_ARB");
#endif
#if defined(GL_COMPRESSED_RGBA_ARB)
defconsti(env, "GL-COMPRESSED-RGBA-ARB", (GLenum) GL_COMPRESSED_RGBA_ARB, "GL_COMPRESSED_RGBA_ARB");
#endif
#if defined(GL_TEXTURE_COMPRESSION_HINT_ARB)
defconsti(env, "GL-TEXTURE-COMPRESSION-HINT-ARB", (GLenum) GL_TEXTURE_COMPRESSION_HINT_ARB, "GL_TEXTURE_COMPRESSION_HINT_ARB");
#endif
#if defined(GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB)
defconsti(env, "GL-TEXTURE-COMPRESSED-IMAGE-SIZE-ARB", (GLenum) GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB, "GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB");
#endif
#if defined(GL_TEXTURE_COMPRESSED_ARB)
defconsti(env, "GL-TEXTURE-COMPRESSED-ARB", (GLenum) GL_TEXTURE_COMPRESSED_ARB, "GL_TEXTURE_COMPRESSED_ARB");
#endif
#if defined(GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB)
defconsti(env, "GL-NUM-COMPRESSED-TEXTURE-FORMATS-ARB", (GLenum) GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB, "GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB");
#endif
#if defined(GL_COMPRESSED_TEXTURE_FORMATS_ARB)
defconsti(env, "GL-COMPRESSED-TEXTURE-FORMATS-ARB", (GLenum) GL_COMPRESSED_TEXTURE_FORMATS_ARB, "GL_COMPRESSED_TEXTURE_FORMATS_ARB");
#endif
#if defined(GL_COMPRESSED_RGBA_BPTC_UNORM_ARB)
defconsti(env, "GL-COMPRESSED-RGBA-BPTC-UNORM-ARB", (GLenum) GL_COMPRESSED_RGBA_BPTC_UNORM_ARB, "GL_COMPRESSED_RGBA_BPTC_UNORM_ARB");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-BPTC-UNORM-ARB", (GLenum) GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB, "GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB");
#endif
#if defined(GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB)
defconsti(env, "GL-COMPRESSED-RGB-BPTC-SIGNED-FLOAT-ARB", (GLenum) GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB, "GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB");
#endif
#if defined(GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB)
defconsti(env, "GL-COMPRESSED-RGB-BPTC-UNSIGNED-FLOAT-ARB", (GLenum) GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB, "GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB");
#endif
#if defined(GL_COMPRESSED_RED_RGTC1)
defconsti(env, "GL-COMPRESSED-RED-RGTC1", (GLenum) GL_COMPRESSED_RED_RGTC1, "GL_COMPRESSED_RED_RGTC1");
#endif
#if defined(GL_COMPRESSED_SIGNED_RED_RGTC1)
defconsti(env, "GL-COMPRESSED-SIGNED-RED-RGTC1", (GLenum) GL_COMPRESSED_SIGNED_RED_RGTC1, "GL_COMPRESSED_SIGNED_RED_RGTC1");
#endif
#if defined(GL_COMPRESSED_RG_RGTC2)
defconsti(env, "GL-COMPRESSED-RG-RGTC2", (GLenum) GL_COMPRESSED_RG_RGTC2, "GL_COMPRESSED_RG_RGTC2");
#endif
#if defined(GL_COMPRESSED_SIGNED_RG_RGTC2)
defconsti(env, "GL-COMPRESSED-SIGNED-RG-RGTC2", (GLenum) GL_COMPRESSED_SIGNED_RG_RGTC2, "GL_COMPRESSED_SIGNED_RG_RGTC2");
#endif
#if defined(GL_NORMAL_MAP_ARB)
defconsti(env, "GL-NORMAL-MAP-ARB", (GLenum) GL_NORMAL_MAP_ARB, "GL_NORMAL_MAP_ARB");
#endif
#if defined(GL_REFLECTION_MAP_ARB)
defconsti(env, "GL-REFLECTION-MAP-ARB", (GLenum) GL_REFLECTION_MAP_ARB, "GL_REFLECTION_MAP_ARB");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_ARB)
defconsti(env, "GL-TEXTURE-CUBE-MAP-ARB", (GLenum) GL_TEXTURE_CUBE_MAP_ARB, "GL_TEXTURE_CUBE_MAP_ARB");
#endif
#if defined(GL_TEXTURE_BINDING_CUBE_MAP_ARB)
defconsti(env, "GL-TEXTURE-BINDING-CUBE-MAP-ARB", (GLenum) GL_TEXTURE_BINDING_CUBE_MAP_ARB, "GL_TEXTURE_BINDING_CUBE_MAP_ARB");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-X-ARB", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB, "GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-X-ARB", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB, "GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-Y-ARB", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB, "GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-Y-ARB", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-Z-ARB", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB, "GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-Z-ARB", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB");
#endif
#if defined(GL_PROXY_TEXTURE_CUBE_MAP_ARB)
defconsti(env, "GL-PROXY-TEXTURE-CUBE-MAP-ARB", (GLenum) GL_PROXY_TEXTURE_CUBE_MAP_ARB, "GL_PROXY_TEXTURE_CUBE_MAP_ARB");
#endif
#if defined(GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB)
defconsti(env, "GL-MAX-CUBE-MAP-TEXTURE-SIZE-ARB", (GLenum) GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB, "GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_ARRAY_ARB)
defconsti(env, "GL-TEXTURE-CUBE-MAP-ARRAY-ARB", (GLenum) GL_TEXTURE_CUBE_MAP_ARRAY_ARB, "GL_TEXTURE_CUBE_MAP_ARRAY_ARB");
#endif
#if defined(GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB)
defconsti(env, "GL-TEXTURE-BINDING-CUBE-MAP-ARRAY-ARB", (GLenum) GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB, "GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB");
#endif
#if defined(GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB)
defconsti(env, "GL-PROXY-TEXTURE-CUBE-MAP-ARRAY-ARB", (GLenum) GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB, "GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB");
#endif
#if defined(GL_SAMPLER_CUBE_MAP_ARRAY_ARB)
defconsti(env, "GL-SAMPLER-CUBE-MAP-ARRAY-ARB", (GLenum) GL_SAMPLER_CUBE_MAP_ARRAY_ARB, "GL_SAMPLER_CUBE_MAP_ARRAY_ARB");
#endif
#if defined(GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB)
defconsti(env, "GL-SAMPLER-CUBE-MAP-ARRAY-SHADOW-ARB", (GLenum) GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB, "GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB");
#endif
#if defined(GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB)
defconsti(env, "GL-INT-SAMPLER-CUBE-MAP-ARRAY-ARB", (GLenum) GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB, "GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-CUBE-MAP-ARRAY-ARB", (GLenum) GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB, "GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB");
#endif
#if defined(GL_COMBINE_ARB)
defconsti(env, "GL-COMBINE-ARB", (GLenum) GL_COMBINE_ARB, "GL_COMBINE_ARB");
#endif
#if defined(GL_COMBINE_RGB_ARB)
defconsti(env, "GL-COMBINE-RGB-ARB", (GLenum) GL_COMBINE_RGB_ARB, "GL_COMBINE_RGB_ARB");
#endif
#if defined(GL_COMBINE_ALPHA_ARB)
defconsti(env, "GL-COMBINE-ALPHA-ARB", (GLenum) GL_COMBINE_ALPHA_ARB, "GL_COMBINE_ALPHA_ARB");
#endif
#if defined(GL_SOURCE0_RGB_ARB)
defconsti(env, "GL-SOURCE0-RGB-ARB", (GLenum) GL_SOURCE0_RGB_ARB, "GL_SOURCE0_RGB_ARB");
#endif
#if defined(GL_SOURCE1_RGB_ARB)
defconsti(env, "GL-SOURCE1-RGB-ARB", (GLenum) GL_SOURCE1_RGB_ARB, "GL_SOURCE1_RGB_ARB");
#endif
#if defined(GL_SOURCE2_RGB_ARB)
defconsti(env, "GL-SOURCE2-RGB-ARB", (GLenum) GL_SOURCE2_RGB_ARB, "GL_SOURCE2_RGB_ARB");
#endif
#if defined(GL_SOURCE0_ALPHA_ARB)
defconsti(env, "GL-SOURCE0-ALPHA-ARB", (GLenum) GL_SOURCE0_ALPHA_ARB, "GL_SOURCE0_ALPHA_ARB");
#endif
#if defined(GL_SOURCE1_ALPHA_ARB)
defconsti(env, "GL-SOURCE1-ALPHA-ARB", (GLenum) GL_SOURCE1_ALPHA_ARB, "GL_SOURCE1_ALPHA_ARB");
#endif
#if defined(GL_SOURCE2_ALPHA_ARB)
defconsti(env, "GL-SOURCE2-ALPHA-ARB", (GLenum) GL_SOURCE2_ALPHA_ARB, "GL_SOURCE2_ALPHA_ARB");
#endif
#if defined(GL_OPERAND0_RGB_ARB)
defconsti(env, "GL-OPERAND0-RGB-ARB", (GLenum) GL_OPERAND0_RGB_ARB, "GL_OPERAND0_RGB_ARB");
#endif
#if defined(GL_OPERAND1_RGB_ARB)
defconsti(env, "GL-OPERAND1-RGB-ARB", (GLenum) GL_OPERAND1_RGB_ARB, "GL_OPERAND1_RGB_ARB");
#endif
#if defined(GL_OPERAND2_RGB_ARB)
defconsti(env, "GL-OPERAND2-RGB-ARB", (GLenum) GL_OPERAND2_RGB_ARB, "GL_OPERAND2_RGB_ARB");
#endif
#if defined(GL_OPERAND0_ALPHA_ARB)
defconsti(env, "GL-OPERAND0-ALPHA-ARB", (GLenum) GL_OPERAND0_ALPHA_ARB, "GL_OPERAND0_ALPHA_ARB");
#endif
#if defined(GL_OPERAND1_ALPHA_ARB)
defconsti(env, "GL-OPERAND1-ALPHA-ARB", (GLenum) GL_OPERAND1_ALPHA_ARB, "GL_OPERAND1_ALPHA_ARB");
#endif
#if defined(GL_OPERAND2_ALPHA_ARB)
defconsti(env, "GL-OPERAND2-ALPHA-ARB", (GLenum) GL_OPERAND2_ALPHA_ARB, "GL_OPERAND2_ALPHA_ARB");
#endif
#if defined(GL_RGB_SCALE_ARB)
defconsti(env, "GL-RGB-SCALE-ARB", (GLenum) GL_RGB_SCALE_ARB, "GL_RGB_SCALE_ARB");
#endif
#if defined(GL_ADD_SIGNED_ARB)
defconsti(env, "GL-ADD-SIGNED-ARB", (GLenum) GL_ADD_SIGNED_ARB, "GL_ADD_SIGNED_ARB");
#endif
#if defined(GL_INTERPOLATE_ARB)
defconsti(env, "GL-INTERPOLATE-ARB", (GLenum) GL_INTERPOLATE_ARB, "GL_INTERPOLATE_ARB");
#endif
#if defined(GL_SUBTRACT_ARB)
defconsti(env, "GL-SUBTRACT-ARB", (GLenum) GL_SUBTRACT_ARB, "GL_SUBTRACT_ARB");
#endif
#if defined(GL_CONSTANT_ARB)
defconsti(env, "GL-CONSTANT-ARB", (GLenum) GL_CONSTANT_ARB, "GL_CONSTANT_ARB");
#endif
#if defined(GL_PRIMARY_COLOR_ARB)
defconsti(env, "GL-PRIMARY-COLOR-ARB", (GLenum) GL_PRIMARY_COLOR_ARB, "GL_PRIMARY_COLOR_ARB");
#endif
#if defined(GL_PREVIOUS_ARB)
defconsti(env, "GL-PREVIOUS-ARB", (GLenum) GL_PREVIOUS_ARB, "GL_PREVIOUS_ARB");
#endif
#if defined(GL_DOT3_RGB_ARB)
defconsti(env, "GL-DOT3-RGB-ARB", (GLenum) GL_DOT3_RGB_ARB, "GL_DOT3_RGB_ARB");
#endif
#if defined(GL_DOT3_RGBA_ARB)
defconsti(env, "GL-DOT3-RGBA-ARB", (GLenum) GL_DOT3_RGBA_ARB, "GL_DOT3_RGBA_ARB");
#endif
#if defined(GL_TEXTURE_MAX_ANISOTROPY)
defconsti(env, "GL-TEXTURE-MAX-ANISOTROPY", (GLenum) GL_TEXTURE_MAX_ANISOTROPY, "GL_TEXTURE_MAX_ANISOTROPY");
#endif
#if defined(GL_MAX_TEXTURE_MAX_ANISOTROPY)
defconsti(env, "GL-MAX-TEXTURE-MAX-ANISOTROPY", (GLenum) GL_MAX_TEXTURE_MAX_ANISOTROPY, "GL_MAX_TEXTURE_MAX_ANISOTROPY");
#endif
#if defined(GL_TEXTURE_REDUCTION_MODE_ARB)
defconsti(env, "GL-TEXTURE-REDUCTION-MODE-ARB", (GLenum) GL_TEXTURE_REDUCTION_MODE_ARB, "GL_TEXTURE_REDUCTION_MODE_ARB");
#endif
#if defined(GL_WEIGHTED_AVERAGE_ARB)
defconsti(env, "GL-WEIGHTED-AVERAGE-ARB", (GLenum) GL_WEIGHTED_AVERAGE_ARB, "GL_WEIGHTED_AVERAGE_ARB");
#endif
#if defined(GL_TEXTURE_RED_TYPE_ARB)
defconsti(env, "GL-TEXTURE-RED-TYPE-ARB", (GLenum) GL_TEXTURE_RED_TYPE_ARB, "GL_TEXTURE_RED_TYPE_ARB");
#endif
#if defined(GL_TEXTURE_GREEN_TYPE_ARB)
defconsti(env, "GL-TEXTURE-GREEN-TYPE-ARB", (GLenum) GL_TEXTURE_GREEN_TYPE_ARB, "GL_TEXTURE_GREEN_TYPE_ARB");
#endif
#if defined(GL_TEXTURE_BLUE_TYPE_ARB)
defconsti(env, "GL-TEXTURE-BLUE-TYPE-ARB", (GLenum) GL_TEXTURE_BLUE_TYPE_ARB, "GL_TEXTURE_BLUE_TYPE_ARB");
#endif
#if defined(GL_TEXTURE_ALPHA_TYPE_ARB)
defconsti(env, "GL-TEXTURE-ALPHA-TYPE-ARB", (GLenum) GL_TEXTURE_ALPHA_TYPE_ARB, "GL_TEXTURE_ALPHA_TYPE_ARB");
#endif
#if defined(GL_TEXTURE_LUMINANCE_TYPE_ARB)
defconsti(env, "GL-TEXTURE-LUMINANCE-TYPE-ARB", (GLenum) GL_TEXTURE_LUMINANCE_TYPE_ARB, "GL_TEXTURE_LUMINANCE_TYPE_ARB");
#endif
#if defined(GL_TEXTURE_INTENSITY_TYPE_ARB)
defconsti(env, "GL-TEXTURE-INTENSITY-TYPE-ARB", (GLenum) GL_TEXTURE_INTENSITY_TYPE_ARB, "GL_TEXTURE_INTENSITY_TYPE_ARB");
#endif
#if defined(GL_TEXTURE_DEPTH_TYPE_ARB)
defconsti(env, "GL-TEXTURE-DEPTH-TYPE-ARB", (GLenum) GL_TEXTURE_DEPTH_TYPE_ARB, "GL_TEXTURE_DEPTH_TYPE_ARB");
#endif
#if defined(GL_UNSIGNED_NORMALIZED_ARB)
defconsti(env, "GL-UNSIGNED-NORMALIZED-ARB", (GLenum) GL_UNSIGNED_NORMALIZED_ARB, "GL_UNSIGNED_NORMALIZED_ARB");
#endif
#if defined(GL_RGBA32F_ARB)
defconsti(env, "GL-RGBA32F-ARB", (GLenum) GL_RGBA32F_ARB, "GL_RGBA32F_ARB");
#endif
#if defined(GL_RGB32F_ARB)
defconsti(env, "GL-RGB32F-ARB", (GLenum) GL_RGB32F_ARB, "GL_RGB32F_ARB");
#endif
#if defined(GL_ALPHA32F_ARB)
defconsti(env, "GL-ALPHA32F-ARB", (GLenum) GL_ALPHA32F_ARB, "GL_ALPHA32F_ARB");
#endif
#if defined(GL_INTENSITY32F_ARB)
defconsti(env, "GL-INTENSITY32F-ARB", (GLenum) GL_INTENSITY32F_ARB, "GL_INTENSITY32F_ARB");
#endif
#if defined(GL_LUMINANCE32F_ARB)
defconsti(env, "GL-LUMINANCE32F-ARB", (GLenum) GL_LUMINANCE32F_ARB, "GL_LUMINANCE32F_ARB");
#endif
#if defined(GL_LUMINANCE_ALPHA32F_ARB)
defconsti(env, "GL-LUMINANCE-ALPHA32F-ARB", (GLenum) GL_LUMINANCE_ALPHA32F_ARB, "GL_LUMINANCE_ALPHA32F_ARB");
#endif
#if defined(GL_RGBA16F_ARB)
defconsti(env, "GL-RGBA16F-ARB", (GLenum) GL_RGBA16F_ARB, "GL_RGBA16F_ARB");
#endif
#if defined(GL_RGB16F_ARB)
defconsti(env, "GL-RGB16F-ARB", (GLenum) GL_RGB16F_ARB, "GL_RGB16F_ARB");
#endif
#if defined(GL_ALPHA16F_ARB)
defconsti(env, "GL-ALPHA16F-ARB", (GLenum) GL_ALPHA16F_ARB, "GL_ALPHA16F_ARB");
#endif
#if defined(GL_INTENSITY16F_ARB)
defconsti(env, "GL-INTENSITY16F-ARB", (GLenum) GL_INTENSITY16F_ARB, "GL_INTENSITY16F_ARB");
#endif
#if defined(GL_LUMINANCE16F_ARB)
defconsti(env, "GL-LUMINANCE16F-ARB", (GLenum) GL_LUMINANCE16F_ARB, "GL_LUMINANCE16F_ARB");
#endif
#if defined(GL_LUMINANCE_ALPHA16F_ARB)
defconsti(env, "GL-LUMINANCE-ALPHA16F-ARB", (GLenum) GL_LUMINANCE_ALPHA16F_ARB, "GL_LUMINANCE_ALPHA16F_ARB");
#endif
#if defined(GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB)
defconsti(env, "GL-MIN-PROGRAM-TEXTURE-GATHER-OFFSET-ARB", (GLenum) GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB, "GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB");
#endif
#if defined(GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB)
defconsti(env, "GL-MAX-PROGRAM-TEXTURE-GATHER-OFFSET-ARB", (GLenum) GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB, "GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB");
#endif
#if defined(GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB)
defconsti(env, "GL-MAX-PROGRAM-TEXTURE-GATHER-COMPONENTS-ARB", (GLenum) GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB, "GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB");
#endif
#if defined(GL_MIRROR_CLAMP_TO_EDGE)
defconsti(env, "GL-MIRROR-CLAMP-TO-EDGE", (GLenum) GL_MIRROR_CLAMP_TO_EDGE, "GL_MIRROR_CLAMP_TO_EDGE");
#endif
#if defined(GL_MIRRORED_REPEAT_ARB)
defconsti(env, "GL-MIRRORED-REPEAT-ARB", (GLenum) GL_MIRRORED_REPEAT_ARB, "GL_MIRRORED_REPEAT_ARB");
#endif
#if defined(GL_SAMPLE_POSITION)
defconsti(env, "GL-SAMPLE-POSITION", (GLenum) GL_SAMPLE_POSITION, "GL_SAMPLE_POSITION");
#endif
#if defined(GL_SAMPLE_MASK)
defconsti(env, "GL-SAMPLE-MASK", (GLenum) GL_SAMPLE_MASK, "GL_SAMPLE_MASK");
#endif
#if defined(GL_SAMPLE_MASK_VALUE)
defconsti(env, "GL-SAMPLE-MASK-VALUE", (GLenum) GL_SAMPLE_MASK_VALUE, "GL_SAMPLE_MASK_VALUE");
#endif
#if defined(GL_MAX_SAMPLE_MASK_WORDS)
defconsti(env, "GL-MAX-SAMPLE-MASK-WORDS", (GLenum) GL_MAX_SAMPLE_MASK_WORDS, "GL_MAX_SAMPLE_MASK_WORDS");
#endif
#if defined(GL_TEXTURE_2D_MULTISAMPLE)
defconsti(env, "GL-TEXTURE-2D-MULTISAMPLE", (GLenum) GL_TEXTURE_2D_MULTISAMPLE, "GL_TEXTURE_2D_MULTISAMPLE");
#endif
#if defined(GL_PROXY_TEXTURE_2D_MULTISAMPLE)
defconsti(env, "GL-PROXY-TEXTURE-2D-MULTISAMPLE", (GLenum) GL_PROXY_TEXTURE_2D_MULTISAMPLE, "GL_PROXY_TEXTURE_2D_MULTISAMPLE");
#endif
#if defined(GL_TEXTURE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-TEXTURE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_TEXTURE_2D_MULTISAMPLE_ARRAY, "GL_TEXTURE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-PROXY-TEXTURE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY, "GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_TEXTURE_BINDING_2D_MULTISAMPLE)
defconsti(env, "GL-TEXTURE-BINDING-2D-MULTISAMPLE", (GLenum) GL_TEXTURE_BINDING_2D_MULTISAMPLE, "GL_TEXTURE_BINDING_2D_MULTISAMPLE");
#endif
#if defined(GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-TEXTURE-BINDING-2D-MULTISAMPLE-ARRAY", (GLenum) GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY, "GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_TEXTURE_SAMPLES)
defconsti(env, "GL-TEXTURE-SAMPLES", (GLenum) GL_TEXTURE_SAMPLES, "GL_TEXTURE_SAMPLES");
#endif
#if defined(GL_TEXTURE_FIXED_SAMPLE_LOCATIONS)
defconsti(env, "GL-TEXTURE-FIXED-SAMPLE-LOCATIONS", (GLenum) GL_TEXTURE_FIXED_SAMPLE_LOCATIONS, "GL_TEXTURE_FIXED_SAMPLE_LOCATIONS");
#endif
#if defined(GL_SAMPLER_2D_MULTISAMPLE)
defconsti(env, "GL-SAMPLER-2D-MULTISAMPLE", (GLenum) GL_SAMPLER_2D_MULTISAMPLE, "GL_SAMPLER_2D_MULTISAMPLE");
#endif
#if defined(GL_INT_SAMPLER_2D_MULTISAMPLE)
defconsti(env, "GL-INT-SAMPLER-2D-MULTISAMPLE", (GLenum) GL_INT_SAMPLER_2D_MULTISAMPLE, "GL_INT_SAMPLER_2D_MULTISAMPLE");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-MULTISAMPLE", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE, "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE");
#endif
#if defined(GL_SAMPLER_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-SAMPLER-2D-MULTISAMPLE-ARRAY", (GLenum) GL_SAMPLER_2D_MULTISAMPLE_ARRAY, "GL_SAMPLER_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-INT-SAMPLER-2D-MULTISAMPLE-ARRAY", (GLenum) GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY, "GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-MULTISAMPLE-ARRAY", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY, "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_MAX_COLOR_TEXTURE_SAMPLES)
defconsti(env, "GL-MAX-COLOR-TEXTURE-SAMPLES", (GLenum) GL_MAX_COLOR_TEXTURE_SAMPLES, "GL_MAX_COLOR_TEXTURE_SAMPLES");
#endif
#if defined(GL_MAX_DEPTH_TEXTURE_SAMPLES)
defconsti(env, "GL-MAX-DEPTH-TEXTURE-SAMPLES", (GLenum) GL_MAX_DEPTH_TEXTURE_SAMPLES, "GL_MAX_DEPTH_TEXTURE_SAMPLES");
#endif
#if defined(GL_MAX_INTEGER_SAMPLES)
defconsti(env, "GL-MAX-INTEGER-SAMPLES", (GLenum) GL_MAX_INTEGER_SAMPLES, "GL_MAX_INTEGER_SAMPLES");
#endif
#if defined(GL_TEXTURE_RECTANGLE_ARB)
defconsti(env, "GL-TEXTURE-RECTANGLE-ARB", (GLenum) GL_TEXTURE_RECTANGLE_ARB, "GL_TEXTURE_RECTANGLE_ARB");
#endif
#if defined(GL_TEXTURE_BINDING_RECTANGLE_ARB)
defconsti(env, "GL-TEXTURE-BINDING-RECTANGLE-ARB", (GLenum) GL_TEXTURE_BINDING_RECTANGLE_ARB, "GL_TEXTURE_BINDING_RECTANGLE_ARB");
#endif
#if defined(GL_PROXY_TEXTURE_RECTANGLE_ARB)
defconsti(env, "GL-PROXY-TEXTURE-RECTANGLE-ARB", (GLenum) GL_PROXY_TEXTURE_RECTANGLE_ARB, "GL_PROXY_TEXTURE_RECTANGLE_ARB");
#endif
#if defined(GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB)
defconsti(env, "GL-MAX-RECTANGLE-TEXTURE-SIZE-ARB", (GLenum) GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB, "GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB");
#endif
#if defined(GL_RG)
defconsti(env, "GL-RG", (GLenum) GL_RG, "GL_RG");
#endif
#if defined(GL_RG_INTEGER)
defconsti(env, "GL-RG-INTEGER", (GLenum) GL_RG_INTEGER, "GL_RG_INTEGER");
#endif
#if defined(GL_R8)
defconsti(env, "GL-R8", (GLenum) GL_R8, "GL_R8");
#endif
#if defined(GL_R16)
defconsti(env, "GL-R16", (GLenum) GL_R16, "GL_R16");
#endif
#if defined(GL_RG8)
defconsti(env, "GL-RG8", (GLenum) GL_RG8, "GL_RG8");
#endif
#if defined(GL_RG16)
defconsti(env, "GL-RG16", (GLenum) GL_RG16, "GL_RG16");
#endif
#if defined(GL_R16F)
defconsti(env, "GL-R16F", (GLenum) GL_R16F, "GL_R16F");
#endif
#if defined(GL_R32F)
defconsti(env, "GL-R32F", (GLenum) GL_R32F, "GL_R32F");
#endif
#if defined(GL_RG16F)
defconsti(env, "GL-RG16F", (GLenum) GL_RG16F, "GL_RG16F");
#endif
#if defined(GL_RG32F)
defconsti(env, "GL-RG32F", (GLenum) GL_RG32F, "GL_RG32F");
#endif
#if defined(GL_R8I)
defconsti(env, "GL-R8I", (GLenum) GL_R8I, "GL_R8I");
#endif
#if defined(GL_R8UI)
defconsti(env, "GL-R8UI", (GLenum) GL_R8UI, "GL_R8UI");
#endif
#if defined(GL_R16I)
defconsti(env, "GL-R16I", (GLenum) GL_R16I, "GL_R16I");
#endif
#if defined(GL_R16UI)
defconsti(env, "GL-R16UI", (GLenum) GL_R16UI, "GL_R16UI");
#endif
#if defined(GL_R32I)
defconsti(env, "GL-R32I", (GLenum) GL_R32I, "GL_R32I");
#endif
#if defined(GL_R32UI)
defconsti(env, "GL-R32UI", (GLenum) GL_R32UI, "GL_R32UI");
#endif
#if defined(GL_RG8I)
defconsti(env, "GL-RG8I", (GLenum) GL_RG8I, "GL_RG8I");
#endif
#if defined(GL_RG8UI)
defconsti(env, "GL-RG8UI", (GLenum) GL_RG8UI, "GL_RG8UI");
#endif
#if defined(GL_RG16I)
defconsti(env, "GL-RG16I", (GLenum) GL_RG16I, "GL_RG16I");
#endif
#if defined(GL_RG16UI)
defconsti(env, "GL-RG16UI", (GLenum) GL_RG16UI, "GL_RG16UI");
#endif
#if defined(GL_RG32I)
defconsti(env, "GL-RG32I", (GLenum) GL_RG32I, "GL_RG32I");
#endif
#if defined(GL_RG32UI)
defconsti(env, "GL-RG32UI", (GLenum) GL_RG32UI, "GL_RG32UI");
#endif
#if defined(GL_RGB10_A2UI)
defconsti(env, "GL-RGB10-A2UI", (GLenum) GL_RGB10_A2UI, "GL_RGB10_A2UI");
#endif
#if defined(GL_STENCIL_INDEX)
defconsti(env, "GL-STENCIL-INDEX", (GLenum) GL_STENCIL_INDEX, "GL_STENCIL_INDEX");
#endif
#if defined(GL_STENCIL_INDEX8)
defconsti(env, "GL-STENCIL-INDEX8", (GLenum) GL_STENCIL_INDEX8, "GL_STENCIL_INDEX8");
#endif
#if defined(GL_TEXTURE_IMMUTABLE_FORMAT)
defconsti(env, "GL-TEXTURE-IMMUTABLE-FORMAT", (GLenum) GL_TEXTURE_IMMUTABLE_FORMAT, "GL_TEXTURE_IMMUTABLE_FORMAT");
#endif
#if defined(GL_TEXTURE_SWIZZLE_R)
defconsti(env, "GL-TEXTURE-SWIZZLE-R", (GLenum) GL_TEXTURE_SWIZZLE_R, "GL_TEXTURE_SWIZZLE_R");
#endif
#if defined(GL_TEXTURE_SWIZZLE_G)
defconsti(env, "GL-TEXTURE-SWIZZLE-G", (GLenum) GL_TEXTURE_SWIZZLE_G, "GL_TEXTURE_SWIZZLE_G");
#endif
#if defined(GL_TEXTURE_SWIZZLE_B)
defconsti(env, "GL-TEXTURE-SWIZZLE-B", (GLenum) GL_TEXTURE_SWIZZLE_B, "GL_TEXTURE_SWIZZLE_B");
#endif
#if defined(GL_TEXTURE_SWIZZLE_A)
defconsti(env, "GL-TEXTURE-SWIZZLE-A", (GLenum) GL_TEXTURE_SWIZZLE_A, "GL_TEXTURE_SWIZZLE_A");
#endif
#if defined(GL_TEXTURE_SWIZZLE_RGBA)
defconsti(env, "GL-TEXTURE-SWIZZLE-RGBA", (GLenum) GL_TEXTURE_SWIZZLE_RGBA, "GL_TEXTURE_SWIZZLE_RGBA");
#endif
#if defined(GL_TEXTURE_VIEW_MIN_LEVEL)
defconsti(env, "GL-TEXTURE-VIEW-MIN-LEVEL", (GLenum) GL_TEXTURE_VIEW_MIN_LEVEL, "GL_TEXTURE_VIEW_MIN_LEVEL");
#endif
#if defined(GL_TEXTURE_VIEW_NUM_LEVELS)
defconsti(env, "GL-TEXTURE-VIEW-NUM-LEVELS", (GLenum) GL_TEXTURE_VIEW_NUM_LEVELS, "GL_TEXTURE_VIEW_NUM_LEVELS");
#endif
#if defined(GL_TEXTURE_VIEW_MIN_LAYER)
defconsti(env, "GL-TEXTURE-VIEW-MIN-LAYER", (GLenum) GL_TEXTURE_VIEW_MIN_LAYER, "GL_TEXTURE_VIEW_MIN_LAYER");
#endif
#if defined(GL_TEXTURE_VIEW_NUM_LAYERS)
defconsti(env, "GL-TEXTURE-VIEW-NUM-LAYERS", (GLenum) GL_TEXTURE_VIEW_NUM_LAYERS, "GL_TEXTURE_VIEW_NUM_LAYERS");
#endif
#if defined(GL_TEXTURE_IMMUTABLE_LEVELS)
defconsti(env, "GL-TEXTURE-IMMUTABLE-LEVELS", (GLenum) GL_TEXTURE_IMMUTABLE_LEVELS, "GL_TEXTURE_IMMUTABLE_LEVELS");
#endif
#if defined(GL_TIME_ELAPSED)
defconsti(env, "GL-TIME-ELAPSED", (GLenum) GL_TIME_ELAPSED, "GL_TIME_ELAPSED");
#endif
#if defined(GL_TIMESTAMP)
defconsti(env, "GL-TIMESTAMP", (GLenum) GL_TIMESTAMP, "GL_TIMESTAMP");
#endif
#if defined(GL_TRANSFORM_FEEDBACK)
defconsti(env, "GL-TRANSFORM-FEEDBACK", (GLenum) GL_TRANSFORM_FEEDBACK, "GL_TRANSFORM_FEEDBACK");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-PAUSED", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED, "GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-ACTIVE", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE, "GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BINDING)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BINDING", (GLenum) GL_TRANSFORM_FEEDBACK_BINDING, "GL_TRANSFORM_FEEDBACK_BINDING");
#endif
#if defined(GL_MAX_TRANSFORM_FEEDBACK_BUFFERS)
defconsti(env, "GL-MAX-TRANSFORM-FEEDBACK-BUFFERS", (GLenum) GL_MAX_TRANSFORM_FEEDBACK_BUFFERS, "GL_MAX_TRANSFORM_FEEDBACK_BUFFERS");
#endif
#if defined(GL_MAX_VERTEX_STREAMS)
defconsti(env, "GL-MAX-VERTEX-STREAMS", (GLenum) GL_MAX_VERTEX_STREAMS, "GL_MAX_VERTEX_STREAMS");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB)
defconsti(env, "GL-TRANSFORM-FEEDBACK-OVERFLOW-ARB", (GLenum) GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB, "GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB)
defconsti(env, "GL-TRANSFORM-FEEDBACK-STREAM-OVERFLOW-ARB", (GLenum) GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB, "GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB");
#endif
#if defined(GL_TRANSPOSE_MODELVIEW_MATRIX_ARB)
defconsti(env, "GL-TRANSPOSE-MODELVIEW-MATRIX-ARB", (GLenum) GL_TRANSPOSE_MODELVIEW_MATRIX_ARB, "GL_TRANSPOSE_MODELVIEW_MATRIX_ARB");
#endif
#if defined(GL_TRANSPOSE_PROJECTION_MATRIX_ARB)
defconsti(env, "GL-TRANSPOSE-PROJECTION-MATRIX-ARB", (GLenum) GL_TRANSPOSE_PROJECTION_MATRIX_ARB, "GL_TRANSPOSE_PROJECTION_MATRIX_ARB");
#endif
#if defined(GL_TRANSPOSE_TEXTURE_MATRIX_ARB)
defconsti(env, "GL-TRANSPOSE-TEXTURE-MATRIX-ARB", (GLenum) GL_TRANSPOSE_TEXTURE_MATRIX_ARB, "GL_TRANSPOSE_TEXTURE_MATRIX_ARB");
#endif
#if defined(GL_TRANSPOSE_COLOR_MATRIX_ARB)
defconsti(env, "GL-TRANSPOSE-COLOR-MATRIX-ARB", (GLenum) GL_TRANSPOSE_COLOR_MATRIX_ARB, "GL_TRANSPOSE_COLOR_MATRIX_ARB");
#endif
#if defined(GL_UNIFORM_BUFFER)
defconsti(env, "GL-UNIFORM-BUFFER", (GLenum) GL_UNIFORM_BUFFER, "GL_UNIFORM_BUFFER");
#endif
#if defined(GL_UNIFORM_BUFFER_BINDING)
defconsti(env, "GL-UNIFORM-BUFFER-BINDING", (GLenum) GL_UNIFORM_BUFFER_BINDING, "GL_UNIFORM_BUFFER_BINDING");
#endif
#if defined(GL_UNIFORM_BUFFER_START)
defconsti(env, "GL-UNIFORM-BUFFER-START", (GLenum) GL_UNIFORM_BUFFER_START, "GL_UNIFORM_BUFFER_START");
#endif
#if defined(GL_UNIFORM_BUFFER_SIZE)
defconsti(env, "GL-UNIFORM-BUFFER-SIZE", (GLenum) GL_UNIFORM_BUFFER_SIZE, "GL_UNIFORM_BUFFER_SIZE");
#endif
#if defined(GL_MAX_VERTEX_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-VERTEX-UNIFORM-BLOCKS", (GLenum) GL_MAX_VERTEX_UNIFORM_BLOCKS, "GL_MAX_VERTEX_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_GEOMETRY_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-GEOMETRY-UNIFORM-BLOCKS", (GLenum) GL_MAX_GEOMETRY_UNIFORM_BLOCKS, "GL_MAX_GEOMETRY_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_FRAGMENT_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-FRAGMENT-UNIFORM-BLOCKS", (GLenum) GL_MAX_FRAGMENT_UNIFORM_BLOCKS, "GL_MAX_FRAGMENT_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_COMBINED_UNIFORM_BLOCKS)
defconsti(env, "GL-MAX-COMBINED-UNIFORM-BLOCKS", (GLenum) GL_MAX_COMBINED_UNIFORM_BLOCKS, "GL_MAX_COMBINED_UNIFORM_BLOCKS");
#endif
#if defined(GL_MAX_UNIFORM_BUFFER_BINDINGS)
defconsti(env, "GL-MAX-UNIFORM-BUFFER-BINDINGS", (GLenum) GL_MAX_UNIFORM_BUFFER_BINDINGS, "GL_MAX_UNIFORM_BUFFER_BINDINGS");
#endif
#if defined(GL_MAX_UNIFORM_BLOCK_SIZE)
defconsti(env, "GL-MAX-UNIFORM-BLOCK-SIZE", (GLenum) GL_MAX_UNIFORM_BLOCK_SIZE, "GL_MAX_UNIFORM_BLOCK_SIZE");
#endif
#if defined(GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-VERTEX-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-GEOMETRY-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS");
#endif
#if defined(GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS)
defconsti(env, "GL-MAX-COMBINED-FRAGMENT-UNIFORM-COMPONENTS", (GLenum) GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS, "GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS");
#endif
#if defined(GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT)
defconsti(env, "GL-UNIFORM-BUFFER-OFFSET-ALIGNMENT", (GLenum) GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT, "GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT");
#endif
#if defined(GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH)
defconsti(env, "GL-ACTIVE-UNIFORM-BLOCK-MAX-NAME-LENGTH", (GLenum) GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH, "GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH");
#endif
#if defined(GL_ACTIVE_UNIFORM_BLOCKS)
defconsti(env, "GL-ACTIVE-UNIFORM-BLOCKS", (GLenum) GL_ACTIVE_UNIFORM_BLOCKS, "GL_ACTIVE_UNIFORM_BLOCKS");
#endif
#if defined(GL_UNIFORM_TYPE)
defconsti(env, "GL-UNIFORM-TYPE", (GLenum) GL_UNIFORM_TYPE, "GL_UNIFORM_TYPE");
#endif
#if defined(GL_UNIFORM_SIZE)
defconsti(env, "GL-UNIFORM-SIZE", (GLenum) GL_UNIFORM_SIZE, "GL_UNIFORM_SIZE");
#endif
#if defined(GL_UNIFORM_NAME_LENGTH)
defconsti(env, "GL-UNIFORM-NAME-LENGTH", (GLenum) GL_UNIFORM_NAME_LENGTH, "GL_UNIFORM_NAME_LENGTH");
#endif
#if defined(GL_UNIFORM_BLOCK_INDEX)
defconsti(env, "GL-UNIFORM-BLOCK-INDEX", (GLenum) GL_UNIFORM_BLOCK_INDEX, "GL_UNIFORM_BLOCK_INDEX");
#endif
#if defined(GL_UNIFORM_OFFSET)
defconsti(env, "GL-UNIFORM-OFFSET", (GLenum) GL_UNIFORM_OFFSET, "GL_UNIFORM_OFFSET");
#endif
#if defined(GL_UNIFORM_ARRAY_STRIDE)
defconsti(env, "GL-UNIFORM-ARRAY-STRIDE", (GLenum) GL_UNIFORM_ARRAY_STRIDE, "GL_UNIFORM_ARRAY_STRIDE");
#endif
#if defined(GL_UNIFORM_MATRIX_STRIDE)
defconsti(env, "GL-UNIFORM-MATRIX-STRIDE", (GLenum) GL_UNIFORM_MATRIX_STRIDE, "GL_UNIFORM_MATRIX_STRIDE");
#endif
#if defined(GL_UNIFORM_IS_ROW_MAJOR)
defconsti(env, "GL-UNIFORM-IS-ROW-MAJOR", (GLenum) GL_UNIFORM_IS_ROW_MAJOR, "GL_UNIFORM_IS_ROW_MAJOR");
#endif
#if defined(GL_UNIFORM_BLOCK_BINDING)
defconsti(env, "GL-UNIFORM-BLOCK-BINDING", (GLenum) GL_UNIFORM_BLOCK_BINDING, "GL_UNIFORM_BLOCK_BINDING");
#endif
#if defined(GL_UNIFORM_BLOCK_DATA_SIZE)
defconsti(env, "GL-UNIFORM-BLOCK-DATA-SIZE", (GLenum) GL_UNIFORM_BLOCK_DATA_SIZE, "GL_UNIFORM_BLOCK_DATA_SIZE");
#endif
#if defined(GL_UNIFORM_BLOCK_NAME_LENGTH)
defconsti(env, "GL-UNIFORM-BLOCK-NAME-LENGTH", (GLenum) GL_UNIFORM_BLOCK_NAME_LENGTH, "GL_UNIFORM_BLOCK_NAME_LENGTH");
#endif
#if defined(GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS)
defconsti(env, "GL-UNIFORM-BLOCK-ACTIVE-UNIFORMS", (GLenum) GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS, "GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS");
#endif
#if defined(GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES)
defconsti(env, "GL-UNIFORM-BLOCK-ACTIVE-UNIFORM-INDICES", (GLenum) GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES, "GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-VERTEX-SHADER", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER, "GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-GEOMETRY-SHADER", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER, "GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-FRAGMENT-SHADER", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER, "GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER");
#endif
#if defined(GL_INVALID_INDEX)
defconsti(env, "GL-INVALID-INDEX", (GLenum) GL_INVALID_INDEX, "GL_INVALID_INDEX");
#endif
#if defined(GL_BGRA)
defconsti(env, "GL-BGRA", (GLenum) GL_BGRA, "GL_BGRA");
#endif
#if defined(GL_VERTEX_ARRAY_BINDING)
defconsti(env, "GL-VERTEX-ARRAY-BINDING", (GLenum) GL_VERTEX_ARRAY_BINDING, "GL_VERTEX_ARRAY_BINDING");
#endif
#if defined(GL_RGB32I)
defconsti(env, "GL-RGB32I", (GLenum) GL_RGB32I, "GL_RGB32I");
#endif
#if defined(GL_DOUBLE_VEC2)
defconsti(env, "GL-DOUBLE-VEC2", (GLenum) GL_DOUBLE_VEC2, "GL_DOUBLE_VEC2");
#endif
#if defined(GL_DOUBLE_VEC3)
defconsti(env, "GL-DOUBLE-VEC3", (GLenum) GL_DOUBLE_VEC3, "GL_DOUBLE_VEC3");
#endif
#if defined(GL_DOUBLE_VEC4)
defconsti(env, "GL-DOUBLE-VEC4", (GLenum) GL_DOUBLE_VEC4, "GL_DOUBLE_VEC4");
#endif
#if defined(GL_DOUBLE_MAT2)
defconsti(env, "GL-DOUBLE-MAT2", (GLenum) GL_DOUBLE_MAT2, "GL_DOUBLE_MAT2");
#endif
#if defined(GL_DOUBLE_MAT3)
defconsti(env, "GL-DOUBLE-MAT3", (GLenum) GL_DOUBLE_MAT3, "GL_DOUBLE_MAT3");
#endif
#if defined(GL_DOUBLE_MAT4)
defconsti(env, "GL-DOUBLE-MAT4", (GLenum) GL_DOUBLE_MAT4, "GL_DOUBLE_MAT4");
#endif
#if defined(GL_DOUBLE_MAT2x3)
defconsti(env, "GL-DOUBLE-MAT2x3", (GLenum) GL_DOUBLE_MAT2x3, "GL_DOUBLE_MAT2x3");
#endif
#if defined(GL_DOUBLE_MAT2x4)
defconsti(env, "GL-DOUBLE-MAT2x4", (GLenum) GL_DOUBLE_MAT2x4, "GL_DOUBLE_MAT2x4");
#endif
#if defined(GL_DOUBLE_MAT3x2)
defconsti(env, "GL-DOUBLE-MAT3x2", (GLenum) GL_DOUBLE_MAT3x2, "GL_DOUBLE_MAT3x2");
#endif
#if defined(GL_DOUBLE_MAT3x4)
defconsti(env, "GL-DOUBLE-MAT3x4", (GLenum) GL_DOUBLE_MAT3x4, "GL_DOUBLE_MAT3x4");
#endif
#if defined(GL_DOUBLE_MAT4x2)
defconsti(env, "GL-DOUBLE-MAT4x2", (GLenum) GL_DOUBLE_MAT4x2, "GL_DOUBLE_MAT4x2");
#endif
#if defined(GL_DOUBLE_MAT4x3)
defconsti(env, "GL-DOUBLE-MAT4x3", (GLenum) GL_DOUBLE_MAT4x3, "GL_DOUBLE_MAT4x3");
#endif
#if defined(GL_VERTEX_ATTRIB_BINDING)
defconsti(env, "GL-VERTEX-ATTRIB-BINDING", (GLenum) GL_VERTEX_ATTRIB_BINDING, "GL_VERTEX_ATTRIB_BINDING");
#endif
#if defined(GL_VERTEX_ATTRIB_RELATIVE_OFFSET)
defconsti(env, "GL-VERTEX-ATTRIB-RELATIVE-OFFSET", (GLenum) GL_VERTEX_ATTRIB_RELATIVE_OFFSET, "GL_VERTEX_ATTRIB_RELATIVE_OFFSET");
#endif
#if defined(GL_VERTEX_BINDING_DIVISOR)
defconsti(env, "GL-VERTEX-BINDING-DIVISOR", (GLenum) GL_VERTEX_BINDING_DIVISOR, "GL_VERTEX_BINDING_DIVISOR");
#endif
#if defined(GL_VERTEX_BINDING_OFFSET)
defconsti(env, "GL-VERTEX-BINDING-OFFSET", (GLenum) GL_VERTEX_BINDING_OFFSET, "GL_VERTEX_BINDING_OFFSET");
#endif
#if defined(GL_VERTEX_BINDING_STRIDE)
defconsti(env, "GL-VERTEX-BINDING-STRIDE", (GLenum) GL_VERTEX_BINDING_STRIDE, "GL_VERTEX_BINDING_STRIDE");
#endif
#if defined(GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET)
defconsti(env, "GL-MAX-VERTEX-ATTRIB-RELATIVE-OFFSET", (GLenum) GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET, "GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET");
#endif
#if defined(GL_MAX_VERTEX_ATTRIB_BINDINGS)
defconsti(env, "GL-MAX-VERTEX-ATTRIB-BINDINGS", (GLenum) GL_MAX_VERTEX_ATTRIB_BINDINGS, "GL_MAX_VERTEX_ATTRIB_BINDINGS");
#endif
#if defined(GL_MAX_VERTEX_UNITS_ARB)
defconsti(env, "GL-MAX-VERTEX-UNITS-ARB", (GLenum) GL_MAX_VERTEX_UNITS_ARB, "GL_MAX_VERTEX_UNITS_ARB");
#endif
#if defined(GL_ACTIVE_VERTEX_UNITS_ARB)
defconsti(env, "GL-ACTIVE-VERTEX-UNITS-ARB", (GLenum) GL_ACTIVE_VERTEX_UNITS_ARB, "GL_ACTIVE_VERTEX_UNITS_ARB");
#endif
#if defined(GL_WEIGHT_SUM_UNITY_ARB)
defconsti(env, "GL-WEIGHT-SUM-UNITY-ARB", (GLenum) GL_WEIGHT_SUM_UNITY_ARB, "GL_WEIGHT_SUM_UNITY_ARB");
#endif
#if defined(GL_VERTEX_BLEND_ARB)
defconsti(env, "GL-VERTEX-BLEND-ARB", (GLenum) GL_VERTEX_BLEND_ARB, "GL_VERTEX_BLEND_ARB");
#endif
#if defined(GL_CURRENT_WEIGHT_ARB)
defconsti(env, "GL-CURRENT-WEIGHT-ARB", (GLenum) GL_CURRENT_WEIGHT_ARB, "GL_CURRENT_WEIGHT_ARB");
#endif
#if defined(GL_WEIGHT_ARRAY_TYPE_ARB)
defconsti(env, "GL-WEIGHT-ARRAY-TYPE-ARB", (GLenum) GL_WEIGHT_ARRAY_TYPE_ARB, "GL_WEIGHT_ARRAY_TYPE_ARB");
#endif
#if defined(GL_WEIGHT_ARRAY_STRIDE_ARB)
defconsti(env, "GL-WEIGHT-ARRAY-STRIDE-ARB", (GLenum) GL_WEIGHT_ARRAY_STRIDE_ARB, "GL_WEIGHT_ARRAY_STRIDE_ARB");
#endif
#if defined(GL_WEIGHT_ARRAY_SIZE_ARB)
defconsti(env, "GL-WEIGHT-ARRAY-SIZE-ARB", (GLenum) GL_WEIGHT_ARRAY_SIZE_ARB, "GL_WEIGHT_ARRAY_SIZE_ARB");
#endif
#if defined(GL_WEIGHT_ARRAY_POINTER_ARB)
defconsti(env, "GL-WEIGHT-ARRAY-POINTER-ARB", (GLenum) GL_WEIGHT_ARRAY_POINTER_ARB, "GL_WEIGHT_ARRAY_POINTER_ARB");
#endif
#if defined(GL_WEIGHT_ARRAY_ARB)
defconsti(env, "GL-WEIGHT-ARRAY-ARB", (GLenum) GL_WEIGHT_ARRAY_ARB, "GL_WEIGHT_ARRAY_ARB");
#endif
#if defined(GL_MODELVIEW0_ARB)
defconsti(env, "GL-MODELVIEW0-ARB", (GLenum) GL_MODELVIEW0_ARB, "GL_MODELVIEW0_ARB");
#endif
#if defined(GL_MODELVIEW1_ARB)
defconsti(env, "GL-MODELVIEW1-ARB", (GLenum) GL_MODELVIEW1_ARB, "GL_MODELVIEW1_ARB");
#endif
#if defined(GL_MODELVIEW2_ARB)
defconsti(env, "GL-MODELVIEW2-ARB", (GLenum) GL_MODELVIEW2_ARB, "GL_MODELVIEW2_ARB");
#endif
#if defined(GL_MODELVIEW3_ARB)
defconsti(env, "GL-MODELVIEW3-ARB", (GLenum) GL_MODELVIEW3_ARB, "GL_MODELVIEW3_ARB");
#endif
#if defined(GL_MODELVIEW4_ARB)
defconsti(env, "GL-MODELVIEW4-ARB", (GLenum) GL_MODELVIEW4_ARB, "GL_MODELVIEW4_ARB");
#endif
#if defined(GL_MODELVIEW5_ARB)
defconsti(env, "GL-MODELVIEW5-ARB", (GLenum) GL_MODELVIEW5_ARB, "GL_MODELVIEW5_ARB");
#endif
#if defined(GL_MODELVIEW6_ARB)
defconsti(env, "GL-MODELVIEW6-ARB", (GLenum) GL_MODELVIEW6_ARB, "GL_MODELVIEW6_ARB");
#endif
#if defined(GL_MODELVIEW7_ARB)
defconsti(env, "GL-MODELVIEW7-ARB", (GLenum) GL_MODELVIEW7_ARB, "GL_MODELVIEW7_ARB");
#endif
#if defined(GL_MODELVIEW8_ARB)
defconsti(env, "GL-MODELVIEW8-ARB", (GLenum) GL_MODELVIEW8_ARB, "GL_MODELVIEW8_ARB");
#endif
#if defined(GL_MODELVIEW9_ARB)
defconsti(env, "GL-MODELVIEW9-ARB", (GLenum) GL_MODELVIEW9_ARB, "GL_MODELVIEW9_ARB");
#endif
#if defined(GL_MODELVIEW10_ARB)
defconsti(env, "GL-MODELVIEW10-ARB", (GLenum) GL_MODELVIEW10_ARB, "GL_MODELVIEW10_ARB");
#endif
#if defined(GL_MODELVIEW11_ARB)
defconsti(env, "GL-MODELVIEW11-ARB", (GLenum) GL_MODELVIEW11_ARB, "GL_MODELVIEW11_ARB");
#endif
#if defined(GL_MODELVIEW12_ARB)
defconsti(env, "GL-MODELVIEW12-ARB", (GLenum) GL_MODELVIEW12_ARB, "GL_MODELVIEW12_ARB");
#endif
#if defined(GL_MODELVIEW13_ARB)
defconsti(env, "GL-MODELVIEW13-ARB", (GLenum) GL_MODELVIEW13_ARB, "GL_MODELVIEW13_ARB");
#endif
#if defined(GL_MODELVIEW14_ARB)
defconsti(env, "GL-MODELVIEW14-ARB", (GLenum) GL_MODELVIEW14_ARB, "GL_MODELVIEW14_ARB");
#endif
#if defined(GL_MODELVIEW15_ARB)
defconsti(env, "GL-MODELVIEW15-ARB", (GLenum) GL_MODELVIEW15_ARB, "GL_MODELVIEW15_ARB");
#endif
#if defined(GL_MODELVIEW16_ARB)
defconsti(env, "GL-MODELVIEW16-ARB", (GLenum) GL_MODELVIEW16_ARB, "GL_MODELVIEW16_ARB");
#endif
#if defined(GL_MODELVIEW17_ARB)
defconsti(env, "GL-MODELVIEW17-ARB", (GLenum) GL_MODELVIEW17_ARB, "GL_MODELVIEW17_ARB");
#endif
#if defined(GL_MODELVIEW18_ARB)
defconsti(env, "GL-MODELVIEW18-ARB", (GLenum) GL_MODELVIEW18_ARB, "GL_MODELVIEW18_ARB");
#endif
#if defined(GL_MODELVIEW19_ARB)
defconsti(env, "GL-MODELVIEW19-ARB", (GLenum) GL_MODELVIEW19_ARB, "GL_MODELVIEW19_ARB");
#endif
#if defined(GL_MODELVIEW20_ARB)
defconsti(env, "GL-MODELVIEW20-ARB", (GLenum) GL_MODELVIEW20_ARB, "GL_MODELVIEW20_ARB");
#endif
#if defined(GL_MODELVIEW21_ARB)
defconsti(env, "GL-MODELVIEW21-ARB", (GLenum) GL_MODELVIEW21_ARB, "GL_MODELVIEW21_ARB");
#endif
#if defined(GL_MODELVIEW22_ARB)
defconsti(env, "GL-MODELVIEW22-ARB", (GLenum) GL_MODELVIEW22_ARB, "GL_MODELVIEW22_ARB");
#endif
#if defined(GL_MODELVIEW23_ARB)
defconsti(env, "GL-MODELVIEW23-ARB", (GLenum) GL_MODELVIEW23_ARB, "GL_MODELVIEW23_ARB");
#endif
#if defined(GL_MODELVIEW24_ARB)
defconsti(env, "GL-MODELVIEW24-ARB", (GLenum) GL_MODELVIEW24_ARB, "GL_MODELVIEW24_ARB");
#endif
#if defined(GL_MODELVIEW25_ARB)
defconsti(env, "GL-MODELVIEW25-ARB", (GLenum) GL_MODELVIEW25_ARB, "GL_MODELVIEW25_ARB");
#endif
#if defined(GL_MODELVIEW26_ARB)
defconsti(env, "GL-MODELVIEW26-ARB", (GLenum) GL_MODELVIEW26_ARB, "GL_MODELVIEW26_ARB");
#endif
#if defined(GL_MODELVIEW27_ARB)
defconsti(env, "GL-MODELVIEW27-ARB", (GLenum) GL_MODELVIEW27_ARB, "GL_MODELVIEW27_ARB");
#endif
#if defined(GL_MODELVIEW28_ARB)
defconsti(env, "GL-MODELVIEW28-ARB", (GLenum) GL_MODELVIEW28_ARB, "GL_MODELVIEW28_ARB");
#endif
#if defined(GL_MODELVIEW29_ARB)
defconsti(env, "GL-MODELVIEW29-ARB", (GLenum) GL_MODELVIEW29_ARB, "GL_MODELVIEW29_ARB");
#endif
#if defined(GL_MODELVIEW30_ARB)
defconsti(env, "GL-MODELVIEW30-ARB", (GLenum) GL_MODELVIEW30_ARB, "GL_MODELVIEW30_ARB");
#endif
#if defined(GL_MODELVIEW31_ARB)
defconsti(env, "GL-MODELVIEW31-ARB", (GLenum) GL_MODELVIEW31_ARB, "GL_MODELVIEW31_ARB");
#endif
#if defined(GL_BUFFER_SIZE_ARB)
defconsti(env, "GL-BUFFER-SIZE-ARB", (GLenum) GL_BUFFER_SIZE_ARB, "GL_BUFFER_SIZE_ARB");
#endif
#if defined(GL_BUFFER_USAGE_ARB)
defconsti(env, "GL-BUFFER-USAGE-ARB", (GLenum) GL_BUFFER_USAGE_ARB, "GL_BUFFER_USAGE_ARB");
#endif
#if defined(GL_ARRAY_BUFFER_ARB)
defconsti(env, "GL-ARRAY-BUFFER-ARB", (GLenum) GL_ARRAY_BUFFER_ARB, "GL_ARRAY_BUFFER_ARB");
#endif
#if defined(GL_ELEMENT_ARRAY_BUFFER_ARB)
defconsti(env, "GL-ELEMENT-ARRAY-BUFFER-ARB", (GLenum) GL_ELEMENT_ARRAY_BUFFER_ARB, "GL_ELEMENT_ARRAY_BUFFER_ARB");
#endif
#if defined(GL_ARRAY_BUFFER_BINDING_ARB)
defconsti(env, "GL-ARRAY-BUFFER-BINDING-ARB", (GLenum) GL_ARRAY_BUFFER_BINDING_ARB, "GL_ARRAY_BUFFER_BINDING_ARB");
#endif
#if defined(GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB)
defconsti(env, "GL-ELEMENT-ARRAY-BUFFER-BINDING-ARB", (GLenum) GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB, "GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB");
#endif
#if defined(GL_VERTEX_ARRAY_BUFFER_BINDING_ARB)
defconsti(env, "GL-VERTEX-ARRAY-BUFFER-BINDING-ARB", (GLenum) GL_VERTEX_ARRAY_BUFFER_BINDING_ARB, "GL_VERTEX_ARRAY_BUFFER_BINDING_ARB");
#endif
#if defined(GL_NORMAL_ARRAY_BUFFER_BINDING_ARB)
defconsti(env, "GL-NORMAL-ARRAY-BUFFER-BINDING-ARB", (GLenum) GL_NORMAL_ARRAY_BUFFER_BINDING_ARB, "GL_NORMAL_ARRAY_BUFFER_BINDING_ARB");
#endif
#if defined(GL_COLOR_ARRAY_BUFFER_BINDING_ARB)
defconsti(env, "GL-COLOR-ARRAY-BUFFER-BINDING-ARB", (GLenum) GL_COLOR_ARRAY_BUFFER_BINDING_ARB, "GL_COLOR_ARRAY_BUFFER_BINDING_ARB");
#endif
#if defined(GL_INDEX_ARRAY_BUFFER_BINDING_ARB)
defconsti(env, "GL-INDEX-ARRAY-BUFFER-BINDING-ARB", (GLenum) GL_INDEX_ARRAY_BUFFER_BINDING_ARB, "GL_INDEX_ARRAY_BUFFER_BINDING_ARB");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-BUFFER-BINDING-ARB", (GLenum) GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB, "GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB)
defconsti(env, "GL-EDGE-FLAG-ARRAY-BUFFER-BINDING-ARB", (GLenum) GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB, "GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-BUFFER-BINDING-ARB", (GLenum) GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB, "GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB)
defconsti(env, "GL-FOG-COORDINATE-ARRAY-BUFFER-BINDING-ARB", (GLenum) GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB, "GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB");
#endif
#if defined(GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB)
defconsti(env, "GL-WEIGHT-ARRAY-BUFFER-BINDING-ARB", (GLenum) GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB, "GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-BUFFER-BINDING-ARB", (GLenum) GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB, "GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB");
#endif
#if defined(GL_READ_ONLY_ARB)
defconsti(env, "GL-READ-ONLY-ARB", (GLenum) GL_READ_ONLY_ARB, "GL_READ_ONLY_ARB");
#endif
#if defined(GL_WRITE_ONLY_ARB)
defconsti(env, "GL-WRITE-ONLY-ARB", (GLenum) GL_WRITE_ONLY_ARB, "GL_WRITE_ONLY_ARB");
#endif
#if defined(GL_READ_WRITE_ARB)
defconsti(env, "GL-READ-WRITE-ARB", (GLenum) GL_READ_WRITE_ARB, "GL_READ_WRITE_ARB");
#endif
#if defined(GL_BUFFER_ACCESS_ARB)
defconsti(env, "GL-BUFFER-ACCESS-ARB", (GLenum) GL_BUFFER_ACCESS_ARB, "GL_BUFFER_ACCESS_ARB");
#endif
#if defined(GL_BUFFER_MAPPED_ARB)
defconsti(env, "GL-BUFFER-MAPPED-ARB", (GLenum) GL_BUFFER_MAPPED_ARB, "GL_BUFFER_MAPPED_ARB");
#endif
#if defined(GL_BUFFER_MAP_POINTER_ARB)
defconsti(env, "GL-BUFFER-MAP-POINTER-ARB", (GLenum) GL_BUFFER_MAP_POINTER_ARB, "GL_BUFFER_MAP_POINTER_ARB");
#endif
#if defined(GL_STREAM_DRAW_ARB)
defconsti(env, "GL-STREAM-DRAW-ARB", (GLenum) GL_STREAM_DRAW_ARB, "GL_STREAM_DRAW_ARB");
#endif
#if defined(GL_STREAM_READ_ARB)
defconsti(env, "GL-STREAM-READ-ARB", (GLenum) GL_STREAM_READ_ARB, "GL_STREAM_READ_ARB");
#endif
#if defined(GL_STREAM_COPY_ARB)
defconsti(env, "GL-STREAM-COPY-ARB", (GLenum) GL_STREAM_COPY_ARB, "GL_STREAM_COPY_ARB");
#endif
#if defined(GL_STATIC_DRAW_ARB)
defconsti(env, "GL-STATIC-DRAW-ARB", (GLenum) GL_STATIC_DRAW_ARB, "GL_STATIC_DRAW_ARB");
#endif
#if defined(GL_STATIC_READ_ARB)
defconsti(env, "GL-STATIC-READ-ARB", (GLenum) GL_STATIC_READ_ARB, "GL_STATIC_READ_ARB");
#endif
#if defined(GL_STATIC_COPY_ARB)
defconsti(env, "GL-STATIC-COPY-ARB", (GLenum) GL_STATIC_COPY_ARB, "GL_STATIC_COPY_ARB");
#endif
#if defined(GL_DYNAMIC_DRAW_ARB)
defconsti(env, "GL-DYNAMIC-DRAW-ARB", (GLenum) GL_DYNAMIC_DRAW_ARB, "GL_DYNAMIC_DRAW_ARB");
#endif
#if defined(GL_DYNAMIC_READ_ARB)
defconsti(env, "GL-DYNAMIC-READ-ARB", (GLenum) GL_DYNAMIC_READ_ARB, "GL_DYNAMIC_READ_ARB");
#endif
#if defined(GL_DYNAMIC_COPY_ARB)
defconsti(env, "GL-DYNAMIC-COPY-ARB", (GLenum) GL_DYNAMIC_COPY_ARB, "GL_DYNAMIC_COPY_ARB");
#endif
#if defined(GL_COLOR_SUM_ARB)
defconsti(env, "GL-COLOR-SUM-ARB", (GLenum) GL_COLOR_SUM_ARB, "GL_COLOR_SUM_ARB");
#endif
#if defined(GL_VERTEX_PROGRAM_ARB)
defconsti(env, "GL-VERTEX-PROGRAM-ARB", (GLenum) GL_VERTEX_PROGRAM_ARB, "GL_VERTEX_PROGRAM_ARB");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-ENABLED-ARB", (GLenum) GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB, "GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-SIZE-ARB", (GLenum) GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB, "GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-STRIDE-ARB", (GLenum) GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB, "GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-TYPE-ARB", (GLenum) GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB, "GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB");
#endif
#if defined(GL_CURRENT_VERTEX_ATTRIB_ARB)
defconsti(env, "GL-CURRENT-VERTEX-ATTRIB-ARB", (GLenum) GL_CURRENT_VERTEX_ATTRIB_ARB, "GL_CURRENT_VERTEX_ATTRIB_ARB");
#endif
#if defined(GL_PROGRAM_LENGTH_ARB)
defconsti(env, "GL-PROGRAM-LENGTH-ARB", (GLenum) GL_PROGRAM_LENGTH_ARB, "GL_PROGRAM_LENGTH_ARB");
#endif
#if defined(GL_PROGRAM_STRING_ARB)
defconsti(env, "GL-PROGRAM-STRING-ARB", (GLenum) GL_PROGRAM_STRING_ARB, "GL_PROGRAM_STRING_ARB");
#endif
#if defined(GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB)
defconsti(env, "GL-MAX-PROGRAM-MATRIX-STACK-DEPTH-ARB", (GLenum) GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB, "GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB");
#endif
#if defined(GL_MAX_PROGRAM_MATRICES_ARB)
defconsti(env, "GL-MAX-PROGRAM-MATRICES-ARB", (GLenum) GL_MAX_PROGRAM_MATRICES_ARB, "GL_MAX_PROGRAM_MATRICES_ARB");
#endif
#if defined(GL_CURRENT_MATRIX_STACK_DEPTH_ARB)
defconsti(env, "GL-CURRENT-MATRIX-STACK-DEPTH-ARB", (GLenum) GL_CURRENT_MATRIX_STACK_DEPTH_ARB, "GL_CURRENT_MATRIX_STACK_DEPTH_ARB");
#endif
#if defined(GL_CURRENT_MATRIX_ARB)
defconsti(env, "GL-CURRENT-MATRIX-ARB", (GLenum) GL_CURRENT_MATRIX_ARB, "GL_CURRENT_MATRIX_ARB");
#endif
#if defined(GL_VERTEX_PROGRAM_POINT_SIZE_ARB)
defconsti(env, "GL-VERTEX-PROGRAM-POINT-SIZE-ARB", (GLenum) GL_VERTEX_PROGRAM_POINT_SIZE_ARB, "GL_VERTEX_PROGRAM_POINT_SIZE_ARB");
#endif
#if defined(GL_VERTEX_PROGRAM_TWO_SIDE_ARB)
defconsti(env, "GL-VERTEX-PROGRAM-TWO-SIDE-ARB", (GLenum) GL_VERTEX_PROGRAM_TWO_SIDE_ARB, "GL_VERTEX_PROGRAM_TWO_SIDE_ARB");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-POINTER-ARB", (GLenum) GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB, "GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB");
#endif
#if defined(GL_PROGRAM_ERROR_POSITION_ARB)
defconsti(env, "GL-PROGRAM-ERROR-POSITION-ARB", (GLenum) GL_PROGRAM_ERROR_POSITION_ARB, "GL_PROGRAM_ERROR_POSITION_ARB");
#endif
#if defined(GL_PROGRAM_BINDING_ARB)
defconsti(env, "GL-PROGRAM-BINDING-ARB", (GLenum) GL_PROGRAM_BINDING_ARB, "GL_PROGRAM_BINDING_ARB");
#endif
#if defined(GL_MAX_VERTEX_ATTRIBS_ARB)
defconsti(env, "GL-MAX-VERTEX-ATTRIBS-ARB", (GLenum) GL_MAX_VERTEX_ATTRIBS_ARB, "GL_MAX_VERTEX_ATTRIBS_ARB");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-NORMALIZED-ARB", (GLenum) GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB, "GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB");
#endif
#if defined(GL_PROGRAM_ERROR_STRING_ARB)
defconsti(env, "GL-PROGRAM-ERROR-STRING-ARB", (GLenum) GL_PROGRAM_ERROR_STRING_ARB, "GL_PROGRAM_ERROR_STRING_ARB");
#endif
#if defined(GL_PROGRAM_FORMAT_ASCII_ARB)
defconsti(env, "GL-PROGRAM-FORMAT-ASCII-ARB", (GLenum) GL_PROGRAM_FORMAT_ASCII_ARB, "GL_PROGRAM_FORMAT_ASCII_ARB");
#endif
#if defined(GL_PROGRAM_FORMAT_ARB)
defconsti(env, "GL-PROGRAM-FORMAT-ARB", (GLenum) GL_PROGRAM_FORMAT_ARB, "GL_PROGRAM_FORMAT_ARB");
#endif
#if defined(GL_PROGRAM_INSTRUCTIONS_ARB)
defconsti(env, "GL-PROGRAM-INSTRUCTIONS-ARB", (GLenum) GL_PROGRAM_INSTRUCTIONS_ARB, "GL_PROGRAM_INSTRUCTIONS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_INSTRUCTIONS_ARB)
defconsti(env, "GL-MAX-PROGRAM-INSTRUCTIONS-ARB", (GLenum) GL_MAX_PROGRAM_INSTRUCTIONS_ARB, "GL_MAX_PROGRAM_INSTRUCTIONS_ARB");
#endif
#if defined(GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB)
defconsti(env, "GL-PROGRAM-NATIVE-INSTRUCTIONS-ARB", (GLenum) GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB, "GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB)
defconsti(env, "GL-MAX-PROGRAM-NATIVE-INSTRUCTIONS-ARB", (GLenum) GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB, "GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB");
#endif
#if defined(GL_PROGRAM_TEMPORARIES_ARB)
defconsti(env, "GL-PROGRAM-TEMPORARIES-ARB", (GLenum) GL_PROGRAM_TEMPORARIES_ARB, "GL_PROGRAM_TEMPORARIES_ARB");
#endif
#if defined(GL_MAX_PROGRAM_TEMPORARIES_ARB)
defconsti(env, "GL-MAX-PROGRAM-TEMPORARIES-ARB", (GLenum) GL_MAX_PROGRAM_TEMPORARIES_ARB, "GL_MAX_PROGRAM_TEMPORARIES_ARB");
#endif
#if defined(GL_PROGRAM_NATIVE_TEMPORARIES_ARB)
defconsti(env, "GL-PROGRAM-NATIVE-TEMPORARIES-ARB", (GLenum) GL_PROGRAM_NATIVE_TEMPORARIES_ARB, "GL_PROGRAM_NATIVE_TEMPORARIES_ARB");
#endif
#if defined(GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB)
defconsti(env, "GL-MAX-PROGRAM-NATIVE-TEMPORARIES-ARB", (GLenum) GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB, "GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB");
#endif
#if defined(GL_PROGRAM_PARAMETERS_ARB)
defconsti(env, "GL-PROGRAM-PARAMETERS-ARB", (GLenum) GL_PROGRAM_PARAMETERS_ARB, "GL_PROGRAM_PARAMETERS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_PARAMETERS_ARB)
defconsti(env, "GL-MAX-PROGRAM-PARAMETERS-ARB", (GLenum) GL_MAX_PROGRAM_PARAMETERS_ARB, "GL_MAX_PROGRAM_PARAMETERS_ARB");
#endif
#if defined(GL_PROGRAM_NATIVE_PARAMETERS_ARB)
defconsti(env, "GL-PROGRAM-NATIVE-PARAMETERS-ARB", (GLenum) GL_PROGRAM_NATIVE_PARAMETERS_ARB, "GL_PROGRAM_NATIVE_PARAMETERS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB)
defconsti(env, "GL-MAX-PROGRAM-NATIVE-PARAMETERS-ARB", (GLenum) GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB, "GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB");
#endif
#if defined(GL_PROGRAM_ATTRIBS_ARB)
defconsti(env, "GL-PROGRAM-ATTRIBS-ARB", (GLenum) GL_PROGRAM_ATTRIBS_ARB, "GL_PROGRAM_ATTRIBS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_ATTRIBS_ARB)
defconsti(env, "GL-MAX-PROGRAM-ATTRIBS-ARB", (GLenum) GL_MAX_PROGRAM_ATTRIBS_ARB, "GL_MAX_PROGRAM_ATTRIBS_ARB");
#endif
#if defined(GL_PROGRAM_NATIVE_ATTRIBS_ARB)
defconsti(env, "GL-PROGRAM-NATIVE-ATTRIBS-ARB", (GLenum) GL_PROGRAM_NATIVE_ATTRIBS_ARB, "GL_PROGRAM_NATIVE_ATTRIBS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB)
defconsti(env, "GL-MAX-PROGRAM-NATIVE-ATTRIBS-ARB", (GLenum) GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB, "GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB");
#endif
#if defined(GL_PROGRAM_ADDRESS_REGISTERS_ARB)
defconsti(env, "GL-PROGRAM-ADDRESS-REGISTERS-ARB", (GLenum) GL_PROGRAM_ADDRESS_REGISTERS_ARB, "GL_PROGRAM_ADDRESS_REGISTERS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB)
defconsti(env, "GL-MAX-PROGRAM-ADDRESS-REGISTERS-ARB", (GLenum) GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB, "GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB");
#endif
#if defined(GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB)
defconsti(env, "GL-PROGRAM-NATIVE-ADDRESS-REGISTERS-ARB", (GLenum) GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB, "GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB)
defconsti(env, "GL-MAX-PROGRAM-NATIVE-ADDRESS-REGISTERS-ARB", (GLenum) GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB, "GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB)
defconsti(env, "GL-MAX-PROGRAM-LOCAL-PARAMETERS-ARB", (GLenum) GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB, "GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB");
#endif
#if defined(GL_MAX_PROGRAM_ENV_PARAMETERS_ARB)
defconsti(env, "GL-MAX-PROGRAM-ENV-PARAMETERS-ARB", (GLenum) GL_MAX_PROGRAM_ENV_PARAMETERS_ARB, "GL_MAX_PROGRAM_ENV_PARAMETERS_ARB");
#endif
#if defined(GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB)
defconsti(env, "GL-PROGRAM-UNDER-NATIVE-LIMITS-ARB", (GLenum) GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB, "GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB");
#endif
#if defined(GL_TRANSPOSE_CURRENT_MATRIX_ARB)
defconsti(env, "GL-TRANSPOSE-CURRENT-MATRIX-ARB", (GLenum) GL_TRANSPOSE_CURRENT_MATRIX_ARB, "GL_TRANSPOSE_CURRENT_MATRIX_ARB");
#endif
#if defined(GL_MATRIX0_ARB)
defconsti(env, "GL-MATRIX0-ARB", (GLenum) GL_MATRIX0_ARB, "GL_MATRIX0_ARB");
#endif
#if defined(GL_MATRIX1_ARB)
defconsti(env, "GL-MATRIX1-ARB", (GLenum) GL_MATRIX1_ARB, "GL_MATRIX1_ARB");
#endif
#if defined(GL_MATRIX2_ARB)
defconsti(env, "GL-MATRIX2-ARB", (GLenum) GL_MATRIX2_ARB, "GL_MATRIX2_ARB");
#endif
#if defined(GL_MATRIX3_ARB)
defconsti(env, "GL-MATRIX3-ARB", (GLenum) GL_MATRIX3_ARB, "GL_MATRIX3_ARB");
#endif
#if defined(GL_MATRIX4_ARB)
defconsti(env, "GL-MATRIX4-ARB", (GLenum) GL_MATRIX4_ARB, "GL_MATRIX4_ARB");
#endif
#if defined(GL_MATRIX5_ARB)
defconsti(env, "GL-MATRIX5-ARB", (GLenum) GL_MATRIX5_ARB, "GL_MATRIX5_ARB");
#endif
#if defined(GL_MATRIX6_ARB)
defconsti(env, "GL-MATRIX6-ARB", (GLenum) GL_MATRIX6_ARB, "GL_MATRIX6_ARB");
#endif
#if defined(GL_MATRIX7_ARB)
defconsti(env, "GL-MATRIX7-ARB", (GLenum) GL_MATRIX7_ARB, "GL_MATRIX7_ARB");
#endif
#if defined(GL_MATRIX8_ARB)
defconsti(env, "GL-MATRIX8-ARB", (GLenum) GL_MATRIX8_ARB, "GL_MATRIX8_ARB");
#endif
#if defined(GL_MATRIX9_ARB)
defconsti(env, "GL-MATRIX9-ARB", (GLenum) GL_MATRIX9_ARB, "GL_MATRIX9_ARB");
#endif
#if defined(GL_MATRIX10_ARB)
defconsti(env, "GL-MATRIX10-ARB", (GLenum) GL_MATRIX10_ARB, "GL_MATRIX10_ARB");
#endif
#if defined(GL_MATRIX11_ARB)
defconsti(env, "GL-MATRIX11-ARB", (GLenum) GL_MATRIX11_ARB, "GL_MATRIX11_ARB");
#endif
#if defined(GL_MATRIX12_ARB)
defconsti(env, "GL-MATRIX12-ARB", (GLenum) GL_MATRIX12_ARB, "GL_MATRIX12_ARB");
#endif
#if defined(GL_MATRIX13_ARB)
defconsti(env, "GL-MATRIX13-ARB", (GLenum) GL_MATRIX13_ARB, "GL_MATRIX13_ARB");
#endif
#if defined(GL_MATRIX14_ARB)
defconsti(env, "GL-MATRIX14-ARB", (GLenum) GL_MATRIX14_ARB, "GL_MATRIX14_ARB");
#endif
#if defined(GL_MATRIX15_ARB)
defconsti(env, "GL-MATRIX15-ARB", (GLenum) GL_MATRIX15_ARB, "GL_MATRIX15_ARB");
#endif
#if defined(GL_MATRIX16_ARB)
defconsti(env, "GL-MATRIX16-ARB", (GLenum) GL_MATRIX16_ARB, "GL_MATRIX16_ARB");
#endif
#if defined(GL_MATRIX17_ARB)
defconsti(env, "GL-MATRIX17-ARB", (GLenum) GL_MATRIX17_ARB, "GL_MATRIX17_ARB");
#endif
#if defined(GL_MATRIX18_ARB)
defconsti(env, "GL-MATRIX18-ARB", (GLenum) GL_MATRIX18_ARB, "GL_MATRIX18_ARB");
#endif
#if defined(GL_MATRIX19_ARB)
defconsti(env, "GL-MATRIX19-ARB", (GLenum) GL_MATRIX19_ARB, "GL_MATRIX19_ARB");
#endif
#if defined(GL_MATRIX20_ARB)
defconsti(env, "GL-MATRIX20-ARB", (GLenum) GL_MATRIX20_ARB, "GL_MATRIX20_ARB");
#endif
#if defined(GL_MATRIX21_ARB)
defconsti(env, "GL-MATRIX21-ARB", (GLenum) GL_MATRIX21_ARB, "GL_MATRIX21_ARB");
#endif
#if defined(GL_MATRIX22_ARB)
defconsti(env, "GL-MATRIX22-ARB", (GLenum) GL_MATRIX22_ARB, "GL_MATRIX22_ARB");
#endif
#if defined(GL_MATRIX23_ARB)
defconsti(env, "GL-MATRIX23-ARB", (GLenum) GL_MATRIX23_ARB, "GL_MATRIX23_ARB");
#endif
#if defined(GL_MATRIX24_ARB)
defconsti(env, "GL-MATRIX24-ARB", (GLenum) GL_MATRIX24_ARB, "GL_MATRIX24_ARB");
#endif
#if defined(GL_MATRIX25_ARB)
defconsti(env, "GL-MATRIX25-ARB", (GLenum) GL_MATRIX25_ARB, "GL_MATRIX25_ARB");
#endif
#if defined(GL_MATRIX26_ARB)
defconsti(env, "GL-MATRIX26-ARB", (GLenum) GL_MATRIX26_ARB, "GL_MATRIX26_ARB");
#endif
#if defined(GL_MATRIX27_ARB)
defconsti(env, "GL-MATRIX27-ARB", (GLenum) GL_MATRIX27_ARB, "GL_MATRIX27_ARB");
#endif
#if defined(GL_MATRIX28_ARB)
defconsti(env, "GL-MATRIX28-ARB", (GLenum) GL_MATRIX28_ARB, "GL_MATRIX28_ARB");
#endif
#if defined(GL_MATRIX29_ARB)
defconsti(env, "GL-MATRIX29-ARB", (GLenum) GL_MATRIX29_ARB, "GL_MATRIX29_ARB");
#endif
#if defined(GL_MATRIX30_ARB)
defconsti(env, "GL-MATRIX30-ARB", (GLenum) GL_MATRIX30_ARB, "GL_MATRIX30_ARB");
#endif
#if defined(GL_MATRIX31_ARB)
defconsti(env, "GL-MATRIX31-ARB", (GLenum) GL_MATRIX31_ARB, "GL_MATRIX31_ARB");
#endif
#if defined(GL_VERTEX_SHADER_ARB)
defconsti(env, "GL-VERTEX-SHADER-ARB", (GLenum) GL_VERTEX_SHADER_ARB, "GL_VERTEX_SHADER_ARB");
#endif
#if defined(GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB)
defconsti(env, "GL-MAX-VERTEX-UNIFORM-COMPONENTS-ARB", (GLenum) GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB, "GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB");
#endif
#if defined(GL_MAX_VARYING_FLOATS_ARB)
defconsti(env, "GL-MAX-VARYING-FLOATS-ARB", (GLenum) GL_MAX_VARYING_FLOATS_ARB, "GL_MAX_VARYING_FLOATS_ARB");
#endif
#if defined(GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB)
defconsti(env, "GL-MAX-VERTEX-TEXTURE-IMAGE-UNITS-ARB", (GLenum) GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB, "GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB");
#endif
#if defined(GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB)
defconsti(env, "GL-MAX-COMBINED-TEXTURE-IMAGE-UNITS-ARB", (GLenum) GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB, "GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB");
#endif
#if defined(GL_OBJECT_ACTIVE_ATTRIBUTES_ARB)
defconsti(env, "GL-OBJECT-ACTIVE-ATTRIBUTES-ARB", (GLenum) GL_OBJECT_ACTIVE_ATTRIBUTES_ARB, "GL_OBJECT_ACTIVE_ATTRIBUTES_ARB");
#endif
#if defined(GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB)
defconsti(env, "GL-OBJECT-ACTIVE-ATTRIBUTE-MAX-LENGTH-ARB", (GLenum) GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB, "GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB");
#endif
#if defined(GL_MAX_VERTEX_ATTRIBS_ARB)
defconsti(env, "GL-MAX-VERTEX-ATTRIBS-ARB", (GLenum) GL_MAX_VERTEX_ATTRIBS_ARB, "GL_MAX_VERTEX_ATTRIBS_ARB");
#endif
#if defined(GL_MAX_TEXTURE_IMAGE_UNITS_ARB)
defconsti(env, "GL-MAX-TEXTURE-IMAGE-UNITS-ARB", (GLenum) GL_MAX_TEXTURE_IMAGE_UNITS_ARB, "GL_MAX_TEXTURE_IMAGE_UNITS_ARB");
#endif
#if defined(GL_MAX_TEXTURE_COORDS_ARB)
defconsti(env, "GL-MAX-TEXTURE-COORDS-ARB", (GLenum) GL_MAX_TEXTURE_COORDS_ARB, "GL_MAX_TEXTURE_COORDS_ARB");
#endif
#if defined(GL_VERTEX_PROGRAM_POINT_SIZE_ARB)
defconsti(env, "GL-VERTEX-PROGRAM-POINT-SIZE-ARB", (GLenum) GL_VERTEX_PROGRAM_POINT_SIZE_ARB, "GL_VERTEX_PROGRAM_POINT_SIZE_ARB");
#endif
#if defined(GL_VERTEX_PROGRAM_TWO_SIDE_ARB)
defconsti(env, "GL-VERTEX-PROGRAM-TWO-SIDE-ARB", (GLenum) GL_VERTEX_PROGRAM_TWO_SIDE_ARB, "GL_VERTEX_PROGRAM_TWO_SIDE_ARB");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-ENABLED-ARB", (GLenum) GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB, "GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-SIZE-ARB", (GLenum) GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB, "GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-STRIDE-ARB", (GLenum) GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB, "GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-TYPE-ARB", (GLenum) GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB, "GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-NORMALIZED-ARB", (GLenum) GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB, "GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB");
#endif
#if defined(GL_CURRENT_VERTEX_ATTRIB_ARB)
defconsti(env, "GL-CURRENT-VERTEX-ATTRIB-ARB", (GLenum) GL_CURRENT_VERTEX_ATTRIB_ARB, "GL_CURRENT_VERTEX_ATTRIB_ARB");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-POINTER-ARB", (GLenum) GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB, "GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_FLOAT_VEC2_ARB)
defconsti(env, "GL-FLOAT-VEC2-ARB", (GLenum) GL_FLOAT_VEC2_ARB, "GL_FLOAT_VEC2_ARB");
#endif
#if defined(GL_FLOAT_VEC3_ARB)
defconsti(env, "GL-FLOAT-VEC3-ARB", (GLenum) GL_FLOAT_VEC3_ARB, "GL_FLOAT_VEC3_ARB");
#endif
#if defined(GL_FLOAT_VEC4_ARB)
defconsti(env, "GL-FLOAT-VEC4-ARB", (GLenum) GL_FLOAT_VEC4_ARB, "GL_FLOAT_VEC4_ARB");
#endif
#if defined(GL_FLOAT_MAT2_ARB)
defconsti(env, "GL-FLOAT-MAT2-ARB", (GLenum) GL_FLOAT_MAT2_ARB, "GL_FLOAT_MAT2_ARB");
#endif
#if defined(GL_FLOAT_MAT3_ARB)
defconsti(env, "GL-FLOAT-MAT3-ARB", (GLenum) GL_FLOAT_MAT3_ARB, "GL_FLOAT_MAT3_ARB");
#endif
#if defined(GL_FLOAT_MAT4_ARB)
defconsti(env, "GL-FLOAT-MAT4-ARB", (GLenum) GL_FLOAT_MAT4_ARB, "GL_FLOAT_MAT4_ARB");
#endif
#if defined(GL_UNSIGNED_INT_10F_11F_11F_REV)
defconsti(env, "GL-UNSIGNED-INT-10F-11F-11F-REV", (GLenum) GL_UNSIGNED_INT_10F_11F_11F_REV, "GL_UNSIGNED_INT_10F_11F_11F_REV");
#endif
#if defined(GL_UNSIGNED_INT_2_10_10_10_REV)
defconsti(env, "GL-UNSIGNED-INT-2-10-10-10-REV", (GLenum) GL_UNSIGNED_INT_2_10_10_10_REV, "GL_UNSIGNED_INT_2_10_10_10_REV");
#endif
#if defined(GL_INT_2_10_10_10_REV)
defconsti(env, "GL-INT-2-10-10-10-REV", (GLenum) GL_INT_2_10_10_10_REV, "GL_INT_2_10_10_10_REV");
#endif
#if defined(GL_SCISSOR_BOX)
defconsti(env, "GL-SCISSOR-BOX", (GLenum) GL_SCISSOR_BOX, "GL_SCISSOR_BOX");
#endif
#if defined(GL_VIEWPORT)
defconsti(env, "GL-VIEWPORT", (GLenum) GL_VIEWPORT, "GL_VIEWPORT");
#endif
#if defined(GL_DEPTH_RANGE)
defconsti(env, "GL-DEPTH-RANGE", (GLenum) GL_DEPTH_RANGE, "GL_DEPTH_RANGE");
#endif
#if defined(GL_SCISSOR_TEST)
defconsti(env, "GL-SCISSOR-TEST", (GLenum) GL_SCISSOR_TEST, "GL_SCISSOR_TEST");
#endif
#if defined(GL_MAX_VIEWPORTS)
defconsti(env, "GL-MAX-VIEWPORTS", (GLenum) GL_MAX_VIEWPORTS, "GL_MAX_VIEWPORTS");
#endif
#if defined(GL_VIEWPORT_SUBPIXEL_BITS)
defconsti(env, "GL-VIEWPORT-SUBPIXEL-BITS", (GLenum) GL_VIEWPORT_SUBPIXEL_BITS, "GL_VIEWPORT_SUBPIXEL_BITS");
#endif
#if defined(GL_VIEWPORT_BOUNDS_RANGE)
defconsti(env, "GL-VIEWPORT-BOUNDS-RANGE", (GLenum) GL_VIEWPORT_BOUNDS_RANGE, "GL_VIEWPORT_BOUNDS_RANGE");
#endif
#if defined(GL_LAYER_PROVOKING_VERTEX)
defconsti(env, "GL-LAYER-PROVOKING-VERTEX", (GLenum) GL_LAYER_PROVOKING_VERTEX, "GL_LAYER_PROVOKING_VERTEX");
#endif
#if defined(GL_VIEWPORT_INDEX_PROVOKING_VERTEX)
defconsti(env, "GL-VIEWPORT-INDEX-PROVOKING-VERTEX", (GLenum) GL_VIEWPORT_INDEX_PROVOKING_VERTEX, "GL_VIEWPORT_INDEX_PROVOKING_VERTEX");
#endif
#if defined(GL_UNDEFINED_VERTEX)
defconsti(env, "GL-UNDEFINED-VERTEX", (GLenum) GL_UNDEFINED_VERTEX, "GL_UNDEFINED_VERTEX");
#endif
#if defined(GL_FIRST_VERTEX_CONVENTION)
defconsti(env, "GL-FIRST-VERTEX-CONVENTION", (GLenum) GL_FIRST_VERTEX_CONVENTION, "GL_FIRST_VERTEX_CONVENTION");
#endif
#if defined(GL_LAST_VERTEX_CONVENTION)
defconsti(env, "GL-LAST-VERTEX-CONVENTION", (GLenum) GL_LAST_VERTEX_CONVENTION, "GL_LAST_VERTEX_CONVENTION");
#endif
#if defined(GL_PROVOKING_VERTEX)
defconsti(env, "GL-PROVOKING-VERTEX", (GLenum) GL_PROVOKING_VERTEX, "GL_PROVOKING_VERTEX");
#endif
#if defined(GL_MALI_PROGRAM_BINARY_ARM)
defconsti(env, "GL-MALI-PROGRAM-BINARY-ARM", (GLenum) GL_MALI_PROGRAM_BINARY_ARM, "GL_MALI_PROGRAM_BINARY_ARM");
#endif
#if defined(GL_MALI_SHADER_BINARY_ARM)
defconsti(env, "GL-MALI-SHADER-BINARY-ARM", (GLenum) GL_MALI_SHADER_BINARY_ARM, "GL_MALI_SHADER_BINARY_ARM");
#endif
#if defined(GL_FETCH_PER_SAMPLE_ARM)
defconsti(env, "GL-FETCH-PER-SAMPLE-ARM", (GLenum) GL_FETCH_PER_SAMPLE_ARM, "GL_FETCH_PER_SAMPLE_ARM");
#endif
#if defined(GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM)
defconsti(env, "GL-FRAGMENT-SHADER-FRAMEBUFFER-FETCH-MRT-ARM", (GLenum) GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM, "GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM");
#endif
#if defined(GL_TEXTURE_UNNORMALIZED_COORDINATES_ARM)
defconsti(env, "GL-TEXTURE-UNNORMALIZED-COORDINATES-ARM", (GLenum) GL_TEXTURE_UNNORMALIZED_COORDINATES_ARM, "GL_TEXTURE_UNNORMALIZED_COORDINATES_ARM");
#endif
#if defined(GL_MAX_DRAW_BUFFERS_ATI)
defconsti(env, "GL-MAX-DRAW-BUFFERS-ATI", (GLenum) GL_MAX_DRAW_BUFFERS_ATI, "GL_MAX_DRAW_BUFFERS_ATI");
#endif
#if defined(GL_DRAW_BUFFER0_ATI)
defconsti(env, "GL-DRAW-BUFFER0-ATI", (GLenum) GL_DRAW_BUFFER0_ATI, "GL_DRAW_BUFFER0_ATI");
#endif
#if defined(GL_DRAW_BUFFER1_ATI)
defconsti(env, "GL-DRAW-BUFFER1-ATI", (GLenum) GL_DRAW_BUFFER1_ATI, "GL_DRAW_BUFFER1_ATI");
#endif
#if defined(GL_DRAW_BUFFER2_ATI)
defconsti(env, "GL-DRAW-BUFFER2-ATI", (GLenum) GL_DRAW_BUFFER2_ATI, "GL_DRAW_BUFFER2_ATI");
#endif
#if defined(GL_DRAW_BUFFER3_ATI)
defconsti(env, "GL-DRAW-BUFFER3-ATI", (GLenum) GL_DRAW_BUFFER3_ATI, "GL_DRAW_BUFFER3_ATI");
#endif
#if defined(GL_DRAW_BUFFER4_ATI)
defconsti(env, "GL-DRAW-BUFFER4-ATI", (GLenum) GL_DRAW_BUFFER4_ATI, "GL_DRAW_BUFFER4_ATI");
#endif
#if defined(GL_DRAW_BUFFER5_ATI)
defconsti(env, "GL-DRAW-BUFFER5-ATI", (GLenum) GL_DRAW_BUFFER5_ATI, "GL_DRAW_BUFFER5_ATI");
#endif
#if defined(GL_DRAW_BUFFER6_ATI)
defconsti(env, "GL-DRAW-BUFFER6-ATI", (GLenum) GL_DRAW_BUFFER6_ATI, "GL_DRAW_BUFFER6_ATI");
#endif
#if defined(GL_DRAW_BUFFER7_ATI)
defconsti(env, "GL-DRAW-BUFFER7-ATI", (GLenum) GL_DRAW_BUFFER7_ATI, "GL_DRAW_BUFFER7_ATI");
#endif
#if defined(GL_DRAW_BUFFER8_ATI)
defconsti(env, "GL-DRAW-BUFFER8-ATI", (GLenum) GL_DRAW_BUFFER8_ATI, "GL_DRAW_BUFFER8_ATI");
#endif
#if defined(GL_DRAW_BUFFER9_ATI)
defconsti(env, "GL-DRAW-BUFFER9-ATI", (GLenum) GL_DRAW_BUFFER9_ATI, "GL_DRAW_BUFFER9_ATI");
#endif
#if defined(GL_DRAW_BUFFER10_ATI)
defconsti(env, "GL-DRAW-BUFFER10-ATI", (GLenum) GL_DRAW_BUFFER10_ATI, "GL_DRAW_BUFFER10_ATI");
#endif
#if defined(GL_DRAW_BUFFER11_ATI)
defconsti(env, "GL-DRAW-BUFFER11-ATI", (GLenum) GL_DRAW_BUFFER11_ATI, "GL_DRAW_BUFFER11_ATI");
#endif
#if defined(GL_DRAW_BUFFER12_ATI)
defconsti(env, "GL-DRAW-BUFFER12-ATI", (GLenum) GL_DRAW_BUFFER12_ATI, "GL_DRAW_BUFFER12_ATI");
#endif
#if defined(GL_DRAW_BUFFER13_ATI)
defconsti(env, "GL-DRAW-BUFFER13-ATI", (GLenum) GL_DRAW_BUFFER13_ATI, "GL_DRAW_BUFFER13_ATI");
#endif
#if defined(GL_DRAW_BUFFER14_ATI)
defconsti(env, "GL-DRAW-BUFFER14-ATI", (GLenum) GL_DRAW_BUFFER14_ATI, "GL_DRAW_BUFFER14_ATI");
#endif
#if defined(GL_DRAW_BUFFER15_ATI)
defconsti(env, "GL-DRAW-BUFFER15-ATI", (GLenum) GL_DRAW_BUFFER15_ATI, "GL_DRAW_BUFFER15_ATI");
#endif
#if defined(GL_ELEMENT_ARRAY_ATI)
defconsti(env, "GL-ELEMENT-ARRAY-ATI", (GLenum) GL_ELEMENT_ARRAY_ATI, "GL_ELEMENT_ARRAY_ATI");
#endif
#if defined(GL_ELEMENT_ARRAY_TYPE_ATI)
defconsti(env, "GL-ELEMENT-ARRAY-TYPE-ATI", (GLenum) GL_ELEMENT_ARRAY_TYPE_ATI, "GL_ELEMENT_ARRAY_TYPE_ATI");
#endif
#if defined(GL_ELEMENT_ARRAY_POINTER_ATI)
defconsti(env, "GL-ELEMENT-ARRAY-POINTER-ATI", (GLenum) GL_ELEMENT_ARRAY_POINTER_ATI, "GL_ELEMENT_ARRAY_POINTER_ATI");
#endif
#if defined(GL_BUMP_ROT_MATRIX_ATI)
defconsti(env, "GL-BUMP-ROT-MATRIX-ATI", (GLenum) GL_BUMP_ROT_MATRIX_ATI, "GL_BUMP_ROT_MATRIX_ATI");
#endif
#if defined(GL_BUMP_ROT_MATRIX_SIZE_ATI)
defconsti(env, "GL-BUMP-ROT-MATRIX-SIZE-ATI", (GLenum) GL_BUMP_ROT_MATRIX_SIZE_ATI, "GL_BUMP_ROT_MATRIX_SIZE_ATI");
#endif
#if defined(GL_BUMP_NUM_TEX_UNITS_ATI)
defconsti(env, "GL-BUMP-NUM-TEX-UNITS-ATI", (GLenum) GL_BUMP_NUM_TEX_UNITS_ATI, "GL_BUMP_NUM_TEX_UNITS_ATI");
#endif
#if defined(GL_BUMP_TEX_UNITS_ATI)
defconsti(env, "GL-BUMP-TEX-UNITS-ATI", (GLenum) GL_BUMP_TEX_UNITS_ATI, "GL_BUMP_TEX_UNITS_ATI");
#endif
#if defined(GL_DUDV_ATI)
defconsti(env, "GL-DUDV-ATI", (GLenum) GL_DUDV_ATI, "GL_DUDV_ATI");
#endif
#if defined(GL_DU8DV8_ATI)
defconsti(env, "GL-DU8DV8-ATI", (GLenum) GL_DU8DV8_ATI, "GL_DU8DV8_ATI");
#endif
#if defined(GL_BUMP_ENVMAP_ATI)
defconsti(env, "GL-BUMP-ENVMAP-ATI", (GLenum) GL_BUMP_ENVMAP_ATI, "GL_BUMP_ENVMAP_ATI");
#endif
#if defined(GL_BUMP_TARGET_ATI)
defconsti(env, "GL-BUMP-TARGET-ATI", (GLenum) GL_BUMP_TARGET_ATI, "GL_BUMP_TARGET_ATI");
#endif
#if defined(GL_FRAGMENT_SHADER_ATI)
defconsti(env, "GL-FRAGMENT-SHADER-ATI", (GLenum) GL_FRAGMENT_SHADER_ATI, "GL_FRAGMENT_SHADER_ATI");
#endif
#if defined(GL_REG_0_ATI)
defconsti(env, "GL-REG-0-ATI", (GLenum) GL_REG_0_ATI, "GL_REG_0_ATI");
#endif
#if defined(GL_REG_1_ATI)
defconsti(env, "GL-REG-1-ATI", (GLenum) GL_REG_1_ATI, "GL_REG_1_ATI");
#endif
#if defined(GL_REG_2_ATI)
defconsti(env, "GL-REG-2-ATI", (GLenum) GL_REG_2_ATI, "GL_REG_2_ATI");
#endif
#if defined(GL_REG_3_ATI)
defconsti(env, "GL-REG-3-ATI", (GLenum) GL_REG_3_ATI, "GL_REG_3_ATI");
#endif
#if defined(GL_REG_4_ATI)
defconsti(env, "GL-REG-4-ATI", (GLenum) GL_REG_4_ATI, "GL_REG_4_ATI");
#endif
#if defined(GL_REG_5_ATI)
defconsti(env, "GL-REG-5-ATI", (GLenum) GL_REG_5_ATI, "GL_REG_5_ATI");
#endif
#if defined(GL_REG_6_ATI)
defconsti(env, "GL-REG-6-ATI", (GLenum) GL_REG_6_ATI, "GL_REG_6_ATI");
#endif
#if defined(GL_REG_7_ATI)
defconsti(env, "GL-REG-7-ATI", (GLenum) GL_REG_7_ATI, "GL_REG_7_ATI");
#endif
#if defined(GL_REG_8_ATI)
defconsti(env, "GL-REG-8-ATI", (GLenum) GL_REG_8_ATI, "GL_REG_8_ATI");
#endif
#if defined(GL_REG_9_ATI)
defconsti(env, "GL-REG-9-ATI", (GLenum) GL_REG_9_ATI, "GL_REG_9_ATI");
#endif
#if defined(GL_REG_10_ATI)
defconsti(env, "GL-REG-10-ATI", (GLenum) GL_REG_10_ATI, "GL_REG_10_ATI");
#endif
#if defined(GL_REG_11_ATI)
defconsti(env, "GL-REG-11-ATI", (GLenum) GL_REG_11_ATI, "GL_REG_11_ATI");
#endif
#if defined(GL_REG_12_ATI)
defconsti(env, "GL-REG-12-ATI", (GLenum) GL_REG_12_ATI, "GL_REG_12_ATI");
#endif
#if defined(GL_REG_13_ATI)
defconsti(env, "GL-REG-13-ATI", (GLenum) GL_REG_13_ATI, "GL_REG_13_ATI");
#endif
#if defined(GL_REG_14_ATI)
defconsti(env, "GL-REG-14-ATI", (GLenum) GL_REG_14_ATI, "GL_REG_14_ATI");
#endif
#if defined(GL_REG_15_ATI)
defconsti(env, "GL-REG-15-ATI", (GLenum) GL_REG_15_ATI, "GL_REG_15_ATI");
#endif
#if defined(GL_REG_16_ATI)
defconsti(env, "GL-REG-16-ATI", (GLenum) GL_REG_16_ATI, "GL_REG_16_ATI");
#endif
#if defined(GL_REG_17_ATI)
defconsti(env, "GL-REG-17-ATI", (GLenum) GL_REG_17_ATI, "GL_REG_17_ATI");
#endif
#if defined(GL_REG_18_ATI)
defconsti(env, "GL-REG-18-ATI", (GLenum) GL_REG_18_ATI, "GL_REG_18_ATI");
#endif
#if defined(GL_REG_19_ATI)
defconsti(env, "GL-REG-19-ATI", (GLenum) GL_REG_19_ATI, "GL_REG_19_ATI");
#endif
#if defined(GL_REG_20_ATI)
defconsti(env, "GL-REG-20-ATI", (GLenum) GL_REG_20_ATI, "GL_REG_20_ATI");
#endif
#if defined(GL_REG_21_ATI)
defconsti(env, "GL-REG-21-ATI", (GLenum) GL_REG_21_ATI, "GL_REG_21_ATI");
#endif
#if defined(GL_REG_22_ATI)
defconsti(env, "GL-REG-22-ATI", (GLenum) GL_REG_22_ATI, "GL_REG_22_ATI");
#endif
#if defined(GL_REG_23_ATI)
defconsti(env, "GL-REG-23-ATI", (GLenum) GL_REG_23_ATI, "GL_REG_23_ATI");
#endif
#if defined(GL_REG_24_ATI)
defconsti(env, "GL-REG-24-ATI", (GLenum) GL_REG_24_ATI, "GL_REG_24_ATI");
#endif
#if defined(GL_REG_25_ATI)
defconsti(env, "GL-REG-25-ATI", (GLenum) GL_REG_25_ATI, "GL_REG_25_ATI");
#endif
#if defined(GL_REG_26_ATI)
defconsti(env, "GL-REG-26-ATI", (GLenum) GL_REG_26_ATI, "GL_REG_26_ATI");
#endif
#if defined(GL_REG_27_ATI)
defconsti(env, "GL-REG-27-ATI", (GLenum) GL_REG_27_ATI, "GL_REG_27_ATI");
#endif
#if defined(GL_REG_28_ATI)
defconsti(env, "GL-REG-28-ATI", (GLenum) GL_REG_28_ATI, "GL_REG_28_ATI");
#endif
#if defined(GL_REG_29_ATI)
defconsti(env, "GL-REG-29-ATI", (GLenum) GL_REG_29_ATI, "GL_REG_29_ATI");
#endif
#if defined(GL_REG_30_ATI)
defconsti(env, "GL-REG-30-ATI", (GLenum) GL_REG_30_ATI, "GL_REG_30_ATI");
#endif
#if defined(GL_REG_31_ATI)
defconsti(env, "GL-REG-31-ATI", (GLenum) GL_REG_31_ATI, "GL_REG_31_ATI");
#endif
#if defined(GL_CON_0_ATI)
defconsti(env, "GL-CON-0-ATI", (GLenum) GL_CON_0_ATI, "GL_CON_0_ATI");
#endif
#if defined(GL_CON_1_ATI)
defconsti(env, "GL-CON-1-ATI", (GLenum) GL_CON_1_ATI, "GL_CON_1_ATI");
#endif
#if defined(GL_CON_2_ATI)
defconsti(env, "GL-CON-2-ATI", (GLenum) GL_CON_2_ATI, "GL_CON_2_ATI");
#endif
#if defined(GL_CON_3_ATI)
defconsti(env, "GL-CON-3-ATI", (GLenum) GL_CON_3_ATI, "GL_CON_3_ATI");
#endif
#if defined(GL_CON_4_ATI)
defconsti(env, "GL-CON-4-ATI", (GLenum) GL_CON_4_ATI, "GL_CON_4_ATI");
#endif
#if defined(GL_CON_5_ATI)
defconsti(env, "GL-CON-5-ATI", (GLenum) GL_CON_5_ATI, "GL_CON_5_ATI");
#endif
#if defined(GL_CON_6_ATI)
defconsti(env, "GL-CON-6-ATI", (GLenum) GL_CON_6_ATI, "GL_CON_6_ATI");
#endif
#if defined(GL_CON_7_ATI)
defconsti(env, "GL-CON-7-ATI", (GLenum) GL_CON_7_ATI, "GL_CON_7_ATI");
#endif
#if defined(GL_CON_8_ATI)
defconsti(env, "GL-CON-8-ATI", (GLenum) GL_CON_8_ATI, "GL_CON_8_ATI");
#endif
#if defined(GL_CON_9_ATI)
defconsti(env, "GL-CON-9-ATI", (GLenum) GL_CON_9_ATI, "GL_CON_9_ATI");
#endif
#if defined(GL_CON_10_ATI)
defconsti(env, "GL-CON-10-ATI", (GLenum) GL_CON_10_ATI, "GL_CON_10_ATI");
#endif
#if defined(GL_CON_11_ATI)
defconsti(env, "GL-CON-11-ATI", (GLenum) GL_CON_11_ATI, "GL_CON_11_ATI");
#endif
#if defined(GL_CON_12_ATI)
defconsti(env, "GL-CON-12-ATI", (GLenum) GL_CON_12_ATI, "GL_CON_12_ATI");
#endif
#if defined(GL_CON_13_ATI)
defconsti(env, "GL-CON-13-ATI", (GLenum) GL_CON_13_ATI, "GL_CON_13_ATI");
#endif
#if defined(GL_CON_14_ATI)
defconsti(env, "GL-CON-14-ATI", (GLenum) GL_CON_14_ATI, "GL_CON_14_ATI");
#endif
#if defined(GL_CON_15_ATI)
defconsti(env, "GL-CON-15-ATI", (GLenum) GL_CON_15_ATI, "GL_CON_15_ATI");
#endif
#if defined(GL_CON_16_ATI)
defconsti(env, "GL-CON-16-ATI", (GLenum) GL_CON_16_ATI, "GL_CON_16_ATI");
#endif
#if defined(GL_CON_17_ATI)
defconsti(env, "GL-CON-17-ATI", (GLenum) GL_CON_17_ATI, "GL_CON_17_ATI");
#endif
#if defined(GL_CON_18_ATI)
defconsti(env, "GL-CON-18-ATI", (GLenum) GL_CON_18_ATI, "GL_CON_18_ATI");
#endif
#if defined(GL_CON_19_ATI)
defconsti(env, "GL-CON-19-ATI", (GLenum) GL_CON_19_ATI, "GL_CON_19_ATI");
#endif
#if defined(GL_CON_20_ATI)
defconsti(env, "GL-CON-20-ATI", (GLenum) GL_CON_20_ATI, "GL_CON_20_ATI");
#endif
#if defined(GL_CON_21_ATI)
defconsti(env, "GL-CON-21-ATI", (GLenum) GL_CON_21_ATI, "GL_CON_21_ATI");
#endif
#if defined(GL_CON_22_ATI)
defconsti(env, "GL-CON-22-ATI", (GLenum) GL_CON_22_ATI, "GL_CON_22_ATI");
#endif
#if defined(GL_CON_23_ATI)
defconsti(env, "GL-CON-23-ATI", (GLenum) GL_CON_23_ATI, "GL_CON_23_ATI");
#endif
#if defined(GL_CON_24_ATI)
defconsti(env, "GL-CON-24-ATI", (GLenum) GL_CON_24_ATI, "GL_CON_24_ATI");
#endif
#if defined(GL_CON_25_ATI)
defconsti(env, "GL-CON-25-ATI", (GLenum) GL_CON_25_ATI, "GL_CON_25_ATI");
#endif
#if defined(GL_CON_26_ATI)
defconsti(env, "GL-CON-26-ATI", (GLenum) GL_CON_26_ATI, "GL_CON_26_ATI");
#endif
#if defined(GL_CON_27_ATI)
defconsti(env, "GL-CON-27-ATI", (GLenum) GL_CON_27_ATI, "GL_CON_27_ATI");
#endif
#if defined(GL_CON_28_ATI)
defconsti(env, "GL-CON-28-ATI", (GLenum) GL_CON_28_ATI, "GL_CON_28_ATI");
#endif
#if defined(GL_CON_29_ATI)
defconsti(env, "GL-CON-29-ATI", (GLenum) GL_CON_29_ATI, "GL_CON_29_ATI");
#endif
#if defined(GL_CON_30_ATI)
defconsti(env, "GL-CON-30-ATI", (GLenum) GL_CON_30_ATI, "GL_CON_30_ATI");
#endif
#if defined(GL_CON_31_ATI)
defconsti(env, "GL-CON-31-ATI", (GLenum) GL_CON_31_ATI, "GL_CON_31_ATI");
#endif
#if defined(GL_MOV_ATI)
defconsti(env, "GL-MOV-ATI", (GLenum) GL_MOV_ATI, "GL_MOV_ATI");
#endif
#if defined(GL_ADD_ATI)
defconsti(env, "GL-ADD-ATI", (GLenum) GL_ADD_ATI, "GL_ADD_ATI");
#endif
#if defined(GL_MUL_ATI)
defconsti(env, "GL-MUL-ATI", (GLenum) GL_MUL_ATI, "GL_MUL_ATI");
#endif
#if defined(GL_SUB_ATI)
defconsti(env, "GL-SUB-ATI", (GLenum) GL_SUB_ATI, "GL_SUB_ATI");
#endif
#if defined(GL_DOT3_ATI)
defconsti(env, "GL-DOT3-ATI", (GLenum) GL_DOT3_ATI, "GL_DOT3_ATI");
#endif
#if defined(GL_DOT4_ATI)
defconsti(env, "GL-DOT4-ATI", (GLenum) GL_DOT4_ATI, "GL_DOT4_ATI");
#endif
#if defined(GL_MAD_ATI)
defconsti(env, "GL-MAD-ATI", (GLenum) GL_MAD_ATI, "GL_MAD_ATI");
#endif
#if defined(GL_LERP_ATI)
defconsti(env, "GL-LERP-ATI", (GLenum) GL_LERP_ATI, "GL_LERP_ATI");
#endif
#if defined(GL_CND_ATI)
defconsti(env, "GL-CND-ATI", (GLenum) GL_CND_ATI, "GL_CND_ATI");
#endif
#if defined(GL_CND0_ATI)
defconsti(env, "GL-CND0-ATI", (GLenum) GL_CND0_ATI, "GL_CND0_ATI");
#endif
#if defined(GL_DOT2_ADD_ATI)
defconsti(env, "GL-DOT2-ADD-ATI", (GLenum) GL_DOT2_ADD_ATI, "GL_DOT2_ADD_ATI");
#endif
#if defined(GL_SECONDARY_INTERPOLATOR_ATI)
defconsti(env, "GL-SECONDARY-INTERPOLATOR-ATI", (GLenum) GL_SECONDARY_INTERPOLATOR_ATI, "GL_SECONDARY_INTERPOLATOR_ATI");
#endif
#if defined(GL_NUM_FRAGMENT_REGISTERS_ATI)
defconsti(env, "GL-NUM-FRAGMENT-REGISTERS-ATI", (GLenum) GL_NUM_FRAGMENT_REGISTERS_ATI, "GL_NUM_FRAGMENT_REGISTERS_ATI");
#endif
#if defined(GL_NUM_FRAGMENT_CONSTANTS_ATI)
defconsti(env, "GL-NUM-FRAGMENT-CONSTANTS-ATI", (GLenum) GL_NUM_FRAGMENT_CONSTANTS_ATI, "GL_NUM_FRAGMENT_CONSTANTS_ATI");
#endif
#if defined(GL_NUM_PASSES_ATI)
defconsti(env, "GL-NUM-PASSES-ATI", (GLenum) GL_NUM_PASSES_ATI, "GL_NUM_PASSES_ATI");
#endif
#if defined(GL_NUM_INSTRUCTIONS_PER_PASS_ATI)
defconsti(env, "GL-NUM-INSTRUCTIONS-PER-PASS-ATI", (GLenum) GL_NUM_INSTRUCTIONS_PER_PASS_ATI, "GL_NUM_INSTRUCTIONS_PER_PASS_ATI");
#endif
#if defined(GL_NUM_INSTRUCTIONS_TOTAL_ATI)
defconsti(env, "GL-NUM-INSTRUCTIONS-TOTAL-ATI", (GLenum) GL_NUM_INSTRUCTIONS_TOTAL_ATI, "GL_NUM_INSTRUCTIONS_TOTAL_ATI");
#endif
#if defined(GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI)
defconsti(env, "GL-NUM-INPUT-INTERPOLATOR-COMPONENTS-ATI", (GLenum) GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI, "GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI");
#endif
#if defined(GL_NUM_LOOPBACK_COMPONENTS_ATI)
defconsti(env, "GL-NUM-LOOPBACK-COMPONENTS-ATI", (GLenum) GL_NUM_LOOPBACK_COMPONENTS_ATI, "GL_NUM_LOOPBACK_COMPONENTS_ATI");
#endif
#if defined(GL_COLOR_ALPHA_PAIRING_ATI)
defconsti(env, "GL-COLOR-ALPHA-PAIRING-ATI", (GLenum) GL_COLOR_ALPHA_PAIRING_ATI, "GL_COLOR_ALPHA_PAIRING_ATI");
#endif
#if defined(GL_SWIZZLE_STR_ATI)
defconsti(env, "GL-SWIZZLE-STR-ATI", (GLenum) GL_SWIZZLE_STR_ATI, "GL_SWIZZLE_STR_ATI");
#endif
#if defined(GL_SWIZZLE_STQ_ATI)
defconsti(env, "GL-SWIZZLE-STQ-ATI", (GLenum) GL_SWIZZLE_STQ_ATI, "GL_SWIZZLE_STQ_ATI");
#endif
#if defined(GL_SWIZZLE_STR_DR_ATI)
defconsti(env, "GL-SWIZZLE-STR-DR-ATI", (GLenum) GL_SWIZZLE_STR_DR_ATI, "GL_SWIZZLE_STR_DR_ATI");
#endif
#if defined(GL_SWIZZLE_STQ_DQ_ATI)
defconsti(env, "GL-SWIZZLE-STQ-DQ-ATI", (GLenum) GL_SWIZZLE_STQ_DQ_ATI, "GL_SWIZZLE_STQ_DQ_ATI");
#endif
#if defined(GL_SWIZZLE_STRQ_ATI)
defconsti(env, "GL-SWIZZLE-STRQ-ATI", (GLenum) GL_SWIZZLE_STRQ_ATI, "GL_SWIZZLE_STRQ_ATI");
#endif
#if defined(GL_SWIZZLE_STRQ_DQ_ATI)
defconsti(env, "GL-SWIZZLE-STRQ-DQ-ATI", (GLenum) GL_SWIZZLE_STRQ_DQ_ATI, "GL_SWIZZLE_STRQ_DQ_ATI");
#endif
#if defined(GL_RED_BIT_ATI)
defconsti(env, "GL-RED-BIT-ATI", (GLenum) GL_RED_BIT_ATI, "GL_RED_BIT_ATI");
#endif
#if defined(GL_GREEN_BIT_ATI)
defconsti(env, "GL-GREEN-BIT-ATI", (GLenum) GL_GREEN_BIT_ATI, "GL_GREEN_BIT_ATI");
#endif
#if defined(GL_BLUE_BIT_ATI)
defconsti(env, "GL-BLUE-BIT-ATI", (GLenum) GL_BLUE_BIT_ATI, "GL_BLUE_BIT_ATI");
#endif
#if defined(GL_2X_BIT_ATI)
defconsti(env, "GL-2X-BIT-ATI", (GLenum) GL_2X_BIT_ATI, "GL_2X_BIT_ATI");
#endif
#if defined(GL_4X_BIT_ATI)
defconsti(env, "GL-4X-BIT-ATI", (GLenum) GL_4X_BIT_ATI, "GL_4X_BIT_ATI");
#endif
#if defined(GL_8X_BIT_ATI)
defconsti(env, "GL-8X-BIT-ATI", (GLenum) GL_8X_BIT_ATI, "GL_8X_BIT_ATI");
#endif
#if defined(GL_HALF_BIT_ATI)
defconsti(env, "GL-HALF-BIT-ATI", (GLenum) GL_HALF_BIT_ATI, "GL_HALF_BIT_ATI");
#endif
#if defined(GL_QUARTER_BIT_ATI)
defconsti(env, "GL-QUARTER-BIT-ATI", (GLenum) GL_QUARTER_BIT_ATI, "GL_QUARTER_BIT_ATI");
#endif
#if defined(GL_EIGHTH_BIT_ATI)
defconsti(env, "GL-EIGHTH-BIT-ATI", (GLenum) GL_EIGHTH_BIT_ATI, "GL_EIGHTH_BIT_ATI");
#endif
#if defined(GL_SATURATE_BIT_ATI)
defconsti(env, "GL-SATURATE-BIT-ATI", (GLenum) GL_SATURATE_BIT_ATI, "GL_SATURATE_BIT_ATI");
#endif
#if defined(GL_COMP_BIT_ATI)
defconsti(env, "GL-COMP-BIT-ATI", (GLenum) GL_COMP_BIT_ATI, "GL_COMP_BIT_ATI");
#endif
#if defined(GL_NEGATE_BIT_ATI)
defconsti(env, "GL-NEGATE-BIT-ATI", (GLenum) GL_NEGATE_BIT_ATI, "GL_NEGATE_BIT_ATI");
#endif
#if defined(GL_BIAS_BIT_ATI)
defconsti(env, "GL-BIAS-BIT-ATI", (GLenum) GL_BIAS_BIT_ATI, "GL_BIAS_BIT_ATI");
#endif
#if defined(GL_VBO_FREE_MEMORY_ATI)
defconsti(env, "GL-VBO-FREE-MEMORY-ATI", (GLenum) GL_VBO_FREE_MEMORY_ATI, "GL_VBO_FREE_MEMORY_ATI");
#endif
#if defined(GL_TEXTURE_FREE_MEMORY_ATI)
defconsti(env, "GL-TEXTURE-FREE-MEMORY-ATI", (GLenum) GL_TEXTURE_FREE_MEMORY_ATI, "GL_TEXTURE_FREE_MEMORY_ATI");
#endif
#if defined(GL_RENDERBUFFER_FREE_MEMORY_ATI)
defconsti(env, "GL-RENDERBUFFER-FREE-MEMORY-ATI", (GLenum) GL_RENDERBUFFER_FREE_MEMORY_ATI, "GL_RENDERBUFFER_FREE_MEMORY_ATI");
#endif
#if defined(GL_RGBA_FLOAT_MODE_ATI)
defconsti(env, "GL-RGBA-FLOAT-MODE-ATI", (GLenum) GL_RGBA_FLOAT_MODE_ATI, "GL_RGBA_FLOAT_MODE_ATI");
#endif
#if defined(GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI)
defconsti(env, "GL-COLOR-CLEAR-UNCLAMPED-VALUE-ATI", (GLenum) GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI, "GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI");
#endif
#if defined(GL_PN_TRIANGLES_ATI)
defconsti(env, "GL-PN-TRIANGLES-ATI", (GLenum) GL_PN_TRIANGLES_ATI, "GL_PN_TRIANGLES_ATI");
#endif
#if defined(GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI)
defconsti(env, "GL-MAX-PN-TRIANGLES-TESSELATION-LEVEL-ATI", (GLenum) GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI, "GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI");
#endif
#if defined(GL_PN_TRIANGLES_POINT_MODE_ATI)
defconsti(env, "GL-PN-TRIANGLES-POINT-MODE-ATI", (GLenum) GL_PN_TRIANGLES_POINT_MODE_ATI, "GL_PN_TRIANGLES_POINT_MODE_ATI");
#endif
#if defined(GL_PN_TRIANGLES_NORMAL_MODE_ATI)
defconsti(env, "GL-PN-TRIANGLES-NORMAL-MODE-ATI", (GLenum) GL_PN_TRIANGLES_NORMAL_MODE_ATI, "GL_PN_TRIANGLES_NORMAL_MODE_ATI");
#endif
#if defined(GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI)
defconsti(env, "GL-PN-TRIANGLES-TESSELATION-LEVEL-ATI", (GLenum) GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI, "GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI");
#endif
#if defined(GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI)
defconsti(env, "GL-PN-TRIANGLES-POINT-MODE-LINEAR-ATI", (GLenum) GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI, "GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI");
#endif
#if defined(GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI)
defconsti(env, "GL-PN-TRIANGLES-POINT-MODE-CUBIC-ATI", (GLenum) GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI, "GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI");
#endif
#if defined(GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI)
defconsti(env, "GL-PN-TRIANGLES-NORMAL-MODE-LINEAR-ATI", (GLenum) GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI, "GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI");
#endif
#if defined(GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI)
defconsti(env, "GL-PN-TRIANGLES-NORMAL-MODE-QUADRATIC-ATI", (GLenum) GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI, "GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI");
#endif
#if defined(GL_STENCIL_BACK_FUNC_ATI)
defconsti(env, "GL-STENCIL-BACK-FUNC-ATI", (GLenum) GL_STENCIL_BACK_FUNC_ATI, "GL_STENCIL_BACK_FUNC_ATI");
#endif
#if defined(GL_STENCIL_BACK_FAIL_ATI)
defconsti(env, "GL-STENCIL-BACK-FAIL-ATI", (GLenum) GL_STENCIL_BACK_FAIL_ATI, "GL_STENCIL_BACK_FAIL_ATI");
#endif
#if defined(GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI)
defconsti(env, "GL-STENCIL-BACK-PASS-DEPTH-FAIL-ATI", (GLenum) GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI, "GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI");
#endif
#if defined(GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI)
defconsti(env, "GL-STENCIL-BACK-PASS-DEPTH-PASS-ATI", (GLenum) GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI, "GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI");
#endif
#if defined(GL_TEXT_FRAGMENT_SHADER_ATI)
defconsti(env, "GL-TEXT-FRAGMENT-SHADER-ATI", (GLenum) GL_TEXT_FRAGMENT_SHADER_ATI, "GL_TEXT_FRAGMENT_SHADER_ATI");
#endif
#if defined(GL_MODULATE_ADD_ATI)
defconsti(env, "GL-MODULATE-ADD-ATI", (GLenum) GL_MODULATE_ADD_ATI, "GL_MODULATE_ADD_ATI");
#endif
#if defined(GL_MODULATE_SIGNED_ADD_ATI)
defconsti(env, "GL-MODULATE-SIGNED-ADD-ATI", (GLenum) GL_MODULATE_SIGNED_ADD_ATI, "GL_MODULATE_SIGNED_ADD_ATI");
#endif
#if defined(GL_MODULATE_SUBTRACT_ATI)
defconsti(env, "GL-MODULATE-SUBTRACT-ATI", (GLenum) GL_MODULATE_SUBTRACT_ATI, "GL_MODULATE_SUBTRACT_ATI");
#endif
#if defined(GL_RGBA_FLOAT32_ATI)
defconsti(env, "GL-RGBA-FLOAT32-ATI", (GLenum) GL_RGBA_FLOAT32_ATI, "GL_RGBA_FLOAT32_ATI");
#endif
#if defined(GL_RGB_FLOAT32_ATI)
defconsti(env, "GL-RGB-FLOAT32-ATI", (GLenum) GL_RGB_FLOAT32_ATI, "GL_RGB_FLOAT32_ATI");
#endif
#if defined(GL_ALPHA_FLOAT32_ATI)
defconsti(env, "GL-ALPHA-FLOAT32-ATI", (GLenum) GL_ALPHA_FLOAT32_ATI, "GL_ALPHA_FLOAT32_ATI");
#endif
#if defined(GL_INTENSITY_FLOAT32_ATI)
defconsti(env, "GL-INTENSITY-FLOAT32-ATI", (GLenum) GL_INTENSITY_FLOAT32_ATI, "GL_INTENSITY_FLOAT32_ATI");
#endif
#if defined(GL_LUMINANCE_FLOAT32_ATI)
defconsti(env, "GL-LUMINANCE-FLOAT32-ATI", (GLenum) GL_LUMINANCE_FLOAT32_ATI, "GL_LUMINANCE_FLOAT32_ATI");
#endif
#if defined(GL_LUMINANCE_ALPHA_FLOAT32_ATI)
defconsti(env, "GL-LUMINANCE-ALPHA-FLOAT32-ATI", (GLenum) GL_LUMINANCE_ALPHA_FLOAT32_ATI, "GL_LUMINANCE_ALPHA_FLOAT32_ATI");
#endif
#if defined(GL_RGBA_FLOAT16_ATI)
defconsti(env, "GL-RGBA-FLOAT16-ATI", (GLenum) GL_RGBA_FLOAT16_ATI, "GL_RGBA_FLOAT16_ATI");
#endif
#if defined(GL_RGB_FLOAT16_ATI)
defconsti(env, "GL-RGB-FLOAT16-ATI", (GLenum) GL_RGB_FLOAT16_ATI, "GL_RGB_FLOAT16_ATI");
#endif
#if defined(GL_ALPHA_FLOAT16_ATI)
defconsti(env, "GL-ALPHA-FLOAT16-ATI", (GLenum) GL_ALPHA_FLOAT16_ATI, "GL_ALPHA_FLOAT16_ATI");
#endif
#if defined(GL_INTENSITY_FLOAT16_ATI)
defconsti(env, "GL-INTENSITY-FLOAT16-ATI", (GLenum) GL_INTENSITY_FLOAT16_ATI, "GL_INTENSITY_FLOAT16_ATI");
#endif
#if defined(GL_LUMINANCE_FLOAT16_ATI)
defconsti(env, "GL-LUMINANCE-FLOAT16-ATI", (GLenum) GL_LUMINANCE_FLOAT16_ATI, "GL_LUMINANCE_FLOAT16_ATI");
#endif
#if defined(GL_LUMINANCE_ALPHA_FLOAT16_ATI)
defconsti(env, "GL-LUMINANCE-ALPHA-FLOAT16-ATI", (GLenum) GL_LUMINANCE_ALPHA_FLOAT16_ATI, "GL_LUMINANCE_ALPHA_FLOAT16_ATI");
#endif
#if defined(GL_MIRROR_CLAMP_ATI)
defconsti(env, "GL-MIRROR-CLAMP-ATI", (GLenum) GL_MIRROR_CLAMP_ATI, "GL_MIRROR_CLAMP_ATI");
#endif
#if defined(GL_MIRROR_CLAMP_TO_EDGE_ATI)
defconsti(env, "GL-MIRROR-CLAMP-TO-EDGE-ATI", (GLenum) GL_MIRROR_CLAMP_TO_EDGE_ATI, "GL_MIRROR_CLAMP_TO_EDGE_ATI");
#endif
#if defined(GL_STATIC_ATI)
defconsti(env, "GL-STATIC-ATI", (GLenum) GL_STATIC_ATI, "GL_STATIC_ATI");
#endif
#if defined(GL_DYNAMIC_ATI)
defconsti(env, "GL-DYNAMIC-ATI", (GLenum) GL_DYNAMIC_ATI, "GL_DYNAMIC_ATI");
#endif
#if defined(GL_PRESERVE_ATI)
defconsti(env, "GL-PRESERVE-ATI", (GLenum) GL_PRESERVE_ATI, "GL_PRESERVE_ATI");
#endif
#if defined(GL_DISCARD_ATI)
defconsti(env, "GL-DISCARD-ATI", (GLenum) GL_DISCARD_ATI, "GL_DISCARD_ATI");
#endif
#if defined(GL_OBJECT_BUFFER_SIZE_ATI)
defconsti(env, "GL-OBJECT-BUFFER-SIZE-ATI", (GLenum) GL_OBJECT_BUFFER_SIZE_ATI, "GL_OBJECT_BUFFER_SIZE_ATI");
#endif
#if defined(GL_OBJECT_BUFFER_USAGE_ATI)
defconsti(env, "GL-OBJECT-BUFFER-USAGE-ATI", (GLenum) GL_OBJECT_BUFFER_USAGE_ATI, "GL_OBJECT_BUFFER_USAGE_ATI");
#endif
#if defined(GL_ARRAY_OBJECT_BUFFER_ATI)
defconsti(env, "GL-ARRAY-OBJECT-BUFFER-ATI", (GLenum) GL_ARRAY_OBJECT_BUFFER_ATI, "GL_ARRAY_OBJECT_BUFFER_ATI");
#endif
#if defined(GL_ARRAY_OBJECT_OFFSET_ATI)
defconsti(env, "GL-ARRAY-OBJECT-OFFSET-ATI", (GLenum) GL_ARRAY_OBJECT_OFFSET_ATI, "GL_ARRAY_OBJECT_OFFSET_ATI");
#endif
#if defined(GL_MAX_VERTEX_STREAMS_ATI)
defconsti(env, "GL-MAX-VERTEX-STREAMS-ATI", (GLenum) GL_MAX_VERTEX_STREAMS_ATI, "GL_MAX_VERTEX_STREAMS_ATI");
#endif
#if defined(GL_VERTEX_STREAM0_ATI)
defconsti(env, "GL-VERTEX-STREAM0-ATI", (GLenum) GL_VERTEX_STREAM0_ATI, "GL_VERTEX_STREAM0_ATI");
#endif
#if defined(GL_VERTEX_STREAM1_ATI)
defconsti(env, "GL-VERTEX-STREAM1-ATI", (GLenum) GL_VERTEX_STREAM1_ATI, "GL_VERTEX_STREAM1_ATI");
#endif
#if defined(GL_VERTEX_STREAM2_ATI)
defconsti(env, "GL-VERTEX-STREAM2-ATI", (GLenum) GL_VERTEX_STREAM2_ATI, "GL_VERTEX_STREAM2_ATI");
#endif
#if defined(GL_VERTEX_STREAM3_ATI)
defconsti(env, "GL-VERTEX-STREAM3-ATI", (GLenum) GL_VERTEX_STREAM3_ATI, "GL_VERTEX_STREAM3_ATI");
#endif
#if defined(GL_VERTEX_STREAM4_ATI)
defconsti(env, "GL-VERTEX-STREAM4-ATI", (GLenum) GL_VERTEX_STREAM4_ATI, "GL_VERTEX_STREAM4_ATI");
#endif
#if defined(GL_VERTEX_STREAM5_ATI)
defconsti(env, "GL-VERTEX-STREAM5-ATI", (GLenum) GL_VERTEX_STREAM5_ATI, "GL_VERTEX_STREAM5_ATI");
#endif
#if defined(GL_VERTEX_STREAM6_ATI)
defconsti(env, "GL-VERTEX-STREAM6-ATI", (GLenum) GL_VERTEX_STREAM6_ATI, "GL_VERTEX_STREAM6_ATI");
#endif
#if defined(GL_VERTEX_STREAM7_ATI)
defconsti(env, "GL-VERTEX-STREAM7-ATI", (GLenum) GL_VERTEX_STREAM7_ATI, "GL_VERTEX_STREAM7_ATI");
#endif
#if defined(GL_VERTEX_SOURCE_ATI)
defconsti(env, "GL-VERTEX-SOURCE-ATI", (GLenum) GL_VERTEX_SOURCE_ATI, "GL_VERTEX_SOURCE_ATI");
#endif
#if defined(GL_SMAPHS30_PROGRAM_BINARY_DMP)
defconsti(env, "GL-SMAPHS30-PROGRAM-BINARY-DMP", (GLenum) GL_SMAPHS30_PROGRAM_BINARY_DMP, "GL_SMAPHS30_PROGRAM_BINARY_DMP");
#endif
#if defined(GL_SMAPHS_PROGRAM_BINARY_DMP)
defconsti(env, "GL-SMAPHS-PROGRAM-BINARY-DMP", (GLenum) GL_SMAPHS_PROGRAM_BINARY_DMP, "GL_SMAPHS_PROGRAM_BINARY_DMP");
#endif
#if defined(GL_DMP_PROGRAM_BINARY_DMP)
defconsti(env, "GL-DMP-PROGRAM-BINARY-DMP", (GLenum) GL_DMP_PROGRAM_BINARY_DMP, "GL_DMP_PROGRAM_BINARY_DMP");
#endif
#if defined(GL_SHADER_BINARY_DMP)
defconsti(env, "GL-SHADER-BINARY-DMP", (GLenum) GL_SHADER_BINARY_DMP, "GL_SHADER_BINARY_DMP");
#endif
#if defined(GL_422_EXT)
defconsti(env, "GL-422-EXT", (GLenum) GL_422_EXT, "GL_422_EXT");
#endif
#if defined(GL_422_REV_EXT)
defconsti(env, "GL-422-REV-EXT", (GLenum) GL_422_REV_EXT, "GL_422_REV_EXT");
#endif
#if defined(GL_422_AVERAGE_EXT)
defconsti(env, "GL-422-AVERAGE-EXT", (GLenum) GL_422_AVERAGE_EXT, "GL_422_AVERAGE_EXT");
#endif
#if defined(GL_422_REV_AVERAGE_EXT)
defconsti(env, "GL-422-REV-AVERAGE-EXT", (GLenum) GL_422_REV_AVERAGE_EXT, "GL_422_REV_AVERAGE_EXT");
#endif
#if defined(GL_SAMPLER_EXTERNAL_2D_Y2Y_EXT)
defconsti(env, "GL-SAMPLER-EXTERNAL-2D-Y2Y-EXT", (GLenum) GL_SAMPLER_EXTERNAL_2D_Y2Y_EXT, "GL_SAMPLER_EXTERNAL_2D_Y2Y_EXT");
#endif
#if defined(GL_TEXTURE_EXTERNAL_OES)
defconsti(env, "GL-TEXTURE-EXTERNAL-OES", (GLenum) GL_TEXTURE_EXTERNAL_OES, "GL_TEXTURE_EXTERNAL_OES");
#endif
#if defined(GL_TEXTURE_BINDING_EXTERNAL_OES)
defconsti(env, "GL-TEXTURE-BINDING-EXTERNAL-OES", (GLenum) GL_TEXTURE_BINDING_EXTERNAL_OES, "GL_TEXTURE_BINDING_EXTERNAL_OES");
#endif
#if defined(GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES)
defconsti(env, "GL-REQUIRED-TEXTURE-IMAGE-UNITS-OES", (GLenum) GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES, "GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES");
#endif
#if defined(GL_ABGR_EXT)
defconsti(env, "GL-ABGR-EXT", (GLenum) GL_ABGR_EXT, "GL_ABGR_EXT");
#endif
#if defined(GL_BGR_EXT)
defconsti(env, "GL-BGR-EXT", (GLenum) GL_BGR_EXT, "GL_BGR_EXT");
#endif
#if defined(GL_BGRA_EXT)
defconsti(env, "GL-BGRA-EXT", (GLenum) GL_BGRA_EXT, "GL_BGRA_EXT");
#endif
#if defined(GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT)
defconsti(env, "GL-MAX-VERTEX-BINDABLE-UNIFORMS-EXT", (GLenum) GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT, "GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT");
#endif
#if defined(GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT)
defconsti(env, "GL-MAX-FRAGMENT-BINDABLE-UNIFORMS-EXT", (GLenum) GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT, "GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-BINDABLE-UNIFORMS-EXT", (GLenum) GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT, "GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT");
#endif
#if defined(GL_MAX_BINDABLE_UNIFORM_SIZE_EXT)
defconsti(env, "GL-MAX-BINDABLE-UNIFORM-SIZE-EXT", (GLenum) GL_MAX_BINDABLE_UNIFORM_SIZE_EXT, "GL_MAX_BINDABLE_UNIFORM_SIZE_EXT");
#endif
#if defined(GL_UNIFORM_BUFFER_EXT)
defconsti(env, "GL-UNIFORM-BUFFER-EXT", (GLenum) GL_UNIFORM_BUFFER_EXT, "GL_UNIFORM_BUFFER_EXT");
#endif
#if defined(GL_UNIFORM_BUFFER_BINDING_EXT)
defconsti(env, "GL-UNIFORM-BUFFER-BINDING-EXT", (GLenum) GL_UNIFORM_BUFFER_BINDING_EXT, "GL_UNIFORM_BUFFER_BINDING_EXT");
#endif
#if defined(GL_CONSTANT_COLOR_EXT)
defconsti(env, "GL-CONSTANT-COLOR-EXT", (GLenum) GL_CONSTANT_COLOR_EXT, "GL_CONSTANT_COLOR_EXT");
#endif
#if defined(GL_ONE_MINUS_CONSTANT_COLOR_EXT)
defconsti(env, "GL-ONE-MINUS-CONSTANT-COLOR-EXT", (GLenum) GL_ONE_MINUS_CONSTANT_COLOR_EXT, "GL_ONE_MINUS_CONSTANT_COLOR_EXT");
#endif
#if defined(GL_CONSTANT_ALPHA_EXT)
defconsti(env, "GL-CONSTANT-ALPHA-EXT", (GLenum) GL_CONSTANT_ALPHA_EXT, "GL_CONSTANT_ALPHA_EXT");
#endif
#if defined(GL_ONE_MINUS_CONSTANT_ALPHA_EXT)
defconsti(env, "GL-ONE-MINUS-CONSTANT-ALPHA-EXT", (GLenum) GL_ONE_MINUS_CONSTANT_ALPHA_EXT, "GL_ONE_MINUS_CONSTANT_ALPHA_EXT");
#endif
#if defined(GL_BLEND_COLOR_EXT)
defconsti(env, "GL-BLEND-COLOR-EXT", (GLenum) GL_BLEND_COLOR_EXT, "GL_BLEND_COLOR_EXT");
#endif
#if defined(GL_BLEND_EQUATION_RGB_EXT)
defconsti(env, "GL-BLEND-EQUATION-RGB-EXT", (GLenum) GL_BLEND_EQUATION_RGB_EXT, "GL_BLEND_EQUATION_RGB_EXT");
#endif
#if defined(GL_BLEND_EQUATION_ALPHA_EXT)
defconsti(env, "GL-BLEND-EQUATION-ALPHA-EXT", (GLenum) GL_BLEND_EQUATION_ALPHA_EXT, "GL_BLEND_EQUATION_ALPHA_EXT");
#endif
#if defined(GL_SRC1_COLOR_EXT)
defconsti(env, "GL-SRC1-COLOR-EXT", (GLenum) GL_SRC1_COLOR_EXT, "GL_SRC1_COLOR_EXT");
#endif
#if defined(GL_SRC1_ALPHA_EXT)
defconsti(env, "GL-SRC1-ALPHA-EXT", (GLenum) GL_SRC1_ALPHA_EXT, "GL_SRC1_ALPHA_EXT");
#endif
#if defined(GL_ONE_MINUS_SRC1_COLOR_EXT)
defconsti(env, "GL-ONE-MINUS-SRC1-COLOR-EXT", (GLenum) GL_ONE_MINUS_SRC1_COLOR_EXT, "GL_ONE_MINUS_SRC1_COLOR_EXT");
#endif
#if defined(GL_ONE_MINUS_SRC1_ALPHA_EXT)
defconsti(env, "GL-ONE-MINUS-SRC1-ALPHA-EXT", (GLenum) GL_ONE_MINUS_SRC1_ALPHA_EXT, "GL_ONE_MINUS_SRC1_ALPHA_EXT");
#endif
#if defined(GL_SRC_ALPHA_SATURATE_EXT)
defconsti(env, "GL-SRC-ALPHA-SATURATE-EXT", (GLenum) GL_SRC_ALPHA_SATURATE_EXT, "GL_SRC_ALPHA_SATURATE_EXT");
#endif
#if defined(GL_LOCATION_INDEX_EXT)
defconsti(env, "GL-LOCATION-INDEX-EXT", (GLenum) GL_LOCATION_INDEX_EXT, "GL_LOCATION_INDEX_EXT");
#endif
#if defined(GL_MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT)
defconsti(env, "GL-MAX-DUAL-SOURCE-DRAW-BUFFERS-EXT", (GLenum) GL_MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT, "GL_MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT");
#endif
#if defined(GL_BLEND_DST_RGB_EXT)
defconsti(env, "GL-BLEND-DST-RGB-EXT", (GLenum) GL_BLEND_DST_RGB_EXT, "GL_BLEND_DST_RGB_EXT");
#endif
#if defined(GL_BLEND_SRC_RGB_EXT)
defconsti(env, "GL-BLEND-SRC-RGB-EXT", (GLenum) GL_BLEND_SRC_RGB_EXT, "GL_BLEND_SRC_RGB_EXT");
#endif
#if defined(GL_BLEND_DST_ALPHA_EXT)
defconsti(env, "GL-BLEND-DST-ALPHA-EXT", (GLenum) GL_BLEND_DST_ALPHA_EXT, "GL_BLEND_DST_ALPHA_EXT");
#endif
#if defined(GL_BLEND_SRC_ALPHA_EXT)
defconsti(env, "GL-BLEND-SRC-ALPHA-EXT", (GLenum) GL_BLEND_SRC_ALPHA_EXT, "GL_BLEND_SRC_ALPHA_EXT");
#endif
#if defined(GL_MIN_EXT)
defconsti(env, "GL-MIN-EXT", (GLenum) GL_MIN_EXT, "GL_MIN_EXT");
#endif
#if defined(GL_MAX_EXT)
defconsti(env, "GL-MAX-EXT", (GLenum) GL_MAX_EXT, "GL_MAX_EXT");
#endif
#if defined(GL_FUNC_ADD_EXT)
defconsti(env, "GL-FUNC-ADD-EXT", (GLenum) GL_FUNC_ADD_EXT, "GL_FUNC_ADD_EXT");
#endif
#if defined(GL_BLEND_EQUATION_EXT)
defconsti(env, "GL-BLEND-EQUATION-EXT", (GLenum) GL_BLEND_EQUATION_EXT, "GL_BLEND_EQUATION_EXT");
#endif
#if defined(GL_FUNC_SUBTRACT_EXT)
defconsti(env, "GL-FUNC-SUBTRACT-EXT", (GLenum) GL_FUNC_SUBTRACT_EXT, "GL_FUNC_SUBTRACT_EXT");
#endif
#if defined(GL_FUNC_REVERSE_SUBTRACT_EXT)
defconsti(env, "GL-FUNC-REVERSE-SUBTRACT-EXT", (GLenum) GL_FUNC_REVERSE_SUBTRACT_EXT, "GL_FUNC_REVERSE_SUBTRACT_EXT");
#endif
#if defined(GL_MAP_READ_BIT)
defconsti(env, "GL-MAP-READ-BIT", (GLenum) GL_MAP_READ_BIT, "GL_MAP_READ_BIT");
#endif
#if defined(GL_MAP_WRITE_BIT)
defconsti(env, "GL-MAP-WRITE-BIT", (GLenum) GL_MAP_WRITE_BIT, "GL_MAP_WRITE_BIT");
#endif
#if defined(GL_MAP_PERSISTENT_BIT_EXT)
defconsti(env, "GL-MAP-PERSISTENT-BIT-EXT", (GLenum) GL_MAP_PERSISTENT_BIT_EXT, "GL_MAP_PERSISTENT_BIT_EXT");
#endif
#if defined(GL_MAP_COHERENT_BIT_EXT)
defconsti(env, "GL-MAP-COHERENT-BIT-EXT", (GLenum) GL_MAP_COHERENT_BIT_EXT, "GL_MAP_COHERENT_BIT_EXT");
#endif
#if defined(GL_DYNAMIC_STORAGE_BIT_EXT)
defconsti(env, "GL-DYNAMIC-STORAGE-BIT-EXT", (GLenum) GL_DYNAMIC_STORAGE_BIT_EXT, "GL_DYNAMIC_STORAGE_BIT_EXT");
#endif
#if defined(GL_CLIENT_STORAGE_BIT_EXT)
defconsti(env, "GL-CLIENT-STORAGE-BIT-EXT", (GLenum) GL_CLIENT_STORAGE_BIT_EXT, "GL_CLIENT_STORAGE_BIT_EXT");
#endif
#if defined(GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT)
defconsti(env, "GL-CLIENT-MAPPED-BUFFER-BARRIER-BIT-EXT", (GLenum) GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT, "GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT");
#endif
#if defined(GL_BUFFER_IMMUTABLE_STORAGE_EXT)
defconsti(env, "GL-BUFFER-IMMUTABLE-STORAGE-EXT", (GLenum) GL_BUFFER_IMMUTABLE_STORAGE_EXT, "GL_BUFFER_IMMUTABLE_STORAGE_EXT");
#endif
#if defined(GL_BUFFER_STORAGE_FLAGS_EXT)
defconsti(env, "GL-BUFFER-STORAGE-FLAGS-EXT", (GLenum) GL_BUFFER_STORAGE_FLAGS_EXT, "GL_BUFFER_STORAGE_FLAGS_EXT");
#endif
#if defined(GL_LOWER_LEFT_EXT)
defconsti(env, "GL-LOWER-LEFT-EXT", (GLenum) GL_LOWER_LEFT_EXT, "GL_LOWER_LEFT_EXT");
#endif
#if defined(GL_UPPER_LEFT_EXT)
defconsti(env, "GL-UPPER-LEFT-EXT", (GLenum) GL_UPPER_LEFT_EXT, "GL_UPPER_LEFT_EXT");
#endif
#if defined(GL_NEGATIVE_ONE_TO_ONE_EXT)
defconsti(env, "GL-NEGATIVE-ONE-TO-ONE-EXT", (GLenum) GL_NEGATIVE_ONE_TO_ONE_EXT, "GL_NEGATIVE_ONE_TO_ONE_EXT");
#endif
#if defined(GL_ZERO_TO_ONE_EXT)
defconsti(env, "GL-ZERO-TO-ONE-EXT", (GLenum) GL_ZERO_TO_ONE_EXT, "GL_ZERO_TO_ONE_EXT");
#endif
#if defined(GL_CLIP_ORIGIN_EXT)
defconsti(env, "GL-CLIP-ORIGIN-EXT", (GLenum) GL_CLIP_ORIGIN_EXT, "GL_CLIP_ORIGIN_EXT");
#endif
#if defined(GL_CLIP_DEPTH_MODE_EXT)
defconsti(env, "GL-CLIP-DEPTH-MODE-EXT", (GLenum) GL_CLIP_DEPTH_MODE_EXT, "GL_CLIP_DEPTH_MODE_EXT");
#endif
#if defined(GL_MAX_CLIP_DISTANCES_EXT)
defconsti(env, "GL-MAX-CLIP-DISTANCES-EXT", (GLenum) GL_MAX_CLIP_DISTANCES_EXT, "GL_MAX_CLIP_DISTANCES_EXT");
#endif
#if defined(GL_MAX_CULL_DISTANCES_EXT)
defconsti(env, "GL-MAX-CULL-DISTANCES-EXT", (GLenum) GL_MAX_CULL_DISTANCES_EXT, "GL_MAX_CULL_DISTANCES_EXT");
#endif
#if defined(GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES_EXT)
defconsti(env, "GL-MAX-COMBINED-CLIP-AND-CULL-DISTANCES-EXT", (GLenum) GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES_EXT, "GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES_EXT");
#endif
#if defined(GL_CLIP_DISTANCE0_EXT)
defconsti(env, "GL-CLIP-DISTANCE0-EXT", (GLenum) GL_CLIP_DISTANCE0_EXT, "GL_CLIP_DISTANCE0_EXT");
#endif
#if defined(GL_CLIP_DISTANCE1_EXT)
defconsti(env, "GL-CLIP-DISTANCE1-EXT", (GLenum) GL_CLIP_DISTANCE1_EXT, "GL_CLIP_DISTANCE1_EXT");
#endif
#if defined(GL_CLIP_DISTANCE2_EXT)
defconsti(env, "GL-CLIP-DISTANCE2-EXT", (GLenum) GL_CLIP_DISTANCE2_EXT, "GL_CLIP_DISTANCE2_EXT");
#endif
#if defined(GL_CLIP_DISTANCE3_EXT)
defconsti(env, "GL-CLIP-DISTANCE3-EXT", (GLenum) GL_CLIP_DISTANCE3_EXT, "GL_CLIP_DISTANCE3_EXT");
#endif
#if defined(GL_CLIP_DISTANCE4_EXT)
defconsti(env, "GL-CLIP-DISTANCE4-EXT", (GLenum) GL_CLIP_DISTANCE4_EXT, "GL_CLIP_DISTANCE4_EXT");
#endif
#if defined(GL_CLIP_DISTANCE5_EXT)
defconsti(env, "GL-CLIP-DISTANCE5-EXT", (GLenum) GL_CLIP_DISTANCE5_EXT, "GL_CLIP_DISTANCE5_EXT");
#endif
#if defined(GL_CLIP_DISTANCE6_EXT)
defconsti(env, "GL-CLIP-DISTANCE6-EXT", (GLenum) GL_CLIP_DISTANCE6_EXT, "GL_CLIP_DISTANCE6_EXT");
#endif
#if defined(GL_CLIP_DISTANCE7_EXT)
defconsti(env, "GL-CLIP-DISTANCE7-EXT", (GLenum) GL_CLIP_DISTANCE7_EXT, "GL_CLIP_DISTANCE7_EXT");
#endif
#if defined(GL_CLIP_VOLUME_CLIPPING_HINT_EXT)
defconsti(env, "GL-CLIP-VOLUME-CLIPPING-HINT-EXT", (GLenum) GL_CLIP_VOLUME_CLIPPING_HINT_EXT, "GL_CLIP_VOLUME_CLIPPING_HINT_EXT");
#endif
#if defined(GL_CMYK_EXT)
defconsti(env, "GL-CMYK-EXT", (GLenum) GL_CMYK_EXT, "GL_CMYK_EXT");
#endif
#if defined(GL_CMYKA_EXT)
defconsti(env, "GL-CMYKA-EXT", (GLenum) GL_CMYKA_EXT, "GL_CMYKA_EXT");
#endif
#if defined(GL_PACK_CMYK_HINT_EXT)
defconsti(env, "GL-PACK-CMYK-HINT-EXT", (GLenum) GL_PACK_CMYK_HINT_EXT, "GL_PACK_CMYK_HINT_EXT");
#endif
#if defined(GL_UNPACK_CMYK_HINT_EXT)
defconsti(env, "GL-UNPACK-CMYK-HINT-EXT", (GLenum) GL_UNPACK_CMYK_HINT_EXT, "GL_UNPACK_CMYK_HINT_EXT");
#endif
#if defined(GL_RGBA16F_EXT)
defconsti(env, "GL-RGBA16F-EXT", (GLenum) GL_RGBA16F_EXT, "GL_RGBA16F_EXT");
#endif
#if defined(GL_RGB16F_EXT)
defconsti(env, "GL-RGB16F-EXT", (GLenum) GL_RGB16F_EXT, "GL_RGB16F_EXT");
#endif
#if defined(GL_RG16F_EXT)
defconsti(env, "GL-RG16F-EXT", (GLenum) GL_RG16F_EXT, "GL_RG16F_EXT");
#endif
#if defined(GL_R16F_EXT)
defconsti(env, "GL-R16F-EXT", (GLenum) GL_R16F_EXT, "GL_R16F_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-COMPONENT-TYPE-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT, "GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT");
#endif
#if defined(GL_UNSIGNED_NORMALIZED_EXT)
defconsti(env, "GL-UNSIGNED-NORMALIZED-EXT", (GLenum) GL_UNSIGNED_NORMALIZED_EXT, "GL_UNSIGNED_NORMALIZED_EXT");
#endif
#if defined(GL_ARRAY_ELEMENT_LOCK_FIRST_EXT)
defconsti(env, "GL-ARRAY-ELEMENT-LOCK-FIRST-EXT", (GLenum) GL_ARRAY_ELEMENT_LOCK_FIRST_EXT, "GL_ARRAY_ELEMENT_LOCK_FIRST_EXT");
#endif
#if defined(GL_ARRAY_ELEMENT_LOCK_COUNT_EXT)
defconsti(env, "GL-ARRAY-ELEMENT-LOCK-COUNT-EXT", (GLenum) GL_ARRAY_ELEMENT_LOCK_COUNT_EXT, "GL_ARRAY_ELEMENT_LOCK_COUNT_EXT");
#endif
#if defined(GL_CONVOLUTION_1D_EXT)
defconsti(env, "GL-CONVOLUTION-1D-EXT", (GLenum) GL_CONVOLUTION_1D_EXT, "GL_CONVOLUTION_1D_EXT");
#endif
#if defined(GL_CONVOLUTION_2D_EXT)
defconsti(env, "GL-CONVOLUTION-2D-EXT", (GLenum) GL_CONVOLUTION_2D_EXT, "GL_CONVOLUTION_2D_EXT");
#endif
#if defined(GL_SEPARABLE_2D_EXT)
defconsti(env, "GL-SEPARABLE-2D-EXT", (GLenum) GL_SEPARABLE_2D_EXT, "GL_SEPARABLE_2D_EXT");
#endif
#if defined(GL_CONVOLUTION_BORDER_MODE_EXT)
defconsti(env, "GL-CONVOLUTION-BORDER-MODE-EXT", (GLenum) GL_CONVOLUTION_BORDER_MODE_EXT, "GL_CONVOLUTION_BORDER_MODE_EXT");
#endif
#if defined(GL_CONVOLUTION_FILTER_SCALE_EXT)
defconsti(env, "GL-CONVOLUTION-FILTER-SCALE-EXT", (GLenum) GL_CONVOLUTION_FILTER_SCALE_EXT, "GL_CONVOLUTION_FILTER_SCALE_EXT");
#endif
#if defined(GL_CONVOLUTION_FILTER_BIAS_EXT)
defconsti(env, "GL-CONVOLUTION-FILTER-BIAS-EXT", (GLenum) GL_CONVOLUTION_FILTER_BIAS_EXT, "GL_CONVOLUTION_FILTER_BIAS_EXT");
#endif
#if defined(GL_REDUCE_EXT)
defconsti(env, "GL-REDUCE-EXT", (GLenum) GL_REDUCE_EXT, "GL_REDUCE_EXT");
#endif
#if defined(GL_CONVOLUTION_FORMAT_EXT)
defconsti(env, "GL-CONVOLUTION-FORMAT-EXT", (GLenum) GL_CONVOLUTION_FORMAT_EXT, "GL_CONVOLUTION_FORMAT_EXT");
#endif
#if defined(GL_CONVOLUTION_WIDTH_EXT)
defconsti(env, "GL-CONVOLUTION-WIDTH-EXT", (GLenum) GL_CONVOLUTION_WIDTH_EXT, "GL_CONVOLUTION_WIDTH_EXT");
#endif
#if defined(GL_CONVOLUTION_HEIGHT_EXT)
defconsti(env, "GL-CONVOLUTION-HEIGHT-EXT", (GLenum) GL_CONVOLUTION_HEIGHT_EXT, "GL_CONVOLUTION_HEIGHT_EXT");
#endif
#if defined(GL_MAX_CONVOLUTION_WIDTH_EXT)
defconsti(env, "GL-MAX-CONVOLUTION-WIDTH-EXT", (GLenum) GL_MAX_CONVOLUTION_WIDTH_EXT, "GL_MAX_CONVOLUTION_WIDTH_EXT");
#endif
#if defined(GL_MAX_CONVOLUTION_HEIGHT_EXT)
defconsti(env, "GL-MAX-CONVOLUTION-HEIGHT-EXT", (GLenum) GL_MAX_CONVOLUTION_HEIGHT_EXT, "GL_MAX_CONVOLUTION_HEIGHT_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_RED_SCALE_EXT)
defconsti(env, "GL-POST-CONVOLUTION-RED-SCALE-EXT", (GLenum) GL_POST_CONVOLUTION_RED_SCALE_EXT, "GL_POST_CONVOLUTION_RED_SCALE_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_GREEN_SCALE_EXT)
defconsti(env, "GL-POST-CONVOLUTION-GREEN-SCALE-EXT", (GLenum) GL_POST_CONVOLUTION_GREEN_SCALE_EXT, "GL_POST_CONVOLUTION_GREEN_SCALE_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_BLUE_SCALE_EXT)
defconsti(env, "GL-POST-CONVOLUTION-BLUE-SCALE-EXT", (GLenum) GL_POST_CONVOLUTION_BLUE_SCALE_EXT, "GL_POST_CONVOLUTION_BLUE_SCALE_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_ALPHA_SCALE_EXT)
defconsti(env, "GL-POST-CONVOLUTION-ALPHA-SCALE-EXT", (GLenum) GL_POST_CONVOLUTION_ALPHA_SCALE_EXT, "GL_POST_CONVOLUTION_ALPHA_SCALE_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_RED_BIAS_EXT)
defconsti(env, "GL-POST-CONVOLUTION-RED-BIAS-EXT", (GLenum) GL_POST_CONVOLUTION_RED_BIAS_EXT, "GL_POST_CONVOLUTION_RED_BIAS_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_GREEN_BIAS_EXT)
defconsti(env, "GL-POST-CONVOLUTION-GREEN-BIAS-EXT", (GLenum) GL_POST_CONVOLUTION_GREEN_BIAS_EXT, "GL_POST_CONVOLUTION_GREEN_BIAS_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_BLUE_BIAS_EXT)
defconsti(env, "GL-POST-CONVOLUTION-BLUE-BIAS-EXT", (GLenum) GL_POST_CONVOLUTION_BLUE_BIAS_EXT, "GL_POST_CONVOLUTION_BLUE_BIAS_EXT");
#endif
#if defined(GL_POST_CONVOLUTION_ALPHA_BIAS_EXT)
defconsti(env, "GL-POST-CONVOLUTION-ALPHA-BIAS-EXT", (GLenum) GL_POST_CONVOLUTION_ALPHA_BIAS_EXT, "GL_POST_CONVOLUTION_ALPHA_BIAS_EXT");
#endif
#if defined(GL_TANGENT_ARRAY_EXT)
defconsti(env, "GL-TANGENT-ARRAY-EXT", (GLenum) GL_TANGENT_ARRAY_EXT, "GL_TANGENT_ARRAY_EXT");
#endif
#if defined(GL_BINORMAL_ARRAY_EXT)
defconsti(env, "GL-BINORMAL-ARRAY-EXT", (GLenum) GL_BINORMAL_ARRAY_EXT, "GL_BINORMAL_ARRAY_EXT");
#endif
#if defined(GL_CURRENT_TANGENT_EXT)
defconsti(env, "GL-CURRENT-TANGENT-EXT", (GLenum) GL_CURRENT_TANGENT_EXT, "GL_CURRENT_TANGENT_EXT");
#endif
#if defined(GL_CURRENT_BINORMAL_EXT)
defconsti(env, "GL-CURRENT-BINORMAL-EXT", (GLenum) GL_CURRENT_BINORMAL_EXT, "GL_CURRENT_BINORMAL_EXT");
#endif
#if defined(GL_TANGENT_ARRAY_TYPE_EXT)
defconsti(env, "GL-TANGENT-ARRAY-TYPE-EXT", (GLenum) GL_TANGENT_ARRAY_TYPE_EXT, "GL_TANGENT_ARRAY_TYPE_EXT");
#endif
#if defined(GL_TANGENT_ARRAY_STRIDE_EXT)
defconsti(env, "GL-TANGENT-ARRAY-STRIDE-EXT", (GLenum) GL_TANGENT_ARRAY_STRIDE_EXT, "GL_TANGENT_ARRAY_STRIDE_EXT");
#endif
#if defined(GL_BINORMAL_ARRAY_TYPE_EXT)
defconsti(env, "GL-BINORMAL-ARRAY-TYPE-EXT", (GLenum) GL_BINORMAL_ARRAY_TYPE_EXT, "GL_BINORMAL_ARRAY_TYPE_EXT");
#endif
#if defined(GL_BINORMAL_ARRAY_STRIDE_EXT)
defconsti(env, "GL-BINORMAL-ARRAY-STRIDE-EXT", (GLenum) GL_BINORMAL_ARRAY_STRIDE_EXT, "GL_BINORMAL_ARRAY_STRIDE_EXT");
#endif
#if defined(GL_TANGENT_ARRAY_POINTER_EXT)
defconsti(env, "GL-TANGENT-ARRAY-POINTER-EXT", (GLenum) GL_TANGENT_ARRAY_POINTER_EXT, "GL_TANGENT_ARRAY_POINTER_EXT");
#endif
#if defined(GL_BINORMAL_ARRAY_POINTER_EXT)
defconsti(env, "GL-BINORMAL-ARRAY-POINTER-EXT", (GLenum) GL_BINORMAL_ARRAY_POINTER_EXT, "GL_BINORMAL_ARRAY_POINTER_EXT");
#endif
#if defined(GL_MAP1_TANGENT_EXT)
defconsti(env, "GL-MAP1-TANGENT-EXT", (GLenum) GL_MAP1_TANGENT_EXT, "GL_MAP1_TANGENT_EXT");
#endif
#if defined(GL_MAP2_TANGENT_EXT)
defconsti(env, "GL-MAP2-TANGENT-EXT", (GLenum) GL_MAP2_TANGENT_EXT, "GL_MAP2_TANGENT_EXT");
#endif
#if defined(GL_MAP1_BINORMAL_EXT)
defconsti(env, "GL-MAP1-BINORMAL-EXT", (GLenum) GL_MAP1_BINORMAL_EXT, "GL_MAP1_BINORMAL_EXT");
#endif
#if defined(GL_MAP2_BINORMAL_EXT)
defconsti(env, "GL-MAP2-BINORMAL-EXT", (GLenum) GL_MAP2_BINORMAL_EXT, "GL_MAP2_BINORMAL_EXT");
#endif
#if defined(GL_CULL_VERTEX_EXT)
defconsti(env, "GL-CULL-VERTEX-EXT", (GLenum) GL_CULL_VERTEX_EXT, "GL_CULL_VERTEX_EXT");
#endif
#if defined(GL_CULL_VERTEX_EYE_POSITION_EXT)
defconsti(env, "GL-CULL-VERTEX-EYE-POSITION-EXT", (GLenum) GL_CULL_VERTEX_EYE_POSITION_EXT, "GL_CULL_VERTEX_EYE_POSITION_EXT");
#endif
#if defined(GL_CULL_VERTEX_OBJECT_POSITION_EXT)
defconsti(env, "GL-CULL-VERTEX-OBJECT-POSITION-EXT", (GLenum) GL_CULL_VERTEX_OBJECT_POSITION_EXT, "GL_CULL_VERTEX_OBJECT_POSITION_EXT");
#endif
#if defined(GL_PROGRAM_PIPELINE_OBJECT_EXT)
defconsti(env, "GL-PROGRAM-PIPELINE-OBJECT-EXT", (GLenum) GL_PROGRAM_PIPELINE_OBJECT_EXT, "GL_PROGRAM_PIPELINE_OBJECT_EXT");
#endif
#if defined(GL_PROGRAM_OBJECT_EXT)
defconsti(env, "GL-PROGRAM-OBJECT-EXT", (GLenum) GL_PROGRAM_OBJECT_EXT, "GL_PROGRAM_OBJECT_EXT");
#endif
#if defined(GL_SHADER_OBJECT_EXT)
defconsti(env, "GL-SHADER-OBJECT-EXT", (GLenum) GL_SHADER_OBJECT_EXT, "GL_SHADER_OBJECT_EXT");
#endif
#if defined(GL_BUFFER_OBJECT_EXT)
defconsti(env, "GL-BUFFER-OBJECT-EXT", (GLenum) GL_BUFFER_OBJECT_EXT, "GL_BUFFER_OBJECT_EXT");
#endif
#if defined(GL_QUERY_OBJECT_EXT)
defconsti(env, "GL-QUERY-OBJECT-EXT", (GLenum) GL_QUERY_OBJECT_EXT, "GL_QUERY_OBJECT_EXT");
#endif
#if defined(GL_VERTEX_ARRAY_OBJECT_EXT)
defconsti(env, "GL-VERTEX-ARRAY-OBJECT-EXT", (GLenum) GL_VERTEX_ARRAY_OBJECT_EXT, "GL_VERTEX_ARRAY_OBJECT_EXT");
#endif
#if defined(GL_SAMPLER)
defconsti(env, "GL-SAMPLER", (GLenum) GL_SAMPLER, "GL_SAMPLER");
#endif
#if defined(GL_TRANSFORM_FEEDBACK)
defconsti(env, "GL-TRANSFORM-FEEDBACK", (GLenum) GL_TRANSFORM_FEEDBACK, "GL_TRANSFORM_FEEDBACK");
#endif
#if defined(GL_DEPTH_BOUNDS_TEST_EXT)
defconsti(env, "GL-DEPTH-BOUNDS-TEST-EXT", (GLenum) GL_DEPTH_BOUNDS_TEST_EXT, "GL_DEPTH_BOUNDS_TEST_EXT");
#endif
#if defined(GL_DEPTH_BOUNDS_EXT)
defconsti(env, "GL-DEPTH-BOUNDS-EXT", (GLenum) GL_DEPTH_BOUNDS_EXT, "GL_DEPTH_BOUNDS_EXT");
#endif
#if defined(GL_DEPTH_CLAMP_EXT)
defconsti(env, "GL-DEPTH-CLAMP-EXT", (GLenum) GL_DEPTH_CLAMP_EXT, "GL_DEPTH_CLAMP_EXT");
#endif
#if defined(GL_PROGRAM_MATRIX_EXT)
defconsti(env, "GL-PROGRAM-MATRIX-EXT", (GLenum) GL_PROGRAM_MATRIX_EXT, "GL_PROGRAM_MATRIX_EXT");
#endif
#if defined(GL_TRANSPOSE_PROGRAM_MATRIX_EXT)
defconsti(env, "GL-TRANSPOSE-PROGRAM-MATRIX-EXT", (GLenum) GL_TRANSPOSE_PROGRAM_MATRIX_EXT, "GL_TRANSPOSE_PROGRAM_MATRIX_EXT");
#endif
#if defined(GL_PROGRAM_MATRIX_STACK_DEPTH_EXT)
defconsti(env, "GL-PROGRAM-MATRIX-STACK-DEPTH-EXT", (GLenum) GL_PROGRAM_MATRIX_STACK_DEPTH_EXT, "GL_PROGRAM_MATRIX_STACK_DEPTH_EXT");
#endif
#if defined(GL_COLOR_EXT)
defconsti(env, "GL-COLOR-EXT", (GLenum) GL_COLOR_EXT, "GL_COLOR_EXT");
#endif
#if defined(GL_DEPTH_EXT)
defconsti(env, "GL-DEPTH-EXT", (GLenum) GL_DEPTH_EXT, "GL_DEPTH_EXT");
#endif
#if defined(GL_STENCIL_EXT)
defconsti(env, "GL-STENCIL-EXT", (GLenum) GL_STENCIL_EXT, "GL_STENCIL_EXT");
#endif
#if defined(GL_QUERY_COUNTER_BITS_EXT)
defconsti(env, "GL-QUERY-COUNTER-BITS-EXT", (GLenum) GL_QUERY_COUNTER_BITS_EXT, "GL_QUERY_COUNTER_BITS_EXT");
#endif
#if defined(GL_CURRENT_QUERY_EXT)
defconsti(env, "GL-CURRENT-QUERY-EXT", (GLenum) GL_CURRENT_QUERY_EXT, "GL_CURRENT_QUERY_EXT");
#endif
#if defined(GL_QUERY_RESULT_EXT)
defconsti(env, "GL-QUERY-RESULT-EXT", (GLenum) GL_QUERY_RESULT_EXT, "GL_QUERY_RESULT_EXT");
#endif
#if defined(GL_QUERY_RESULT_AVAILABLE_EXT)
defconsti(env, "GL-QUERY-RESULT-AVAILABLE-EXT", (GLenum) GL_QUERY_RESULT_AVAILABLE_EXT, "GL_QUERY_RESULT_AVAILABLE_EXT");
#endif
#if defined(GL_TIME_ELAPSED_EXT)
defconsti(env, "GL-TIME-ELAPSED-EXT", (GLenum) GL_TIME_ELAPSED_EXT, "GL_TIME_ELAPSED_EXT");
#endif
#if defined(GL_TIMESTAMP_EXT)
defconsti(env, "GL-TIMESTAMP-EXT", (GLenum) GL_TIMESTAMP_EXT, "GL_TIMESTAMP_EXT");
#endif
#if defined(GL_GPU_DISJOINT_EXT)
defconsti(env, "GL-GPU-DISJOINT-EXT", (GLenum) GL_GPU_DISJOINT_EXT, "GL_GPU_DISJOINT_EXT");
#endif
#if defined(GL_MAX_COLOR_ATTACHMENTS_EXT)
defconsti(env, "GL-MAX-COLOR-ATTACHMENTS-EXT", (GLenum) GL_MAX_COLOR_ATTACHMENTS_EXT, "GL_MAX_COLOR_ATTACHMENTS_EXT");
#endif
#if defined(GL_MAX_DRAW_BUFFERS_EXT)
defconsti(env, "GL-MAX-DRAW-BUFFERS-EXT", (GLenum) GL_MAX_DRAW_BUFFERS_EXT, "GL_MAX_DRAW_BUFFERS_EXT");
#endif
#if defined(GL_DRAW_BUFFER0_EXT)
defconsti(env, "GL-DRAW-BUFFER0-EXT", (GLenum) GL_DRAW_BUFFER0_EXT, "GL_DRAW_BUFFER0_EXT");
#endif
#if defined(GL_DRAW_BUFFER1_EXT)
defconsti(env, "GL-DRAW-BUFFER1-EXT", (GLenum) GL_DRAW_BUFFER1_EXT, "GL_DRAW_BUFFER1_EXT");
#endif
#if defined(GL_DRAW_BUFFER2_EXT)
defconsti(env, "GL-DRAW-BUFFER2-EXT", (GLenum) GL_DRAW_BUFFER2_EXT, "GL_DRAW_BUFFER2_EXT");
#endif
#if defined(GL_DRAW_BUFFER3_EXT)
defconsti(env, "GL-DRAW-BUFFER3-EXT", (GLenum) GL_DRAW_BUFFER3_EXT, "GL_DRAW_BUFFER3_EXT");
#endif
#if defined(GL_DRAW_BUFFER4_EXT)
defconsti(env, "GL-DRAW-BUFFER4-EXT", (GLenum) GL_DRAW_BUFFER4_EXT, "GL_DRAW_BUFFER4_EXT");
#endif
#if defined(GL_DRAW_BUFFER5_EXT)
defconsti(env, "GL-DRAW-BUFFER5-EXT", (GLenum) GL_DRAW_BUFFER5_EXT, "GL_DRAW_BUFFER5_EXT");
#endif
#if defined(GL_DRAW_BUFFER6_EXT)
defconsti(env, "GL-DRAW-BUFFER6-EXT", (GLenum) GL_DRAW_BUFFER6_EXT, "GL_DRAW_BUFFER6_EXT");
#endif
#if defined(GL_DRAW_BUFFER7_EXT)
defconsti(env, "GL-DRAW-BUFFER7-EXT", (GLenum) GL_DRAW_BUFFER7_EXT, "GL_DRAW_BUFFER7_EXT");
#endif
#if defined(GL_DRAW_BUFFER8_EXT)
defconsti(env, "GL-DRAW-BUFFER8-EXT", (GLenum) GL_DRAW_BUFFER8_EXT, "GL_DRAW_BUFFER8_EXT");
#endif
#if defined(GL_DRAW_BUFFER9_EXT)
defconsti(env, "GL-DRAW-BUFFER9-EXT", (GLenum) GL_DRAW_BUFFER9_EXT, "GL_DRAW_BUFFER9_EXT");
#endif
#if defined(GL_DRAW_BUFFER10_EXT)
defconsti(env, "GL-DRAW-BUFFER10-EXT", (GLenum) GL_DRAW_BUFFER10_EXT, "GL_DRAW_BUFFER10_EXT");
#endif
#if defined(GL_DRAW_BUFFER11_EXT)
defconsti(env, "GL-DRAW-BUFFER11-EXT", (GLenum) GL_DRAW_BUFFER11_EXT, "GL_DRAW_BUFFER11_EXT");
#endif
#if defined(GL_DRAW_BUFFER12_EXT)
defconsti(env, "GL-DRAW-BUFFER12-EXT", (GLenum) GL_DRAW_BUFFER12_EXT, "GL_DRAW_BUFFER12_EXT");
#endif
#if defined(GL_DRAW_BUFFER13_EXT)
defconsti(env, "GL-DRAW-BUFFER13-EXT", (GLenum) GL_DRAW_BUFFER13_EXT, "GL_DRAW_BUFFER13_EXT");
#endif
#if defined(GL_DRAW_BUFFER14_EXT)
defconsti(env, "GL-DRAW-BUFFER14-EXT", (GLenum) GL_DRAW_BUFFER14_EXT, "GL_DRAW_BUFFER14_EXT");
#endif
#if defined(GL_DRAW_BUFFER15_EXT)
defconsti(env, "GL-DRAW-BUFFER15-EXT", (GLenum) GL_DRAW_BUFFER15_EXT, "GL_DRAW_BUFFER15_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT0_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT0-EXT", (GLenum) GL_COLOR_ATTACHMENT0_EXT, "GL_COLOR_ATTACHMENT0_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT1_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT1-EXT", (GLenum) GL_COLOR_ATTACHMENT1_EXT, "GL_COLOR_ATTACHMENT1_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT2_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT2-EXT", (GLenum) GL_COLOR_ATTACHMENT2_EXT, "GL_COLOR_ATTACHMENT2_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT3_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT3-EXT", (GLenum) GL_COLOR_ATTACHMENT3_EXT, "GL_COLOR_ATTACHMENT3_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT4_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT4-EXT", (GLenum) GL_COLOR_ATTACHMENT4_EXT, "GL_COLOR_ATTACHMENT4_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT5_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT5-EXT", (GLenum) GL_COLOR_ATTACHMENT5_EXT, "GL_COLOR_ATTACHMENT5_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT6_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT6-EXT", (GLenum) GL_COLOR_ATTACHMENT6_EXT, "GL_COLOR_ATTACHMENT6_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT7_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT7-EXT", (GLenum) GL_COLOR_ATTACHMENT7_EXT, "GL_COLOR_ATTACHMENT7_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT8_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT8-EXT", (GLenum) GL_COLOR_ATTACHMENT8_EXT, "GL_COLOR_ATTACHMENT8_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT9_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT9-EXT", (GLenum) GL_COLOR_ATTACHMENT9_EXT, "GL_COLOR_ATTACHMENT9_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT10_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT10-EXT", (GLenum) GL_COLOR_ATTACHMENT10_EXT, "GL_COLOR_ATTACHMENT10_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT11_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT11-EXT", (GLenum) GL_COLOR_ATTACHMENT11_EXT, "GL_COLOR_ATTACHMENT11_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT12_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT12-EXT", (GLenum) GL_COLOR_ATTACHMENT12_EXT, "GL_COLOR_ATTACHMENT12_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT13_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT13-EXT", (GLenum) GL_COLOR_ATTACHMENT13_EXT, "GL_COLOR_ATTACHMENT13_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT14_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT14-EXT", (GLenum) GL_COLOR_ATTACHMENT14_EXT, "GL_COLOR_ATTACHMENT14_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT15_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT15-EXT", (GLenum) GL_COLOR_ATTACHMENT15_EXT, "GL_COLOR_ATTACHMENT15_EXT");
#endif
#if defined(GL_BLEND_EQUATION_RGB)
defconsti(env, "GL-BLEND-EQUATION-RGB", (GLenum) GL_BLEND_EQUATION_RGB, "GL_BLEND_EQUATION_RGB");
#endif
#if defined(GL_BLEND_EQUATION_ALPHA)
defconsti(env, "GL-BLEND-EQUATION-ALPHA", (GLenum) GL_BLEND_EQUATION_ALPHA, "GL_BLEND_EQUATION_ALPHA");
#endif
#if defined(GL_BLEND_SRC_RGB)
defconsti(env, "GL-BLEND-SRC-RGB", (GLenum) GL_BLEND_SRC_RGB, "GL_BLEND_SRC_RGB");
#endif
#if defined(GL_BLEND_SRC_ALPHA)
defconsti(env, "GL-BLEND-SRC-ALPHA", (GLenum) GL_BLEND_SRC_ALPHA, "GL_BLEND_SRC_ALPHA");
#endif
#if defined(GL_BLEND_DST_RGB)
defconsti(env, "GL-BLEND-DST-RGB", (GLenum) GL_BLEND_DST_RGB, "GL_BLEND_DST_RGB");
#endif
#if defined(GL_BLEND_DST_ALPHA)
defconsti(env, "GL-BLEND-DST-ALPHA", (GLenum) GL_BLEND_DST_ALPHA, "GL_BLEND_DST_ALPHA");
#endif
#if defined(GL_COLOR_WRITEMASK)
defconsti(env, "GL-COLOR-WRITEMASK", (GLenum) GL_COLOR_WRITEMASK, "GL_COLOR_WRITEMASK");
#endif
#if defined(GL_BLEND)
defconsti(env, "GL-BLEND", (GLenum) GL_BLEND, "GL_BLEND");
#endif
#if defined(GL_FUNC_ADD)
defconsti(env, "GL-FUNC-ADD", (GLenum) GL_FUNC_ADD, "GL_FUNC_ADD");
#endif
#if defined(GL_FUNC_SUBTRACT)
defconsti(env, "GL-FUNC-SUBTRACT", (GLenum) GL_FUNC_SUBTRACT, "GL_FUNC_SUBTRACT");
#endif
#if defined(GL_FUNC_REVERSE_SUBTRACT)
defconsti(env, "GL-FUNC-REVERSE-SUBTRACT", (GLenum) GL_FUNC_REVERSE_SUBTRACT, "GL_FUNC_REVERSE_SUBTRACT");
#endif
#if defined(GL_MIN)
defconsti(env, "GL-MIN", (GLenum) GL_MIN, "GL_MIN");
#endif
#if defined(GL_MAX)
defconsti(env, "GL-MAX", (GLenum) GL_MAX, "GL_MAX");
#endif
#if defined(GL_ZERO)
defconsti(env, "GL-ZERO", (GLenum) GL_ZERO, "GL_ZERO");
#endif
#if defined(GL_ONE)
defconsti(env, "GL-ONE", (GLenum) GL_ONE, "GL_ONE");
#endif
#if defined(GL_SRC_COLOR)
defconsti(env, "GL-SRC-COLOR", (GLenum) GL_SRC_COLOR, "GL_SRC_COLOR");
#endif
#if defined(GL_ONE_MINUS_SRC_COLOR)
defconsti(env, "GL-ONE-MINUS-SRC-COLOR", (GLenum) GL_ONE_MINUS_SRC_COLOR, "GL_ONE_MINUS_SRC_COLOR");
#endif
#if defined(GL_DST_COLOR)
defconsti(env, "GL-DST-COLOR", (GLenum) GL_DST_COLOR, "GL_DST_COLOR");
#endif
#if defined(GL_ONE_MINUS_DST_COLOR)
defconsti(env, "GL-ONE-MINUS-DST-COLOR", (GLenum) GL_ONE_MINUS_DST_COLOR, "GL_ONE_MINUS_DST_COLOR");
#endif
#if defined(GL_SRC_ALPHA)
defconsti(env, "GL-SRC-ALPHA", (GLenum) GL_SRC_ALPHA, "GL_SRC_ALPHA");
#endif
#if defined(GL_ONE_MINUS_SRC_ALPHA)
defconsti(env, "GL-ONE-MINUS-SRC-ALPHA", (GLenum) GL_ONE_MINUS_SRC_ALPHA, "GL_ONE_MINUS_SRC_ALPHA");
#endif
#if defined(GL_DST_ALPHA)
defconsti(env, "GL-DST-ALPHA", (GLenum) GL_DST_ALPHA, "GL_DST_ALPHA");
#endif
#if defined(GL_ONE_MINUS_DST_ALPHA)
defconsti(env, "GL-ONE-MINUS-DST-ALPHA", (GLenum) GL_ONE_MINUS_DST_ALPHA, "GL_ONE_MINUS_DST_ALPHA");
#endif
#if defined(GL_CONSTANT_COLOR)
defconsti(env, "GL-CONSTANT-COLOR", (GLenum) GL_CONSTANT_COLOR, "GL_CONSTANT_COLOR");
#endif
#if defined(GL_ONE_MINUS_CONSTANT_COLOR)
defconsti(env, "GL-ONE-MINUS-CONSTANT-COLOR", (GLenum) GL_ONE_MINUS_CONSTANT_COLOR, "GL_ONE_MINUS_CONSTANT_COLOR");
#endif
#if defined(GL_CONSTANT_ALPHA)
defconsti(env, "GL-CONSTANT-ALPHA", (GLenum) GL_CONSTANT_ALPHA, "GL_CONSTANT_ALPHA");
#endif
#if defined(GL_ONE_MINUS_CONSTANT_ALPHA)
defconsti(env, "GL-ONE-MINUS-CONSTANT-ALPHA", (GLenum) GL_ONE_MINUS_CONSTANT_ALPHA, "GL_ONE_MINUS_CONSTANT_ALPHA");
#endif
#if defined(GL_SRC_ALPHA_SATURATE)
defconsti(env, "GL-SRC-ALPHA-SATURATE", (GLenum) GL_SRC_ALPHA_SATURATE, "GL_SRC_ALPHA_SATURATE");
#endif
#if defined(GL_MAX_ELEMENTS_VERTICES_EXT)
defconsti(env, "GL-MAX-ELEMENTS-VERTICES-EXT", (GLenum) GL_MAX_ELEMENTS_VERTICES_EXT, "GL_MAX_ELEMENTS_VERTICES_EXT");
#endif
#if defined(GL_MAX_ELEMENTS_INDICES_EXT)
defconsti(env, "GL-MAX-ELEMENTS-INDICES-EXT", (GLenum) GL_MAX_ELEMENTS_INDICES_EXT, "GL_MAX_ELEMENTS_INDICES_EXT");
#endif
#if defined(GL_FOG_COORDINATE_SOURCE_EXT)
defconsti(env, "GL-FOG-COORDINATE-SOURCE-EXT", (GLenum) GL_FOG_COORDINATE_SOURCE_EXT, "GL_FOG_COORDINATE_SOURCE_EXT");
#endif
#if defined(GL_FOG_COORDINATE_EXT)
defconsti(env, "GL-FOG-COORDINATE-EXT", (GLenum) GL_FOG_COORDINATE_EXT, "GL_FOG_COORDINATE_EXT");
#endif
#if defined(GL_FRAGMENT_DEPTH_EXT)
defconsti(env, "GL-FRAGMENT-DEPTH-EXT", (GLenum) GL_FRAGMENT_DEPTH_EXT, "GL_FRAGMENT_DEPTH_EXT");
#endif
#if defined(GL_CURRENT_FOG_COORDINATE_EXT)
defconsti(env, "GL-CURRENT-FOG-COORDINATE-EXT", (GLenum) GL_CURRENT_FOG_COORDINATE_EXT, "GL_CURRENT_FOG_COORDINATE_EXT");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY_TYPE_EXT)
defconsti(env, "GL-FOG-COORDINATE-ARRAY-TYPE-EXT", (GLenum) GL_FOG_COORDINATE_ARRAY_TYPE_EXT, "GL_FOG_COORDINATE_ARRAY_TYPE_EXT");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY_STRIDE_EXT)
defconsti(env, "GL-FOG-COORDINATE-ARRAY-STRIDE-EXT", (GLenum) GL_FOG_COORDINATE_ARRAY_STRIDE_EXT, "GL_FOG_COORDINATE_ARRAY_STRIDE_EXT");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY_POINTER_EXT)
defconsti(env, "GL-FOG-COORDINATE-ARRAY-POINTER-EXT", (GLenum) GL_FOG_COORDINATE_ARRAY_POINTER_EXT, "GL_FOG_COORDINATE_ARRAY_POINTER_EXT");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY_EXT)
defconsti(env, "GL-FOG-COORDINATE-ARRAY-EXT", (GLenum) GL_FOG_COORDINATE_ARRAY_EXT, "GL_FOG_COORDINATE_ARRAY_EXT");
#endif
#if defined(GL_READ_FRAMEBUFFER_EXT)
defconsti(env, "GL-READ-FRAMEBUFFER-EXT", (GLenum) GL_READ_FRAMEBUFFER_EXT, "GL_READ_FRAMEBUFFER_EXT");
#endif
#if defined(GL_DRAW_FRAMEBUFFER_EXT)
defconsti(env, "GL-DRAW-FRAMEBUFFER-EXT", (GLenum) GL_DRAW_FRAMEBUFFER_EXT, "GL_DRAW_FRAMEBUFFER_EXT");
#endif
#if defined(GL_DRAW_FRAMEBUFFER_BINDING_EXT)
defconsti(env, "GL-DRAW-FRAMEBUFFER-BINDING-EXT", (GLenum) GL_DRAW_FRAMEBUFFER_BINDING_EXT, "GL_DRAW_FRAMEBUFFER_BINDING_EXT");
#endif
#if defined(GL_READ_FRAMEBUFFER_BINDING_EXT)
defconsti(env, "GL-READ-FRAMEBUFFER-BINDING-EXT", (GLenum) GL_READ_FRAMEBUFFER_BINDING_EXT, "GL_READ_FRAMEBUFFER_BINDING_EXT");
#endif
#if defined(GL_RENDERBUFFER_SAMPLES_EXT)
defconsti(env, "GL-RENDERBUFFER-SAMPLES-EXT", (GLenum) GL_RENDERBUFFER_SAMPLES_EXT, "GL_RENDERBUFFER_SAMPLES_EXT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MULTISAMPLE-EXT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT, "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT");
#endif
#if defined(GL_MAX_SAMPLES_EXT)
defconsti(env, "GL-MAX-SAMPLES-EXT", (GLenum) GL_MAX_SAMPLES_EXT, "GL_MAX_SAMPLES_EXT");
#endif
#if defined(GL_SCALED_RESOLVE_FASTEST_EXT)
defconsti(env, "GL-SCALED-RESOLVE-FASTEST-EXT", (GLenum) GL_SCALED_RESOLVE_FASTEST_EXT, "GL_SCALED_RESOLVE_FASTEST_EXT");
#endif
#if defined(GL_SCALED_RESOLVE_NICEST_EXT)
defconsti(env, "GL-SCALED-RESOLVE-NICEST-EXT", (GLenum) GL_SCALED_RESOLVE_NICEST_EXT, "GL_SCALED_RESOLVE_NICEST_EXT");
#endif
#if defined(GL_INVALID_FRAMEBUFFER_OPERATION_EXT)
defconsti(env, "GL-INVALID-FRAMEBUFFER-OPERATION-EXT", (GLenum) GL_INVALID_FRAMEBUFFER_OPERATION_EXT, "GL_INVALID_FRAMEBUFFER_OPERATION_EXT");
#endif
#if defined(GL_MAX_RENDERBUFFER_SIZE_EXT)
defconsti(env, "GL-MAX-RENDERBUFFER-SIZE-EXT", (GLenum) GL_MAX_RENDERBUFFER_SIZE_EXT, "GL_MAX_RENDERBUFFER_SIZE_EXT");
#endif
#if defined(GL_FRAMEBUFFER_BINDING_EXT)
defconsti(env, "GL-FRAMEBUFFER-BINDING-EXT", (GLenum) GL_FRAMEBUFFER_BINDING_EXT, "GL_FRAMEBUFFER_BINDING_EXT");
#endif
#if defined(GL_RENDERBUFFER_BINDING_EXT)
defconsti(env, "GL-RENDERBUFFER-BINDING-EXT", (GLenum) GL_RENDERBUFFER_BINDING_EXT, "GL_RENDERBUFFER_BINDING_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-OBJECT-TYPE-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-OBJECT-NAME-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-LEVEL-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-CUBE-MAP-FACE-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-3D-ZOFFSET-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT");
#endif
#if defined(GL_FRAMEBUFFER_COMPLETE_EXT)
defconsti(env, "GL-FRAMEBUFFER-COMPLETE-EXT", (GLenum) GL_FRAMEBUFFER_COMPLETE_EXT, "GL_FRAMEBUFFER_COMPLETE_EXT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-ATTACHMENT-EXT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT, "GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MISSING-ATTACHMENT-EXT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT, "GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-DIMENSIONS-EXT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT, "GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-FORMATS-EXT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT, "GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-DRAW-BUFFER-EXT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT, "GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-READ-BUFFER-EXT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT, "GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT");
#endif
#if defined(GL_FRAMEBUFFER_UNSUPPORTED_EXT)
defconsti(env, "GL-FRAMEBUFFER-UNSUPPORTED-EXT", (GLenum) GL_FRAMEBUFFER_UNSUPPORTED_EXT, "GL_FRAMEBUFFER_UNSUPPORTED_EXT");
#endif
#if defined(GL_MAX_COLOR_ATTACHMENTS_EXT)
defconsti(env, "GL-MAX-COLOR-ATTACHMENTS-EXT", (GLenum) GL_MAX_COLOR_ATTACHMENTS_EXT, "GL_MAX_COLOR_ATTACHMENTS_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT0_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT0-EXT", (GLenum) GL_COLOR_ATTACHMENT0_EXT, "GL_COLOR_ATTACHMENT0_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT1_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT1-EXT", (GLenum) GL_COLOR_ATTACHMENT1_EXT, "GL_COLOR_ATTACHMENT1_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT2_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT2-EXT", (GLenum) GL_COLOR_ATTACHMENT2_EXT, "GL_COLOR_ATTACHMENT2_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT3_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT3-EXT", (GLenum) GL_COLOR_ATTACHMENT3_EXT, "GL_COLOR_ATTACHMENT3_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT4_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT4-EXT", (GLenum) GL_COLOR_ATTACHMENT4_EXT, "GL_COLOR_ATTACHMENT4_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT5_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT5-EXT", (GLenum) GL_COLOR_ATTACHMENT5_EXT, "GL_COLOR_ATTACHMENT5_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT6_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT6-EXT", (GLenum) GL_COLOR_ATTACHMENT6_EXT, "GL_COLOR_ATTACHMENT6_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT7_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT7-EXT", (GLenum) GL_COLOR_ATTACHMENT7_EXT, "GL_COLOR_ATTACHMENT7_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT8_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT8-EXT", (GLenum) GL_COLOR_ATTACHMENT8_EXT, "GL_COLOR_ATTACHMENT8_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT9_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT9-EXT", (GLenum) GL_COLOR_ATTACHMENT9_EXT, "GL_COLOR_ATTACHMENT9_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT10_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT10-EXT", (GLenum) GL_COLOR_ATTACHMENT10_EXT, "GL_COLOR_ATTACHMENT10_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT11_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT11-EXT", (GLenum) GL_COLOR_ATTACHMENT11_EXT, "GL_COLOR_ATTACHMENT11_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT12_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT12-EXT", (GLenum) GL_COLOR_ATTACHMENT12_EXT, "GL_COLOR_ATTACHMENT12_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT13_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT13-EXT", (GLenum) GL_COLOR_ATTACHMENT13_EXT, "GL_COLOR_ATTACHMENT13_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT14_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT14-EXT", (GLenum) GL_COLOR_ATTACHMENT14_EXT, "GL_COLOR_ATTACHMENT14_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT15_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT15-EXT", (GLenum) GL_COLOR_ATTACHMENT15_EXT, "GL_COLOR_ATTACHMENT15_EXT");
#endif
#if defined(GL_DEPTH_ATTACHMENT_EXT)
defconsti(env, "GL-DEPTH-ATTACHMENT-EXT", (GLenum) GL_DEPTH_ATTACHMENT_EXT, "GL_DEPTH_ATTACHMENT_EXT");
#endif
#if defined(GL_STENCIL_ATTACHMENT_EXT)
defconsti(env, "GL-STENCIL-ATTACHMENT-EXT", (GLenum) GL_STENCIL_ATTACHMENT_EXT, "GL_STENCIL_ATTACHMENT_EXT");
#endif
#if defined(GL_FRAMEBUFFER_EXT)
defconsti(env, "GL-FRAMEBUFFER-EXT", (GLenum) GL_FRAMEBUFFER_EXT, "GL_FRAMEBUFFER_EXT");
#endif
#if defined(GL_RENDERBUFFER_EXT)
defconsti(env, "GL-RENDERBUFFER-EXT", (GLenum) GL_RENDERBUFFER_EXT, "GL_RENDERBUFFER_EXT");
#endif
#if defined(GL_RENDERBUFFER_WIDTH_EXT)
defconsti(env, "GL-RENDERBUFFER-WIDTH-EXT", (GLenum) GL_RENDERBUFFER_WIDTH_EXT, "GL_RENDERBUFFER_WIDTH_EXT");
#endif
#if defined(GL_RENDERBUFFER_HEIGHT_EXT)
defconsti(env, "GL-RENDERBUFFER-HEIGHT-EXT", (GLenum) GL_RENDERBUFFER_HEIGHT_EXT, "GL_RENDERBUFFER_HEIGHT_EXT");
#endif
#if defined(GL_RENDERBUFFER_INTERNAL_FORMAT_EXT)
defconsti(env, "GL-RENDERBUFFER-INTERNAL-FORMAT-EXT", (GLenum) GL_RENDERBUFFER_INTERNAL_FORMAT_EXT, "GL_RENDERBUFFER_INTERNAL_FORMAT_EXT");
#endif
#if defined(GL_STENCIL_INDEX1_EXT)
defconsti(env, "GL-STENCIL-INDEX1-EXT", (GLenum) GL_STENCIL_INDEX1_EXT, "GL_STENCIL_INDEX1_EXT");
#endif
#if defined(GL_STENCIL_INDEX4_EXT)
defconsti(env, "GL-STENCIL-INDEX4-EXT", (GLenum) GL_STENCIL_INDEX4_EXT, "GL_STENCIL_INDEX4_EXT");
#endif
#if defined(GL_STENCIL_INDEX8_EXT)
defconsti(env, "GL-STENCIL-INDEX8-EXT", (GLenum) GL_STENCIL_INDEX8_EXT, "GL_STENCIL_INDEX8_EXT");
#endif
#if defined(GL_STENCIL_INDEX16_EXT)
defconsti(env, "GL-STENCIL-INDEX16-EXT", (GLenum) GL_STENCIL_INDEX16_EXT, "GL_STENCIL_INDEX16_EXT");
#endif
#if defined(GL_RENDERBUFFER_RED_SIZE_EXT)
defconsti(env, "GL-RENDERBUFFER-RED-SIZE-EXT", (GLenum) GL_RENDERBUFFER_RED_SIZE_EXT, "GL_RENDERBUFFER_RED_SIZE_EXT");
#endif
#if defined(GL_RENDERBUFFER_GREEN_SIZE_EXT)
defconsti(env, "GL-RENDERBUFFER-GREEN-SIZE-EXT", (GLenum) GL_RENDERBUFFER_GREEN_SIZE_EXT, "GL_RENDERBUFFER_GREEN_SIZE_EXT");
#endif
#if defined(GL_RENDERBUFFER_BLUE_SIZE_EXT)
defconsti(env, "GL-RENDERBUFFER-BLUE-SIZE-EXT", (GLenum) GL_RENDERBUFFER_BLUE_SIZE_EXT, "GL_RENDERBUFFER_BLUE_SIZE_EXT");
#endif
#if defined(GL_RENDERBUFFER_ALPHA_SIZE_EXT)
defconsti(env, "GL-RENDERBUFFER-ALPHA-SIZE-EXT", (GLenum) GL_RENDERBUFFER_ALPHA_SIZE_EXT, "GL_RENDERBUFFER_ALPHA_SIZE_EXT");
#endif
#if defined(GL_RENDERBUFFER_DEPTH_SIZE_EXT)
defconsti(env, "GL-RENDERBUFFER-DEPTH-SIZE-EXT", (GLenum) GL_RENDERBUFFER_DEPTH_SIZE_EXT, "GL_RENDERBUFFER_DEPTH_SIZE_EXT");
#endif
#if defined(GL_RENDERBUFFER_STENCIL_SIZE_EXT)
defconsti(env, "GL-RENDERBUFFER-STENCIL-SIZE-EXT", (GLenum) GL_RENDERBUFFER_STENCIL_SIZE_EXT, "GL_RENDERBUFFER_STENCIL_SIZE_EXT");
#endif
#if defined(GL_FRAMEBUFFER_SRGB_EXT)
defconsti(env, "GL-FRAMEBUFFER-SRGB-EXT", (GLenum) GL_FRAMEBUFFER_SRGB_EXT, "GL_FRAMEBUFFER_SRGB_EXT");
#endif
#if defined(GL_FRAMEBUFFER_SRGB_CAPABLE_EXT)
defconsti(env, "GL-FRAMEBUFFER-SRGB-CAPABLE-EXT", (GLenum) GL_FRAMEBUFFER_SRGB_CAPABLE_EXT, "GL_FRAMEBUFFER_SRGB_CAPABLE_EXT");
#endif
#if defined(GL_GEOMETRY_SHADER_EXT)
defconsti(env, "GL-GEOMETRY-SHADER-EXT", (GLenum) GL_GEOMETRY_SHADER_EXT, "GL_GEOMETRY_SHADER_EXT");
#endif
#if defined(GL_GEOMETRY_SHADER_BIT_EXT)
defconsti(env, "GL-GEOMETRY-SHADER-BIT-EXT", (GLenum) GL_GEOMETRY_SHADER_BIT_EXT, "GL_GEOMETRY_SHADER_BIT_EXT");
#endif
#if defined(GL_GEOMETRY_LINKED_VERTICES_OUT_EXT)
defconsti(env, "GL-GEOMETRY-LINKED-VERTICES-OUT-EXT", (GLenum) GL_GEOMETRY_LINKED_VERTICES_OUT_EXT, "GL_GEOMETRY_LINKED_VERTICES_OUT_EXT");
#endif
#if defined(GL_GEOMETRY_LINKED_INPUT_TYPE_EXT)
defconsti(env, "GL-GEOMETRY-LINKED-INPUT-TYPE-EXT", (GLenum) GL_GEOMETRY_LINKED_INPUT_TYPE_EXT, "GL_GEOMETRY_LINKED_INPUT_TYPE_EXT");
#endif
#if defined(GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT)
defconsti(env, "GL-GEOMETRY-LINKED-OUTPUT-TYPE-EXT", (GLenum) GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT, "GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT");
#endif
#if defined(GL_GEOMETRY_SHADER_INVOCATIONS_EXT)
defconsti(env, "GL-GEOMETRY-SHADER-INVOCATIONS-EXT", (GLenum) GL_GEOMETRY_SHADER_INVOCATIONS_EXT, "GL_GEOMETRY_SHADER_INVOCATIONS_EXT");
#endif
#if defined(GL_LAYER_PROVOKING_VERTEX_EXT)
defconsti(env, "GL-LAYER-PROVOKING-VERTEX-EXT", (GLenum) GL_LAYER_PROVOKING_VERTEX_EXT, "GL_LAYER_PROVOKING_VERTEX_EXT");
#endif
#if defined(GL_LINES_ADJACENCY_EXT)
defconsti(env, "GL-LINES-ADJACENCY-EXT", (GLenum) GL_LINES_ADJACENCY_EXT, "GL_LINES_ADJACENCY_EXT");
#endif
#if defined(GL_LINE_STRIP_ADJACENCY_EXT)
defconsti(env, "GL-LINE-STRIP-ADJACENCY-EXT", (GLenum) GL_LINE_STRIP_ADJACENCY_EXT, "GL_LINE_STRIP_ADJACENCY_EXT");
#endif
#if defined(GL_TRIANGLES_ADJACENCY_EXT)
defconsti(env, "GL-TRIANGLES-ADJACENCY-EXT", (GLenum) GL_TRIANGLES_ADJACENCY_EXT, "GL_TRIANGLES_ADJACENCY_EXT");
#endif
#if defined(GL_TRIANGLE_STRIP_ADJACENCY_EXT)
defconsti(env, "GL-TRIANGLE-STRIP-ADJACENCY-EXT", (GLenum) GL_TRIANGLE_STRIP_ADJACENCY_EXT, "GL_TRIANGLE_STRIP_ADJACENCY_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-UNIFORM-COMPONENTS-EXT", (GLenum) GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT, "GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-UNIFORM-BLOCKS-EXT", (GLenum) GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT, "GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT");
#endif
#if defined(GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT)
defconsti(env, "GL-MAX-COMBINED-GEOMETRY-UNIFORM-COMPONENTS-EXT", (GLenum) GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT, "GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-INPUT-COMPONENTS-EXT", (GLenum) GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT, "GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-OUTPUT-COMPONENTS-EXT", (GLenum) GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT, "GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT)
defconsti(env, "GL-MAX-GEOMETRY-OUTPUT-VERTICES-EXT", (GLenum) GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT, "GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-TOTAL-OUTPUT-COMPONENTS-EXT", (GLenum) GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT, "GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-SHADER-INVOCATIONS-EXT", (GLenum) GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT, "GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-TEXTURE-IMAGE-UNITS-EXT", (GLenum) GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT, "GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-ATOMIC-COUNTER-BUFFERS-EXT", (GLenum) GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT, "GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-ATOMIC-COUNTERS-EXT", (GLenum) GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT, "GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-IMAGE-UNIFORMS-EXT", (GLenum) GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT, "GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-SHADER-STORAGE-BLOCKS-EXT", (GLenum) GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT, "GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT");
#endif
#if defined(GL_FIRST_VERTEX_CONVENTION_EXT)
defconsti(env, "GL-FIRST-VERTEX-CONVENTION-EXT", (GLenum) GL_FIRST_VERTEX_CONVENTION_EXT, "GL_FIRST_VERTEX_CONVENTION_EXT");
#endif
#if defined(GL_LAST_VERTEX_CONVENTION_EXT)
defconsti(env, "GL-LAST-VERTEX-CONVENTION-EXT", (GLenum) GL_LAST_VERTEX_CONVENTION_EXT, "GL_LAST_VERTEX_CONVENTION_EXT");
#endif
#if defined(GL_UNDEFINED_VERTEX_EXT)
defconsti(env, "GL-UNDEFINED-VERTEX-EXT", (GLenum) GL_UNDEFINED_VERTEX_EXT, "GL_UNDEFINED_VERTEX_EXT");
#endif
#if defined(GL_PRIMITIVES_GENERATED_EXT)
defconsti(env, "GL-PRIMITIVES-GENERATED-EXT", (GLenum) GL_PRIMITIVES_GENERATED_EXT, "GL_PRIMITIVES_GENERATED_EXT");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-LAYERS-EXT", (GLenum) GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT, "GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT");
#endif
#if defined(GL_MAX_FRAMEBUFFER_LAYERS_EXT)
defconsti(env, "GL-MAX-FRAMEBUFFER-LAYERS-EXT", (GLenum) GL_MAX_FRAMEBUFFER_LAYERS_EXT, "GL_MAX_FRAMEBUFFER_LAYERS_EXT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-LAYER-TARGETS-EXT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT, "GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-LAYERED-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT, "GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT");
#endif
#if defined(GL_REFERENCED_BY_GEOMETRY_SHADER_EXT)
defconsti(env, "GL-REFERENCED-BY-GEOMETRY-SHADER-EXT", (GLenum) GL_REFERENCED_BY_GEOMETRY_SHADER_EXT, "GL_REFERENCED_BY_GEOMETRY_SHADER_EXT");
#endif
#if defined(GL_GEOMETRY_SHADER_EXT)
defconsti(env, "GL-GEOMETRY-SHADER-EXT", (GLenum) GL_GEOMETRY_SHADER_EXT, "GL_GEOMETRY_SHADER_EXT");
#endif
#if defined(GL_GEOMETRY_VERTICES_OUT_EXT)
defconsti(env, "GL-GEOMETRY-VERTICES-OUT-EXT", (GLenum) GL_GEOMETRY_VERTICES_OUT_EXT, "GL_GEOMETRY_VERTICES_OUT_EXT");
#endif
#if defined(GL_GEOMETRY_INPUT_TYPE_EXT)
defconsti(env, "GL-GEOMETRY-INPUT-TYPE-EXT", (GLenum) GL_GEOMETRY_INPUT_TYPE_EXT, "GL_GEOMETRY_INPUT_TYPE_EXT");
#endif
#if defined(GL_GEOMETRY_OUTPUT_TYPE_EXT)
defconsti(env, "GL-GEOMETRY-OUTPUT-TYPE-EXT", (GLenum) GL_GEOMETRY_OUTPUT_TYPE_EXT, "GL_GEOMETRY_OUTPUT_TYPE_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-TEXTURE-IMAGE-UNITS-EXT", (GLenum) GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT, "GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-VARYING-COMPONENTS-EXT", (GLenum) GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT, "GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_VERTEX_VARYING_COMPONENTS_EXT)
defconsti(env, "GL-MAX-VERTEX-VARYING-COMPONENTS-EXT", (GLenum) GL_MAX_VERTEX_VARYING_COMPONENTS_EXT, "GL_MAX_VERTEX_VARYING_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_VARYING_COMPONENTS_EXT)
defconsti(env, "GL-MAX-VARYING-COMPONENTS-EXT", (GLenum) GL_MAX_VARYING_COMPONENTS_EXT, "GL_MAX_VARYING_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-UNIFORM-COMPONENTS-EXT", (GLenum) GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT, "GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT)
defconsti(env, "GL-MAX-GEOMETRY-OUTPUT-VERTICES-EXT", (GLenum) GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT, "GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-TOTAL-OUTPUT-COMPONENTS-EXT", (GLenum) GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT, "GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT");
#endif
#if defined(GL_LINES_ADJACENCY_EXT)
defconsti(env, "GL-LINES-ADJACENCY-EXT", (GLenum) GL_LINES_ADJACENCY_EXT, "GL_LINES_ADJACENCY_EXT");
#endif
#if defined(GL_LINE_STRIP_ADJACENCY_EXT)
defconsti(env, "GL-LINE-STRIP-ADJACENCY-EXT", (GLenum) GL_LINE_STRIP_ADJACENCY_EXT, "GL_LINE_STRIP_ADJACENCY_EXT");
#endif
#if defined(GL_TRIANGLES_ADJACENCY_EXT)
defconsti(env, "GL-TRIANGLES-ADJACENCY-EXT", (GLenum) GL_TRIANGLES_ADJACENCY_EXT, "GL_TRIANGLES_ADJACENCY_EXT");
#endif
#if defined(GL_TRIANGLE_STRIP_ADJACENCY_EXT)
defconsti(env, "GL-TRIANGLE-STRIP-ADJACENCY-EXT", (GLenum) GL_TRIANGLE_STRIP_ADJACENCY_EXT, "GL_TRIANGLE_STRIP_ADJACENCY_EXT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-LAYER-TARGETS-EXT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT, "GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-LAYER-COUNT-EXT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT, "GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-LAYERED-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT, "GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-LAYER-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT");
#endif
#if defined(GL_PROGRAM_POINT_SIZE_EXT)
defconsti(env, "GL-PROGRAM-POINT-SIZE-EXT", (GLenum) GL_PROGRAM_POINT_SIZE_EXT, "GL_PROGRAM_POINT_SIZE_EXT");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-INTEGER-EXT", (GLenum) GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT, "GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT");
#endif
#if defined(GL_SAMPLER_1D_ARRAY_EXT)
defconsti(env, "GL-SAMPLER-1D-ARRAY-EXT", (GLenum) GL_SAMPLER_1D_ARRAY_EXT, "GL_SAMPLER_1D_ARRAY_EXT");
#endif
#if defined(GL_SAMPLER_2D_ARRAY_EXT)
defconsti(env, "GL-SAMPLER-2D-ARRAY-EXT", (GLenum) GL_SAMPLER_2D_ARRAY_EXT, "GL_SAMPLER_2D_ARRAY_EXT");
#endif
#if defined(GL_SAMPLER_BUFFER_EXT)
defconsti(env, "GL-SAMPLER-BUFFER-EXT", (GLenum) GL_SAMPLER_BUFFER_EXT, "GL_SAMPLER_BUFFER_EXT");
#endif
#if defined(GL_SAMPLER_1D_ARRAY_SHADOW_EXT)
defconsti(env, "GL-SAMPLER-1D-ARRAY-SHADOW-EXT", (GLenum) GL_SAMPLER_1D_ARRAY_SHADOW_EXT, "GL_SAMPLER_1D_ARRAY_SHADOW_EXT");
#endif
#if defined(GL_SAMPLER_2D_ARRAY_SHADOW_EXT)
defconsti(env, "GL-SAMPLER-2D-ARRAY-SHADOW-EXT", (GLenum) GL_SAMPLER_2D_ARRAY_SHADOW_EXT, "GL_SAMPLER_2D_ARRAY_SHADOW_EXT");
#endif
#if defined(GL_SAMPLER_CUBE_SHADOW_EXT)
defconsti(env, "GL-SAMPLER-CUBE-SHADOW-EXT", (GLenum) GL_SAMPLER_CUBE_SHADOW_EXT, "GL_SAMPLER_CUBE_SHADOW_EXT");
#endif
#if defined(GL_UNSIGNED_INT_VEC2_EXT)
defconsti(env, "GL-UNSIGNED-INT-VEC2-EXT", (GLenum) GL_UNSIGNED_INT_VEC2_EXT, "GL_UNSIGNED_INT_VEC2_EXT");
#endif
#if defined(GL_UNSIGNED_INT_VEC3_EXT)
defconsti(env, "GL-UNSIGNED-INT-VEC3-EXT", (GLenum) GL_UNSIGNED_INT_VEC3_EXT, "GL_UNSIGNED_INT_VEC3_EXT");
#endif
#if defined(GL_UNSIGNED_INT_VEC4_EXT)
defconsti(env, "GL-UNSIGNED-INT-VEC4-EXT", (GLenum) GL_UNSIGNED_INT_VEC4_EXT, "GL_UNSIGNED_INT_VEC4_EXT");
#endif
#if defined(GL_INT_SAMPLER_1D_EXT)
defconsti(env, "GL-INT-SAMPLER-1D-EXT", (GLenum) GL_INT_SAMPLER_1D_EXT, "GL_INT_SAMPLER_1D_EXT");
#endif
#if defined(GL_INT_SAMPLER_2D_EXT)
defconsti(env, "GL-INT-SAMPLER-2D-EXT", (GLenum) GL_INT_SAMPLER_2D_EXT, "GL_INT_SAMPLER_2D_EXT");
#endif
#if defined(GL_INT_SAMPLER_3D_EXT)
defconsti(env, "GL-INT-SAMPLER-3D-EXT", (GLenum) GL_INT_SAMPLER_3D_EXT, "GL_INT_SAMPLER_3D_EXT");
#endif
#if defined(GL_INT_SAMPLER_CUBE_EXT)
defconsti(env, "GL-INT-SAMPLER-CUBE-EXT", (GLenum) GL_INT_SAMPLER_CUBE_EXT, "GL_INT_SAMPLER_CUBE_EXT");
#endif
#if defined(GL_INT_SAMPLER_2D_RECT_EXT)
defconsti(env, "GL-INT-SAMPLER-2D-RECT-EXT", (GLenum) GL_INT_SAMPLER_2D_RECT_EXT, "GL_INT_SAMPLER_2D_RECT_EXT");
#endif
#if defined(GL_INT_SAMPLER_1D_ARRAY_EXT)
defconsti(env, "GL-INT-SAMPLER-1D-ARRAY-EXT", (GLenum) GL_INT_SAMPLER_1D_ARRAY_EXT, "GL_INT_SAMPLER_1D_ARRAY_EXT");
#endif
#if defined(GL_INT_SAMPLER_2D_ARRAY_EXT)
defconsti(env, "GL-INT-SAMPLER-2D-ARRAY-EXT", (GLenum) GL_INT_SAMPLER_2D_ARRAY_EXT, "GL_INT_SAMPLER_2D_ARRAY_EXT");
#endif
#if defined(GL_INT_SAMPLER_BUFFER_EXT)
defconsti(env, "GL-INT-SAMPLER-BUFFER-EXT", (GLenum) GL_INT_SAMPLER_BUFFER_EXT, "GL_INT_SAMPLER_BUFFER_EXT");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_1D_EXT)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-1D-EXT", (GLenum) GL_UNSIGNED_INT_SAMPLER_1D_EXT, "GL_UNSIGNED_INT_SAMPLER_1D_EXT");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_EXT)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-EXT", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_EXT, "GL_UNSIGNED_INT_SAMPLER_2D_EXT");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_3D_EXT)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-3D-EXT", (GLenum) GL_UNSIGNED_INT_SAMPLER_3D_EXT, "GL_UNSIGNED_INT_SAMPLER_3D_EXT");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_CUBE_EXT)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-CUBE-EXT", (GLenum) GL_UNSIGNED_INT_SAMPLER_CUBE_EXT, "GL_UNSIGNED_INT_SAMPLER_CUBE_EXT");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-RECT-EXT", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT, "GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-1D-ARRAY-EXT", (GLenum) GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT, "GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-ARRAY-EXT", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT, "GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-BUFFER-EXT", (GLenum) GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT, "GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT");
#endif
#if defined(GL_MIN_PROGRAM_TEXEL_OFFSET_EXT)
defconsti(env, "GL-MIN-PROGRAM-TEXEL-OFFSET-EXT", (GLenum) GL_MIN_PROGRAM_TEXEL_OFFSET_EXT, "GL_MIN_PROGRAM_TEXEL_OFFSET_EXT");
#endif
#if defined(GL_MAX_PROGRAM_TEXEL_OFFSET_EXT)
defconsti(env, "GL-MAX-PROGRAM-TEXEL-OFFSET-EXT", (GLenum) GL_MAX_PROGRAM_TEXEL_OFFSET_EXT, "GL_MAX_PROGRAM_TEXEL_OFFSET_EXT");
#endif
#if defined(GL_HISTOGRAM_EXT)
defconsti(env, "GL-HISTOGRAM-EXT", (GLenum) GL_HISTOGRAM_EXT, "GL_HISTOGRAM_EXT");
#endif
#if defined(GL_PROXY_HISTOGRAM_EXT)
defconsti(env, "GL-PROXY-HISTOGRAM-EXT", (GLenum) GL_PROXY_HISTOGRAM_EXT, "GL_PROXY_HISTOGRAM_EXT");
#endif
#if defined(GL_HISTOGRAM_WIDTH_EXT)
defconsti(env, "GL-HISTOGRAM-WIDTH-EXT", (GLenum) GL_HISTOGRAM_WIDTH_EXT, "GL_HISTOGRAM_WIDTH_EXT");
#endif
#if defined(GL_HISTOGRAM_FORMAT_EXT)
defconsti(env, "GL-HISTOGRAM-FORMAT-EXT", (GLenum) GL_HISTOGRAM_FORMAT_EXT, "GL_HISTOGRAM_FORMAT_EXT");
#endif
#if defined(GL_HISTOGRAM_RED_SIZE_EXT)
defconsti(env, "GL-HISTOGRAM-RED-SIZE-EXT", (GLenum) GL_HISTOGRAM_RED_SIZE_EXT, "GL_HISTOGRAM_RED_SIZE_EXT");
#endif
#if defined(GL_HISTOGRAM_GREEN_SIZE_EXT)
defconsti(env, "GL-HISTOGRAM-GREEN-SIZE-EXT", (GLenum) GL_HISTOGRAM_GREEN_SIZE_EXT, "GL_HISTOGRAM_GREEN_SIZE_EXT");
#endif
#if defined(GL_HISTOGRAM_BLUE_SIZE_EXT)
defconsti(env, "GL-HISTOGRAM-BLUE-SIZE-EXT", (GLenum) GL_HISTOGRAM_BLUE_SIZE_EXT, "GL_HISTOGRAM_BLUE_SIZE_EXT");
#endif
#if defined(GL_HISTOGRAM_ALPHA_SIZE_EXT)
defconsti(env, "GL-HISTOGRAM-ALPHA-SIZE-EXT", (GLenum) GL_HISTOGRAM_ALPHA_SIZE_EXT, "GL_HISTOGRAM_ALPHA_SIZE_EXT");
#endif
#if defined(GL_HISTOGRAM_LUMINANCE_SIZE_EXT)
defconsti(env, "GL-HISTOGRAM-LUMINANCE-SIZE-EXT", (GLenum) GL_HISTOGRAM_LUMINANCE_SIZE_EXT, "GL_HISTOGRAM_LUMINANCE_SIZE_EXT");
#endif
#if defined(GL_HISTOGRAM_SINK_EXT)
defconsti(env, "GL-HISTOGRAM-SINK-EXT", (GLenum) GL_HISTOGRAM_SINK_EXT, "GL_HISTOGRAM_SINK_EXT");
#endif
#if defined(GL_MINMAX_EXT)
defconsti(env, "GL-MINMAX-EXT", (GLenum) GL_MINMAX_EXT, "GL_MINMAX_EXT");
#endif
#if defined(GL_MINMAX_FORMAT_EXT)
defconsti(env, "GL-MINMAX-FORMAT-EXT", (GLenum) GL_MINMAX_FORMAT_EXT, "GL_MINMAX_FORMAT_EXT");
#endif
#if defined(GL_MINMAX_SINK_EXT)
defconsti(env, "GL-MINMAX-SINK-EXT", (GLenum) GL_MINMAX_SINK_EXT, "GL_MINMAX_SINK_EXT");
#endif
#if defined(GL_TABLE_TOO_LARGE_EXT)
defconsti(env, "GL-TABLE-TOO-LARGE-EXT", (GLenum) GL_TABLE_TOO_LARGE_EXT, "GL_TABLE_TOO_LARGE_EXT");
#endif
#if defined(GL_IUI_V2F_EXT)
defconsti(env, "GL-IUI-V2F-EXT", (GLenum) GL_IUI_V2F_EXT, "GL_IUI_V2F_EXT");
#endif
#if defined(GL_IUI_V3F_EXT)
defconsti(env, "GL-IUI-V3F-EXT", (GLenum) GL_IUI_V3F_EXT, "GL_IUI_V3F_EXT");
#endif
#if defined(GL_IUI_N3F_V2F_EXT)
defconsti(env, "GL-IUI-N3F-V2F-EXT", (GLenum) GL_IUI_N3F_V2F_EXT, "GL_IUI_N3F_V2F_EXT");
#endif
#if defined(GL_IUI_N3F_V3F_EXT)
defconsti(env, "GL-IUI-N3F-V3F-EXT", (GLenum) GL_IUI_N3F_V3F_EXT, "GL_IUI_N3F_V3F_EXT");
#endif
#if defined(GL_T2F_IUI_V2F_EXT)
defconsti(env, "GL-T2F-IUI-V2F-EXT", (GLenum) GL_T2F_IUI_V2F_EXT, "GL_T2F_IUI_V2F_EXT");
#endif
#if defined(GL_T2F_IUI_V3F_EXT)
defconsti(env, "GL-T2F-IUI-V3F-EXT", (GLenum) GL_T2F_IUI_V3F_EXT, "GL_T2F_IUI_V3F_EXT");
#endif
#if defined(GL_T2F_IUI_N3F_V2F_EXT)
defconsti(env, "GL-T2F-IUI-N3F-V2F-EXT", (GLenum) GL_T2F_IUI_N3F_V2F_EXT, "GL_T2F_IUI_N3F_V2F_EXT");
#endif
#if defined(GL_T2F_IUI_N3F_V3F_EXT)
defconsti(env, "GL-T2F-IUI-N3F-V3F-EXT", (GLenum) GL_T2F_IUI_N3F_V3F_EXT, "GL_T2F_IUI_N3F_V3F_EXT");
#endif
#if defined(GL_INDEX_TEST_EXT)
defconsti(env, "GL-INDEX-TEST-EXT", (GLenum) GL_INDEX_TEST_EXT, "GL_INDEX_TEST_EXT");
#endif
#if defined(GL_INDEX_TEST_FUNC_EXT)
defconsti(env, "GL-INDEX-TEST-FUNC-EXT", (GLenum) GL_INDEX_TEST_FUNC_EXT, "GL_INDEX_TEST_FUNC_EXT");
#endif
#if defined(GL_INDEX_TEST_REF_EXT)
defconsti(env, "GL-INDEX-TEST-REF-EXT", (GLenum) GL_INDEX_TEST_REF_EXT, "GL_INDEX_TEST_REF_EXT");
#endif
#if defined(GL_INDEX_MATERIAL_EXT)
defconsti(env, "GL-INDEX-MATERIAL-EXT", (GLenum) GL_INDEX_MATERIAL_EXT, "GL_INDEX_MATERIAL_EXT");
#endif
#if defined(GL_INDEX_MATERIAL_PARAMETER_EXT)
defconsti(env, "GL-INDEX-MATERIAL-PARAMETER-EXT", (GLenum) GL_INDEX_MATERIAL_PARAMETER_EXT, "GL_INDEX_MATERIAL_PARAMETER_EXT");
#endif
#if defined(GL_INDEX_MATERIAL_FACE_EXT)
defconsti(env, "GL-INDEX-MATERIAL-FACE-EXT", (GLenum) GL_INDEX_MATERIAL_FACE_EXT, "GL_INDEX_MATERIAL_FACE_EXT");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-DIVISOR-EXT", (GLenum) GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT, "GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT");
#endif
#if defined(GL_FRAGMENT_MATERIAL_EXT)
defconsti(env, "GL-FRAGMENT-MATERIAL-EXT", (GLenum) GL_FRAGMENT_MATERIAL_EXT, "GL_FRAGMENT_MATERIAL_EXT");
#endif
#if defined(GL_FRAGMENT_NORMAL_EXT)
defconsti(env, "GL-FRAGMENT-NORMAL-EXT", (GLenum) GL_FRAGMENT_NORMAL_EXT, "GL_FRAGMENT_NORMAL_EXT");
#endif
#if defined(GL_FRAGMENT_COLOR_EXT)
defconsti(env, "GL-FRAGMENT-COLOR-EXT", (GLenum) GL_FRAGMENT_COLOR_EXT, "GL_FRAGMENT_COLOR_EXT");
#endif
#if defined(GL_ATTENUATION_EXT)
defconsti(env, "GL-ATTENUATION-EXT", (GLenum) GL_ATTENUATION_EXT, "GL_ATTENUATION_EXT");
#endif
#if defined(GL_SHADOW_ATTENUATION_EXT)
defconsti(env, "GL-SHADOW-ATTENUATION-EXT", (GLenum) GL_SHADOW_ATTENUATION_EXT, "GL_SHADOW_ATTENUATION_EXT");
#endif
#if defined(GL_TEXTURE_APPLICATION_MODE_EXT)
defconsti(env, "GL-TEXTURE-APPLICATION-MODE-EXT", (GLenum) GL_TEXTURE_APPLICATION_MODE_EXT, "GL_TEXTURE_APPLICATION_MODE_EXT");
#endif
#if defined(GL_TEXTURE_LIGHT_EXT)
defconsti(env, "GL-TEXTURE-LIGHT-EXT", (GLenum) GL_TEXTURE_LIGHT_EXT, "GL_TEXTURE_LIGHT_EXT");
#endif
#if defined(GL_TEXTURE_MATERIAL_FACE_EXT)
defconsti(env, "GL-TEXTURE-MATERIAL-FACE-EXT", (GLenum) GL_TEXTURE_MATERIAL_FACE_EXT, "GL_TEXTURE_MATERIAL_FACE_EXT");
#endif
#if defined(GL_TEXTURE_MATERIAL_PARAMETER_EXT)
defconsti(env, "GL-TEXTURE-MATERIAL-PARAMETER-EXT", (GLenum) GL_TEXTURE_MATERIAL_PARAMETER_EXT, "GL_TEXTURE_MATERIAL_PARAMETER_EXT");
#endif
#if defined(GL_FRAGMENT_DEPTH_EXT)
defconsti(env, "GL-FRAGMENT-DEPTH-EXT", (GLenum) GL_FRAGMENT_DEPTH_EXT, "GL_FRAGMENT_DEPTH_EXT");
#endif
#if defined(GL_MAP_READ_BIT_EXT)
defconsti(env, "GL-MAP-READ-BIT-EXT", (GLenum) GL_MAP_READ_BIT_EXT, "GL_MAP_READ_BIT_EXT");
#endif
#if defined(GL_MAP_WRITE_BIT_EXT)
defconsti(env, "GL-MAP-WRITE-BIT-EXT", (GLenum) GL_MAP_WRITE_BIT_EXT, "GL_MAP_WRITE_BIT_EXT");
#endif
#if defined(GL_MAP_INVALIDATE_RANGE_BIT_EXT)
defconsti(env, "GL-MAP-INVALIDATE-RANGE-BIT-EXT", (GLenum) GL_MAP_INVALIDATE_RANGE_BIT_EXT, "GL_MAP_INVALIDATE_RANGE_BIT_EXT");
#endif
#if defined(GL_MAP_INVALIDATE_BUFFER_BIT_EXT)
defconsti(env, "GL-MAP-INVALIDATE-BUFFER-BIT-EXT", (GLenum) GL_MAP_INVALIDATE_BUFFER_BIT_EXT, "GL_MAP_INVALIDATE_BUFFER_BIT_EXT");
#endif
#if defined(GL_MAP_FLUSH_EXPLICIT_BIT_EXT)
defconsti(env, "GL-MAP-FLUSH-EXPLICIT-BIT-EXT", (GLenum) GL_MAP_FLUSH_EXPLICIT_BIT_EXT, "GL_MAP_FLUSH_EXPLICIT_BIT_EXT");
#endif
#if defined(GL_MAP_UNSYNCHRONIZED_BIT_EXT)
defconsti(env, "GL-MAP-UNSYNCHRONIZED-BIT-EXT", (GLenum) GL_MAP_UNSYNCHRONIZED_BIT_EXT, "GL_MAP_UNSYNCHRONIZED_BIT_EXT");
#endif
#if defined(GL_TEXTURE_TILING_EXT)
defconsti(env, "GL-TEXTURE-TILING-EXT", (GLenum) GL_TEXTURE_TILING_EXT, "GL_TEXTURE_TILING_EXT");
#endif
#if defined(GL_DEDICATED_MEMORY_OBJECT_EXT)
defconsti(env, "GL-DEDICATED-MEMORY-OBJECT-EXT", (GLenum) GL_DEDICATED_MEMORY_OBJECT_EXT, "GL_DEDICATED_MEMORY_OBJECT_EXT");
#endif
#if defined(GL_PROTECTED_MEMORY_OBJECT_EXT)
defconsti(env, "GL-PROTECTED-MEMORY-OBJECT-EXT", (GLenum) GL_PROTECTED_MEMORY_OBJECT_EXT, "GL_PROTECTED_MEMORY_OBJECT_EXT");
#endif
#if defined(GL_NUM_TILING_TYPES_EXT)
defconsti(env, "GL-NUM-TILING-TYPES-EXT", (GLenum) GL_NUM_TILING_TYPES_EXT, "GL_NUM_TILING_TYPES_EXT");
#endif
#if defined(GL_TILING_TYPES_EXT)
defconsti(env, "GL-TILING-TYPES-EXT", (GLenum) GL_TILING_TYPES_EXT, "GL_TILING_TYPES_EXT");
#endif
#if defined(GL_OPTIMAL_TILING_EXT)
defconsti(env, "GL-OPTIMAL-TILING-EXT", (GLenum) GL_OPTIMAL_TILING_EXT, "GL_OPTIMAL_TILING_EXT");
#endif
#if defined(GL_LINEAR_TILING_EXT)
defconsti(env, "GL-LINEAR-TILING-EXT", (GLenum) GL_LINEAR_TILING_EXT, "GL_LINEAR_TILING_EXT");
#endif
#if defined(GL_NUM_DEVICE_UUIDS_EXT)
defconsti(env, "GL-NUM-DEVICE-UUIDS-EXT", (GLenum) GL_NUM_DEVICE_UUIDS_EXT, "GL_NUM_DEVICE_UUIDS_EXT");
#endif
#if defined(GL_DEVICE_UUID_EXT)
defconsti(env, "GL-DEVICE-UUID-EXT", (GLenum) GL_DEVICE_UUID_EXT, "GL_DEVICE_UUID_EXT");
#endif
#if defined(GL_DRIVER_UUID_EXT)
defconsti(env, "GL-DRIVER-UUID-EXT", (GLenum) GL_DRIVER_UUID_EXT, "GL_DRIVER_UUID_EXT");
#endif
#if defined(GL_UUID_SIZE_EXT)
defconsti(env, "GL-UUID-SIZE-EXT", (GLenum) GL_UUID_SIZE_EXT, "GL_UUID_SIZE_EXT");
#endif
#if defined(GL_HANDLE_TYPE_OPAQUE_FD_EXT)
defconsti(env, "GL-HANDLE-TYPE-OPAQUE-FD-EXT", (GLenum) GL_HANDLE_TYPE_OPAQUE_FD_EXT, "GL_HANDLE_TYPE_OPAQUE_FD_EXT");
#endif
#if defined(GL_HANDLE_TYPE_OPAQUE_WIN32_EXT)
defconsti(env, "GL-HANDLE-TYPE-OPAQUE-WIN32-EXT", (GLenum) GL_HANDLE_TYPE_OPAQUE_WIN32_EXT, "GL_HANDLE_TYPE_OPAQUE_WIN32_EXT");
#endif
#if defined(GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT)
defconsti(env, "GL-HANDLE-TYPE-OPAQUE-WIN32-KMT-EXT", (GLenum) GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT, "GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT");
#endif
#if defined(GL_DEVICE_LUID_EXT)
defconsti(env, "GL-DEVICE-LUID-EXT", (GLenum) GL_DEVICE_LUID_EXT, "GL_DEVICE_LUID_EXT");
#endif
#if defined(GL_DEVICE_NODE_MASK_EXT)
defconsti(env, "GL-DEVICE-NODE-MASK-EXT", (GLenum) GL_DEVICE_NODE_MASK_EXT, "GL_DEVICE_NODE_MASK_EXT");
#endif
#if defined(GL_LUID_SIZE_EXT)
defconsti(env, "GL-LUID-SIZE-EXT", (GLenum) GL_LUID_SIZE_EXT, "GL_LUID_SIZE_EXT");
#endif
#if defined(GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT)
defconsti(env, "GL-HANDLE-TYPE-D3D12-TILEPOOL-EXT", (GLenum) GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT, "GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT");
#endif
#if defined(GL_HANDLE_TYPE_D3D12_RESOURCE_EXT)
defconsti(env, "GL-HANDLE-TYPE-D3D12-RESOURCE-EXT", (GLenum) GL_HANDLE_TYPE_D3D12_RESOURCE_EXT, "GL_HANDLE_TYPE_D3D12_RESOURCE_EXT");
#endif
#if defined(GL_HANDLE_TYPE_D3D11_IMAGE_EXT)
defconsti(env, "GL-HANDLE-TYPE-D3D11-IMAGE-EXT", (GLenum) GL_HANDLE_TYPE_D3D11_IMAGE_EXT, "GL_HANDLE_TYPE_D3D11_IMAGE_EXT");
#endif
#if defined(GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT)
defconsti(env, "GL-HANDLE-TYPE-D3D11-IMAGE-KMT-EXT", (GLenum) GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT, "GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT");
#endif
#if defined(GL_MULTISAMPLE_EXT)
defconsti(env, "GL-MULTISAMPLE-EXT", (GLenum) GL_MULTISAMPLE_EXT, "GL_MULTISAMPLE_EXT");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_MASK_EXT)
defconsti(env, "GL-SAMPLE-ALPHA-TO-MASK-EXT", (GLenum) GL_SAMPLE_ALPHA_TO_MASK_EXT, "GL_SAMPLE_ALPHA_TO_MASK_EXT");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_ONE_EXT)
defconsti(env, "GL-SAMPLE-ALPHA-TO-ONE-EXT", (GLenum) GL_SAMPLE_ALPHA_TO_ONE_EXT, "GL_SAMPLE_ALPHA_TO_ONE_EXT");
#endif
#if defined(GL_SAMPLE_MASK_EXT)
defconsti(env, "GL-SAMPLE-MASK-EXT", (GLenum) GL_SAMPLE_MASK_EXT, "GL_SAMPLE_MASK_EXT");
#endif
#if defined(GL_1PASS_EXT)
defconsti(env, "GL-1PASS-EXT", (GLenum) GL_1PASS_EXT, "GL_1PASS_EXT");
#endif
#if defined(GL_2PASS_0_EXT)
defconsti(env, "GL-2PASS-0-EXT", (GLenum) GL_2PASS_0_EXT, "GL_2PASS_0_EXT");
#endif
#if defined(GL_2PASS_1_EXT)
defconsti(env, "GL-2PASS-1-EXT", (GLenum) GL_2PASS_1_EXT, "GL_2PASS_1_EXT");
#endif
#if defined(GL_4PASS_0_EXT)
defconsti(env, "GL-4PASS-0-EXT", (GLenum) GL_4PASS_0_EXT, "GL_4PASS_0_EXT");
#endif
#if defined(GL_4PASS_1_EXT)
defconsti(env, "GL-4PASS-1-EXT", (GLenum) GL_4PASS_1_EXT, "GL_4PASS_1_EXT");
#endif
#if defined(GL_4PASS_2_EXT)
defconsti(env, "GL-4PASS-2-EXT", (GLenum) GL_4PASS_2_EXT, "GL_4PASS_2_EXT");
#endif
#if defined(GL_4PASS_3_EXT)
defconsti(env, "GL-4PASS-3-EXT", (GLenum) GL_4PASS_3_EXT, "GL_4PASS_3_EXT");
#endif
#if defined(GL_SAMPLE_BUFFERS_EXT)
defconsti(env, "GL-SAMPLE-BUFFERS-EXT", (GLenum) GL_SAMPLE_BUFFERS_EXT, "GL_SAMPLE_BUFFERS_EXT");
#endif
#if defined(GL_SAMPLES_EXT)
defconsti(env, "GL-SAMPLES-EXT", (GLenum) GL_SAMPLES_EXT, "GL_SAMPLES_EXT");
#endif
#if defined(GL_SAMPLE_MASK_VALUE_EXT)
defconsti(env, "GL-SAMPLE-MASK-VALUE-EXT", (GLenum) GL_SAMPLE_MASK_VALUE_EXT, "GL_SAMPLE_MASK_VALUE_EXT");
#endif
#if defined(GL_SAMPLE_MASK_INVERT_EXT)
defconsti(env, "GL-SAMPLE-MASK-INVERT-EXT", (GLenum) GL_SAMPLE_MASK_INVERT_EXT, "GL_SAMPLE_MASK_INVERT_EXT");
#endif
#if defined(GL_SAMPLE_PATTERN_EXT)
defconsti(env, "GL-SAMPLE-PATTERN-EXT", (GLenum) GL_SAMPLE_PATTERN_EXT, "GL_SAMPLE_PATTERN_EXT");
#endif
#if defined(GL_MULTISAMPLE_BIT_EXT)
defconsti(env, "GL-MULTISAMPLE-BIT-EXT", (GLenum) GL_MULTISAMPLE_BIT_EXT, "GL_MULTISAMPLE_BIT_EXT");
#endif
#if defined(GL_MULTISAMPLE_EXT)
defconsti(env, "GL-MULTISAMPLE-EXT", (GLenum) GL_MULTISAMPLE_EXT, "GL_MULTISAMPLE_EXT");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_ONE_EXT)
defconsti(env, "GL-SAMPLE-ALPHA-TO-ONE-EXT", (GLenum) GL_SAMPLE_ALPHA_TO_ONE_EXT, "GL_SAMPLE_ALPHA_TO_ONE_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-SAMPLES-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT");
#endif
#if defined(GL_RENDERBUFFER_SAMPLES_EXT)
defconsti(env, "GL-RENDERBUFFER-SAMPLES-EXT", (GLenum) GL_RENDERBUFFER_SAMPLES_EXT, "GL_RENDERBUFFER_SAMPLES_EXT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MULTISAMPLE-EXT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT, "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT");
#endif
#if defined(GL_MAX_SAMPLES_EXT)
defconsti(env, "GL-MAX-SAMPLES-EXT", (GLenum) GL_MAX_SAMPLES_EXT, "GL_MAX_SAMPLES_EXT");
#endif
#if defined(GL_COLOR_ATTACHMENT_EXT)
defconsti(env, "GL-COLOR-ATTACHMENT-EXT", (GLenum) GL_COLOR_ATTACHMENT_EXT, "GL_COLOR_ATTACHMENT_EXT");
#endif
#if defined(GL_MULTIVIEW_EXT)
defconsti(env, "GL-MULTIVIEW-EXT", (GLenum) GL_MULTIVIEW_EXT, "GL_MULTIVIEW_EXT");
#endif
#if defined(GL_DRAW_BUFFER_EXT)
defconsti(env, "GL-DRAW-BUFFER-EXT", (GLenum) GL_DRAW_BUFFER_EXT, "GL_DRAW_BUFFER_EXT");
#endif
#if defined(GL_READ_BUFFER_EXT)
defconsti(env, "GL-READ-BUFFER-EXT", (GLenum) GL_READ_BUFFER_EXT, "GL_READ_BUFFER_EXT");
#endif
#if defined(GL_MAX_MULTIVIEW_BUFFERS_EXT)
defconsti(env, "GL-MAX-MULTIVIEW-BUFFERS-EXT", (GLenum) GL_MAX_MULTIVIEW_BUFFERS_EXT, "GL_MAX_MULTIVIEW_BUFFERS_EXT");
#endif
#if defined(GL_ANY_SAMPLES_PASSED_EXT)
defconsti(env, "GL-ANY-SAMPLES-PASSED-EXT", (GLenum) GL_ANY_SAMPLES_PASSED_EXT, "GL_ANY_SAMPLES_PASSED_EXT");
#endif
#if defined(GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT)
defconsti(env, "GL-ANY-SAMPLES-PASSED-CONSERVATIVE-EXT", (GLenum) GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT, "GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT");
#endif
#if defined(GL_CURRENT_QUERY_EXT)
defconsti(env, "GL-CURRENT-QUERY-EXT", (GLenum) GL_CURRENT_QUERY_EXT, "GL_CURRENT_QUERY_EXT");
#endif
#if defined(GL_QUERY_RESULT_EXT)
defconsti(env, "GL-QUERY-RESULT-EXT", (GLenum) GL_QUERY_RESULT_EXT, "GL_QUERY_RESULT_EXT");
#endif
#if defined(GL_QUERY_RESULT_AVAILABLE_EXT)
defconsti(env, "GL-QUERY-RESULT-AVAILABLE-EXT", (GLenum) GL_QUERY_RESULT_AVAILABLE_EXT, "GL_QUERY_RESULT_AVAILABLE_EXT");
#endif
#if defined(GL_DEPTH_STENCIL_EXT)
defconsti(env, "GL-DEPTH-STENCIL-EXT", (GLenum) GL_DEPTH_STENCIL_EXT, "GL_DEPTH_STENCIL_EXT");
#endif
#if defined(GL_UNSIGNED_INT_24_8_EXT)
defconsti(env, "GL-UNSIGNED-INT-24-8-EXT", (GLenum) GL_UNSIGNED_INT_24_8_EXT, "GL_UNSIGNED_INT_24_8_EXT");
#endif
#if defined(GL_DEPTH24_STENCIL8_EXT)
defconsti(env, "GL-DEPTH24-STENCIL8-EXT", (GLenum) GL_DEPTH24_STENCIL8_EXT, "GL_DEPTH24_STENCIL8_EXT");
#endif
#if defined(GL_TEXTURE_STENCIL_SIZE_EXT)
defconsti(env, "GL-TEXTURE-STENCIL-SIZE-EXT", (GLenum) GL_TEXTURE_STENCIL_SIZE_EXT, "GL_TEXTURE_STENCIL_SIZE_EXT");
#endif
#if defined(GL_R11F_G11F_B10F_EXT)
defconsti(env, "GL-R11F-G11F-B10F-EXT", (GLenum) GL_R11F_G11F_B10F_EXT, "GL_R11F_G11F_B10F_EXT");
#endif
#if defined(GL_UNSIGNED_INT_10F_11F_11F_REV_EXT)
defconsti(env, "GL-UNSIGNED-INT-10F-11F-11F-REV-EXT", (GLenum) GL_UNSIGNED_INT_10F_11F_11F_REV_EXT, "GL_UNSIGNED_INT_10F_11F_11F_REV_EXT");
#endif
#if defined(GL_RGBA_SIGNED_COMPONENTS_EXT)
defconsti(env, "GL-RGBA-SIGNED-COMPONENTS-EXT", (GLenum) GL_RGBA_SIGNED_COMPONENTS_EXT, "GL_RGBA_SIGNED_COMPONENTS_EXT");
#endif
#if defined(GL_UNSIGNED_BYTE_3_3_2_EXT)
defconsti(env, "GL-UNSIGNED-BYTE-3-3-2-EXT", (GLenum) GL_UNSIGNED_BYTE_3_3_2_EXT, "GL_UNSIGNED_BYTE_3_3_2_EXT");
#endif
#if defined(GL_UNSIGNED_SHORT_4_4_4_4_EXT)
defconsti(env, "GL-UNSIGNED-SHORT-4-4-4-4-EXT", (GLenum) GL_UNSIGNED_SHORT_4_4_4_4_EXT, "GL_UNSIGNED_SHORT_4_4_4_4_EXT");
#endif
#if defined(GL_UNSIGNED_SHORT_5_5_5_1_EXT)
defconsti(env, "GL-UNSIGNED-SHORT-5-5-5-1-EXT", (GLenum) GL_UNSIGNED_SHORT_5_5_5_1_EXT, "GL_UNSIGNED_SHORT_5_5_5_1_EXT");
#endif
#if defined(GL_UNSIGNED_INT_8_8_8_8_EXT)
defconsti(env, "GL-UNSIGNED-INT-8-8-8-8-EXT", (GLenum) GL_UNSIGNED_INT_8_8_8_8_EXT, "GL_UNSIGNED_INT_8_8_8_8_EXT");
#endif
#if defined(GL_UNSIGNED_INT_10_10_10_2_EXT)
defconsti(env, "GL-UNSIGNED-INT-10-10-10-2-EXT", (GLenum) GL_UNSIGNED_INT_10_10_10_2_EXT, "GL_UNSIGNED_INT_10_10_10_2_EXT");
#endif
#if defined(GL_COLOR_INDEX1_EXT)
defconsti(env, "GL-COLOR-INDEX1-EXT", (GLenum) GL_COLOR_INDEX1_EXT, "GL_COLOR_INDEX1_EXT");
#endif
#if defined(GL_COLOR_INDEX2_EXT)
defconsti(env, "GL-COLOR-INDEX2-EXT", (GLenum) GL_COLOR_INDEX2_EXT, "GL_COLOR_INDEX2_EXT");
#endif
#if defined(GL_COLOR_INDEX4_EXT)
defconsti(env, "GL-COLOR-INDEX4-EXT", (GLenum) GL_COLOR_INDEX4_EXT, "GL_COLOR_INDEX4_EXT");
#endif
#if defined(GL_COLOR_INDEX8_EXT)
defconsti(env, "GL-COLOR-INDEX8-EXT", (GLenum) GL_COLOR_INDEX8_EXT, "GL_COLOR_INDEX8_EXT");
#endif
#if defined(GL_COLOR_INDEX12_EXT)
defconsti(env, "GL-COLOR-INDEX12-EXT", (GLenum) GL_COLOR_INDEX12_EXT, "GL_COLOR_INDEX12_EXT");
#endif
#if defined(GL_COLOR_INDEX16_EXT)
defconsti(env, "GL-COLOR-INDEX16-EXT", (GLenum) GL_COLOR_INDEX16_EXT, "GL_COLOR_INDEX16_EXT");
#endif
#if defined(GL_TEXTURE_INDEX_SIZE_EXT)
defconsti(env, "GL-TEXTURE-INDEX-SIZE-EXT", (GLenum) GL_TEXTURE_INDEX_SIZE_EXT, "GL_TEXTURE_INDEX_SIZE_EXT");
#endif
#if defined(GL_PIXEL_PACK_BUFFER_EXT)
defconsti(env, "GL-PIXEL-PACK-BUFFER-EXT", (GLenum) GL_PIXEL_PACK_BUFFER_EXT, "GL_PIXEL_PACK_BUFFER_EXT");
#endif
#if defined(GL_PIXEL_UNPACK_BUFFER_EXT)
defconsti(env, "GL-PIXEL-UNPACK-BUFFER-EXT", (GLenum) GL_PIXEL_UNPACK_BUFFER_EXT, "GL_PIXEL_UNPACK_BUFFER_EXT");
#endif
#if defined(GL_PIXEL_PACK_BUFFER_BINDING_EXT)
defconsti(env, "GL-PIXEL-PACK-BUFFER-BINDING-EXT", (GLenum) GL_PIXEL_PACK_BUFFER_BINDING_EXT, "GL_PIXEL_PACK_BUFFER_BINDING_EXT");
#endif
#if defined(GL_PIXEL_UNPACK_BUFFER_BINDING_EXT)
defconsti(env, "GL-PIXEL-UNPACK-BUFFER-BINDING-EXT", (GLenum) GL_PIXEL_UNPACK_BUFFER_BINDING_EXT, "GL_PIXEL_UNPACK_BUFFER_BINDING_EXT");
#endif
#if defined(GL_PIXEL_TRANSFORM_2D_EXT)
defconsti(env, "GL-PIXEL-TRANSFORM-2D-EXT", (GLenum) GL_PIXEL_TRANSFORM_2D_EXT, "GL_PIXEL_TRANSFORM_2D_EXT");
#endif
#if defined(GL_PIXEL_MAG_FILTER_EXT)
defconsti(env, "GL-PIXEL-MAG-FILTER-EXT", (GLenum) GL_PIXEL_MAG_FILTER_EXT, "GL_PIXEL_MAG_FILTER_EXT");
#endif
#if defined(GL_PIXEL_MIN_FILTER_EXT)
defconsti(env, "GL-PIXEL-MIN-FILTER-EXT", (GLenum) GL_PIXEL_MIN_FILTER_EXT, "GL_PIXEL_MIN_FILTER_EXT");
#endif
#if defined(GL_PIXEL_CUBIC_WEIGHT_EXT)
defconsti(env, "GL-PIXEL-CUBIC-WEIGHT-EXT", (GLenum) GL_PIXEL_CUBIC_WEIGHT_EXT, "GL_PIXEL_CUBIC_WEIGHT_EXT");
#endif
#if defined(GL_CUBIC_EXT)
defconsti(env, "GL-CUBIC-EXT", (GLenum) GL_CUBIC_EXT, "GL_CUBIC_EXT");
#endif
#if defined(GL_AVERAGE_EXT)
defconsti(env, "GL-AVERAGE-EXT", (GLenum) GL_AVERAGE_EXT, "GL_AVERAGE_EXT");
#endif
#if defined(GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT)
defconsti(env, "GL-PIXEL-TRANSFORM-2D-STACK-DEPTH-EXT", (GLenum) GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT, "GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT");
#endif
#if defined(GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT)
defconsti(env, "GL-MAX-PIXEL-TRANSFORM-2D-STACK-DEPTH-EXT", (GLenum) GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT, "GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT");
#endif
#if defined(GL_PIXEL_TRANSFORM_2D_MATRIX_EXT)
defconsti(env, "GL-PIXEL-TRANSFORM-2D-MATRIX-EXT", (GLenum) GL_PIXEL_TRANSFORM_2D_MATRIX_EXT, "GL_PIXEL_TRANSFORM_2D_MATRIX_EXT");
#endif
#if defined(GL_POINT_SIZE_MIN_EXT)
defconsti(env, "GL-POINT-SIZE-MIN-EXT", (GLenum) GL_POINT_SIZE_MIN_EXT, "GL_POINT_SIZE_MIN_EXT");
#endif
#if defined(GL_POINT_SIZE_MAX_EXT)
defconsti(env, "GL-POINT-SIZE-MAX-EXT", (GLenum) GL_POINT_SIZE_MAX_EXT, "GL_POINT_SIZE_MAX_EXT");
#endif
#if defined(GL_POINT_FADE_THRESHOLD_SIZE_EXT)
defconsti(env, "GL-POINT-FADE-THRESHOLD-SIZE-EXT", (GLenum) GL_POINT_FADE_THRESHOLD_SIZE_EXT, "GL_POINT_FADE_THRESHOLD_SIZE_EXT");
#endif
#if defined(GL_DISTANCE_ATTENUATION_EXT)
defconsti(env, "GL-DISTANCE-ATTENUATION-EXT", (GLenum) GL_DISTANCE_ATTENUATION_EXT, "GL_DISTANCE_ATTENUATION_EXT");
#endif
#if defined(GL_POLYGON_OFFSET_EXT)
defconsti(env, "GL-POLYGON-OFFSET-EXT", (GLenum) GL_POLYGON_OFFSET_EXT, "GL_POLYGON_OFFSET_EXT");
#endif
#if defined(GL_POLYGON_OFFSET_FACTOR_EXT)
defconsti(env, "GL-POLYGON-OFFSET-FACTOR-EXT", (GLenum) GL_POLYGON_OFFSET_FACTOR_EXT, "GL_POLYGON_OFFSET_FACTOR_EXT");
#endif
#if defined(GL_POLYGON_OFFSET_BIAS_EXT)
defconsti(env, "GL-POLYGON-OFFSET-BIAS-EXT", (GLenum) GL_POLYGON_OFFSET_BIAS_EXT, "GL_POLYGON_OFFSET_BIAS_EXT");
#endif
#if defined(GL_POLYGON_OFFSET_CLAMP_EXT)
defconsti(env, "GL-POLYGON-OFFSET-CLAMP-EXT", (GLenum) GL_POLYGON_OFFSET_CLAMP_EXT, "GL_POLYGON_OFFSET_CLAMP_EXT");
#endif
#if defined(GL_PRIMITIVE_BOUNDING_BOX_EXT)
defconsti(env, "GL-PRIMITIVE-BOUNDING-BOX-EXT", (GLenum) GL_PRIMITIVE_BOUNDING_BOX_EXT, "GL_PRIMITIVE_BOUNDING_BOX_EXT");
#endif
#if defined(GL_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT)
defconsti(env, "GL-CONTEXT-FLAG-PROTECTED-CONTENT-BIT-EXT", (GLenum) GL_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT, "GL_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT");
#endif
#if defined(GL_TEXTURE_PROTECTED_EXT)
defconsti(env, "GL-TEXTURE-PROTECTED-EXT", (GLenum) GL_TEXTURE_PROTECTED_EXT, "GL_TEXTURE_PROTECTED_EXT");
#endif
#if defined(GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT)
defconsti(env, "GL-QUADS-FOLLOW-PROVOKING-VERTEX-CONVENTION-EXT", (GLenum) GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT, "GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT");
#endif
#if defined(GL_FIRST_VERTEX_CONVENTION_EXT)
defconsti(env, "GL-FIRST-VERTEX-CONVENTION-EXT", (GLenum) GL_FIRST_VERTEX_CONVENTION_EXT, "GL_FIRST_VERTEX_CONVENTION_EXT");
#endif
#if defined(GL_LAST_VERTEX_CONVENTION_EXT)
defconsti(env, "GL-LAST-VERTEX-CONVENTION-EXT", (GLenum) GL_LAST_VERTEX_CONVENTION_EXT, "GL_LAST_VERTEX_CONVENTION_EXT");
#endif
#if defined(GL_PROVOKING_VERTEX_EXT)
defconsti(env, "GL-PROVOKING-VERTEX-EXT", (GLenum) GL_PROVOKING_VERTEX_EXT, "GL_PROVOKING_VERTEX_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-PVRTC-2BPPV1-EXT", (GLenum) GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT, "GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-PVRTC-4BPPV1-EXT", (GLenum) GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT, "GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-PVRTC-2BPPV1-EXT", (GLenum) GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT, "GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-PVRTC-4BPPV1-EXT", (GLenum) GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT, "GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-PVRTC-2BPPV2-IMG", (GLenum) GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG, "GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-PVRTC-4BPPV2-IMG", (GLenum) GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG, "GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG");
#endif
#if defined(GL_RASTER_MULTISAMPLE_EXT)
defconsti(env, "GL-RASTER-MULTISAMPLE-EXT", (GLenum) GL_RASTER_MULTISAMPLE_EXT, "GL_RASTER_MULTISAMPLE_EXT");
#endif
#if defined(GL_RASTER_SAMPLES_EXT)
defconsti(env, "GL-RASTER-SAMPLES-EXT", (GLenum) GL_RASTER_SAMPLES_EXT, "GL_RASTER_SAMPLES_EXT");
#endif
#if defined(GL_MAX_RASTER_SAMPLES_EXT)
defconsti(env, "GL-MAX-RASTER-SAMPLES-EXT", (GLenum) GL_MAX_RASTER_SAMPLES_EXT, "GL_MAX_RASTER_SAMPLES_EXT");
#endif
#if defined(GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT)
defconsti(env, "GL-RASTER-FIXED-SAMPLE-LOCATIONS-EXT", (GLenum) GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT, "GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT");
#endif
#if defined(GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT)
defconsti(env, "GL-MULTISAMPLE-RASTERIZATION-ALLOWED-EXT", (GLenum) GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT, "GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT");
#endif
#if defined(GL_EFFECTIVE_RASTER_SAMPLES_EXT)
defconsti(env, "GL-EFFECTIVE-RASTER-SAMPLES-EXT", (GLenum) GL_EFFECTIVE_RASTER_SAMPLES_EXT, "GL_EFFECTIVE_RASTER_SAMPLES_EXT");
#endif
#if defined(GL_BGRA_EXT)
defconsti(env, "GL-BGRA-EXT", (GLenum) GL_BGRA_EXT, "GL_BGRA_EXT");
#endif
#if defined(GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT)
defconsti(env, "GL-UNSIGNED-SHORT-4-4-4-4-REV-EXT", (GLenum) GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT, "GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT");
#endif
#if defined(GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT)
defconsti(env, "GL-UNSIGNED-SHORT-1-5-5-5-REV-EXT", (GLenum) GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT, "GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT");
#endif
#if defined(GL_BYTE)
defconsti(env, "GL-BYTE", (GLenum) GL_BYTE, "GL_BYTE");
#endif
#if defined(GL_SHORT)
defconsti(env, "GL-SHORT", (GLenum) GL_SHORT, "GL_SHORT");
#endif
#if defined(GL_R8_SNORM)
defconsti(env, "GL-R8-SNORM", (GLenum) GL_R8_SNORM, "GL_R8_SNORM");
#endif
#if defined(GL_RG8_SNORM)
defconsti(env, "GL-RG8-SNORM", (GLenum) GL_RG8_SNORM, "GL_RG8_SNORM");
#endif
#if defined(GL_RGBA8_SNORM)
defconsti(env, "GL-RGBA8-SNORM", (GLenum) GL_RGBA8_SNORM, "GL_RGBA8_SNORM");
#endif
#if defined(GL_R16_SNORM_EXT)
defconsti(env, "GL-R16-SNORM-EXT", (GLenum) GL_R16_SNORM_EXT, "GL_R16_SNORM_EXT");
#endif
#if defined(GL_RG16_SNORM_EXT)
defconsti(env, "GL-RG16-SNORM-EXT", (GLenum) GL_RG16_SNORM_EXT, "GL_RG16_SNORM_EXT");
#endif
#if defined(GL_RGBA16_SNORM_EXT)
defconsti(env, "GL-RGBA16-SNORM-EXT", (GLenum) GL_RGBA16_SNORM_EXT, "GL_RGBA16_SNORM_EXT");
#endif
#if defined(GL_RESCALE_NORMAL_EXT)
defconsti(env, "GL-RESCALE-NORMAL-EXT", (GLenum) GL_RESCALE_NORMAL_EXT, "GL_RESCALE_NORMAL_EXT");
#endif
#if defined(GL_NO_ERROR)
defconsti(env, "GL-NO-ERROR", (GLenum) GL_NO_ERROR, "GL_NO_ERROR");
#endif
#if defined(GL_GUILTY_CONTEXT_RESET_EXT)
defconsti(env, "GL-GUILTY-CONTEXT-RESET-EXT", (GLenum) GL_GUILTY_CONTEXT_RESET_EXT, "GL_GUILTY_CONTEXT_RESET_EXT");
#endif
#if defined(GL_INNOCENT_CONTEXT_RESET_EXT)
defconsti(env, "GL-INNOCENT-CONTEXT-RESET-EXT", (GLenum) GL_INNOCENT_CONTEXT_RESET_EXT, "GL_INNOCENT_CONTEXT_RESET_EXT");
#endif
#if defined(GL_UNKNOWN_CONTEXT_RESET_EXT)
defconsti(env, "GL-UNKNOWN-CONTEXT-RESET-EXT", (GLenum) GL_UNKNOWN_CONTEXT_RESET_EXT, "GL_UNKNOWN_CONTEXT_RESET_EXT");
#endif
#if defined(GL_CONTEXT_ROBUST_ACCESS_EXT)
defconsti(env, "GL-CONTEXT-ROBUST-ACCESS-EXT", (GLenum) GL_CONTEXT_ROBUST_ACCESS_EXT, "GL_CONTEXT_ROBUST_ACCESS_EXT");
#endif
#if defined(GL_RESET_NOTIFICATION_STRATEGY_EXT)
defconsti(env, "GL-RESET-NOTIFICATION-STRATEGY-EXT", (GLenum) GL_RESET_NOTIFICATION_STRATEGY_EXT, "GL_RESET_NOTIFICATION_STRATEGY_EXT");
#endif
#if defined(GL_LOSE_CONTEXT_ON_RESET_EXT)
defconsti(env, "GL-LOSE-CONTEXT-ON-RESET-EXT", (GLenum) GL_LOSE_CONTEXT_ON_RESET_EXT, "GL_LOSE_CONTEXT_ON_RESET_EXT");
#endif
#if defined(GL_NO_RESET_NOTIFICATION_EXT)
defconsti(env, "GL-NO-RESET-NOTIFICATION-EXT", (GLenum) GL_NO_RESET_NOTIFICATION_EXT, "GL_NO_RESET_NOTIFICATION_EXT");
#endif
#if defined(GL_NUM_DEVICE_UUIDS_EXT)
defconsti(env, "GL-NUM-DEVICE-UUIDS-EXT", (GLenum) GL_NUM_DEVICE_UUIDS_EXT, "GL_NUM_DEVICE_UUIDS_EXT");
#endif
#if defined(GL_DEVICE_UUID_EXT)
defconsti(env, "GL-DEVICE-UUID-EXT", (GLenum) GL_DEVICE_UUID_EXT, "GL_DEVICE_UUID_EXT");
#endif
#if defined(GL_DRIVER_UUID_EXT)
defconsti(env, "GL-DRIVER-UUID-EXT", (GLenum) GL_DRIVER_UUID_EXT, "GL_DRIVER_UUID_EXT");
#endif
#if defined(GL_UUID_SIZE_EXT)
defconsti(env, "GL-UUID-SIZE-EXT", (GLenum) GL_UUID_SIZE_EXT, "GL_UUID_SIZE_EXT");
#endif
#if defined(GL_LAYOUT_GENERAL_EXT)
defconsti(env, "GL-LAYOUT-GENERAL-EXT", (GLenum) GL_LAYOUT_GENERAL_EXT, "GL_LAYOUT_GENERAL_EXT");
#endif
#if defined(GL_LAYOUT_COLOR_ATTACHMENT_EXT)
defconsti(env, "GL-LAYOUT-COLOR-ATTACHMENT-EXT", (GLenum) GL_LAYOUT_COLOR_ATTACHMENT_EXT, "GL_LAYOUT_COLOR_ATTACHMENT_EXT");
#endif
#if defined(GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT)
defconsti(env, "GL-LAYOUT-DEPTH-STENCIL-ATTACHMENT-EXT", (GLenum) GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT, "GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT");
#endif
#if defined(GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT)
defconsti(env, "GL-LAYOUT-DEPTH-STENCIL-READ-ONLY-EXT", (GLenum) GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT, "GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT");
#endif
#if defined(GL_LAYOUT_SHADER_READ_ONLY_EXT)
defconsti(env, "GL-LAYOUT-SHADER-READ-ONLY-EXT", (GLenum) GL_LAYOUT_SHADER_READ_ONLY_EXT, "GL_LAYOUT_SHADER_READ_ONLY_EXT");
#endif
#if defined(GL_LAYOUT_TRANSFER_SRC_EXT)
defconsti(env, "GL-LAYOUT-TRANSFER-SRC-EXT", (GLenum) GL_LAYOUT_TRANSFER_SRC_EXT, "GL_LAYOUT_TRANSFER_SRC_EXT");
#endif
#if defined(GL_LAYOUT_TRANSFER_DST_EXT)
defconsti(env, "GL-LAYOUT-TRANSFER-DST-EXT", (GLenum) GL_LAYOUT_TRANSFER_DST_EXT, "GL_LAYOUT_TRANSFER_DST_EXT");
#endif
#if defined(GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT)
defconsti(env, "GL-LAYOUT-DEPTH-READ-ONLY-STENCIL-ATTACHMENT-EXT", (GLenum) GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT, "GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT");
#endif
#if defined(GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT)
defconsti(env, "GL-LAYOUT-DEPTH-ATTACHMENT-STENCIL-READ-ONLY-EXT", (GLenum) GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT, "GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT");
#endif
#if defined(GL_HANDLE_TYPE_OPAQUE_FD_EXT)
defconsti(env, "GL-HANDLE-TYPE-OPAQUE-FD-EXT", (GLenum) GL_HANDLE_TYPE_OPAQUE_FD_EXT, "GL_HANDLE_TYPE_OPAQUE_FD_EXT");
#endif
#if defined(GL_HANDLE_TYPE_OPAQUE_WIN32_EXT)
defconsti(env, "GL-HANDLE-TYPE-OPAQUE-WIN32-EXT", (GLenum) GL_HANDLE_TYPE_OPAQUE_WIN32_EXT, "GL_HANDLE_TYPE_OPAQUE_WIN32_EXT");
#endif
#if defined(GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT)
defconsti(env, "GL-HANDLE-TYPE-OPAQUE-WIN32-KMT-EXT", (GLenum) GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT, "GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT");
#endif
#if defined(GL_DEVICE_LUID_EXT)
defconsti(env, "GL-DEVICE-LUID-EXT", (GLenum) GL_DEVICE_LUID_EXT, "GL_DEVICE_LUID_EXT");
#endif
#if defined(GL_DEVICE_NODE_MASK_EXT)
defconsti(env, "GL-DEVICE-NODE-MASK-EXT", (GLenum) GL_DEVICE_NODE_MASK_EXT, "GL_DEVICE_NODE_MASK_EXT");
#endif
#if defined(GL_LUID_SIZE_EXT)
defconsti(env, "GL-LUID-SIZE-EXT", (GLenum) GL_LUID_SIZE_EXT, "GL_LUID_SIZE_EXT");
#endif
#if defined(GL_HANDLE_TYPE_D3D12_FENCE_EXT)
defconsti(env, "GL-HANDLE-TYPE-D3D12-FENCE-EXT", (GLenum) GL_HANDLE_TYPE_D3D12_FENCE_EXT, "GL_HANDLE_TYPE_D3D12_FENCE_EXT");
#endif
#if defined(GL_D3D12_FENCE_VALUE_EXT)
defconsti(env, "GL-D3D12-FENCE-VALUE-EXT", (GLenum) GL_D3D12_FENCE_VALUE_EXT, "GL_D3D12_FENCE_VALUE_EXT");
#endif
#if defined(GL_SRGB_EXT)
defconsti(env, "GL-SRGB-EXT", (GLenum) GL_SRGB_EXT, "GL_SRGB_EXT");
#endif
#if defined(GL_SRGB_ALPHA_EXT)
defconsti(env, "GL-SRGB-ALPHA-EXT", (GLenum) GL_SRGB_ALPHA_EXT, "GL_SRGB_ALPHA_EXT");
#endif
#if defined(GL_SRGB8_ALPHA8_EXT)
defconsti(env, "GL-SRGB8-ALPHA8-EXT", (GLenum) GL_SRGB8_ALPHA8_EXT, "GL_SRGB8_ALPHA8_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-COLOR-ENCODING-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT, "GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT");
#endif
#if defined(GL_FRAMEBUFFER_SRGB_EXT)
defconsti(env, "GL-FRAMEBUFFER-SRGB-EXT", (GLenum) GL_FRAMEBUFFER_SRGB_EXT, "GL_FRAMEBUFFER_SRGB_EXT");
#endif
#if defined(GL_COLOR_SUM_EXT)
defconsti(env, "GL-COLOR-SUM-EXT", (GLenum) GL_COLOR_SUM_EXT, "GL_COLOR_SUM_EXT");
#endif
#if defined(GL_CURRENT_SECONDARY_COLOR_EXT)
defconsti(env, "GL-CURRENT-SECONDARY-COLOR-EXT", (GLenum) GL_CURRENT_SECONDARY_COLOR_EXT, "GL_CURRENT_SECONDARY_COLOR_EXT");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_SIZE_EXT)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-SIZE-EXT", (GLenum) GL_SECONDARY_COLOR_ARRAY_SIZE_EXT, "GL_SECONDARY_COLOR_ARRAY_SIZE_EXT");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_TYPE_EXT)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-TYPE-EXT", (GLenum) GL_SECONDARY_COLOR_ARRAY_TYPE_EXT, "GL_SECONDARY_COLOR_ARRAY_TYPE_EXT");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-STRIDE-EXT", (GLenum) GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT, "GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_POINTER_EXT)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-POINTER-EXT", (GLenum) GL_SECONDARY_COLOR_ARRAY_POINTER_EXT, "GL_SECONDARY_COLOR_ARRAY_POINTER_EXT");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_EXT)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-EXT", (GLenum) GL_SECONDARY_COLOR_ARRAY_EXT, "GL_SECONDARY_COLOR_ARRAY_EXT");
#endif
#if defined(GL_ACTIVE_PROGRAM_EXT)
defconsti(env, "GL-ACTIVE-PROGRAM-EXT", (GLenum) GL_ACTIVE_PROGRAM_EXT, "GL_ACTIVE_PROGRAM_EXT");
#endif
#if defined(GL_VERTEX_SHADER_BIT_EXT)
defconsti(env, "GL-VERTEX-SHADER-BIT-EXT", (GLenum) GL_VERTEX_SHADER_BIT_EXT, "GL_VERTEX_SHADER_BIT_EXT");
#endif
#if defined(GL_FRAGMENT_SHADER_BIT_EXT)
defconsti(env, "GL-FRAGMENT-SHADER-BIT-EXT", (GLenum) GL_FRAGMENT_SHADER_BIT_EXT, "GL_FRAGMENT_SHADER_BIT_EXT");
#endif
#if defined(GL_ALL_SHADER_BITS_EXT)
defconsti(env, "GL-ALL-SHADER-BITS-EXT", (GLenum) GL_ALL_SHADER_BITS_EXT, "GL_ALL_SHADER_BITS_EXT");
#endif
#if defined(GL_PROGRAM_SEPARABLE_EXT)
defconsti(env, "GL-PROGRAM-SEPARABLE-EXT", (GLenum) GL_PROGRAM_SEPARABLE_EXT, "GL_PROGRAM_SEPARABLE_EXT");
#endif
#if defined(GL_ACTIVE_PROGRAM_EXT)
defconsti(env, "GL-ACTIVE-PROGRAM-EXT", (GLenum) GL_ACTIVE_PROGRAM_EXT, "GL_ACTIVE_PROGRAM_EXT");
#endif
#if defined(GL_PROGRAM_PIPELINE_BINDING_EXT)
defconsti(env, "GL-PROGRAM-PIPELINE-BINDING-EXT", (GLenum) GL_PROGRAM_PIPELINE_BINDING_EXT, "GL_PROGRAM_PIPELINE_BINDING_EXT");
#endif
#if defined(GL_LIGHT_MODEL_COLOR_CONTROL_EXT)
defconsti(env, "GL-LIGHT-MODEL-COLOR-CONTROL-EXT", (GLenum) GL_LIGHT_MODEL_COLOR_CONTROL_EXT, "GL_LIGHT_MODEL_COLOR_CONTROL_EXT");
#endif
#if defined(GL_SINGLE_COLOR_EXT)
defconsti(env, "GL-SINGLE-COLOR-EXT", (GLenum) GL_SINGLE_COLOR_EXT, "GL_SINGLE_COLOR_EXT");
#endif
#if defined(GL_SEPARATE_SPECULAR_COLOR_EXT)
defconsti(env, "GL-SEPARATE-SPECULAR-COLOR-EXT", (GLenum) GL_SEPARATE_SPECULAR_COLOR_EXT, "GL_SEPARATE_SPECULAR_COLOR_EXT");
#endif
#if defined(GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT)
defconsti(env, "GL-FRAGMENT-SHADER-DISCARDS-SAMPLES-EXT", (GLenum) GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT, "GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT");
#endif
#if defined(GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT)
defconsti(env, "GL-FRAGMENT-SHADER-DISCARDS-SAMPLES-EXT", (GLenum) GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT, "GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT");
#endif
#if defined(GL_MAX_IMAGE_UNITS_EXT)
defconsti(env, "GL-MAX-IMAGE-UNITS-EXT", (GLenum) GL_MAX_IMAGE_UNITS_EXT, "GL_MAX_IMAGE_UNITS_EXT");
#endif
#if defined(GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT)
defconsti(env, "GL-MAX-COMBINED-IMAGE-UNITS-AND-FRAGMENT-OUTPUTS-EXT", (GLenum) GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT, "GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT");
#endif
#if defined(GL_IMAGE_BINDING_NAME_EXT)
defconsti(env, "GL-IMAGE-BINDING-NAME-EXT", (GLenum) GL_IMAGE_BINDING_NAME_EXT, "GL_IMAGE_BINDING_NAME_EXT");
#endif
#if defined(GL_IMAGE_BINDING_LEVEL_EXT)
defconsti(env, "GL-IMAGE-BINDING-LEVEL-EXT", (GLenum) GL_IMAGE_BINDING_LEVEL_EXT, "GL_IMAGE_BINDING_LEVEL_EXT");
#endif
#if defined(GL_IMAGE_BINDING_LAYERED_EXT)
defconsti(env, "GL-IMAGE-BINDING-LAYERED-EXT", (GLenum) GL_IMAGE_BINDING_LAYERED_EXT, "GL_IMAGE_BINDING_LAYERED_EXT");
#endif
#if defined(GL_IMAGE_BINDING_LAYER_EXT)
defconsti(env, "GL-IMAGE-BINDING-LAYER-EXT", (GLenum) GL_IMAGE_BINDING_LAYER_EXT, "GL_IMAGE_BINDING_LAYER_EXT");
#endif
#if defined(GL_IMAGE_BINDING_ACCESS_EXT)
defconsti(env, "GL-IMAGE-BINDING-ACCESS-EXT", (GLenum) GL_IMAGE_BINDING_ACCESS_EXT, "GL_IMAGE_BINDING_ACCESS_EXT");
#endif
#if defined(GL_IMAGE_1D_EXT)
defconsti(env, "GL-IMAGE-1D-EXT", (GLenum) GL_IMAGE_1D_EXT, "GL_IMAGE_1D_EXT");
#endif
#if defined(GL_IMAGE_2D_EXT)
defconsti(env, "GL-IMAGE-2D-EXT", (GLenum) GL_IMAGE_2D_EXT, "GL_IMAGE_2D_EXT");
#endif
#if defined(GL_IMAGE_3D_EXT)
defconsti(env, "GL-IMAGE-3D-EXT", (GLenum) GL_IMAGE_3D_EXT, "GL_IMAGE_3D_EXT");
#endif
#if defined(GL_IMAGE_2D_RECT_EXT)
defconsti(env, "GL-IMAGE-2D-RECT-EXT", (GLenum) GL_IMAGE_2D_RECT_EXT, "GL_IMAGE_2D_RECT_EXT");
#endif
#if defined(GL_IMAGE_CUBE_EXT)
defconsti(env, "GL-IMAGE-CUBE-EXT", (GLenum) GL_IMAGE_CUBE_EXT, "GL_IMAGE_CUBE_EXT");
#endif
#if defined(GL_IMAGE_BUFFER_EXT)
defconsti(env, "GL-IMAGE-BUFFER-EXT", (GLenum) GL_IMAGE_BUFFER_EXT, "GL_IMAGE_BUFFER_EXT");
#endif
#if defined(GL_IMAGE_1D_ARRAY_EXT)
defconsti(env, "GL-IMAGE-1D-ARRAY-EXT", (GLenum) GL_IMAGE_1D_ARRAY_EXT, "GL_IMAGE_1D_ARRAY_EXT");
#endif
#if defined(GL_IMAGE_2D_ARRAY_EXT)
defconsti(env, "GL-IMAGE-2D-ARRAY-EXT", (GLenum) GL_IMAGE_2D_ARRAY_EXT, "GL_IMAGE_2D_ARRAY_EXT");
#endif
#if defined(GL_IMAGE_CUBE_MAP_ARRAY_EXT)
defconsti(env, "GL-IMAGE-CUBE-MAP-ARRAY-EXT", (GLenum) GL_IMAGE_CUBE_MAP_ARRAY_EXT, "GL_IMAGE_CUBE_MAP_ARRAY_EXT");
#endif
#if defined(GL_IMAGE_2D_MULTISAMPLE_EXT)
defconsti(env, "GL-IMAGE-2D-MULTISAMPLE-EXT", (GLenum) GL_IMAGE_2D_MULTISAMPLE_EXT, "GL_IMAGE_2D_MULTISAMPLE_EXT");
#endif
#if defined(GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT)
defconsti(env, "GL-IMAGE-2D-MULTISAMPLE-ARRAY-EXT", (GLenum) GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT, "GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT");
#endif
#if defined(GL_INT_IMAGE_1D_EXT)
defconsti(env, "GL-INT-IMAGE-1D-EXT", (GLenum) GL_INT_IMAGE_1D_EXT, "GL_INT_IMAGE_1D_EXT");
#endif
#if defined(GL_INT_IMAGE_2D_EXT)
defconsti(env, "GL-INT-IMAGE-2D-EXT", (GLenum) GL_INT_IMAGE_2D_EXT, "GL_INT_IMAGE_2D_EXT");
#endif
#if defined(GL_INT_IMAGE_3D_EXT)
defconsti(env, "GL-INT-IMAGE-3D-EXT", (GLenum) GL_INT_IMAGE_3D_EXT, "GL_INT_IMAGE_3D_EXT");
#endif
#if defined(GL_INT_IMAGE_2D_RECT_EXT)
defconsti(env, "GL-INT-IMAGE-2D-RECT-EXT", (GLenum) GL_INT_IMAGE_2D_RECT_EXT, "GL_INT_IMAGE_2D_RECT_EXT");
#endif
#if defined(GL_INT_IMAGE_CUBE_EXT)
defconsti(env, "GL-INT-IMAGE-CUBE-EXT", (GLenum) GL_INT_IMAGE_CUBE_EXT, "GL_INT_IMAGE_CUBE_EXT");
#endif
#if defined(GL_INT_IMAGE_BUFFER_EXT)
defconsti(env, "GL-INT-IMAGE-BUFFER-EXT", (GLenum) GL_INT_IMAGE_BUFFER_EXT, "GL_INT_IMAGE_BUFFER_EXT");
#endif
#if defined(GL_INT_IMAGE_1D_ARRAY_EXT)
defconsti(env, "GL-INT-IMAGE-1D-ARRAY-EXT", (GLenum) GL_INT_IMAGE_1D_ARRAY_EXT, "GL_INT_IMAGE_1D_ARRAY_EXT");
#endif
#if defined(GL_INT_IMAGE_2D_ARRAY_EXT)
defconsti(env, "GL-INT-IMAGE-2D-ARRAY-EXT", (GLenum) GL_INT_IMAGE_2D_ARRAY_EXT, "GL_INT_IMAGE_2D_ARRAY_EXT");
#endif
#if defined(GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT)
defconsti(env, "GL-INT-IMAGE-CUBE-MAP-ARRAY-EXT", (GLenum) GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT, "GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT");
#endif
#if defined(GL_INT_IMAGE_2D_MULTISAMPLE_EXT)
defconsti(env, "GL-INT-IMAGE-2D-MULTISAMPLE-EXT", (GLenum) GL_INT_IMAGE_2D_MULTISAMPLE_EXT, "GL_INT_IMAGE_2D_MULTISAMPLE_EXT");
#endif
#if defined(GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT)
defconsti(env, "GL-INT-IMAGE-2D-MULTISAMPLE-ARRAY-EXT", (GLenum) GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT, "GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_1D_EXT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-1D-EXT", (GLenum) GL_UNSIGNED_INT_IMAGE_1D_EXT, "GL_UNSIGNED_INT_IMAGE_1D_EXT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_EXT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-EXT", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_EXT, "GL_UNSIGNED_INT_IMAGE_2D_EXT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_3D_EXT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-3D-EXT", (GLenum) GL_UNSIGNED_INT_IMAGE_3D_EXT, "GL_UNSIGNED_INT_IMAGE_3D_EXT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-RECT-EXT", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT, "GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_CUBE_EXT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-CUBE-EXT", (GLenum) GL_UNSIGNED_INT_IMAGE_CUBE_EXT, "GL_UNSIGNED_INT_IMAGE_CUBE_EXT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_BUFFER_EXT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-BUFFER-EXT", (GLenum) GL_UNSIGNED_INT_IMAGE_BUFFER_EXT, "GL_UNSIGNED_INT_IMAGE_BUFFER_EXT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-1D-ARRAY-EXT", (GLenum) GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT, "GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-ARRAY-EXT", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT, "GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-CUBE-MAP-ARRAY-EXT", (GLenum) GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT, "GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-MULTISAMPLE-EXT", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT, "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-2D-MULTISAMPLE-ARRAY-EXT", (GLenum) GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT, "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT");
#endif
#if defined(GL_MAX_IMAGE_SAMPLES_EXT)
defconsti(env, "GL-MAX-IMAGE-SAMPLES-EXT", (GLenum) GL_MAX_IMAGE_SAMPLES_EXT, "GL_MAX_IMAGE_SAMPLES_EXT");
#endif
#if defined(GL_IMAGE_BINDING_FORMAT_EXT)
defconsti(env, "GL-IMAGE-BINDING-FORMAT-EXT", (GLenum) GL_IMAGE_BINDING_FORMAT_EXT, "GL_IMAGE_BINDING_FORMAT_EXT");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-BARRIER-BIT-EXT", (GLenum) GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT, "GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT");
#endif
#if defined(GL_ELEMENT_ARRAY_BARRIER_BIT_EXT)
defconsti(env, "GL-ELEMENT-ARRAY-BARRIER-BIT-EXT", (GLenum) GL_ELEMENT_ARRAY_BARRIER_BIT_EXT, "GL_ELEMENT_ARRAY_BARRIER_BIT_EXT");
#endif
#if defined(GL_UNIFORM_BARRIER_BIT_EXT)
defconsti(env, "GL-UNIFORM-BARRIER-BIT-EXT", (GLenum) GL_UNIFORM_BARRIER_BIT_EXT, "GL_UNIFORM_BARRIER_BIT_EXT");
#endif
#if defined(GL_TEXTURE_FETCH_BARRIER_BIT_EXT)
defconsti(env, "GL-TEXTURE-FETCH-BARRIER-BIT-EXT", (GLenum) GL_TEXTURE_FETCH_BARRIER_BIT_EXT, "GL_TEXTURE_FETCH_BARRIER_BIT_EXT");
#endif
#if defined(GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT)
defconsti(env, "GL-SHADER-IMAGE-ACCESS-BARRIER-BIT-EXT", (GLenum) GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT, "GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT");
#endif
#if defined(GL_COMMAND_BARRIER_BIT_EXT)
defconsti(env, "GL-COMMAND-BARRIER-BIT-EXT", (GLenum) GL_COMMAND_BARRIER_BIT_EXT, "GL_COMMAND_BARRIER_BIT_EXT");
#endif
#if defined(GL_PIXEL_BUFFER_BARRIER_BIT_EXT)
defconsti(env, "GL-PIXEL-BUFFER-BARRIER-BIT-EXT", (GLenum) GL_PIXEL_BUFFER_BARRIER_BIT_EXT, "GL_PIXEL_BUFFER_BARRIER_BIT_EXT");
#endif
#if defined(GL_TEXTURE_UPDATE_BARRIER_BIT_EXT)
defconsti(env, "GL-TEXTURE-UPDATE-BARRIER-BIT-EXT", (GLenum) GL_TEXTURE_UPDATE_BARRIER_BIT_EXT, "GL_TEXTURE_UPDATE_BARRIER_BIT_EXT");
#endif
#if defined(GL_BUFFER_UPDATE_BARRIER_BIT_EXT)
defconsti(env, "GL-BUFFER-UPDATE-BARRIER-BIT-EXT", (GLenum) GL_BUFFER_UPDATE_BARRIER_BIT_EXT, "GL_BUFFER_UPDATE_BARRIER_BIT_EXT");
#endif
#if defined(GL_FRAMEBUFFER_BARRIER_BIT_EXT)
defconsti(env, "GL-FRAMEBUFFER-BARRIER-BIT-EXT", (GLenum) GL_FRAMEBUFFER_BARRIER_BIT_EXT, "GL_FRAMEBUFFER_BARRIER_BIT_EXT");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BARRIER-BIT-EXT", (GLenum) GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT, "GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT");
#endif
#if defined(GL_ATOMIC_COUNTER_BARRIER_BIT_EXT)
defconsti(env, "GL-ATOMIC-COUNTER-BARRIER-BIT-EXT", (GLenum) GL_ATOMIC_COUNTER_BARRIER_BIT_EXT, "GL_ATOMIC_COUNTER_BARRIER_BIT_EXT");
#endif
#if defined(GL_ALL_BARRIER_BITS_EXT)
defconsti(env, "GL-ALL-BARRIER-BITS-EXT", (GLenum) GL_ALL_BARRIER_BITS_EXT, "GL_ALL_BARRIER_BITS_EXT");
#endif
#if defined(GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT)
defconsti(env, "GL-MAX-SHADER-PIXEL-LOCAL-STORAGE-FAST-SIZE-EXT", (GLenum) GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT, "GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT");
#endif
#if defined(GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT)
defconsti(env, "GL-MAX-SHADER-PIXEL-LOCAL-STORAGE-SIZE-EXT", (GLenum) GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT, "GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT");
#endif
#if defined(GL_SHADER_PIXEL_LOCAL_STORAGE_EXT)
defconsti(env, "GL-SHADER-PIXEL-LOCAL-STORAGE-EXT", (GLenum) GL_SHADER_PIXEL_LOCAL_STORAGE_EXT, "GL_SHADER_PIXEL_LOCAL_STORAGE_EXT");
#endif
#if defined(GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_FAST_SIZE_EXT)
defconsti(env, "GL-MAX-SHADER-COMBINED-LOCAL-STORAGE-FAST-SIZE-EXT", (GLenum) GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_FAST_SIZE_EXT, "GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_FAST_SIZE_EXT");
#endif
#if defined(GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT)
defconsti(env, "GL-MAX-SHADER-COMBINED-LOCAL-STORAGE-SIZE-EXT", (GLenum) GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT, "GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-INSUFFICIENT-SHADER-COMBINED-LOCAL-STORAGE-EXT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT, "GL_FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT");
#endif
#if defined(GL_TEXTURE_COMPARE_MODE_EXT)
defconsti(env, "GL-TEXTURE-COMPARE-MODE-EXT", (GLenum) GL_TEXTURE_COMPARE_MODE_EXT, "GL_TEXTURE_COMPARE_MODE_EXT");
#endif
#if defined(GL_TEXTURE_COMPARE_FUNC_EXT)
defconsti(env, "GL-TEXTURE-COMPARE-FUNC-EXT", (GLenum) GL_TEXTURE_COMPARE_FUNC_EXT, "GL_TEXTURE_COMPARE_FUNC_EXT");
#endif
#if defined(GL_COMPARE_REF_TO_TEXTURE_EXT)
defconsti(env, "GL-COMPARE-REF-TO-TEXTURE-EXT", (GLenum) GL_COMPARE_REF_TO_TEXTURE_EXT, "GL_COMPARE_REF_TO_TEXTURE_EXT");
#endif
#if defined(GL_SAMPLER_2D_SHADOW_EXT)
defconsti(env, "GL-SAMPLER-2D-SHADOW-EXT", (GLenum) GL_SAMPLER_2D_SHADOW_EXT, "GL_SAMPLER_2D_SHADOW_EXT");
#endif
#if defined(GL_SHARED_TEXTURE_PALETTE_EXT)
defconsti(env, "GL-SHARED-TEXTURE-PALETTE-EXT", (GLenum) GL_SHARED_TEXTURE_PALETTE_EXT, "GL_SHARED_TEXTURE_PALETTE_EXT");
#endif
#if defined(GL_TEXTURE_SPARSE_EXT)
defconsti(env, "GL-TEXTURE-SPARSE-EXT", (GLenum) GL_TEXTURE_SPARSE_EXT, "GL_TEXTURE_SPARSE_EXT");
#endif
#if defined(GL_VIRTUAL_PAGE_SIZE_INDEX_EXT)
defconsti(env, "GL-VIRTUAL-PAGE-SIZE-INDEX-EXT", (GLenum) GL_VIRTUAL_PAGE_SIZE_INDEX_EXT, "GL_VIRTUAL_PAGE_SIZE_INDEX_EXT");
#endif
#if defined(GL_NUM_SPARSE_LEVELS_EXT)
defconsti(env, "GL-NUM-SPARSE-LEVELS-EXT", (GLenum) GL_NUM_SPARSE_LEVELS_EXT, "GL_NUM_SPARSE_LEVELS_EXT");
#endif
#if defined(GL_NUM_VIRTUAL_PAGE_SIZES_EXT)
defconsti(env, "GL-NUM-VIRTUAL-PAGE-SIZES-EXT", (GLenum) GL_NUM_VIRTUAL_PAGE_SIZES_EXT, "GL_NUM_VIRTUAL_PAGE_SIZES_EXT");
#endif
#if defined(GL_VIRTUAL_PAGE_SIZE_X_EXT)
defconsti(env, "GL-VIRTUAL-PAGE-SIZE-X-EXT", (GLenum) GL_VIRTUAL_PAGE_SIZE_X_EXT, "GL_VIRTUAL_PAGE_SIZE_X_EXT");
#endif
#if defined(GL_VIRTUAL_PAGE_SIZE_Y_EXT)
defconsti(env, "GL-VIRTUAL-PAGE-SIZE-Y-EXT", (GLenum) GL_VIRTUAL_PAGE_SIZE_Y_EXT, "GL_VIRTUAL_PAGE_SIZE_Y_EXT");
#endif
#if defined(GL_VIRTUAL_PAGE_SIZE_Z_EXT)
defconsti(env, "GL-VIRTUAL-PAGE-SIZE-Z-EXT", (GLenum) GL_VIRTUAL_PAGE_SIZE_Z_EXT, "GL_VIRTUAL_PAGE_SIZE_Z_EXT");
#endif
#if defined(GL_TEXTURE_2D)
defconsti(env, "GL-TEXTURE-2D", (GLenum) GL_TEXTURE_2D, "GL_TEXTURE_2D");
#endif
#if defined(GL_TEXTURE_2D_ARRAY)
defconsti(env, "GL-TEXTURE-2D-ARRAY", (GLenum) GL_TEXTURE_2D_ARRAY, "GL_TEXTURE_2D_ARRAY");
#endif
#if defined(GL_TEXTURE_CUBE_MAP)
defconsti(env, "GL-TEXTURE-CUBE-MAP", (GLenum) GL_TEXTURE_CUBE_MAP, "GL_TEXTURE_CUBE_MAP");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_ARRAY_OES)
defconsti(env, "GL-TEXTURE-CUBE-MAP-ARRAY-OES", (GLenum) GL_TEXTURE_CUBE_MAP_ARRAY_OES, "GL_TEXTURE_CUBE_MAP_ARRAY_OES");
#endif
#if defined(GL_TEXTURE_3D)
defconsti(env, "GL-TEXTURE-3D", (GLenum) GL_TEXTURE_3D, "GL_TEXTURE_3D");
#endif
#if defined(GL_MAX_SPARSE_TEXTURE_SIZE_EXT)
defconsti(env, "GL-MAX-SPARSE-TEXTURE-SIZE-EXT", (GLenum) GL_MAX_SPARSE_TEXTURE_SIZE_EXT, "GL_MAX_SPARSE_TEXTURE_SIZE_EXT");
#endif
#if defined(GL_MAX_SPARSE_3D_TEXTURE_SIZE_EXT)
defconsti(env, "GL-MAX-SPARSE-3D-TEXTURE-SIZE-EXT", (GLenum) GL_MAX_SPARSE_3D_TEXTURE_SIZE_EXT, "GL_MAX_SPARSE_3D_TEXTURE_SIZE_EXT");
#endif
#if defined(GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT)
defconsti(env, "GL-MAX-SPARSE-ARRAY-TEXTURE-LAYERS-EXT", (GLenum) GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT, "GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT");
#endif
#if defined(GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT)
defconsti(env, "GL-SPARSE-TEXTURE-FULL-ARRAY-CUBE-MIPMAPS-EXT", (GLenum) GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT, "GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT");
#endif
#if defined(GL_STENCIL_TAG_BITS_EXT)
defconsti(env, "GL-STENCIL-TAG-BITS-EXT", (GLenum) GL_STENCIL_TAG_BITS_EXT, "GL_STENCIL_TAG_BITS_EXT");
#endif
#if defined(GL_STENCIL_CLEAR_TAG_VALUE_EXT)
defconsti(env, "GL-STENCIL-CLEAR-TAG-VALUE-EXT", (GLenum) GL_STENCIL_CLEAR_TAG_VALUE_EXT, "GL_STENCIL_CLEAR_TAG_VALUE_EXT");
#endif
#if defined(GL_STENCIL_TEST_TWO_SIDE_EXT)
defconsti(env, "GL-STENCIL-TEST-TWO-SIDE-EXT", (GLenum) GL_STENCIL_TEST_TWO_SIDE_EXT, "GL_STENCIL_TEST_TWO_SIDE_EXT");
#endif
#if defined(GL_ACTIVE_STENCIL_FACE_EXT)
defconsti(env, "GL-ACTIVE-STENCIL-FACE-EXT", (GLenum) GL_ACTIVE_STENCIL_FACE_EXT, "GL_ACTIVE_STENCIL_FACE_EXT");
#endif
#if defined(GL_INCR_WRAP_EXT)
defconsti(env, "GL-INCR-WRAP-EXT", (GLenum) GL_INCR_WRAP_EXT, "GL_INCR_WRAP_EXT");
#endif
#if defined(GL_DECR_WRAP_EXT)
defconsti(env, "GL-DECR-WRAP-EXT", (GLenum) GL_DECR_WRAP_EXT, "GL_DECR_WRAP_EXT");
#endif
#if defined(GL_PATCHES_EXT)
defconsti(env, "GL-PATCHES-EXT", (GLenum) GL_PATCHES_EXT, "GL_PATCHES_EXT");
#endif
#if defined(GL_PATCH_VERTICES_EXT)
defconsti(env, "GL-PATCH-VERTICES-EXT", (GLenum) GL_PATCH_VERTICES_EXT, "GL_PATCH_VERTICES_EXT");
#endif
#if defined(GL_TESS_CONTROL_OUTPUT_VERTICES_EXT)
defconsti(env, "GL-TESS-CONTROL-OUTPUT-VERTICES-EXT", (GLenum) GL_TESS_CONTROL_OUTPUT_VERTICES_EXT, "GL_TESS_CONTROL_OUTPUT_VERTICES_EXT");
#endif
#if defined(GL_TESS_GEN_MODE_EXT)
defconsti(env, "GL-TESS-GEN-MODE-EXT", (GLenum) GL_TESS_GEN_MODE_EXT, "GL_TESS_GEN_MODE_EXT");
#endif
#if defined(GL_TESS_GEN_SPACING_EXT)
defconsti(env, "GL-TESS-GEN-SPACING-EXT", (GLenum) GL_TESS_GEN_SPACING_EXT, "GL_TESS_GEN_SPACING_EXT");
#endif
#if defined(GL_TESS_GEN_VERTEX_ORDER_EXT)
defconsti(env, "GL-TESS-GEN-VERTEX-ORDER-EXT", (GLenum) GL_TESS_GEN_VERTEX_ORDER_EXT, "GL_TESS_GEN_VERTEX_ORDER_EXT");
#endif
#if defined(GL_TESS_GEN_POINT_MODE_EXT)
defconsti(env, "GL-TESS-GEN-POINT-MODE-EXT", (GLenum) GL_TESS_GEN_POINT_MODE_EXT, "GL_TESS_GEN_POINT_MODE_EXT");
#endif
#if defined(GL_TRIANGLES)
defconsti(env, "GL-TRIANGLES", (GLenum) GL_TRIANGLES, "GL_TRIANGLES");
#endif
#if defined(GL_ISOLINES_EXT)
defconsti(env, "GL-ISOLINES-EXT", (GLenum) GL_ISOLINES_EXT, "GL_ISOLINES_EXT");
#endif
#if defined(GL_QUADS_EXT)
defconsti(env, "GL-QUADS-EXT", (GLenum) GL_QUADS_EXT, "GL_QUADS_EXT");
#endif
#if defined(GL_EQUAL)
defconsti(env, "GL-EQUAL", (GLenum) GL_EQUAL, "GL_EQUAL");
#endif
#if defined(GL_FRACTIONAL_ODD_EXT)
defconsti(env, "GL-FRACTIONAL-ODD-EXT", (GLenum) GL_FRACTIONAL_ODD_EXT, "GL_FRACTIONAL_ODD_EXT");
#endif
#if defined(GL_FRACTIONAL_EVEN_EXT)
defconsti(env, "GL-FRACTIONAL-EVEN-EXT", (GLenum) GL_FRACTIONAL_EVEN_EXT, "GL_FRACTIONAL_EVEN_EXT");
#endif
#if defined(GL_CCW)
defconsti(env, "GL-CCW", (GLenum) GL_CCW, "GL_CCW");
#endif
#if defined(GL_CW)
defconsti(env, "GL-CW", (GLenum) GL_CW, "GL_CW");
#endif
#if defined(GL_MAX_PATCH_VERTICES_EXT)
defconsti(env, "GL-MAX-PATCH-VERTICES-EXT", (GLenum) GL_MAX_PATCH_VERTICES_EXT, "GL_MAX_PATCH_VERTICES_EXT");
#endif
#if defined(GL_MAX_TESS_GEN_LEVEL_EXT)
defconsti(env, "GL-MAX-TESS-GEN-LEVEL-EXT", (GLenum) GL_MAX_TESS_GEN_LEVEL_EXT, "GL_MAX_TESS_GEN_LEVEL_EXT");
#endif
#if defined(GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT)
defconsti(env, "GL-MAX-TESS-CONTROL-UNIFORM-COMPONENTS-EXT", (GLenum) GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT, "GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT)
defconsti(env, "GL-MAX-TESS-EVALUATION-UNIFORM-COMPONENTS-EXT", (GLenum) GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT, "GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT)
defconsti(env, "GL-MAX-TESS-CONTROL-TEXTURE-IMAGE-UNITS-EXT", (GLenum) GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT, "GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT");
#endif
#if defined(GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT)
defconsti(env, "GL-MAX-TESS-EVALUATION-TEXTURE-IMAGE-UNITS-EXT", (GLenum) GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT, "GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT");
#endif
#if defined(GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT)
defconsti(env, "GL-MAX-TESS-CONTROL-OUTPUT-COMPONENTS-EXT", (GLenum) GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT, "GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_TESS_PATCH_COMPONENTS_EXT)
defconsti(env, "GL-MAX-TESS-PATCH-COMPONENTS-EXT", (GLenum) GL_MAX_TESS_PATCH_COMPONENTS_EXT, "GL_MAX_TESS_PATCH_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT)
defconsti(env, "GL-MAX-TESS-CONTROL-TOTAL-OUTPUT-COMPONENTS-EXT", (GLenum) GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT, "GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT)
defconsti(env, "GL-MAX-TESS-EVALUATION-OUTPUT-COMPONENTS-EXT", (GLenum) GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT, "GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT)
defconsti(env, "GL-MAX-TESS-CONTROL-UNIFORM-BLOCKS-EXT", (GLenum) GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT, "GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT");
#endif
#if defined(GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT)
defconsti(env, "GL-MAX-TESS-EVALUATION-UNIFORM-BLOCKS-EXT", (GLenum) GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT, "GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT");
#endif
#if defined(GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT)
defconsti(env, "GL-MAX-TESS-CONTROL-INPUT-COMPONENTS-EXT", (GLenum) GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT, "GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT)
defconsti(env, "GL-MAX-TESS-EVALUATION-INPUT-COMPONENTS-EXT", (GLenum) GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT, "GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT)
defconsti(env, "GL-MAX-COMBINED-TESS-CONTROL-UNIFORM-COMPONENTS-EXT", (GLenum) GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT, "GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT)
defconsti(env, "GL-MAX-COMBINED-TESS-EVALUATION-UNIFORM-COMPONENTS-EXT", (GLenum) GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT, "GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT)
defconsti(env, "GL-MAX-TESS-CONTROL-ATOMIC-COUNTER-BUFFERS-EXT", (GLenum) GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT, "GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT");
#endif
#if defined(GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT)
defconsti(env, "GL-MAX-TESS-EVALUATION-ATOMIC-COUNTER-BUFFERS-EXT", (GLenum) GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT, "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT");
#endif
#if defined(GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT)
defconsti(env, "GL-MAX-TESS-CONTROL-ATOMIC-COUNTERS-EXT", (GLenum) GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT, "GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT");
#endif
#if defined(GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT)
defconsti(env, "GL-MAX-TESS-EVALUATION-ATOMIC-COUNTERS-EXT", (GLenum) GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT, "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT");
#endif
#if defined(GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT)
defconsti(env, "GL-MAX-TESS-CONTROL-IMAGE-UNIFORMS-EXT", (GLenum) GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT, "GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT");
#endif
#if defined(GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT)
defconsti(env, "GL-MAX-TESS-EVALUATION-IMAGE-UNIFORMS-EXT", (GLenum) GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT, "GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT");
#endif
#if defined(GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT)
defconsti(env, "GL-MAX-TESS-CONTROL-SHADER-STORAGE-BLOCKS-EXT", (GLenum) GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT, "GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT");
#endif
#if defined(GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT)
defconsti(env, "GL-MAX-TESS-EVALUATION-SHADER-STORAGE-BLOCKS-EXT", (GLenum) GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT, "GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT");
#endif
#if defined(GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED)
defconsti(env, "GL-PRIMITIVE-RESTART-FOR-PATCHES-SUPPORTED", (GLenum) GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED, "GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED");
#endif
#if defined(GL_IS_PER_PATCH_EXT)
defconsti(env, "GL-IS-PER-PATCH-EXT", (GLenum) GL_IS_PER_PATCH_EXT, "GL_IS_PER_PATCH_EXT");
#endif
#if defined(GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT)
defconsti(env, "GL-REFERENCED-BY-TESS-CONTROL-SHADER-EXT", (GLenum) GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT, "GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT");
#endif
#if defined(GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT)
defconsti(env, "GL-REFERENCED-BY-TESS-EVALUATION-SHADER-EXT", (GLenum) GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT, "GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT");
#endif
#if defined(GL_TESS_CONTROL_SHADER_EXT)
defconsti(env, "GL-TESS-CONTROL-SHADER-EXT", (GLenum) GL_TESS_CONTROL_SHADER_EXT, "GL_TESS_CONTROL_SHADER_EXT");
#endif
#if defined(GL_TESS_EVALUATION_SHADER_EXT)
defconsti(env, "GL-TESS-EVALUATION-SHADER-EXT", (GLenum) GL_TESS_EVALUATION_SHADER_EXT, "GL_TESS_EVALUATION_SHADER_EXT");
#endif
#if defined(GL_TESS_CONTROL_SHADER_BIT_EXT)
defconsti(env, "GL-TESS-CONTROL-SHADER-BIT-EXT", (GLenum) GL_TESS_CONTROL_SHADER_BIT_EXT, "GL_TESS_CONTROL_SHADER_BIT_EXT");
#endif
#if defined(GL_TESS_EVALUATION_SHADER_BIT_EXT)
defconsti(env, "GL-TESS-EVALUATION-SHADER-BIT-EXT", (GLenum) GL_TESS_EVALUATION_SHADER_BIT_EXT, "GL_TESS_EVALUATION_SHADER_BIT_EXT");
#endif
#if defined(GL_ALPHA4_EXT)
defconsti(env, "GL-ALPHA4-EXT", (GLenum) GL_ALPHA4_EXT, "GL_ALPHA4_EXT");
#endif
#if defined(GL_ALPHA8_EXT)
defconsti(env, "GL-ALPHA8-EXT", (GLenum) GL_ALPHA8_EXT, "GL_ALPHA8_EXT");
#endif
#if defined(GL_ALPHA12_EXT)
defconsti(env, "GL-ALPHA12-EXT", (GLenum) GL_ALPHA12_EXT, "GL_ALPHA12_EXT");
#endif
#if defined(GL_ALPHA16_EXT)
defconsti(env, "GL-ALPHA16-EXT", (GLenum) GL_ALPHA16_EXT, "GL_ALPHA16_EXT");
#endif
#if defined(GL_LUMINANCE4_EXT)
defconsti(env, "GL-LUMINANCE4-EXT", (GLenum) GL_LUMINANCE4_EXT, "GL_LUMINANCE4_EXT");
#endif
#if defined(GL_LUMINANCE8_EXT)
defconsti(env, "GL-LUMINANCE8-EXT", (GLenum) GL_LUMINANCE8_EXT, "GL_LUMINANCE8_EXT");
#endif
#if defined(GL_LUMINANCE12_EXT)
defconsti(env, "GL-LUMINANCE12-EXT", (GLenum) GL_LUMINANCE12_EXT, "GL_LUMINANCE12_EXT");
#endif
#if defined(GL_LUMINANCE16_EXT)
defconsti(env, "GL-LUMINANCE16-EXT", (GLenum) GL_LUMINANCE16_EXT, "GL_LUMINANCE16_EXT");
#endif
#if defined(GL_LUMINANCE4_ALPHA4_EXT)
defconsti(env, "GL-LUMINANCE4-ALPHA4-EXT", (GLenum) GL_LUMINANCE4_ALPHA4_EXT, "GL_LUMINANCE4_ALPHA4_EXT");
#endif
#if defined(GL_LUMINANCE6_ALPHA2_EXT)
defconsti(env, "GL-LUMINANCE6-ALPHA2-EXT", (GLenum) GL_LUMINANCE6_ALPHA2_EXT, "GL_LUMINANCE6_ALPHA2_EXT");
#endif
#if defined(GL_LUMINANCE8_ALPHA8_EXT)
defconsti(env, "GL-LUMINANCE8-ALPHA8-EXT", (GLenum) GL_LUMINANCE8_ALPHA8_EXT, "GL_LUMINANCE8_ALPHA8_EXT");
#endif
#if defined(GL_LUMINANCE12_ALPHA4_EXT)
defconsti(env, "GL-LUMINANCE12-ALPHA4-EXT", (GLenum) GL_LUMINANCE12_ALPHA4_EXT, "GL_LUMINANCE12_ALPHA4_EXT");
#endif
#if defined(GL_LUMINANCE12_ALPHA12_EXT)
defconsti(env, "GL-LUMINANCE12-ALPHA12-EXT", (GLenum) GL_LUMINANCE12_ALPHA12_EXT, "GL_LUMINANCE12_ALPHA12_EXT");
#endif
#if defined(GL_LUMINANCE16_ALPHA16_EXT)
defconsti(env, "GL-LUMINANCE16-ALPHA16-EXT", (GLenum) GL_LUMINANCE16_ALPHA16_EXT, "GL_LUMINANCE16_ALPHA16_EXT");
#endif
#if defined(GL_INTENSITY_EXT)
defconsti(env, "GL-INTENSITY-EXT", (GLenum) GL_INTENSITY_EXT, "GL_INTENSITY_EXT");
#endif
#if defined(GL_INTENSITY4_EXT)
defconsti(env, "GL-INTENSITY4-EXT", (GLenum) GL_INTENSITY4_EXT, "GL_INTENSITY4_EXT");
#endif
#if defined(GL_INTENSITY8_EXT)
defconsti(env, "GL-INTENSITY8-EXT", (GLenum) GL_INTENSITY8_EXT, "GL_INTENSITY8_EXT");
#endif
#if defined(GL_INTENSITY12_EXT)
defconsti(env, "GL-INTENSITY12-EXT", (GLenum) GL_INTENSITY12_EXT, "GL_INTENSITY12_EXT");
#endif
#if defined(GL_INTENSITY16_EXT)
defconsti(env, "GL-INTENSITY16-EXT", (GLenum) GL_INTENSITY16_EXT, "GL_INTENSITY16_EXT");
#endif
#if defined(GL_RGB2_EXT)
defconsti(env, "GL-RGB2-EXT", (GLenum) GL_RGB2_EXT, "GL_RGB2_EXT");
#endif
#if defined(GL_RGB4_EXT)
defconsti(env, "GL-RGB4-EXT", (GLenum) GL_RGB4_EXT, "GL_RGB4_EXT");
#endif
#if defined(GL_RGB5_EXT)
defconsti(env, "GL-RGB5-EXT", (GLenum) GL_RGB5_EXT, "GL_RGB5_EXT");
#endif
#if defined(GL_RGB8_EXT)
defconsti(env, "GL-RGB8-EXT", (GLenum) GL_RGB8_EXT, "GL_RGB8_EXT");
#endif
#if defined(GL_RGB10_EXT)
defconsti(env, "GL-RGB10-EXT", (GLenum) GL_RGB10_EXT, "GL_RGB10_EXT");
#endif
#if defined(GL_RGB12_EXT)
defconsti(env, "GL-RGB12-EXT", (GLenum) GL_RGB12_EXT, "GL_RGB12_EXT");
#endif
#if defined(GL_RGB16_EXT)
defconsti(env, "GL-RGB16-EXT", (GLenum) GL_RGB16_EXT, "GL_RGB16_EXT");
#endif
#if defined(GL_RGBA2_EXT)
defconsti(env, "GL-RGBA2-EXT", (GLenum) GL_RGBA2_EXT, "GL_RGBA2_EXT");
#endif
#if defined(GL_RGBA4_EXT)
defconsti(env, "GL-RGBA4-EXT", (GLenum) GL_RGBA4_EXT, "GL_RGBA4_EXT");
#endif
#if defined(GL_RGB5_A1_EXT)
defconsti(env, "GL-RGB5-A1-EXT", (GLenum) GL_RGB5_A1_EXT, "GL_RGB5_A1_EXT");
#endif
#if defined(GL_RGBA8_EXT)
defconsti(env, "GL-RGBA8-EXT", (GLenum) GL_RGBA8_EXT, "GL_RGBA8_EXT");
#endif
#if defined(GL_RGB10_A2_EXT)
defconsti(env, "GL-RGB10-A2-EXT", (GLenum) GL_RGB10_A2_EXT, "GL_RGB10_A2_EXT");
#endif
#if defined(GL_RGBA12_EXT)
defconsti(env, "GL-RGBA12-EXT", (GLenum) GL_RGBA12_EXT, "GL_RGBA12_EXT");
#endif
#if defined(GL_RGBA16_EXT)
defconsti(env, "GL-RGBA16-EXT", (GLenum) GL_RGBA16_EXT, "GL_RGBA16_EXT");
#endif
#if defined(GL_TEXTURE_RED_SIZE_EXT)
defconsti(env, "GL-TEXTURE-RED-SIZE-EXT", (GLenum) GL_TEXTURE_RED_SIZE_EXT, "GL_TEXTURE_RED_SIZE_EXT");
#endif
#if defined(GL_TEXTURE_GREEN_SIZE_EXT)
defconsti(env, "GL-TEXTURE-GREEN-SIZE-EXT", (GLenum) GL_TEXTURE_GREEN_SIZE_EXT, "GL_TEXTURE_GREEN_SIZE_EXT");
#endif
#if defined(GL_TEXTURE_BLUE_SIZE_EXT)
defconsti(env, "GL-TEXTURE-BLUE-SIZE-EXT", (GLenum) GL_TEXTURE_BLUE_SIZE_EXT, "GL_TEXTURE_BLUE_SIZE_EXT");
#endif
#if defined(GL_TEXTURE_ALPHA_SIZE_EXT)
defconsti(env, "GL-TEXTURE-ALPHA-SIZE-EXT", (GLenum) GL_TEXTURE_ALPHA_SIZE_EXT, "GL_TEXTURE_ALPHA_SIZE_EXT");
#endif
#if defined(GL_TEXTURE_LUMINANCE_SIZE_EXT)
defconsti(env, "GL-TEXTURE-LUMINANCE-SIZE-EXT", (GLenum) GL_TEXTURE_LUMINANCE_SIZE_EXT, "GL_TEXTURE_LUMINANCE_SIZE_EXT");
#endif
#if defined(GL_TEXTURE_INTENSITY_SIZE_EXT)
defconsti(env, "GL-TEXTURE-INTENSITY-SIZE-EXT", (GLenum) GL_TEXTURE_INTENSITY_SIZE_EXT, "GL_TEXTURE_INTENSITY_SIZE_EXT");
#endif
#if defined(GL_REPLACE_EXT)
defconsti(env, "GL-REPLACE-EXT", (GLenum) GL_REPLACE_EXT, "GL_REPLACE_EXT");
#endif
#if defined(GL_PROXY_TEXTURE_1D_EXT)
defconsti(env, "GL-PROXY-TEXTURE-1D-EXT", (GLenum) GL_PROXY_TEXTURE_1D_EXT, "GL_PROXY_TEXTURE_1D_EXT");
#endif
#if defined(GL_PROXY_TEXTURE_2D_EXT)
defconsti(env, "GL-PROXY-TEXTURE-2D-EXT", (GLenum) GL_PROXY_TEXTURE_2D_EXT, "GL_PROXY_TEXTURE_2D_EXT");
#endif
#if defined(GL_TEXTURE_TOO_LARGE_EXT)
defconsti(env, "GL-TEXTURE-TOO-LARGE-EXT", (GLenum) GL_TEXTURE_TOO_LARGE_EXT, "GL_TEXTURE_TOO_LARGE_EXT");
#endif
#if defined(GL_PACK_SKIP_IMAGES_EXT)
defconsti(env, "GL-PACK-SKIP-IMAGES-EXT", (GLenum) GL_PACK_SKIP_IMAGES_EXT, "GL_PACK_SKIP_IMAGES_EXT");
#endif
#if defined(GL_PACK_IMAGE_HEIGHT_EXT)
defconsti(env, "GL-PACK-IMAGE-HEIGHT-EXT", (GLenum) GL_PACK_IMAGE_HEIGHT_EXT, "GL_PACK_IMAGE_HEIGHT_EXT");
#endif
#if defined(GL_UNPACK_SKIP_IMAGES_EXT)
defconsti(env, "GL-UNPACK-SKIP-IMAGES-EXT", (GLenum) GL_UNPACK_SKIP_IMAGES_EXT, "GL_UNPACK_SKIP_IMAGES_EXT");
#endif
#if defined(GL_UNPACK_IMAGE_HEIGHT_EXT)
defconsti(env, "GL-UNPACK-IMAGE-HEIGHT-EXT", (GLenum) GL_UNPACK_IMAGE_HEIGHT_EXT, "GL_UNPACK_IMAGE_HEIGHT_EXT");
#endif
#if defined(GL_TEXTURE_3D_EXT)
defconsti(env, "GL-TEXTURE-3D-EXT", (GLenum) GL_TEXTURE_3D_EXT, "GL_TEXTURE_3D_EXT");
#endif
#if defined(GL_PROXY_TEXTURE_3D_EXT)
defconsti(env, "GL-PROXY-TEXTURE-3D-EXT", (GLenum) GL_PROXY_TEXTURE_3D_EXT, "GL_PROXY_TEXTURE_3D_EXT");
#endif
#if defined(GL_TEXTURE_DEPTH_EXT)
defconsti(env, "GL-TEXTURE-DEPTH-EXT", (GLenum) GL_TEXTURE_DEPTH_EXT, "GL_TEXTURE_DEPTH_EXT");
#endif
#if defined(GL_TEXTURE_WRAP_R_EXT)
defconsti(env, "GL-TEXTURE-WRAP-R-EXT", (GLenum) GL_TEXTURE_WRAP_R_EXT, "GL_TEXTURE_WRAP_R_EXT");
#endif
#if defined(GL_MAX_3D_TEXTURE_SIZE_EXT)
defconsti(env, "GL-MAX-3D-TEXTURE-SIZE-EXT", (GLenum) GL_MAX_3D_TEXTURE_SIZE_EXT, "GL_MAX_3D_TEXTURE_SIZE_EXT");
#endif
#if defined(GL_TEXTURE_1D_ARRAY_EXT)
defconsti(env, "GL-TEXTURE-1D-ARRAY-EXT", (GLenum) GL_TEXTURE_1D_ARRAY_EXT, "GL_TEXTURE_1D_ARRAY_EXT");
#endif
#if defined(GL_PROXY_TEXTURE_1D_ARRAY_EXT)
defconsti(env, "GL-PROXY-TEXTURE-1D-ARRAY-EXT", (GLenum) GL_PROXY_TEXTURE_1D_ARRAY_EXT, "GL_PROXY_TEXTURE_1D_ARRAY_EXT");
#endif
#if defined(GL_TEXTURE_2D_ARRAY_EXT)
defconsti(env, "GL-TEXTURE-2D-ARRAY-EXT", (GLenum) GL_TEXTURE_2D_ARRAY_EXT, "GL_TEXTURE_2D_ARRAY_EXT");
#endif
#if defined(GL_PROXY_TEXTURE_2D_ARRAY_EXT)
defconsti(env, "GL-PROXY-TEXTURE-2D-ARRAY-EXT", (GLenum) GL_PROXY_TEXTURE_2D_ARRAY_EXT, "GL_PROXY_TEXTURE_2D_ARRAY_EXT");
#endif
#if defined(GL_TEXTURE_BINDING_1D_ARRAY_EXT)
defconsti(env, "GL-TEXTURE-BINDING-1D-ARRAY-EXT", (GLenum) GL_TEXTURE_BINDING_1D_ARRAY_EXT, "GL_TEXTURE_BINDING_1D_ARRAY_EXT");
#endif
#if defined(GL_TEXTURE_BINDING_2D_ARRAY_EXT)
defconsti(env, "GL-TEXTURE-BINDING-2D-ARRAY-EXT", (GLenum) GL_TEXTURE_BINDING_2D_ARRAY_EXT, "GL_TEXTURE_BINDING_2D_ARRAY_EXT");
#endif
#if defined(GL_MAX_ARRAY_TEXTURE_LAYERS_EXT)
defconsti(env, "GL-MAX-ARRAY-TEXTURE-LAYERS-EXT", (GLenum) GL_MAX_ARRAY_TEXTURE_LAYERS_EXT, "GL_MAX_ARRAY_TEXTURE_LAYERS_EXT");
#endif
#if defined(GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT)
defconsti(env, "GL-COMPARE-REF-DEPTH-TO-TEXTURE-EXT", (GLenum) GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT, "GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-LAYER-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT");
#endif
#if defined(GL_TEXTURE_BORDER_COLOR_EXT)
defconsti(env, "GL-TEXTURE-BORDER-COLOR-EXT", (GLenum) GL_TEXTURE_BORDER_COLOR_EXT, "GL_TEXTURE_BORDER_COLOR_EXT");
#endif
#if defined(GL_CLAMP_TO_BORDER_EXT)
defconsti(env, "GL-CLAMP-TO-BORDER-EXT", (GLenum) GL_CLAMP_TO_BORDER_EXT, "GL_CLAMP_TO_BORDER_EXT");
#endif
#if defined(GL_TEXTURE_BUFFER_EXT)
defconsti(env, "GL-TEXTURE-BUFFER-EXT", (GLenum) GL_TEXTURE_BUFFER_EXT, "GL_TEXTURE_BUFFER_EXT");
#endif
#if defined(GL_TEXTURE_BUFFER_BINDING_EXT)
defconsti(env, "GL-TEXTURE-BUFFER-BINDING-EXT", (GLenum) GL_TEXTURE_BUFFER_BINDING_EXT, "GL_TEXTURE_BUFFER_BINDING_EXT");
#endif
#if defined(GL_MAX_TEXTURE_BUFFER_SIZE_EXT)
defconsti(env, "GL-MAX-TEXTURE-BUFFER-SIZE-EXT", (GLenum) GL_MAX_TEXTURE_BUFFER_SIZE_EXT, "GL_MAX_TEXTURE_BUFFER_SIZE_EXT");
#endif
#if defined(GL_TEXTURE_BINDING_BUFFER_EXT)
defconsti(env, "GL-TEXTURE-BINDING-BUFFER-EXT", (GLenum) GL_TEXTURE_BINDING_BUFFER_EXT, "GL_TEXTURE_BINDING_BUFFER_EXT");
#endif
#if defined(GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT)
defconsti(env, "GL-TEXTURE-BUFFER-DATA-STORE-BINDING-EXT", (GLenum) GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT, "GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT");
#endif
#if defined(GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT)
defconsti(env, "GL-TEXTURE-BUFFER-OFFSET-ALIGNMENT-EXT", (GLenum) GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT, "GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT");
#endif
#if defined(GL_SAMPLER_BUFFER_EXT)
defconsti(env, "GL-SAMPLER-BUFFER-EXT", (GLenum) GL_SAMPLER_BUFFER_EXT, "GL_SAMPLER_BUFFER_EXT");
#endif
#if defined(GL_INT_SAMPLER_BUFFER_EXT)
defconsti(env, "GL-INT-SAMPLER-BUFFER-EXT", (GLenum) GL_INT_SAMPLER_BUFFER_EXT, "GL_INT_SAMPLER_BUFFER_EXT");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-BUFFER-EXT", (GLenum) GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT, "GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT");
#endif
#if defined(GL_IMAGE_BUFFER_EXT)
defconsti(env, "GL-IMAGE-BUFFER-EXT", (GLenum) GL_IMAGE_BUFFER_EXT, "GL_IMAGE_BUFFER_EXT");
#endif
#if defined(GL_INT_IMAGE_BUFFER_EXT)
defconsti(env, "GL-INT-IMAGE-BUFFER-EXT", (GLenum) GL_INT_IMAGE_BUFFER_EXT, "GL_INT_IMAGE_BUFFER_EXT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_BUFFER_EXT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-BUFFER-EXT", (GLenum) GL_UNSIGNED_INT_IMAGE_BUFFER_EXT, "GL_UNSIGNED_INT_IMAGE_BUFFER_EXT");
#endif
#if defined(GL_TEXTURE_BUFFER_OFFSET_EXT)
defconsti(env, "GL-TEXTURE-BUFFER-OFFSET-EXT", (GLenum) GL_TEXTURE_BUFFER_OFFSET_EXT, "GL_TEXTURE_BUFFER_OFFSET_EXT");
#endif
#if defined(GL_TEXTURE_BUFFER_SIZE_EXT)
defconsti(env, "GL-TEXTURE-BUFFER-SIZE-EXT", (GLenum) GL_TEXTURE_BUFFER_SIZE_EXT, "GL_TEXTURE_BUFFER_SIZE_EXT");
#endif
#if defined(GL_TEXTURE_BUFFER_EXT)
defconsti(env, "GL-TEXTURE-BUFFER-EXT", (GLenum) GL_TEXTURE_BUFFER_EXT, "GL_TEXTURE_BUFFER_EXT");
#endif
#if defined(GL_MAX_TEXTURE_BUFFER_SIZE_EXT)
defconsti(env, "GL-MAX-TEXTURE-BUFFER-SIZE-EXT", (GLenum) GL_MAX_TEXTURE_BUFFER_SIZE_EXT, "GL_MAX_TEXTURE_BUFFER_SIZE_EXT");
#endif
#if defined(GL_TEXTURE_BINDING_BUFFER_EXT)
defconsti(env, "GL-TEXTURE-BINDING-BUFFER-EXT", (GLenum) GL_TEXTURE_BINDING_BUFFER_EXT, "GL_TEXTURE_BINDING_BUFFER_EXT");
#endif
#if defined(GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT)
defconsti(env, "GL-TEXTURE-BUFFER-DATA-STORE-BINDING-EXT", (GLenum) GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT, "GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT");
#endif
#if defined(GL_TEXTURE_BUFFER_FORMAT_EXT)
defconsti(env, "GL-TEXTURE-BUFFER-FORMAT-EXT", (GLenum) GL_TEXTURE_BUFFER_FORMAT_EXT, "GL_TEXTURE_BUFFER_FORMAT_EXT");
#endif
#if defined(GL_TEXTURE_ASTC_DECODE_PRECISION_EXT)
defconsti(env, "GL-TEXTURE-ASTC-DECODE-PRECISION-EXT", (GLenum) GL_TEXTURE_ASTC_DECODE_PRECISION_EXT, "GL_TEXTURE_ASTC_DECODE_PRECISION_EXT");
#endif
#if defined(GL_COMPRESSED_RGBA_BPTC_UNORM_EXT)
defconsti(env, "GL-COMPRESSED-RGBA-BPTC-UNORM-EXT", (GLenum) GL_COMPRESSED_RGBA_BPTC_UNORM_EXT, "GL_COMPRESSED_RGBA_BPTC_UNORM_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-BPTC-UNORM-EXT", (GLenum) GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT, "GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT");
#endif
#if defined(GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT)
defconsti(env, "GL-COMPRESSED-RGB-BPTC-SIGNED-FLOAT-EXT", (GLenum) GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT, "GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT");
#endif
#if defined(GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT)
defconsti(env, "GL-COMPRESSED-RGB-BPTC-UNSIGNED-FLOAT-EXT", (GLenum) GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT, "GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT");
#endif
#if defined(GL_COMPRESSED_RGB_S3TC_DXT1_EXT)
defconsti(env, "GL-COMPRESSED-RGB-S3TC-DXT1-EXT", (GLenum) GL_COMPRESSED_RGB_S3TC_DXT1_EXT, "GL_COMPRESSED_RGB_S3TC_DXT1_EXT");
#endif
#if defined(GL_COMPRESSED_RGBA_S3TC_DXT1_EXT)
defconsti(env, "GL-COMPRESSED-RGBA-S3TC-DXT1-EXT", (GLenum) GL_COMPRESSED_RGBA_S3TC_DXT1_EXT, "GL_COMPRESSED_RGBA_S3TC_DXT1_EXT");
#endif
#if defined(GL_COMPRESSED_LUMINANCE_LATC1_EXT)
defconsti(env, "GL-COMPRESSED-LUMINANCE-LATC1-EXT", (GLenum) GL_COMPRESSED_LUMINANCE_LATC1_EXT, "GL_COMPRESSED_LUMINANCE_LATC1_EXT");
#endif
#if defined(GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT)
defconsti(env, "GL-COMPRESSED-SIGNED-LUMINANCE-LATC1-EXT", (GLenum) GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT, "GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT");
#endif
#if defined(GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT)
defconsti(env, "GL-COMPRESSED-LUMINANCE-ALPHA-LATC2-EXT", (GLenum) GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT, "GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT");
#endif
#if defined(GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT)
defconsti(env, "GL-COMPRESSED-SIGNED-LUMINANCE-ALPHA-LATC2-EXT", (GLenum) GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT, "GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT");
#endif
#if defined(GL_COMPRESSED_RED_RGTC1_EXT)
defconsti(env, "GL-COMPRESSED-RED-RGTC1-EXT", (GLenum) GL_COMPRESSED_RED_RGTC1_EXT, "GL_COMPRESSED_RED_RGTC1_EXT");
#endif
#if defined(GL_COMPRESSED_SIGNED_RED_RGTC1_EXT)
defconsti(env, "GL-COMPRESSED-SIGNED-RED-RGTC1-EXT", (GLenum) GL_COMPRESSED_SIGNED_RED_RGTC1_EXT, "GL_COMPRESSED_SIGNED_RED_RGTC1_EXT");
#endif
#if defined(GL_COMPRESSED_RED_GREEN_RGTC2_EXT)
defconsti(env, "GL-COMPRESSED-RED-GREEN-RGTC2-EXT", (GLenum) GL_COMPRESSED_RED_GREEN_RGTC2_EXT, "GL_COMPRESSED_RED_GREEN_RGTC2_EXT");
#endif
#if defined(GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT)
defconsti(env, "GL-COMPRESSED-SIGNED-RED-GREEN-RGTC2-EXT", (GLenum) GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT, "GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT");
#endif
#if defined(GL_COMPRESSED_RGB_S3TC_DXT1_EXT)
defconsti(env, "GL-COMPRESSED-RGB-S3TC-DXT1-EXT", (GLenum) GL_COMPRESSED_RGB_S3TC_DXT1_EXT, "GL_COMPRESSED_RGB_S3TC_DXT1_EXT");
#endif
#if defined(GL_COMPRESSED_RGBA_S3TC_DXT1_EXT)
defconsti(env, "GL-COMPRESSED-RGBA-S3TC-DXT1-EXT", (GLenum) GL_COMPRESSED_RGBA_S3TC_DXT1_EXT, "GL_COMPRESSED_RGBA_S3TC_DXT1_EXT");
#endif
#if defined(GL_COMPRESSED_RGBA_S3TC_DXT3_EXT)
defconsti(env, "GL-COMPRESSED-RGBA-S3TC-DXT3-EXT", (GLenum) GL_COMPRESSED_RGBA_S3TC_DXT3_EXT, "GL_COMPRESSED_RGBA_S3TC_DXT3_EXT");
#endif
#if defined(GL_COMPRESSED_RGBA_S3TC_DXT5_EXT)
defconsti(env, "GL-COMPRESSED-RGBA-S3TC-DXT5-EXT", (GLenum) GL_COMPRESSED_RGBA_S3TC_DXT5_EXT, "GL_COMPRESSED_RGBA_S3TC_DXT5_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_S3TC_DXT1_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-S3TC-DXT1-EXT", (GLenum) GL_COMPRESSED_SRGB_S3TC_DXT1_EXT, "GL_COMPRESSED_SRGB_S3TC_DXT1_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-S3TC-DXT1-EXT", (GLenum) GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT, "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-S3TC-DXT3-EXT", (GLenum) GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT, "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-S3TC-DXT5-EXT", (GLenum) GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT, "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT");
#endif
#if defined(GL_NORMAL_MAP_EXT)
defconsti(env, "GL-NORMAL-MAP-EXT", (GLenum) GL_NORMAL_MAP_EXT, "GL_NORMAL_MAP_EXT");
#endif
#if defined(GL_REFLECTION_MAP_EXT)
defconsti(env, "GL-REFLECTION-MAP-EXT", (GLenum) GL_REFLECTION_MAP_EXT, "GL_REFLECTION_MAP_EXT");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_EXT)
defconsti(env, "GL-TEXTURE-CUBE-MAP-EXT", (GLenum) GL_TEXTURE_CUBE_MAP_EXT, "GL_TEXTURE_CUBE_MAP_EXT");
#endif
#if defined(GL_TEXTURE_BINDING_CUBE_MAP_EXT)
defconsti(env, "GL-TEXTURE-BINDING-CUBE-MAP-EXT", (GLenum) GL_TEXTURE_BINDING_CUBE_MAP_EXT, "GL_TEXTURE_BINDING_CUBE_MAP_EXT");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-X-EXT", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT, "GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-X-EXT", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT, "GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-Y-EXT", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT, "GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-Y-EXT", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-Z-EXT", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT, "GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-Z-EXT", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT");
#endif
#if defined(GL_PROXY_TEXTURE_CUBE_MAP_EXT)
defconsti(env, "GL-PROXY-TEXTURE-CUBE-MAP-EXT", (GLenum) GL_PROXY_TEXTURE_CUBE_MAP_EXT, "GL_PROXY_TEXTURE_CUBE_MAP_EXT");
#endif
#if defined(GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT)
defconsti(env, "GL-MAX-CUBE-MAP-TEXTURE-SIZE-EXT", (GLenum) GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT, "GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_ARRAY_EXT)
defconsti(env, "GL-TEXTURE-CUBE-MAP-ARRAY-EXT", (GLenum) GL_TEXTURE_CUBE_MAP_ARRAY_EXT, "GL_TEXTURE_CUBE_MAP_ARRAY_EXT");
#endif
#if defined(GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT)
defconsti(env, "GL-TEXTURE-BINDING-CUBE-MAP-ARRAY-EXT", (GLenum) GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT, "GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT");
#endif
#if defined(GL_SAMPLER_CUBE_MAP_ARRAY_EXT)
defconsti(env, "GL-SAMPLER-CUBE-MAP-ARRAY-EXT", (GLenum) GL_SAMPLER_CUBE_MAP_ARRAY_EXT, "GL_SAMPLER_CUBE_MAP_ARRAY_EXT");
#endif
#if defined(GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT)
defconsti(env, "GL-SAMPLER-CUBE-MAP-ARRAY-SHADOW-EXT", (GLenum) GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT, "GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT");
#endif
#if defined(GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT)
defconsti(env, "GL-INT-SAMPLER-CUBE-MAP-ARRAY-EXT", (GLenum) GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT, "GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-CUBE-MAP-ARRAY-EXT", (GLenum) GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT, "GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT");
#endif
#if defined(GL_IMAGE_CUBE_MAP_ARRAY_EXT)
defconsti(env, "GL-IMAGE-CUBE-MAP-ARRAY-EXT", (GLenum) GL_IMAGE_CUBE_MAP_ARRAY_EXT, "GL_IMAGE_CUBE_MAP_ARRAY_EXT");
#endif
#if defined(GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT)
defconsti(env, "GL-INT-IMAGE-CUBE-MAP-ARRAY-EXT", (GLenum) GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT, "GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-CUBE-MAP-ARRAY-EXT", (GLenum) GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT, "GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT");
#endif
#if defined(GL_COMBINE_EXT)
defconsti(env, "GL-COMBINE-EXT", (GLenum) GL_COMBINE_EXT, "GL_COMBINE_EXT");
#endif
#if defined(GL_COMBINE_RGB_EXT)
defconsti(env, "GL-COMBINE-RGB-EXT", (GLenum) GL_COMBINE_RGB_EXT, "GL_COMBINE_RGB_EXT");
#endif
#if defined(GL_COMBINE_ALPHA_EXT)
defconsti(env, "GL-COMBINE-ALPHA-EXT", (GLenum) GL_COMBINE_ALPHA_EXT, "GL_COMBINE_ALPHA_EXT");
#endif
#if defined(GL_RGB_SCALE_EXT)
defconsti(env, "GL-RGB-SCALE-EXT", (GLenum) GL_RGB_SCALE_EXT, "GL_RGB_SCALE_EXT");
#endif
#if defined(GL_ADD_SIGNED_EXT)
defconsti(env, "GL-ADD-SIGNED-EXT", (GLenum) GL_ADD_SIGNED_EXT, "GL_ADD_SIGNED_EXT");
#endif
#if defined(GL_INTERPOLATE_EXT)
defconsti(env, "GL-INTERPOLATE-EXT", (GLenum) GL_INTERPOLATE_EXT, "GL_INTERPOLATE_EXT");
#endif
#if defined(GL_CONSTANT_EXT)
defconsti(env, "GL-CONSTANT-EXT", (GLenum) GL_CONSTANT_EXT, "GL_CONSTANT_EXT");
#endif
#if defined(GL_PRIMARY_COLOR_EXT)
defconsti(env, "GL-PRIMARY-COLOR-EXT", (GLenum) GL_PRIMARY_COLOR_EXT, "GL_PRIMARY_COLOR_EXT");
#endif
#if defined(GL_PREVIOUS_EXT)
defconsti(env, "GL-PREVIOUS-EXT", (GLenum) GL_PREVIOUS_EXT, "GL_PREVIOUS_EXT");
#endif
#if defined(GL_SOURCE0_RGB_EXT)
defconsti(env, "GL-SOURCE0-RGB-EXT", (GLenum) GL_SOURCE0_RGB_EXT, "GL_SOURCE0_RGB_EXT");
#endif
#if defined(GL_SOURCE1_RGB_EXT)
defconsti(env, "GL-SOURCE1-RGB-EXT", (GLenum) GL_SOURCE1_RGB_EXT, "GL_SOURCE1_RGB_EXT");
#endif
#if defined(GL_SOURCE2_RGB_EXT)
defconsti(env, "GL-SOURCE2-RGB-EXT", (GLenum) GL_SOURCE2_RGB_EXT, "GL_SOURCE2_RGB_EXT");
#endif
#if defined(GL_SOURCE0_ALPHA_EXT)
defconsti(env, "GL-SOURCE0-ALPHA-EXT", (GLenum) GL_SOURCE0_ALPHA_EXT, "GL_SOURCE0_ALPHA_EXT");
#endif
#if defined(GL_SOURCE1_ALPHA_EXT)
defconsti(env, "GL-SOURCE1-ALPHA-EXT", (GLenum) GL_SOURCE1_ALPHA_EXT, "GL_SOURCE1_ALPHA_EXT");
#endif
#if defined(GL_SOURCE2_ALPHA_EXT)
defconsti(env, "GL-SOURCE2-ALPHA-EXT", (GLenum) GL_SOURCE2_ALPHA_EXT, "GL_SOURCE2_ALPHA_EXT");
#endif
#if defined(GL_OPERAND0_RGB_EXT)
defconsti(env, "GL-OPERAND0-RGB-EXT", (GLenum) GL_OPERAND0_RGB_EXT, "GL_OPERAND0_RGB_EXT");
#endif
#if defined(GL_OPERAND1_RGB_EXT)
defconsti(env, "GL-OPERAND1-RGB-EXT", (GLenum) GL_OPERAND1_RGB_EXT, "GL_OPERAND1_RGB_EXT");
#endif
#if defined(GL_OPERAND2_RGB_EXT)
defconsti(env, "GL-OPERAND2-RGB-EXT", (GLenum) GL_OPERAND2_RGB_EXT, "GL_OPERAND2_RGB_EXT");
#endif
#if defined(GL_OPERAND0_ALPHA_EXT)
defconsti(env, "GL-OPERAND0-ALPHA-EXT", (GLenum) GL_OPERAND0_ALPHA_EXT, "GL_OPERAND0_ALPHA_EXT");
#endif
#if defined(GL_OPERAND1_ALPHA_EXT)
defconsti(env, "GL-OPERAND1-ALPHA-EXT", (GLenum) GL_OPERAND1_ALPHA_EXT, "GL_OPERAND1_ALPHA_EXT");
#endif
#if defined(GL_OPERAND2_ALPHA_EXT)
defconsti(env, "GL-OPERAND2-ALPHA-EXT", (GLenum) GL_OPERAND2_ALPHA_EXT, "GL_OPERAND2_ALPHA_EXT");
#endif
#if defined(GL_DOT3_RGB_EXT)
defconsti(env, "GL-DOT3-RGB-EXT", (GLenum) GL_DOT3_RGB_EXT, "GL_DOT3_RGB_EXT");
#endif
#if defined(GL_DOT3_RGBA_EXT)
defconsti(env, "GL-DOT3-RGBA-EXT", (GLenum) GL_DOT3_RGBA_EXT, "GL_DOT3_RGBA_EXT");
#endif
#if defined(GL_TEXTURE_MAX_ANISOTROPY_EXT)
defconsti(env, "GL-TEXTURE-MAX-ANISOTROPY-EXT", (GLenum) GL_TEXTURE_MAX_ANISOTROPY_EXT, "GL_TEXTURE_MAX_ANISOTROPY_EXT");
#endif
#if defined(GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT)
defconsti(env, "GL-MAX-TEXTURE-MAX-ANISOTROPY-EXT", (GLenum) GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT, "GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT");
#endif
#if defined(GL_TEXTURE_REDUCTION_MODE_EXT)
defconsti(env, "GL-TEXTURE-REDUCTION-MODE-EXT", (GLenum) GL_TEXTURE_REDUCTION_MODE_EXT, "GL_TEXTURE_REDUCTION_MODE_EXT");
#endif
#if defined(GL_WEIGHTED_AVERAGE_EXT)
defconsti(env, "GL-WEIGHTED-AVERAGE-EXT", (GLenum) GL_WEIGHTED_AVERAGE_EXT, "GL_WEIGHTED_AVERAGE_EXT");
#endif
#if defined(GL_BGRA_EXT)
defconsti(env, "GL-BGRA-EXT", (GLenum) GL_BGRA_EXT, "GL_BGRA_EXT");
#endif
#if defined(GL_TEXTURE_FORMAT_SRGB_OVERRIDE_EXT)
defconsti(env, "GL-TEXTURE-FORMAT-SRGB-OVERRIDE-EXT", (GLenum) GL_TEXTURE_FORMAT_SRGB_OVERRIDE_EXT, "GL_TEXTURE_FORMAT_SRGB_OVERRIDE_EXT");
#endif
#if defined(GL_RGBA32UI_EXT)
defconsti(env, "GL-RGBA32UI-EXT", (GLenum) GL_RGBA32UI_EXT, "GL_RGBA32UI_EXT");
#endif
#if defined(GL_RGB32UI_EXT)
defconsti(env, "GL-RGB32UI-EXT", (GLenum) GL_RGB32UI_EXT, "GL_RGB32UI_EXT");
#endif
#if defined(GL_ALPHA32UI_EXT)
defconsti(env, "GL-ALPHA32UI-EXT", (GLenum) GL_ALPHA32UI_EXT, "GL_ALPHA32UI_EXT");
#endif
#if defined(GL_INTENSITY32UI_EXT)
defconsti(env, "GL-INTENSITY32UI-EXT", (GLenum) GL_INTENSITY32UI_EXT, "GL_INTENSITY32UI_EXT");
#endif
#if defined(GL_LUMINANCE32UI_EXT)
defconsti(env, "GL-LUMINANCE32UI-EXT", (GLenum) GL_LUMINANCE32UI_EXT, "GL_LUMINANCE32UI_EXT");
#endif
#if defined(GL_LUMINANCE_ALPHA32UI_EXT)
defconsti(env, "GL-LUMINANCE-ALPHA32UI-EXT", (GLenum) GL_LUMINANCE_ALPHA32UI_EXT, "GL_LUMINANCE_ALPHA32UI_EXT");
#endif
#if defined(GL_RGBA16UI_EXT)
defconsti(env, "GL-RGBA16UI-EXT", (GLenum) GL_RGBA16UI_EXT, "GL_RGBA16UI_EXT");
#endif
#if defined(GL_RGB16UI_EXT)
defconsti(env, "GL-RGB16UI-EXT", (GLenum) GL_RGB16UI_EXT, "GL_RGB16UI_EXT");
#endif
#if defined(GL_ALPHA16UI_EXT)
defconsti(env, "GL-ALPHA16UI-EXT", (GLenum) GL_ALPHA16UI_EXT, "GL_ALPHA16UI_EXT");
#endif
#if defined(GL_INTENSITY16UI_EXT)
defconsti(env, "GL-INTENSITY16UI-EXT", (GLenum) GL_INTENSITY16UI_EXT, "GL_INTENSITY16UI_EXT");
#endif
#if defined(GL_LUMINANCE16UI_EXT)
defconsti(env, "GL-LUMINANCE16UI-EXT", (GLenum) GL_LUMINANCE16UI_EXT, "GL_LUMINANCE16UI_EXT");
#endif
#if defined(GL_LUMINANCE_ALPHA16UI_EXT)
defconsti(env, "GL-LUMINANCE-ALPHA16UI-EXT", (GLenum) GL_LUMINANCE_ALPHA16UI_EXT, "GL_LUMINANCE_ALPHA16UI_EXT");
#endif
#if defined(GL_RGBA8UI_EXT)
defconsti(env, "GL-RGBA8UI-EXT", (GLenum) GL_RGBA8UI_EXT, "GL_RGBA8UI_EXT");
#endif
#if defined(GL_RGB8UI_EXT)
defconsti(env, "GL-RGB8UI-EXT", (GLenum) GL_RGB8UI_EXT, "GL_RGB8UI_EXT");
#endif
#if defined(GL_ALPHA8UI_EXT)
defconsti(env, "GL-ALPHA8UI-EXT", (GLenum) GL_ALPHA8UI_EXT, "GL_ALPHA8UI_EXT");
#endif
#if defined(GL_INTENSITY8UI_EXT)
defconsti(env, "GL-INTENSITY8UI-EXT", (GLenum) GL_INTENSITY8UI_EXT, "GL_INTENSITY8UI_EXT");
#endif
#if defined(GL_LUMINANCE8UI_EXT)
defconsti(env, "GL-LUMINANCE8UI-EXT", (GLenum) GL_LUMINANCE8UI_EXT, "GL_LUMINANCE8UI_EXT");
#endif
#if defined(GL_LUMINANCE_ALPHA8UI_EXT)
defconsti(env, "GL-LUMINANCE-ALPHA8UI-EXT", (GLenum) GL_LUMINANCE_ALPHA8UI_EXT, "GL_LUMINANCE_ALPHA8UI_EXT");
#endif
#if defined(GL_RGBA32I_EXT)
defconsti(env, "GL-RGBA32I-EXT", (GLenum) GL_RGBA32I_EXT, "GL_RGBA32I_EXT");
#endif
#if defined(GL_RGB32I_EXT)
defconsti(env, "GL-RGB32I-EXT", (GLenum) GL_RGB32I_EXT, "GL_RGB32I_EXT");
#endif
#if defined(GL_ALPHA32I_EXT)
defconsti(env, "GL-ALPHA32I-EXT", (GLenum) GL_ALPHA32I_EXT, "GL_ALPHA32I_EXT");
#endif
#if defined(GL_INTENSITY32I_EXT)
defconsti(env, "GL-INTENSITY32I-EXT", (GLenum) GL_INTENSITY32I_EXT, "GL_INTENSITY32I_EXT");
#endif
#if defined(GL_LUMINANCE32I_EXT)
defconsti(env, "GL-LUMINANCE32I-EXT", (GLenum) GL_LUMINANCE32I_EXT, "GL_LUMINANCE32I_EXT");
#endif
#if defined(GL_LUMINANCE_ALPHA32I_EXT)
defconsti(env, "GL-LUMINANCE-ALPHA32I-EXT", (GLenum) GL_LUMINANCE_ALPHA32I_EXT, "GL_LUMINANCE_ALPHA32I_EXT");
#endif
#if defined(GL_RGBA16I_EXT)
defconsti(env, "GL-RGBA16I-EXT", (GLenum) GL_RGBA16I_EXT, "GL_RGBA16I_EXT");
#endif
#if defined(GL_RGB16I_EXT)
defconsti(env, "GL-RGB16I-EXT", (GLenum) GL_RGB16I_EXT, "GL_RGB16I_EXT");
#endif
#if defined(GL_ALPHA16I_EXT)
defconsti(env, "GL-ALPHA16I-EXT", (GLenum) GL_ALPHA16I_EXT, "GL_ALPHA16I_EXT");
#endif
#if defined(GL_INTENSITY16I_EXT)
defconsti(env, "GL-INTENSITY16I-EXT", (GLenum) GL_INTENSITY16I_EXT, "GL_INTENSITY16I_EXT");
#endif
#if defined(GL_LUMINANCE16I_EXT)
defconsti(env, "GL-LUMINANCE16I-EXT", (GLenum) GL_LUMINANCE16I_EXT, "GL_LUMINANCE16I_EXT");
#endif
#if defined(GL_LUMINANCE_ALPHA16I_EXT)
defconsti(env, "GL-LUMINANCE-ALPHA16I-EXT", (GLenum) GL_LUMINANCE_ALPHA16I_EXT, "GL_LUMINANCE_ALPHA16I_EXT");
#endif
#if defined(GL_RGBA8I_EXT)
defconsti(env, "GL-RGBA8I-EXT", (GLenum) GL_RGBA8I_EXT, "GL_RGBA8I_EXT");
#endif
#if defined(GL_RGB8I_EXT)
defconsti(env, "GL-RGB8I-EXT", (GLenum) GL_RGB8I_EXT, "GL_RGB8I_EXT");
#endif
#if defined(GL_ALPHA8I_EXT)
defconsti(env, "GL-ALPHA8I-EXT", (GLenum) GL_ALPHA8I_EXT, "GL_ALPHA8I_EXT");
#endif
#if defined(GL_INTENSITY8I_EXT)
defconsti(env, "GL-INTENSITY8I-EXT", (GLenum) GL_INTENSITY8I_EXT, "GL_INTENSITY8I_EXT");
#endif
#if defined(GL_LUMINANCE8I_EXT)
defconsti(env, "GL-LUMINANCE8I-EXT", (GLenum) GL_LUMINANCE8I_EXT, "GL_LUMINANCE8I_EXT");
#endif
#if defined(GL_LUMINANCE_ALPHA8I_EXT)
defconsti(env, "GL-LUMINANCE-ALPHA8I-EXT", (GLenum) GL_LUMINANCE_ALPHA8I_EXT, "GL_LUMINANCE_ALPHA8I_EXT");
#endif
#if defined(GL_RED_INTEGER_EXT)
defconsti(env, "GL-RED-INTEGER-EXT", (GLenum) GL_RED_INTEGER_EXT, "GL_RED_INTEGER_EXT");
#endif
#if defined(GL_GREEN_INTEGER_EXT)
defconsti(env, "GL-GREEN-INTEGER-EXT", (GLenum) GL_GREEN_INTEGER_EXT, "GL_GREEN_INTEGER_EXT");
#endif
#if defined(GL_BLUE_INTEGER_EXT)
defconsti(env, "GL-BLUE-INTEGER-EXT", (GLenum) GL_BLUE_INTEGER_EXT, "GL_BLUE_INTEGER_EXT");
#endif
#if defined(GL_ALPHA_INTEGER_EXT)
defconsti(env, "GL-ALPHA-INTEGER-EXT", (GLenum) GL_ALPHA_INTEGER_EXT, "GL_ALPHA_INTEGER_EXT");
#endif
#if defined(GL_RGB_INTEGER_EXT)
defconsti(env, "GL-RGB-INTEGER-EXT", (GLenum) GL_RGB_INTEGER_EXT, "GL_RGB_INTEGER_EXT");
#endif
#if defined(GL_RGBA_INTEGER_EXT)
defconsti(env, "GL-RGBA-INTEGER-EXT", (GLenum) GL_RGBA_INTEGER_EXT, "GL_RGBA_INTEGER_EXT");
#endif
#if defined(GL_BGR_INTEGER_EXT)
defconsti(env, "GL-BGR-INTEGER-EXT", (GLenum) GL_BGR_INTEGER_EXT, "GL_BGR_INTEGER_EXT");
#endif
#if defined(GL_BGRA_INTEGER_EXT)
defconsti(env, "GL-BGRA-INTEGER-EXT", (GLenum) GL_BGRA_INTEGER_EXT, "GL_BGRA_INTEGER_EXT");
#endif
#if defined(GL_LUMINANCE_INTEGER_EXT)
defconsti(env, "GL-LUMINANCE-INTEGER-EXT", (GLenum) GL_LUMINANCE_INTEGER_EXT, "GL_LUMINANCE_INTEGER_EXT");
#endif
#if defined(GL_LUMINANCE_ALPHA_INTEGER_EXT)
defconsti(env, "GL-LUMINANCE-ALPHA-INTEGER-EXT", (GLenum) GL_LUMINANCE_ALPHA_INTEGER_EXT, "GL_LUMINANCE_ALPHA_INTEGER_EXT");
#endif
#if defined(GL_RGBA_INTEGER_MODE_EXT)
defconsti(env, "GL-RGBA-INTEGER-MODE-EXT", (GLenum) GL_RGBA_INTEGER_MODE_EXT, "GL_RGBA_INTEGER_MODE_EXT");
#endif
#if defined(GL_MAX_TEXTURE_LOD_BIAS_EXT)
defconsti(env, "GL-MAX-TEXTURE-LOD-BIAS-EXT", (GLenum) GL_MAX_TEXTURE_LOD_BIAS_EXT, "GL_MAX_TEXTURE_LOD_BIAS_EXT");
#endif
#if defined(GL_TEXTURE_FILTER_CONTROL_EXT)
defconsti(env, "GL-TEXTURE-FILTER-CONTROL-EXT", (GLenum) GL_TEXTURE_FILTER_CONTROL_EXT, "GL_TEXTURE_FILTER_CONTROL_EXT");
#endif
#if defined(GL_TEXTURE_LOD_BIAS_EXT)
defconsti(env, "GL-TEXTURE-LOD-BIAS-EXT", (GLenum) GL_TEXTURE_LOD_BIAS_EXT, "GL_TEXTURE_LOD_BIAS_EXT");
#endif
#if defined(GL_MIRROR_CLAMP_EXT)
defconsti(env, "GL-MIRROR-CLAMP-EXT", (GLenum) GL_MIRROR_CLAMP_EXT, "GL_MIRROR_CLAMP_EXT");
#endif
#if defined(GL_MIRROR_CLAMP_TO_EDGE_EXT)
defconsti(env, "GL-MIRROR-CLAMP-TO-EDGE-EXT", (GLenum) GL_MIRROR_CLAMP_TO_EDGE_EXT, "GL_MIRROR_CLAMP_TO_EDGE_EXT");
#endif
#if defined(GL_MIRROR_CLAMP_TO_BORDER_EXT)
defconsti(env, "GL-MIRROR-CLAMP-TO-BORDER-EXT", (GLenum) GL_MIRROR_CLAMP_TO_BORDER_EXT, "GL_MIRROR_CLAMP_TO_BORDER_EXT");
#endif
#if defined(GL_MIRROR_CLAMP_TO_EDGE_EXT)
defconsti(env, "GL-MIRROR-CLAMP-TO-EDGE-EXT", (GLenum) GL_MIRROR_CLAMP_TO_EDGE_EXT, "GL_MIRROR_CLAMP_TO_EDGE_EXT");
#endif
#if defined(GL_R16_EXT)
defconsti(env, "GL-R16-EXT", (GLenum) GL_R16_EXT, "GL_R16_EXT");
#endif
#if defined(GL_RG16_EXT)
defconsti(env, "GL-RG16-EXT", (GLenum) GL_RG16_EXT, "GL_RG16_EXT");
#endif
#if defined(GL_RGBA16_EXT)
defconsti(env, "GL-RGBA16-EXT", (GLenum) GL_RGBA16_EXT, "GL_RGBA16_EXT");
#endif
#if defined(GL_RGB16_EXT)
defconsti(env, "GL-RGB16-EXT", (GLenum) GL_RGB16_EXT, "GL_RGB16_EXT");
#endif
#if defined(GL_R16_SNORM_EXT)
defconsti(env, "GL-R16-SNORM-EXT", (GLenum) GL_R16_SNORM_EXT, "GL_R16_SNORM_EXT");
#endif
#if defined(GL_RG16_SNORM_EXT)
defconsti(env, "GL-RG16-SNORM-EXT", (GLenum) GL_RG16_SNORM_EXT, "GL_RG16_SNORM_EXT");
#endif
#if defined(GL_RGB16_SNORM_EXT)
defconsti(env, "GL-RGB16-SNORM-EXT", (GLenum) GL_RGB16_SNORM_EXT, "GL_RGB16_SNORM_EXT");
#endif
#if defined(GL_RGBA16_SNORM_EXT)
defconsti(env, "GL-RGBA16-SNORM-EXT", (GLenum) GL_RGBA16_SNORM_EXT, "GL_RGBA16_SNORM_EXT");
#endif
#if defined(GL_TEXTURE_PRIORITY_EXT)
defconsti(env, "GL-TEXTURE-PRIORITY-EXT", (GLenum) GL_TEXTURE_PRIORITY_EXT, "GL_TEXTURE_PRIORITY_EXT");
#endif
#if defined(GL_TEXTURE_RESIDENT_EXT)
defconsti(env, "GL-TEXTURE-RESIDENT-EXT", (GLenum) GL_TEXTURE_RESIDENT_EXT, "GL_TEXTURE_RESIDENT_EXT");
#endif
#if defined(GL_TEXTURE_1D_BINDING_EXT)
defconsti(env, "GL-TEXTURE-1D-BINDING-EXT", (GLenum) GL_TEXTURE_1D_BINDING_EXT, "GL_TEXTURE_1D_BINDING_EXT");
#endif
#if defined(GL_TEXTURE_2D_BINDING_EXT)
defconsti(env, "GL-TEXTURE-2D-BINDING-EXT", (GLenum) GL_TEXTURE_2D_BINDING_EXT, "GL_TEXTURE_2D_BINDING_EXT");
#endif
#if defined(GL_TEXTURE_3D_BINDING_EXT)
defconsti(env, "GL-TEXTURE-3D-BINDING-EXT", (GLenum) GL_TEXTURE_3D_BINDING_EXT, "GL_TEXTURE_3D_BINDING_EXT");
#endif
#if defined(GL_PERTURB_EXT)
defconsti(env, "GL-PERTURB-EXT", (GLenum) GL_PERTURB_EXT, "GL_PERTURB_EXT");
#endif
#if defined(GL_TEXTURE_NORMAL_EXT)
defconsti(env, "GL-TEXTURE-NORMAL-EXT", (GLenum) GL_TEXTURE_NORMAL_EXT, "GL_TEXTURE_NORMAL_EXT");
#endif
#if defined(GL_RED_EXT)
defconsti(env, "GL-RED-EXT", (GLenum) GL_RED_EXT, "GL_RED_EXT");
#endif
#if defined(GL_RG_EXT)
defconsti(env, "GL-RG-EXT", (GLenum) GL_RG_EXT, "GL_RG_EXT");
#endif
#if defined(GL_R8_EXT)
defconsti(env, "GL-R8-EXT", (GLenum) GL_R8_EXT, "GL_R8_EXT");
#endif
#if defined(GL_RG8_EXT)
defconsti(env, "GL-RG8-EXT", (GLenum) GL_RG8_EXT, "GL_RG8_EXT");
#endif
#if defined(GL_SRGB_EXT)
defconsti(env, "GL-SRGB-EXT", (GLenum) GL_SRGB_EXT, "GL_SRGB_EXT");
#endif
#if defined(GL_SRGB8_EXT)
defconsti(env, "GL-SRGB8-EXT", (GLenum) GL_SRGB8_EXT, "GL_SRGB8_EXT");
#endif
#if defined(GL_SRGB_ALPHA_EXT)
defconsti(env, "GL-SRGB-ALPHA-EXT", (GLenum) GL_SRGB_ALPHA_EXT, "GL_SRGB_ALPHA_EXT");
#endif
#if defined(GL_SRGB8_ALPHA8_EXT)
defconsti(env, "GL-SRGB8-ALPHA8-EXT", (GLenum) GL_SRGB8_ALPHA8_EXT, "GL_SRGB8_ALPHA8_EXT");
#endif
#if defined(GL_SLUMINANCE_ALPHA_EXT)
defconsti(env, "GL-SLUMINANCE-ALPHA-EXT", (GLenum) GL_SLUMINANCE_ALPHA_EXT, "GL_SLUMINANCE_ALPHA_EXT");
#endif
#if defined(GL_SLUMINANCE8_ALPHA8_EXT)
defconsti(env, "GL-SLUMINANCE8-ALPHA8-EXT", (GLenum) GL_SLUMINANCE8_ALPHA8_EXT, "GL_SLUMINANCE8_ALPHA8_EXT");
#endif
#if defined(GL_SLUMINANCE_EXT)
defconsti(env, "GL-SLUMINANCE-EXT", (GLenum) GL_SLUMINANCE_EXT, "GL_SLUMINANCE_EXT");
#endif
#if defined(GL_SLUMINANCE8_EXT)
defconsti(env, "GL-SLUMINANCE8-EXT", (GLenum) GL_SLUMINANCE8_EXT, "GL_SLUMINANCE8_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-EXT", (GLenum) GL_COMPRESSED_SRGB_EXT, "GL_COMPRESSED_SRGB_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-EXT", (GLenum) GL_COMPRESSED_SRGB_ALPHA_EXT, "GL_COMPRESSED_SRGB_ALPHA_EXT");
#endif
#if defined(GL_COMPRESSED_SLUMINANCE_EXT)
defconsti(env, "GL-COMPRESSED-SLUMINANCE-EXT", (GLenum) GL_COMPRESSED_SLUMINANCE_EXT, "GL_COMPRESSED_SLUMINANCE_EXT");
#endif
#if defined(GL_COMPRESSED_SLUMINANCE_ALPHA_EXT)
defconsti(env, "GL-COMPRESSED-SLUMINANCE-ALPHA-EXT", (GLenum) GL_COMPRESSED_SLUMINANCE_ALPHA_EXT, "GL_COMPRESSED_SLUMINANCE_ALPHA_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_S3TC_DXT1_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-S3TC-DXT1-EXT", (GLenum) GL_COMPRESSED_SRGB_S3TC_DXT1_EXT, "GL_COMPRESSED_SRGB_S3TC_DXT1_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-S3TC-DXT1-EXT", (GLenum) GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT, "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-S3TC-DXT3-EXT", (GLenum) GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT, "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-S3TC-DXT5-EXT", (GLenum) GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT, "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT");
#endif
#if defined(GL_SR8_EXT)
defconsti(env, "GL-SR8-EXT", (GLenum) GL_SR8_EXT, "GL_SR8_EXT");
#endif
#if defined(GL_SRG8_EXT)
defconsti(env, "GL-SRG8-EXT", (GLenum) GL_SRG8_EXT, "GL_SRG8_EXT");
#endif
#if defined(GL_TEXTURE_SRGB_DECODE_EXT)
defconsti(env, "GL-TEXTURE-SRGB-DECODE-EXT", (GLenum) GL_TEXTURE_SRGB_DECODE_EXT, "GL_TEXTURE_SRGB_DECODE_EXT");
#endif
#if defined(GL_DECODE_EXT)
defconsti(env, "GL-DECODE-EXT", (GLenum) GL_DECODE_EXT, "GL_DECODE_EXT");
#endif
#if defined(GL_SKIP_DECODE_EXT)
defconsti(env, "GL-SKIP-DECODE-EXT", (GLenum) GL_SKIP_DECODE_EXT, "GL_SKIP_DECODE_EXT");
#endif
#if defined(GL_RGB9_E5_EXT)
defconsti(env, "GL-RGB9-E5-EXT", (GLenum) GL_RGB9_E5_EXT, "GL_RGB9_E5_EXT");
#endif
#if defined(GL_UNSIGNED_INT_5_9_9_9_REV_EXT)
defconsti(env, "GL-UNSIGNED-INT-5-9-9-9-REV-EXT", (GLenum) GL_UNSIGNED_INT_5_9_9_9_REV_EXT, "GL_UNSIGNED_INT_5_9_9_9_REV_EXT");
#endif
#if defined(GL_TEXTURE_SHARED_SIZE_EXT)
defconsti(env, "GL-TEXTURE-SHARED-SIZE-EXT", (GLenum) GL_TEXTURE_SHARED_SIZE_EXT, "GL_TEXTURE_SHARED_SIZE_EXT");
#endif
#if defined(GL_ALPHA_SNORM)
defconsti(env, "GL-ALPHA-SNORM", (GLenum) GL_ALPHA_SNORM, "GL_ALPHA_SNORM");
#endif
#if defined(GL_LUMINANCE_SNORM)
defconsti(env, "GL-LUMINANCE-SNORM", (GLenum) GL_LUMINANCE_SNORM, "GL_LUMINANCE_SNORM");
#endif
#if defined(GL_LUMINANCE_ALPHA_SNORM)
defconsti(env, "GL-LUMINANCE-ALPHA-SNORM", (GLenum) GL_LUMINANCE_ALPHA_SNORM, "GL_LUMINANCE_ALPHA_SNORM");
#endif
#if defined(GL_INTENSITY_SNORM)
defconsti(env, "GL-INTENSITY-SNORM", (GLenum) GL_INTENSITY_SNORM, "GL_INTENSITY_SNORM");
#endif
#if defined(GL_ALPHA8_SNORM)
defconsti(env, "GL-ALPHA8-SNORM", (GLenum) GL_ALPHA8_SNORM, "GL_ALPHA8_SNORM");
#endif
#if defined(GL_LUMINANCE8_SNORM)
defconsti(env, "GL-LUMINANCE8-SNORM", (GLenum) GL_LUMINANCE8_SNORM, "GL_LUMINANCE8_SNORM");
#endif
#if defined(GL_LUMINANCE8_ALPHA8_SNORM)
defconsti(env, "GL-LUMINANCE8-ALPHA8-SNORM", (GLenum) GL_LUMINANCE8_ALPHA8_SNORM, "GL_LUMINANCE8_ALPHA8_SNORM");
#endif
#if defined(GL_INTENSITY8_SNORM)
defconsti(env, "GL-INTENSITY8-SNORM", (GLenum) GL_INTENSITY8_SNORM, "GL_INTENSITY8_SNORM");
#endif
#if defined(GL_ALPHA16_SNORM)
defconsti(env, "GL-ALPHA16-SNORM", (GLenum) GL_ALPHA16_SNORM, "GL_ALPHA16_SNORM");
#endif
#if defined(GL_LUMINANCE16_SNORM)
defconsti(env, "GL-LUMINANCE16-SNORM", (GLenum) GL_LUMINANCE16_SNORM, "GL_LUMINANCE16_SNORM");
#endif
#if defined(GL_LUMINANCE16_ALPHA16_SNORM)
defconsti(env, "GL-LUMINANCE16-ALPHA16-SNORM", (GLenum) GL_LUMINANCE16_ALPHA16_SNORM, "GL_LUMINANCE16_ALPHA16_SNORM");
#endif
#if defined(GL_INTENSITY16_SNORM)
defconsti(env, "GL-INTENSITY16-SNORM", (GLenum) GL_INTENSITY16_SNORM, "GL_INTENSITY16_SNORM");
#endif
#if defined(GL_RED_SNORM)
defconsti(env, "GL-RED-SNORM", (GLenum) GL_RED_SNORM, "GL_RED_SNORM");
#endif
#if defined(GL_RG_SNORM)
defconsti(env, "GL-RG-SNORM", (GLenum) GL_RG_SNORM, "GL_RG_SNORM");
#endif
#if defined(GL_RGB_SNORM)
defconsti(env, "GL-RGB-SNORM", (GLenum) GL_RGB_SNORM, "GL_RGB_SNORM");
#endif
#if defined(GL_RGBA_SNORM)
defconsti(env, "GL-RGBA-SNORM", (GLenum) GL_RGBA_SNORM, "GL_RGBA_SNORM");
#endif
#if defined(GL_R8_SNORM)
defconsti(env, "GL-R8-SNORM", (GLenum) GL_R8_SNORM, "GL_R8_SNORM");
#endif
#if defined(GL_RG8_SNORM)
defconsti(env, "GL-RG8-SNORM", (GLenum) GL_RG8_SNORM, "GL_RG8_SNORM");
#endif
#if defined(GL_RGB8_SNORM)
defconsti(env, "GL-RGB8-SNORM", (GLenum) GL_RGB8_SNORM, "GL_RGB8_SNORM");
#endif
#if defined(GL_RGBA8_SNORM)
defconsti(env, "GL-RGBA8-SNORM", (GLenum) GL_RGBA8_SNORM, "GL_RGBA8_SNORM");
#endif
#if defined(GL_R16_SNORM)
defconsti(env, "GL-R16-SNORM", (GLenum) GL_R16_SNORM, "GL_R16_SNORM");
#endif
#if defined(GL_RG16_SNORM)
defconsti(env, "GL-RG16-SNORM", (GLenum) GL_RG16_SNORM, "GL_RG16_SNORM");
#endif
#if defined(GL_RGB16_SNORM)
defconsti(env, "GL-RGB16-SNORM", (GLenum) GL_RGB16_SNORM, "GL_RGB16_SNORM");
#endif
#if defined(GL_RGBA16_SNORM)
defconsti(env, "GL-RGBA16-SNORM", (GLenum) GL_RGBA16_SNORM, "GL_RGBA16_SNORM");
#endif
#if defined(GL_SIGNED_NORMALIZED)
defconsti(env, "GL-SIGNED-NORMALIZED", (GLenum) GL_SIGNED_NORMALIZED, "GL_SIGNED_NORMALIZED");
#endif
#if defined(GL_TEXTURE_IMMUTABLE_FORMAT_EXT)
defconsti(env, "GL-TEXTURE-IMMUTABLE-FORMAT-EXT", (GLenum) GL_TEXTURE_IMMUTABLE_FORMAT_EXT, "GL_TEXTURE_IMMUTABLE_FORMAT_EXT");
#endif
#if defined(GL_ALPHA8_EXT)
defconsti(env, "GL-ALPHA8-EXT", (GLenum) GL_ALPHA8_EXT, "GL_ALPHA8_EXT");
#endif
#if defined(GL_LUMINANCE8_EXT)
defconsti(env, "GL-LUMINANCE8-EXT", (GLenum) GL_LUMINANCE8_EXT, "GL_LUMINANCE8_EXT");
#endif
#if defined(GL_LUMINANCE8_ALPHA8_EXT)
defconsti(env, "GL-LUMINANCE8-ALPHA8-EXT", (GLenum) GL_LUMINANCE8_ALPHA8_EXT, "GL_LUMINANCE8_ALPHA8_EXT");
#endif
#if defined(GL_RGBA32F_EXT)
defconsti(env, "GL-RGBA32F-EXT", (GLenum) GL_RGBA32F_EXT, "GL_RGBA32F_EXT");
#endif
#if defined(GL_RGB32F_EXT)
defconsti(env, "GL-RGB32F-EXT", (GLenum) GL_RGB32F_EXT, "GL_RGB32F_EXT");
#endif
#if defined(GL_ALPHA32F_EXT)
defconsti(env, "GL-ALPHA32F-EXT", (GLenum) GL_ALPHA32F_EXT, "GL_ALPHA32F_EXT");
#endif
#if defined(GL_LUMINANCE32F_EXT)
defconsti(env, "GL-LUMINANCE32F-EXT", (GLenum) GL_LUMINANCE32F_EXT, "GL_LUMINANCE32F_EXT");
#endif
#if defined(GL_LUMINANCE_ALPHA32F_EXT)
defconsti(env, "GL-LUMINANCE-ALPHA32F-EXT", (GLenum) GL_LUMINANCE_ALPHA32F_EXT, "GL_LUMINANCE_ALPHA32F_EXT");
#endif
#if defined(GL_RGBA16F_EXT)
defconsti(env, "GL-RGBA16F-EXT", (GLenum) GL_RGBA16F_EXT, "GL_RGBA16F_EXT");
#endif
#if defined(GL_RGB16F_EXT)
defconsti(env, "GL-RGB16F-EXT", (GLenum) GL_RGB16F_EXT, "GL_RGB16F_EXT");
#endif
#if defined(GL_ALPHA16F_EXT)
defconsti(env, "GL-ALPHA16F-EXT", (GLenum) GL_ALPHA16F_EXT, "GL_ALPHA16F_EXT");
#endif
#if defined(GL_LUMINANCE16F_EXT)
defconsti(env, "GL-LUMINANCE16F-EXT", (GLenum) GL_LUMINANCE16F_EXT, "GL_LUMINANCE16F_EXT");
#endif
#if defined(GL_LUMINANCE_ALPHA16F_EXT)
defconsti(env, "GL-LUMINANCE-ALPHA16F-EXT", (GLenum) GL_LUMINANCE_ALPHA16F_EXT, "GL_LUMINANCE_ALPHA16F_EXT");
#endif
#if defined(GL_RGB10_A2_EXT)
defconsti(env, "GL-RGB10-A2-EXT", (GLenum) GL_RGB10_A2_EXT, "GL_RGB10_A2_EXT");
#endif
#if defined(GL_RGB10_EXT)
defconsti(env, "GL-RGB10-EXT", (GLenum) GL_RGB10_EXT, "GL_RGB10_EXT");
#endif
#if defined(GL_BGRA8_EXT)
defconsti(env, "GL-BGRA8-EXT", (GLenum) GL_BGRA8_EXT, "GL_BGRA8_EXT");
#endif
#if defined(GL_R8_EXT)
defconsti(env, "GL-R8-EXT", (GLenum) GL_R8_EXT, "GL_R8_EXT");
#endif
#if defined(GL_RG8_EXT)
defconsti(env, "GL-RG8-EXT", (GLenum) GL_RG8_EXT, "GL_RG8_EXT");
#endif
#if defined(GL_R32F_EXT)
defconsti(env, "GL-R32F-EXT", (GLenum) GL_R32F_EXT, "GL_R32F_EXT");
#endif
#if defined(GL_RG32F_EXT)
defconsti(env, "GL-RG32F-EXT", (GLenum) GL_RG32F_EXT, "GL_RG32F_EXT");
#endif
#if defined(GL_R16F_EXT)
defconsti(env, "GL-R16F-EXT", (GLenum) GL_R16F_EXT, "GL_R16F_EXT");
#endif
#if defined(GL_RG16F_EXT)
defconsti(env, "GL-RG16F-EXT", (GLenum) GL_RG16F_EXT, "GL_RG16F_EXT");
#endif
#if defined(GL_TEXTURE_SWIZZLE_R_EXT)
defconsti(env, "GL-TEXTURE-SWIZZLE-R-EXT", (GLenum) GL_TEXTURE_SWIZZLE_R_EXT, "GL_TEXTURE_SWIZZLE_R_EXT");
#endif
#if defined(GL_TEXTURE_SWIZZLE_G_EXT)
defconsti(env, "GL-TEXTURE-SWIZZLE-G-EXT", (GLenum) GL_TEXTURE_SWIZZLE_G_EXT, "GL_TEXTURE_SWIZZLE_G_EXT");
#endif
#if defined(GL_TEXTURE_SWIZZLE_B_EXT)
defconsti(env, "GL-TEXTURE-SWIZZLE-B-EXT", (GLenum) GL_TEXTURE_SWIZZLE_B_EXT, "GL_TEXTURE_SWIZZLE_B_EXT");
#endif
#if defined(GL_TEXTURE_SWIZZLE_A_EXT)
defconsti(env, "GL-TEXTURE-SWIZZLE-A-EXT", (GLenum) GL_TEXTURE_SWIZZLE_A_EXT, "GL_TEXTURE_SWIZZLE_A_EXT");
#endif
#if defined(GL_TEXTURE_SWIZZLE_RGBA_EXT)
defconsti(env, "GL-TEXTURE-SWIZZLE-RGBA-EXT", (GLenum) GL_TEXTURE_SWIZZLE_RGBA_EXT, "GL_TEXTURE_SWIZZLE_RGBA_EXT");
#endif
#if defined(GL_UNSIGNED_INT_2_10_10_10_REV_EXT)
defconsti(env, "GL-UNSIGNED-INT-2-10-10-10-REV-EXT", (GLenum) GL_UNSIGNED_INT_2_10_10_10_REV_EXT, "GL_UNSIGNED_INT_2_10_10_10_REV_EXT");
#endif
#if defined(GL_TEXTURE_VIEW_MIN_LEVEL_EXT)
defconsti(env, "GL-TEXTURE-VIEW-MIN-LEVEL-EXT", (GLenum) GL_TEXTURE_VIEW_MIN_LEVEL_EXT, "GL_TEXTURE_VIEW_MIN_LEVEL_EXT");
#endif
#if defined(GL_TEXTURE_VIEW_NUM_LEVELS_EXT)
defconsti(env, "GL-TEXTURE-VIEW-NUM-LEVELS-EXT", (GLenum) GL_TEXTURE_VIEW_NUM_LEVELS_EXT, "GL_TEXTURE_VIEW_NUM_LEVELS_EXT");
#endif
#if defined(GL_TEXTURE_VIEW_MIN_LAYER_EXT)
defconsti(env, "GL-TEXTURE-VIEW-MIN-LAYER-EXT", (GLenum) GL_TEXTURE_VIEW_MIN_LAYER_EXT, "GL_TEXTURE_VIEW_MIN_LAYER_EXT");
#endif
#if defined(GL_TEXTURE_VIEW_NUM_LAYERS_EXT)
defconsti(env, "GL-TEXTURE-VIEW-NUM-LAYERS-EXT", (GLenum) GL_TEXTURE_VIEW_NUM_LAYERS_EXT, "GL_TEXTURE_VIEW_NUM_LAYERS_EXT");
#endif
#if defined(GL_TEXTURE_IMMUTABLE_LEVELS)
defconsti(env, "GL-TEXTURE-IMMUTABLE-LEVELS", (GLenum) GL_TEXTURE_IMMUTABLE_LEVELS, "GL_TEXTURE_IMMUTABLE_LEVELS");
#endif
#if defined(GL_TIMELINE_SEMAPHORE_VALUE_NV)
defconsti(env, "GL-TIMELINE-SEMAPHORE-VALUE-NV", (GLenum) GL_TIMELINE_SEMAPHORE_VALUE_NV, "GL_TIMELINE_SEMAPHORE_VALUE_NV");
#endif
#if defined(GL_SEMAPHORE_TYPE_NV)
defconsti(env, "GL-SEMAPHORE-TYPE-NV", (GLenum) GL_SEMAPHORE_TYPE_NV, "GL_SEMAPHORE_TYPE_NV");
#endif
#if defined(GL_SEMAPHORE_TYPE_BINARY_NV)
defconsti(env, "GL-SEMAPHORE-TYPE-BINARY-NV", (GLenum) GL_SEMAPHORE_TYPE_BINARY_NV, "GL_SEMAPHORE_TYPE_BINARY_NV");
#endif
#if defined(GL_SEMAPHORE_TYPE_TIMELINE_NV)
defconsti(env, "GL-SEMAPHORE-TYPE-TIMELINE-NV", (GLenum) GL_SEMAPHORE_TYPE_TIMELINE_NV, "GL_SEMAPHORE_TYPE_TIMELINE_NV");
#endif
#if defined(GL_MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV)
defconsti(env, "GL-MAX-TIMELINE-SEMAPHORE-VALUE-DIFFERENCE-NV", (GLenum) GL_MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV, "GL_MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV");
#endif
#if defined(GL_TIME_ELAPSED_EXT)
defconsti(env, "GL-TIME-ELAPSED-EXT", (GLenum) GL_TIME_ELAPSED_EXT, "GL_TIME_ELAPSED_EXT");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_EXT)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-EXT", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_EXT, "GL_TRANSFORM_FEEDBACK_BUFFER_EXT");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-START-EXT", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT, "GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-SIZE-EXT", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT, "GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-BINDING-EXT", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT, "GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT");
#endif
#if defined(GL_INTERLEAVED_ATTRIBS_EXT)
defconsti(env, "GL-INTERLEAVED-ATTRIBS-EXT", (GLenum) GL_INTERLEAVED_ATTRIBS_EXT, "GL_INTERLEAVED_ATTRIBS_EXT");
#endif
#if defined(GL_SEPARATE_ATTRIBS_EXT)
defconsti(env, "GL-SEPARATE-ATTRIBS-EXT", (GLenum) GL_SEPARATE_ATTRIBS_EXT, "GL_SEPARATE_ATTRIBS_EXT");
#endif
#if defined(GL_PRIMITIVES_GENERATED_EXT)
defconsti(env, "GL-PRIMITIVES-GENERATED-EXT", (GLenum) GL_PRIMITIVES_GENERATED_EXT, "GL_PRIMITIVES_GENERATED_EXT");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT)
defconsti(env, "GL-TRANSFORM-FEEDBACK-PRIMITIVES-WRITTEN-EXT", (GLenum) GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT, "GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT");
#endif
#if defined(GL_RASTERIZER_DISCARD_EXT)
defconsti(env, "GL-RASTERIZER-DISCARD-EXT", (GLenum) GL_RASTERIZER_DISCARD_EXT, "GL_RASTERIZER_DISCARD_EXT");
#endif
#if defined(GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT)
defconsti(env, "GL-MAX-TRANSFORM-FEEDBACK-INTERLEAVED-COMPONENTS-EXT", (GLenum) GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT, "GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT");
#endif
#if defined(GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT)
defconsti(env, "GL-MAX-TRANSFORM-FEEDBACK-SEPARATE-ATTRIBS-EXT", (GLenum) GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT, "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT");
#endif
#if defined(GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT)
defconsti(env, "GL-MAX-TRANSFORM-FEEDBACK-SEPARATE-COMPONENTS-EXT", (GLenum) GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT, "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_VARYINGS_EXT)
defconsti(env, "GL-TRANSFORM-FEEDBACK-VARYINGS-EXT", (GLenum) GL_TRANSFORM_FEEDBACK_VARYINGS_EXT, "GL_TRANSFORM_FEEDBACK_VARYINGS_EXT");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-MODE-EXT", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT, "GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT)
defconsti(env, "GL-TRANSFORM-FEEDBACK-VARYING-MAX-LENGTH-EXT", (GLenum) GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT, "GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT");
#endif
#if defined(GL_UNPACK_ROW_LENGTH_EXT)
defconsti(env, "GL-UNPACK-ROW-LENGTH-EXT", (GLenum) GL_UNPACK_ROW_LENGTH_EXT, "GL_UNPACK_ROW_LENGTH_EXT");
#endif
#if defined(GL_UNPACK_SKIP_ROWS_EXT)
defconsti(env, "GL-UNPACK-SKIP-ROWS-EXT", (GLenum) GL_UNPACK_SKIP_ROWS_EXT, "GL_UNPACK_SKIP_ROWS_EXT");
#endif
#if defined(GL_UNPACK_SKIP_PIXELS_EXT)
defconsti(env, "GL-UNPACK-SKIP-PIXELS-EXT", (GLenum) GL_UNPACK_SKIP_PIXELS_EXT, "GL_UNPACK_SKIP_PIXELS_EXT");
#endif
#if defined(GL_VERTEX_ARRAY_EXT)
defconsti(env, "GL-VERTEX-ARRAY-EXT", (GLenum) GL_VERTEX_ARRAY_EXT, "GL_VERTEX_ARRAY_EXT");
#endif
#if defined(GL_NORMAL_ARRAY_EXT)
defconsti(env, "GL-NORMAL-ARRAY-EXT", (GLenum) GL_NORMAL_ARRAY_EXT, "GL_NORMAL_ARRAY_EXT");
#endif
#if defined(GL_COLOR_ARRAY_EXT)
defconsti(env, "GL-COLOR-ARRAY-EXT", (GLenum) GL_COLOR_ARRAY_EXT, "GL_COLOR_ARRAY_EXT");
#endif
#if defined(GL_INDEX_ARRAY_EXT)
defconsti(env, "GL-INDEX-ARRAY-EXT", (GLenum) GL_INDEX_ARRAY_EXT, "GL_INDEX_ARRAY_EXT");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_EXT)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-EXT", (GLenum) GL_TEXTURE_COORD_ARRAY_EXT, "GL_TEXTURE_COORD_ARRAY_EXT");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_EXT)
defconsti(env, "GL-EDGE-FLAG-ARRAY-EXT", (GLenum) GL_EDGE_FLAG_ARRAY_EXT, "GL_EDGE_FLAG_ARRAY_EXT");
#endif
#if defined(GL_VERTEX_ARRAY_SIZE_EXT)
defconsti(env, "GL-VERTEX-ARRAY-SIZE-EXT", (GLenum) GL_VERTEX_ARRAY_SIZE_EXT, "GL_VERTEX_ARRAY_SIZE_EXT");
#endif
#if defined(GL_VERTEX_ARRAY_TYPE_EXT)
defconsti(env, "GL-VERTEX-ARRAY-TYPE-EXT", (GLenum) GL_VERTEX_ARRAY_TYPE_EXT, "GL_VERTEX_ARRAY_TYPE_EXT");
#endif
#if defined(GL_VERTEX_ARRAY_STRIDE_EXT)
defconsti(env, "GL-VERTEX-ARRAY-STRIDE-EXT", (GLenum) GL_VERTEX_ARRAY_STRIDE_EXT, "GL_VERTEX_ARRAY_STRIDE_EXT");
#endif
#if defined(GL_VERTEX_ARRAY_COUNT_EXT)
defconsti(env, "GL-VERTEX-ARRAY-COUNT-EXT", (GLenum) GL_VERTEX_ARRAY_COUNT_EXT, "GL_VERTEX_ARRAY_COUNT_EXT");
#endif
#if defined(GL_NORMAL_ARRAY_TYPE_EXT)
defconsti(env, "GL-NORMAL-ARRAY-TYPE-EXT", (GLenum) GL_NORMAL_ARRAY_TYPE_EXT, "GL_NORMAL_ARRAY_TYPE_EXT");
#endif
#if defined(GL_NORMAL_ARRAY_STRIDE_EXT)
defconsti(env, "GL-NORMAL-ARRAY-STRIDE-EXT", (GLenum) GL_NORMAL_ARRAY_STRIDE_EXT, "GL_NORMAL_ARRAY_STRIDE_EXT");
#endif
#if defined(GL_NORMAL_ARRAY_COUNT_EXT)
defconsti(env, "GL-NORMAL-ARRAY-COUNT-EXT", (GLenum) GL_NORMAL_ARRAY_COUNT_EXT, "GL_NORMAL_ARRAY_COUNT_EXT");
#endif
#if defined(GL_COLOR_ARRAY_SIZE_EXT)
defconsti(env, "GL-COLOR-ARRAY-SIZE-EXT", (GLenum) GL_COLOR_ARRAY_SIZE_EXT, "GL_COLOR_ARRAY_SIZE_EXT");
#endif
#if defined(GL_COLOR_ARRAY_TYPE_EXT)
defconsti(env, "GL-COLOR-ARRAY-TYPE-EXT", (GLenum) GL_COLOR_ARRAY_TYPE_EXT, "GL_COLOR_ARRAY_TYPE_EXT");
#endif
#if defined(GL_COLOR_ARRAY_STRIDE_EXT)
defconsti(env, "GL-COLOR-ARRAY-STRIDE-EXT", (GLenum) GL_COLOR_ARRAY_STRIDE_EXT, "GL_COLOR_ARRAY_STRIDE_EXT");
#endif
#if defined(GL_COLOR_ARRAY_COUNT_EXT)
defconsti(env, "GL-COLOR-ARRAY-COUNT-EXT", (GLenum) GL_COLOR_ARRAY_COUNT_EXT, "GL_COLOR_ARRAY_COUNT_EXT");
#endif
#if defined(GL_INDEX_ARRAY_TYPE_EXT)
defconsti(env, "GL-INDEX-ARRAY-TYPE-EXT", (GLenum) GL_INDEX_ARRAY_TYPE_EXT, "GL_INDEX_ARRAY_TYPE_EXT");
#endif
#if defined(GL_INDEX_ARRAY_STRIDE_EXT)
defconsti(env, "GL-INDEX-ARRAY-STRIDE-EXT", (GLenum) GL_INDEX_ARRAY_STRIDE_EXT, "GL_INDEX_ARRAY_STRIDE_EXT");
#endif
#if defined(GL_INDEX_ARRAY_COUNT_EXT)
defconsti(env, "GL-INDEX-ARRAY-COUNT-EXT", (GLenum) GL_INDEX_ARRAY_COUNT_EXT, "GL_INDEX_ARRAY_COUNT_EXT");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_SIZE_EXT)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-SIZE-EXT", (GLenum) GL_TEXTURE_COORD_ARRAY_SIZE_EXT, "GL_TEXTURE_COORD_ARRAY_SIZE_EXT");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_TYPE_EXT)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-TYPE-EXT", (GLenum) GL_TEXTURE_COORD_ARRAY_TYPE_EXT, "GL_TEXTURE_COORD_ARRAY_TYPE_EXT");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_STRIDE_EXT)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-STRIDE-EXT", (GLenum) GL_TEXTURE_COORD_ARRAY_STRIDE_EXT, "GL_TEXTURE_COORD_ARRAY_STRIDE_EXT");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_COUNT_EXT)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-COUNT-EXT", (GLenum) GL_TEXTURE_COORD_ARRAY_COUNT_EXT, "GL_TEXTURE_COORD_ARRAY_COUNT_EXT");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_STRIDE_EXT)
defconsti(env, "GL-EDGE-FLAG-ARRAY-STRIDE-EXT", (GLenum) GL_EDGE_FLAG_ARRAY_STRIDE_EXT, "GL_EDGE_FLAG_ARRAY_STRIDE_EXT");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_COUNT_EXT)
defconsti(env, "GL-EDGE-FLAG-ARRAY-COUNT-EXT", (GLenum) GL_EDGE_FLAG_ARRAY_COUNT_EXT, "GL_EDGE_FLAG_ARRAY_COUNT_EXT");
#endif
#if defined(GL_VERTEX_ARRAY_POINTER_EXT)
defconsti(env, "GL-VERTEX-ARRAY-POINTER-EXT", (GLenum) GL_VERTEX_ARRAY_POINTER_EXT, "GL_VERTEX_ARRAY_POINTER_EXT");
#endif
#if defined(GL_NORMAL_ARRAY_POINTER_EXT)
defconsti(env, "GL-NORMAL-ARRAY-POINTER-EXT", (GLenum) GL_NORMAL_ARRAY_POINTER_EXT, "GL_NORMAL_ARRAY_POINTER_EXT");
#endif
#if defined(GL_COLOR_ARRAY_POINTER_EXT)
defconsti(env, "GL-COLOR-ARRAY-POINTER-EXT", (GLenum) GL_COLOR_ARRAY_POINTER_EXT, "GL_COLOR_ARRAY_POINTER_EXT");
#endif
#if defined(GL_INDEX_ARRAY_POINTER_EXT)
defconsti(env, "GL-INDEX-ARRAY-POINTER-EXT", (GLenum) GL_INDEX_ARRAY_POINTER_EXT, "GL_INDEX_ARRAY_POINTER_EXT");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_POINTER_EXT)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-POINTER-EXT", (GLenum) GL_TEXTURE_COORD_ARRAY_POINTER_EXT, "GL_TEXTURE_COORD_ARRAY_POINTER_EXT");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_POINTER_EXT)
defconsti(env, "GL-EDGE-FLAG-ARRAY-POINTER-EXT", (GLenum) GL_EDGE_FLAG_ARRAY_POINTER_EXT, "GL_EDGE_FLAG_ARRAY_POINTER_EXT");
#endif
#if defined(GL_BGRA)
defconsti(env, "GL-BGRA", (GLenum) GL_BGRA, "GL_BGRA");
#endif
#if defined(GL_DOUBLE)
defconsti(env, "GL-DOUBLE", (GLenum) GL_DOUBLE, "GL_DOUBLE");
#endif
#if defined(GL_DOUBLE_VEC2_EXT)
defconsti(env, "GL-DOUBLE-VEC2-EXT", (GLenum) GL_DOUBLE_VEC2_EXT, "GL_DOUBLE_VEC2_EXT");
#endif
#if defined(GL_DOUBLE_VEC3_EXT)
defconsti(env, "GL-DOUBLE-VEC3-EXT", (GLenum) GL_DOUBLE_VEC3_EXT, "GL_DOUBLE_VEC3_EXT");
#endif
#if defined(GL_DOUBLE_VEC4_EXT)
defconsti(env, "GL-DOUBLE-VEC4-EXT", (GLenum) GL_DOUBLE_VEC4_EXT, "GL_DOUBLE_VEC4_EXT");
#endif
#if defined(GL_DOUBLE_MAT2_EXT)
defconsti(env, "GL-DOUBLE-MAT2-EXT", (GLenum) GL_DOUBLE_MAT2_EXT, "GL_DOUBLE_MAT2_EXT");
#endif
#if defined(GL_DOUBLE_MAT3_EXT)
defconsti(env, "GL-DOUBLE-MAT3-EXT", (GLenum) GL_DOUBLE_MAT3_EXT, "GL_DOUBLE_MAT3_EXT");
#endif
#if defined(GL_DOUBLE_MAT4_EXT)
defconsti(env, "GL-DOUBLE-MAT4-EXT", (GLenum) GL_DOUBLE_MAT4_EXT, "GL_DOUBLE_MAT4_EXT");
#endif
#if defined(GL_DOUBLE_MAT2x3_EXT)
defconsti(env, "GL-DOUBLE-MAT2x3-EXT", (GLenum) GL_DOUBLE_MAT2x3_EXT, "GL_DOUBLE_MAT2x3_EXT");
#endif
#if defined(GL_DOUBLE_MAT2x4_EXT)
defconsti(env, "GL-DOUBLE-MAT2x4-EXT", (GLenum) GL_DOUBLE_MAT2x4_EXT, "GL_DOUBLE_MAT2x4_EXT");
#endif
#if defined(GL_DOUBLE_MAT3x2_EXT)
defconsti(env, "GL-DOUBLE-MAT3x2-EXT", (GLenum) GL_DOUBLE_MAT3x2_EXT, "GL_DOUBLE_MAT3x2_EXT");
#endif
#if defined(GL_DOUBLE_MAT3x4_EXT)
defconsti(env, "GL-DOUBLE-MAT3x4-EXT", (GLenum) GL_DOUBLE_MAT3x4_EXT, "GL_DOUBLE_MAT3x4_EXT");
#endif
#if defined(GL_DOUBLE_MAT4x2_EXT)
defconsti(env, "GL-DOUBLE-MAT4x2-EXT", (GLenum) GL_DOUBLE_MAT4x2_EXT, "GL_DOUBLE_MAT4x2_EXT");
#endif
#if defined(GL_DOUBLE_MAT4x3_EXT)
defconsti(env, "GL-DOUBLE-MAT4x3-EXT", (GLenum) GL_DOUBLE_MAT4x3_EXT, "GL_DOUBLE_MAT4x3_EXT");
#endif
#if defined(GL_VERTEX_SHADER_EXT)
defconsti(env, "GL-VERTEX-SHADER-EXT", (GLenum) GL_VERTEX_SHADER_EXT, "GL_VERTEX_SHADER_EXT");
#endif
#if defined(GL_VERTEX_SHADER_BINDING_EXT)
defconsti(env, "GL-VERTEX-SHADER-BINDING-EXT", (GLenum) GL_VERTEX_SHADER_BINDING_EXT, "GL_VERTEX_SHADER_BINDING_EXT");
#endif
#if defined(GL_OP_INDEX_EXT)
defconsti(env, "GL-OP-INDEX-EXT", (GLenum) GL_OP_INDEX_EXT, "GL_OP_INDEX_EXT");
#endif
#if defined(GL_OP_NEGATE_EXT)
defconsti(env, "GL-OP-NEGATE-EXT", (GLenum) GL_OP_NEGATE_EXT, "GL_OP_NEGATE_EXT");
#endif
#if defined(GL_OP_DOT3_EXT)
defconsti(env, "GL-OP-DOT3-EXT", (GLenum) GL_OP_DOT3_EXT, "GL_OP_DOT3_EXT");
#endif
#if defined(GL_OP_DOT4_EXT)
defconsti(env, "GL-OP-DOT4-EXT", (GLenum) GL_OP_DOT4_EXT, "GL_OP_DOT4_EXT");
#endif
#if defined(GL_OP_MUL_EXT)
defconsti(env, "GL-OP-MUL-EXT", (GLenum) GL_OP_MUL_EXT, "GL_OP_MUL_EXT");
#endif
#if defined(GL_OP_ADD_EXT)
defconsti(env, "GL-OP-ADD-EXT", (GLenum) GL_OP_ADD_EXT, "GL_OP_ADD_EXT");
#endif
#if defined(GL_OP_MADD_EXT)
defconsti(env, "GL-OP-MADD-EXT", (GLenum) GL_OP_MADD_EXT, "GL_OP_MADD_EXT");
#endif
#if defined(GL_OP_FRAC_EXT)
defconsti(env, "GL-OP-FRAC-EXT", (GLenum) GL_OP_FRAC_EXT, "GL_OP_FRAC_EXT");
#endif
#if defined(GL_OP_MAX_EXT)
defconsti(env, "GL-OP-MAX-EXT", (GLenum) GL_OP_MAX_EXT, "GL_OP_MAX_EXT");
#endif
#if defined(GL_OP_MIN_EXT)
defconsti(env, "GL-OP-MIN-EXT", (GLenum) GL_OP_MIN_EXT, "GL_OP_MIN_EXT");
#endif
#if defined(GL_OP_SET_GE_EXT)
defconsti(env, "GL-OP-SET-GE-EXT", (GLenum) GL_OP_SET_GE_EXT, "GL_OP_SET_GE_EXT");
#endif
#if defined(GL_OP_SET_LT_EXT)
defconsti(env, "GL-OP-SET-LT-EXT", (GLenum) GL_OP_SET_LT_EXT, "GL_OP_SET_LT_EXT");
#endif
#if defined(GL_OP_CLAMP_EXT)
defconsti(env, "GL-OP-CLAMP-EXT", (GLenum) GL_OP_CLAMP_EXT, "GL_OP_CLAMP_EXT");
#endif
#if defined(GL_OP_FLOOR_EXT)
defconsti(env, "GL-OP-FLOOR-EXT", (GLenum) GL_OP_FLOOR_EXT, "GL_OP_FLOOR_EXT");
#endif
#if defined(GL_OP_ROUND_EXT)
defconsti(env, "GL-OP-ROUND-EXT", (GLenum) GL_OP_ROUND_EXT, "GL_OP_ROUND_EXT");
#endif
#if defined(GL_OP_EXP_BASE_2_EXT)
defconsti(env, "GL-OP-EXP-BASE-2-EXT", (GLenum) GL_OP_EXP_BASE_2_EXT, "GL_OP_EXP_BASE_2_EXT");
#endif
#if defined(GL_OP_LOG_BASE_2_EXT)
defconsti(env, "GL-OP-LOG-BASE-2-EXT", (GLenum) GL_OP_LOG_BASE_2_EXT, "GL_OP_LOG_BASE_2_EXT");
#endif
#if defined(GL_OP_POWER_EXT)
defconsti(env, "GL-OP-POWER-EXT", (GLenum) GL_OP_POWER_EXT, "GL_OP_POWER_EXT");
#endif
#if defined(GL_OP_RECIP_EXT)
defconsti(env, "GL-OP-RECIP-EXT", (GLenum) GL_OP_RECIP_EXT, "GL_OP_RECIP_EXT");
#endif
#if defined(GL_OP_RECIP_SQRT_EXT)
defconsti(env, "GL-OP-RECIP-SQRT-EXT", (GLenum) GL_OP_RECIP_SQRT_EXT, "GL_OP_RECIP_SQRT_EXT");
#endif
#if defined(GL_OP_SUB_EXT)
defconsti(env, "GL-OP-SUB-EXT", (GLenum) GL_OP_SUB_EXT, "GL_OP_SUB_EXT");
#endif
#if defined(GL_OP_CROSS_PRODUCT_EXT)
defconsti(env, "GL-OP-CROSS-PRODUCT-EXT", (GLenum) GL_OP_CROSS_PRODUCT_EXT, "GL_OP_CROSS_PRODUCT_EXT");
#endif
#if defined(GL_OP_MULTIPLY_MATRIX_EXT)
defconsti(env, "GL-OP-MULTIPLY-MATRIX-EXT", (GLenum) GL_OP_MULTIPLY_MATRIX_EXT, "GL_OP_MULTIPLY_MATRIX_EXT");
#endif
#if defined(GL_OP_MOV_EXT)
defconsti(env, "GL-OP-MOV-EXT", (GLenum) GL_OP_MOV_EXT, "GL_OP_MOV_EXT");
#endif
#if defined(GL_OUTPUT_VERTEX_EXT)
defconsti(env, "GL-OUTPUT-VERTEX-EXT", (GLenum) GL_OUTPUT_VERTEX_EXT, "GL_OUTPUT_VERTEX_EXT");
#endif
#if defined(GL_OUTPUT_COLOR0_EXT)
defconsti(env, "GL-OUTPUT-COLOR0-EXT", (GLenum) GL_OUTPUT_COLOR0_EXT, "GL_OUTPUT_COLOR0_EXT");
#endif
#if defined(GL_OUTPUT_COLOR1_EXT)
defconsti(env, "GL-OUTPUT-COLOR1-EXT", (GLenum) GL_OUTPUT_COLOR1_EXT, "GL_OUTPUT_COLOR1_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD0_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD0-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD0_EXT, "GL_OUTPUT_TEXTURE_COORD0_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD1_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD1-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD1_EXT, "GL_OUTPUT_TEXTURE_COORD1_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD2_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD2-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD2_EXT, "GL_OUTPUT_TEXTURE_COORD2_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD3_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD3-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD3_EXT, "GL_OUTPUT_TEXTURE_COORD3_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD4_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD4-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD4_EXT, "GL_OUTPUT_TEXTURE_COORD4_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD5_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD5-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD5_EXT, "GL_OUTPUT_TEXTURE_COORD5_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD6_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD6-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD6_EXT, "GL_OUTPUT_TEXTURE_COORD6_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD7_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD7-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD7_EXT, "GL_OUTPUT_TEXTURE_COORD7_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD8_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD8-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD8_EXT, "GL_OUTPUT_TEXTURE_COORD8_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD9_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD9-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD9_EXT, "GL_OUTPUT_TEXTURE_COORD9_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD10_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD10-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD10_EXT, "GL_OUTPUT_TEXTURE_COORD10_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD11_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD11-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD11_EXT, "GL_OUTPUT_TEXTURE_COORD11_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD12_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD12-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD12_EXT, "GL_OUTPUT_TEXTURE_COORD12_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD13_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD13-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD13_EXT, "GL_OUTPUT_TEXTURE_COORD13_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD14_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD14-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD14_EXT, "GL_OUTPUT_TEXTURE_COORD14_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD15_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD15-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD15_EXT, "GL_OUTPUT_TEXTURE_COORD15_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD16_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD16-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD16_EXT, "GL_OUTPUT_TEXTURE_COORD16_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD17_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD17-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD17_EXT, "GL_OUTPUT_TEXTURE_COORD17_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD18_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD18-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD18_EXT, "GL_OUTPUT_TEXTURE_COORD18_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD19_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD19-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD19_EXT, "GL_OUTPUT_TEXTURE_COORD19_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD20_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD20-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD20_EXT, "GL_OUTPUT_TEXTURE_COORD20_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD21_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD21-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD21_EXT, "GL_OUTPUT_TEXTURE_COORD21_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD22_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD22-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD22_EXT, "GL_OUTPUT_TEXTURE_COORD22_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD23_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD23-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD23_EXT, "GL_OUTPUT_TEXTURE_COORD23_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD24_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD24-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD24_EXT, "GL_OUTPUT_TEXTURE_COORD24_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD25_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD25-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD25_EXT, "GL_OUTPUT_TEXTURE_COORD25_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD26_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD26-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD26_EXT, "GL_OUTPUT_TEXTURE_COORD26_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD27_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD27-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD27_EXT, "GL_OUTPUT_TEXTURE_COORD27_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD28_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD28-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD28_EXT, "GL_OUTPUT_TEXTURE_COORD28_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD29_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD29-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD29_EXT, "GL_OUTPUT_TEXTURE_COORD29_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD30_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD30-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD30_EXT, "GL_OUTPUT_TEXTURE_COORD30_EXT");
#endif
#if defined(GL_OUTPUT_TEXTURE_COORD31_EXT)
defconsti(env, "GL-OUTPUT-TEXTURE-COORD31-EXT", (GLenum) GL_OUTPUT_TEXTURE_COORD31_EXT, "GL_OUTPUT_TEXTURE_COORD31_EXT");
#endif
#if defined(GL_OUTPUT_FOG_EXT)
defconsti(env, "GL-OUTPUT-FOG-EXT", (GLenum) GL_OUTPUT_FOG_EXT, "GL_OUTPUT_FOG_EXT");
#endif
#if defined(GL_SCALAR_EXT)
defconsti(env, "GL-SCALAR-EXT", (GLenum) GL_SCALAR_EXT, "GL_SCALAR_EXT");
#endif
#if defined(GL_VECTOR_EXT)
defconsti(env, "GL-VECTOR-EXT", (GLenum) GL_VECTOR_EXT, "GL_VECTOR_EXT");
#endif
#if defined(GL_MATRIX_EXT)
defconsti(env, "GL-MATRIX-EXT", (GLenum) GL_MATRIX_EXT, "GL_MATRIX_EXT");
#endif
#if defined(GL_VARIANT_EXT)
defconsti(env, "GL-VARIANT-EXT", (GLenum) GL_VARIANT_EXT, "GL_VARIANT_EXT");
#endif
#if defined(GL_INVARIANT_EXT)
defconsti(env, "GL-INVARIANT-EXT", (GLenum) GL_INVARIANT_EXT, "GL_INVARIANT_EXT");
#endif
#if defined(GL_LOCAL_CONSTANT_EXT)
defconsti(env, "GL-LOCAL-CONSTANT-EXT", (GLenum) GL_LOCAL_CONSTANT_EXT, "GL_LOCAL_CONSTANT_EXT");
#endif
#if defined(GL_LOCAL_EXT)
defconsti(env, "GL-LOCAL-EXT", (GLenum) GL_LOCAL_EXT, "GL_LOCAL_EXT");
#endif
#if defined(GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT)
defconsti(env, "GL-MAX-VERTEX-SHADER-INSTRUCTIONS-EXT", (GLenum) GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT, "GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT");
#endif
#if defined(GL_MAX_VERTEX_SHADER_VARIANTS_EXT)
defconsti(env, "GL-MAX-VERTEX-SHADER-VARIANTS-EXT", (GLenum) GL_MAX_VERTEX_SHADER_VARIANTS_EXT, "GL_MAX_VERTEX_SHADER_VARIANTS_EXT");
#endif
#if defined(GL_MAX_VERTEX_SHADER_INVARIANTS_EXT)
defconsti(env, "GL-MAX-VERTEX-SHADER-INVARIANTS-EXT", (GLenum) GL_MAX_VERTEX_SHADER_INVARIANTS_EXT, "GL_MAX_VERTEX_SHADER_INVARIANTS_EXT");
#endif
#if defined(GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT)
defconsti(env, "GL-MAX-VERTEX-SHADER-LOCAL-CONSTANTS-EXT", (GLenum) GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT, "GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT");
#endif
#if defined(GL_MAX_VERTEX_SHADER_LOCALS_EXT)
defconsti(env, "GL-MAX-VERTEX-SHADER-LOCALS-EXT", (GLenum) GL_MAX_VERTEX_SHADER_LOCALS_EXT, "GL_MAX_VERTEX_SHADER_LOCALS_EXT");
#endif
#if defined(GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT)
defconsti(env, "GL-MAX-OPTIMIZED-VERTEX-SHADER-INSTRUCTIONS-EXT", (GLenum) GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT, "GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT");
#endif
#if defined(GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT)
defconsti(env, "GL-MAX-OPTIMIZED-VERTEX-SHADER-VARIANTS-EXT", (GLenum) GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT, "GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT");
#endif
#if defined(GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT)
defconsti(env, "GL-MAX-OPTIMIZED-VERTEX-SHADER-LOCAL-CONSTANTS-EXT", (GLenum) GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT, "GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT");
#endif
#if defined(GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT)
defconsti(env, "GL-MAX-OPTIMIZED-VERTEX-SHADER-INVARIANTS-EXT", (GLenum) GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT, "GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT");
#endif
#if defined(GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT)
defconsti(env, "GL-MAX-OPTIMIZED-VERTEX-SHADER-LOCALS-EXT", (GLenum) GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT, "GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT");
#endif
#if defined(GL_VERTEX_SHADER_INSTRUCTIONS_EXT)
defconsti(env, "GL-VERTEX-SHADER-INSTRUCTIONS-EXT", (GLenum) GL_VERTEX_SHADER_INSTRUCTIONS_EXT, "GL_VERTEX_SHADER_INSTRUCTIONS_EXT");
#endif
#if defined(GL_VERTEX_SHADER_VARIANTS_EXT)
defconsti(env, "GL-VERTEX-SHADER-VARIANTS-EXT", (GLenum) GL_VERTEX_SHADER_VARIANTS_EXT, "GL_VERTEX_SHADER_VARIANTS_EXT");
#endif
#if defined(GL_VERTEX_SHADER_INVARIANTS_EXT)
defconsti(env, "GL-VERTEX-SHADER-INVARIANTS-EXT", (GLenum) GL_VERTEX_SHADER_INVARIANTS_EXT, "GL_VERTEX_SHADER_INVARIANTS_EXT");
#endif
#if defined(GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT)
defconsti(env, "GL-VERTEX-SHADER-LOCAL-CONSTANTS-EXT", (GLenum) GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT, "GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT");
#endif
#if defined(GL_VERTEX_SHADER_LOCALS_EXT)
defconsti(env, "GL-VERTEX-SHADER-LOCALS-EXT", (GLenum) GL_VERTEX_SHADER_LOCALS_EXT, "GL_VERTEX_SHADER_LOCALS_EXT");
#endif
#if defined(GL_VERTEX_SHADER_OPTIMIZED_EXT)
defconsti(env, "GL-VERTEX-SHADER-OPTIMIZED-EXT", (GLenum) GL_VERTEX_SHADER_OPTIMIZED_EXT, "GL_VERTEX_SHADER_OPTIMIZED_EXT");
#endif
#if defined(GL_X_EXT)
defconsti(env, "GL-X-EXT", (GLenum) GL_X_EXT, "GL_X_EXT");
#endif
#if defined(GL_Y_EXT)
defconsti(env, "GL-Y-EXT", (GLenum) GL_Y_EXT, "GL_Y_EXT");
#endif
#if defined(GL_Z_EXT)
defconsti(env, "GL-Z-EXT", (GLenum) GL_Z_EXT, "GL_Z_EXT");
#endif
#if defined(GL_W_EXT)
defconsti(env, "GL-W-EXT", (GLenum) GL_W_EXT, "GL_W_EXT");
#endif
#if defined(GL_NEGATIVE_X_EXT)
defconsti(env, "GL-NEGATIVE-X-EXT", (GLenum) GL_NEGATIVE_X_EXT, "GL_NEGATIVE_X_EXT");
#endif
#if defined(GL_NEGATIVE_Y_EXT)
defconsti(env, "GL-NEGATIVE-Y-EXT", (GLenum) GL_NEGATIVE_Y_EXT, "GL_NEGATIVE_Y_EXT");
#endif
#if defined(GL_NEGATIVE_Z_EXT)
defconsti(env, "GL-NEGATIVE-Z-EXT", (GLenum) GL_NEGATIVE_Z_EXT, "GL_NEGATIVE_Z_EXT");
#endif
#if defined(GL_NEGATIVE_W_EXT)
defconsti(env, "GL-NEGATIVE-W-EXT", (GLenum) GL_NEGATIVE_W_EXT, "GL_NEGATIVE_W_EXT");
#endif
#if defined(GL_ZERO_EXT)
defconsti(env, "GL-ZERO-EXT", (GLenum) GL_ZERO_EXT, "GL_ZERO_EXT");
#endif
#if defined(GL_ONE_EXT)
defconsti(env, "GL-ONE-EXT", (GLenum) GL_ONE_EXT, "GL_ONE_EXT");
#endif
#if defined(GL_NEGATIVE_ONE_EXT)
defconsti(env, "GL-NEGATIVE-ONE-EXT", (GLenum) GL_NEGATIVE_ONE_EXT, "GL_NEGATIVE_ONE_EXT");
#endif
#if defined(GL_NORMALIZED_RANGE_EXT)
defconsti(env, "GL-NORMALIZED-RANGE-EXT", (GLenum) GL_NORMALIZED_RANGE_EXT, "GL_NORMALIZED_RANGE_EXT");
#endif
#if defined(GL_FULL_RANGE_EXT)
defconsti(env, "GL-FULL-RANGE-EXT", (GLenum) GL_FULL_RANGE_EXT, "GL_FULL_RANGE_EXT");
#endif
#if defined(GL_CURRENT_VERTEX_EXT)
defconsti(env, "GL-CURRENT-VERTEX-EXT", (GLenum) GL_CURRENT_VERTEX_EXT, "GL_CURRENT_VERTEX_EXT");
#endif
#if defined(GL_MVP_MATRIX_EXT)
defconsti(env, "GL-MVP-MATRIX-EXT", (GLenum) GL_MVP_MATRIX_EXT, "GL_MVP_MATRIX_EXT");
#endif
#if defined(GL_VARIANT_VALUE_EXT)
defconsti(env, "GL-VARIANT-VALUE-EXT", (GLenum) GL_VARIANT_VALUE_EXT, "GL_VARIANT_VALUE_EXT");
#endif
#if defined(GL_VARIANT_DATATYPE_EXT)
defconsti(env, "GL-VARIANT-DATATYPE-EXT", (GLenum) GL_VARIANT_DATATYPE_EXT, "GL_VARIANT_DATATYPE_EXT");
#endif
#if defined(GL_VARIANT_ARRAY_STRIDE_EXT)
defconsti(env, "GL-VARIANT-ARRAY-STRIDE-EXT", (GLenum) GL_VARIANT_ARRAY_STRIDE_EXT, "GL_VARIANT_ARRAY_STRIDE_EXT");
#endif
#if defined(GL_VARIANT_ARRAY_TYPE_EXT)
defconsti(env, "GL-VARIANT-ARRAY-TYPE-EXT", (GLenum) GL_VARIANT_ARRAY_TYPE_EXT, "GL_VARIANT_ARRAY_TYPE_EXT");
#endif
#if defined(GL_VARIANT_ARRAY_EXT)
defconsti(env, "GL-VARIANT-ARRAY-EXT", (GLenum) GL_VARIANT_ARRAY_EXT, "GL_VARIANT_ARRAY_EXT");
#endif
#if defined(GL_VARIANT_ARRAY_POINTER_EXT)
defconsti(env, "GL-VARIANT-ARRAY-POINTER-EXT", (GLenum) GL_VARIANT_ARRAY_POINTER_EXT, "GL_VARIANT_ARRAY_POINTER_EXT");
#endif
#if defined(GL_INVARIANT_VALUE_EXT)
defconsti(env, "GL-INVARIANT-VALUE-EXT", (GLenum) GL_INVARIANT_VALUE_EXT, "GL_INVARIANT_VALUE_EXT");
#endif
#if defined(GL_INVARIANT_DATATYPE_EXT)
defconsti(env, "GL-INVARIANT-DATATYPE-EXT", (GLenum) GL_INVARIANT_DATATYPE_EXT, "GL_INVARIANT_DATATYPE_EXT");
#endif
#if defined(GL_LOCAL_CONSTANT_VALUE_EXT)
defconsti(env, "GL-LOCAL-CONSTANT-VALUE-EXT", (GLenum) GL_LOCAL_CONSTANT_VALUE_EXT, "GL_LOCAL_CONSTANT_VALUE_EXT");
#endif
#if defined(GL_LOCAL_CONSTANT_DATATYPE_EXT)
defconsti(env, "GL-LOCAL-CONSTANT-DATATYPE-EXT", (GLenum) GL_LOCAL_CONSTANT_DATATYPE_EXT, "GL_LOCAL_CONSTANT_DATATYPE_EXT");
#endif
#if defined(GL_MODELVIEW0_STACK_DEPTH_EXT)
defconsti(env, "GL-MODELVIEW0-STACK-DEPTH-EXT", (GLenum) GL_MODELVIEW0_STACK_DEPTH_EXT, "GL_MODELVIEW0_STACK_DEPTH_EXT");
#endif
#if defined(GL_MODELVIEW1_STACK_DEPTH_EXT)
defconsti(env, "GL-MODELVIEW1-STACK-DEPTH-EXT", (GLenum) GL_MODELVIEW1_STACK_DEPTH_EXT, "GL_MODELVIEW1_STACK_DEPTH_EXT");
#endif
#if defined(GL_MODELVIEW0_MATRIX_EXT)
defconsti(env, "GL-MODELVIEW0-MATRIX-EXT", (GLenum) GL_MODELVIEW0_MATRIX_EXT, "GL_MODELVIEW0_MATRIX_EXT");
#endif
#if defined(GL_MODELVIEW1_MATRIX_EXT)
defconsti(env, "GL-MODELVIEW1-MATRIX-EXT", (GLenum) GL_MODELVIEW1_MATRIX_EXT, "GL_MODELVIEW1_MATRIX_EXT");
#endif
#if defined(GL_VERTEX_WEIGHTING_EXT)
defconsti(env, "GL-VERTEX-WEIGHTING-EXT", (GLenum) GL_VERTEX_WEIGHTING_EXT, "GL_VERTEX_WEIGHTING_EXT");
#endif
#if defined(GL_MODELVIEW0_EXT)
defconsti(env, "GL-MODELVIEW0-EXT", (GLenum) GL_MODELVIEW0_EXT, "GL_MODELVIEW0_EXT");
#endif
#if defined(GL_MODELVIEW1_EXT)
defconsti(env, "GL-MODELVIEW1-EXT", (GLenum) GL_MODELVIEW1_EXT, "GL_MODELVIEW1_EXT");
#endif
#if defined(GL_CURRENT_VERTEX_WEIGHT_EXT)
defconsti(env, "GL-CURRENT-VERTEX-WEIGHT-EXT", (GLenum) GL_CURRENT_VERTEX_WEIGHT_EXT, "GL_CURRENT_VERTEX_WEIGHT_EXT");
#endif
#if defined(GL_VERTEX_WEIGHT_ARRAY_EXT)
defconsti(env, "GL-VERTEX-WEIGHT-ARRAY-EXT", (GLenum) GL_VERTEX_WEIGHT_ARRAY_EXT, "GL_VERTEX_WEIGHT_ARRAY_EXT");
#endif
#if defined(GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT)
defconsti(env, "GL-VERTEX-WEIGHT-ARRAY-SIZE-EXT", (GLenum) GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT, "GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT");
#endif
#if defined(GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT)
defconsti(env, "GL-VERTEX-WEIGHT-ARRAY-TYPE-EXT", (GLenum) GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT, "GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT");
#endif
#if defined(GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT)
defconsti(env, "GL-VERTEX-WEIGHT-ARRAY-STRIDE-EXT", (GLenum) GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT, "GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT");
#endif
#if defined(GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT)
defconsti(env, "GL-VERTEX-WEIGHT-ARRAY-POINTER-EXT", (GLenum) GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT, "GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT");
#endif
#if defined(GL_INCLUSIVE_EXT)
defconsti(env, "GL-INCLUSIVE-EXT", (GLenum) GL_INCLUSIVE_EXT, "GL_INCLUSIVE_EXT");
#endif
#if defined(GL_EXCLUSIVE_EXT)
defconsti(env, "GL-EXCLUSIVE-EXT", (GLenum) GL_EXCLUSIVE_EXT, "GL_EXCLUSIVE_EXT");
#endif
#if defined(GL_WINDOW_RECTANGLE_EXT)
defconsti(env, "GL-WINDOW-RECTANGLE-EXT", (GLenum) GL_WINDOW_RECTANGLE_EXT, "GL_WINDOW_RECTANGLE_EXT");
#endif
#if defined(GL_WINDOW_RECTANGLE_MODE_EXT)
defconsti(env, "GL-WINDOW-RECTANGLE-MODE-EXT", (GLenum) GL_WINDOW_RECTANGLE_MODE_EXT, "GL_WINDOW_RECTANGLE_MODE_EXT");
#endif
#if defined(GL_MAX_WINDOW_RECTANGLES_EXT)
defconsti(env, "GL-MAX-WINDOW-RECTANGLES-EXT", (GLenum) GL_MAX_WINDOW_RECTANGLES_EXT, "GL_MAX_WINDOW_RECTANGLES_EXT");
#endif
#if defined(GL_NUM_WINDOW_RECTANGLES_EXT)
defconsti(env, "GL-NUM-WINDOW-RECTANGLES-EXT", (GLenum) GL_NUM_WINDOW_RECTANGLES_EXT, "GL_NUM_WINDOW_RECTANGLES_EXT");
#endif
#if defined(GL_SYNC_X11_FENCE_EXT)
defconsti(env, "GL-SYNC-X11-FENCE-EXT", (GLenum) GL_SYNC_X11_FENCE_EXT, "GL_SYNC_X11_FENCE_EXT");
#endif
#if defined(GL_GCCSO_SHADER_BINARY_FJ)
defconsti(env, "GL-GCCSO-SHADER-BINARY-FJ", (GLenum) GL_GCCSO_SHADER_BINARY_FJ, "GL_GCCSO_SHADER_BINARY_FJ");
#endif
#if defined(GL_IGNORE_BORDER_HP)
defconsti(env, "GL-IGNORE-BORDER-HP", (GLenum) GL_IGNORE_BORDER_HP, "GL_IGNORE_BORDER_HP");
#endif
#if defined(GL_CONSTANT_BORDER_HP)
defconsti(env, "GL-CONSTANT-BORDER-HP", (GLenum) GL_CONSTANT_BORDER_HP, "GL_CONSTANT_BORDER_HP");
#endif
#if defined(GL_REPLICATE_BORDER_HP)
defconsti(env, "GL-REPLICATE-BORDER-HP", (GLenum) GL_REPLICATE_BORDER_HP, "GL_REPLICATE_BORDER_HP");
#endif
#if defined(GL_CONVOLUTION_BORDER_COLOR_HP)
defconsti(env, "GL-CONVOLUTION-BORDER-COLOR-HP", (GLenum) GL_CONVOLUTION_BORDER_COLOR_HP, "GL_CONVOLUTION_BORDER_COLOR_HP");
#endif
#if defined(GL_IMAGE_SCALE_X_HP)
defconsti(env, "GL-IMAGE-SCALE-X-HP", (GLenum) GL_IMAGE_SCALE_X_HP, "GL_IMAGE_SCALE_X_HP");
#endif
#if defined(GL_IMAGE_SCALE_Y_HP)
defconsti(env, "GL-IMAGE-SCALE-Y-HP", (GLenum) GL_IMAGE_SCALE_Y_HP, "GL_IMAGE_SCALE_Y_HP");
#endif
#if defined(GL_IMAGE_TRANSLATE_X_HP)
defconsti(env, "GL-IMAGE-TRANSLATE-X-HP", (GLenum) GL_IMAGE_TRANSLATE_X_HP, "GL_IMAGE_TRANSLATE_X_HP");
#endif
#if defined(GL_IMAGE_TRANSLATE_Y_HP)
defconsti(env, "GL-IMAGE-TRANSLATE-Y-HP", (GLenum) GL_IMAGE_TRANSLATE_Y_HP, "GL_IMAGE_TRANSLATE_Y_HP");
#endif
#if defined(GL_IMAGE_ROTATE_ANGLE_HP)
defconsti(env, "GL-IMAGE-ROTATE-ANGLE-HP", (GLenum) GL_IMAGE_ROTATE_ANGLE_HP, "GL_IMAGE_ROTATE_ANGLE_HP");
#endif
#if defined(GL_IMAGE_ROTATE_ORIGIN_X_HP)
defconsti(env, "GL-IMAGE-ROTATE-ORIGIN-X-HP", (GLenum) GL_IMAGE_ROTATE_ORIGIN_X_HP, "GL_IMAGE_ROTATE_ORIGIN_X_HP");
#endif
#if defined(GL_IMAGE_ROTATE_ORIGIN_Y_HP)
defconsti(env, "GL-IMAGE-ROTATE-ORIGIN-Y-HP", (GLenum) GL_IMAGE_ROTATE_ORIGIN_Y_HP, "GL_IMAGE_ROTATE_ORIGIN_Y_HP");
#endif
#if defined(GL_IMAGE_MAG_FILTER_HP)
defconsti(env, "GL-IMAGE-MAG-FILTER-HP", (GLenum) GL_IMAGE_MAG_FILTER_HP, "GL_IMAGE_MAG_FILTER_HP");
#endif
#if defined(GL_IMAGE_MIN_FILTER_HP)
defconsti(env, "GL-IMAGE-MIN-FILTER-HP", (GLenum) GL_IMAGE_MIN_FILTER_HP, "GL_IMAGE_MIN_FILTER_HP");
#endif
#if defined(GL_IMAGE_CUBIC_WEIGHT_HP)
defconsti(env, "GL-IMAGE-CUBIC-WEIGHT-HP", (GLenum) GL_IMAGE_CUBIC_WEIGHT_HP, "GL_IMAGE_CUBIC_WEIGHT_HP");
#endif
#if defined(GL_CUBIC_HP)
defconsti(env, "GL-CUBIC-HP", (GLenum) GL_CUBIC_HP, "GL_CUBIC_HP");
#endif
#if defined(GL_AVERAGE_HP)
defconsti(env, "GL-AVERAGE-HP", (GLenum) GL_AVERAGE_HP, "GL_AVERAGE_HP");
#endif
#if defined(GL_IMAGE_TRANSFORM_2D_HP)
defconsti(env, "GL-IMAGE-TRANSFORM-2D-HP", (GLenum) GL_IMAGE_TRANSFORM_2D_HP, "GL_IMAGE_TRANSFORM_2D_HP");
#endif
#if defined(GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP)
defconsti(env, "GL-POST-IMAGE-TRANSFORM-COLOR-TABLE-HP", (GLenum) GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP, "GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP");
#endif
#if defined(GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP)
defconsti(env, "GL-PROXY-POST-IMAGE-TRANSFORM-COLOR-TABLE-HP", (GLenum) GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP, "GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP");
#endif
#if defined(GL_OCCLUSION_TEST_HP)
defconsti(env, "GL-OCCLUSION-TEST-HP", (GLenum) GL_OCCLUSION_TEST_HP, "GL_OCCLUSION_TEST_HP");
#endif
#if defined(GL_OCCLUSION_TEST_RESULT_HP)
defconsti(env, "GL-OCCLUSION-TEST-RESULT-HP", (GLenum) GL_OCCLUSION_TEST_RESULT_HP, "GL_OCCLUSION_TEST_RESULT_HP");
#endif
#if defined(GL_TEXTURE_LIGHTING_MODE_HP)
defconsti(env, "GL-TEXTURE-LIGHTING-MODE-HP", (GLenum) GL_TEXTURE_LIGHTING_MODE_HP, "GL_TEXTURE_LIGHTING_MODE_HP");
#endif
#if defined(GL_TEXTURE_POST_SPECULAR_HP)
defconsti(env, "GL-TEXTURE-POST-SPECULAR-HP", (GLenum) GL_TEXTURE_POST_SPECULAR_HP, "GL_TEXTURE_POST_SPECULAR_HP");
#endif
#if defined(GL_TEXTURE_PRE_SPECULAR_HP)
defconsti(env, "GL-TEXTURE-PRE-SPECULAR-HP", (GLenum) GL_TEXTURE_PRE_SPECULAR_HP, "GL_TEXTURE_PRE_SPECULAR_HP");
#endif
#if defined(GL_CULL_VERTEX_IBM)
defconsti(env, "GL-CULL-VERTEX-IBM", (GLenum) GL_CULL_VERTEX_IBM, "GL_CULL_VERTEX_IBM");
#endif
#if defined(GL_RASTER_POSITION_UNCLIPPED_IBM)
defconsti(env, "GL-RASTER-POSITION-UNCLIPPED-IBM", (GLenum) GL_RASTER_POSITION_UNCLIPPED_IBM, "GL_RASTER_POSITION_UNCLIPPED_IBM");
#endif
#if defined(GL_ALL_STATIC_DATA_IBM)
defconsti(env, "GL-ALL-STATIC-DATA-IBM", (GLenum) GL_ALL_STATIC_DATA_IBM, "GL_ALL_STATIC_DATA_IBM");
#endif
#if defined(GL_STATIC_VERTEX_ARRAY_IBM)
defconsti(env, "GL-STATIC-VERTEX-ARRAY-IBM", (GLenum) GL_STATIC_VERTEX_ARRAY_IBM, "GL_STATIC_VERTEX_ARRAY_IBM");
#endif
#if defined(GL_MIRRORED_REPEAT_IBM)
defconsti(env, "GL-MIRRORED-REPEAT-IBM", (GLenum) GL_MIRRORED_REPEAT_IBM, "GL_MIRRORED_REPEAT_IBM");
#endif
#if defined(GL_VERTEX_ARRAY_LIST_IBM)
defconsti(env, "GL-VERTEX-ARRAY-LIST-IBM", (GLenum) GL_VERTEX_ARRAY_LIST_IBM, "GL_VERTEX_ARRAY_LIST_IBM");
#endif
#if defined(GL_NORMAL_ARRAY_LIST_IBM)
defconsti(env, "GL-NORMAL-ARRAY-LIST-IBM", (GLenum) GL_NORMAL_ARRAY_LIST_IBM, "GL_NORMAL_ARRAY_LIST_IBM");
#endif
#if defined(GL_COLOR_ARRAY_LIST_IBM)
defconsti(env, "GL-COLOR-ARRAY-LIST-IBM", (GLenum) GL_COLOR_ARRAY_LIST_IBM, "GL_COLOR_ARRAY_LIST_IBM");
#endif
#if defined(GL_INDEX_ARRAY_LIST_IBM)
defconsti(env, "GL-INDEX-ARRAY-LIST-IBM", (GLenum) GL_INDEX_ARRAY_LIST_IBM, "GL_INDEX_ARRAY_LIST_IBM");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_LIST_IBM)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-LIST-IBM", (GLenum) GL_TEXTURE_COORD_ARRAY_LIST_IBM, "GL_TEXTURE_COORD_ARRAY_LIST_IBM");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_LIST_IBM)
defconsti(env, "GL-EDGE-FLAG-ARRAY-LIST-IBM", (GLenum) GL_EDGE_FLAG_ARRAY_LIST_IBM, "GL_EDGE_FLAG_ARRAY_LIST_IBM");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY_LIST_IBM)
defconsti(env, "GL-FOG-COORDINATE-ARRAY-LIST-IBM", (GLenum) GL_FOG_COORDINATE_ARRAY_LIST_IBM, "GL_FOG_COORDINATE_ARRAY_LIST_IBM");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_LIST_IBM)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-LIST-IBM", (GLenum) GL_SECONDARY_COLOR_ARRAY_LIST_IBM, "GL_SECONDARY_COLOR_ARRAY_LIST_IBM");
#endif
#if defined(GL_VERTEX_ARRAY_LIST_STRIDE_IBM)
defconsti(env, "GL-VERTEX-ARRAY-LIST-STRIDE-IBM", (GLenum) GL_VERTEX_ARRAY_LIST_STRIDE_IBM, "GL_VERTEX_ARRAY_LIST_STRIDE_IBM");
#endif
#if defined(GL_NORMAL_ARRAY_LIST_STRIDE_IBM)
defconsti(env, "GL-NORMAL-ARRAY-LIST-STRIDE-IBM", (GLenum) GL_NORMAL_ARRAY_LIST_STRIDE_IBM, "GL_NORMAL_ARRAY_LIST_STRIDE_IBM");
#endif
#if defined(GL_COLOR_ARRAY_LIST_STRIDE_IBM)
defconsti(env, "GL-COLOR-ARRAY-LIST-STRIDE-IBM", (GLenum) GL_COLOR_ARRAY_LIST_STRIDE_IBM, "GL_COLOR_ARRAY_LIST_STRIDE_IBM");
#endif
#if defined(GL_INDEX_ARRAY_LIST_STRIDE_IBM)
defconsti(env, "GL-INDEX-ARRAY-LIST-STRIDE-IBM", (GLenum) GL_INDEX_ARRAY_LIST_STRIDE_IBM, "GL_INDEX_ARRAY_LIST_STRIDE_IBM");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-LIST-STRIDE-IBM", (GLenum) GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM, "GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM)
defconsti(env, "GL-EDGE-FLAG-ARRAY-LIST-STRIDE-IBM", (GLenum) GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM, "GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM");
#endif
#if defined(GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM)
defconsti(env, "GL-FOG-COORDINATE-ARRAY-LIST-STRIDE-IBM", (GLenum) GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM, "GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-LIST-STRIDE-IBM", (GLenum) GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM, "GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_AND_DOWNSAMPLE_IMG)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MULTISAMPLE-AND-DOWNSAMPLE-IMG", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_AND_DOWNSAMPLE_IMG, "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_AND_DOWNSAMPLE_IMG");
#endif
#if defined(GL_NUM_DOWNSAMPLE_SCALES_IMG)
defconsti(env, "GL-NUM-DOWNSAMPLE-SCALES-IMG", (GLenum) GL_NUM_DOWNSAMPLE_SCALES_IMG, "GL_NUM_DOWNSAMPLE_SCALES_IMG");
#endif
#if defined(GL_DOWNSAMPLE_SCALES_IMG)
defconsti(env, "GL-DOWNSAMPLE-SCALES-IMG", (GLenum) GL_DOWNSAMPLE_SCALES_IMG, "GL_DOWNSAMPLE_SCALES_IMG");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-SCALE-IMG", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG");
#endif
#if defined(GL_RENDERBUFFER_SAMPLES_IMG)
defconsti(env, "GL-RENDERBUFFER-SAMPLES-IMG", (GLenum) GL_RENDERBUFFER_SAMPLES_IMG, "GL_RENDERBUFFER_SAMPLES_IMG");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MULTISAMPLE-IMG", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG, "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG");
#endif
#if defined(GL_MAX_SAMPLES_IMG)
defconsti(env, "GL-MAX-SAMPLES-IMG", (GLenum) GL_MAX_SAMPLES_IMG, "GL_MAX_SAMPLES_IMG");
#endif
#if defined(GL_TEXTURE_SAMPLES_IMG)
defconsti(env, "GL-TEXTURE-SAMPLES-IMG", (GLenum) GL_TEXTURE_SAMPLES_IMG, "GL_TEXTURE_SAMPLES_IMG");
#endif
#if defined(GL_SGX_PROGRAM_BINARY_IMG)
defconsti(env, "GL-SGX-PROGRAM-BINARY-IMG", (GLenum) GL_SGX_PROGRAM_BINARY_IMG, "GL_SGX_PROGRAM_BINARY_IMG");
#endif
#if defined(GL_BGRA_IMG)
defconsti(env, "GL-BGRA-IMG", (GLenum) GL_BGRA_IMG, "GL_BGRA_IMG");
#endif
#if defined(GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG)
defconsti(env, "GL-UNSIGNED-SHORT-4-4-4-4-REV-IMG", (GLenum) GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG, "GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG");
#endif
#if defined(GL_SGX_BINARY_IMG)
defconsti(env, "GL-SGX-BINARY-IMG", (GLenum) GL_SGX_BINARY_IMG, "GL_SGX_BINARY_IMG");
#endif
#if defined(GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG)
defconsti(env, "GL-COMPRESSED-RGB-PVRTC-4BPPV1-IMG", (GLenum) GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG, "GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG");
#endif
#if defined(GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG)
defconsti(env, "GL-COMPRESSED-RGB-PVRTC-2BPPV1-IMG", (GLenum) GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG, "GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG");
#endif
#if defined(GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG)
defconsti(env, "GL-COMPRESSED-RGBA-PVRTC-4BPPV1-IMG", (GLenum) GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG, "GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG");
#endif
#if defined(GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG)
defconsti(env, "GL-COMPRESSED-RGBA-PVRTC-2BPPV1-IMG", (GLenum) GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG, "GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG");
#endif
#if defined(GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG)
defconsti(env, "GL-COMPRESSED-RGBA-PVRTC-2BPPV2-IMG", (GLenum) GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG, "GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG");
#endif
#if defined(GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG)
defconsti(env, "GL-COMPRESSED-RGBA-PVRTC-4BPPV2-IMG", (GLenum) GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG, "GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG");
#endif
#if defined(GL_MODULATE_COLOR_IMG)
defconsti(env, "GL-MODULATE-COLOR-IMG", (GLenum) GL_MODULATE_COLOR_IMG, "GL_MODULATE_COLOR_IMG");
#endif
#if defined(GL_RECIP_ADD_SIGNED_ALPHA_IMG)
defconsti(env, "GL-RECIP-ADD-SIGNED-ALPHA-IMG", (GLenum) GL_RECIP_ADD_SIGNED_ALPHA_IMG, "GL_RECIP_ADD_SIGNED_ALPHA_IMG");
#endif
#if defined(GL_TEXTURE_ALPHA_MODULATE_IMG)
defconsti(env, "GL-TEXTURE-ALPHA-MODULATE-IMG", (GLenum) GL_TEXTURE_ALPHA_MODULATE_IMG, "GL_TEXTURE_ALPHA_MODULATE_IMG");
#endif
#if defined(GL_FACTOR_ALPHA_MODULATE_IMG)
defconsti(env, "GL-FACTOR-ALPHA-MODULATE-IMG", (GLenum) GL_FACTOR_ALPHA_MODULATE_IMG, "GL_FACTOR_ALPHA_MODULATE_IMG");
#endif
#if defined(GL_FRAGMENT_ALPHA_MODULATE_IMG)
defconsti(env, "GL-FRAGMENT-ALPHA-MODULATE-IMG", (GLenum) GL_FRAGMENT_ALPHA_MODULATE_IMG, "GL_FRAGMENT_ALPHA_MODULATE_IMG");
#endif
#if defined(GL_ADD_BLEND_IMG)
defconsti(env, "GL-ADD-BLEND-IMG", (GLenum) GL_ADD_BLEND_IMG, "GL_ADD_BLEND_IMG");
#endif
#if defined(GL_DOT3_RGBA_IMG)
defconsti(env, "GL-DOT3-RGBA-IMG", (GLenum) GL_DOT3_RGBA_IMG, "GL_DOT3_RGBA_IMG");
#endif
#if defined(GL_CUBIC_IMG)
defconsti(env, "GL-CUBIC-IMG", (GLenum) GL_CUBIC_IMG, "GL_CUBIC_IMG");
#endif
#if defined(GL_CUBIC_MIPMAP_NEAREST_IMG)
defconsti(env, "GL-CUBIC-MIPMAP-NEAREST-IMG", (GLenum) GL_CUBIC_MIPMAP_NEAREST_IMG, "GL_CUBIC_MIPMAP_NEAREST_IMG");
#endif
#if defined(GL_CUBIC_MIPMAP_LINEAR_IMG)
defconsti(env, "GL-CUBIC-MIPMAP-LINEAR-IMG", (GLenum) GL_CUBIC_MIPMAP_LINEAR_IMG, "GL_CUBIC_MIPMAP_LINEAR_IMG");
#endif
#if defined(GL_CLIP_PLANE0_IMG)
defconsti(env, "GL-CLIP-PLANE0-IMG", (GLenum) GL_CLIP_PLANE0_IMG, "GL_CLIP_PLANE0_IMG");
#endif
#if defined(GL_CLIP_PLANE1_IMG)
defconsti(env, "GL-CLIP-PLANE1-IMG", (GLenum) GL_CLIP_PLANE1_IMG, "GL_CLIP_PLANE1_IMG");
#endif
#if defined(GL_CLIP_PLANE2_IMG)
defconsti(env, "GL-CLIP-PLANE2-IMG", (GLenum) GL_CLIP_PLANE2_IMG, "GL_CLIP_PLANE2_IMG");
#endif
#if defined(GL_CLIP_PLANE3_IMG)
defconsti(env, "GL-CLIP-PLANE3-IMG", (GLenum) GL_CLIP_PLANE3_IMG, "GL_CLIP_PLANE3_IMG");
#endif
#if defined(GL_CLIP_PLANE4_IMG)
defconsti(env, "GL-CLIP-PLANE4-IMG", (GLenum) GL_CLIP_PLANE4_IMG, "GL_CLIP_PLANE4_IMG");
#endif
#if defined(GL_CLIP_PLANE5_IMG)
defconsti(env, "GL-CLIP-PLANE5-IMG", (GLenum) GL_CLIP_PLANE5_IMG, "GL_CLIP_PLANE5_IMG");
#endif
#if defined(GL_MAX_CLIP_PLANES_IMG)
defconsti(env, "GL-MAX-CLIP-PLANES-IMG", (GLenum) GL_MAX_CLIP_PLANES_IMG, "GL_MAX_CLIP_PLANES_IMG");
#endif
#if defined(GL_RED_MIN_CLAMP_INGR)
defconsti(env, "GL-RED-MIN-CLAMP-INGR", (GLenum) GL_RED_MIN_CLAMP_INGR, "GL_RED_MIN_CLAMP_INGR");
#endif
#if defined(GL_GREEN_MIN_CLAMP_INGR)
defconsti(env, "GL-GREEN-MIN-CLAMP-INGR", (GLenum) GL_GREEN_MIN_CLAMP_INGR, "GL_GREEN_MIN_CLAMP_INGR");
#endif
#if defined(GL_BLUE_MIN_CLAMP_INGR)
defconsti(env, "GL-BLUE-MIN-CLAMP-INGR", (GLenum) GL_BLUE_MIN_CLAMP_INGR, "GL_BLUE_MIN_CLAMP_INGR");
#endif
#if defined(GL_ALPHA_MIN_CLAMP_INGR)
defconsti(env, "GL-ALPHA-MIN-CLAMP-INGR", (GLenum) GL_ALPHA_MIN_CLAMP_INGR, "GL_ALPHA_MIN_CLAMP_INGR");
#endif
#if defined(GL_RED_MAX_CLAMP_INGR)
defconsti(env, "GL-RED-MAX-CLAMP-INGR", (GLenum) GL_RED_MAX_CLAMP_INGR, "GL_RED_MAX_CLAMP_INGR");
#endif
#if defined(GL_GREEN_MAX_CLAMP_INGR)
defconsti(env, "GL-GREEN-MAX-CLAMP-INGR", (GLenum) GL_GREEN_MAX_CLAMP_INGR, "GL_GREEN_MAX_CLAMP_INGR");
#endif
#if defined(GL_BLUE_MAX_CLAMP_INGR)
defconsti(env, "GL-BLUE-MAX-CLAMP-INGR", (GLenum) GL_BLUE_MAX_CLAMP_INGR, "GL_BLUE_MAX_CLAMP_INGR");
#endif
#if defined(GL_ALPHA_MAX_CLAMP_INGR)
defconsti(env, "GL-ALPHA-MAX-CLAMP-INGR", (GLenum) GL_ALPHA_MAX_CLAMP_INGR, "GL_ALPHA_MAX_CLAMP_INGR");
#endif
#if defined(GL_INTERLACE_READ_INGR)
defconsti(env, "GL-INTERLACE-READ-INGR", (GLenum) GL_INTERLACE_READ_INGR, "GL_INTERLACE_READ_INGR");
#endif
#if defined(GL_CONSERVATIVE_RASTERIZATION_INTEL)
defconsti(env, "GL-CONSERVATIVE-RASTERIZATION-INTEL", (GLenum) GL_CONSERVATIVE_RASTERIZATION_INTEL, "GL_CONSERVATIVE_RASTERIZATION_INTEL");
#endif
#if defined(GL_TEXTURE_MEMORY_LAYOUT_INTEL)
defconsti(env, "GL-TEXTURE-MEMORY-LAYOUT-INTEL", (GLenum) GL_TEXTURE_MEMORY_LAYOUT_INTEL, "GL_TEXTURE_MEMORY_LAYOUT_INTEL");
#endif
#if defined(GL_LAYOUT_DEFAULT_INTEL)
defconsti(env, "GL-LAYOUT-DEFAULT-INTEL", (GLenum) GL_LAYOUT_DEFAULT_INTEL, "GL_LAYOUT_DEFAULT_INTEL");
#endif
#if defined(GL_LAYOUT_LINEAR_INTEL)
defconsti(env, "GL-LAYOUT-LINEAR-INTEL", (GLenum) GL_LAYOUT_LINEAR_INTEL, "GL_LAYOUT_LINEAR_INTEL");
#endif
#if defined(GL_LAYOUT_LINEAR_CPU_CACHED_INTEL)
defconsti(env, "GL-LAYOUT-LINEAR-CPU-CACHED-INTEL", (GLenum) GL_LAYOUT_LINEAR_CPU_CACHED_INTEL, "GL_LAYOUT_LINEAR_CPU_CACHED_INTEL");
#endif
#if defined(GL_BLACKHOLE_RENDER_INTEL)
defconsti(env, "GL-BLACKHOLE-RENDER-INTEL", (GLenum) GL_BLACKHOLE_RENDER_INTEL, "GL_BLACKHOLE_RENDER_INTEL");
#endif
#if defined(GL_PARALLEL_ARRAYS_INTEL)
defconsti(env, "GL-PARALLEL-ARRAYS-INTEL", (GLenum) GL_PARALLEL_ARRAYS_INTEL, "GL_PARALLEL_ARRAYS_INTEL");
#endif
#if defined(GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL)
defconsti(env, "GL-VERTEX-ARRAY-PARALLEL-POINTERS-INTEL", (GLenum) GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL, "GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL");
#endif
#if defined(GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL)
defconsti(env, "GL-NORMAL-ARRAY-PARALLEL-POINTERS-INTEL", (GLenum) GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL, "GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL");
#endif
#if defined(GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL)
defconsti(env, "GL-COLOR-ARRAY-PARALLEL-POINTERS-INTEL", (GLenum) GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL, "GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-PARALLEL-POINTERS-INTEL", (GLenum) GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL, "GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL");
#endif
#if defined(GL_PERFQUERY_SINGLE_CONTEXT_INTEL)
defconsti(env, "GL-PERFQUERY-SINGLE-CONTEXT-INTEL", (GLenum) GL_PERFQUERY_SINGLE_CONTEXT_INTEL, "GL_PERFQUERY_SINGLE_CONTEXT_INTEL");
#endif
#if defined(GL_PERFQUERY_GLOBAL_CONTEXT_INTEL)
defconsti(env, "GL-PERFQUERY-GLOBAL-CONTEXT-INTEL", (GLenum) GL_PERFQUERY_GLOBAL_CONTEXT_INTEL, "GL_PERFQUERY_GLOBAL_CONTEXT_INTEL");
#endif
#if defined(GL_PERFQUERY_WAIT_INTEL)
defconsti(env, "GL-PERFQUERY-WAIT-INTEL", (GLenum) GL_PERFQUERY_WAIT_INTEL, "GL_PERFQUERY_WAIT_INTEL");
#endif
#if defined(GL_PERFQUERY_FLUSH_INTEL)
defconsti(env, "GL-PERFQUERY-FLUSH-INTEL", (GLenum) GL_PERFQUERY_FLUSH_INTEL, "GL_PERFQUERY_FLUSH_INTEL");
#endif
#if defined(GL_PERFQUERY_DONOT_FLUSH_INTEL)
defconsti(env, "GL-PERFQUERY-DONOT-FLUSH-INTEL", (GLenum) GL_PERFQUERY_DONOT_FLUSH_INTEL, "GL_PERFQUERY_DONOT_FLUSH_INTEL");
#endif
#if defined(GL_PERFQUERY_COUNTER_EVENT_INTEL)
defconsti(env, "GL-PERFQUERY-COUNTER-EVENT-INTEL", (GLenum) GL_PERFQUERY_COUNTER_EVENT_INTEL, "GL_PERFQUERY_COUNTER_EVENT_INTEL");
#endif
#if defined(GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL)
defconsti(env, "GL-PERFQUERY-COUNTER-DURATION-NORM-INTEL", (GLenum) GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL, "GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL");
#endif
#if defined(GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL)
defconsti(env, "GL-PERFQUERY-COUNTER-DURATION-RAW-INTEL", (GLenum) GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL, "GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL");
#endif
#if defined(GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL)
defconsti(env, "GL-PERFQUERY-COUNTER-THROUGHPUT-INTEL", (GLenum) GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL, "GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL");
#endif
#if defined(GL_PERFQUERY_COUNTER_RAW_INTEL)
defconsti(env, "GL-PERFQUERY-COUNTER-RAW-INTEL", (GLenum) GL_PERFQUERY_COUNTER_RAW_INTEL, "GL_PERFQUERY_COUNTER_RAW_INTEL");
#endif
#if defined(GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL)
defconsti(env, "GL-PERFQUERY-COUNTER-TIMESTAMP-INTEL", (GLenum) GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL, "GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL");
#endif
#if defined(GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL)
defconsti(env, "GL-PERFQUERY-COUNTER-DATA-UINT32-INTEL", (GLenum) GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL, "GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL");
#endif
#if defined(GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL)
defconsti(env, "GL-PERFQUERY-COUNTER-DATA-UINT64-INTEL", (GLenum) GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL, "GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL");
#endif
#if defined(GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL)
defconsti(env, "GL-PERFQUERY-COUNTER-DATA-FLOAT-INTEL", (GLenum) GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL, "GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL");
#endif
#if defined(GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL)
defconsti(env, "GL-PERFQUERY-COUNTER-DATA-DOUBLE-INTEL", (GLenum) GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL, "GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL");
#endif
#if defined(GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL)
defconsti(env, "GL-PERFQUERY-COUNTER-DATA-BOOL32-INTEL", (GLenum) GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL, "GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL");
#endif
#if defined(GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL)
defconsti(env, "GL-PERFQUERY-QUERY-NAME-LENGTH-MAX-INTEL", (GLenum) GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL, "GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL");
#endif
#if defined(GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL)
defconsti(env, "GL-PERFQUERY-COUNTER-NAME-LENGTH-MAX-INTEL", (GLenum) GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL, "GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL");
#endif
#if defined(GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL)
defconsti(env, "GL-PERFQUERY-COUNTER-DESC-LENGTH-MAX-INTEL", (GLenum) GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL, "GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL");
#endif
#if defined(GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL)
defconsti(env, "GL-PERFQUERY-GPA-EXTENDED-COUNTERS-INTEL", (GLenum) GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL, "GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL");
#endif
#if defined(GL_MULTIPLY_KHR)
defconsti(env, "GL-MULTIPLY-KHR", (GLenum) GL_MULTIPLY_KHR, "GL_MULTIPLY_KHR");
#endif
#if defined(GL_SCREEN_KHR)
defconsti(env, "GL-SCREEN-KHR", (GLenum) GL_SCREEN_KHR, "GL_SCREEN_KHR");
#endif
#if defined(GL_OVERLAY_KHR)
defconsti(env, "GL-OVERLAY-KHR", (GLenum) GL_OVERLAY_KHR, "GL_OVERLAY_KHR");
#endif
#if defined(GL_DARKEN_KHR)
defconsti(env, "GL-DARKEN-KHR", (GLenum) GL_DARKEN_KHR, "GL_DARKEN_KHR");
#endif
#if defined(GL_LIGHTEN_KHR)
defconsti(env, "GL-LIGHTEN-KHR", (GLenum) GL_LIGHTEN_KHR, "GL_LIGHTEN_KHR");
#endif
#if defined(GL_COLORDODGE_KHR)
defconsti(env, "GL-COLORDODGE-KHR", (GLenum) GL_COLORDODGE_KHR, "GL_COLORDODGE_KHR");
#endif
#if defined(GL_COLORBURN_KHR)
defconsti(env, "GL-COLORBURN-KHR", (GLenum) GL_COLORBURN_KHR, "GL_COLORBURN_KHR");
#endif
#if defined(GL_HARDLIGHT_KHR)
defconsti(env, "GL-HARDLIGHT-KHR", (GLenum) GL_HARDLIGHT_KHR, "GL_HARDLIGHT_KHR");
#endif
#if defined(GL_SOFTLIGHT_KHR)
defconsti(env, "GL-SOFTLIGHT-KHR", (GLenum) GL_SOFTLIGHT_KHR, "GL_SOFTLIGHT_KHR");
#endif
#if defined(GL_DIFFERENCE_KHR)
defconsti(env, "GL-DIFFERENCE-KHR", (GLenum) GL_DIFFERENCE_KHR, "GL_DIFFERENCE_KHR");
#endif
#if defined(GL_EXCLUSION_KHR)
defconsti(env, "GL-EXCLUSION-KHR", (GLenum) GL_EXCLUSION_KHR, "GL_EXCLUSION_KHR");
#endif
#if defined(GL_HSL_HUE_KHR)
defconsti(env, "GL-HSL-HUE-KHR", (GLenum) GL_HSL_HUE_KHR, "GL_HSL_HUE_KHR");
#endif
#if defined(GL_HSL_SATURATION_KHR)
defconsti(env, "GL-HSL-SATURATION-KHR", (GLenum) GL_HSL_SATURATION_KHR, "GL_HSL_SATURATION_KHR");
#endif
#if defined(GL_HSL_COLOR_KHR)
defconsti(env, "GL-HSL-COLOR-KHR", (GLenum) GL_HSL_COLOR_KHR, "GL_HSL_COLOR_KHR");
#endif
#if defined(GL_HSL_LUMINOSITY_KHR)
defconsti(env, "GL-HSL-LUMINOSITY-KHR", (GLenum) GL_HSL_LUMINOSITY_KHR, "GL_HSL_LUMINOSITY_KHR");
#endif
#if defined(GL_BLEND_ADVANCED_COHERENT_KHR)
defconsti(env, "GL-BLEND-ADVANCED-COHERENT-KHR", (GLenum) GL_BLEND_ADVANCED_COHERENT_KHR, "GL_BLEND_ADVANCED_COHERENT_KHR");
#endif
#if defined(GL_CONTEXT_RELEASE_BEHAVIOR)
defconsti(env, "GL-CONTEXT-RELEASE-BEHAVIOR", (GLenum) GL_CONTEXT_RELEASE_BEHAVIOR, "GL_CONTEXT_RELEASE_BEHAVIOR");
#endif
#if defined(GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH)
defconsti(env, "GL-CONTEXT-RELEASE-BEHAVIOR-FLUSH", (GLenum) GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH, "GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH");
#endif
#if defined(GL_NONE)
defconsti(env, "GL-NONE", (GLenum) GL_NONE, "GL_NONE");
#endif
#if defined(GL_CONTEXT_RELEASE_BEHAVIOR_KHR)
defconsti(env, "GL-CONTEXT-RELEASE-BEHAVIOR-KHR", (GLenum) GL_CONTEXT_RELEASE_BEHAVIOR_KHR, "GL_CONTEXT_RELEASE_BEHAVIOR_KHR");
#endif
#if defined(GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR)
defconsti(env, "GL-CONTEXT-RELEASE-BEHAVIOR-FLUSH-KHR", (GLenum) GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR, "GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR");
#endif
#if defined(GL_NONE)
defconsti(env, "GL-NONE", (GLenum) GL_NONE, "GL_NONE");
#endif
#if defined(GL_DEBUG_OUTPUT_SYNCHRONOUS)
defconsti(env, "GL-DEBUG-OUTPUT-SYNCHRONOUS", (GLenum) GL_DEBUG_OUTPUT_SYNCHRONOUS, "GL_DEBUG_OUTPUT_SYNCHRONOUS");
#endif
#if defined(GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH)
defconsti(env, "GL-DEBUG-NEXT-LOGGED-MESSAGE-LENGTH", (GLenum) GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH, "GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH");
#endif
#if defined(GL_DEBUG_CALLBACK_FUNCTION)
defconsti(env, "GL-DEBUG-CALLBACK-FUNCTION", (GLenum) GL_DEBUG_CALLBACK_FUNCTION, "GL_DEBUG_CALLBACK_FUNCTION");
#endif
#if defined(GL_DEBUG_CALLBACK_USER_PARAM)
defconsti(env, "GL-DEBUG-CALLBACK-USER-PARAM", (GLenum) GL_DEBUG_CALLBACK_USER_PARAM, "GL_DEBUG_CALLBACK_USER_PARAM");
#endif
#if defined(GL_DEBUG_SOURCE_API)
defconsti(env, "GL-DEBUG-SOURCE-API", (GLenum) GL_DEBUG_SOURCE_API, "GL_DEBUG_SOURCE_API");
#endif
#if defined(GL_DEBUG_SOURCE_WINDOW_SYSTEM)
defconsti(env, "GL-DEBUG-SOURCE-WINDOW-SYSTEM", (GLenum) GL_DEBUG_SOURCE_WINDOW_SYSTEM, "GL_DEBUG_SOURCE_WINDOW_SYSTEM");
#endif
#if defined(GL_DEBUG_SOURCE_SHADER_COMPILER)
defconsti(env, "GL-DEBUG-SOURCE-SHADER-COMPILER", (GLenum) GL_DEBUG_SOURCE_SHADER_COMPILER, "GL_DEBUG_SOURCE_SHADER_COMPILER");
#endif
#if defined(GL_DEBUG_SOURCE_THIRD_PARTY)
defconsti(env, "GL-DEBUG-SOURCE-THIRD-PARTY", (GLenum) GL_DEBUG_SOURCE_THIRD_PARTY, "GL_DEBUG_SOURCE_THIRD_PARTY");
#endif
#if defined(GL_DEBUG_SOURCE_APPLICATION)
defconsti(env, "GL-DEBUG-SOURCE-APPLICATION", (GLenum) GL_DEBUG_SOURCE_APPLICATION, "GL_DEBUG_SOURCE_APPLICATION");
#endif
#if defined(GL_DEBUG_SOURCE_OTHER)
defconsti(env, "GL-DEBUG-SOURCE-OTHER", (GLenum) GL_DEBUG_SOURCE_OTHER, "GL_DEBUG_SOURCE_OTHER");
#endif
#if defined(GL_DEBUG_TYPE_ERROR)
defconsti(env, "GL-DEBUG-TYPE-ERROR", (GLenum) GL_DEBUG_TYPE_ERROR, "GL_DEBUG_TYPE_ERROR");
#endif
#if defined(GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR)
defconsti(env, "GL-DEBUG-TYPE-DEPRECATED-BEHAVIOR", (GLenum) GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR, "GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR");
#endif
#if defined(GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR)
defconsti(env, "GL-DEBUG-TYPE-UNDEFINED-BEHAVIOR", (GLenum) GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR, "GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR");
#endif
#if defined(GL_DEBUG_TYPE_PORTABILITY)
defconsti(env, "GL-DEBUG-TYPE-PORTABILITY", (GLenum) GL_DEBUG_TYPE_PORTABILITY, "GL_DEBUG_TYPE_PORTABILITY");
#endif
#if defined(GL_DEBUG_TYPE_PERFORMANCE)
defconsti(env, "GL-DEBUG-TYPE-PERFORMANCE", (GLenum) GL_DEBUG_TYPE_PERFORMANCE, "GL_DEBUG_TYPE_PERFORMANCE");
#endif
#if defined(GL_DEBUG_TYPE_OTHER)
defconsti(env, "GL-DEBUG-TYPE-OTHER", (GLenum) GL_DEBUG_TYPE_OTHER, "GL_DEBUG_TYPE_OTHER");
#endif
#if defined(GL_DEBUG_TYPE_MARKER)
defconsti(env, "GL-DEBUG-TYPE-MARKER", (GLenum) GL_DEBUG_TYPE_MARKER, "GL_DEBUG_TYPE_MARKER");
#endif
#if defined(GL_DEBUG_TYPE_PUSH_GROUP)
defconsti(env, "GL-DEBUG-TYPE-PUSH-GROUP", (GLenum) GL_DEBUG_TYPE_PUSH_GROUP, "GL_DEBUG_TYPE_PUSH_GROUP");
#endif
#if defined(GL_DEBUG_TYPE_POP_GROUP)
defconsti(env, "GL-DEBUG-TYPE-POP-GROUP", (GLenum) GL_DEBUG_TYPE_POP_GROUP, "GL_DEBUG_TYPE_POP_GROUP");
#endif
#if defined(GL_DEBUG_SEVERITY_NOTIFICATION)
defconsti(env, "GL-DEBUG-SEVERITY-NOTIFICATION", (GLenum) GL_DEBUG_SEVERITY_NOTIFICATION, "GL_DEBUG_SEVERITY_NOTIFICATION");
#endif
#if defined(GL_MAX_DEBUG_GROUP_STACK_DEPTH)
defconsti(env, "GL-MAX-DEBUG-GROUP-STACK-DEPTH", (GLenum) GL_MAX_DEBUG_GROUP_STACK_DEPTH, "GL_MAX_DEBUG_GROUP_STACK_DEPTH");
#endif
#if defined(GL_DEBUG_GROUP_STACK_DEPTH)
defconsti(env, "GL-DEBUG-GROUP-STACK-DEPTH", (GLenum) GL_DEBUG_GROUP_STACK_DEPTH, "GL_DEBUG_GROUP_STACK_DEPTH");
#endif
#if defined(GL_BUFFER)
defconsti(env, "GL-BUFFER", (GLenum) GL_BUFFER, "GL_BUFFER");
#endif
#if defined(GL_SHADER)
defconsti(env, "GL-SHADER", (GLenum) GL_SHADER, "GL_SHADER");
#endif
#if defined(GL_PROGRAM)
defconsti(env, "GL-PROGRAM", (GLenum) GL_PROGRAM, "GL_PROGRAM");
#endif
#if defined(GL_VERTEX_ARRAY)
defconsti(env, "GL-VERTEX-ARRAY", (GLenum) GL_VERTEX_ARRAY, "GL_VERTEX_ARRAY");
#endif
#if defined(GL_QUERY)
defconsti(env, "GL-QUERY", (GLenum) GL_QUERY, "GL_QUERY");
#endif
#if defined(GL_PROGRAM_PIPELINE)
defconsti(env, "GL-PROGRAM-PIPELINE", (GLenum) GL_PROGRAM_PIPELINE, "GL_PROGRAM_PIPELINE");
#endif
#if defined(GL_SAMPLER)
defconsti(env, "GL-SAMPLER", (GLenum) GL_SAMPLER, "GL_SAMPLER");
#endif
#if defined(GL_MAX_LABEL_LENGTH)
defconsti(env, "GL-MAX-LABEL-LENGTH", (GLenum) GL_MAX_LABEL_LENGTH, "GL_MAX_LABEL_LENGTH");
#endif
#if defined(GL_MAX_DEBUG_MESSAGE_LENGTH)
defconsti(env, "GL-MAX-DEBUG-MESSAGE-LENGTH", (GLenum) GL_MAX_DEBUG_MESSAGE_LENGTH, "GL_MAX_DEBUG_MESSAGE_LENGTH");
#endif
#if defined(GL_MAX_DEBUG_LOGGED_MESSAGES)
defconsti(env, "GL-MAX-DEBUG-LOGGED-MESSAGES", (GLenum) GL_MAX_DEBUG_LOGGED_MESSAGES, "GL_MAX_DEBUG_LOGGED_MESSAGES");
#endif
#if defined(GL_DEBUG_LOGGED_MESSAGES)
defconsti(env, "GL-DEBUG-LOGGED-MESSAGES", (GLenum) GL_DEBUG_LOGGED_MESSAGES, "GL_DEBUG_LOGGED_MESSAGES");
#endif
#if defined(GL_DEBUG_SEVERITY_HIGH)
defconsti(env, "GL-DEBUG-SEVERITY-HIGH", (GLenum) GL_DEBUG_SEVERITY_HIGH, "GL_DEBUG_SEVERITY_HIGH");
#endif
#if defined(GL_DEBUG_SEVERITY_MEDIUM)
defconsti(env, "GL-DEBUG-SEVERITY-MEDIUM", (GLenum) GL_DEBUG_SEVERITY_MEDIUM, "GL_DEBUG_SEVERITY_MEDIUM");
#endif
#if defined(GL_DEBUG_SEVERITY_LOW)
defconsti(env, "GL-DEBUG-SEVERITY-LOW", (GLenum) GL_DEBUG_SEVERITY_LOW, "GL_DEBUG_SEVERITY_LOW");
#endif
#if defined(GL_DEBUG_OUTPUT)
defconsti(env, "GL-DEBUG-OUTPUT", (GLenum) GL_DEBUG_OUTPUT, "GL_DEBUG_OUTPUT");
#endif
#if defined(GL_CONTEXT_FLAG_DEBUG_BIT)
defconsti(env, "GL-CONTEXT-FLAG-DEBUG-BIT", (GLenum) GL_CONTEXT_FLAG_DEBUG_BIT, "GL_CONTEXT_FLAG_DEBUG_BIT");
#endif
#if defined(GL_STACK_OVERFLOW)
defconsti(env, "GL-STACK-OVERFLOW", (GLenum) GL_STACK_OVERFLOW, "GL_STACK_OVERFLOW");
#endif
#if defined(GL_STACK_UNDERFLOW)
defconsti(env, "GL-STACK-UNDERFLOW", (GLenum) GL_STACK_UNDERFLOW, "GL_STACK_UNDERFLOW");
#endif
#if defined(GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR)
defconsti(env, "GL-DEBUG-OUTPUT-SYNCHRONOUS-KHR", (GLenum) GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR, "GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR");
#endif
#if defined(GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR)
defconsti(env, "GL-DEBUG-NEXT-LOGGED-MESSAGE-LENGTH-KHR", (GLenum) GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR, "GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR");
#endif
#if defined(GL_DEBUG_CALLBACK_FUNCTION_KHR)
defconsti(env, "GL-DEBUG-CALLBACK-FUNCTION-KHR", (GLenum) GL_DEBUG_CALLBACK_FUNCTION_KHR, "GL_DEBUG_CALLBACK_FUNCTION_KHR");
#endif
#if defined(GL_DEBUG_CALLBACK_USER_PARAM_KHR)
defconsti(env, "GL-DEBUG-CALLBACK-USER-PARAM-KHR", (GLenum) GL_DEBUG_CALLBACK_USER_PARAM_KHR, "GL_DEBUG_CALLBACK_USER_PARAM_KHR");
#endif
#if defined(GL_DEBUG_SOURCE_API_KHR)
defconsti(env, "GL-DEBUG-SOURCE-API-KHR", (GLenum) GL_DEBUG_SOURCE_API_KHR, "GL_DEBUG_SOURCE_API_KHR");
#endif
#if defined(GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR)
defconsti(env, "GL-DEBUG-SOURCE-WINDOW-SYSTEM-KHR", (GLenum) GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR, "GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR");
#endif
#if defined(GL_DEBUG_SOURCE_SHADER_COMPILER_KHR)
defconsti(env, "GL-DEBUG-SOURCE-SHADER-COMPILER-KHR", (GLenum) GL_DEBUG_SOURCE_SHADER_COMPILER_KHR, "GL_DEBUG_SOURCE_SHADER_COMPILER_KHR");
#endif
#if defined(GL_DEBUG_SOURCE_THIRD_PARTY_KHR)
defconsti(env, "GL-DEBUG-SOURCE-THIRD-PARTY-KHR", (GLenum) GL_DEBUG_SOURCE_THIRD_PARTY_KHR, "GL_DEBUG_SOURCE_THIRD_PARTY_KHR");
#endif
#if defined(GL_DEBUG_SOURCE_APPLICATION_KHR)
defconsti(env, "GL-DEBUG-SOURCE-APPLICATION-KHR", (GLenum) GL_DEBUG_SOURCE_APPLICATION_KHR, "GL_DEBUG_SOURCE_APPLICATION_KHR");
#endif
#if defined(GL_DEBUG_SOURCE_OTHER_KHR)
defconsti(env, "GL-DEBUG-SOURCE-OTHER-KHR", (GLenum) GL_DEBUG_SOURCE_OTHER_KHR, "GL_DEBUG_SOURCE_OTHER_KHR");
#endif
#if defined(GL_DEBUG_TYPE_ERROR_KHR)
defconsti(env, "GL-DEBUG-TYPE-ERROR-KHR", (GLenum) GL_DEBUG_TYPE_ERROR_KHR, "GL_DEBUG_TYPE_ERROR_KHR");
#endif
#if defined(GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR)
defconsti(env, "GL-DEBUG-TYPE-DEPRECATED-BEHAVIOR-KHR", (GLenum) GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR, "GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR");
#endif
#if defined(GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR)
defconsti(env, "GL-DEBUG-TYPE-UNDEFINED-BEHAVIOR-KHR", (GLenum) GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR, "GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR");
#endif
#if defined(GL_DEBUG_TYPE_PORTABILITY_KHR)
defconsti(env, "GL-DEBUG-TYPE-PORTABILITY-KHR", (GLenum) GL_DEBUG_TYPE_PORTABILITY_KHR, "GL_DEBUG_TYPE_PORTABILITY_KHR");
#endif
#if defined(GL_DEBUG_TYPE_PERFORMANCE_KHR)
defconsti(env, "GL-DEBUG-TYPE-PERFORMANCE-KHR", (GLenum) GL_DEBUG_TYPE_PERFORMANCE_KHR, "GL_DEBUG_TYPE_PERFORMANCE_KHR");
#endif
#if defined(GL_DEBUG_TYPE_OTHER_KHR)
defconsti(env, "GL-DEBUG-TYPE-OTHER-KHR", (GLenum) GL_DEBUG_TYPE_OTHER_KHR, "GL_DEBUG_TYPE_OTHER_KHR");
#endif
#if defined(GL_DEBUG_TYPE_MARKER_KHR)
defconsti(env, "GL-DEBUG-TYPE-MARKER-KHR", (GLenum) GL_DEBUG_TYPE_MARKER_KHR, "GL_DEBUG_TYPE_MARKER_KHR");
#endif
#if defined(GL_DEBUG_TYPE_PUSH_GROUP_KHR)
defconsti(env, "GL-DEBUG-TYPE-PUSH-GROUP-KHR", (GLenum) GL_DEBUG_TYPE_PUSH_GROUP_KHR, "GL_DEBUG_TYPE_PUSH_GROUP_KHR");
#endif
#if defined(GL_DEBUG_TYPE_POP_GROUP_KHR)
defconsti(env, "GL-DEBUG-TYPE-POP-GROUP-KHR", (GLenum) GL_DEBUG_TYPE_POP_GROUP_KHR, "GL_DEBUG_TYPE_POP_GROUP_KHR");
#endif
#if defined(GL_DEBUG_SEVERITY_NOTIFICATION_KHR)
defconsti(env, "GL-DEBUG-SEVERITY-NOTIFICATION-KHR", (GLenum) GL_DEBUG_SEVERITY_NOTIFICATION_KHR, "GL_DEBUG_SEVERITY_NOTIFICATION_KHR");
#endif
#if defined(GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR)
defconsti(env, "GL-MAX-DEBUG-GROUP-STACK-DEPTH-KHR", (GLenum) GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR, "GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR");
#endif
#if defined(GL_DEBUG_GROUP_STACK_DEPTH_KHR)
defconsti(env, "GL-DEBUG-GROUP-STACK-DEPTH-KHR", (GLenum) GL_DEBUG_GROUP_STACK_DEPTH_KHR, "GL_DEBUG_GROUP_STACK_DEPTH_KHR");
#endif
#if defined(GL_BUFFER_KHR)
defconsti(env, "GL-BUFFER-KHR", (GLenum) GL_BUFFER_KHR, "GL_BUFFER_KHR");
#endif
#if defined(GL_SHADER_KHR)
defconsti(env, "GL-SHADER-KHR", (GLenum) GL_SHADER_KHR, "GL_SHADER_KHR");
#endif
#if defined(GL_PROGRAM_KHR)
defconsti(env, "GL-PROGRAM-KHR", (GLenum) GL_PROGRAM_KHR, "GL_PROGRAM_KHR");
#endif
#if defined(GL_VERTEX_ARRAY_KHR)
defconsti(env, "GL-VERTEX-ARRAY-KHR", (GLenum) GL_VERTEX_ARRAY_KHR, "GL_VERTEX_ARRAY_KHR");
#endif
#if defined(GL_QUERY_KHR)
defconsti(env, "GL-QUERY-KHR", (GLenum) GL_QUERY_KHR, "GL_QUERY_KHR");
#endif
#if defined(GL_PROGRAM_PIPELINE_KHR)
defconsti(env, "GL-PROGRAM-PIPELINE-KHR", (GLenum) GL_PROGRAM_PIPELINE_KHR, "GL_PROGRAM_PIPELINE_KHR");
#endif
#if defined(GL_SAMPLER_KHR)
defconsti(env, "GL-SAMPLER-KHR", (GLenum) GL_SAMPLER_KHR, "GL_SAMPLER_KHR");
#endif
#if defined(GL_MAX_LABEL_LENGTH_KHR)
defconsti(env, "GL-MAX-LABEL-LENGTH-KHR", (GLenum) GL_MAX_LABEL_LENGTH_KHR, "GL_MAX_LABEL_LENGTH_KHR");
#endif
#if defined(GL_MAX_DEBUG_MESSAGE_LENGTH_KHR)
defconsti(env, "GL-MAX-DEBUG-MESSAGE-LENGTH-KHR", (GLenum) GL_MAX_DEBUG_MESSAGE_LENGTH_KHR, "GL_MAX_DEBUG_MESSAGE_LENGTH_KHR");
#endif
#if defined(GL_MAX_DEBUG_LOGGED_MESSAGES_KHR)
defconsti(env, "GL-MAX-DEBUG-LOGGED-MESSAGES-KHR", (GLenum) GL_MAX_DEBUG_LOGGED_MESSAGES_KHR, "GL_MAX_DEBUG_LOGGED_MESSAGES_KHR");
#endif
#if defined(GL_DEBUG_LOGGED_MESSAGES_KHR)
defconsti(env, "GL-DEBUG-LOGGED-MESSAGES-KHR", (GLenum) GL_DEBUG_LOGGED_MESSAGES_KHR, "GL_DEBUG_LOGGED_MESSAGES_KHR");
#endif
#if defined(GL_DEBUG_SEVERITY_HIGH_KHR)
defconsti(env, "GL-DEBUG-SEVERITY-HIGH-KHR", (GLenum) GL_DEBUG_SEVERITY_HIGH_KHR, "GL_DEBUG_SEVERITY_HIGH_KHR");
#endif
#if defined(GL_DEBUG_SEVERITY_MEDIUM_KHR)
defconsti(env, "GL-DEBUG-SEVERITY-MEDIUM-KHR", (GLenum) GL_DEBUG_SEVERITY_MEDIUM_KHR, "GL_DEBUG_SEVERITY_MEDIUM_KHR");
#endif
#if defined(GL_DEBUG_SEVERITY_LOW_KHR)
defconsti(env, "GL-DEBUG-SEVERITY-LOW-KHR", (GLenum) GL_DEBUG_SEVERITY_LOW_KHR, "GL_DEBUG_SEVERITY_LOW_KHR");
#endif
#if defined(GL_DEBUG_OUTPUT_KHR)
defconsti(env, "GL-DEBUG-OUTPUT-KHR", (GLenum) GL_DEBUG_OUTPUT_KHR, "GL_DEBUG_OUTPUT_KHR");
#endif
#if defined(GL_CONTEXT_FLAG_DEBUG_BIT_KHR)
defconsti(env, "GL-CONTEXT-FLAG-DEBUG-BIT-KHR", (GLenum) GL_CONTEXT_FLAG_DEBUG_BIT_KHR, "GL_CONTEXT_FLAG_DEBUG_BIT_KHR");
#endif
#if defined(GL_STACK_OVERFLOW_KHR)
defconsti(env, "GL-STACK-OVERFLOW-KHR", (GLenum) GL_STACK_OVERFLOW_KHR, "GL_STACK_OVERFLOW_KHR");
#endif
#if defined(GL_STACK_UNDERFLOW_KHR)
defconsti(env, "GL-STACK-UNDERFLOW-KHR", (GLenum) GL_STACK_UNDERFLOW_KHR, "GL_STACK_UNDERFLOW_KHR");
#endif
#if defined(GL_DISPLAY_LIST)
defconsti(env, "GL-DISPLAY-LIST", (GLenum) GL_DISPLAY_LIST, "GL_DISPLAY_LIST");
#endif
#if defined(GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR)
defconsti(env, "GL-CONTEXT-FLAG-NO-ERROR-BIT-KHR", (GLenum) GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR, "GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR");
#endif
#if defined(GL_NO_ERROR)
defconsti(env, "GL-NO-ERROR", (GLenum) GL_NO_ERROR, "GL_NO_ERROR");
#endif
#if defined(GL_CONTEXT_ROBUST_ACCESS)
defconsti(env, "GL-CONTEXT-ROBUST-ACCESS", (GLenum) GL_CONTEXT_ROBUST_ACCESS, "GL_CONTEXT_ROBUST_ACCESS");
#endif
#if defined(GL_LOSE_CONTEXT_ON_RESET)
defconsti(env, "GL-LOSE-CONTEXT-ON-RESET", (GLenum) GL_LOSE_CONTEXT_ON_RESET, "GL_LOSE_CONTEXT_ON_RESET");
#endif
#if defined(GL_GUILTY_CONTEXT_RESET)
defconsti(env, "GL-GUILTY-CONTEXT-RESET", (GLenum) GL_GUILTY_CONTEXT_RESET, "GL_GUILTY_CONTEXT_RESET");
#endif
#if defined(GL_INNOCENT_CONTEXT_RESET)
defconsti(env, "GL-INNOCENT-CONTEXT-RESET", (GLenum) GL_INNOCENT_CONTEXT_RESET, "GL_INNOCENT_CONTEXT_RESET");
#endif
#if defined(GL_UNKNOWN_CONTEXT_RESET)
defconsti(env, "GL-UNKNOWN-CONTEXT-RESET", (GLenum) GL_UNKNOWN_CONTEXT_RESET, "GL_UNKNOWN_CONTEXT_RESET");
#endif
#if defined(GL_RESET_NOTIFICATION_STRATEGY)
defconsti(env, "GL-RESET-NOTIFICATION-STRATEGY", (GLenum) GL_RESET_NOTIFICATION_STRATEGY, "GL_RESET_NOTIFICATION_STRATEGY");
#endif
#if defined(GL_NO_RESET_NOTIFICATION)
defconsti(env, "GL-NO-RESET-NOTIFICATION", (GLenum) GL_NO_RESET_NOTIFICATION, "GL_NO_RESET_NOTIFICATION");
#endif
#if defined(GL_CONTEXT_LOST)
defconsti(env, "GL-CONTEXT-LOST", (GLenum) GL_CONTEXT_LOST, "GL_CONTEXT_LOST");
#endif
#if defined(GL_NO_ERROR)
defconsti(env, "GL-NO-ERROR", (GLenum) GL_NO_ERROR, "GL_NO_ERROR");
#endif
#if defined(GL_CONTEXT_ROBUST_ACCESS_KHR)
defconsti(env, "GL-CONTEXT-ROBUST-ACCESS-KHR", (GLenum) GL_CONTEXT_ROBUST_ACCESS_KHR, "GL_CONTEXT_ROBUST_ACCESS_KHR");
#endif
#if defined(GL_LOSE_CONTEXT_ON_RESET_KHR)
defconsti(env, "GL-LOSE-CONTEXT-ON-RESET-KHR", (GLenum) GL_LOSE_CONTEXT_ON_RESET_KHR, "GL_LOSE_CONTEXT_ON_RESET_KHR");
#endif
#if defined(GL_GUILTY_CONTEXT_RESET_KHR)
defconsti(env, "GL-GUILTY-CONTEXT-RESET-KHR", (GLenum) GL_GUILTY_CONTEXT_RESET_KHR, "GL_GUILTY_CONTEXT_RESET_KHR");
#endif
#if defined(GL_INNOCENT_CONTEXT_RESET_KHR)
defconsti(env, "GL-INNOCENT-CONTEXT-RESET-KHR", (GLenum) GL_INNOCENT_CONTEXT_RESET_KHR, "GL_INNOCENT_CONTEXT_RESET_KHR");
#endif
#if defined(GL_UNKNOWN_CONTEXT_RESET_KHR)
defconsti(env, "GL-UNKNOWN-CONTEXT-RESET-KHR", (GLenum) GL_UNKNOWN_CONTEXT_RESET_KHR, "GL_UNKNOWN_CONTEXT_RESET_KHR");
#endif
#if defined(GL_RESET_NOTIFICATION_STRATEGY_KHR)
defconsti(env, "GL-RESET-NOTIFICATION-STRATEGY-KHR", (GLenum) GL_RESET_NOTIFICATION_STRATEGY_KHR, "GL_RESET_NOTIFICATION_STRATEGY_KHR");
#endif
#if defined(GL_NO_RESET_NOTIFICATION_KHR)
defconsti(env, "GL-NO-RESET-NOTIFICATION-KHR", (GLenum) GL_NO_RESET_NOTIFICATION_KHR, "GL_NO_RESET_NOTIFICATION_KHR");
#endif
#if defined(GL_CONTEXT_LOST_KHR)
defconsti(env, "GL-CONTEXT-LOST-KHR", (GLenum) GL_CONTEXT_LOST_KHR, "GL_CONTEXT_LOST_KHR");
#endif
#if defined(GL_SUBGROUP_SIZE_KHR)
defconsti(env, "GL-SUBGROUP-SIZE-KHR", (GLenum) GL_SUBGROUP_SIZE_KHR, "GL_SUBGROUP_SIZE_KHR");
#endif
#if defined(GL_SUBGROUP_SUPPORTED_STAGES_KHR)
defconsti(env, "GL-SUBGROUP-SUPPORTED-STAGES-KHR", (GLenum) GL_SUBGROUP_SUPPORTED_STAGES_KHR, "GL_SUBGROUP_SUPPORTED_STAGES_KHR");
#endif
#if defined(GL_SUBGROUP_SUPPORTED_FEATURES_KHR)
defconsti(env, "GL-SUBGROUP-SUPPORTED-FEATURES-KHR", (GLenum) GL_SUBGROUP_SUPPORTED_FEATURES_KHR, "GL_SUBGROUP_SUPPORTED_FEATURES_KHR");
#endif
#if defined(GL_SUBGROUP_QUAD_ALL_STAGES_KHR)
defconsti(env, "GL-SUBGROUP-QUAD-ALL-STAGES-KHR", (GLenum) GL_SUBGROUP_QUAD_ALL_STAGES_KHR, "GL_SUBGROUP_QUAD_ALL_STAGES_KHR");
#endif
#if defined(GL_SUBGROUP_FEATURE_BASIC_BIT_KHR)
defconsti(env, "GL-SUBGROUP-FEATURE-BASIC-BIT-KHR", (GLenum) GL_SUBGROUP_FEATURE_BASIC_BIT_KHR, "GL_SUBGROUP_FEATURE_BASIC_BIT_KHR");
#endif
#if defined(GL_SUBGROUP_FEATURE_VOTE_BIT_KHR)
defconsti(env, "GL-SUBGROUP-FEATURE-VOTE-BIT-KHR", (GLenum) GL_SUBGROUP_FEATURE_VOTE_BIT_KHR, "GL_SUBGROUP_FEATURE_VOTE_BIT_KHR");
#endif
#if defined(GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR)
defconsti(env, "GL-SUBGROUP-FEATURE-ARITHMETIC-BIT-KHR", (GLenum) GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR, "GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR");
#endif
#if defined(GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR)
defconsti(env, "GL-SUBGROUP-FEATURE-BALLOT-BIT-KHR", (GLenum) GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR, "GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR");
#endif
#if defined(GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR)
defconsti(env, "GL-SUBGROUP-FEATURE-SHUFFLE-BIT-KHR", (GLenum) GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR, "GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR");
#endif
#if defined(GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR)
defconsti(env, "GL-SUBGROUP-FEATURE-SHUFFLE-RELATIVE-BIT-KHR", (GLenum) GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR, "GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR");
#endif
#if defined(GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR)
defconsti(env, "GL-SUBGROUP-FEATURE-CLUSTERED-BIT-KHR", (GLenum) GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR, "GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR");
#endif
#if defined(GL_SUBGROUP_FEATURE_QUAD_BIT_KHR)
defconsti(env, "GL-SUBGROUP-FEATURE-QUAD-BIT-KHR", (GLenum) GL_SUBGROUP_FEATURE_QUAD_BIT_KHR, "GL_SUBGROUP_FEATURE_QUAD_BIT_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_4x4_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-4x4-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_4x4_KHR, "GL_COMPRESSED_RGBA_ASTC_4x4_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_5x4_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-5x4-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_5x4_KHR, "GL_COMPRESSED_RGBA_ASTC_5x4_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_5x5_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-5x5-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_5x5_KHR, "GL_COMPRESSED_RGBA_ASTC_5x5_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_6x5_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-6x5-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_6x5_KHR, "GL_COMPRESSED_RGBA_ASTC_6x5_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_6x6_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-6x6-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_6x6_KHR, "GL_COMPRESSED_RGBA_ASTC_6x6_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_8x5_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-8x5-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_8x5_KHR, "GL_COMPRESSED_RGBA_ASTC_8x5_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_8x6_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-8x6-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_8x6_KHR, "GL_COMPRESSED_RGBA_ASTC_8x6_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_8x8_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-8x8-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_8x8_KHR, "GL_COMPRESSED_RGBA_ASTC_8x8_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x5_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x5-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x5_KHR, "GL_COMPRESSED_RGBA_ASTC_10x5_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x6_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x6-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x6_KHR, "GL_COMPRESSED_RGBA_ASTC_10x6_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x8_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x8-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x8_KHR, "GL_COMPRESSED_RGBA_ASTC_10x8_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x10_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x10-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x10_KHR, "GL_COMPRESSED_RGBA_ASTC_10x10_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_12x10_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-12x10-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_12x10_KHR, "GL_COMPRESSED_RGBA_ASTC_12x10_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_12x12_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-12x12-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_12x12_KHR, "GL_COMPRESSED_RGBA_ASTC_12x12_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-4x4-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-5x4-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-5x5-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-6x5-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-6x6-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-8x5-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-8x6-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-8x8-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x5-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x6-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x8-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x10-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-12x10-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-12x12-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_4x4_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-4x4-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_4x4_KHR, "GL_COMPRESSED_RGBA_ASTC_4x4_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_5x4_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-5x4-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_5x4_KHR, "GL_COMPRESSED_RGBA_ASTC_5x4_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_5x5_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-5x5-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_5x5_KHR, "GL_COMPRESSED_RGBA_ASTC_5x5_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_6x5_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-6x5-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_6x5_KHR, "GL_COMPRESSED_RGBA_ASTC_6x5_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_6x6_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-6x6-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_6x6_KHR, "GL_COMPRESSED_RGBA_ASTC_6x6_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_8x5_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-8x5-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_8x5_KHR, "GL_COMPRESSED_RGBA_ASTC_8x5_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_8x6_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-8x6-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_8x6_KHR, "GL_COMPRESSED_RGBA_ASTC_8x6_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_8x8_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-8x8-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_8x8_KHR, "GL_COMPRESSED_RGBA_ASTC_8x8_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x5_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x5-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x5_KHR, "GL_COMPRESSED_RGBA_ASTC_10x5_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x6_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x6-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x6_KHR, "GL_COMPRESSED_RGBA_ASTC_10x6_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x8_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x8-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x8_KHR, "GL_COMPRESSED_RGBA_ASTC_10x8_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x10_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x10-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x10_KHR, "GL_COMPRESSED_RGBA_ASTC_10x10_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_12x10_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-12x10-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_12x10_KHR, "GL_COMPRESSED_RGBA_ASTC_12x10_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_12x12_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-12x12-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_12x12_KHR, "GL_COMPRESSED_RGBA_ASTC_12x12_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-4x4-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-5x4-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-5x5-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-6x5-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-6x6-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-8x5-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-8x6-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-8x8-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x5-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x6-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x8-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x10-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-12x10-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-12x12-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR");
#endif
#if defined(GL_MAX_SHADER_COMPILER_THREADS_KHR)
defconsti(env, "GL-MAX-SHADER-COMPILER-THREADS-KHR", (GLenum) GL_MAX_SHADER_COMPILER_THREADS_KHR, "GL_MAX_SHADER_COMPILER_THREADS_KHR");
#endif
#if defined(GL_COMPLETION_STATUS_KHR)
defconsti(env, "GL-COMPLETION-STATUS-KHR", (GLenum) GL_COMPLETION_STATUS_KHR, "GL_COMPLETION_STATUS_KHR");
#endif
#if defined(GL_TEXTURE_1D_STACK_MESAX)
defconsti(env, "GL-TEXTURE-1D-STACK-MESAX", (GLenum) GL_TEXTURE_1D_STACK_MESAX, "GL_TEXTURE_1D_STACK_MESAX");
#endif
#if defined(GL_TEXTURE_2D_STACK_MESAX)
defconsti(env, "GL-TEXTURE-2D-STACK-MESAX", (GLenum) GL_TEXTURE_2D_STACK_MESAX, "GL_TEXTURE_2D_STACK_MESAX");
#endif
#if defined(GL_PROXY_TEXTURE_1D_STACK_MESAX)
defconsti(env, "GL-PROXY-TEXTURE-1D-STACK-MESAX", (GLenum) GL_PROXY_TEXTURE_1D_STACK_MESAX, "GL_PROXY_TEXTURE_1D_STACK_MESAX");
#endif
#if defined(GL_PROXY_TEXTURE_2D_STACK_MESAX)
defconsti(env, "GL-PROXY-TEXTURE-2D-STACK-MESAX", (GLenum) GL_PROXY_TEXTURE_2D_STACK_MESAX, "GL_PROXY_TEXTURE_2D_STACK_MESAX");
#endif
#if defined(GL_TEXTURE_1D_STACK_BINDING_MESAX)
defconsti(env, "GL-TEXTURE-1D-STACK-BINDING-MESAX", (GLenum) GL_TEXTURE_1D_STACK_BINDING_MESAX, "GL_TEXTURE_1D_STACK_BINDING_MESAX");
#endif
#if defined(GL_TEXTURE_2D_STACK_BINDING_MESAX)
defconsti(env, "GL-TEXTURE-2D-STACK-BINDING-MESAX", (GLenum) GL_TEXTURE_2D_STACK_BINDING_MESAX, "GL_TEXTURE_2D_STACK_BINDING_MESAX");
#endif
#if defined(GL_FRAMEBUFFER_FLIP_X_MESA)
defconsti(env, "GL-FRAMEBUFFER-FLIP-X-MESA", (GLenum) GL_FRAMEBUFFER_FLIP_X_MESA, "GL_FRAMEBUFFER_FLIP_X_MESA");
#endif
#if defined(GL_FRAMEBUFFER_FLIP_Y_MESA)
defconsti(env, "GL-FRAMEBUFFER-FLIP-Y-MESA", (GLenum) GL_FRAMEBUFFER_FLIP_Y_MESA, "GL_FRAMEBUFFER_FLIP_Y_MESA");
#endif
#if defined(GL_FRAMEBUFFER_SWAP_XY_MESA)
defconsti(env, "GL-FRAMEBUFFER-SWAP-XY-MESA", (GLenum) GL_FRAMEBUFFER_SWAP_XY_MESA, "GL_FRAMEBUFFER_SWAP_XY_MESA");
#endif
#if defined(GL_PACK_INVERT_MESA)
defconsti(env, "GL-PACK-INVERT-MESA", (GLenum) GL_PACK_INVERT_MESA, "GL_PACK_INVERT_MESA");
#endif
#if defined(GL_PROGRAM_BINARY_FORMAT_MESA)
defconsti(env, "GL-PROGRAM-BINARY-FORMAT-MESA", (GLenum) GL_PROGRAM_BINARY_FORMAT_MESA, "GL_PROGRAM_BINARY_FORMAT_MESA");
#endif
#if defined(GL_TILE_RASTER_ORDER_FIXED_MESA)
defconsti(env, "GL-TILE-RASTER-ORDER-FIXED-MESA", (GLenum) GL_TILE_RASTER_ORDER_FIXED_MESA, "GL_TILE_RASTER_ORDER_FIXED_MESA");
#endif
#if defined(GL_TILE_RASTER_ORDER_INCREASING_X_MESA)
defconsti(env, "GL-TILE-RASTER-ORDER-INCREASING-X-MESA", (GLenum) GL_TILE_RASTER_ORDER_INCREASING_X_MESA, "GL_TILE_RASTER_ORDER_INCREASING_X_MESA");
#endif
#if defined(GL_TILE_RASTER_ORDER_INCREASING_Y_MESA)
defconsti(env, "GL-TILE-RASTER-ORDER-INCREASING-Y-MESA", (GLenum) GL_TILE_RASTER_ORDER_INCREASING_Y_MESA, "GL_TILE_RASTER_ORDER_INCREASING_Y_MESA");
#endif
#if defined(GL_UNSIGNED_SHORT_8_8_MESA)
defconsti(env, "GL-UNSIGNED-SHORT-8-8-MESA", (GLenum) GL_UNSIGNED_SHORT_8_8_MESA, "GL_UNSIGNED_SHORT_8_8_MESA");
#endif
#if defined(GL_UNSIGNED_SHORT_8_8_REV_MESA)
defconsti(env, "GL-UNSIGNED-SHORT-8-8-REV-MESA", (GLenum) GL_UNSIGNED_SHORT_8_8_REV_MESA, "GL_UNSIGNED_SHORT_8_8_REV_MESA");
#endif
#if defined(GL_YCBCR_MESA)
defconsti(env, "GL-YCBCR-MESA", (GLenum) GL_YCBCR_MESA, "GL_YCBCR_MESA");
#endif
#if defined(GL_EXTERNAL_STORAGE_BIT_NVX)
defconsti(env, "GL-EXTERNAL-STORAGE-BIT-NVX", (GLenum) GL_EXTERNAL_STORAGE_BIT_NVX, "GL_EXTERNAL_STORAGE_BIT_NVX");
#endif
#if defined(GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX)
defconsti(env, "GL-GPU-MEMORY-INFO-DEDICATED-VIDMEM-NVX", (GLenum) GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX, "GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX");
#endif
#if defined(GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX)
defconsti(env, "GL-GPU-MEMORY-INFO-TOTAL-AVAILABLE-MEMORY-NVX", (GLenum) GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX, "GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX");
#endif
#if defined(GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX)
defconsti(env, "GL-GPU-MEMORY-INFO-CURRENT-AVAILABLE-VIDMEM-NVX", (GLenum) GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX, "GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX");
#endif
#if defined(GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX)
defconsti(env, "GL-GPU-MEMORY-INFO-EVICTION-COUNT-NVX", (GLenum) GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX, "GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX");
#endif
#if defined(GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX)
defconsti(env, "GL-GPU-MEMORY-INFO-EVICTED-MEMORY-NVX", (GLenum) GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX, "GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX");
#endif
#if defined(GL_LGPU_SEPARATE_STORAGE_BIT_NVX)
defconsti(env, "GL-LGPU-SEPARATE-STORAGE-BIT-NVX", (GLenum) GL_LGPU_SEPARATE_STORAGE_BIT_NVX, "GL_LGPU_SEPARATE_STORAGE_BIT_NVX");
#endif
#if defined(GL_MAX_LGPU_GPUS_NVX)
defconsti(env, "GL-MAX-LGPU-GPUS-NVX", (GLenum) GL_MAX_LGPU_GPUS_NVX, "GL_MAX_LGPU_GPUS_NVX");
#endif
#if defined(GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV)
defconsti(env, "GL-ALPHA-TO-COVERAGE-DITHER-DEFAULT-NV", (GLenum) GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV, "GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV");
#endif
#if defined(GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV)
defconsti(env, "GL-ALPHA-TO-COVERAGE-DITHER-ENABLE-NV", (GLenum) GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV, "GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV");
#endif
#if defined(GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV)
defconsti(env, "GL-ALPHA-TO-COVERAGE-DITHER-DISABLE-NV", (GLenum) GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV, "GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV");
#endif
#if defined(GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV)
defconsti(env, "GL-ALPHA-TO-COVERAGE-DITHER-MODE-NV", (GLenum) GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV, "GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV");
#endif
#if defined(GL_BLEND_OVERLAP_NV)
defconsti(env, "GL-BLEND-OVERLAP-NV", (GLenum) GL_BLEND_OVERLAP_NV, "GL_BLEND_OVERLAP_NV");
#endif
#if defined(GL_BLEND_PREMULTIPLIED_SRC_NV)
defconsti(env, "GL-BLEND-PREMULTIPLIED-SRC-NV", (GLenum) GL_BLEND_PREMULTIPLIED_SRC_NV, "GL_BLEND_PREMULTIPLIED_SRC_NV");
#endif
#if defined(GL_BLUE_NV)
defconsti(env, "GL-BLUE-NV", (GLenum) GL_BLUE_NV, "GL_BLUE_NV");
#endif
#if defined(GL_COLORBURN_NV)
defconsti(env, "GL-COLORBURN-NV", (GLenum) GL_COLORBURN_NV, "GL_COLORBURN_NV");
#endif
#if defined(GL_COLORDODGE_NV)
defconsti(env, "GL-COLORDODGE-NV", (GLenum) GL_COLORDODGE_NV, "GL_COLORDODGE_NV");
#endif
#if defined(GL_CONJOINT_NV)
defconsti(env, "GL-CONJOINT-NV", (GLenum) GL_CONJOINT_NV, "GL_CONJOINT_NV");
#endif
#if defined(GL_CONTRAST_NV)
defconsti(env, "GL-CONTRAST-NV", (GLenum) GL_CONTRAST_NV, "GL_CONTRAST_NV");
#endif
#if defined(GL_DARKEN_NV)
defconsti(env, "GL-DARKEN-NV", (GLenum) GL_DARKEN_NV, "GL_DARKEN_NV");
#endif
#if defined(GL_DIFFERENCE_NV)
defconsti(env, "GL-DIFFERENCE-NV", (GLenum) GL_DIFFERENCE_NV, "GL_DIFFERENCE_NV");
#endif
#if defined(GL_DISJOINT_NV)
defconsti(env, "GL-DISJOINT-NV", (GLenum) GL_DISJOINT_NV, "GL_DISJOINT_NV");
#endif
#if defined(GL_DST_ATOP_NV)
defconsti(env, "GL-DST-ATOP-NV", (GLenum) GL_DST_ATOP_NV, "GL_DST_ATOP_NV");
#endif
#if defined(GL_DST_IN_NV)
defconsti(env, "GL-DST-IN-NV", (GLenum) GL_DST_IN_NV, "GL_DST_IN_NV");
#endif
#if defined(GL_DST_NV)
defconsti(env, "GL-DST-NV", (GLenum) GL_DST_NV, "GL_DST_NV");
#endif
#if defined(GL_DST_OUT_NV)
defconsti(env, "GL-DST-OUT-NV", (GLenum) GL_DST_OUT_NV, "GL_DST_OUT_NV");
#endif
#if defined(GL_DST_OVER_NV)
defconsti(env, "GL-DST-OVER-NV", (GLenum) GL_DST_OVER_NV, "GL_DST_OVER_NV");
#endif
#if defined(GL_EXCLUSION_NV)
defconsti(env, "GL-EXCLUSION-NV", (GLenum) GL_EXCLUSION_NV, "GL_EXCLUSION_NV");
#endif
#if defined(GL_GREEN_NV)
defconsti(env, "GL-GREEN-NV", (GLenum) GL_GREEN_NV, "GL_GREEN_NV");
#endif
#if defined(GL_HARDLIGHT_NV)
defconsti(env, "GL-HARDLIGHT-NV", (GLenum) GL_HARDLIGHT_NV, "GL_HARDLIGHT_NV");
#endif
#if defined(GL_HARDMIX_NV)
defconsti(env, "GL-HARDMIX-NV", (GLenum) GL_HARDMIX_NV, "GL_HARDMIX_NV");
#endif
#if defined(GL_HSL_COLOR_NV)
defconsti(env, "GL-HSL-COLOR-NV", (GLenum) GL_HSL_COLOR_NV, "GL_HSL_COLOR_NV");
#endif
#if defined(GL_HSL_HUE_NV)
defconsti(env, "GL-HSL-HUE-NV", (GLenum) GL_HSL_HUE_NV, "GL_HSL_HUE_NV");
#endif
#if defined(GL_HSL_LUMINOSITY_NV)
defconsti(env, "GL-HSL-LUMINOSITY-NV", (GLenum) GL_HSL_LUMINOSITY_NV, "GL_HSL_LUMINOSITY_NV");
#endif
#if defined(GL_HSL_SATURATION_NV)
defconsti(env, "GL-HSL-SATURATION-NV", (GLenum) GL_HSL_SATURATION_NV, "GL_HSL_SATURATION_NV");
#endif
#if defined(GL_INVERT)
defconsti(env, "GL-INVERT", (GLenum) GL_INVERT, "GL_INVERT");
#endif
#if defined(GL_INVERT_OVG_NV)
defconsti(env, "GL-INVERT-OVG-NV", (GLenum) GL_INVERT_OVG_NV, "GL_INVERT_OVG_NV");
#endif
#if defined(GL_INVERT_RGB_NV)
defconsti(env, "GL-INVERT-RGB-NV", (GLenum) GL_INVERT_RGB_NV, "GL_INVERT_RGB_NV");
#endif
#if defined(GL_LIGHTEN_NV)
defconsti(env, "GL-LIGHTEN-NV", (GLenum) GL_LIGHTEN_NV, "GL_LIGHTEN_NV");
#endif
#if defined(GL_LINEARBURN_NV)
defconsti(env, "GL-LINEARBURN-NV", (GLenum) GL_LINEARBURN_NV, "GL_LINEARBURN_NV");
#endif
#if defined(GL_LINEARDODGE_NV)
defconsti(env, "GL-LINEARDODGE-NV", (GLenum) GL_LINEARDODGE_NV, "GL_LINEARDODGE_NV");
#endif
#if defined(GL_LINEARLIGHT_NV)
defconsti(env, "GL-LINEARLIGHT-NV", (GLenum) GL_LINEARLIGHT_NV, "GL_LINEARLIGHT_NV");
#endif
#if defined(GL_MINUS_CLAMPED_NV)
defconsti(env, "GL-MINUS-CLAMPED-NV", (GLenum) GL_MINUS_CLAMPED_NV, "GL_MINUS_CLAMPED_NV");
#endif
#if defined(GL_MINUS_NV)
defconsti(env, "GL-MINUS-NV", (GLenum) GL_MINUS_NV, "GL_MINUS_NV");
#endif
#if defined(GL_MULTIPLY_NV)
defconsti(env, "GL-MULTIPLY-NV", (GLenum) GL_MULTIPLY_NV, "GL_MULTIPLY_NV");
#endif
#if defined(GL_OVERLAY_NV)
defconsti(env, "GL-OVERLAY-NV", (GLenum) GL_OVERLAY_NV, "GL_OVERLAY_NV");
#endif
#if defined(GL_PINLIGHT_NV)
defconsti(env, "GL-PINLIGHT-NV", (GLenum) GL_PINLIGHT_NV, "GL_PINLIGHT_NV");
#endif
#if defined(GL_PLUS_CLAMPED_ALPHA_NV)
defconsti(env, "GL-PLUS-CLAMPED-ALPHA-NV", (GLenum) GL_PLUS_CLAMPED_ALPHA_NV, "GL_PLUS_CLAMPED_ALPHA_NV");
#endif
#if defined(GL_PLUS_CLAMPED_NV)
defconsti(env, "GL-PLUS-CLAMPED-NV", (GLenum) GL_PLUS_CLAMPED_NV, "GL_PLUS_CLAMPED_NV");
#endif
#if defined(GL_PLUS_DARKER_NV)
defconsti(env, "GL-PLUS-DARKER-NV", (GLenum) GL_PLUS_DARKER_NV, "GL_PLUS_DARKER_NV");
#endif
#if defined(GL_PLUS_NV)
defconsti(env, "GL-PLUS-NV", (GLenum) GL_PLUS_NV, "GL_PLUS_NV");
#endif
#if defined(GL_RED_NV)
defconsti(env, "GL-RED-NV", (GLenum) GL_RED_NV, "GL_RED_NV");
#endif
#if defined(GL_SCREEN_NV)
defconsti(env, "GL-SCREEN-NV", (GLenum) GL_SCREEN_NV, "GL_SCREEN_NV");
#endif
#if defined(GL_SOFTLIGHT_NV)
defconsti(env, "GL-SOFTLIGHT-NV", (GLenum) GL_SOFTLIGHT_NV, "GL_SOFTLIGHT_NV");
#endif
#if defined(GL_SRC_ATOP_NV)
defconsti(env, "GL-SRC-ATOP-NV", (GLenum) GL_SRC_ATOP_NV, "GL_SRC_ATOP_NV");
#endif
#if defined(GL_SRC_IN_NV)
defconsti(env, "GL-SRC-IN-NV", (GLenum) GL_SRC_IN_NV, "GL_SRC_IN_NV");
#endif
#if defined(GL_SRC_NV)
defconsti(env, "GL-SRC-NV", (GLenum) GL_SRC_NV, "GL_SRC_NV");
#endif
#if defined(GL_SRC_OUT_NV)
defconsti(env, "GL-SRC-OUT-NV", (GLenum) GL_SRC_OUT_NV, "GL_SRC_OUT_NV");
#endif
#if defined(GL_SRC_OVER_NV)
defconsti(env, "GL-SRC-OVER-NV", (GLenum) GL_SRC_OVER_NV, "GL_SRC_OVER_NV");
#endif
#if defined(GL_UNCORRELATED_NV)
defconsti(env, "GL-UNCORRELATED-NV", (GLenum) GL_UNCORRELATED_NV, "GL_UNCORRELATED_NV");
#endif
#if defined(GL_VIVIDLIGHT_NV)
defconsti(env, "GL-VIVIDLIGHT-NV", (GLenum) GL_VIVIDLIGHT_NV, "GL_VIVIDLIGHT_NV");
#endif
#if defined(GL_XOR_NV)
defconsti(env, "GL-XOR-NV", (GLenum) GL_XOR_NV, "GL_XOR_NV");
#endif
#if defined(GL_ZERO)
defconsti(env, "GL-ZERO", (GLenum) GL_ZERO, "GL_ZERO");
#endif
#if defined(GL_BLEND_ADVANCED_COHERENT_NV)
defconsti(env, "GL-BLEND-ADVANCED-COHERENT-NV", (GLenum) GL_BLEND_ADVANCED_COHERENT_NV, "GL_BLEND_ADVANCED_COHERENT_NV");
#endif
#if defined(GL_FACTOR_MIN_AMD)
defconsti(env, "GL-FACTOR-MIN-AMD", (GLenum) GL_FACTOR_MIN_AMD, "GL_FACTOR_MIN_AMD");
#endif
#if defined(GL_FACTOR_MAX_AMD)
defconsti(env, "GL-FACTOR-MAX-AMD", (GLenum) GL_FACTOR_MAX_AMD, "GL_FACTOR_MAX_AMD");
#endif
#if defined(GL_VIEWPORT_POSITION_W_SCALE_NV)
defconsti(env, "GL-VIEWPORT-POSITION-W-SCALE-NV", (GLenum) GL_VIEWPORT_POSITION_W_SCALE_NV, "GL_VIEWPORT_POSITION_W_SCALE_NV");
#endif
#if defined(GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV)
defconsti(env, "GL-VIEWPORT-POSITION-W-SCALE-X-COEFF-NV", (GLenum) GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV, "GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV");
#endif
#if defined(GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV)
defconsti(env, "GL-VIEWPORT-POSITION-W-SCALE-Y-COEFF-NV", (GLenum) GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV, "GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV");
#endif
#if defined(GL_TERMINATE_SEQUENCE_COMMAND_NV)
defconsti(env, "GL-TERMINATE-SEQUENCE-COMMAND-NV", (GLenum) GL_TERMINATE_SEQUENCE_COMMAND_NV, "GL_TERMINATE_SEQUENCE_COMMAND_NV");
#endif
#if defined(GL_NOP_COMMAND_NV)
defconsti(env, "GL-NOP-COMMAND-NV", (GLenum) GL_NOP_COMMAND_NV, "GL_NOP_COMMAND_NV");
#endif
#if defined(GL_DRAW_ELEMENTS_COMMAND_NV)
defconsti(env, "GL-DRAW-ELEMENTS-COMMAND-NV", (GLenum) GL_DRAW_ELEMENTS_COMMAND_NV, "GL_DRAW_ELEMENTS_COMMAND_NV");
#endif
#if defined(GL_DRAW_ARRAYS_COMMAND_NV)
defconsti(env, "GL-DRAW-ARRAYS-COMMAND-NV", (GLenum) GL_DRAW_ARRAYS_COMMAND_NV, "GL_DRAW_ARRAYS_COMMAND_NV");
#endif
#if defined(GL_DRAW_ELEMENTS_STRIP_COMMAND_NV)
defconsti(env, "GL-DRAW-ELEMENTS-STRIP-COMMAND-NV", (GLenum) GL_DRAW_ELEMENTS_STRIP_COMMAND_NV, "GL_DRAW_ELEMENTS_STRIP_COMMAND_NV");
#endif
#if defined(GL_DRAW_ARRAYS_STRIP_COMMAND_NV)
defconsti(env, "GL-DRAW-ARRAYS-STRIP-COMMAND-NV", (GLenum) GL_DRAW_ARRAYS_STRIP_COMMAND_NV, "GL_DRAW_ARRAYS_STRIP_COMMAND_NV");
#endif
#if defined(GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV)
defconsti(env, "GL-DRAW-ELEMENTS-INSTANCED-COMMAND-NV", (GLenum) GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV, "GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV");
#endif
#if defined(GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV)
defconsti(env, "GL-DRAW-ARRAYS-INSTANCED-COMMAND-NV", (GLenum) GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV, "GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV");
#endif
#if defined(GL_ELEMENT_ADDRESS_COMMAND_NV)
defconsti(env, "GL-ELEMENT-ADDRESS-COMMAND-NV", (GLenum) GL_ELEMENT_ADDRESS_COMMAND_NV, "GL_ELEMENT_ADDRESS_COMMAND_NV");
#endif
#if defined(GL_ATTRIBUTE_ADDRESS_COMMAND_NV)
defconsti(env, "GL-ATTRIBUTE-ADDRESS-COMMAND-NV", (GLenum) GL_ATTRIBUTE_ADDRESS_COMMAND_NV, "GL_ATTRIBUTE_ADDRESS_COMMAND_NV");
#endif
#if defined(GL_UNIFORM_ADDRESS_COMMAND_NV)
defconsti(env, "GL-UNIFORM-ADDRESS-COMMAND-NV", (GLenum) GL_UNIFORM_ADDRESS_COMMAND_NV, "GL_UNIFORM_ADDRESS_COMMAND_NV");
#endif
#if defined(GL_BLEND_COLOR_COMMAND_NV)
defconsti(env, "GL-BLEND-COLOR-COMMAND-NV", (GLenum) GL_BLEND_COLOR_COMMAND_NV, "GL_BLEND_COLOR_COMMAND_NV");
#endif
#if defined(GL_STENCIL_REF_COMMAND_NV)
defconsti(env, "GL-STENCIL-REF-COMMAND-NV", (GLenum) GL_STENCIL_REF_COMMAND_NV, "GL_STENCIL_REF_COMMAND_NV");
#endif
#if defined(GL_LINE_WIDTH_COMMAND_NV)
defconsti(env, "GL-LINE-WIDTH-COMMAND-NV", (GLenum) GL_LINE_WIDTH_COMMAND_NV, "GL_LINE_WIDTH_COMMAND_NV");
#endif
#if defined(GL_POLYGON_OFFSET_COMMAND_NV)
defconsti(env, "GL-POLYGON-OFFSET-COMMAND-NV", (GLenum) GL_POLYGON_OFFSET_COMMAND_NV, "GL_POLYGON_OFFSET_COMMAND_NV");
#endif
#if defined(GL_ALPHA_REF_COMMAND_NV)
defconsti(env, "GL-ALPHA-REF-COMMAND-NV", (GLenum) GL_ALPHA_REF_COMMAND_NV, "GL_ALPHA_REF_COMMAND_NV");
#endif
#if defined(GL_VIEWPORT_COMMAND_NV)
defconsti(env, "GL-VIEWPORT-COMMAND-NV", (GLenum) GL_VIEWPORT_COMMAND_NV, "GL_VIEWPORT_COMMAND_NV");
#endif
#if defined(GL_SCISSOR_COMMAND_NV)
defconsti(env, "GL-SCISSOR-COMMAND-NV", (GLenum) GL_SCISSOR_COMMAND_NV, "GL_SCISSOR_COMMAND_NV");
#endif
#if defined(GL_FRONT_FACE_COMMAND_NV)
defconsti(env, "GL-FRONT-FACE-COMMAND-NV", (GLenum) GL_FRONT_FACE_COMMAND_NV, "GL_FRONT_FACE_COMMAND_NV");
#endif
#if defined(GL_COMPUTE_PROGRAM_NV)
defconsti(env, "GL-COMPUTE-PROGRAM-NV", (GLenum) GL_COMPUTE_PROGRAM_NV, "GL_COMPUTE_PROGRAM_NV");
#endif
#if defined(GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV)
defconsti(env, "GL-COMPUTE-PROGRAM-PARAMETER-BUFFER-NV", (GLenum) GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV, "GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV");
#endif
#if defined(GL_QUERY_WAIT_NV)
defconsti(env, "GL-QUERY-WAIT-NV", (GLenum) GL_QUERY_WAIT_NV, "GL_QUERY_WAIT_NV");
#endif
#if defined(GL_QUERY_NO_WAIT_NV)
defconsti(env, "GL-QUERY-NO-WAIT-NV", (GLenum) GL_QUERY_NO_WAIT_NV, "GL_QUERY_NO_WAIT_NV");
#endif
#if defined(GL_QUERY_BY_REGION_WAIT_NV)
defconsti(env, "GL-QUERY-BY-REGION-WAIT-NV", (GLenum) GL_QUERY_BY_REGION_WAIT_NV, "GL_QUERY_BY_REGION_WAIT_NV");
#endif
#if defined(GL_QUERY_BY_REGION_NO_WAIT_NV)
defconsti(env, "GL-QUERY-BY-REGION-NO-WAIT-NV", (GLenum) GL_QUERY_BY_REGION_NO_WAIT_NV, "GL_QUERY_BY_REGION_NO_WAIT_NV");
#endif
#if defined(GL_CONSERVATIVE_RASTERIZATION_NV)
defconsti(env, "GL-CONSERVATIVE-RASTERIZATION-NV", (GLenum) GL_CONSERVATIVE_RASTERIZATION_NV, "GL_CONSERVATIVE_RASTERIZATION_NV");
#endif
#if defined(GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV)
defconsti(env, "GL-SUBPIXEL-PRECISION-BIAS-X-BITS-NV", (GLenum) GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV, "GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV");
#endif
#if defined(GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV)
defconsti(env, "GL-SUBPIXEL-PRECISION-BIAS-Y-BITS-NV", (GLenum) GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV, "GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV");
#endif
#if defined(GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV)
defconsti(env, "GL-MAX-SUBPIXEL-PRECISION-BIAS-BITS-NV", (GLenum) GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV, "GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV");
#endif
#if defined(GL_CONSERVATIVE_RASTER_DILATE_NV)
defconsti(env, "GL-CONSERVATIVE-RASTER-DILATE-NV", (GLenum) GL_CONSERVATIVE_RASTER_DILATE_NV, "GL_CONSERVATIVE_RASTER_DILATE_NV");
#endif
#if defined(GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV)
defconsti(env, "GL-CONSERVATIVE-RASTER-DILATE-RANGE-NV", (GLenum) GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV, "GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV");
#endif
#if defined(GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV)
defconsti(env, "GL-CONSERVATIVE-RASTER-DILATE-GRANULARITY-NV", (GLenum) GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV, "GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV");
#endif
#if defined(GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV)
defconsti(env, "GL-CONSERVATIVE-RASTER-MODE-PRE-SNAP-NV", (GLenum) GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV, "GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV");
#endif
#if defined(GL_CONSERVATIVE_RASTER_MODE_NV)
defconsti(env, "GL-CONSERVATIVE-RASTER-MODE-NV", (GLenum) GL_CONSERVATIVE_RASTER_MODE_NV, "GL_CONSERVATIVE_RASTER_MODE_NV");
#endif
#if defined(GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV)
defconsti(env, "GL-CONSERVATIVE-RASTER-MODE-POST-SNAP-NV", (GLenum) GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV, "GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV");
#endif
#if defined(GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV)
defconsti(env, "GL-CONSERVATIVE-RASTER-MODE-PRE-SNAP-TRIANGLES-NV", (GLenum) GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV, "GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV");
#endif
#if defined(GL_CONSERVATIVE_RASTER_MODE_NV)
defconsti(env, "GL-CONSERVATIVE-RASTER-MODE-NV", (GLenum) GL_CONSERVATIVE_RASTER_MODE_NV, "GL_CONSERVATIVE_RASTER_MODE_NV");
#endif
#if defined(GL_COPY_READ_BUFFER_NV)
defconsti(env, "GL-COPY-READ-BUFFER-NV", (GLenum) GL_COPY_READ_BUFFER_NV, "GL_COPY_READ_BUFFER_NV");
#endif
#if defined(GL_COPY_WRITE_BUFFER_NV)
defconsti(env, "GL-COPY-WRITE-BUFFER-NV", (GLenum) GL_COPY_WRITE_BUFFER_NV, "GL_COPY_WRITE_BUFFER_NV");
#endif
#if defined(GL_DEPTH_STENCIL_TO_RGBA_NV)
defconsti(env, "GL-DEPTH-STENCIL-TO-RGBA-NV", (GLenum) GL_DEPTH_STENCIL_TO_RGBA_NV, "GL_DEPTH_STENCIL_TO_RGBA_NV");
#endif
#if defined(GL_DEPTH_STENCIL_TO_BGRA_NV)
defconsti(env, "GL-DEPTH-STENCIL-TO-BGRA-NV", (GLenum) GL_DEPTH_STENCIL_TO_BGRA_NV, "GL_DEPTH_STENCIL_TO_BGRA_NV");
#endif
#if defined(GL_COVERAGE_COMPONENT_NV)
defconsti(env, "GL-COVERAGE-COMPONENT-NV", (GLenum) GL_COVERAGE_COMPONENT_NV, "GL_COVERAGE_COMPONENT_NV");
#endif
#if defined(GL_COVERAGE_COMPONENT4_NV)
defconsti(env, "GL-COVERAGE-COMPONENT4-NV", (GLenum) GL_COVERAGE_COMPONENT4_NV, "GL_COVERAGE_COMPONENT4_NV");
#endif
#if defined(GL_COVERAGE_ATTACHMENT_NV)
defconsti(env, "GL-COVERAGE-ATTACHMENT-NV", (GLenum) GL_COVERAGE_ATTACHMENT_NV, "GL_COVERAGE_ATTACHMENT_NV");
#endif
#if defined(GL_COVERAGE_BUFFERS_NV)
defconsti(env, "GL-COVERAGE-BUFFERS-NV", (GLenum) GL_COVERAGE_BUFFERS_NV, "GL_COVERAGE_BUFFERS_NV");
#endif
#if defined(GL_COVERAGE_SAMPLES_NV)
defconsti(env, "GL-COVERAGE-SAMPLES-NV", (GLenum) GL_COVERAGE_SAMPLES_NV, "GL_COVERAGE_SAMPLES_NV");
#endif
#if defined(GL_COVERAGE_ALL_FRAGMENTS_NV)
defconsti(env, "GL-COVERAGE-ALL-FRAGMENTS-NV", (GLenum) GL_COVERAGE_ALL_FRAGMENTS_NV, "GL_COVERAGE_ALL_FRAGMENTS_NV");
#endif
#if defined(GL_COVERAGE_EDGE_FRAGMENTS_NV)
defconsti(env, "GL-COVERAGE-EDGE-FRAGMENTS-NV", (GLenum) GL_COVERAGE_EDGE_FRAGMENTS_NV, "GL_COVERAGE_EDGE_FRAGMENTS_NV");
#endif
#if defined(GL_COVERAGE_AUTOMATIC_NV)
defconsti(env, "GL-COVERAGE-AUTOMATIC-NV", (GLenum) GL_COVERAGE_AUTOMATIC_NV, "GL_COVERAGE_AUTOMATIC_NV");
#endif
#if defined(GL_COVERAGE_BUFFER_BIT_NV)
defconsti(env, "GL-COVERAGE-BUFFER-BIT-NV", (GLenum) GL_COVERAGE_BUFFER_BIT_NV, "GL_COVERAGE_BUFFER_BIT_NV");
#endif
#if defined(GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV)
defconsti(env, "GL-MAX-DEEP-3D-TEXTURE-WIDTH-HEIGHT-NV", (GLenum) GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV, "GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV");
#endif
#if defined(GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV)
defconsti(env, "GL-MAX-DEEP-3D-TEXTURE-DEPTH-NV", (GLenum) GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV, "GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV");
#endif
#if defined(GL_DEPTH_COMPONENT32F_NV)
defconsti(env, "GL-DEPTH-COMPONENT32F-NV", (GLenum) GL_DEPTH_COMPONENT32F_NV, "GL_DEPTH_COMPONENT32F_NV");
#endif
#if defined(GL_DEPTH32F_STENCIL8_NV)
defconsti(env, "GL-DEPTH32F-STENCIL8-NV", (GLenum) GL_DEPTH32F_STENCIL8_NV, "GL_DEPTH32F_STENCIL8_NV");
#endif
#if defined(GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV)
defconsti(env, "GL-FLOAT-32-UNSIGNED-INT-24-8-REV-NV", (GLenum) GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV, "GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV");
#endif
#if defined(GL_DEPTH_BUFFER_FLOAT_MODE_NV)
defconsti(env, "GL-DEPTH-BUFFER-FLOAT-MODE-NV", (GLenum) GL_DEPTH_BUFFER_FLOAT_MODE_NV, "GL_DEPTH_BUFFER_FLOAT_MODE_NV");
#endif
#if defined(GL_DEPTH_CLAMP_NV)
defconsti(env, "GL-DEPTH-CLAMP-NV", (GLenum) GL_DEPTH_CLAMP_NV, "GL_DEPTH_CLAMP_NV");
#endif
#if defined(GL_DEPTH_COMPONENT16_NONLINEAR_NV)
defconsti(env, "GL-DEPTH-COMPONENT16-NONLINEAR-NV", (GLenum) GL_DEPTH_COMPONENT16_NONLINEAR_NV, "GL_DEPTH_COMPONENT16_NONLINEAR_NV");
#endif
#if defined(GL_MAX_DRAW_BUFFERS_NV)
defconsti(env, "GL-MAX-DRAW-BUFFERS-NV", (GLenum) GL_MAX_DRAW_BUFFERS_NV, "GL_MAX_DRAW_BUFFERS_NV");
#endif
#if defined(GL_DRAW_BUFFER0_NV)
defconsti(env, "GL-DRAW-BUFFER0-NV", (GLenum) GL_DRAW_BUFFER0_NV, "GL_DRAW_BUFFER0_NV");
#endif
#if defined(GL_DRAW_BUFFER1_NV)
defconsti(env, "GL-DRAW-BUFFER1-NV", (GLenum) GL_DRAW_BUFFER1_NV, "GL_DRAW_BUFFER1_NV");
#endif
#if defined(GL_DRAW_BUFFER2_NV)
defconsti(env, "GL-DRAW-BUFFER2-NV", (GLenum) GL_DRAW_BUFFER2_NV, "GL_DRAW_BUFFER2_NV");
#endif
#if defined(GL_DRAW_BUFFER3_NV)
defconsti(env, "GL-DRAW-BUFFER3-NV", (GLenum) GL_DRAW_BUFFER3_NV, "GL_DRAW_BUFFER3_NV");
#endif
#if defined(GL_DRAW_BUFFER4_NV)
defconsti(env, "GL-DRAW-BUFFER4-NV", (GLenum) GL_DRAW_BUFFER4_NV, "GL_DRAW_BUFFER4_NV");
#endif
#if defined(GL_DRAW_BUFFER5_NV)
defconsti(env, "GL-DRAW-BUFFER5-NV", (GLenum) GL_DRAW_BUFFER5_NV, "GL_DRAW_BUFFER5_NV");
#endif
#if defined(GL_DRAW_BUFFER6_NV)
defconsti(env, "GL-DRAW-BUFFER6-NV", (GLenum) GL_DRAW_BUFFER6_NV, "GL_DRAW_BUFFER6_NV");
#endif
#if defined(GL_DRAW_BUFFER7_NV)
defconsti(env, "GL-DRAW-BUFFER7-NV", (GLenum) GL_DRAW_BUFFER7_NV, "GL_DRAW_BUFFER7_NV");
#endif
#if defined(GL_DRAW_BUFFER8_NV)
defconsti(env, "GL-DRAW-BUFFER8-NV", (GLenum) GL_DRAW_BUFFER8_NV, "GL_DRAW_BUFFER8_NV");
#endif
#if defined(GL_DRAW_BUFFER9_NV)
defconsti(env, "GL-DRAW-BUFFER9-NV", (GLenum) GL_DRAW_BUFFER9_NV, "GL_DRAW_BUFFER9_NV");
#endif
#if defined(GL_DRAW_BUFFER10_NV)
defconsti(env, "GL-DRAW-BUFFER10-NV", (GLenum) GL_DRAW_BUFFER10_NV, "GL_DRAW_BUFFER10_NV");
#endif
#if defined(GL_DRAW_BUFFER11_NV)
defconsti(env, "GL-DRAW-BUFFER11-NV", (GLenum) GL_DRAW_BUFFER11_NV, "GL_DRAW_BUFFER11_NV");
#endif
#if defined(GL_DRAW_BUFFER12_NV)
defconsti(env, "GL-DRAW-BUFFER12-NV", (GLenum) GL_DRAW_BUFFER12_NV, "GL_DRAW_BUFFER12_NV");
#endif
#if defined(GL_DRAW_BUFFER13_NV)
defconsti(env, "GL-DRAW-BUFFER13-NV", (GLenum) GL_DRAW_BUFFER13_NV, "GL_DRAW_BUFFER13_NV");
#endif
#if defined(GL_DRAW_BUFFER14_NV)
defconsti(env, "GL-DRAW-BUFFER14-NV", (GLenum) GL_DRAW_BUFFER14_NV, "GL_DRAW_BUFFER14_NV");
#endif
#if defined(GL_DRAW_BUFFER15_NV)
defconsti(env, "GL-DRAW-BUFFER15-NV", (GLenum) GL_DRAW_BUFFER15_NV, "GL_DRAW_BUFFER15_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT0_NV)
defconsti(env, "GL-COLOR-ATTACHMENT0-NV", (GLenum) GL_COLOR_ATTACHMENT0_NV, "GL_COLOR_ATTACHMENT0_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT1_NV)
defconsti(env, "GL-COLOR-ATTACHMENT1-NV", (GLenum) GL_COLOR_ATTACHMENT1_NV, "GL_COLOR_ATTACHMENT1_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT2_NV)
defconsti(env, "GL-COLOR-ATTACHMENT2-NV", (GLenum) GL_COLOR_ATTACHMENT2_NV, "GL_COLOR_ATTACHMENT2_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT3_NV)
defconsti(env, "GL-COLOR-ATTACHMENT3-NV", (GLenum) GL_COLOR_ATTACHMENT3_NV, "GL_COLOR_ATTACHMENT3_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT4_NV)
defconsti(env, "GL-COLOR-ATTACHMENT4-NV", (GLenum) GL_COLOR_ATTACHMENT4_NV, "GL_COLOR_ATTACHMENT4_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT5_NV)
defconsti(env, "GL-COLOR-ATTACHMENT5-NV", (GLenum) GL_COLOR_ATTACHMENT5_NV, "GL_COLOR_ATTACHMENT5_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT6_NV)
defconsti(env, "GL-COLOR-ATTACHMENT6-NV", (GLenum) GL_COLOR_ATTACHMENT6_NV, "GL_COLOR_ATTACHMENT6_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT7_NV)
defconsti(env, "GL-COLOR-ATTACHMENT7-NV", (GLenum) GL_COLOR_ATTACHMENT7_NV, "GL_COLOR_ATTACHMENT7_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT8_NV)
defconsti(env, "GL-COLOR-ATTACHMENT8-NV", (GLenum) GL_COLOR_ATTACHMENT8_NV, "GL_COLOR_ATTACHMENT8_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT9_NV)
defconsti(env, "GL-COLOR-ATTACHMENT9-NV", (GLenum) GL_COLOR_ATTACHMENT9_NV, "GL_COLOR_ATTACHMENT9_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT10_NV)
defconsti(env, "GL-COLOR-ATTACHMENT10-NV", (GLenum) GL_COLOR_ATTACHMENT10_NV, "GL_COLOR_ATTACHMENT10_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT11_NV)
defconsti(env, "GL-COLOR-ATTACHMENT11-NV", (GLenum) GL_COLOR_ATTACHMENT11_NV, "GL_COLOR_ATTACHMENT11_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT12_NV)
defconsti(env, "GL-COLOR-ATTACHMENT12-NV", (GLenum) GL_COLOR_ATTACHMENT12_NV, "GL_COLOR_ATTACHMENT12_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT13_NV)
defconsti(env, "GL-COLOR-ATTACHMENT13-NV", (GLenum) GL_COLOR_ATTACHMENT13_NV, "GL_COLOR_ATTACHMENT13_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT14_NV)
defconsti(env, "GL-COLOR-ATTACHMENT14-NV", (GLenum) GL_COLOR_ATTACHMENT14_NV, "GL_COLOR_ATTACHMENT14_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT15_NV)
defconsti(env, "GL-COLOR-ATTACHMENT15-NV", (GLenum) GL_COLOR_ATTACHMENT15_NV, "GL_COLOR_ATTACHMENT15_NV");
#endif
#if defined(GL_EVAL_2D_NV)
defconsti(env, "GL-EVAL-2D-NV", (GLenum) GL_EVAL_2D_NV, "GL_EVAL_2D_NV");
#endif
#if defined(GL_EVAL_TRIANGULAR_2D_NV)
defconsti(env, "GL-EVAL-TRIANGULAR-2D-NV", (GLenum) GL_EVAL_TRIANGULAR_2D_NV, "GL_EVAL_TRIANGULAR_2D_NV");
#endif
#if defined(GL_MAP_TESSELLATION_NV)
defconsti(env, "GL-MAP-TESSELLATION-NV", (GLenum) GL_MAP_TESSELLATION_NV, "GL_MAP_TESSELLATION_NV");
#endif
#if defined(GL_MAP_ATTRIB_U_ORDER_NV)
defconsti(env, "GL-MAP-ATTRIB-U-ORDER-NV", (GLenum) GL_MAP_ATTRIB_U_ORDER_NV, "GL_MAP_ATTRIB_U_ORDER_NV");
#endif
#if defined(GL_MAP_ATTRIB_V_ORDER_NV)
defconsti(env, "GL-MAP-ATTRIB-V-ORDER-NV", (GLenum) GL_MAP_ATTRIB_V_ORDER_NV, "GL_MAP_ATTRIB_V_ORDER_NV");
#endif
#if defined(GL_EVAL_FRACTIONAL_TESSELLATION_NV)
defconsti(env, "GL-EVAL-FRACTIONAL-TESSELLATION-NV", (GLenum) GL_EVAL_FRACTIONAL_TESSELLATION_NV, "GL_EVAL_FRACTIONAL_TESSELLATION_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB0_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB0-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB0_NV, "GL_EVAL_VERTEX_ATTRIB0_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB1_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB1-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB1_NV, "GL_EVAL_VERTEX_ATTRIB1_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB2_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB2-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB2_NV, "GL_EVAL_VERTEX_ATTRIB2_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB3_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB3-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB3_NV, "GL_EVAL_VERTEX_ATTRIB3_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB4_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB4-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB4_NV, "GL_EVAL_VERTEX_ATTRIB4_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB5_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB5-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB5_NV, "GL_EVAL_VERTEX_ATTRIB5_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB6_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB6-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB6_NV, "GL_EVAL_VERTEX_ATTRIB6_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB7_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB7-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB7_NV, "GL_EVAL_VERTEX_ATTRIB7_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB8_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB8-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB8_NV, "GL_EVAL_VERTEX_ATTRIB8_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB9_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB9-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB9_NV, "GL_EVAL_VERTEX_ATTRIB9_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB10_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB10-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB10_NV, "GL_EVAL_VERTEX_ATTRIB10_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB11_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB11-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB11_NV, "GL_EVAL_VERTEX_ATTRIB11_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB12_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB12-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB12_NV, "GL_EVAL_VERTEX_ATTRIB12_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB13_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB13-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB13_NV, "GL_EVAL_VERTEX_ATTRIB13_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB14_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB14-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB14_NV, "GL_EVAL_VERTEX_ATTRIB14_NV");
#endif
#if defined(GL_EVAL_VERTEX_ATTRIB15_NV)
defconsti(env, "GL-EVAL-VERTEX-ATTRIB15-NV", (GLenum) GL_EVAL_VERTEX_ATTRIB15_NV, "GL_EVAL_VERTEX_ATTRIB15_NV");
#endif
#if defined(GL_MAX_MAP_TESSELLATION_NV)
defconsti(env, "GL-MAX-MAP-TESSELLATION-NV", (GLenum) GL_MAX_MAP_TESSELLATION_NV, "GL_MAX_MAP_TESSELLATION_NV");
#endif
#if defined(GL_MAX_RATIONAL_EVAL_ORDER_NV)
defconsti(env, "GL-MAX-RATIONAL-EVAL-ORDER-NV", (GLenum) GL_MAX_RATIONAL_EVAL_ORDER_NV, "GL_MAX_RATIONAL_EVAL_ORDER_NV");
#endif
#if defined(GL_SAMPLE_POSITION_NV)
defconsti(env, "GL-SAMPLE-POSITION-NV", (GLenum) GL_SAMPLE_POSITION_NV, "GL_SAMPLE_POSITION_NV");
#endif
#if defined(GL_SAMPLE_MASK_NV)
defconsti(env, "GL-SAMPLE-MASK-NV", (GLenum) GL_SAMPLE_MASK_NV, "GL_SAMPLE_MASK_NV");
#endif
#if defined(GL_SAMPLE_MASK_VALUE_NV)
defconsti(env, "GL-SAMPLE-MASK-VALUE-NV", (GLenum) GL_SAMPLE_MASK_VALUE_NV, "GL_SAMPLE_MASK_VALUE_NV");
#endif
#if defined(GL_TEXTURE_BINDING_RENDERBUFFER_NV)
defconsti(env, "GL-TEXTURE-BINDING-RENDERBUFFER-NV", (GLenum) GL_TEXTURE_BINDING_RENDERBUFFER_NV, "GL_TEXTURE_BINDING_RENDERBUFFER_NV");
#endif
#if defined(GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV)
defconsti(env, "GL-TEXTURE-RENDERBUFFER-DATA-STORE-BINDING-NV", (GLenum) GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV, "GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV");
#endif
#if defined(GL_TEXTURE_RENDERBUFFER_NV)
defconsti(env, "GL-TEXTURE-RENDERBUFFER-NV", (GLenum) GL_TEXTURE_RENDERBUFFER_NV, "GL_TEXTURE_RENDERBUFFER_NV");
#endif
#if defined(GL_SAMPLER_RENDERBUFFER_NV)
defconsti(env, "GL-SAMPLER-RENDERBUFFER-NV", (GLenum) GL_SAMPLER_RENDERBUFFER_NV, "GL_SAMPLER_RENDERBUFFER_NV");
#endif
#if defined(GL_INT_SAMPLER_RENDERBUFFER_NV)
defconsti(env, "GL-INT-SAMPLER-RENDERBUFFER-NV", (GLenum) GL_INT_SAMPLER_RENDERBUFFER_NV, "GL_INT_SAMPLER_RENDERBUFFER_NV");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-RENDERBUFFER-NV", (GLenum) GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV, "GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV");
#endif
#if defined(GL_MAX_SAMPLE_MASK_WORDS_NV)
defconsti(env, "GL-MAX-SAMPLE-MASK-WORDS-NV", (GLenum) GL_MAX_SAMPLE_MASK_WORDS_NV, "GL_MAX_SAMPLE_MASK_WORDS_NV");
#endif
#if defined(GL_MAX_COLOR_ATTACHMENTS_NV)
defconsti(env, "GL-MAX-COLOR-ATTACHMENTS-NV", (GLenum) GL_MAX_COLOR_ATTACHMENTS_NV, "GL_MAX_COLOR_ATTACHMENTS_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT0_NV)
defconsti(env, "GL-COLOR-ATTACHMENT0-NV", (GLenum) GL_COLOR_ATTACHMENT0_NV, "GL_COLOR_ATTACHMENT0_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT1_NV)
defconsti(env, "GL-COLOR-ATTACHMENT1-NV", (GLenum) GL_COLOR_ATTACHMENT1_NV, "GL_COLOR_ATTACHMENT1_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT2_NV)
defconsti(env, "GL-COLOR-ATTACHMENT2-NV", (GLenum) GL_COLOR_ATTACHMENT2_NV, "GL_COLOR_ATTACHMENT2_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT3_NV)
defconsti(env, "GL-COLOR-ATTACHMENT3-NV", (GLenum) GL_COLOR_ATTACHMENT3_NV, "GL_COLOR_ATTACHMENT3_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT4_NV)
defconsti(env, "GL-COLOR-ATTACHMENT4-NV", (GLenum) GL_COLOR_ATTACHMENT4_NV, "GL_COLOR_ATTACHMENT4_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT5_NV)
defconsti(env, "GL-COLOR-ATTACHMENT5-NV", (GLenum) GL_COLOR_ATTACHMENT5_NV, "GL_COLOR_ATTACHMENT5_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT6_NV)
defconsti(env, "GL-COLOR-ATTACHMENT6-NV", (GLenum) GL_COLOR_ATTACHMENT6_NV, "GL_COLOR_ATTACHMENT6_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT7_NV)
defconsti(env, "GL-COLOR-ATTACHMENT7-NV", (GLenum) GL_COLOR_ATTACHMENT7_NV, "GL_COLOR_ATTACHMENT7_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT8_NV)
defconsti(env, "GL-COLOR-ATTACHMENT8-NV", (GLenum) GL_COLOR_ATTACHMENT8_NV, "GL_COLOR_ATTACHMENT8_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT9_NV)
defconsti(env, "GL-COLOR-ATTACHMENT9-NV", (GLenum) GL_COLOR_ATTACHMENT9_NV, "GL_COLOR_ATTACHMENT9_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT10_NV)
defconsti(env, "GL-COLOR-ATTACHMENT10-NV", (GLenum) GL_COLOR_ATTACHMENT10_NV, "GL_COLOR_ATTACHMENT10_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT11_NV)
defconsti(env, "GL-COLOR-ATTACHMENT11-NV", (GLenum) GL_COLOR_ATTACHMENT11_NV, "GL_COLOR_ATTACHMENT11_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT12_NV)
defconsti(env, "GL-COLOR-ATTACHMENT12-NV", (GLenum) GL_COLOR_ATTACHMENT12_NV, "GL_COLOR_ATTACHMENT12_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT13_NV)
defconsti(env, "GL-COLOR-ATTACHMENT13-NV", (GLenum) GL_COLOR_ATTACHMENT13_NV, "GL_COLOR_ATTACHMENT13_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT14_NV)
defconsti(env, "GL-COLOR-ATTACHMENT14-NV", (GLenum) GL_COLOR_ATTACHMENT14_NV, "GL_COLOR_ATTACHMENT14_NV");
#endif
#if defined(GL_COLOR_ATTACHMENT15_NV)
defconsti(env, "GL-COLOR-ATTACHMENT15-NV", (GLenum) GL_COLOR_ATTACHMENT15_NV, "GL_COLOR_ATTACHMENT15_NV");
#endif
#if defined(GL_ALL_COMPLETED_NV)
defconsti(env, "GL-ALL-COMPLETED-NV", (GLenum) GL_ALL_COMPLETED_NV, "GL_ALL_COMPLETED_NV");
#endif
#if defined(GL_FENCE_STATUS_NV)
defconsti(env, "GL-FENCE-STATUS-NV", (GLenum) GL_FENCE_STATUS_NV, "GL_FENCE_STATUS_NV");
#endif
#if defined(GL_FENCE_CONDITION_NV)
defconsti(env, "GL-FENCE-CONDITION-NV", (GLenum) GL_FENCE_CONDITION_NV, "GL_FENCE_CONDITION_NV");
#endif
#if defined(GL_FILL_RECTANGLE_NV)
defconsti(env, "GL-FILL-RECTANGLE-NV", (GLenum) GL_FILL_RECTANGLE_NV, "GL_FILL_RECTANGLE_NV");
#endif
#if defined(GL_FLOAT_R_NV)
defconsti(env, "GL-FLOAT-R-NV", (GLenum) GL_FLOAT_R_NV, "GL_FLOAT_R_NV");
#endif
#if defined(GL_FLOAT_RG_NV)
defconsti(env, "GL-FLOAT-RG-NV", (GLenum) GL_FLOAT_RG_NV, "GL_FLOAT_RG_NV");
#endif
#if defined(GL_FLOAT_RGB_NV)
defconsti(env, "GL-FLOAT-RGB-NV", (GLenum) GL_FLOAT_RGB_NV, "GL_FLOAT_RGB_NV");
#endif
#if defined(GL_FLOAT_RGBA_NV)
defconsti(env, "GL-FLOAT-RGBA-NV", (GLenum) GL_FLOAT_RGBA_NV, "GL_FLOAT_RGBA_NV");
#endif
#if defined(GL_FLOAT_R16_NV)
defconsti(env, "GL-FLOAT-R16-NV", (GLenum) GL_FLOAT_R16_NV, "GL_FLOAT_R16_NV");
#endif
#if defined(GL_FLOAT_R32_NV)
defconsti(env, "GL-FLOAT-R32-NV", (GLenum) GL_FLOAT_R32_NV, "GL_FLOAT_R32_NV");
#endif
#if defined(GL_FLOAT_RG16_NV)
defconsti(env, "GL-FLOAT-RG16-NV", (GLenum) GL_FLOAT_RG16_NV, "GL_FLOAT_RG16_NV");
#endif
#if defined(GL_FLOAT_RG32_NV)
defconsti(env, "GL-FLOAT-RG32-NV", (GLenum) GL_FLOAT_RG32_NV, "GL_FLOAT_RG32_NV");
#endif
#if defined(GL_FLOAT_RGB16_NV)
defconsti(env, "GL-FLOAT-RGB16-NV", (GLenum) GL_FLOAT_RGB16_NV, "GL_FLOAT_RGB16_NV");
#endif
#if defined(GL_FLOAT_RGB32_NV)
defconsti(env, "GL-FLOAT-RGB32-NV", (GLenum) GL_FLOAT_RGB32_NV, "GL_FLOAT_RGB32_NV");
#endif
#if defined(GL_FLOAT_RGBA16_NV)
defconsti(env, "GL-FLOAT-RGBA16-NV", (GLenum) GL_FLOAT_RGBA16_NV, "GL_FLOAT_RGBA16_NV");
#endif
#if defined(GL_FLOAT_RGBA32_NV)
defconsti(env, "GL-FLOAT-RGBA32-NV", (GLenum) GL_FLOAT_RGBA32_NV, "GL_FLOAT_RGBA32_NV");
#endif
#if defined(GL_TEXTURE_FLOAT_COMPONENTS_NV)
defconsti(env, "GL-TEXTURE-FLOAT-COMPONENTS-NV", (GLenum) GL_TEXTURE_FLOAT_COMPONENTS_NV, "GL_TEXTURE_FLOAT_COMPONENTS_NV");
#endif
#if defined(GL_FLOAT_CLEAR_COLOR_VALUE_NV)
defconsti(env, "GL-FLOAT-CLEAR-COLOR-VALUE-NV", (GLenum) GL_FLOAT_CLEAR_COLOR_VALUE_NV, "GL_FLOAT_CLEAR_COLOR_VALUE_NV");
#endif
#if defined(GL_FLOAT_RGBA_MODE_NV)
defconsti(env, "GL-FLOAT-RGBA-MODE-NV", (GLenum) GL_FLOAT_RGBA_MODE_NV, "GL_FLOAT_RGBA_MODE_NV");
#endif
#if defined(GL_FOG_DISTANCE_MODE_NV)
defconsti(env, "GL-FOG-DISTANCE-MODE-NV", (GLenum) GL_FOG_DISTANCE_MODE_NV, "GL_FOG_DISTANCE_MODE_NV");
#endif
#if defined(GL_EYE_RADIAL_NV)
defconsti(env, "GL-EYE-RADIAL-NV", (GLenum) GL_EYE_RADIAL_NV, "GL_EYE_RADIAL_NV");
#endif
#if defined(GL_EYE_PLANE_ABSOLUTE_NV)
defconsti(env, "GL-EYE-PLANE-ABSOLUTE-NV", (GLenum) GL_EYE_PLANE_ABSOLUTE_NV, "GL_EYE_PLANE_ABSOLUTE_NV");
#endif
#if defined(GL_EYE_PLANE)
defconsti(env, "GL-EYE-PLANE", (GLenum) GL_EYE_PLANE, "GL_EYE_PLANE");
#endif
#if defined(GL_FRAGMENT_COVERAGE_TO_COLOR_NV)
defconsti(env, "GL-FRAGMENT-COVERAGE-TO-COLOR-NV", (GLenum) GL_FRAGMENT_COVERAGE_TO_COLOR_NV, "GL_FRAGMENT_COVERAGE_TO_COLOR_NV");
#endif
#if defined(GL_FRAGMENT_COVERAGE_COLOR_NV)
defconsti(env, "GL-FRAGMENT-COVERAGE-COLOR-NV", (GLenum) GL_FRAGMENT_COVERAGE_COLOR_NV, "GL_FRAGMENT_COVERAGE_COLOR_NV");
#endif
#if defined(GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV)
defconsti(env, "GL-MAX-FRAGMENT-PROGRAM-LOCAL-PARAMETERS-NV", (GLenum) GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV, "GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV");
#endif
#if defined(GL_FRAGMENT_PROGRAM_NV)
defconsti(env, "GL-FRAGMENT-PROGRAM-NV", (GLenum) GL_FRAGMENT_PROGRAM_NV, "GL_FRAGMENT_PROGRAM_NV");
#endif
#if defined(GL_MAX_TEXTURE_COORDS_NV)
defconsti(env, "GL-MAX-TEXTURE-COORDS-NV", (GLenum) GL_MAX_TEXTURE_COORDS_NV, "GL_MAX_TEXTURE_COORDS_NV");
#endif
#if defined(GL_MAX_TEXTURE_IMAGE_UNITS_NV)
defconsti(env, "GL-MAX-TEXTURE-IMAGE-UNITS-NV", (GLenum) GL_MAX_TEXTURE_IMAGE_UNITS_NV, "GL_MAX_TEXTURE_IMAGE_UNITS_NV");
#endif
#if defined(GL_FRAGMENT_PROGRAM_BINDING_NV)
defconsti(env, "GL-FRAGMENT-PROGRAM-BINDING-NV", (GLenum) GL_FRAGMENT_PROGRAM_BINDING_NV, "GL_FRAGMENT_PROGRAM_BINDING_NV");
#endif
#if defined(GL_PROGRAM_ERROR_STRING_NV)
defconsti(env, "GL-PROGRAM-ERROR-STRING-NV", (GLenum) GL_PROGRAM_ERROR_STRING_NV, "GL_PROGRAM_ERROR_STRING_NV");
#endif
#if defined(GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV)
defconsti(env, "GL-MAX-PROGRAM-EXEC-INSTRUCTIONS-NV", (GLenum) GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV, "GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV");
#endif
#if defined(GL_MAX_PROGRAM_CALL_DEPTH_NV)
defconsti(env, "GL-MAX-PROGRAM-CALL-DEPTH-NV", (GLenum) GL_MAX_PROGRAM_CALL_DEPTH_NV, "GL_MAX_PROGRAM_CALL_DEPTH_NV");
#endif
#if defined(GL_MAX_PROGRAM_IF_DEPTH_NV)
defconsti(env, "GL-MAX-PROGRAM-IF-DEPTH-NV", (GLenum) GL_MAX_PROGRAM_IF_DEPTH_NV, "GL_MAX_PROGRAM_IF_DEPTH_NV");
#endif
#if defined(GL_MAX_PROGRAM_LOOP_DEPTH_NV)
defconsti(env, "GL-MAX-PROGRAM-LOOP-DEPTH-NV", (GLenum) GL_MAX_PROGRAM_LOOP_DEPTH_NV, "GL_MAX_PROGRAM_LOOP_DEPTH_NV");
#endif
#if defined(GL_MAX_PROGRAM_LOOP_COUNT_NV)
defconsti(env, "GL-MAX-PROGRAM-LOOP-COUNT-NV", (GLenum) GL_MAX_PROGRAM_LOOP_COUNT_NV, "GL_MAX_PROGRAM_LOOP_COUNT_NV");
#endif
#if defined(GL_READ_FRAMEBUFFER_NV)
defconsti(env, "GL-READ-FRAMEBUFFER-NV", (GLenum) GL_READ_FRAMEBUFFER_NV, "GL_READ_FRAMEBUFFER_NV");
#endif
#if defined(GL_DRAW_FRAMEBUFFER_NV)
defconsti(env, "GL-DRAW-FRAMEBUFFER-NV", (GLenum) GL_DRAW_FRAMEBUFFER_NV, "GL_DRAW_FRAMEBUFFER_NV");
#endif
#if defined(GL_DRAW_FRAMEBUFFER_BINDING_NV)
defconsti(env, "GL-DRAW-FRAMEBUFFER-BINDING-NV", (GLenum) GL_DRAW_FRAMEBUFFER_BINDING_NV, "GL_DRAW_FRAMEBUFFER_BINDING_NV");
#endif
#if defined(GL_READ_FRAMEBUFFER_BINDING_NV)
defconsti(env, "GL-READ-FRAMEBUFFER-BINDING-NV", (GLenum) GL_READ_FRAMEBUFFER_BINDING_NV, "GL_READ_FRAMEBUFFER_BINDING_NV");
#endif
#if defined(GL_RASTER_MULTISAMPLE_EXT)
defconsti(env, "GL-RASTER-MULTISAMPLE-EXT", (GLenum) GL_RASTER_MULTISAMPLE_EXT, "GL_RASTER_MULTISAMPLE_EXT");
#endif
#if defined(GL_COVERAGE_MODULATION_TABLE_NV)
defconsti(env, "GL-COVERAGE-MODULATION-TABLE-NV", (GLenum) GL_COVERAGE_MODULATION_TABLE_NV, "GL_COVERAGE_MODULATION_TABLE_NV");
#endif
#if defined(GL_RASTER_SAMPLES_EXT)
defconsti(env, "GL-RASTER-SAMPLES-EXT", (GLenum) GL_RASTER_SAMPLES_EXT, "GL_RASTER_SAMPLES_EXT");
#endif
#if defined(GL_MAX_RASTER_SAMPLES_EXT)
defconsti(env, "GL-MAX-RASTER-SAMPLES-EXT", (GLenum) GL_MAX_RASTER_SAMPLES_EXT, "GL_MAX_RASTER_SAMPLES_EXT");
#endif
#if defined(GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT)
defconsti(env, "GL-RASTER-FIXED-SAMPLE-LOCATIONS-EXT", (GLenum) GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT, "GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT");
#endif
#if defined(GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT)
defconsti(env, "GL-MULTISAMPLE-RASTERIZATION-ALLOWED-EXT", (GLenum) GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT, "GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT");
#endif
#if defined(GL_EFFECTIVE_RASTER_SAMPLES_EXT)
defconsti(env, "GL-EFFECTIVE-RASTER-SAMPLES-EXT", (GLenum) GL_EFFECTIVE_RASTER_SAMPLES_EXT, "GL_EFFECTIVE_RASTER_SAMPLES_EXT");
#endif
#if defined(GL_COLOR_SAMPLES_NV)
defconsti(env, "GL-COLOR-SAMPLES-NV", (GLenum) GL_COLOR_SAMPLES_NV, "GL_COLOR_SAMPLES_NV");
#endif
#if defined(GL_DEPTH_SAMPLES_NV)
defconsti(env, "GL-DEPTH-SAMPLES-NV", (GLenum) GL_DEPTH_SAMPLES_NV, "GL_DEPTH_SAMPLES_NV");
#endif
#if defined(GL_STENCIL_SAMPLES_NV)
defconsti(env, "GL-STENCIL-SAMPLES-NV", (GLenum) GL_STENCIL_SAMPLES_NV, "GL_STENCIL_SAMPLES_NV");
#endif
#if defined(GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV)
defconsti(env, "GL-MIXED-DEPTH-SAMPLES-SUPPORTED-NV", (GLenum) GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV, "GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV");
#endif
#if defined(GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV)
defconsti(env, "GL-MIXED-STENCIL-SAMPLES-SUPPORTED-NV", (GLenum) GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV, "GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV");
#endif
#if defined(GL_COVERAGE_MODULATION_NV)
defconsti(env, "GL-COVERAGE-MODULATION-NV", (GLenum) GL_COVERAGE_MODULATION_NV, "GL_COVERAGE_MODULATION_NV");
#endif
#if defined(GL_COVERAGE_MODULATION_TABLE_SIZE_NV)
defconsti(env, "GL-COVERAGE-MODULATION-TABLE-SIZE-NV", (GLenum) GL_COVERAGE_MODULATION_TABLE_SIZE_NV, "GL_COVERAGE_MODULATION_TABLE_SIZE_NV");
#endif
#if defined(GL_RENDERBUFFER_SAMPLES_NV)
defconsti(env, "GL-RENDERBUFFER-SAMPLES-NV", (GLenum) GL_RENDERBUFFER_SAMPLES_NV, "GL_RENDERBUFFER_SAMPLES_NV");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MULTISAMPLE-NV", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV, "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV");
#endif
#if defined(GL_MAX_SAMPLES_NV)
defconsti(env, "GL-MAX-SAMPLES-NV", (GLenum) GL_MAX_SAMPLES_NV, "GL_MAX_SAMPLES_NV");
#endif
#if defined(GL_RENDERBUFFER_COVERAGE_SAMPLES_NV)
defconsti(env, "GL-RENDERBUFFER-COVERAGE-SAMPLES-NV", (GLenum) GL_RENDERBUFFER_COVERAGE_SAMPLES_NV, "GL_RENDERBUFFER_COVERAGE_SAMPLES_NV");
#endif
#if defined(GL_RENDERBUFFER_COLOR_SAMPLES_NV)
defconsti(env, "GL-RENDERBUFFER-COLOR-SAMPLES-NV", (GLenum) GL_RENDERBUFFER_COLOR_SAMPLES_NV, "GL_RENDERBUFFER_COLOR_SAMPLES_NV");
#endif
#if defined(GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV)
defconsti(env, "GL-MAX-MULTISAMPLE-COVERAGE-MODES-NV", (GLenum) GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV, "GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV");
#endif
#if defined(GL_MULTISAMPLE_COVERAGE_MODES_NV)
defconsti(env, "GL-MULTISAMPLE-COVERAGE-MODES-NV", (GLenum) GL_MULTISAMPLE_COVERAGE_MODES_NV, "GL_MULTISAMPLE_COVERAGE_MODES_NV");
#endif
#if defined(GL_LINES_ADJACENCY_EXT)
defconsti(env, "GL-LINES-ADJACENCY-EXT", (GLenum) GL_LINES_ADJACENCY_EXT, "GL_LINES_ADJACENCY_EXT");
#endif
#if defined(GL_LINE_STRIP_ADJACENCY_EXT)
defconsti(env, "GL-LINE-STRIP-ADJACENCY-EXT", (GLenum) GL_LINE_STRIP_ADJACENCY_EXT, "GL_LINE_STRIP_ADJACENCY_EXT");
#endif
#if defined(GL_TRIANGLES_ADJACENCY_EXT)
defconsti(env, "GL-TRIANGLES-ADJACENCY-EXT", (GLenum) GL_TRIANGLES_ADJACENCY_EXT, "GL_TRIANGLES_ADJACENCY_EXT");
#endif
#if defined(GL_TRIANGLE_STRIP_ADJACENCY_EXT)
defconsti(env, "GL-TRIANGLE-STRIP-ADJACENCY-EXT", (GLenum) GL_TRIANGLE_STRIP_ADJACENCY_EXT, "GL_TRIANGLE_STRIP_ADJACENCY_EXT");
#endif
#if defined(GL_GEOMETRY_PROGRAM_NV)
defconsti(env, "GL-GEOMETRY-PROGRAM-NV", (GLenum) GL_GEOMETRY_PROGRAM_NV, "GL_GEOMETRY_PROGRAM_NV");
#endif
#if defined(GL_MAX_PROGRAM_OUTPUT_VERTICES_NV)
defconsti(env, "GL-MAX-PROGRAM-OUTPUT-VERTICES-NV", (GLenum) GL_MAX_PROGRAM_OUTPUT_VERTICES_NV, "GL_MAX_PROGRAM_OUTPUT_VERTICES_NV");
#endif
#if defined(GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV)
defconsti(env, "GL-MAX-PROGRAM-TOTAL-OUTPUT-COMPONENTS-NV", (GLenum) GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV, "GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV");
#endif
#if defined(GL_GEOMETRY_VERTICES_OUT_EXT)
defconsti(env, "GL-GEOMETRY-VERTICES-OUT-EXT", (GLenum) GL_GEOMETRY_VERTICES_OUT_EXT, "GL_GEOMETRY_VERTICES_OUT_EXT");
#endif
#if defined(GL_GEOMETRY_INPUT_TYPE_EXT)
defconsti(env, "GL-GEOMETRY-INPUT-TYPE-EXT", (GLenum) GL_GEOMETRY_INPUT_TYPE_EXT, "GL_GEOMETRY_INPUT_TYPE_EXT");
#endif
#if defined(GL_GEOMETRY_OUTPUT_TYPE_EXT)
defconsti(env, "GL-GEOMETRY-OUTPUT-TYPE-EXT", (GLenum) GL_GEOMETRY_OUTPUT_TYPE_EXT, "GL_GEOMETRY_OUTPUT_TYPE_EXT");
#endif
#if defined(GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT)
defconsti(env, "GL-MAX-GEOMETRY-TEXTURE-IMAGE-UNITS-EXT", (GLenum) GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT, "GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-LAYERED-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT, "GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-LAYER-TARGETS-EXT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT, "GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-LAYER-COUNT-EXT", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT, "GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-LAYER-EXT", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT");
#endif
#if defined(GL_PROGRAM_POINT_SIZE_EXT)
defconsti(env, "GL-PROGRAM-POINT-SIZE-EXT", (GLenum) GL_PROGRAM_POINT_SIZE_EXT, "GL_PROGRAM_POINT_SIZE_EXT");
#endif
#if defined(GL_MIN_PROGRAM_TEXEL_OFFSET_NV)
defconsti(env, "GL-MIN-PROGRAM-TEXEL-OFFSET-NV", (GLenum) GL_MIN_PROGRAM_TEXEL_OFFSET_NV, "GL_MIN_PROGRAM_TEXEL_OFFSET_NV");
#endif
#if defined(GL_MAX_PROGRAM_TEXEL_OFFSET_NV)
defconsti(env, "GL-MAX-PROGRAM-TEXEL-OFFSET-NV", (GLenum) GL_MAX_PROGRAM_TEXEL_OFFSET_NV, "GL_MAX_PROGRAM_TEXEL_OFFSET_NV");
#endif
#if defined(GL_PROGRAM_ATTRIB_COMPONENTS_NV)
defconsti(env, "GL-PROGRAM-ATTRIB-COMPONENTS-NV", (GLenum) GL_PROGRAM_ATTRIB_COMPONENTS_NV, "GL_PROGRAM_ATTRIB_COMPONENTS_NV");
#endif
#if defined(GL_PROGRAM_RESULT_COMPONENTS_NV)
defconsti(env, "GL-PROGRAM-RESULT-COMPONENTS-NV", (GLenum) GL_PROGRAM_RESULT_COMPONENTS_NV, "GL_PROGRAM_RESULT_COMPONENTS_NV");
#endif
#if defined(GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV)
defconsti(env, "GL-MAX-PROGRAM-ATTRIB-COMPONENTS-NV", (GLenum) GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV, "GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV");
#endif
#if defined(GL_MAX_PROGRAM_RESULT_COMPONENTS_NV)
defconsti(env, "GL-MAX-PROGRAM-RESULT-COMPONENTS-NV", (GLenum) GL_MAX_PROGRAM_RESULT_COMPONENTS_NV, "GL_MAX_PROGRAM_RESULT_COMPONENTS_NV");
#endif
#if defined(GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV)
defconsti(env, "GL-MAX-PROGRAM-GENERIC-ATTRIBS-NV", (GLenum) GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV, "GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV");
#endif
#if defined(GL_MAX_PROGRAM_GENERIC_RESULTS_NV)
defconsti(env, "GL-MAX-PROGRAM-GENERIC-RESULTS-NV", (GLenum) GL_MAX_PROGRAM_GENERIC_RESULTS_NV, "GL_MAX_PROGRAM_GENERIC_RESULTS_NV");
#endif
#if defined(GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV)
defconsti(env, "GL-MAX-GEOMETRY-PROGRAM-INVOCATIONS-NV", (GLenum) GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV, "GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV");
#endif
#if defined(GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV)
defconsti(env, "GL-MIN-FRAGMENT-INTERPOLATION-OFFSET-NV", (GLenum) GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV, "GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV");
#endif
#if defined(GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV)
defconsti(env, "GL-MAX-FRAGMENT-INTERPOLATION-OFFSET-NV", (GLenum) GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV, "GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV");
#endif
#if defined(GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV)
defconsti(env, "GL-FRAGMENT-PROGRAM-INTERPOLATION-OFFSET-BITS-NV", (GLenum) GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV, "GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV");
#endif
#if defined(GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV)
defconsti(env, "GL-MIN-PROGRAM-TEXTURE-GATHER-OFFSET-NV", (GLenum) GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV, "GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV");
#endif
#if defined(GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV)
defconsti(env, "GL-MAX-PROGRAM-TEXTURE-GATHER-OFFSET-NV", (GLenum) GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV, "GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV");
#endif
#if defined(GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV)
defconsti(env, "GL-MAX-PROGRAM-SUBROUTINE-PARAMETERS-NV", (GLenum) GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV, "GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV");
#endif
#if defined(GL_MAX_PROGRAM_SUBROUTINE_NUM_NV)
defconsti(env, "GL-MAX-PROGRAM-SUBROUTINE-NUM-NV", (GLenum) GL_MAX_PROGRAM_SUBROUTINE_NUM_NV, "GL_MAX_PROGRAM_SUBROUTINE_NUM_NV");
#endif
#if defined(GL_INT64_NV)
defconsti(env, "GL-INT64-NV", (GLenum) GL_INT64_NV, "GL_INT64_NV");
#endif
#if defined(GL_UNSIGNED_INT64_NV)
defconsti(env, "GL-UNSIGNED-INT64-NV", (GLenum) GL_UNSIGNED_INT64_NV, "GL_UNSIGNED_INT64_NV");
#endif
#if defined(GL_INT8_NV)
defconsti(env, "GL-INT8-NV", (GLenum) GL_INT8_NV, "GL_INT8_NV");
#endif
#if defined(GL_INT8_VEC2_NV)
defconsti(env, "GL-INT8-VEC2-NV", (GLenum) GL_INT8_VEC2_NV, "GL_INT8_VEC2_NV");
#endif
#if defined(GL_INT8_VEC3_NV)
defconsti(env, "GL-INT8-VEC3-NV", (GLenum) GL_INT8_VEC3_NV, "GL_INT8_VEC3_NV");
#endif
#if defined(GL_INT8_VEC4_NV)
defconsti(env, "GL-INT8-VEC4-NV", (GLenum) GL_INT8_VEC4_NV, "GL_INT8_VEC4_NV");
#endif
#if defined(GL_INT16_NV)
defconsti(env, "GL-INT16-NV", (GLenum) GL_INT16_NV, "GL_INT16_NV");
#endif
#if defined(GL_INT16_VEC2_NV)
defconsti(env, "GL-INT16-VEC2-NV", (GLenum) GL_INT16_VEC2_NV, "GL_INT16_VEC2_NV");
#endif
#if defined(GL_INT16_VEC3_NV)
defconsti(env, "GL-INT16-VEC3-NV", (GLenum) GL_INT16_VEC3_NV, "GL_INT16_VEC3_NV");
#endif
#if defined(GL_INT16_VEC4_NV)
defconsti(env, "GL-INT16-VEC4-NV", (GLenum) GL_INT16_VEC4_NV, "GL_INT16_VEC4_NV");
#endif
#if defined(GL_INT64_VEC2_NV)
defconsti(env, "GL-INT64-VEC2-NV", (GLenum) GL_INT64_VEC2_NV, "GL_INT64_VEC2_NV");
#endif
#if defined(GL_INT64_VEC3_NV)
defconsti(env, "GL-INT64-VEC3-NV", (GLenum) GL_INT64_VEC3_NV, "GL_INT64_VEC3_NV");
#endif
#if defined(GL_INT64_VEC4_NV)
defconsti(env, "GL-INT64-VEC4-NV", (GLenum) GL_INT64_VEC4_NV, "GL_INT64_VEC4_NV");
#endif
#if defined(GL_UNSIGNED_INT8_NV)
defconsti(env, "GL-UNSIGNED-INT8-NV", (GLenum) GL_UNSIGNED_INT8_NV, "GL_UNSIGNED_INT8_NV");
#endif
#if defined(GL_UNSIGNED_INT8_VEC2_NV)
defconsti(env, "GL-UNSIGNED-INT8-VEC2-NV", (GLenum) GL_UNSIGNED_INT8_VEC2_NV, "GL_UNSIGNED_INT8_VEC2_NV");
#endif
#if defined(GL_UNSIGNED_INT8_VEC3_NV)
defconsti(env, "GL-UNSIGNED-INT8-VEC3-NV", (GLenum) GL_UNSIGNED_INT8_VEC3_NV, "GL_UNSIGNED_INT8_VEC3_NV");
#endif
#if defined(GL_UNSIGNED_INT8_VEC4_NV)
defconsti(env, "GL-UNSIGNED-INT8-VEC4-NV", (GLenum) GL_UNSIGNED_INT8_VEC4_NV, "GL_UNSIGNED_INT8_VEC4_NV");
#endif
#if defined(GL_UNSIGNED_INT16_NV)
defconsti(env, "GL-UNSIGNED-INT16-NV", (GLenum) GL_UNSIGNED_INT16_NV, "GL_UNSIGNED_INT16_NV");
#endif
#if defined(GL_UNSIGNED_INT16_VEC2_NV)
defconsti(env, "GL-UNSIGNED-INT16-VEC2-NV", (GLenum) GL_UNSIGNED_INT16_VEC2_NV, "GL_UNSIGNED_INT16_VEC2_NV");
#endif
#if defined(GL_UNSIGNED_INT16_VEC3_NV)
defconsti(env, "GL-UNSIGNED-INT16-VEC3-NV", (GLenum) GL_UNSIGNED_INT16_VEC3_NV, "GL_UNSIGNED_INT16_VEC3_NV");
#endif
#if defined(GL_UNSIGNED_INT16_VEC4_NV)
defconsti(env, "GL-UNSIGNED-INT16-VEC4-NV", (GLenum) GL_UNSIGNED_INT16_VEC4_NV, "GL_UNSIGNED_INT16_VEC4_NV");
#endif
#if defined(GL_UNSIGNED_INT64_VEC2_NV)
defconsti(env, "GL-UNSIGNED-INT64-VEC2-NV", (GLenum) GL_UNSIGNED_INT64_VEC2_NV, "GL_UNSIGNED_INT64_VEC2_NV");
#endif
#if defined(GL_UNSIGNED_INT64_VEC3_NV)
defconsti(env, "GL-UNSIGNED-INT64-VEC3-NV", (GLenum) GL_UNSIGNED_INT64_VEC3_NV, "GL_UNSIGNED_INT64_VEC3_NV");
#endif
#if defined(GL_UNSIGNED_INT64_VEC4_NV)
defconsti(env, "GL-UNSIGNED-INT64-VEC4-NV", (GLenum) GL_UNSIGNED_INT64_VEC4_NV, "GL_UNSIGNED_INT64_VEC4_NV");
#endif
#if defined(GL_FLOAT16_NV)
defconsti(env, "GL-FLOAT16-NV", (GLenum) GL_FLOAT16_NV, "GL_FLOAT16_NV");
#endif
#if defined(GL_FLOAT16_VEC2_NV)
defconsti(env, "GL-FLOAT16-VEC2-NV", (GLenum) GL_FLOAT16_VEC2_NV, "GL_FLOAT16_VEC2_NV");
#endif
#if defined(GL_FLOAT16_VEC3_NV)
defconsti(env, "GL-FLOAT16-VEC3-NV", (GLenum) GL_FLOAT16_VEC3_NV, "GL_FLOAT16_VEC3_NV");
#endif
#if defined(GL_FLOAT16_VEC4_NV)
defconsti(env, "GL-FLOAT16-VEC4-NV", (GLenum) GL_FLOAT16_VEC4_NV, "GL_FLOAT16_VEC4_NV");
#endif
#if defined(GL_PATCHES)
defconsti(env, "GL-PATCHES", (GLenum) GL_PATCHES, "GL_PATCHES");
#endif
#if defined(GL_HALF_FLOAT_NV)
defconsti(env, "GL-HALF-FLOAT-NV", (GLenum) GL_HALF_FLOAT_NV, "GL_HALF_FLOAT_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-DIVISOR-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV, "GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV");
#endif
#if defined(GL_RENDERBUFFER)
defconsti(env, "GL-RENDERBUFFER", (GLenum) GL_RENDERBUFFER, "GL_RENDERBUFFER");
#endif
#if defined(GL_TEXTURE_2D_MULTISAMPLE)
defconsti(env, "GL-TEXTURE-2D-MULTISAMPLE", (GLenum) GL_TEXTURE_2D_MULTISAMPLE, "GL_TEXTURE_2D_MULTISAMPLE");
#endif
#if defined(GL_TEXTURE_2D_MULTISAMPLE_ARRAY)
defconsti(env, "GL-TEXTURE-2D-MULTISAMPLE-ARRAY", (GLenum) GL_TEXTURE_2D_MULTISAMPLE_ARRAY, "GL_TEXTURE_2D_MULTISAMPLE_ARRAY");
#endif
#if defined(GL_MULTISAMPLES_NV)
defconsti(env, "GL-MULTISAMPLES-NV", (GLenum) GL_MULTISAMPLES_NV, "GL_MULTISAMPLES_NV");
#endif
#if defined(GL_SUPERSAMPLE_SCALE_X_NV)
defconsti(env, "GL-SUPERSAMPLE-SCALE-X-NV", (GLenum) GL_SUPERSAMPLE_SCALE_X_NV, "GL_SUPERSAMPLE_SCALE_X_NV");
#endif
#if defined(GL_SUPERSAMPLE_SCALE_Y_NV)
defconsti(env, "GL-SUPERSAMPLE-SCALE-Y-NV", (GLenum) GL_SUPERSAMPLE_SCALE_Y_NV, "GL_SUPERSAMPLE_SCALE_Y_NV");
#endif
#if defined(GL_CONFORMANT_NV)
defconsti(env, "GL-CONFORMANT-NV", (GLenum) GL_CONFORMANT_NV, "GL_CONFORMANT_NV");
#endif
#if defined(GL_MAX_SHININESS_NV)
defconsti(env, "GL-MAX-SHININESS-NV", (GLenum) GL_MAX_SHININESS_NV, "GL_MAX_SHININESS_NV");
#endif
#if defined(GL_MAX_SPOT_EXPONENT_NV)
defconsti(env, "GL-MAX-SPOT-EXPONENT-NV", (GLenum) GL_MAX_SPOT_EXPONENT_NV, "GL_MAX_SPOT_EXPONENT_NV");
#endif
#if defined(GL_PER_GPU_STORAGE_BIT_NV)
defconsti(env, "GL-PER-GPU-STORAGE-BIT-NV", (GLenum) GL_PER_GPU_STORAGE_BIT_NV, "GL_PER_GPU_STORAGE_BIT_NV");
#endif
#if defined(GL_MULTICAST_GPUS_NV)
defconsti(env, "GL-MULTICAST-GPUS-NV", (GLenum) GL_MULTICAST_GPUS_NV, "GL_MULTICAST_GPUS_NV");
#endif
#if defined(GL_RENDER_GPU_MASK_NV)
defconsti(env, "GL-RENDER-GPU-MASK-NV", (GLenum) GL_RENDER_GPU_MASK_NV, "GL_RENDER_GPU_MASK_NV");
#endif
#if defined(GL_PER_GPU_STORAGE_NV)
defconsti(env, "GL-PER-GPU-STORAGE-NV", (GLenum) GL_PER_GPU_STORAGE_NV, "GL_PER_GPU_STORAGE_NV");
#endif
#if defined(GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV)
defconsti(env, "GL-MULTICAST-PROGRAMMABLE-SAMPLE-LOCATION-NV", (GLenum) GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV, "GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV");
#endif
#if defined(GL_UPLOAD_GPU_MASK_NVX)
defconsti(env, "GL-UPLOAD-GPU-MASK-NVX", (GLenum) GL_UPLOAD_GPU_MASK_NVX, "GL_UPLOAD_GPU_MASK_NVX");
#endif
#if defined(GL_ATTACHED_MEMORY_OBJECT_NV)
defconsti(env, "GL-ATTACHED-MEMORY-OBJECT-NV", (GLenum) GL_ATTACHED_MEMORY_OBJECT_NV, "GL_ATTACHED_MEMORY_OBJECT_NV");
#endif
#if defined(GL_ATTACHED_MEMORY_OFFSET_NV)
defconsti(env, "GL-ATTACHED-MEMORY-OFFSET-NV", (GLenum) GL_ATTACHED_MEMORY_OFFSET_NV, "GL_ATTACHED_MEMORY_OFFSET_NV");
#endif
#if defined(GL_MEMORY_ATTACHABLE_ALIGNMENT_NV)
defconsti(env, "GL-MEMORY-ATTACHABLE-ALIGNMENT-NV", (GLenum) GL_MEMORY_ATTACHABLE_ALIGNMENT_NV, "GL_MEMORY_ATTACHABLE_ALIGNMENT_NV");
#endif
#if defined(GL_MEMORY_ATTACHABLE_SIZE_NV)
defconsti(env, "GL-MEMORY-ATTACHABLE-SIZE-NV", (GLenum) GL_MEMORY_ATTACHABLE_SIZE_NV, "GL_MEMORY_ATTACHABLE_SIZE_NV");
#endif
#if defined(GL_MEMORY_ATTACHABLE_NV)
defconsti(env, "GL-MEMORY-ATTACHABLE-NV", (GLenum) GL_MEMORY_ATTACHABLE_NV, "GL_MEMORY_ATTACHABLE_NV");
#endif
#if defined(GL_DETACHED_MEMORY_INCARNATION_NV)
defconsti(env, "GL-DETACHED-MEMORY-INCARNATION-NV", (GLenum) GL_DETACHED_MEMORY_INCARNATION_NV, "GL_DETACHED_MEMORY_INCARNATION_NV");
#endif
#if defined(GL_DETACHED_TEXTURES_NV)
defconsti(env, "GL-DETACHED-TEXTURES-NV", (GLenum) GL_DETACHED_TEXTURES_NV, "GL_DETACHED_TEXTURES_NV");
#endif
#if defined(GL_DETACHED_BUFFERS_NV)
defconsti(env, "GL-DETACHED-BUFFERS-NV", (GLenum) GL_DETACHED_BUFFERS_NV, "GL_DETACHED_BUFFERS_NV");
#endif
#if defined(GL_MAX_DETACHED_TEXTURES_NV)
defconsti(env, "GL-MAX-DETACHED-TEXTURES-NV", (GLenum) GL_MAX_DETACHED_TEXTURES_NV, "GL_MAX_DETACHED_TEXTURES_NV");
#endif
#if defined(GL_MAX_DETACHED_BUFFERS_NV)
defconsti(env, "GL-MAX-DETACHED-BUFFERS-NV", (GLenum) GL_MAX_DETACHED_BUFFERS_NV, "GL_MAX_DETACHED_BUFFERS_NV");
#endif
#if defined(GL_MESH_SHADER_NV)
defconsti(env, "GL-MESH-SHADER-NV", (GLenum) GL_MESH_SHADER_NV, "GL_MESH_SHADER_NV");
#endif
#if defined(GL_TASK_SHADER_NV)
defconsti(env, "GL-TASK-SHADER-NV", (GLenum) GL_TASK_SHADER_NV, "GL_TASK_SHADER_NV");
#endif
#if defined(GL_MAX_MESH_UNIFORM_BLOCKS_NV)
defconsti(env, "GL-MAX-MESH-UNIFORM-BLOCKS-NV", (GLenum) GL_MAX_MESH_UNIFORM_BLOCKS_NV, "GL_MAX_MESH_UNIFORM_BLOCKS_NV");
#endif
#if defined(GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV)
defconsti(env, "GL-MAX-MESH-TEXTURE-IMAGE-UNITS-NV", (GLenum) GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV, "GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV");
#endif
#if defined(GL_MAX_MESH_IMAGE_UNIFORMS_NV)
defconsti(env, "GL-MAX-MESH-IMAGE-UNIFORMS-NV", (GLenum) GL_MAX_MESH_IMAGE_UNIFORMS_NV, "GL_MAX_MESH_IMAGE_UNIFORMS_NV");
#endif
#if defined(GL_MAX_MESH_UNIFORM_COMPONENTS_NV)
defconsti(env, "GL-MAX-MESH-UNIFORM-COMPONENTS-NV", (GLenum) GL_MAX_MESH_UNIFORM_COMPONENTS_NV, "GL_MAX_MESH_UNIFORM_COMPONENTS_NV");
#endif
#if defined(GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV)
defconsti(env, "GL-MAX-MESH-ATOMIC-COUNTER-BUFFERS-NV", (GLenum) GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV, "GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV");
#endif
#if defined(GL_MAX_MESH_ATOMIC_COUNTERS_NV)
defconsti(env, "GL-MAX-MESH-ATOMIC-COUNTERS-NV", (GLenum) GL_MAX_MESH_ATOMIC_COUNTERS_NV, "GL_MAX_MESH_ATOMIC_COUNTERS_NV");
#endif
#if defined(GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV)
defconsti(env, "GL-MAX-MESH-SHADER-STORAGE-BLOCKS-NV", (GLenum) GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV, "GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV");
#endif
#if defined(GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV)
defconsti(env, "GL-MAX-COMBINED-MESH-UNIFORM-COMPONENTS-NV", (GLenum) GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV, "GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV");
#endif
#if defined(GL_MAX_TASK_UNIFORM_BLOCKS_NV)
defconsti(env, "GL-MAX-TASK-UNIFORM-BLOCKS-NV", (GLenum) GL_MAX_TASK_UNIFORM_BLOCKS_NV, "GL_MAX_TASK_UNIFORM_BLOCKS_NV");
#endif
#if defined(GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV)
defconsti(env, "GL-MAX-TASK-TEXTURE-IMAGE-UNITS-NV", (GLenum) GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV, "GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV");
#endif
#if defined(GL_MAX_TASK_IMAGE_UNIFORMS_NV)
defconsti(env, "GL-MAX-TASK-IMAGE-UNIFORMS-NV", (GLenum) GL_MAX_TASK_IMAGE_UNIFORMS_NV, "GL_MAX_TASK_IMAGE_UNIFORMS_NV");
#endif
#if defined(GL_MAX_TASK_UNIFORM_COMPONENTS_NV)
defconsti(env, "GL-MAX-TASK-UNIFORM-COMPONENTS-NV", (GLenum) GL_MAX_TASK_UNIFORM_COMPONENTS_NV, "GL_MAX_TASK_UNIFORM_COMPONENTS_NV");
#endif
#if defined(GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV)
defconsti(env, "GL-MAX-TASK-ATOMIC-COUNTER-BUFFERS-NV", (GLenum) GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV, "GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV");
#endif
#if defined(GL_MAX_TASK_ATOMIC_COUNTERS_NV)
defconsti(env, "GL-MAX-TASK-ATOMIC-COUNTERS-NV", (GLenum) GL_MAX_TASK_ATOMIC_COUNTERS_NV, "GL_MAX_TASK_ATOMIC_COUNTERS_NV");
#endif
#if defined(GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV)
defconsti(env, "GL-MAX-TASK-SHADER-STORAGE-BLOCKS-NV", (GLenum) GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV, "GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV");
#endif
#if defined(GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV)
defconsti(env, "GL-MAX-COMBINED-TASK-UNIFORM-COMPONENTS-NV", (GLenum) GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV, "GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV");
#endif
#if defined(GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV)
defconsti(env, "GL-MAX-MESH-WORK-GROUP-INVOCATIONS-NV", (GLenum) GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV, "GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV");
#endif
#if defined(GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV)
defconsti(env, "GL-MAX-TASK-WORK-GROUP-INVOCATIONS-NV", (GLenum) GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV, "GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV");
#endif
#if defined(GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV)
defconsti(env, "GL-MAX-MESH-TOTAL-MEMORY-SIZE-NV", (GLenum) GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV, "GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV");
#endif
#if defined(GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV)
defconsti(env, "GL-MAX-TASK-TOTAL-MEMORY-SIZE-NV", (GLenum) GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV, "GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV");
#endif
#if defined(GL_MAX_MESH_OUTPUT_VERTICES_NV)
defconsti(env, "GL-MAX-MESH-OUTPUT-VERTICES-NV", (GLenum) GL_MAX_MESH_OUTPUT_VERTICES_NV, "GL_MAX_MESH_OUTPUT_VERTICES_NV");
#endif
#if defined(GL_MAX_MESH_OUTPUT_PRIMITIVES_NV)
defconsti(env, "GL-MAX-MESH-OUTPUT-PRIMITIVES-NV", (GLenum) GL_MAX_MESH_OUTPUT_PRIMITIVES_NV, "GL_MAX_MESH_OUTPUT_PRIMITIVES_NV");
#endif
#if defined(GL_MAX_TASK_OUTPUT_COUNT_NV)
defconsti(env, "GL-MAX-TASK-OUTPUT-COUNT-NV", (GLenum) GL_MAX_TASK_OUTPUT_COUNT_NV, "GL_MAX_TASK_OUTPUT_COUNT_NV");
#endif
#if defined(GL_MAX_DRAW_MESH_TASKS_COUNT_NV)
defconsti(env, "GL-MAX-DRAW-MESH-TASKS-COUNT-NV", (GLenum) GL_MAX_DRAW_MESH_TASKS_COUNT_NV, "GL_MAX_DRAW_MESH_TASKS_COUNT_NV");
#endif
#if defined(GL_MAX_MESH_VIEWS_NV)
defconsti(env, "GL-MAX-MESH-VIEWS-NV", (GLenum) GL_MAX_MESH_VIEWS_NV, "GL_MAX_MESH_VIEWS_NV");
#endif
#if defined(GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV)
defconsti(env, "GL-MESH-OUTPUT-PER-VERTEX-GRANULARITY-NV", (GLenum) GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV, "GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV");
#endif
#if defined(GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV)
defconsti(env, "GL-MESH-OUTPUT-PER-PRIMITIVE-GRANULARITY-NV", (GLenum) GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV, "GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV");
#endif
#if defined(GL_MAX_MESH_WORK_GROUP_SIZE_NV)
defconsti(env, "GL-MAX-MESH-WORK-GROUP-SIZE-NV", (GLenum) GL_MAX_MESH_WORK_GROUP_SIZE_NV, "GL_MAX_MESH_WORK_GROUP_SIZE_NV");
#endif
#if defined(GL_MAX_TASK_WORK_GROUP_SIZE_NV)
defconsti(env, "GL-MAX-TASK-WORK-GROUP-SIZE-NV", (GLenum) GL_MAX_TASK_WORK_GROUP_SIZE_NV, "GL_MAX_TASK_WORK_GROUP_SIZE_NV");
#endif
#if defined(GL_MESH_WORK_GROUP_SIZE_NV)
defconsti(env, "GL-MESH-WORK-GROUP-SIZE-NV", (GLenum) GL_MESH_WORK_GROUP_SIZE_NV, "GL_MESH_WORK_GROUP_SIZE_NV");
#endif
#if defined(GL_TASK_WORK_GROUP_SIZE_NV)
defconsti(env, "GL-TASK-WORK-GROUP-SIZE-NV", (GLenum) GL_TASK_WORK_GROUP_SIZE_NV, "GL_TASK_WORK_GROUP_SIZE_NV");
#endif
#if defined(GL_MESH_VERTICES_OUT_NV)
defconsti(env, "GL-MESH-VERTICES-OUT-NV", (GLenum) GL_MESH_VERTICES_OUT_NV, "GL_MESH_VERTICES_OUT_NV");
#endif
#if defined(GL_MESH_PRIMITIVES_OUT_NV)
defconsti(env, "GL-MESH-PRIMITIVES-OUT-NV", (GLenum) GL_MESH_PRIMITIVES_OUT_NV, "GL_MESH_PRIMITIVES_OUT_NV");
#endif
#if defined(GL_MESH_OUTPUT_TYPE_NV)
defconsti(env, "GL-MESH-OUTPUT-TYPE-NV", (GLenum) GL_MESH_OUTPUT_TYPE_NV, "GL_MESH_OUTPUT_TYPE_NV");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-MESH-SHADER-NV", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV, "GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV");
#endif
#if defined(GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV)
defconsti(env, "GL-UNIFORM-BLOCK-REFERENCED-BY-TASK-SHADER-NV", (GLenum) GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV, "GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV");
#endif
#if defined(GL_REFERENCED_BY_MESH_SHADER_NV)
defconsti(env, "GL-REFERENCED-BY-MESH-SHADER-NV", (GLenum) GL_REFERENCED_BY_MESH_SHADER_NV, "GL_REFERENCED_BY_MESH_SHADER_NV");
#endif
#if defined(GL_REFERENCED_BY_TASK_SHADER_NV)
defconsti(env, "GL-REFERENCED-BY-TASK-SHADER-NV", (GLenum) GL_REFERENCED_BY_TASK_SHADER_NV, "GL_REFERENCED_BY_TASK_SHADER_NV");
#endif
#if defined(GL_MESH_SHADER_BIT_NV)
defconsti(env, "GL-MESH-SHADER-BIT-NV", (GLenum) GL_MESH_SHADER_BIT_NV, "GL_MESH_SHADER_BIT_NV");
#endif
#if defined(GL_TASK_SHADER_BIT_NV)
defconsti(env, "GL-TASK-SHADER-BIT-NV", (GLenum) GL_TASK_SHADER_BIT_NV, "GL_TASK_SHADER_BIT_NV");
#endif
#if defined(GL_MESH_SUBROUTINE_NV)
defconsti(env, "GL-MESH-SUBROUTINE-NV", (GLenum) GL_MESH_SUBROUTINE_NV, "GL_MESH_SUBROUTINE_NV");
#endif
#if defined(GL_TASK_SUBROUTINE_NV)
defconsti(env, "GL-TASK-SUBROUTINE-NV", (GLenum) GL_TASK_SUBROUTINE_NV, "GL_TASK_SUBROUTINE_NV");
#endif
#if defined(GL_MESH_SUBROUTINE_UNIFORM_NV)
defconsti(env, "GL-MESH-SUBROUTINE-UNIFORM-NV", (GLenum) GL_MESH_SUBROUTINE_UNIFORM_NV, "GL_MESH_SUBROUTINE_UNIFORM_NV");
#endif
#if defined(GL_TASK_SUBROUTINE_UNIFORM_NV)
defconsti(env, "GL-TASK-SUBROUTINE-UNIFORM-NV", (GLenum) GL_TASK_SUBROUTINE_UNIFORM_NV, "GL_TASK_SUBROUTINE_UNIFORM_NV");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-MESH-SHADER-NV", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV");
#endif
#if defined(GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV)
defconsti(env, "GL-ATOMIC-COUNTER-BUFFER-REFERENCED-BY-TASK-SHADER-NV", (GLenum) GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV, "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV");
#endif
#if defined(GL_SAMPLES_ARB)
defconsti(env, "GL-SAMPLES-ARB", (GLenum) GL_SAMPLES_ARB, "GL_SAMPLES_ARB");
#endif
#if defined(GL_COLOR_SAMPLES_NV)
defconsti(env, "GL-COLOR-SAMPLES-NV", (GLenum) GL_COLOR_SAMPLES_NV, "GL_COLOR_SAMPLES_NV");
#endif
#if defined(GL_MULTISAMPLE_FILTER_HINT_NV)
defconsti(env, "GL-MULTISAMPLE-FILTER-HINT-NV", (GLenum) GL_MULTISAMPLE_FILTER_HINT_NV, "GL_MULTISAMPLE_FILTER_HINT_NV");
#endif
#if defined(GL_FLOAT_MAT2x3_NV)
defconsti(env, "GL-FLOAT-MAT2x3-NV", (GLenum) GL_FLOAT_MAT2x3_NV, "GL_FLOAT_MAT2x3_NV");
#endif
#if defined(GL_FLOAT_MAT2x4_NV)
defconsti(env, "GL-FLOAT-MAT2x4-NV", (GLenum) GL_FLOAT_MAT2x4_NV, "GL_FLOAT_MAT2x4_NV");
#endif
#if defined(GL_FLOAT_MAT3x2_NV)
defconsti(env, "GL-FLOAT-MAT3x2-NV", (GLenum) GL_FLOAT_MAT3x2_NV, "GL_FLOAT_MAT3x2_NV");
#endif
#if defined(GL_FLOAT_MAT3x4_NV)
defconsti(env, "GL-FLOAT-MAT3x4-NV", (GLenum) GL_FLOAT_MAT3x4_NV, "GL_FLOAT_MAT3x4_NV");
#endif
#if defined(GL_FLOAT_MAT4x2_NV)
defconsti(env, "GL-FLOAT-MAT4x2-NV", (GLenum) GL_FLOAT_MAT4x2_NV, "GL_FLOAT_MAT4x2_NV");
#endif
#if defined(GL_FLOAT_MAT4x3_NV)
defconsti(env, "GL-FLOAT-MAT4x3-NV", (GLenum) GL_FLOAT_MAT4x3_NV, "GL_FLOAT_MAT4x3_NV");
#endif
#if defined(GL_PIXEL_COUNTER_BITS_NV)
defconsti(env, "GL-PIXEL-COUNTER-BITS-NV", (GLenum) GL_PIXEL_COUNTER_BITS_NV, "GL_PIXEL_COUNTER_BITS_NV");
#endif
#if defined(GL_CURRENT_OCCLUSION_QUERY_ID_NV)
defconsti(env, "GL-CURRENT-OCCLUSION-QUERY-ID-NV", (GLenum) GL_CURRENT_OCCLUSION_QUERY_ID_NV, "GL_CURRENT_OCCLUSION_QUERY_ID_NV");
#endif
#if defined(GL_PIXEL_COUNT_NV)
defconsti(env, "GL-PIXEL-COUNT-NV", (GLenum) GL_PIXEL_COUNT_NV, "GL_PIXEL_COUNT_NV");
#endif
#if defined(GL_PIXEL_COUNT_AVAILABLE_NV)
defconsti(env, "GL-PIXEL-COUNT-AVAILABLE-NV", (GLenum) GL_PIXEL_COUNT_AVAILABLE_NV, "GL_PIXEL_COUNT_AVAILABLE_NV");
#endif
#if defined(GL_DEPTH_STENCIL_NV)
defconsti(env, "GL-DEPTH-STENCIL-NV", (GLenum) GL_DEPTH_STENCIL_NV, "GL_DEPTH_STENCIL_NV");
#endif
#if defined(GL_UNSIGNED_INT_24_8_NV)
defconsti(env, "GL-UNSIGNED-INT-24-8-NV", (GLenum) GL_UNSIGNED_INT_24_8_NV, "GL_UNSIGNED_INT_24_8_NV");
#endif
#if defined(GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV)
defconsti(env, "GL-MAX-PROGRAM-PARAMETER-BUFFER-BINDINGS-NV", (GLenum) GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV, "GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV");
#endif
#if defined(GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV)
defconsti(env, "GL-MAX-PROGRAM-PARAMETER-BUFFER-SIZE-NV", (GLenum) GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV, "GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV");
#endif
#if defined(GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV)
defconsti(env, "GL-VERTEX-PROGRAM-PARAMETER-BUFFER-NV", (GLenum) GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV, "GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV");
#endif
#if defined(GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV)
defconsti(env, "GL-GEOMETRY-PROGRAM-PARAMETER-BUFFER-NV", (GLenum) GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV, "GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV");
#endif
#if defined(GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV)
defconsti(env, "GL-FRAGMENT-PROGRAM-PARAMETER-BUFFER-NV", (GLenum) GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV, "GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV");
#endif
#if defined(GL_PATH_FORMAT_SVG_NV)
defconsti(env, "GL-PATH-FORMAT-SVG-NV", (GLenum) GL_PATH_FORMAT_SVG_NV, "GL_PATH_FORMAT_SVG_NV");
#endif
#if defined(GL_PATH_FORMAT_PS_NV)
defconsti(env, "GL-PATH-FORMAT-PS-NV", (GLenum) GL_PATH_FORMAT_PS_NV, "GL_PATH_FORMAT_PS_NV");
#endif
#if defined(GL_STANDARD_FONT_NAME_NV)
defconsti(env, "GL-STANDARD-FONT-NAME-NV", (GLenum) GL_STANDARD_FONT_NAME_NV, "GL_STANDARD_FONT_NAME_NV");
#endif
#if defined(GL_SYSTEM_FONT_NAME_NV)
defconsti(env, "GL-SYSTEM-FONT-NAME-NV", (GLenum) GL_SYSTEM_FONT_NAME_NV, "GL_SYSTEM_FONT_NAME_NV");
#endif
#if defined(GL_FILE_NAME_NV)
defconsti(env, "GL-FILE-NAME-NV", (GLenum) GL_FILE_NAME_NV, "GL_FILE_NAME_NV");
#endif
#if defined(GL_PATH_STROKE_WIDTH_NV)
defconsti(env, "GL-PATH-STROKE-WIDTH-NV", (GLenum) GL_PATH_STROKE_WIDTH_NV, "GL_PATH_STROKE_WIDTH_NV");
#endif
#if defined(GL_PATH_END_CAPS_NV)
defconsti(env, "GL-PATH-END-CAPS-NV", (GLenum) GL_PATH_END_CAPS_NV, "GL_PATH_END_CAPS_NV");
#endif
#if defined(GL_PATH_INITIAL_END_CAP_NV)
defconsti(env, "GL-PATH-INITIAL-END-CAP-NV", (GLenum) GL_PATH_INITIAL_END_CAP_NV, "GL_PATH_INITIAL_END_CAP_NV");
#endif
#if defined(GL_PATH_TERMINAL_END_CAP_NV)
defconsti(env, "GL-PATH-TERMINAL-END-CAP-NV", (GLenum) GL_PATH_TERMINAL_END_CAP_NV, "GL_PATH_TERMINAL_END_CAP_NV");
#endif
#if defined(GL_PATH_JOIN_STYLE_NV)
defconsti(env, "GL-PATH-JOIN-STYLE-NV", (GLenum) GL_PATH_JOIN_STYLE_NV, "GL_PATH_JOIN_STYLE_NV");
#endif
#if defined(GL_PATH_MITER_LIMIT_NV)
defconsti(env, "GL-PATH-MITER-LIMIT-NV", (GLenum) GL_PATH_MITER_LIMIT_NV, "GL_PATH_MITER_LIMIT_NV");
#endif
#if defined(GL_PATH_DASH_CAPS_NV)
defconsti(env, "GL-PATH-DASH-CAPS-NV", (GLenum) GL_PATH_DASH_CAPS_NV, "GL_PATH_DASH_CAPS_NV");
#endif
#if defined(GL_PATH_INITIAL_DASH_CAP_NV)
defconsti(env, "GL-PATH-INITIAL-DASH-CAP-NV", (GLenum) GL_PATH_INITIAL_DASH_CAP_NV, "GL_PATH_INITIAL_DASH_CAP_NV");
#endif
#if defined(GL_PATH_TERMINAL_DASH_CAP_NV)
defconsti(env, "GL-PATH-TERMINAL-DASH-CAP-NV", (GLenum) GL_PATH_TERMINAL_DASH_CAP_NV, "GL_PATH_TERMINAL_DASH_CAP_NV");
#endif
#if defined(GL_PATH_DASH_OFFSET_NV)
defconsti(env, "GL-PATH-DASH-OFFSET-NV", (GLenum) GL_PATH_DASH_OFFSET_NV, "GL_PATH_DASH_OFFSET_NV");
#endif
#if defined(GL_PATH_CLIENT_LENGTH_NV)
defconsti(env, "GL-PATH-CLIENT-LENGTH-NV", (GLenum) GL_PATH_CLIENT_LENGTH_NV, "GL_PATH_CLIENT_LENGTH_NV");
#endif
#if defined(GL_PATH_FILL_MODE_NV)
defconsti(env, "GL-PATH-FILL-MODE-NV", (GLenum) GL_PATH_FILL_MODE_NV, "GL_PATH_FILL_MODE_NV");
#endif
#if defined(GL_PATH_FILL_MASK_NV)
defconsti(env, "GL-PATH-FILL-MASK-NV", (GLenum) GL_PATH_FILL_MASK_NV, "GL_PATH_FILL_MASK_NV");
#endif
#if defined(GL_PATH_FILL_COVER_MODE_NV)
defconsti(env, "GL-PATH-FILL-COVER-MODE-NV", (GLenum) GL_PATH_FILL_COVER_MODE_NV, "GL_PATH_FILL_COVER_MODE_NV");
#endif
#if defined(GL_PATH_STROKE_COVER_MODE_NV)
defconsti(env, "GL-PATH-STROKE-COVER-MODE-NV", (GLenum) GL_PATH_STROKE_COVER_MODE_NV, "GL_PATH_STROKE_COVER_MODE_NV");
#endif
#if defined(GL_PATH_STROKE_MASK_NV)
defconsti(env, "GL-PATH-STROKE-MASK-NV", (GLenum) GL_PATH_STROKE_MASK_NV, "GL_PATH_STROKE_MASK_NV");
#endif
#if defined(GL_COUNT_UP_NV)
defconsti(env, "GL-COUNT-UP-NV", (GLenum) GL_COUNT_UP_NV, "GL_COUNT_UP_NV");
#endif
#if defined(GL_COUNT_DOWN_NV)
defconsti(env, "GL-COUNT-DOWN-NV", (GLenum) GL_COUNT_DOWN_NV, "GL_COUNT_DOWN_NV");
#endif
#if defined(GL_PATH_OBJECT_BOUNDING_BOX_NV)
defconsti(env, "GL-PATH-OBJECT-BOUNDING-BOX-NV", (GLenum) GL_PATH_OBJECT_BOUNDING_BOX_NV, "GL_PATH_OBJECT_BOUNDING_BOX_NV");
#endif
#if defined(GL_CONVEX_HULL_NV)
defconsti(env, "GL-CONVEX-HULL-NV", (GLenum) GL_CONVEX_HULL_NV, "GL_CONVEX_HULL_NV");
#endif
#if defined(GL_BOUNDING_BOX_NV)
defconsti(env, "GL-BOUNDING-BOX-NV", (GLenum) GL_BOUNDING_BOX_NV, "GL_BOUNDING_BOX_NV");
#endif
#if defined(GL_TRANSLATE_X_NV)
defconsti(env, "GL-TRANSLATE-X-NV", (GLenum) GL_TRANSLATE_X_NV, "GL_TRANSLATE_X_NV");
#endif
#if defined(GL_TRANSLATE_Y_NV)
defconsti(env, "GL-TRANSLATE-Y-NV", (GLenum) GL_TRANSLATE_Y_NV, "GL_TRANSLATE_Y_NV");
#endif
#if defined(GL_TRANSLATE_2D_NV)
defconsti(env, "GL-TRANSLATE-2D-NV", (GLenum) GL_TRANSLATE_2D_NV, "GL_TRANSLATE_2D_NV");
#endif
#if defined(GL_TRANSLATE_3D_NV)
defconsti(env, "GL-TRANSLATE-3D-NV", (GLenum) GL_TRANSLATE_3D_NV, "GL_TRANSLATE_3D_NV");
#endif
#if defined(GL_AFFINE_2D_NV)
defconsti(env, "GL-AFFINE-2D-NV", (GLenum) GL_AFFINE_2D_NV, "GL_AFFINE_2D_NV");
#endif
#if defined(GL_AFFINE_3D_NV)
defconsti(env, "GL-AFFINE-3D-NV", (GLenum) GL_AFFINE_3D_NV, "GL_AFFINE_3D_NV");
#endif
#if defined(GL_TRANSPOSE_AFFINE_2D_NV)
defconsti(env, "GL-TRANSPOSE-AFFINE-2D-NV", (GLenum) GL_TRANSPOSE_AFFINE_2D_NV, "GL_TRANSPOSE_AFFINE_2D_NV");
#endif
#if defined(GL_TRANSPOSE_AFFINE_3D_NV)
defconsti(env, "GL-TRANSPOSE-AFFINE-3D-NV", (GLenum) GL_TRANSPOSE_AFFINE_3D_NV, "GL_TRANSPOSE_AFFINE_3D_NV");
#endif
#if defined(GL_UTF8_NV)
defconsti(env, "GL-UTF8-NV", (GLenum) GL_UTF8_NV, "GL_UTF8_NV");
#endif
#if defined(GL_UTF16_NV)
defconsti(env, "GL-UTF16-NV", (GLenum) GL_UTF16_NV, "GL_UTF16_NV");
#endif
#if defined(GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV)
defconsti(env, "GL-BOUNDING-BOX-OF-BOUNDING-BOXES-NV", (GLenum) GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV, "GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV");
#endif
#if defined(GL_PATH_COMMAND_COUNT_NV)
defconsti(env, "GL-PATH-COMMAND-COUNT-NV", (GLenum) GL_PATH_COMMAND_COUNT_NV, "GL_PATH_COMMAND_COUNT_NV");
#endif
#if defined(GL_PATH_COORD_COUNT_NV)
defconsti(env, "GL-PATH-COORD-COUNT-NV", (GLenum) GL_PATH_COORD_COUNT_NV, "GL_PATH_COORD_COUNT_NV");
#endif
#if defined(GL_PATH_DASH_ARRAY_COUNT_NV)
defconsti(env, "GL-PATH-DASH-ARRAY-COUNT-NV", (GLenum) GL_PATH_DASH_ARRAY_COUNT_NV, "GL_PATH_DASH_ARRAY_COUNT_NV");
#endif
#if defined(GL_PATH_COMPUTED_LENGTH_NV)
defconsti(env, "GL-PATH-COMPUTED-LENGTH-NV", (GLenum) GL_PATH_COMPUTED_LENGTH_NV, "GL_PATH_COMPUTED_LENGTH_NV");
#endif
#if defined(GL_PATH_FILL_BOUNDING_BOX_NV)
defconsti(env, "GL-PATH-FILL-BOUNDING-BOX-NV", (GLenum) GL_PATH_FILL_BOUNDING_BOX_NV, "GL_PATH_FILL_BOUNDING_BOX_NV");
#endif
#if defined(GL_PATH_STROKE_BOUNDING_BOX_NV)
defconsti(env, "GL-PATH-STROKE-BOUNDING-BOX-NV", (GLenum) GL_PATH_STROKE_BOUNDING_BOX_NV, "GL_PATH_STROKE_BOUNDING_BOX_NV");
#endif
#if defined(GL_SQUARE_NV)
defconsti(env, "GL-SQUARE-NV", (GLenum) GL_SQUARE_NV, "GL_SQUARE_NV");
#endif
#if defined(GL_ROUND_NV)
defconsti(env, "GL-ROUND-NV", (GLenum) GL_ROUND_NV, "GL_ROUND_NV");
#endif
#if defined(GL_TRIANGULAR_NV)
defconsti(env, "GL-TRIANGULAR-NV", (GLenum) GL_TRIANGULAR_NV, "GL_TRIANGULAR_NV");
#endif
#if defined(GL_BEVEL_NV)
defconsti(env, "GL-BEVEL-NV", (GLenum) GL_BEVEL_NV, "GL_BEVEL_NV");
#endif
#if defined(GL_MITER_REVERT_NV)
defconsti(env, "GL-MITER-REVERT-NV", (GLenum) GL_MITER_REVERT_NV, "GL_MITER_REVERT_NV");
#endif
#if defined(GL_MITER_TRUNCATE_NV)
defconsti(env, "GL-MITER-TRUNCATE-NV", (GLenum) GL_MITER_TRUNCATE_NV, "GL_MITER_TRUNCATE_NV");
#endif
#if defined(GL_SKIP_MISSING_GLYPH_NV)
defconsti(env, "GL-SKIP-MISSING-GLYPH-NV", (GLenum) GL_SKIP_MISSING_GLYPH_NV, "GL_SKIP_MISSING_GLYPH_NV");
#endif
#if defined(GL_USE_MISSING_GLYPH_NV)
defconsti(env, "GL-USE-MISSING-GLYPH-NV", (GLenum) GL_USE_MISSING_GLYPH_NV, "GL_USE_MISSING_GLYPH_NV");
#endif
#if defined(GL_PATH_ERROR_POSITION_NV)
defconsti(env, "GL-PATH-ERROR-POSITION-NV", (GLenum) GL_PATH_ERROR_POSITION_NV, "GL_PATH_ERROR_POSITION_NV");
#endif
#if defined(GL_ACCUM_ADJACENT_PAIRS_NV)
defconsti(env, "GL-ACCUM-ADJACENT-PAIRS-NV", (GLenum) GL_ACCUM_ADJACENT_PAIRS_NV, "GL_ACCUM_ADJACENT_PAIRS_NV");
#endif
#if defined(GL_ADJACENT_PAIRS_NV)
defconsti(env, "GL-ADJACENT-PAIRS-NV", (GLenum) GL_ADJACENT_PAIRS_NV, "GL_ADJACENT_PAIRS_NV");
#endif
#if defined(GL_FIRST_TO_REST_NV)
defconsti(env, "GL-FIRST-TO-REST-NV", (GLenum) GL_FIRST_TO_REST_NV, "GL_FIRST_TO_REST_NV");
#endif
#if defined(GL_PATH_GEN_MODE_NV)
defconsti(env, "GL-PATH-GEN-MODE-NV", (GLenum) GL_PATH_GEN_MODE_NV, "GL_PATH_GEN_MODE_NV");
#endif
#if defined(GL_PATH_GEN_COEFF_NV)
defconsti(env, "GL-PATH-GEN-COEFF-NV", (GLenum) GL_PATH_GEN_COEFF_NV, "GL_PATH_GEN_COEFF_NV");
#endif
#if defined(GL_PATH_GEN_COMPONENTS_NV)
defconsti(env, "GL-PATH-GEN-COMPONENTS-NV", (GLenum) GL_PATH_GEN_COMPONENTS_NV, "GL_PATH_GEN_COMPONENTS_NV");
#endif
#if defined(GL_PATH_STENCIL_FUNC_NV)
defconsti(env, "GL-PATH-STENCIL-FUNC-NV", (GLenum) GL_PATH_STENCIL_FUNC_NV, "GL_PATH_STENCIL_FUNC_NV");
#endif
#if defined(GL_PATH_STENCIL_REF_NV)
defconsti(env, "GL-PATH-STENCIL-REF-NV", (GLenum) GL_PATH_STENCIL_REF_NV, "GL_PATH_STENCIL_REF_NV");
#endif
#if defined(GL_PATH_STENCIL_VALUE_MASK_NV)
defconsti(env, "GL-PATH-STENCIL-VALUE-MASK-NV", (GLenum) GL_PATH_STENCIL_VALUE_MASK_NV, "GL_PATH_STENCIL_VALUE_MASK_NV");
#endif
#if defined(GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV)
defconsti(env, "GL-PATH-STENCIL-DEPTH-OFFSET-FACTOR-NV", (GLenum) GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV, "GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV");
#endif
#if defined(GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV)
defconsti(env, "GL-PATH-STENCIL-DEPTH-OFFSET-UNITS-NV", (GLenum) GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV, "GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV");
#endif
#if defined(GL_PATH_COVER_DEPTH_FUNC_NV)
defconsti(env, "GL-PATH-COVER-DEPTH-FUNC-NV", (GLenum) GL_PATH_COVER_DEPTH_FUNC_NV, "GL_PATH_COVER_DEPTH_FUNC_NV");
#endif
#if defined(GL_PATH_DASH_OFFSET_RESET_NV)
defconsti(env, "GL-PATH-DASH-OFFSET-RESET-NV", (GLenum) GL_PATH_DASH_OFFSET_RESET_NV, "GL_PATH_DASH_OFFSET_RESET_NV");
#endif
#if defined(GL_MOVE_TO_RESETS_NV)
defconsti(env, "GL-MOVE-TO-RESETS-NV", (GLenum) GL_MOVE_TO_RESETS_NV, "GL_MOVE_TO_RESETS_NV");
#endif
#if defined(GL_MOVE_TO_CONTINUES_NV)
defconsti(env, "GL-MOVE-TO-CONTINUES-NV", (GLenum) GL_MOVE_TO_CONTINUES_NV, "GL_MOVE_TO_CONTINUES_NV");
#endif
#if defined(GL_CLOSE_PATH_NV)
defconsti(env, "GL-CLOSE-PATH-NV", (GLenum) GL_CLOSE_PATH_NV, "GL_CLOSE_PATH_NV");
#endif
#if defined(GL_MOVE_TO_NV)
defconsti(env, "GL-MOVE-TO-NV", (GLenum) GL_MOVE_TO_NV, "GL_MOVE_TO_NV");
#endif
#if defined(GL_RELATIVE_MOVE_TO_NV)
defconsti(env, "GL-RELATIVE-MOVE-TO-NV", (GLenum) GL_RELATIVE_MOVE_TO_NV, "GL_RELATIVE_MOVE_TO_NV");
#endif
#if defined(GL_LINE_TO_NV)
defconsti(env, "GL-LINE-TO-NV", (GLenum) GL_LINE_TO_NV, "GL_LINE_TO_NV");
#endif
#if defined(GL_RELATIVE_LINE_TO_NV)
defconsti(env, "GL-RELATIVE-LINE-TO-NV", (GLenum) GL_RELATIVE_LINE_TO_NV, "GL_RELATIVE_LINE_TO_NV");
#endif
#if defined(GL_HORIZONTAL_LINE_TO_NV)
defconsti(env, "GL-HORIZONTAL-LINE-TO-NV", (GLenum) GL_HORIZONTAL_LINE_TO_NV, "GL_HORIZONTAL_LINE_TO_NV");
#endif
#if defined(GL_RELATIVE_HORIZONTAL_LINE_TO_NV)
defconsti(env, "GL-RELATIVE-HORIZONTAL-LINE-TO-NV", (GLenum) GL_RELATIVE_HORIZONTAL_LINE_TO_NV, "GL_RELATIVE_HORIZONTAL_LINE_TO_NV");
#endif
#if defined(GL_VERTICAL_LINE_TO_NV)
defconsti(env, "GL-VERTICAL-LINE-TO-NV", (GLenum) GL_VERTICAL_LINE_TO_NV, "GL_VERTICAL_LINE_TO_NV");
#endif
#if defined(GL_RELATIVE_VERTICAL_LINE_TO_NV)
defconsti(env, "GL-RELATIVE-VERTICAL-LINE-TO-NV", (GLenum) GL_RELATIVE_VERTICAL_LINE_TO_NV, "GL_RELATIVE_VERTICAL_LINE_TO_NV");
#endif
#if defined(GL_QUADRATIC_CURVE_TO_NV)
defconsti(env, "GL-QUADRATIC-CURVE-TO-NV", (GLenum) GL_QUADRATIC_CURVE_TO_NV, "GL_QUADRATIC_CURVE_TO_NV");
#endif
#if defined(GL_RELATIVE_QUADRATIC_CURVE_TO_NV)
defconsti(env, "GL-RELATIVE-QUADRATIC-CURVE-TO-NV", (GLenum) GL_RELATIVE_QUADRATIC_CURVE_TO_NV, "GL_RELATIVE_QUADRATIC_CURVE_TO_NV");
#endif
#if defined(GL_CUBIC_CURVE_TO_NV)
defconsti(env, "GL-CUBIC-CURVE-TO-NV", (GLenum) GL_CUBIC_CURVE_TO_NV, "GL_CUBIC_CURVE_TO_NV");
#endif
#if defined(GL_RELATIVE_CUBIC_CURVE_TO_NV)
defconsti(env, "GL-RELATIVE-CUBIC-CURVE-TO-NV", (GLenum) GL_RELATIVE_CUBIC_CURVE_TO_NV, "GL_RELATIVE_CUBIC_CURVE_TO_NV");
#endif
#if defined(GL_SMOOTH_QUADRATIC_CURVE_TO_NV)
defconsti(env, "GL-SMOOTH-QUADRATIC-CURVE-TO-NV", (GLenum) GL_SMOOTH_QUADRATIC_CURVE_TO_NV, "GL_SMOOTH_QUADRATIC_CURVE_TO_NV");
#endif
#if defined(GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV)
defconsti(env, "GL-RELATIVE-SMOOTH-QUADRATIC-CURVE-TO-NV", (GLenum) GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV, "GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV");
#endif
#if defined(GL_SMOOTH_CUBIC_CURVE_TO_NV)
defconsti(env, "GL-SMOOTH-CUBIC-CURVE-TO-NV", (GLenum) GL_SMOOTH_CUBIC_CURVE_TO_NV, "GL_SMOOTH_CUBIC_CURVE_TO_NV");
#endif
#if defined(GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV)
defconsti(env, "GL-RELATIVE-SMOOTH-CUBIC-CURVE-TO-NV", (GLenum) GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV, "GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV");
#endif
#if defined(GL_SMALL_CCW_ARC_TO_NV)
defconsti(env, "GL-SMALL-CCW-ARC-TO-NV", (GLenum) GL_SMALL_CCW_ARC_TO_NV, "GL_SMALL_CCW_ARC_TO_NV");
#endif
#if defined(GL_RELATIVE_SMALL_CCW_ARC_TO_NV)
defconsti(env, "GL-RELATIVE-SMALL-CCW-ARC-TO-NV", (GLenum) GL_RELATIVE_SMALL_CCW_ARC_TO_NV, "GL_RELATIVE_SMALL_CCW_ARC_TO_NV");
#endif
#if defined(GL_SMALL_CW_ARC_TO_NV)
defconsti(env, "GL-SMALL-CW-ARC-TO-NV", (GLenum) GL_SMALL_CW_ARC_TO_NV, "GL_SMALL_CW_ARC_TO_NV");
#endif
#if defined(GL_RELATIVE_SMALL_CW_ARC_TO_NV)
defconsti(env, "GL-RELATIVE-SMALL-CW-ARC-TO-NV", (GLenum) GL_RELATIVE_SMALL_CW_ARC_TO_NV, "GL_RELATIVE_SMALL_CW_ARC_TO_NV");
#endif
#if defined(GL_LARGE_CCW_ARC_TO_NV)
defconsti(env, "GL-LARGE-CCW-ARC-TO-NV", (GLenum) GL_LARGE_CCW_ARC_TO_NV, "GL_LARGE_CCW_ARC_TO_NV");
#endif
#if defined(GL_RELATIVE_LARGE_CCW_ARC_TO_NV)
defconsti(env, "GL-RELATIVE-LARGE-CCW-ARC-TO-NV", (GLenum) GL_RELATIVE_LARGE_CCW_ARC_TO_NV, "GL_RELATIVE_LARGE_CCW_ARC_TO_NV");
#endif
#if defined(GL_LARGE_CW_ARC_TO_NV)
defconsti(env, "GL-LARGE-CW-ARC-TO-NV", (GLenum) GL_LARGE_CW_ARC_TO_NV, "GL_LARGE_CW_ARC_TO_NV");
#endif
#if defined(GL_RELATIVE_LARGE_CW_ARC_TO_NV)
defconsti(env, "GL-RELATIVE-LARGE-CW-ARC-TO-NV", (GLenum) GL_RELATIVE_LARGE_CW_ARC_TO_NV, "GL_RELATIVE_LARGE_CW_ARC_TO_NV");
#endif
#if defined(GL_RESTART_PATH_NV)
defconsti(env, "GL-RESTART-PATH-NV", (GLenum) GL_RESTART_PATH_NV, "GL_RESTART_PATH_NV");
#endif
#if defined(GL_DUP_FIRST_CUBIC_CURVE_TO_NV)
defconsti(env, "GL-DUP-FIRST-CUBIC-CURVE-TO-NV", (GLenum) GL_DUP_FIRST_CUBIC_CURVE_TO_NV, "GL_DUP_FIRST_CUBIC_CURVE_TO_NV");
#endif
#if defined(GL_DUP_LAST_CUBIC_CURVE_TO_NV)
defconsti(env, "GL-DUP-LAST-CUBIC-CURVE-TO-NV", (GLenum) GL_DUP_LAST_CUBIC_CURVE_TO_NV, "GL_DUP_LAST_CUBIC_CURVE_TO_NV");
#endif
#if defined(GL_RECT_NV)
defconsti(env, "GL-RECT-NV", (GLenum) GL_RECT_NV, "GL_RECT_NV");
#endif
#if defined(GL_CIRCULAR_CCW_ARC_TO_NV)
defconsti(env, "GL-CIRCULAR-CCW-ARC-TO-NV", (GLenum) GL_CIRCULAR_CCW_ARC_TO_NV, "GL_CIRCULAR_CCW_ARC_TO_NV");
#endif
#if defined(GL_CIRCULAR_CW_ARC_TO_NV)
defconsti(env, "GL-CIRCULAR-CW-ARC-TO-NV", (GLenum) GL_CIRCULAR_CW_ARC_TO_NV, "GL_CIRCULAR_CW_ARC_TO_NV");
#endif
#if defined(GL_CIRCULAR_TANGENT_ARC_TO_NV)
defconsti(env, "GL-CIRCULAR-TANGENT-ARC-TO-NV", (GLenum) GL_CIRCULAR_TANGENT_ARC_TO_NV, "GL_CIRCULAR_TANGENT_ARC_TO_NV");
#endif
#if defined(GL_ARC_TO_NV)
defconsti(env, "GL-ARC-TO-NV", (GLenum) GL_ARC_TO_NV, "GL_ARC_TO_NV");
#endif
#if defined(GL_RELATIVE_ARC_TO_NV)
defconsti(env, "GL-RELATIVE-ARC-TO-NV", (GLenum) GL_RELATIVE_ARC_TO_NV, "GL_RELATIVE_ARC_TO_NV");
#endif
#if defined(GL_BOLD_BIT_NV)
defconsti(env, "GL-BOLD-BIT-NV", (GLenum) GL_BOLD_BIT_NV, "GL_BOLD_BIT_NV");
#endif
#if defined(GL_ITALIC_BIT_NV)
defconsti(env, "GL-ITALIC-BIT-NV", (GLenum) GL_ITALIC_BIT_NV, "GL_ITALIC_BIT_NV");
#endif
#if defined(GL_GLYPH_WIDTH_BIT_NV)
defconsti(env, "GL-GLYPH-WIDTH-BIT-NV", (GLenum) GL_GLYPH_WIDTH_BIT_NV, "GL_GLYPH_WIDTH_BIT_NV");
#endif
#if defined(GL_GLYPH_HEIGHT_BIT_NV)
defconsti(env, "GL-GLYPH-HEIGHT-BIT-NV", (GLenum) GL_GLYPH_HEIGHT_BIT_NV, "GL_GLYPH_HEIGHT_BIT_NV");
#endif
#if defined(GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV)
defconsti(env, "GL-GLYPH-HORIZONTAL-BEARING-X-BIT-NV", (GLenum) GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV, "GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV");
#endif
#if defined(GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV)
defconsti(env, "GL-GLYPH-HORIZONTAL-BEARING-Y-BIT-NV", (GLenum) GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV, "GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV");
#endif
#if defined(GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV)
defconsti(env, "GL-GLYPH-HORIZONTAL-BEARING-ADVANCE-BIT-NV", (GLenum) GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV, "GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV");
#endif
#if defined(GL_GLYPH_VERTICAL_BEARING_X_BIT_NV)
defconsti(env, "GL-GLYPH-VERTICAL-BEARING-X-BIT-NV", (GLenum) GL_GLYPH_VERTICAL_BEARING_X_BIT_NV, "GL_GLYPH_VERTICAL_BEARING_X_BIT_NV");
#endif
#if defined(GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV)
defconsti(env, "GL-GLYPH-VERTICAL-BEARING-Y-BIT-NV", (GLenum) GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV, "GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV");
#endif
#if defined(GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV)
defconsti(env, "GL-GLYPH-VERTICAL-BEARING-ADVANCE-BIT-NV", (GLenum) GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV, "GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV");
#endif
#if defined(GL_GLYPH_HAS_KERNING_BIT_NV)
defconsti(env, "GL-GLYPH-HAS-KERNING-BIT-NV", (GLenum) GL_GLYPH_HAS_KERNING_BIT_NV, "GL_GLYPH_HAS_KERNING_BIT_NV");
#endif
#if defined(GL_FONT_X_MIN_BOUNDS_BIT_NV)
defconsti(env, "GL-FONT-X-MIN-BOUNDS-BIT-NV", (GLenum) GL_FONT_X_MIN_BOUNDS_BIT_NV, "GL_FONT_X_MIN_BOUNDS_BIT_NV");
#endif
#if defined(GL_FONT_Y_MIN_BOUNDS_BIT_NV)
defconsti(env, "GL-FONT-Y-MIN-BOUNDS-BIT-NV", (GLenum) GL_FONT_Y_MIN_BOUNDS_BIT_NV, "GL_FONT_Y_MIN_BOUNDS_BIT_NV");
#endif
#if defined(GL_FONT_X_MAX_BOUNDS_BIT_NV)
defconsti(env, "GL-FONT-X-MAX-BOUNDS-BIT-NV", (GLenum) GL_FONT_X_MAX_BOUNDS_BIT_NV, "GL_FONT_X_MAX_BOUNDS_BIT_NV");
#endif
#if defined(GL_FONT_Y_MAX_BOUNDS_BIT_NV)
defconsti(env, "GL-FONT-Y-MAX-BOUNDS-BIT-NV", (GLenum) GL_FONT_Y_MAX_BOUNDS_BIT_NV, "GL_FONT_Y_MAX_BOUNDS_BIT_NV");
#endif
#if defined(GL_FONT_UNITS_PER_EM_BIT_NV)
defconsti(env, "GL-FONT-UNITS-PER-EM-BIT-NV", (GLenum) GL_FONT_UNITS_PER_EM_BIT_NV, "GL_FONT_UNITS_PER_EM_BIT_NV");
#endif
#if defined(GL_FONT_ASCENDER_BIT_NV)
defconsti(env, "GL-FONT-ASCENDER-BIT-NV", (GLenum) GL_FONT_ASCENDER_BIT_NV, "GL_FONT_ASCENDER_BIT_NV");
#endif
#if defined(GL_FONT_DESCENDER_BIT_NV)
defconsti(env, "GL-FONT-DESCENDER-BIT-NV", (GLenum) GL_FONT_DESCENDER_BIT_NV, "GL_FONT_DESCENDER_BIT_NV");
#endif
#if defined(GL_FONT_HEIGHT_BIT_NV)
defconsti(env, "GL-FONT-HEIGHT-BIT-NV", (GLenum) GL_FONT_HEIGHT_BIT_NV, "GL_FONT_HEIGHT_BIT_NV");
#endif
#if defined(GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV)
defconsti(env, "GL-FONT-MAX-ADVANCE-WIDTH-BIT-NV", (GLenum) GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV, "GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV");
#endif
#if defined(GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV)
defconsti(env, "GL-FONT-MAX-ADVANCE-HEIGHT-BIT-NV", (GLenum) GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV, "GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV");
#endif
#if defined(GL_FONT_UNDERLINE_POSITION_BIT_NV)
defconsti(env, "GL-FONT-UNDERLINE-POSITION-BIT-NV", (GLenum) GL_FONT_UNDERLINE_POSITION_BIT_NV, "GL_FONT_UNDERLINE_POSITION_BIT_NV");
#endif
#if defined(GL_FONT_UNDERLINE_THICKNESS_BIT_NV)
defconsti(env, "GL-FONT-UNDERLINE-THICKNESS-BIT-NV", (GLenum) GL_FONT_UNDERLINE_THICKNESS_BIT_NV, "GL_FONT_UNDERLINE_THICKNESS_BIT_NV");
#endif
#if defined(GL_FONT_HAS_KERNING_BIT_NV)
defconsti(env, "GL-FONT-HAS-KERNING-BIT-NV", (GLenum) GL_FONT_HAS_KERNING_BIT_NV, "GL_FONT_HAS_KERNING_BIT_NV");
#endif
#if defined(GL_ROUNDED_RECT_NV)
defconsti(env, "GL-ROUNDED-RECT-NV", (GLenum) GL_ROUNDED_RECT_NV, "GL_ROUNDED_RECT_NV");
#endif
#if defined(GL_RELATIVE_ROUNDED_RECT_NV)
defconsti(env, "GL-RELATIVE-ROUNDED-RECT-NV", (GLenum) GL_RELATIVE_ROUNDED_RECT_NV, "GL_RELATIVE_ROUNDED_RECT_NV");
#endif
#if defined(GL_ROUNDED_RECT2_NV)
defconsti(env, "GL-ROUNDED-RECT2-NV", (GLenum) GL_ROUNDED_RECT2_NV, "GL_ROUNDED_RECT2_NV");
#endif
#if defined(GL_RELATIVE_ROUNDED_RECT2_NV)
defconsti(env, "GL-RELATIVE-ROUNDED-RECT2-NV", (GLenum) GL_RELATIVE_ROUNDED_RECT2_NV, "GL_RELATIVE_ROUNDED_RECT2_NV");
#endif
#if defined(GL_ROUNDED_RECT4_NV)
defconsti(env, "GL-ROUNDED-RECT4-NV", (GLenum) GL_ROUNDED_RECT4_NV, "GL_ROUNDED_RECT4_NV");
#endif
#if defined(GL_RELATIVE_ROUNDED_RECT4_NV)
defconsti(env, "GL-RELATIVE-ROUNDED-RECT4-NV", (GLenum) GL_RELATIVE_ROUNDED_RECT4_NV, "GL_RELATIVE_ROUNDED_RECT4_NV");
#endif
#if defined(GL_ROUNDED_RECT8_NV)
defconsti(env, "GL-ROUNDED-RECT8-NV", (GLenum) GL_ROUNDED_RECT8_NV, "GL_ROUNDED_RECT8_NV");
#endif
#if defined(GL_RELATIVE_ROUNDED_RECT8_NV)
defconsti(env, "GL-RELATIVE-ROUNDED-RECT8-NV", (GLenum) GL_RELATIVE_ROUNDED_RECT8_NV, "GL_RELATIVE_ROUNDED_RECT8_NV");
#endif
#if defined(GL_RELATIVE_RECT_NV)
defconsti(env, "GL-RELATIVE-RECT-NV", (GLenum) GL_RELATIVE_RECT_NV, "GL_RELATIVE_RECT_NV");
#endif
#if defined(GL_FONT_GLYPHS_AVAILABLE_NV)
defconsti(env, "GL-FONT-GLYPHS-AVAILABLE-NV", (GLenum) GL_FONT_GLYPHS_AVAILABLE_NV, "GL_FONT_GLYPHS_AVAILABLE_NV");
#endif
#if defined(GL_FONT_TARGET_UNAVAILABLE_NV)
defconsti(env, "GL-FONT-TARGET-UNAVAILABLE-NV", (GLenum) GL_FONT_TARGET_UNAVAILABLE_NV, "GL_FONT_TARGET_UNAVAILABLE_NV");
#endif
#if defined(GL_FONT_UNAVAILABLE_NV)
defconsti(env, "GL-FONT-UNAVAILABLE-NV", (GLenum) GL_FONT_UNAVAILABLE_NV, "GL_FONT_UNAVAILABLE_NV");
#endif
#if defined(GL_FONT_UNINTELLIGIBLE_NV)
defconsti(env, "GL-FONT-UNINTELLIGIBLE-NV", (GLenum) GL_FONT_UNINTELLIGIBLE_NV, "GL_FONT_UNINTELLIGIBLE_NV");
#endif
#if defined(GL_CONIC_CURVE_TO_NV)
defconsti(env, "GL-CONIC-CURVE-TO-NV", (GLenum) GL_CONIC_CURVE_TO_NV, "GL_CONIC_CURVE_TO_NV");
#endif
#if defined(GL_RELATIVE_CONIC_CURVE_TO_NV)
defconsti(env, "GL-RELATIVE-CONIC-CURVE-TO-NV", (GLenum) GL_RELATIVE_CONIC_CURVE_TO_NV, "GL_RELATIVE_CONIC_CURVE_TO_NV");
#endif
#if defined(GL_FONT_NUM_GLYPH_INDICES_BIT_NV)
defconsti(env, "GL-FONT-NUM-GLYPH-INDICES-BIT-NV", (GLenum) GL_FONT_NUM_GLYPH_INDICES_BIT_NV, "GL_FONT_NUM_GLYPH_INDICES_BIT_NV");
#endif
#if defined(GL_STANDARD_FONT_FORMAT_NV)
defconsti(env, "GL-STANDARD-FONT-FORMAT-NV", (GLenum) GL_STANDARD_FONT_FORMAT_NV, "GL_STANDARD_FONT_FORMAT_NV");
#endif
#if defined(GL_2_BYTES_NV)
defconsti(env, "GL-2-BYTES-NV", (GLenum) GL_2_BYTES_NV, "GL_2_BYTES_NV");
#endif
#if defined(GL_3_BYTES_NV)
defconsti(env, "GL-3-BYTES-NV", (GLenum) GL_3_BYTES_NV, "GL_3_BYTES_NV");
#endif
#if defined(GL_4_BYTES_NV)
defconsti(env, "GL-4-BYTES-NV", (GLenum) GL_4_BYTES_NV, "GL_4_BYTES_NV");
#endif
#if defined(GL_EYE_LINEAR_NV)
defconsti(env, "GL-EYE-LINEAR-NV", (GLenum) GL_EYE_LINEAR_NV, "GL_EYE_LINEAR_NV");
#endif
#if defined(GL_OBJECT_LINEAR_NV)
defconsti(env, "GL-OBJECT-LINEAR-NV", (GLenum) GL_OBJECT_LINEAR_NV, "GL_OBJECT_LINEAR_NV");
#endif
#if defined(GL_CONSTANT_NV)
defconsti(env, "GL-CONSTANT-NV", (GLenum) GL_CONSTANT_NV, "GL_CONSTANT_NV");
#endif
#if defined(GL_PATH_FOG_GEN_MODE_NV)
defconsti(env, "GL-PATH-FOG-GEN-MODE-NV", (GLenum) GL_PATH_FOG_GEN_MODE_NV, "GL_PATH_FOG_GEN_MODE_NV");
#endif
#if defined(GL_PRIMARY_COLOR)
defconsti(env, "GL-PRIMARY-COLOR", (GLenum) GL_PRIMARY_COLOR, "GL_PRIMARY_COLOR");
#endif
#if defined(GL_PRIMARY_COLOR_NV)
defconsti(env, "GL-PRIMARY-COLOR-NV", (GLenum) GL_PRIMARY_COLOR_NV, "GL_PRIMARY_COLOR_NV");
#endif
#if defined(GL_SECONDARY_COLOR_NV)
defconsti(env, "GL-SECONDARY-COLOR-NV", (GLenum) GL_SECONDARY_COLOR_NV, "GL_SECONDARY_COLOR_NV");
#endif
#if defined(GL_PATH_GEN_COLOR_FORMAT_NV)
defconsti(env, "GL-PATH-GEN-COLOR-FORMAT-NV", (GLenum) GL_PATH_GEN_COLOR_FORMAT_NV, "GL_PATH_GEN_COLOR_FORMAT_NV");
#endif
#if defined(GL_PATH_PROJECTION_NV)
defconsti(env, "GL-PATH-PROJECTION-NV", (GLenum) GL_PATH_PROJECTION_NV, "GL_PATH_PROJECTION_NV");
#endif
#if defined(GL_PATH_MODELVIEW_NV)
defconsti(env, "GL-PATH-MODELVIEW-NV", (GLenum) GL_PATH_MODELVIEW_NV, "GL_PATH_MODELVIEW_NV");
#endif
#if defined(GL_PATH_MODELVIEW_STACK_DEPTH_NV)
defconsti(env, "GL-PATH-MODELVIEW-STACK-DEPTH-NV", (GLenum) GL_PATH_MODELVIEW_STACK_DEPTH_NV, "GL_PATH_MODELVIEW_STACK_DEPTH_NV");
#endif
#if defined(GL_PATH_MODELVIEW_MATRIX_NV)
defconsti(env, "GL-PATH-MODELVIEW-MATRIX-NV", (GLenum) GL_PATH_MODELVIEW_MATRIX_NV, "GL_PATH_MODELVIEW_MATRIX_NV");
#endif
#if defined(GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV)
defconsti(env, "GL-PATH-MAX-MODELVIEW-STACK-DEPTH-NV", (GLenum) GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV, "GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV");
#endif
#if defined(GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV)
defconsti(env, "GL-PATH-TRANSPOSE-MODELVIEW-MATRIX-NV", (GLenum) GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV, "GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV");
#endif
#if defined(GL_PATH_PROJECTION_STACK_DEPTH_NV)
defconsti(env, "GL-PATH-PROJECTION-STACK-DEPTH-NV", (GLenum) GL_PATH_PROJECTION_STACK_DEPTH_NV, "GL_PATH_PROJECTION_STACK_DEPTH_NV");
#endif
#if defined(GL_PATH_PROJECTION_MATRIX_NV)
defconsti(env, "GL-PATH-PROJECTION-MATRIX-NV", (GLenum) GL_PATH_PROJECTION_MATRIX_NV, "GL_PATH_PROJECTION_MATRIX_NV");
#endif
#if defined(GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV)
defconsti(env, "GL-PATH-MAX-PROJECTION-STACK-DEPTH-NV", (GLenum) GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV, "GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV");
#endif
#if defined(GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV)
defconsti(env, "GL-PATH-TRANSPOSE-PROJECTION-MATRIX-NV", (GLenum) GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV, "GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV");
#endif
#if defined(GL_FRAGMENT_INPUT_NV)
defconsti(env, "GL-FRAGMENT-INPUT-NV", (GLenum) GL_FRAGMENT_INPUT_NV, "GL_FRAGMENT_INPUT_NV");
#endif
#if defined(GL_SHARED_EDGE_NV)
defconsti(env, "GL-SHARED-EDGE-NV", (GLenum) GL_SHARED_EDGE_NV, "GL_SHARED_EDGE_NV");
#endif
#if defined(GL_WRITE_PIXEL_DATA_RANGE_NV)
defconsti(env, "GL-WRITE-PIXEL-DATA-RANGE-NV", (GLenum) GL_WRITE_PIXEL_DATA_RANGE_NV, "GL_WRITE_PIXEL_DATA_RANGE_NV");
#endif
#if defined(GL_READ_PIXEL_DATA_RANGE_NV)
defconsti(env, "GL-READ-PIXEL-DATA-RANGE-NV", (GLenum) GL_READ_PIXEL_DATA_RANGE_NV, "GL_READ_PIXEL_DATA_RANGE_NV");
#endif
#if defined(GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV)
defconsti(env, "GL-WRITE-PIXEL-DATA-RANGE-LENGTH-NV", (GLenum) GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV, "GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV");
#endif
#if defined(GL_READ_PIXEL_DATA_RANGE_LENGTH_NV)
defconsti(env, "GL-READ-PIXEL-DATA-RANGE-LENGTH-NV", (GLenum) GL_READ_PIXEL_DATA_RANGE_LENGTH_NV, "GL_READ_PIXEL_DATA_RANGE_LENGTH_NV");
#endif
#if defined(GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV)
defconsti(env, "GL-WRITE-PIXEL-DATA-RANGE-POINTER-NV", (GLenum) GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV, "GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV");
#endif
#if defined(GL_READ_PIXEL_DATA_RANGE_POINTER_NV)
defconsti(env, "GL-READ-PIXEL-DATA-RANGE-POINTER-NV", (GLenum) GL_READ_PIXEL_DATA_RANGE_POINTER_NV, "GL_READ_PIXEL_DATA_RANGE_POINTER_NV");
#endif
#if defined(GL_PIXEL_PACK_BUFFER_NV)
defconsti(env, "GL-PIXEL-PACK-BUFFER-NV", (GLenum) GL_PIXEL_PACK_BUFFER_NV, "GL_PIXEL_PACK_BUFFER_NV");
#endif
#if defined(GL_PIXEL_UNPACK_BUFFER_NV)
defconsti(env, "GL-PIXEL-UNPACK-BUFFER-NV", (GLenum) GL_PIXEL_UNPACK_BUFFER_NV, "GL_PIXEL_UNPACK_BUFFER_NV");
#endif
#if defined(GL_PIXEL_PACK_BUFFER_BINDING_NV)
defconsti(env, "GL-PIXEL-PACK-BUFFER-BINDING-NV", (GLenum) GL_PIXEL_PACK_BUFFER_BINDING_NV, "GL_PIXEL_PACK_BUFFER_BINDING_NV");
#endif
#if defined(GL_PIXEL_UNPACK_BUFFER_BINDING_NV)
defconsti(env, "GL-PIXEL-UNPACK-BUFFER-BINDING-NV", (GLenum) GL_PIXEL_UNPACK_BUFFER_BINDING_NV, "GL_PIXEL_UNPACK_BUFFER_BINDING_NV");
#endif
#if defined(GL_POINT_SPRITE_NV)
defconsti(env, "GL-POINT-SPRITE-NV", (GLenum) GL_POINT_SPRITE_NV, "GL_POINT_SPRITE_NV");
#endif
#if defined(GL_COORD_REPLACE_NV)
defconsti(env, "GL-COORD-REPLACE-NV", (GLenum) GL_COORD_REPLACE_NV, "GL_COORD_REPLACE_NV");
#endif
#if defined(GL_POINT_SPRITE_R_MODE_NV)
defconsti(env, "GL-POINT-SPRITE-R-MODE-NV", (GLenum) GL_POINT_SPRITE_R_MODE_NV, "GL_POINT_SPRITE_R_MODE_NV");
#endif
#if defined(GL_POLYGON_MODE_NV)
defconsti(env, "GL-POLYGON-MODE-NV", (GLenum) GL_POLYGON_MODE_NV, "GL_POLYGON_MODE_NV");
#endif
#if defined(GL_POLYGON_OFFSET_POINT_NV)
defconsti(env, "GL-POLYGON-OFFSET-POINT-NV", (GLenum) GL_POLYGON_OFFSET_POINT_NV, "GL_POLYGON_OFFSET_POINT_NV");
#endif
#if defined(GL_POLYGON_OFFSET_LINE_NV)
defconsti(env, "GL-POLYGON-OFFSET-LINE-NV", (GLenum) GL_POLYGON_OFFSET_LINE_NV, "GL_POLYGON_OFFSET_LINE_NV");
#endif
#if defined(GL_POINT_NV)
defconsti(env, "GL-POINT-NV", (GLenum) GL_POINT_NV, "GL_POINT_NV");
#endif
#if defined(GL_LINE_NV)
defconsti(env, "GL-LINE-NV", (GLenum) GL_LINE_NV, "GL_LINE_NV");
#endif
#if defined(GL_FILL_NV)
defconsti(env, "GL-FILL-NV", (GLenum) GL_FILL_NV, "GL_FILL_NV");
#endif
#if defined(GL_FRAME_NV)
defconsti(env, "GL-FRAME-NV", (GLenum) GL_FRAME_NV, "GL_FRAME_NV");
#endif
#if defined(GL_FIELDS_NV)
defconsti(env, "GL-FIELDS-NV", (GLenum) GL_FIELDS_NV, "GL_FIELDS_NV");
#endif
#if defined(GL_CURRENT_TIME_NV)
defconsti(env, "GL-CURRENT-TIME-NV", (GLenum) GL_CURRENT_TIME_NV, "GL_CURRENT_TIME_NV");
#endif
#if defined(GL_NUM_FILL_STREAMS_NV)
defconsti(env, "GL-NUM-FILL-STREAMS-NV", (GLenum) GL_NUM_FILL_STREAMS_NV, "GL_NUM_FILL_STREAMS_NV");
#endif
#if defined(GL_PRESENT_TIME_NV)
defconsti(env, "GL-PRESENT-TIME-NV", (GLenum) GL_PRESENT_TIME_NV, "GL_PRESENT_TIME_NV");
#endif
#if defined(GL_PRESENT_DURATION_NV)
defconsti(env, "GL-PRESENT-DURATION-NV", (GLenum) GL_PRESENT_DURATION_NV, "GL_PRESENT_DURATION_NV");
#endif
#if defined(GL_PRIMITIVE_RESTART_NV)
defconsti(env, "GL-PRIMITIVE-RESTART-NV", (GLenum) GL_PRIMITIVE_RESTART_NV, "GL_PRIMITIVE_RESTART_NV");
#endif
#if defined(GL_PRIMITIVE_RESTART_INDEX_NV)
defconsti(env, "GL-PRIMITIVE-RESTART-INDEX-NV", (GLenum) GL_PRIMITIVE_RESTART_INDEX_NV, "GL_PRIMITIVE_RESTART_INDEX_NV");
#endif
#if defined(GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV)
defconsti(env, "GL-SHADING-RATE-IMAGE-PER-PRIMITIVE-NV", (GLenum) GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV, "GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV");
#endif
#if defined(GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV)
defconsti(env, "GL-SHADING-RATE-IMAGE-PALETTE-COUNT-NV", (GLenum) GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV, "GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV");
#endif
#if defined(GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV)
defconsti(env, "GL-QUERY-RESOURCE-TYPE-VIDMEM-ALLOC-NV", (GLenum) GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV, "GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV");
#endif
#if defined(GL_QUERY_RESOURCE_MEMTYPE_VIDMEM_NV)
defconsti(env, "GL-QUERY-RESOURCE-MEMTYPE-VIDMEM-NV", (GLenum) GL_QUERY_RESOURCE_MEMTYPE_VIDMEM_NV, "GL_QUERY_RESOURCE_MEMTYPE_VIDMEM_NV");
#endif
#if defined(GL_QUERY_RESOURCE_SYS_RESERVED_NV)
defconsti(env, "GL-QUERY-RESOURCE-SYS-RESERVED-NV", (GLenum) GL_QUERY_RESOURCE_SYS_RESERVED_NV, "GL_QUERY_RESOURCE_SYS_RESERVED_NV");
#endif
#if defined(GL_QUERY_RESOURCE_TEXTURE_NV)
defconsti(env, "GL-QUERY-RESOURCE-TEXTURE-NV", (GLenum) GL_QUERY_RESOURCE_TEXTURE_NV, "GL_QUERY_RESOURCE_TEXTURE_NV");
#endif
#if defined(GL_QUERY_RESOURCE_RENDERBUFFER_NV)
defconsti(env, "GL-QUERY-RESOURCE-RENDERBUFFER-NV", (GLenum) GL_QUERY_RESOURCE_RENDERBUFFER_NV, "GL_QUERY_RESOURCE_RENDERBUFFER_NV");
#endif
#if defined(GL_QUERY_RESOURCE_BUFFEROBJECT_NV)
defconsti(env, "GL-QUERY-RESOURCE-BUFFEROBJECT-NV", (GLenum) GL_QUERY_RESOURCE_BUFFEROBJECT_NV, "GL_QUERY_RESOURCE_BUFFEROBJECT_NV");
#endif
#if defined(GL_READ_BUFFER_NV)
defconsti(env, "GL-READ-BUFFER-NV", (GLenum) GL_READ_BUFFER_NV, "GL_READ_BUFFER_NV");
#endif
#if defined(GL_REGISTER_COMBINERS_NV)
defconsti(env, "GL-REGISTER-COMBINERS-NV", (GLenum) GL_REGISTER_COMBINERS_NV, "GL_REGISTER_COMBINERS_NV");
#endif
#if defined(GL_VARIABLE_A_NV)
defconsti(env, "GL-VARIABLE-A-NV", (GLenum) GL_VARIABLE_A_NV, "GL_VARIABLE_A_NV");
#endif
#if defined(GL_VARIABLE_B_NV)
defconsti(env, "GL-VARIABLE-B-NV", (GLenum) GL_VARIABLE_B_NV, "GL_VARIABLE_B_NV");
#endif
#if defined(GL_VARIABLE_C_NV)
defconsti(env, "GL-VARIABLE-C-NV", (GLenum) GL_VARIABLE_C_NV, "GL_VARIABLE_C_NV");
#endif
#if defined(GL_VARIABLE_D_NV)
defconsti(env, "GL-VARIABLE-D-NV", (GLenum) GL_VARIABLE_D_NV, "GL_VARIABLE_D_NV");
#endif
#if defined(GL_VARIABLE_E_NV)
defconsti(env, "GL-VARIABLE-E-NV", (GLenum) GL_VARIABLE_E_NV, "GL_VARIABLE_E_NV");
#endif
#if defined(GL_VARIABLE_F_NV)
defconsti(env, "GL-VARIABLE-F-NV", (GLenum) GL_VARIABLE_F_NV, "GL_VARIABLE_F_NV");
#endif
#if defined(GL_VARIABLE_G_NV)
defconsti(env, "GL-VARIABLE-G-NV", (GLenum) GL_VARIABLE_G_NV, "GL_VARIABLE_G_NV");
#endif
#if defined(GL_CONSTANT_COLOR0_NV)
defconsti(env, "GL-CONSTANT-COLOR0-NV", (GLenum) GL_CONSTANT_COLOR0_NV, "GL_CONSTANT_COLOR0_NV");
#endif
#if defined(GL_CONSTANT_COLOR1_NV)
defconsti(env, "GL-CONSTANT-COLOR1-NV", (GLenum) GL_CONSTANT_COLOR1_NV, "GL_CONSTANT_COLOR1_NV");
#endif
#if defined(GL_PRIMARY_COLOR_NV)
defconsti(env, "GL-PRIMARY-COLOR-NV", (GLenum) GL_PRIMARY_COLOR_NV, "GL_PRIMARY_COLOR_NV");
#endif
#if defined(GL_SECONDARY_COLOR_NV)
defconsti(env, "GL-SECONDARY-COLOR-NV", (GLenum) GL_SECONDARY_COLOR_NV, "GL_SECONDARY_COLOR_NV");
#endif
#if defined(GL_SPARE0_NV)
defconsti(env, "GL-SPARE0-NV", (GLenum) GL_SPARE0_NV, "GL_SPARE0_NV");
#endif
#if defined(GL_SPARE1_NV)
defconsti(env, "GL-SPARE1-NV", (GLenum) GL_SPARE1_NV, "GL_SPARE1_NV");
#endif
#if defined(GL_DISCARD_NV)
defconsti(env, "GL-DISCARD-NV", (GLenum) GL_DISCARD_NV, "GL_DISCARD_NV");
#endif
#if defined(GL_E_TIMES_F_NV)
defconsti(env, "GL-E-TIMES-F-NV", (GLenum) GL_E_TIMES_F_NV, "GL_E_TIMES_F_NV");
#endif
#if defined(GL_SPARE0_PLUS_SECONDARY_COLOR_NV)
defconsti(env, "GL-SPARE0-PLUS-SECONDARY-COLOR-NV", (GLenum) GL_SPARE0_PLUS_SECONDARY_COLOR_NV, "GL_SPARE0_PLUS_SECONDARY_COLOR_NV");
#endif
#if defined(GL_UNSIGNED_IDENTITY_NV)
defconsti(env, "GL-UNSIGNED-IDENTITY-NV", (GLenum) GL_UNSIGNED_IDENTITY_NV, "GL_UNSIGNED_IDENTITY_NV");
#endif
#if defined(GL_UNSIGNED_INVERT_NV)
defconsti(env, "GL-UNSIGNED-INVERT-NV", (GLenum) GL_UNSIGNED_INVERT_NV, "GL_UNSIGNED_INVERT_NV");
#endif
#if defined(GL_EXPAND_NORMAL_NV)
defconsti(env, "GL-EXPAND-NORMAL-NV", (GLenum) GL_EXPAND_NORMAL_NV, "GL_EXPAND_NORMAL_NV");
#endif
#if defined(GL_EXPAND_NEGATE_NV)
defconsti(env, "GL-EXPAND-NEGATE-NV", (GLenum) GL_EXPAND_NEGATE_NV, "GL_EXPAND_NEGATE_NV");
#endif
#if defined(GL_HALF_BIAS_NORMAL_NV)
defconsti(env, "GL-HALF-BIAS-NORMAL-NV", (GLenum) GL_HALF_BIAS_NORMAL_NV, "GL_HALF_BIAS_NORMAL_NV");
#endif
#if defined(GL_HALF_BIAS_NEGATE_NV)
defconsti(env, "GL-HALF-BIAS-NEGATE-NV", (GLenum) GL_HALF_BIAS_NEGATE_NV, "GL_HALF_BIAS_NEGATE_NV");
#endif
#if defined(GL_SIGNED_IDENTITY_NV)
defconsti(env, "GL-SIGNED-IDENTITY-NV", (GLenum) GL_SIGNED_IDENTITY_NV, "GL_SIGNED_IDENTITY_NV");
#endif
#if defined(GL_SIGNED_NEGATE_NV)
defconsti(env, "GL-SIGNED-NEGATE-NV", (GLenum) GL_SIGNED_NEGATE_NV, "GL_SIGNED_NEGATE_NV");
#endif
#if defined(GL_SCALE_BY_TWO_NV)
defconsti(env, "GL-SCALE-BY-TWO-NV", (GLenum) GL_SCALE_BY_TWO_NV, "GL_SCALE_BY_TWO_NV");
#endif
#if defined(GL_SCALE_BY_FOUR_NV)
defconsti(env, "GL-SCALE-BY-FOUR-NV", (GLenum) GL_SCALE_BY_FOUR_NV, "GL_SCALE_BY_FOUR_NV");
#endif
#if defined(GL_SCALE_BY_ONE_HALF_NV)
defconsti(env, "GL-SCALE-BY-ONE-HALF-NV", (GLenum) GL_SCALE_BY_ONE_HALF_NV, "GL_SCALE_BY_ONE_HALF_NV");
#endif
#if defined(GL_BIAS_BY_NEGATIVE_ONE_HALF_NV)
defconsti(env, "GL-BIAS-BY-NEGATIVE-ONE-HALF-NV", (GLenum) GL_BIAS_BY_NEGATIVE_ONE_HALF_NV, "GL_BIAS_BY_NEGATIVE_ONE_HALF_NV");
#endif
#if defined(GL_COMBINER_INPUT_NV)
defconsti(env, "GL-COMBINER-INPUT-NV", (GLenum) GL_COMBINER_INPUT_NV, "GL_COMBINER_INPUT_NV");
#endif
#if defined(GL_COMBINER_MAPPING_NV)
defconsti(env, "GL-COMBINER-MAPPING-NV", (GLenum) GL_COMBINER_MAPPING_NV, "GL_COMBINER_MAPPING_NV");
#endif
#if defined(GL_COMBINER_COMPONENT_USAGE_NV)
defconsti(env, "GL-COMBINER-COMPONENT-USAGE-NV", (GLenum) GL_COMBINER_COMPONENT_USAGE_NV, "GL_COMBINER_COMPONENT_USAGE_NV");
#endif
#if defined(GL_COMBINER_AB_DOT_PRODUCT_NV)
defconsti(env, "GL-COMBINER-AB-DOT-PRODUCT-NV", (GLenum) GL_COMBINER_AB_DOT_PRODUCT_NV, "GL_COMBINER_AB_DOT_PRODUCT_NV");
#endif
#if defined(GL_COMBINER_CD_DOT_PRODUCT_NV)
defconsti(env, "GL-COMBINER-CD-DOT-PRODUCT-NV", (GLenum) GL_COMBINER_CD_DOT_PRODUCT_NV, "GL_COMBINER_CD_DOT_PRODUCT_NV");
#endif
#if defined(GL_COMBINER_MUX_SUM_NV)
defconsti(env, "GL-COMBINER-MUX-SUM-NV", (GLenum) GL_COMBINER_MUX_SUM_NV, "GL_COMBINER_MUX_SUM_NV");
#endif
#if defined(GL_COMBINER_SCALE_NV)
defconsti(env, "GL-COMBINER-SCALE-NV", (GLenum) GL_COMBINER_SCALE_NV, "GL_COMBINER_SCALE_NV");
#endif
#if defined(GL_COMBINER_BIAS_NV)
defconsti(env, "GL-COMBINER-BIAS-NV", (GLenum) GL_COMBINER_BIAS_NV, "GL_COMBINER_BIAS_NV");
#endif
#if defined(GL_COMBINER_AB_OUTPUT_NV)
defconsti(env, "GL-COMBINER-AB-OUTPUT-NV", (GLenum) GL_COMBINER_AB_OUTPUT_NV, "GL_COMBINER_AB_OUTPUT_NV");
#endif
#if defined(GL_COMBINER_CD_OUTPUT_NV)
defconsti(env, "GL-COMBINER-CD-OUTPUT-NV", (GLenum) GL_COMBINER_CD_OUTPUT_NV, "GL_COMBINER_CD_OUTPUT_NV");
#endif
#if defined(GL_COMBINER_SUM_OUTPUT_NV)
defconsti(env, "GL-COMBINER-SUM-OUTPUT-NV", (GLenum) GL_COMBINER_SUM_OUTPUT_NV, "GL_COMBINER_SUM_OUTPUT_NV");
#endif
#if defined(GL_MAX_GENERAL_COMBINERS_NV)
defconsti(env, "GL-MAX-GENERAL-COMBINERS-NV", (GLenum) GL_MAX_GENERAL_COMBINERS_NV, "GL_MAX_GENERAL_COMBINERS_NV");
#endif
#if defined(GL_NUM_GENERAL_COMBINERS_NV)
defconsti(env, "GL-NUM-GENERAL-COMBINERS-NV", (GLenum) GL_NUM_GENERAL_COMBINERS_NV, "GL_NUM_GENERAL_COMBINERS_NV");
#endif
#if defined(GL_COLOR_SUM_CLAMP_NV)
defconsti(env, "GL-COLOR-SUM-CLAMP-NV", (GLenum) GL_COLOR_SUM_CLAMP_NV, "GL_COLOR_SUM_CLAMP_NV");
#endif
#if defined(GL_COMBINER0_NV)
defconsti(env, "GL-COMBINER0-NV", (GLenum) GL_COMBINER0_NV, "GL_COMBINER0_NV");
#endif
#if defined(GL_COMBINER1_NV)
defconsti(env, "GL-COMBINER1-NV", (GLenum) GL_COMBINER1_NV, "GL_COMBINER1_NV");
#endif
#if defined(GL_COMBINER2_NV)
defconsti(env, "GL-COMBINER2-NV", (GLenum) GL_COMBINER2_NV, "GL_COMBINER2_NV");
#endif
#if defined(GL_COMBINER3_NV)
defconsti(env, "GL-COMBINER3-NV", (GLenum) GL_COMBINER3_NV, "GL_COMBINER3_NV");
#endif
#if defined(GL_COMBINER4_NV)
defconsti(env, "GL-COMBINER4-NV", (GLenum) GL_COMBINER4_NV, "GL_COMBINER4_NV");
#endif
#if defined(GL_COMBINER5_NV)
defconsti(env, "GL-COMBINER5-NV", (GLenum) GL_COMBINER5_NV, "GL_COMBINER5_NV");
#endif
#if defined(GL_COMBINER6_NV)
defconsti(env, "GL-COMBINER6-NV", (GLenum) GL_COMBINER6_NV, "GL_COMBINER6_NV");
#endif
#if defined(GL_COMBINER7_NV)
defconsti(env, "GL-COMBINER7-NV", (GLenum) GL_COMBINER7_NV, "GL_COMBINER7_NV");
#endif
#if defined(GL_TEXTURE0_ARB)
defconsti(env, "GL-TEXTURE0-ARB", (GLenum) GL_TEXTURE0_ARB, "GL_TEXTURE0_ARB");
#endif
#if defined(GL_TEXTURE1_ARB)
defconsti(env, "GL-TEXTURE1-ARB", (GLenum) GL_TEXTURE1_ARB, "GL_TEXTURE1_ARB");
#endif
#if defined(GL_ZERO)
defconsti(env, "GL-ZERO", (GLenum) GL_ZERO, "GL_ZERO");
#endif
#if defined(GL_NONE)
defconsti(env, "GL-NONE", (GLenum) GL_NONE, "GL_NONE");
#endif
#if defined(GL_FOG)
defconsti(env, "GL-FOG", (GLenum) GL_FOG, "GL_FOG");
#endif
#if defined(GL_PER_STAGE_CONSTANTS_NV)
defconsti(env, "GL-PER-STAGE-CONSTANTS-NV", (GLenum) GL_PER_STAGE_CONSTANTS_NV, "GL_PER_STAGE_CONSTANTS_NV");
#endif
#if defined(GL_REPRESENTATIVE_FRAGMENT_TEST_NV)
defconsti(env, "GL-REPRESENTATIVE-FRAGMENT-TEST-NV", (GLenum) GL_REPRESENTATIVE_FRAGMENT_TEST_NV, "GL_REPRESENTATIVE_FRAGMENT_TEST_NV");
#endif
#if defined(GL_PURGED_CONTEXT_RESET_NV)
defconsti(env, "GL-PURGED-CONTEXT-RESET-NV", (GLenum) GL_PURGED_CONTEXT_RESET_NV, "GL_PURGED_CONTEXT_RESET_NV");
#endif
#if defined(GL_SLUMINANCE_NV)
defconsti(env, "GL-SLUMINANCE-NV", (GLenum) GL_SLUMINANCE_NV, "GL_SLUMINANCE_NV");
#endif
#if defined(GL_SLUMINANCE_ALPHA_NV)
defconsti(env, "GL-SLUMINANCE-ALPHA-NV", (GLenum) GL_SLUMINANCE_ALPHA_NV, "GL_SLUMINANCE_ALPHA_NV");
#endif
#if defined(GL_SRGB8_NV)
defconsti(env, "GL-SRGB8-NV", (GLenum) GL_SRGB8_NV, "GL_SRGB8_NV");
#endif
#if defined(GL_SLUMINANCE8_NV)
defconsti(env, "GL-SLUMINANCE8-NV", (GLenum) GL_SLUMINANCE8_NV, "GL_SLUMINANCE8_NV");
#endif
#if defined(GL_SLUMINANCE8_ALPHA8_NV)
defconsti(env, "GL-SLUMINANCE8-ALPHA8-NV", (GLenum) GL_SLUMINANCE8_ALPHA8_NV, "GL_SLUMINANCE8_ALPHA8_NV");
#endif
#if defined(GL_COMPRESSED_SRGB_S3TC_DXT1_NV)
defconsti(env, "GL-COMPRESSED-SRGB-S3TC-DXT1-NV", (GLenum) GL_COMPRESSED_SRGB_S3TC_DXT1_NV, "GL_COMPRESSED_SRGB_S3TC_DXT1_NV");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-S3TC-DXT1-NV", (GLenum) GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV, "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-S3TC-DXT3-NV", (GLenum) GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV, "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV");
#endif
#if defined(GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV)
defconsti(env, "GL-COMPRESSED-SRGB-ALPHA-S3TC-DXT5-NV", (GLenum) GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV, "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV");
#endif
#if defined(GL_ETC1_SRGB8_NV)
defconsti(env, "GL-ETC1-SRGB8-NV", (GLenum) GL_ETC1_SRGB8_NV, "GL_ETC1_SRGB8_NV");
#endif
#if defined(GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV)
defconsti(env, "GL-SAMPLE-LOCATION-SUBPIXEL-BITS-NV", (GLenum) GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV, "GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV");
#endif
#if defined(GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV)
defconsti(env, "GL-SAMPLE-LOCATION-PIXEL-GRID-WIDTH-NV", (GLenum) GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV, "GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV");
#endif
#if defined(GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV)
defconsti(env, "GL-SAMPLE-LOCATION-PIXEL-GRID-HEIGHT-NV", (GLenum) GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV, "GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV");
#endif
#if defined(GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV)
defconsti(env, "GL-PROGRAMMABLE-SAMPLE-LOCATION-TABLE-SIZE-NV", (GLenum) GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV, "GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV");
#endif
#if defined(GL_SAMPLE_LOCATION_NV)
defconsti(env, "GL-SAMPLE-LOCATION-NV", (GLenum) GL_SAMPLE_LOCATION_NV, "GL_SAMPLE_LOCATION_NV");
#endif
#if defined(GL_PROGRAMMABLE_SAMPLE_LOCATION_NV)
defconsti(env, "GL-PROGRAMMABLE-SAMPLE-LOCATION-NV", (GLenum) GL_PROGRAMMABLE_SAMPLE_LOCATION_NV, "GL_PROGRAMMABLE_SAMPLE_LOCATION_NV");
#endif
#if defined(GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV)
defconsti(env, "GL-FRAMEBUFFER-PROGRAMMABLE-SAMPLE-LOCATIONS-NV", (GLenum) GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV, "GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV");
#endif
#if defined(GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV)
defconsti(env, "GL-FRAMEBUFFER-SAMPLE-LOCATION-PIXEL-GRID-NV", (GLenum) GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV, "GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV");
#endif
#if defined(GL_SCISSOR_TEST_EXCLUSIVE_NV)
defconsti(env, "GL-SCISSOR-TEST-EXCLUSIVE-NV", (GLenum) GL_SCISSOR_TEST_EXCLUSIVE_NV, "GL_SCISSOR_TEST_EXCLUSIVE_NV");
#endif
#if defined(GL_SCISSOR_BOX_EXCLUSIVE_NV)
defconsti(env, "GL-SCISSOR-BOX-EXCLUSIVE-NV", (GLenum) GL_SCISSOR_BOX_EXCLUSIVE_NV, "GL_SCISSOR_BOX_EXCLUSIVE_NV");
#endif
#if defined(GL_BUFFER_GPU_ADDRESS_NV)
defconsti(env, "GL-BUFFER-GPU-ADDRESS-NV", (GLenum) GL_BUFFER_GPU_ADDRESS_NV, "GL_BUFFER_GPU_ADDRESS_NV");
#endif
#if defined(GL_GPU_ADDRESS_NV)
defconsti(env, "GL-GPU-ADDRESS-NV", (GLenum) GL_GPU_ADDRESS_NV, "GL_GPU_ADDRESS_NV");
#endif
#if defined(GL_MAX_SHADER_BUFFER_ADDRESS_NV)
defconsti(env, "GL-MAX-SHADER-BUFFER-ADDRESS-NV", (GLenum) GL_MAX_SHADER_BUFFER_ADDRESS_NV, "GL_MAX_SHADER_BUFFER_ADDRESS_NV");
#endif
#if defined(GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV)
defconsti(env, "GL-SHADER-GLOBAL-ACCESS-BARRIER-BIT-NV", (GLenum) GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV, "GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV");
#endif
#if defined(GL_READ_WRITE)
defconsti(env, "GL-READ-WRITE", (GLenum) GL_READ_WRITE, "GL_READ_WRITE");
#endif
#if defined(GL_WRITE_ONLY)
defconsti(env, "GL-WRITE-ONLY", (GLenum) GL_WRITE_ONLY, "GL_WRITE_ONLY");
#endif
#if defined(GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV)
defconsti(env, "GL-SUBGROUP-FEATURE-PARTITIONED-BIT-NV", (GLenum) GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV, "GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV");
#endif
#if defined(GL_WARP_SIZE_NV)
defconsti(env, "GL-WARP-SIZE-NV", (GLenum) GL_WARP_SIZE_NV, "GL_WARP_SIZE_NV");
#endif
#if defined(GL_WARPS_PER_SM_NV)
defconsti(env, "GL-WARPS-PER-SM-NV", (GLenum) GL_WARPS_PER_SM_NV, "GL_WARPS_PER_SM_NV");
#endif
#if defined(GL_SM_COUNT_NV)
defconsti(env, "GL-SM-COUNT-NV", (GLenum) GL_SM_COUNT_NV, "GL_SM_COUNT_NV");
#endif
#if defined(GL_SHADING_RATE_IMAGE_NV)
defconsti(env, "GL-SHADING-RATE-IMAGE-NV", (GLenum) GL_SHADING_RATE_IMAGE_NV, "GL_SHADING_RATE_IMAGE_NV");
#endif
#if defined(GL_SHADING_RATE_NO_INVOCATIONS_NV)
defconsti(env, "GL-SHADING-RATE-NO-INVOCATIONS-NV", (GLenum) GL_SHADING_RATE_NO_INVOCATIONS_NV, "GL_SHADING_RATE_NO_INVOCATIONS_NV");
#endif
#if defined(GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV)
defconsti(env, "GL-SHADING-RATE-1-INVOCATION-PER-PIXEL-NV", (GLenum) GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV, "GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV");
#endif
#if defined(GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV)
defconsti(env, "GL-SHADING-RATE-1-INVOCATION-PER-1X2-PIXELS-NV", (GLenum) GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV, "GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV");
#endif
#if defined(GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV)
defconsti(env, "GL-SHADING-RATE-1-INVOCATION-PER-2X1-PIXELS-NV", (GLenum) GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV, "GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV");
#endif
#if defined(GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV)
defconsti(env, "GL-SHADING-RATE-1-INVOCATION-PER-2X2-PIXELS-NV", (GLenum) GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV, "GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV");
#endif
#if defined(GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV)
defconsti(env, "GL-SHADING-RATE-1-INVOCATION-PER-2X4-PIXELS-NV", (GLenum) GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV, "GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV");
#endif
#if defined(GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV)
defconsti(env, "GL-SHADING-RATE-1-INVOCATION-PER-4X2-PIXELS-NV", (GLenum) GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV, "GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV");
#endif
#if defined(GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV)
defconsti(env, "GL-SHADING-RATE-1-INVOCATION-PER-4X4-PIXELS-NV", (GLenum) GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV, "GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV");
#endif
#if defined(GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV)
defconsti(env, "GL-SHADING-RATE-2-INVOCATIONS-PER-PIXEL-NV", (GLenum) GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV, "GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV");
#endif
#if defined(GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV)
defconsti(env, "GL-SHADING-RATE-4-INVOCATIONS-PER-PIXEL-NV", (GLenum) GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV, "GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV");
#endif
#if defined(GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV)
defconsti(env, "GL-SHADING-RATE-8-INVOCATIONS-PER-PIXEL-NV", (GLenum) GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV, "GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV");
#endif
#if defined(GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV)
defconsti(env, "GL-SHADING-RATE-16-INVOCATIONS-PER-PIXEL-NV", (GLenum) GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV, "GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV");
#endif
#if defined(GL_SHADING_RATE_IMAGE_BINDING_NV)
defconsti(env, "GL-SHADING-RATE-IMAGE-BINDING-NV", (GLenum) GL_SHADING_RATE_IMAGE_BINDING_NV, "GL_SHADING_RATE_IMAGE_BINDING_NV");
#endif
#if defined(GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV)
defconsti(env, "GL-SHADING-RATE-IMAGE-TEXEL-WIDTH-NV", (GLenum) GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV, "GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV");
#endif
#if defined(GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV)
defconsti(env, "GL-SHADING-RATE-IMAGE-TEXEL-HEIGHT-NV", (GLenum) GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV, "GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV");
#endif
#if defined(GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV)
defconsti(env, "GL-SHADING-RATE-IMAGE-PALETTE-SIZE-NV", (GLenum) GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV, "GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV");
#endif
#if defined(GL_MAX_COARSE_FRAGMENT_SAMPLES_NV)
defconsti(env, "GL-MAX-COARSE-FRAGMENT-SAMPLES-NV", (GLenum) GL_MAX_COARSE_FRAGMENT_SAMPLES_NV, "GL_MAX_COARSE_FRAGMENT_SAMPLES_NV");
#endif
#if defined(GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV)
defconsti(env, "GL-SHADING-RATE-SAMPLE-ORDER-DEFAULT-NV", (GLenum) GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV, "GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV");
#endif
#if defined(GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV)
defconsti(env, "GL-SHADING-RATE-SAMPLE-ORDER-PIXEL-MAJOR-NV", (GLenum) GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV, "GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV");
#endif
#if defined(GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV)
defconsti(env, "GL-SHADING-RATE-SAMPLE-ORDER-SAMPLE-MAJOR-NV", (GLenum) GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV, "GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV");
#endif
#if defined(GL_SAMPLER_2D_ARRAY_SHADOW_NV)
defconsti(env, "GL-SAMPLER-2D-ARRAY-SHADOW-NV", (GLenum) GL_SAMPLER_2D_ARRAY_SHADOW_NV, "GL_SAMPLER_2D_ARRAY_SHADOW_NV");
#endif
#if defined(GL_SAMPLER_CUBE_SHADOW_NV)
defconsti(env, "GL-SAMPLER-CUBE-SHADOW-NV", (GLenum) GL_SAMPLER_CUBE_SHADOW_NV, "GL_SAMPLER_CUBE_SHADOW_NV");
#endif
#if defined(GL_MAX_PROGRAM_PATCH_ATTRIBS_NV)
defconsti(env, "GL-MAX-PROGRAM-PATCH-ATTRIBS-NV", (GLenum) GL_MAX_PROGRAM_PATCH_ATTRIBS_NV, "GL_MAX_PROGRAM_PATCH_ATTRIBS_NV");
#endif
#if defined(GL_TESS_CONTROL_PROGRAM_NV)
defconsti(env, "GL-TESS-CONTROL-PROGRAM-NV", (GLenum) GL_TESS_CONTROL_PROGRAM_NV, "GL_TESS_CONTROL_PROGRAM_NV");
#endif
#if defined(GL_TESS_EVALUATION_PROGRAM_NV)
defconsti(env, "GL-TESS-EVALUATION-PROGRAM-NV", (GLenum) GL_TESS_EVALUATION_PROGRAM_NV, "GL_TESS_EVALUATION_PROGRAM_NV");
#endif
#if defined(GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV)
defconsti(env, "GL-TESS-CONTROL-PROGRAM-PARAMETER-BUFFER-NV", (GLenum) GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV, "GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV");
#endif
#if defined(GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV)
defconsti(env, "GL-TESS-EVALUATION-PROGRAM-PARAMETER-BUFFER-NV", (GLenum) GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV, "GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV");
#endif
#if defined(GL_EMBOSS_LIGHT_NV)
defconsti(env, "GL-EMBOSS-LIGHT-NV", (GLenum) GL_EMBOSS_LIGHT_NV, "GL_EMBOSS_LIGHT_NV");
#endif
#if defined(GL_EMBOSS_CONSTANT_NV)
defconsti(env, "GL-EMBOSS-CONSTANT-NV", (GLenum) GL_EMBOSS_CONSTANT_NV, "GL_EMBOSS_CONSTANT_NV");
#endif
#if defined(GL_EMBOSS_MAP_NV)
defconsti(env, "GL-EMBOSS-MAP-NV", (GLenum) GL_EMBOSS_MAP_NV, "GL_EMBOSS_MAP_NV");
#endif
#if defined(GL_NORMAL_MAP_NV)
defconsti(env, "GL-NORMAL-MAP-NV", (GLenum) GL_NORMAL_MAP_NV, "GL_NORMAL_MAP_NV");
#endif
#if defined(GL_REFLECTION_MAP_NV)
defconsti(env, "GL-REFLECTION-MAP-NV", (GLenum) GL_REFLECTION_MAP_NV, "GL_REFLECTION_MAP_NV");
#endif
#if defined(GL_TEXTURE_BORDER_COLOR_NV)
defconsti(env, "GL-TEXTURE-BORDER-COLOR-NV", (GLenum) GL_TEXTURE_BORDER_COLOR_NV, "GL_TEXTURE_BORDER_COLOR_NV");
#endif
#if defined(GL_CLAMP_TO_BORDER_NV)
defconsti(env, "GL-CLAMP-TO-BORDER-NV", (GLenum) GL_CLAMP_TO_BORDER_NV, "GL_CLAMP_TO_BORDER_NV");
#endif
#if defined(GL_COMBINE4_NV)
defconsti(env, "GL-COMBINE4-NV", (GLenum) GL_COMBINE4_NV, "GL_COMBINE4_NV");
#endif
#if defined(GL_SOURCE3_RGB_NV)
defconsti(env, "GL-SOURCE3-RGB-NV", (GLenum) GL_SOURCE3_RGB_NV, "GL_SOURCE3_RGB_NV");
#endif
#if defined(GL_SOURCE3_ALPHA_NV)
defconsti(env, "GL-SOURCE3-ALPHA-NV", (GLenum) GL_SOURCE3_ALPHA_NV, "GL_SOURCE3_ALPHA_NV");
#endif
#if defined(GL_OPERAND3_RGB_NV)
defconsti(env, "GL-OPERAND3-RGB-NV", (GLenum) GL_OPERAND3_RGB_NV, "GL_OPERAND3_RGB_NV");
#endif
#if defined(GL_OPERAND3_ALPHA_NV)
defconsti(env, "GL-OPERAND3-ALPHA-NV", (GLenum) GL_OPERAND3_ALPHA_NV, "GL_OPERAND3_ALPHA_NV");
#endif
#if defined(GL_TEXTURE_UNSIGNED_REMAP_MODE_NV)
defconsti(env, "GL-TEXTURE-UNSIGNED-REMAP-MODE-NV", (GLenum) GL_TEXTURE_UNSIGNED_REMAP_MODE_NV, "GL_TEXTURE_UNSIGNED_REMAP_MODE_NV");
#endif
#if defined(GL_TEXTURE_COVERAGE_SAMPLES_NV)
defconsti(env, "GL-TEXTURE-COVERAGE-SAMPLES-NV", (GLenum) GL_TEXTURE_COVERAGE_SAMPLES_NV, "GL_TEXTURE_COVERAGE_SAMPLES_NV");
#endif
#if defined(GL_TEXTURE_COLOR_SAMPLES_NV)
defconsti(env, "GL-TEXTURE-COLOR-SAMPLES-NV", (GLenum) GL_TEXTURE_COLOR_SAMPLES_NV, "GL_TEXTURE_COLOR_SAMPLES_NV");
#endif
#if defined(GL_TEXTURE_RECTANGLE_NV)
defconsti(env, "GL-TEXTURE-RECTANGLE-NV", (GLenum) GL_TEXTURE_RECTANGLE_NV, "GL_TEXTURE_RECTANGLE_NV");
#endif
#if defined(GL_TEXTURE_BINDING_RECTANGLE_NV)
defconsti(env, "GL-TEXTURE-BINDING-RECTANGLE-NV", (GLenum) GL_TEXTURE_BINDING_RECTANGLE_NV, "GL_TEXTURE_BINDING_RECTANGLE_NV");
#endif
#if defined(GL_PROXY_TEXTURE_RECTANGLE_NV)
defconsti(env, "GL-PROXY-TEXTURE-RECTANGLE-NV", (GLenum) GL_PROXY_TEXTURE_RECTANGLE_NV, "GL_PROXY_TEXTURE_RECTANGLE_NV");
#endif
#if defined(GL_MAX_RECTANGLE_TEXTURE_SIZE_NV)
defconsti(env, "GL-MAX-RECTANGLE-TEXTURE-SIZE-NV", (GLenum) GL_MAX_RECTANGLE_TEXTURE_SIZE_NV, "GL_MAX_RECTANGLE_TEXTURE_SIZE_NV");
#endif
#if defined(GL_OFFSET_TEXTURE_RECTANGLE_NV)
defconsti(env, "GL-OFFSET-TEXTURE-RECTANGLE-NV", (GLenum) GL_OFFSET_TEXTURE_RECTANGLE_NV, "GL_OFFSET_TEXTURE_RECTANGLE_NV");
#endif
#if defined(GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV)
defconsti(env, "GL-OFFSET-TEXTURE-RECTANGLE-SCALE-NV", (GLenum) GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV, "GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV");
#endif
#if defined(GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV)
defconsti(env, "GL-DOT-PRODUCT-TEXTURE-RECTANGLE-NV", (GLenum) GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV, "GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV");
#endif
#if defined(GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV)
defconsti(env, "GL-RGBA-UNSIGNED-DOT-PRODUCT-MAPPING-NV", (GLenum) GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV, "GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV");
#endif
#if defined(GL_UNSIGNED_INT_S8_S8_8_8_NV)
defconsti(env, "GL-UNSIGNED-INT-S8-S8-8-8-NV", (GLenum) GL_UNSIGNED_INT_S8_S8_8_8_NV, "GL_UNSIGNED_INT_S8_S8_8_8_NV");
#endif
#if defined(GL_UNSIGNED_INT_8_8_S8_S8_REV_NV)
defconsti(env, "GL-UNSIGNED-INT-8-8-S8-S8-REV-NV", (GLenum) GL_UNSIGNED_INT_8_8_S8_S8_REV_NV, "GL_UNSIGNED_INT_8_8_S8_S8_REV_NV");
#endif
#if defined(GL_DSDT_MAG_INTENSITY_NV)
defconsti(env, "GL-DSDT-MAG-INTENSITY-NV", (GLenum) GL_DSDT_MAG_INTENSITY_NV, "GL_DSDT_MAG_INTENSITY_NV");
#endif
#if defined(GL_SHADER_CONSISTENT_NV)
defconsti(env, "GL-SHADER-CONSISTENT-NV", (GLenum) GL_SHADER_CONSISTENT_NV, "GL_SHADER_CONSISTENT_NV");
#endif
#if defined(GL_TEXTURE_SHADER_NV)
defconsti(env, "GL-TEXTURE-SHADER-NV", (GLenum) GL_TEXTURE_SHADER_NV, "GL_TEXTURE_SHADER_NV");
#endif
#if defined(GL_SHADER_OPERATION_NV)
defconsti(env, "GL-SHADER-OPERATION-NV", (GLenum) GL_SHADER_OPERATION_NV, "GL_SHADER_OPERATION_NV");
#endif
#if defined(GL_CULL_MODES_NV)
defconsti(env, "GL-CULL-MODES-NV", (GLenum) GL_CULL_MODES_NV, "GL_CULL_MODES_NV");
#endif
#if defined(GL_OFFSET_TEXTURE_MATRIX_NV)
defconsti(env, "GL-OFFSET-TEXTURE-MATRIX-NV", (GLenum) GL_OFFSET_TEXTURE_MATRIX_NV, "GL_OFFSET_TEXTURE_MATRIX_NV");
#endif
#if defined(GL_OFFSET_TEXTURE_SCALE_NV)
defconsti(env, "GL-OFFSET-TEXTURE-SCALE-NV", (GLenum) GL_OFFSET_TEXTURE_SCALE_NV, "GL_OFFSET_TEXTURE_SCALE_NV");
#endif
#if defined(GL_OFFSET_TEXTURE_BIAS_NV)
defconsti(env, "GL-OFFSET-TEXTURE-BIAS-NV", (GLenum) GL_OFFSET_TEXTURE_BIAS_NV, "GL_OFFSET_TEXTURE_BIAS_NV");
#endif
#if defined(GL_OFFSET_TEXTURE_2D_MATRIX_NV)
defconsti(env, "GL-OFFSET-TEXTURE-2D-MATRIX-NV", (GLenum) GL_OFFSET_TEXTURE_2D_MATRIX_NV, "GL_OFFSET_TEXTURE_2D_MATRIX_NV");
#endif
#if defined(GL_OFFSET_TEXTURE_2D_SCALE_NV)
defconsti(env, "GL-OFFSET-TEXTURE-2D-SCALE-NV", (GLenum) GL_OFFSET_TEXTURE_2D_SCALE_NV, "GL_OFFSET_TEXTURE_2D_SCALE_NV");
#endif
#if defined(GL_OFFSET_TEXTURE_2D_BIAS_NV)
defconsti(env, "GL-OFFSET-TEXTURE-2D-BIAS-NV", (GLenum) GL_OFFSET_TEXTURE_2D_BIAS_NV, "GL_OFFSET_TEXTURE_2D_BIAS_NV");
#endif
#if defined(GL_PREVIOUS_TEXTURE_INPUT_NV)
defconsti(env, "GL-PREVIOUS-TEXTURE-INPUT-NV", (GLenum) GL_PREVIOUS_TEXTURE_INPUT_NV, "GL_PREVIOUS_TEXTURE_INPUT_NV");
#endif
#if defined(GL_CONST_EYE_NV)
defconsti(env, "GL-CONST-EYE-NV", (GLenum) GL_CONST_EYE_NV, "GL_CONST_EYE_NV");
#endif
#if defined(GL_PASS_THROUGH_NV)
defconsti(env, "GL-PASS-THROUGH-NV", (GLenum) GL_PASS_THROUGH_NV, "GL_PASS_THROUGH_NV");
#endif
#if defined(GL_CULL_FRAGMENT_NV)
defconsti(env, "GL-CULL-FRAGMENT-NV", (GLenum) GL_CULL_FRAGMENT_NV, "GL_CULL_FRAGMENT_NV");
#endif
#if defined(GL_OFFSET_TEXTURE_2D_NV)
defconsti(env, "GL-OFFSET-TEXTURE-2D-NV", (GLenum) GL_OFFSET_TEXTURE_2D_NV, "GL_OFFSET_TEXTURE_2D_NV");
#endif
#if defined(GL_DEPENDENT_AR_TEXTURE_2D_NV)
defconsti(env, "GL-DEPENDENT-AR-TEXTURE-2D-NV", (GLenum) GL_DEPENDENT_AR_TEXTURE_2D_NV, "GL_DEPENDENT_AR_TEXTURE_2D_NV");
#endif
#if defined(GL_DEPENDENT_GB_TEXTURE_2D_NV)
defconsti(env, "GL-DEPENDENT-GB-TEXTURE-2D-NV", (GLenum) GL_DEPENDENT_GB_TEXTURE_2D_NV, "GL_DEPENDENT_GB_TEXTURE_2D_NV");
#endif
#if defined(GL_DOT_PRODUCT_NV)
defconsti(env, "GL-DOT-PRODUCT-NV", (GLenum) GL_DOT_PRODUCT_NV, "GL_DOT_PRODUCT_NV");
#endif
#if defined(GL_DOT_PRODUCT_DEPTH_REPLACE_NV)
defconsti(env, "GL-DOT-PRODUCT-DEPTH-REPLACE-NV", (GLenum) GL_DOT_PRODUCT_DEPTH_REPLACE_NV, "GL_DOT_PRODUCT_DEPTH_REPLACE_NV");
#endif
#if defined(GL_DOT_PRODUCT_TEXTURE_2D_NV)
defconsti(env, "GL-DOT-PRODUCT-TEXTURE-2D-NV", (GLenum) GL_DOT_PRODUCT_TEXTURE_2D_NV, "GL_DOT_PRODUCT_TEXTURE_2D_NV");
#endif
#if defined(GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV)
defconsti(env, "GL-DOT-PRODUCT-TEXTURE-CUBE-MAP-NV", (GLenum) GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV, "GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV");
#endif
#if defined(GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV)
defconsti(env, "GL-DOT-PRODUCT-DIFFUSE-CUBE-MAP-NV", (GLenum) GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV, "GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV");
#endif
#if defined(GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV)
defconsti(env, "GL-DOT-PRODUCT-REFLECT-CUBE-MAP-NV", (GLenum) GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV, "GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV");
#endif
#if defined(GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV)
defconsti(env, "GL-DOT-PRODUCT-CONST-EYE-REFLECT-CUBE-MAP-NV", (GLenum) GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV, "GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV");
#endif
#if defined(GL_HILO_NV)
defconsti(env, "GL-HILO-NV", (GLenum) GL_HILO_NV, "GL_HILO_NV");
#endif
#if defined(GL_DSDT_NV)
defconsti(env, "GL-DSDT-NV", (GLenum) GL_DSDT_NV, "GL_DSDT_NV");
#endif
#if defined(GL_DSDT_MAG_NV)
defconsti(env, "GL-DSDT-MAG-NV", (GLenum) GL_DSDT_MAG_NV, "GL_DSDT_MAG_NV");
#endif
#if defined(GL_DSDT_MAG_VIB_NV)
defconsti(env, "GL-DSDT-MAG-VIB-NV", (GLenum) GL_DSDT_MAG_VIB_NV, "GL_DSDT_MAG_VIB_NV");
#endif
#if defined(GL_HILO16_NV)
defconsti(env, "GL-HILO16-NV", (GLenum) GL_HILO16_NV, "GL_HILO16_NV");
#endif
#if defined(GL_SIGNED_HILO_NV)
defconsti(env, "GL-SIGNED-HILO-NV", (GLenum) GL_SIGNED_HILO_NV, "GL_SIGNED_HILO_NV");
#endif
#if defined(GL_SIGNED_HILO16_NV)
defconsti(env, "GL-SIGNED-HILO16-NV", (GLenum) GL_SIGNED_HILO16_NV, "GL_SIGNED_HILO16_NV");
#endif
#if defined(GL_SIGNED_RGBA_NV)
defconsti(env, "GL-SIGNED-RGBA-NV", (GLenum) GL_SIGNED_RGBA_NV, "GL_SIGNED_RGBA_NV");
#endif
#if defined(GL_SIGNED_RGBA8_NV)
defconsti(env, "GL-SIGNED-RGBA8-NV", (GLenum) GL_SIGNED_RGBA8_NV, "GL_SIGNED_RGBA8_NV");
#endif
#if defined(GL_SIGNED_RGB_NV)
defconsti(env, "GL-SIGNED-RGB-NV", (GLenum) GL_SIGNED_RGB_NV, "GL_SIGNED_RGB_NV");
#endif
#if defined(GL_SIGNED_RGB8_NV)
defconsti(env, "GL-SIGNED-RGB8-NV", (GLenum) GL_SIGNED_RGB8_NV, "GL_SIGNED_RGB8_NV");
#endif
#if defined(GL_SIGNED_LUMINANCE_NV)
defconsti(env, "GL-SIGNED-LUMINANCE-NV", (GLenum) GL_SIGNED_LUMINANCE_NV, "GL_SIGNED_LUMINANCE_NV");
#endif
#if defined(GL_SIGNED_LUMINANCE8_NV)
defconsti(env, "GL-SIGNED-LUMINANCE8-NV", (GLenum) GL_SIGNED_LUMINANCE8_NV, "GL_SIGNED_LUMINANCE8_NV");
#endif
#if defined(GL_SIGNED_LUMINANCE_ALPHA_NV)
defconsti(env, "GL-SIGNED-LUMINANCE-ALPHA-NV", (GLenum) GL_SIGNED_LUMINANCE_ALPHA_NV, "GL_SIGNED_LUMINANCE_ALPHA_NV");
#endif
#if defined(GL_SIGNED_LUMINANCE8_ALPHA8_NV)
defconsti(env, "GL-SIGNED-LUMINANCE8-ALPHA8-NV", (GLenum) GL_SIGNED_LUMINANCE8_ALPHA8_NV, "GL_SIGNED_LUMINANCE8_ALPHA8_NV");
#endif
#if defined(GL_SIGNED_ALPHA_NV)
defconsti(env, "GL-SIGNED-ALPHA-NV", (GLenum) GL_SIGNED_ALPHA_NV, "GL_SIGNED_ALPHA_NV");
#endif
#if defined(GL_SIGNED_ALPHA8_NV)
defconsti(env, "GL-SIGNED-ALPHA8-NV", (GLenum) GL_SIGNED_ALPHA8_NV, "GL_SIGNED_ALPHA8_NV");
#endif
#if defined(GL_SIGNED_INTENSITY_NV)
defconsti(env, "GL-SIGNED-INTENSITY-NV", (GLenum) GL_SIGNED_INTENSITY_NV, "GL_SIGNED_INTENSITY_NV");
#endif
#if defined(GL_SIGNED_INTENSITY8_NV)
defconsti(env, "GL-SIGNED-INTENSITY8-NV", (GLenum) GL_SIGNED_INTENSITY8_NV, "GL_SIGNED_INTENSITY8_NV");
#endif
#if defined(GL_DSDT8_NV)
defconsti(env, "GL-DSDT8-NV", (GLenum) GL_DSDT8_NV, "GL_DSDT8_NV");
#endif
#if defined(GL_DSDT8_MAG8_NV)
defconsti(env, "GL-DSDT8-MAG8-NV", (GLenum) GL_DSDT8_MAG8_NV, "GL_DSDT8_MAG8_NV");
#endif
#if defined(GL_DSDT8_MAG8_INTENSITY8_NV)
defconsti(env, "GL-DSDT8-MAG8-INTENSITY8-NV", (GLenum) GL_DSDT8_MAG8_INTENSITY8_NV, "GL_DSDT8_MAG8_INTENSITY8_NV");
#endif
#if defined(GL_SIGNED_RGB_UNSIGNED_ALPHA_NV)
defconsti(env, "GL-SIGNED-RGB-UNSIGNED-ALPHA-NV", (GLenum) GL_SIGNED_RGB_UNSIGNED_ALPHA_NV, "GL_SIGNED_RGB_UNSIGNED_ALPHA_NV");
#endif
#if defined(GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV)
defconsti(env, "GL-SIGNED-RGB8-UNSIGNED-ALPHA8-NV", (GLenum) GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV, "GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV");
#endif
#if defined(GL_HI_SCALE_NV)
defconsti(env, "GL-HI-SCALE-NV", (GLenum) GL_HI_SCALE_NV, "GL_HI_SCALE_NV");
#endif
#if defined(GL_LO_SCALE_NV)
defconsti(env, "GL-LO-SCALE-NV", (GLenum) GL_LO_SCALE_NV, "GL_LO_SCALE_NV");
#endif
#if defined(GL_DS_SCALE_NV)
defconsti(env, "GL-DS-SCALE-NV", (GLenum) GL_DS_SCALE_NV, "GL_DS_SCALE_NV");
#endif
#if defined(GL_DT_SCALE_NV)
defconsti(env, "GL-DT-SCALE-NV", (GLenum) GL_DT_SCALE_NV, "GL_DT_SCALE_NV");
#endif
#if defined(GL_MAGNITUDE_SCALE_NV)
defconsti(env, "GL-MAGNITUDE-SCALE-NV", (GLenum) GL_MAGNITUDE_SCALE_NV, "GL_MAGNITUDE_SCALE_NV");
#endif
#if defined(GL_VIBRANCE_SCALE_NV)
defconsti(env, "GL-VIBRANCE-SCALE-NV", (GLenum) GL_VIBRANCE_SCALE_NV, "GL_VIBRANCE_SCALE_NV");
#endif
#if defined(GL_HI_BIAS_NV)
defconsti(env, "GL-HI-BIAS-NV", (GLenum) GL_HI_BIAS_NV, "GL_HI_BIAS_NV");
#endif
#if defined(GL_LO_BIAS_NV)
defconsti(env, "GL-LO-BIAS-NV", (GLenum) GL_LO_BIAS_NV, "GL_LO_BIAS_NV");
#endif
#if defined(GL_DS_BIAS_NV)
defconsti(env, "GL-DS-BIAS-NV", (GLenum) GL_DS_BIAS_NV, "GL_DS_BIAS_NV");
#endif
#if defined(GL_DT_BIAS_NV)
defconsti(env, "GL-DT-BIAS-NV", (GLenum) GL_DT_BIAS_NV, "GL_DT_BIAS_NV");
#endif
#if defined(GL_MAGNITUDE_BIAS_NV)
defconsti(env, "GL-MAGNITUDE-BIAS-NV", (GLenum) GL_MAGNITUDE_BIAS_NV, "GL_MAGNITUDE_BIAS_NV");
#endif
#if defined(GL_VIBRANCE_BIAS_NV)
defconsti(env, "GL-VIBRANCE-BIAS-NV", (GLenum) GL_VIBRANCE_BIAS_NV, "GL_VIBRANCE_BIAS_NV");
#endif
#if defined(GL_TEXTURE_BORDER_VALUES_NV)
defconsti(env, "GL-TEXTURE-BORDER-VALUES-NV", (GLenum) GL_TEXTURE_BORDER_VALUES_NV, "GL_TEXTURE_BORDER_VALUES_NV");
#endif
#if defined(GL_TEXTURE_HI_SIZE_NV)
defconsti(env, "GL-TEXTURE-HI-SIZE-NV", (GLenum) GL_TEXTURE_HI_SIZE_NV, "GL_TEXTURE_HI_SIZE_NV");
#endif
#if defined(GL_TEXTURE_LO_SIZE_NV)
defconsti(env, "GL-TEXTURE-LO-SIZE-NV", (GLenum) GL_TEXTURE_LO_SIZE_NV, "GL_TEXTURE_LO_SIZE_NV");
#endif
#if defined(GL_TEXTURE_DS_SIZE_NV)
defconsti(env, "GL-TEXTURE-DS-SIZE-NV", (GLenum) GL_TEXTURE_DS_SIZE_NV, "GL_TEXTURE_DS_SIZE_NV");
#endif
#if defined(GL_TEXTURE_DT_SIZE_NV)
defconsti(env, "GL-TEXTURE-DT-SIZE-NV", (GLenum) GL_TEXTURE_DT_SIZE_NV, "GL_TEXTURE_DT_SIZE_NV");
#endif
#if defined(GL_TEXTURE_MAG_SIZE_NV)
defconsti(env, "GL-TEXTURE-MAG-SIZE-NV", (GLenum) GL_TEXTURE_MAG_SIZE_NV, "GL_TEXTURE_MAG_SIZE_NV");
#endif
#if defined(GL_DOT_PRODUCT_TEXTURE_3D_NV)
defconsti(env, "GL-DOT-PRODUCT-TEXTURE-3D-NV", (GLenum) GL_DOT_PRODUCT_TEXTURE_3D_NV, "GL_DOT_PRODUCT_TEXTURE_3D_NV");
#endif
#if defined(GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV)
defconsti(env, "GL-OFFSET-PROJECTIVE-TEXTURE-2D-NV", (GLenum) GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV, "GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV");
#endif
#if defined(GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV)
defconsti(env, "GL-OFFSET-PROJECTIVE-TEXTURE-2D-SCALE-NV", (GLenum) GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV, "GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV");
#endif
#if defined(GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV)
defconsti(env, "GL-OFFSET-PROJECTIVE-TEXTURE-RECTANGLE-NV", (GLenum) GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV, "GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV");
#endif
#if defined(GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV)
defconsti(env, "GL-OFFSET-PROJECTIVE-TEXTURE-RECTANGLE-SCALE-NV", (GLenum) GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV, "GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV");
#endif
#if defined(GL_OFFSET_HILO_TEXTURE_2D_NV)
defconsti(env, "GL-OFFSET-HILO-TEXTURE-2D-NV", (GLenum) GL_OFFSET_HILO_TEXTURE_2D_NV, "GL_OFFSET_HILO_TEXTURE_2D_NV");
#endif
#if defined(GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV)
defconsti(env, "GL-OFFSET-HILO-TEXTURE-RECTANGLE-NV", (GLenum) GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV, "GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV");
#endif
#if defined(GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV)
defconsti(env, "GL-OFFSET-HILO-PROJECTIVE-TEXTURE-2D-NV", (GLenum) GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV, "GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV");
#endif
#if defined(GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV)
defconsti(env, "GL-OFFSET-HILO-PROJECTIVE-TEXTURE-RECTANGLE-NV", (GLenum) GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV, "GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV");
#endif
#if defined(GL_DEPENDENT_HILO_TEXTURE_2D_NV)
defconsti(env, "GL-DEPENDENT-HILO-TEXTURE-2D-NV", (GLenum) GL_DEPENDENT_HILO_TEXTURE_2D_NV, "GL_DEPENDENT_HILO_TEXTURE_2D_NV");
#endif
#if defined(GL_DEPENDENT_RGB_TEXTURE_3D_NV)
defconsti(env, "GL-DEPENDENT-RGB-TEXTURE-3D-NV", (GLenum) GL_DEPENDENT_RGB_TEXTURE_3D_NV, "GL_DEPENDENT_RGB_TEXTURE_3D_NV");
#endif
#if defined(GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV)
defconsti(env, "GL-DEPENDENT-RGB-TEXTURE-CUBE-MAP-NV", (GLenum) GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV, "GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV");
#endif
#if defined(GL_DOT_PRODUCT_PASS_THROUGH_NV)
defconsti(env, "GL-DOT-PRODUCT-PASS-THROUGH-NV", (GLenum) GL_DOT_PRODUCT_PASS_THROUGH_NV, "GL_DOT_PRODUCT_PASS_THROUGH_NV");
#endif
#if defined(GL_DOT_PRODUCT_TEXTURE_1D_NV)
defconsti(env, "GL-DOT-PRODUCT-TEXTURE-1D-NV", (GLenum) GL_DOT_PRODUCT_TEXTURE_1D_NV, "GL_DOT_PRODUCT_TEXTURE_1D_NV");
#endif
#if defined(GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV)
defconsti(env, "GL-DOT-PRODUCT-AFFINE-DEPTH-REPLACE-NV", (GLenum) GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV, "GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV");
#endif
#if defined(GL_HILO8_NV)
defconsti(env, "GL-HILO8-NV", (GLenum) GL_HILO8_NV, "GL_HILO8_NV");
#endif
#if defined(GL_SIGNED_HILO8_NV)
defconsti(env, "GL-SIGNED-HILO8-NV", (GLenum) GL_SIGNED_HILO8_NV, "GL_SIGNED_HILO8_NV");
#endif
#if defined(GL_FORCE_BLUE_TO_ONE_NV)
defconsti(env, "GL-FORCE-BLUE-TO-ONE-NV", (GLenum) GL_FORCE_BLUE_TO_ONE_NV, "GL_FORCE_BLUE_TO_ONE_NV");
#endif
#if defined(GL_BACK_PRIMARY_COLOR_NV)
defconsti(env, "GL-BACK-PRIMARY-COLOR-NV", (GLenum) GL_BACK_PRIMARY_COLOR_NV, "GL_BACK_PRIMARY_COLOR_NV");
#endif
#if defined(GL_BACK_SECONDARY_COLOR_NV)
defconsti(env, "GL-BACK-SECONDARY-COLOR-NV", (GLenum) GL_BACK_SECONDARY_COLOR_NV, "GL_BACK_SECONDARY_COLOR_NV");
#endif
#if defined(GL_TEXTURE_COORD_NV)
defconsti(env, "GL-TEXTURE-COORD-NV", (GLenum) GL_TEXTURE_COORD_NV, "GL_TEXTURE_COORD_NV");
#endif
#if defined(GL_CLIP_DISTANCE_NV)
defconsti(env, "GL-CLIP-DISTANCE-NV", (GLenum) GL_CLIP_DISTANCE_NV, "GL_CLIP_DISTANCE_NV");
#endif
#if defined(GL_VERTEX_ID_NV)
defconsti(env, "GL-VERTEX-ID-NV", (GLenum) GL_VERTEX_ID_NV, "GL_VERTEX_ID_NV");
#endif
#if defined(GL_PRIMITIVE_ID_NV)
defconsti(env, "GL-PRIMITIVE-ID-NV", (GLenum) GL_PRIMITIVE_ID_NV, "GL_PRIMITIVE_ID_NV");
#endif
#if defined(GL_GENERIC_ATTRIB_NV)
defconsti(env, "GL-GENERIC-ATTRIB-NV", (GLenum) GL_GENERIC_ATTRIB_NV, "GL_GENERIC_ATTRIB_NV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_ATTRIBS_NV)
defconsti(env, "GL-TRANSFORM-FEEDBACK-ATTRIBS-NV", (GLenum) GL_TRANSFORM_FEEDBACK_ATTRIBS_NV, "GL_TRANSFORM_FEEDBACK_ATTRIBS_NV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-MODE-NV", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV, "GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV");
#endif
#if defined(GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV)
defconsti(env, "GL-MAX-TRANSFORM-FEEDBACK-SEPARATE-COMPONENTS-NV", (GLenum) GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV, "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV");
#endif
#if defined(GL_ACTIVE_VARYINGS_NV)
defconsti(env, "GL-ACTIVE-VARYINGS-NV", (GLenum) GL_ACTIVE_VARYINGS_NV, "GL_ACTIVE_VARYINGS_NV");
#endif
#if defined(GL_ACTIVE_VARYING_MAX_LENGTH_NV)
defconsti(env, "GL-ACTIVE-VARYING-MAX-LENGTH-NV", (GLenum) GL_ACTIVE_VARYING_MAX_LENGTH_NV, "GL_ACTIVE_VARYING_MAX_LENGTH_NV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_VARYINGS_NV)
defconsti(env, "GL-TRANSFORM-FEEDBACK-VARYINGS-NV", (GLenum) GL_TRANSFORM_FEEDBACK_VARYINGS_NV, "GL_TRANSFORM_FEEDBACK_VARYINGS_NV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_START_NV)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-START-NV", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_START_NV, "GL_TRANSFORM_FEEDBACK_BUFFER_START_NV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-SIZE-NV", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV, "GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_RECORD_NV)
defconsti(env, "GL-TRANSFORM-FEEDBACK-RECORD-NV", (GLenum) GL_TRANSFORM_FEEDBACK_RECORD_NV, "GL_TRANSFORM_FEEDBACK_RECORD_NV");
#endif
#if defined(GL_PRIMITIVES_GENERATED_NV)
defconsti(env, "GL-PRIMITIVES-GENERATED-NV", (GLenum) GL_PRIMITIVES_GENERATED_NV, "GL_PRIMITIVES_GENERATED_NV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV)
defconsti(env, "GL-TRANSFORM-FEEDBACK-PRIMITIVES-WRITTEN-NV", (GLenum) GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV, "GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV");
#endif
#if defined(GL_RASTERIZER_DISCARD_NV)
defconsti(env, "GL-RASTERIZER-DISCARD-NV", (GLenum) GL_RASTERIZER_DISCARD_NV, "GL_RASTERIZER_DISCARD_NV");
#endif
#if defined(GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV)
defconsti(env, "GL-MAX-TRANSFORM-FEEDBACK-INTERLEAVED-COMPONENTS-NV", (GLenum) GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV, "GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV");
#endif
#if defined(GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV)
defconsti(env, "GL-MAX-TRANSFORM-FEEDBACK-SEPARATE-ATTRIBS-NV", (GLenum) GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV, "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV");
#endif
#if defined(GL_INTERLEAVED_ATTRIBS_NV)
defconsti(env, "GL-INTERLEAVED-ATTRIBS-NV", (GLenum) GL_INTERLEAVED_ATTRIBS_NV, "GL_INTERLEAVED_ATTRIBS_NV");
#endif
#if defined(GL_SEPARATE_ATTRIBS_NV)
defconsti(env, "GL-SEPARATE-ATTRIBS-NV", (GLenum) GL_SEPARATE_ATTRIBS_NV, "GL_SEPARATE_ATTRIBS_NV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_NV)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-NV", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_NV, "GL_TRANSFORM_FEEDBACK_BUFFER_NV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-BINDING-NV", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV, "GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV");
#endif
#if defined(GL_LAYER_NV)
defconsti(env, "GL-LAYER-NV", (GLenum) GL_LAYER_NV, "GL_LAYER_NV");
#endif
#if defined(GL_NEXT_BUFFER_NV)
defconsti(env, "GL-NEXT-BUFFER-NV", (GLenum) GL_NEXT_BUFFER_NV, "GL_NEXT_BUFFER_NV");
#endif
#if defined(GL_SKIP_COMPONENTS4_NV)
defconsti(env, "GL-SKIP-COMPONENTS4-NV", (GLenum) GL_SKIP_COMPONENTS4_NV, "GL_SKIP_COMPONENTS4_NV");
#endif
#if defined(GL_SKIP_COMPONENTS3_NV)
defconsti(env, "GL-SKIP-COMPONENTS3-NV", (GLenum) GL_SKIP_COMPONENTS3_NV, "GL_SKIP_COMPONENTS3_NV");
#endif
#if defined(GL_SKIP_COMPONENTS2_NV)
defconsti(env, "GL-SKIP-COMPONENTS2-NV", (GLenum) GL_SKIP_COMPONENTS2_NV, "GL_SKIP_COMPONENTS2_NV");
#endif
#if defined(GL_SKIP_COMPONENTS1_NV)
defconsti(env, "GL-SKIP-COMPONENTS1-NV", (GLenum) GL_SKIP_COMPONENTS1_NV, "GL_SKIP_COMPONENTS1_NV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_NV)
defconsti(env, "GL-TRANSFORM-FEEDBACK-NV", (GLenum) GL_TRANSFORM_FEEDBACK_NV, "GL_TRANSFORM_FEEDBACK_NV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-PAUSED-NV", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV, "GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BUFFER-ACTIVE-NV", (GLenum) GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV, "GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV");
#endif
#if defined(GL_TRANSFORM_FEEDBACK_BINDING_NV)
defconsti(env, "GL-TRANSFORM-FEEDBACK-BINDING-NV", (GLenum) GL_TRANSFORM_FEEDBACK_BINDING_NV, "GL_TRANSFORM_FEEDBACK_BINDING_NV");
#endif
#if defined(GL_UNIFORM_BUFFER_UNIFIED_NV)
defconsti(env, "GL-UNIFORM-BUFFER-UNIFIED-NV", (GLenum) GL_UNIFORM_BUFFER_UNIFIED_NV, "GL_UNIFORM_BUFFER_UNIFIED_NV");
#endif
#if defined(GL_UNIFORM_BUFFER_ADDRESS_NV)
defconsti(env, "GL-UNIFORM-BUFFER-ADDRESS-NV", (GLenum) GL_UNIFORM_BUFFER_ADDRESS_NV, "GL_UNIFORM_BUFFER_ADDRESS_NV");
#endif
#if defined(GL_UNIFORM_BUFFER_LENGTH_NV)
defconsti(env, "GL-UNIFORM-BUFFER-LENGTH-NV", (GLenum) GL_UNIFORM_BUFFER_LENGTH_NV, "GL_UNIFORM_BUFFER_LENGTH_NV");
#endif
#if defined(GL_SURFACE_STATE_NV)
defconsti(env, "GL-SURFACE-STATE-NV", (GLenum) GL_SURFACE_STATE_NV, "GL_SURFACE_STATE_NV");
#endif
#if defined(GL_SURFACE_REGISTERED_NV)
defconsti(env, "GL-SURFACE-REGISTERED-NV", (GLenum) GL_SURFACE_REGISTERED_NV, "GL_SURFACE_REGISTERED_NV");
#endif
#if defined(GL_SURFACE_MAPPED_NV)
defconsti(env, "GL-SURFACE-MAPPED-NV", (GLenum) GL_SURFACE_MAPPED_NV, "GL_SURFACE_MAPPED_NV");
#endif
#if defined(GL_WRITE_DISCARD_NV)
defconsti(env, "GL-WRITE-DISCARD-NV", (GLenum) GL_WRITE_DISCARD_NV, "GL_WRITE_DISCARD_NV");
#endif
#if defined(GL_VERTEX_ARRAY_RANGE_NV)
defconsti(env, "GL-VERTEX-ARRAY-RANGE-NV", (GLenum) GL_VERTEX_ARRAY_RANGE_NV, "GL_VERTEX_ARRAY_RANGE_NV");
#endif
#if defined(GL_VERTEX_ARRAY_RANGE_LENGTH_NV)
defconsti(env, "GL-VERTEX-ARRAY-RANGE-LENGTH-NV", (GLenum) GL_VERTEX_ARRAY_RANGE_LENGTH_NV, "GL_VERTEX_ARRAY_RANGE_LENGTH_NV");
#endif
#if defined(GL_VERTEX_ARRAY_RANGE_VALID_NV)
defconsti(env, "GL-VERTEX-ARRAY-RANGE-VALID-NV", (GLenum) GL_VERTEX_ARRAY_RANGE_VALID_NV, "GL_VERTEX_ARRAY_RANGE_VALID_NV");
#endif
#if defined(GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV)
defconsti(env, "GL-MAX-VERTEX-ARRAY-RANGE-ELEMENT-NV", (GLenum) GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV, "GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV");
#endif
#if defined(GL_VERTEX_ARRAY_RANGE_POINTER_NV)
defconsti(env, "GL-VERTEX-ARRAY-RANGE-POINTER-NV", (GLenum) GL_VERTEX_ARRAY_RANGE_POINTER_NV, "GL_VERTEX_ARRAY_RANGE_POINTER_NV");
#endif
#if defined(GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV)
defconsti(env, "GL-VERTEX-ARRAY-RANGE-WITHOUT-FLUSH-NV", (GLenum) GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV, "GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV");
#endif
#if defined(GL_INT64_NV)
defconsti(env, "GL-INT64-NV", (GLenum) GL_INT64_NV, "GL_INT64_NV");
#endif
#if defined(GL_UNSIGNED_INT64_NV)
defconsti(env, "GL-UNSIGNED-INT64-NV", (GLenum) GL_UNSIGNED_INT64_NV, "GL_UNSIGNED_INT64_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-UNIFIED-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV, "GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV");
#endif
#if defined(GL_ELEMENT_ARRAY_UNIFIED_NV)
defconsti(env, "GL-ELEMENT-ARRAY-UNIFIED-NV", (GLenum) GL_ELEMENT_ARRAY_UNIFIED_NV, "GL_ELEMENT_ARRAY_UNIFIED_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-ADDRESS-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV, "GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV");
#endif
#if defined(GL_VERTEX_ARRAY_ADDRESS_NV)
defconsti(env, "GL-VERTEX-ARRAY-ADDRESS-NV", (GLenum) GL_VERTEX_ARRAY_ADDRESS_NV, "GL_VERTEX_ARRAY_ADDRESS_NV");
#endif
#if defined(GL_NORMAL_ARRAY_ADDRESS_NV)
defconsti(env, "GL-NORMAL-ARRAY-ADDRESS-NV", (GLenum) GL_NORMAL_ARRAY_ADDRESS_NV, "GL_NORMAL_ARRAY_ADDRESS_NV");
#endif
#if defined(GL_COLOR_ARRAY_ADDRESS_NV)
defconsti(env, "GL-COLOR-ARRAY-ADDRESS-NV", (GLenum) GL_COLOR_ARRAY_ADDRESS_NV, "GL_COLOR_ARRAY_ADDRESS_NV");
#endif
#if defined(GL_INDEX_ARRAY_ADDRESS_NV)
defconsti(env, "GL-INDEX-ARRAY-ADDRESS-NV", (GLenum) GL_INDEX_ARRAY_ADDRESS_NV, "GL_INDEX_ARRAY_ADDRESS_NV");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_ADDRESS_NV)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-ADDRESS-NV", (GLenum) GL_TEXTURE_COORD_ARRAY_ADDRESS_NV, "GL_TEXTURE_COORD_ARRAY_ADDRESS_NV");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_ADDRESS_NV)
defconsti(env, "GL-EDGE-FLAG-ARRAY-ADDRESS-NV", (GLenum) GL_EDGE_FLAG_ARRAY_ADDRESS_NV, "GL_EDGE_FLAG_ARRAY_ADDRESS_NV");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-ADDRESS-NV", (GLenum) GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV, "GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV");
#endif
#if defined(GL_FOG_COORD_ARRAY_ADDRESS_NV)
defconsti(env, "GL-FOG-COORD-ARRAY-ADDRESS-NV", (GLenum) GL_FOG_COORD_ARRAY_ADDRESS_NV, "GL_FOG_COORD_ARRAY_ADDRESS_NV");
#endif
#if defined(GL_ELEMENT_ARRAY_ADDRESS_NV)
defconsti(env, "GL-ELEMENT-ARRAY-ADDRESS-NV", (GLenum) GL_ELEMENT_ARRAY_ADDRESS_NV, "GL_ELEMENT_ARRAY_ADDRESS_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-LENGTH-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV, "GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV");
#endif
#if defined(GL_VERTEX_ARRAY_LENGTH_NV)
defconsti(env, "GL-VERTEX-ARRAY-LENGTH-NV", (GLenum) GL_VERTEX_ARRAY_LENGTH_NV, "GL_VERTEX_ARRAY_LENGTH_NV");
#endif
#if defined(GL_NORMAL_ARRAY_LENGTH_NV)
defconsti(env, "GL-NORMAL-ARRAY-LENGTH-NV", (GLenum) GL_NORMAL_ARRAY_LENGTH_NV, "GL_NORMAL_ARRAY_LENGTH_NV");
#endif
#if defined(GL_COLOR_ARRAY_LENGTH_NV)
defconsti(env, "GL-COLOR-ARRAY-LENGTH-NV", (GLenum) GL_COLOR_ARRAY_LENGTH_NV, "GL_COLOR_ARRAY_LENGTH_NV");
#endif
#if defined(GL_INDEX_ARRAY_LENGTH_NV)
defconsti(env, "GL-INDEX-ARRAY-LENGTH-NV", (GLenum) GL_INDEX_ARRAY_LENGTH_NV, "GL_INDEX_ARRAY_LENGTH_NV");
#endif
#if defined(GL_TEXTURE_COORD_ARRAY_LENGTH_NV)
defconsti(env, "GL-TEXTURE-COORD-ARRAY-LENGTH-NV", (GLenum) GL_TEXTURE_COORD_ARRAY_LENGTH_NV, "GL_TEXTURE_COORD_ARRAY_LENGTH_NV");
#endif
#if defined(GL_EDGE_FLAG_ARRAY_LENGTH_NV)
defconsti(env, "GL-EDGE-FLAG-ARRAY-LENGTH-NV", (GLenum) GL_EDGE_FLAG_ARRAY_LENGTH_NV, "GL_EDGE_FLAG_ARRAY_LENGTH_NV");
#endif
#if defined(GL_SECONDARY_COLOR_ARRAY_LENGTH_NV)
defconsti(env, "GL-SECONDARY-COLOR-ARRAY-LENGTH-NV", (GLenum) GL_SECONDARY_COLOR_ARRAY_LENGTH_NV, "GL_SECONDARY_COLOR_ARRAY_LENGTH_NV");
#endif
#if defined(GL_FOG_COORD_ARRAY_LENGTH_NV)
defconsti(env, "GL-FOG-COORD-ARRAY-LENGTH-NV", (GLenum) GL_FOG_COORD_ARRAY_LENGTH_NV, "GL_FOG_COORD_ARRAY_LENGTH_NV");
#endif
#if defined(GL_ELEMENT_ARRAY_LENGTH_NV)
defconsti(env, "GL-ELEMENT-ARRAY-LENGTH-NV", (GLenum) GL_ELEMENT_ARRAY_LENGTH_NV, "GL_ELEMENT_ARRAY_LENGTH_NV");
#endif
#if defined(GL_DRAW_INDIRECT_UNIFIED_NV)
defconsti(env, "GL-DRAW-INDIRECT-UNIFIED-NV", (GLenum) GL_DRAW_INDIRECT_UNIFIED_NV, "GL_DRAW_INDIRECT_UNIFIED_NV");
#endif
#if defined(GL_DRAW_INDIRECT_ADDRESS_NV)
defconsti(env, "GL-DRAW-INDIRECT-ADDRESS-NV", (GLenum) GL_DRAW_INDIRECT_ADDRESS_NV, "GL_DRAW_INDIRECT_ADDRESS_NV");
#endif
#if defined(GL_DRAW_INDIRECT_LENGTH_NV)
defconsti(env, "GL-DRAW-INDIRECT-LENGTH-NV", (GLenum) GL_DRAW_INDIRECT_LENGTH_NV, "GL_DRAW_INDIRECT_LENGTH_NV");
#endif
#if defined(GL_VERTEX_PROGRAM_NV)
defconsti(env, "GL-VERTEX-PROGRAM-NV", (GLenum) GL_VERTEX_PROGRAM_NV, "GL_VERTEX_PROGRAM_NV");
#endif
#if defined(GL_VERTEX_STATE_PROGRAM_NV)
defconsti(env, "GL-VERTEX-STATE-PROGRAM-NV", (GLenum) GL_VERTEX_STATE_PROGRAM_NV, "GL_VERTEX_STATE_PROGRAM_NV");
#endif
#if defined(GL_ATTRIB_ARRAY_SIZE_NV)
defconsti(env, "GL-ATTRIB-ARRAY-SIZE-NV", (GLenum) GL_ATTRIB_ARRAY_SIZE_NV, "GL_ATTRIB_ARRAY_SIZE_NV");
#endif
#if defined(GL_ATTRIB_ARRAY_STRIDE_NV)
defconsti(env, "GL-ATTRIB-ARRAY-STRIDE-NV", (GLenum) GL_ATTRIB_ARRAY_STRIDE_NV, "GL_ATTRIB_ARRAY_STRIDE_NV");
#endif
#if defined(GL_ATTRIB_ARRAY_TYPE_NV)
defconsti(env, "GL-ATTRIB-ARRAY-TYPE-NV", (GLenum) GL_ATTRIB_ARRAY_TYPE_NV, "GL_ATTRIB_ARRAY_TYPE_NV");
#endif
#if defined(GL_CURRENT_ATTRIB_NV)
defconsti(env, "GL-CURRENT-ATTRIB-NV", (GLenum) GL_CURRENT_ATTRIB_NV, "GL_CURRENT_ATTRIB_NV");
#endif
#if defined(GL_PROGRAM_LENGTH_NV)
defconsti(env, "GL-PROGRAM-LENGTH-NV", (GLenum) GL_PROGRAM_LENGTH_NV, "GL_PROGRAM_LENGTH_NV");
#endif
#if defined(GL_PROGRAM_STRING_NV)
defconsti(env, "GL-PROGRAM-STRING-NV", (GLenum) GL_PROGRAM_STRING_NV, "GL_PROGRAM_STRING_NV");
#endif
#if defined(GL_MODELVIEW_PROJECTION_NV)
defconsti(env, "GL-MODELVIEW-PROJECTION-NV", (GLenum) GL_MODELVIEW_PROJECTION_NV, "GL_MODELVIEW_PROJECTION_NV");
#endif
#if defined(GL_IDENTITY_NV)
defconsti(env, "GL-IDENTITY-NV", (GLenum) GL_IDENTITY_NV, "GL_IDENTITY_NV");
#endif
#if defined(GL_INVERSE_NV)
defconsti(env, "GL-INVERSE-NV", (GLenum) GL_INVERSE_NV, "GL_INVERSE_NV");
#endif
#if defined(GL_TRANSPOSE_NV)
defconsti(env, "GL-TRANSPOSE-NV", (GLenum) GL_TRANSPOSE_NV, "GL_TRANSPOSE_NV");
#endif
#if defined(GL_INVERSE_TRANSPOSE_NV)
defconsti(env, "GL-INVERSE-TRANSPOSE-NV", (GLenum) GL_INVERSE_TRANSPOSE_NV, "GL_INVERSE_TRANSPOSE_NV");
#endif
#if defined(GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV)
defconsti(env, "GL-MAX-TRACK-MATRIX-STACK-DEPTH-NV", (GLenum) GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV, "GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV");
#endif
#if defined(GL_MAX_TRACK_MATRICES_NV)
defconsti(env, "GL-MAX-TRACK-MATRICES-NV", (GLenum) GL_MAX_TRACK_MATRICES_NV, "GL_MAX_TRACK_MATRICES_NV");
#endif
#if defined(GL_MATRIX0_NV)
defconsti(env, "GL-MATRIX0-NV", (GLenum) GL_MATRIX0_NV, "GL_MATRIX0_NV");
#endif
#if defined(GL_MATRIX1_NV)
defconsti(env, "GL-MATRIX1-NV", (GLenum) GL_MATRIX1_NV, "GL_MATRIX1_NV");
#endif
#if defined(GL_MATRIX2_NV)
defconsti(env, "GL-MATRIX2-NV", (GLenum) GL_MATRIX2_NV, "GL_MATRIX2_NV");
#endif
#if defined(GL_MATRIX3_NV)
defconsti(env, "GL-MATRIX3-NV", (GLenum) GL_MATRIX3_NV, "GL_MATRIX3_NV");
#endif
#if defined(GL_MATRIX4_NV)
defconsti(env, "GL-MATRIX4-NV", (GLenum) GL_MATRIX4_NV, "GL_MATRIX4_NV");
#endif
#if defined(GL_MATRIX5_NV)
defconsti(env, "GL-MATRIX5-NV", (GLenum) GL_MATRIX5_NV, "GL_MATRIX5_NV");
#endif
#if defined(GL_MATRIX6_NV)
defconsti(env, "GL-MATRIX6-NV", (GLenum) GL_MATRIX6_NV, "GL_MATRIX6_NV");
#endif
#if defined(GL_MATRIX7_NV)
defconsti(env, "GL-MATRIX7-NV", (GLenum) GL_MATRIX7_NV, "GL_MATRIX7_NV");
#endif
#if defined(GL_CURRENT_MATRIX_STACK_DEPTH_NV)
defconsti(env, "GL-CURRENT-MATRIX-STACK-DEPTH-NV", (GLenum) GL_CURRENT_MATRIX_STACK_DEPTH_NV, "GL_CURRENT_MATRIX_STACK_DEPTH_NV");
#endif
#if defined(GL_CURRENT_MATRIX_NV)
defconsti(env, "GL-CURRENT-MATRIX-NV", (GLenum) GL_CURRENT_MATRIX_NV, "GL_CURRENT_MATRIX_NV");
#endif
#if defined(GL_VERTEX_PROGRAM_POINT_SIZE_NV)
defconsti(env, "GL-VERTEX-PROGRAM-POINT-SIZE-NV", (GLenum) GL_VERTEX_PROGRAM_POINT_SIZE_NV, "GL_VERTEX_PROGRAM_POINT_SIZE_NV");
#endif
#if defined(GL_VERTEX_PROGRAM_TWO_SIDE_NV)
defconsti(env, "GL-VERTEX-PROGRAM-TWO-SIDE-NV", (GLenum) GL_VERTEX_PROGRAM_TWO_SIDE_NV, "GL_VERTEX_PROGRAM_TWO_SIDE_NV");
#endif
#if defined(GL_PROGRAM_PARAMETER_NV)
defconsti(env, "GL-PROGRAM-PARAMETER-NV", (GLenum) GL_PROGRAM_PARAMETER_NV, "GL_PROGRAM_PARAMETER_NV");
#endif
#if defined(GL_ATTRIB_ARRAY_POINTER_NV)
defconsti(env, "GL-ATTRIB-ARRAY-POINTER-NV", (GLenum) GL_ATTRIB_ARRAY_POINTER_NV, "GL_ATTRIB_ARRAY_POINTER_NV");
#endif
#if defined(GL_PROGRAM_TARGET_NV)
defconsti(env, "GL-PROGRAM-TARGET-NV", (GLenum) GL_PROGRAM_TARGET_NV, "GL_PROGRAM_TARGET_NV");
#endif
#if defined(GL_PROGRAM_RESIDENT_NV)
defconsti(env, "GL-PROGRAM-RESIDENT-NV", (GLenum) GL_PROGRAM_RESIDENT_NV, "GL_PROGRAM_RESIDENT_NV");
#endif
#if defined(GL_TRACK_MATRIX_NV)
defconsti(env, "GL-TRACK-MATRIX-NV", (GLenum) GL_TRACK_MATRIX_NV, "GL_TRACK_MATRIX_NV");
#endif
#if defined(GL_TRACK_MATRIX_TRANSFORM_NV)
defconsti(env, "GL-TRACK-MATRIX-TRANSFORM-NV", (GLenum) GL_TRACK_MATRIX_TRANSFORM_NV, "GL_TRACK_MATRIX_TRANSFORM_NV");
#endif
#if defined(GL_VERTEX_PROGRAM_BINDING_NV)
defconsti(env, "GL-VERTEX-PROGRAM-BINDING-NV", (GLenum) GL_VERTEX_PROGRAM_BINDING_NV, "GL_VERTEX_PROGRAM_BINDING_NV");
#endif
#if defined(GL_PROGRAM_ERROR_POSITION_NV)
defconsti(env, "GL-PROGRAM-ERROR-POSITION-NV", (GLenum) GL_PROGRAM_ERROR_POSITION_NV, "GL_PROGRAM_ERROR_POSITION_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY0_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY0-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY0_NV, "GL_VERTEX_ATTRIB_ARRAY0_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY1_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY1-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY1_NV, "GL_VERTEX_ATTRIB_ARRAY1_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY2_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY2-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY2_NV, "GL_VERTEX_ATTRIB_ARRAY2_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY3_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY3-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY3_NV, "GL_VERTEX_ATTRIB_ARRAY3_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY4_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY4-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY4_NV, "GL_VERTEX_ATTRIB_ARRAY4_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY5_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY5-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY5_NV, "GL_VERTEX_ATTRIB_ARRAY5_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY6_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY6-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY6_NV, "GL_VERTEX_ATTRIB_ARRAY6_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY7_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY7-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY7_NV, "GL_VERTEX_ATTRIB_ARRAY7_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY8_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY8-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY8_NV, "GL_VERTEX_ATTRIB_ARRAY8_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY9_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY9-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY9_NV, "GL_VERTEX_ATTRIB_ARRAY9_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY10_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY10-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY10_NV, "GL_VERTEX_ATTRIB_ARRAY10_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY11_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY11-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY11_NV, "GL_VERTEX_ATTRIB_ARRAY11_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY12_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY12-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY12_NV, "GL_VERTEX_ATTRIB_ARRAY12_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY13_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY13-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY13_NV, "GL_VERTEX_ATTRIB_ARRAY13_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY14_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY14-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY14_NV, "GL_VERTEX_ATTRIB_ARRAY14_NV");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY15_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY15-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY15_NV, "GL_VERTEX_ATTRIB_ARRAY15_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB0_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB0-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB0_4_NV, "GL_MAP1_VERTEX_ATTRIB0_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB1_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB1-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB1_4_NV, "GL_MAP1_VERTEX_ATTRIB1_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB2_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB2-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB2_4_NV, "GL_MAP1_VERTEX_ATTRIB2_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB3_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB3-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB3_4_NV, "GL_MAP1_VERTEX_ATTRIB3_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB4_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB4-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB4_4_NV, "GL_MAP1_VERTEX_ATTRIB4_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB5_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB5-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB5_4_NV, "GL_MAP1_VERTEX_ATTRIB5_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB6_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB6-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB6_4_NV, "GL_MAP1_VERTEX_ATTRIB6_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB7_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB7-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB7_4_NV, "GL_MAP1_VERTEX_ATTRIB7_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB8_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB8-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB8_4_NV, "GL_MAP1_VERTEX_ATTRIB8_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB9_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB9-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB9_4_NV, "GL_MAP1_VERTEX_ATTRIB9_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB10_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB10-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB10_4_NV, "GL_MAP1_VERTEX_ATTRIB10_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB11_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB11-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB11_4_NV, "GL_MAP1_VERTEX_ATTRIB11_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB12_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB12-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB12_4_NV, "GL_MAP1_VERTEX_ATTRIB12_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB13_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB13-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB13_4_NV, "GL_MAP1_VERTEX_ATTRIB13_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB14_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB14-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB14_4_NV, "GL_MAP1_VERTEX_ATTRIB14_4_NV");
#endif
#if defined(GL_MAP1_VERTEX_ATTRIB15_4_NV)
defconsti(env, "GL-MAP1-VERTEX-ATTRIB15-4-NV", (GLenum) GL_MAP1_VERTEX_ATTRIB15_4_NV, "GL_MAP1_VERTEX_ATTRIB15_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB0_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB0-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB0_4_NV, "GL_MAP2_VERTEX_ATTRIB0_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB1_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB1-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB1_4_NV, "GL_MAP2_VERTEX_ATTRIB1_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB2_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB2-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB2_4_NV, "GL_MAP2_VERTEX_ATTRIB2_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB3_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB3-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB3_4_NV, "GL_MAP2_VERTEX_ATTRIB3_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB4_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB4-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB4_4_NV, "GL_MAP2_VERTEX_ATTRIB4_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB5_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB5-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB5_4_NV, "GL_MAP2_VERTEX_ATTRIB5_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB6_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB6-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB6_4_NV, "GL_MAP2_VERTEX_ATTRIB6_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB7_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB7-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB7_4_NV, "GL_MAP2_VERTEX_ATTRIB7_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB8_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB8-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB8_4_NV, "GL_MAP2_VERTEX_ATTRIB8_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB9_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB9-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB9_4_NV, "GL_MAP2_VERTEX_ATTRIB9_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB10_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB10-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB10_4_NV, "GL_MAP2_VERTEX_ATTRIB10_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB11_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB11-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB11_4_NV, "GL_MAP2_VERTEX_ATTRIB11_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB12_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB12-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB12_4_NV, "GL_MAP2_VERTEX_ATTRIB12_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB13_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB13-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB13_4_NV, "GL_MAP2_VERTEX_ATTRIB13_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB14_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB14-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB14_4_NV, "GL_MAP2_VERTEX_ATTRIB14_4_NV");
#endif
#if defined(GL_MAP2_VERTEX_ATTRIB15_4_NV)
defconsti(env, "GL-MAP2-VERTEX-ATTRIB15-4-NV", (GLenum) GL_MAP2_VERTEX_ATTRIB15_4_NV, "GL_MAP2_VERTEX_ATTRIB15_4_NV");
#endif
#if defined(GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV)
defconsti(env, "GL-MAX-PROGRAM-EXEC-INSTRUCTIONS-NV", (GLenum) GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV, "GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV");
#endif
#if defined(GL_MAX_PROGRAM_CALL_DEPTH_NV)
defconsti(env, "GL-MAX-PROGRAM-CALL-DEPTH-NV", (GLenum) GL_MAX_PROGRAM_CALL_DEPTH_NV, "GL_MAX_PROGRAM_CALL_DEPTH_NV");
#endif
#if defined(GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB)
defconsti(env, "GL-MAX-VERTEX-TEXTURE-IMAGE-UNITS-ARB", (GLenum) GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB, "GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB");
#endif
#if defined(GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV)
defconsti(env, "GL-VERTEX-ATTRIB-ARRAY-INTEGER-NV", (GLenum) GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV, "GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV");
#endif
#if defined(GL_VIDEO_BUFFER_NV)
defconsti(env, "GL-VIDEO-BUFFER-NV", (GLenum) GL_VIDEO_BUFFER_NV, "GL_VIDEO_BUFFER_NV");
#endif
#if defined(GL_VIDEO_BUFFER_BINDING_NV)
defconsti(env, "GL-VIDEO-BUFFER-BINDING-NV", (GLenum) GL_VIDEO_BUFFER_BINDING_NV, "GL_VIDEO_BUFFER_BINDING_NV");
#endif
#if defined(GL_FIELD_UPPER_NV)
defconsti(env, "GL-FIELD-UPPER-NV", (GLenum) GL_FIELD_UPPER_NV, "GL_FIELD_UPPER_NV");
#endif
#if defined(GL_FIELD_LOWER_NV)
defconsti(env, "GL-FIELD-LOWER-NV", (GLenum) GL_FIELD_LOWER_NV, "GL_FIELD_LOWER_NV");
#endif
#if defined(GL_NUM_VIDEO_CAPTURE_STREAMS_NV)
defconsti(env, "GL-NUM-VIDEO-CAPTURE-STREAMS-NV", (GLenum) GL_NUM_VIDEO_CAPTURE_STREAMS_NV, "GL_NUM_VIDEO_CAPTURE_STREAMS_NV");
#endif
#if defined(GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV)
defconsti(env, "GL-NEXT-VIDEO-CAPTURE-BUFFER-STATUS-NV", (GLenum) GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV, "GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV");
#endif
#if defined(GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV)
defconsti(env, "GL-VIDEO-CAPTURE-TO-422-SUPPORTED-NV", (GLenum) GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV, "GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV");
#endif
#if defined(GL_LAST_VIDEO_CAPTURE_STATUS_NV)
defconsti(env, "GL-LAST-VIDEO-CAPTURE-STATUS-NV", (GLenum) GL_LAST_VIDEO_CAPTURE_STATUS_NV, "GL_LAST_VIDEO_CAPTURE_STATUS_NV");
#endif
#if defined(GL_VIDEO_BUFFER_PITCH_NV)
defconsti(env, "GL-VIDEO-BUFFER-PITCH-NV", (GLenum) GL_VIDEO_BUFFER_PITCH_NV, "GL_VIDEO_BUFFER_PITCH_NV");
#endif
#if defined(GL_VIDEO_COLOR_CONVERSION_MATRIX_NV)
defconsti(env, "GL-VIDEO-COLOR-CONVERSION-MATRIX-NV", (GLenum) GL_VIDEO_COLOR_CONVERSION_MATRIX_NV, "GL_VIDEO_COLOR_CONVERSION_MATRIX_NV");
#endif
#if defined(GL_VIDEO_COLOR_CONVERSION_MAX_NV)
defconsti(env, "GL-VIDEO-COLOR-CONVERSION-MAX-NV", (GLenum) GL_VIDEO_COLOR_CONVERSION_MAX_NV, "GL_VIDEO_COLOR_CONVERSION_MAX_NV");
#endif
#if defined(GL_VIDEO_COLOR_CONVERSION_MIN_NV)
defconsti(env, "GL-VIDEO-COLOR-CONVERSION-MIN-NV", (GLenum) GL_VIDEO_COLOR_CONVERSION_MIN_NV, "GL_VIDEO_COLOR_CONVERSION_MIN_NV");
#endif
#if defined(GL_VIDEO_COLOR_CONVERSION_OFFSET_NV)
defconsti(env, "GL-VIDEO-COLOR-CONVERSION-OFFSET-NV", (GLenum) GL_VIDEO_COLOR_CONVERSION_OFFSET_NV, "GL_VIDEO_COLOR_CONVERSION_OFFSET_NV");
#endif
#if defined(GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV)
defconsti(env, "GL-VIDEO-BUFFER-INTERNAL-FORMAT-NV", (GLenum) GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV, "GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV");
#endif
#if defined(GL_PARTIAL_SUCCESS_NV)
defconsti(env, "GL-PARTIAL-SUCCESS-NV", (GLenum) GL_PARTIAL_SUCCESS_NV, "GL_PARTIAL_SUCCESS_NV");
#endif
#if defined(GL_SUCCESS_NV)
defconsti(env, "GL-SUCCESS-NV", (GLenum) GL_SUCCESS_NV, "GL_SUCCESS_NV");
#endif
#if defined(GL_FAILURE_NV)
defconsti(env, "GL-FAILURE-NV", (GLenum) GL_FAILURE_NV, "GL_FAILURE_NV");
#endif
#if defined(GL_YCBYCR8_422_NV)
defconsti(env, "GL-YCBYCR8-422-NV", (GLenum) GL_YCBYCR8_422_NV, "GL_YCBYCR8_422_NV");
#endif
#if defined(GL_YCBAYCR8A_4224_NV)
defconsti(env, "GL-YCBAYCR8A-4224-NV", (GLenum) GL_YCBAYCR8A_4224_NV, "GL_YCBAYCR8A_4224_NV");
#endif
#if defined(GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV)
defconsti(env, "GL-Z6Y10Z6CB10Z6Y10Z6CR10-422-NV", (GLenum) GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV, "GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV");
#endif
#if defined(GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV)
defconsti(env, "GL-Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10-4224-NV", (GLenum) GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV, "GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV");
#endif
#if defined(GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV)
defconsti(env, "GL-Z4Y12Z4CB12Z4Y12Z4CR12-422-NV", (GLenum) GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV, "GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV");
#endif
#if defined(GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV)
defconsti(env, "GL-Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12-4224-NV", (GLenum) GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV, "GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV");
#endif
#if defined(GL_Z4Y12Z4CB12Z4CR12_444_NV)
defconsti(env, "GL-Z4Y12Z4CB12Z4CR12-444-NV", (GLenum) GL_Z4Y12Z4CB12Z4CR12_444_NV, "GL_Z4Y12Z4CB12Z4CR12_444_NV");
#endif
#if defined(GL_VIDEO_CAPTURE_FRAME_WIDTH_NV)
defconsti(env, "GL-VIDEO-CAPTURE-FRAME-WIDTH-NV", (GLenum) GL_VIDEO_CAPTURE_FRAME_WIDTH_NV, "GL_VIDEO_CAPTURE_FRAME_WIDTH_NV");
#endif
#if defined(GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV)
defconsti(env, "GL-VIDEO-CAPTURE-FRAME-HEIGHT-NV", (GLenum) GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV, "GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV");
#endif
#if defined(GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV)
defconsti(env, "GL-VIDEO-CAPTURE-FIELD-UPPER-HEIGHT-NV", (GLenum) GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV, "GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV");
#endif
#if defined(GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV)
defconsti(env, "GL-VIDEO-CAPTURE-FIELD-LOWER-HEIGHT-NV", (GLenum) GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV, "GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV");
#endif
#if defined(GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV)
defconsti(env, "GL-VIDEO-CAPTURE-SURFACE-ORIGIN-NV", (GLenum) GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV, "GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV");
#endif
#if defined(GL_MAX_VIEWPORTS_NV)
defconsti(env, "GL-MAX-VIEWPORTS-NV", (GLenum) GL_MAX_VIEWPORTS_NV, "GL_MAX_VIEWPORTS_NV");
#endif
#if defined(GL_VIEWPORT_SUBPIXEL_BITS_NV)
defconsti(env, "GL-VIEWPORT-SUBPIXEL-BITS-NV", (GLenum) GL_VIEWPORT_SUBPIXEL_BITS_NV, "GL_VIEWPORT_SUBPIXEL_BITS_NV");
#endif
#if defined(GL_VIEWPORT_BOUNDS_RANGE_NV)
defconsti(env, "GL-VIEWPORT-BOUNDS-RANGE-NV", (GLenum) GL_VIEWPORT_BOUNDS_RANGE_NV, "GL_VIEWPORT_BOUNDS_RANGE_NV");
#endif
#if defined(GL_VIEWPORT_INDEX_PROVOKING_VERTEX_NV)
defconsti(env, "GL-VIEWPORT-INDEX-PROVOKING-VERTEX-NV", (GLenum) GL_VIEWPORT_INDEX_PROVOKING_VERTEX_NV, "GL_VIEWPORT_INDEX_PROVOKING_VERTEX_NV");
#endif
#if defined(GL_SCISSOR_BOX)
defconsti(env, "GL-SCISSOR-BOX", (GLenum) GL_SCISSOR_BOX, "GL_SCISSOR_BOX");
#endif
#if defined(GL_VIEWPORT)
defconsti(env, "GL-VIEWPORT", (GLenum) GL_VIEWPORT, "GL_VIEWPORT");
#endif
#if defined(GL_DEPTH_RANGE)
defconsti(env, "GL-DEPTH-RANGE", (GLenum) GL_DEPTH_RANGE, "GL_DEPTH_RANGE");
#endif
#if defined(GL_SCISSOR_TEST)
defconsti(env, "GL-SCISSOR-TEST", (GLenum) GL_SCISSOR_TEST, "GL_SCISSOR_TEST");
#endif
#if defined(GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV)
defconsti(env, "GL-VIEWPORT-SWIZZLE-POSITIVE-X-NV", (GLenum) GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV, "GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV");
#endif
#if defined(GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV)
defconsti(env, "GL-VIEWPORT-SWIZZLE-NEGATIVE-X-NV", (GLenum) GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV, "GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV");
#endif
#if defined(GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV)
defconsti(env, "GL-VIEWPORT-SWIZZLE-POSITIVE-Y-NV", (GLenum) GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV, "GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV");
#endif
#if defined(GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV)
defconsti(env, "GL-VIEWPORT-SWIZZLE-NEGATIVE-Y-NV", (GLenum) GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV, "GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV");
#endif
#if defined(GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV)
defconsti(env, "GL-VIEWPORT-SWIZZLE-POSITIVE-Z-NV", (GLenum) GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV, "GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV");
#endif
#if defined(GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV)
defconsti(env, "GL-VIEWPORT-SWIZZLE-NEGATIVE-Z-NV", (GLenum) GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV, "GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV");
#endif
#if defined(GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV)
defconsti(env, "GL-VIEWPORT-SWIZZLE-POSITIVE-W-NV", (GLenum) GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV, "GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV");
#endif
#if defined(GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV)
defconsti(env, "GL-VIEWPORT-SWIZZLE-NEGATIVE-W-NV", (GLenum) GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV, "GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV");
#endif
#if defined(GL_VIEWPORT_SWIZZLE_X_NV)
defconsti(env, "GL-VIEWPORT-SWIZZLE-X-NV", (GLenum) GL_VIEWPORT_SWIZZLE_X_NV, "GL_VIEWPORT_SWIZZLE_X_NV");
#endif
#if defined(GL_VIEWPORT_SWIZZLE_Y_NV)
defconsti(env, "GL-VIEWPORT-SWIZZLE-Y-NV", (GLenum) GL_VIEWPORT_SWIZZLE_Y_NV, "GL_VIEWPORT_SWIZZLE_Y_NV");
#endif
#if defined(GL_VIEWPORT_SWIZZLE_Z_NV)
defconsti(env, "GL-VIEWPORT-SWIZZLE-Z-NV", (GLenum) GL_VIEWPORT_SWIZZLE_Z_NV, "GL_VIEWPORT_SWIZZLE_Z_NV");
#endif
#if defined(GL_VIEWPORT_SWIZZLE_W_NV)
defconsti(env, "GL-VIEWPORT-SWIZZLE-W-NV", (GLenum) GL_VIEWPORT_SWIZZLE_W_NV, "GL_VIEWPORT_SWIZZLE_W_NV");
#endif
#if defined(GL_TEXTURE_EXTERNAL_OES)
defconsti(env, "GL-TEXTURE-EXTERNAL-OES", (GLenum) GL_TEXTURE_EXTERNAL_OES, "GL_TEXTURE_EXTERNAL_OES");
#endif
#if defined(GL_TEXTURE_BINDING_EXTERNAL_OES)
defconsti(env, "GL-TEXTURE-BINDING-EXTERNAL-OES", (GLenum) GL_TEXTURE_BINDING_EXTERNAL_OES, "GL_TEXTURE_BINDING_EXTERNAL_OES");
#endif
#if defined(GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES)
defconsti(env, "GL-REQUIRED-TEXTURE-IMAGE-UNITS-OES", (GLenum) GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES, "GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES");
#endif
#if defined(GL_SAMPLER_EXTERNAL_OES)
defconsti(env, "GL-SAMPLER-EXTERNAL-OES", (GLenum) GL_SAMPLER_EXTERNAL_OES, "GL_SAMPLER_EXTERNAL_OES");
#endif
#if defined(GL_BLEND_EQUATION_RGB_OES)
defconsti(env, "GL-BLEND-EQUATION-RGB-OES", (GLenum) GL_BLEND_EQUATION_RGB_OES, "GL_BLEND_EQUATION_RGB_OES");
#endif
#if defined(GL_BLEND_EQUATION_ALPHA_OES)
defconsti(env, "GL-BLEND-EQUATION-ALPHA-OES", (GLenum) GL_BLEND_EQUATION_ALPHA_OES, "GL_BLEND_EQUATION_ALPHA_OES");
#endif
#if defined(GL_BLEND_DST_RGB_OES)
defconsti(env, "GL-BLEND-DST-RGB-OES", (GLenum) GL_BLEND_DST_RGB_OES, "GL_BLEND_DST_RGB_OES");
#endif
#if defined(GL_BLEND_SRC_RGB_OES)
defconsti(env, "GL-BLEND-SRC-RGB-OES", (GLenum) GL_BLEND_SRC_RGB_OES, "GL_BLEND_SRC_RGB_OES");
#endif
#if defined(GL_BLEND_DST_ALPHA_OES)
defconsti(env, "GL-BLEND-DST-ALPHA-OES", (GLenum) GL_BLEND_DST_ALPHA_OES, "GL_BLEND_DST_ALPHA_OES");
#endif
#if defined(GL_BLEND_SRC_ALPHA_OES)
defconsti(env, "GL-BLEND-SRC-ALPHA-OES", (GLenum) GL_BLEND_SRC_ALPHA_OES, "GL_BLEND_SRC_ALPHA_OES");
#endif
#if defined(GL_BLEND_EQUATION_OES)
defconsti(env, "GL-BLEND-EQUATION-OES", (GLenum) GL_BLEND_EQUATION_OES, "GL_BLEND_EQUATION_OES");
#endif
#if defined(GL_FUNC_ADD_OES)
defconsti(env, "GL-FUNC-ADD-OES", (GLenum) GL_FUNC_ADD_OES, "GL_FUNC_ADD_OES");
#endif
#if defined(GL_FUNC_SUBTRACT_OES)
defconsti(env, "GL-FUNC-SUBTRACT-OES", (GLenum) GL_FUNC_SUBTRACT_OES, "GL_FUNC_SUBTRACT_OES");
#endif
#if defined(GL_FUNC_REVERSE_SUBTRACT_OES)
defconsti(env, "GL-FUNC-REVERSE-SUBTRACT-OES", (GLenum) GL_FUNC_REVERSE_SUBTRACT_OES, "GL_FUNC_REVERSE_SUBTRACT_OES");
#endif
#if defined(GL_BYTE)
defconsti(env, "GL-BYTE", (GLenum) GL_BYTE, "GL_BYTE");
#endif
#if defined(GL_ETC1_RGB8_OES)
defconsti(env, "GL-ETC1-RGB8-OES", (GLenum) GL_ETC1_RGB8_OES, "GL_ETC1_RGB8_OES");
#endif
#if defined(GL_PALETTE4_RGB8_OES)
defconsti(env, "GL-PALETTE4-RGB8-OES", (GLenum) GL_PALETTE4_RGB8_OES, "GL_PALETTE4_RGB8_OES");
#endif
#if defined(GL_PALETTE4_RGBA8_OES)
defconsti(env, "GL-PALETTE4-RGBA8-OES", (GLenum) GL_PALETTE4_RGBA8_OES, "GL_PALETTE4_RGBA8_OES");
#endif
#if defined(GL_PALETTE4_R5_G6_B5_OES)
defconsti(env, "GL-PALETTE4-R5-G6-B5-OES", (GLenum) GL_PALETTE4_R5_G6_B5_OES, "GL_PALETTE4_R5_G6_B5_OES");
#endif
#if defined(GL_PALETTE4_RGBA4_OES)
defconsti(env, "GL-PALETTE4-RGBA4-OES", (GLenum) GL_PALETTE4_RGBA4_OES, "GL_PALETTE4_RGBA4_OES");
#endif
#if defined(GL_PALETTE4_RGB5_A1_OES)
defconsti(env, "GL-PALETTE4-RGB5-A1-OES", (GLenum) GL_PALETTE4_RGB5_A1_OES, "GL_PALETTE4_RGB5_A1_OES");
#endif
#if defined(GL_PALETTE8_RGB8_OES)
defconsti(env, "GL-PALETTE8-RGB8-OES", (GLenum) GL_PALETTE8_RGB8_OES, "GL_PALETTE8_RGB8_OES");
#endif
#if defined(GL_PALETTE8_RGBA8_OES)
defconsti(env, "GL-PALETTE8-RGBA8-OES", (GLenum) GL_PALETTE8_RGBA8_OES, "GL_PALETTE8_RGBA8_OES");
#endif
#if defined(GL_PALETTE8_R5_G6_B5_OES)
defconsti(env, "GL-PALETTE8-R5-G6-B5-OES", (GLenum) GL_PALETTE8_R5_G6_B5_OES, "GL_PALETTE8_R5_G6_B5_OES");
#endif
#if defined(GL_PALETTE8_RGBA4_OES)
defconsti(env, "GL-PALETTE8-RGBA4-OES", (GLenum) GL_PALETTE8_RGBA4_OES, "GL_PALETTE8_RGBA4_OES");
#endif
#if defined(GL_PALETTE8_RGB5_A1_OES)
defconsti(env, "GL-PALETTE8-RGB5-A1-OES", (GLenum) GL_PALETTE8_RGB5_A1_OES, "GL_PALETTE8_RGB5_A1_OES");
#endif
#if defined(GL_DEPTH_COMPONENT24_OES)
defconsti(env, "GL-DEPTH-COMPONENT24-OES", (GLenum) GL_DEPTH_COMPONENT24_OES, "GL_DEPTH_COMPONENT24_OES");
#endif
#if defined(GL_DEPTH_COMPONENT32_OES)
defconsti(env, "GL-DEPTH-COMPONENT32-OES", (GLenum) GL_DEPTH_COMPONENT32_OES, "GL_DEPTH_COMPONENT32_OES");
#endif
#if defined(GL_DEPTH_COMPONENT)
defconsti(env, "GL-DEPTH-COMPONENT", (GLenum) GL_DEPTH_COMPONENT, "GL_DEPTH_COMPONENT");
#endif
#if defined(GL_UNSIGNED_SHORT)
defconsti(env, "GL-UNSIGNED-SHORT", (GLenum) GL_UNSIGNED_SHORT, "GL_UNSIGNED_SHORT");
#endif
#if defined(GL_UNSIGNED_INT)
defconsti(env, "GL-UNSIGNED-INT", (GLenum) GL_UNSIGNED_INT, "GL_UNSIGNED_INT");
#endif
#if defined(GL_BLEND_EQUATION_RGB)
defconsti(env, "GL-BLEND-EQUATION-RGB", (GLenum) GL_BLEND_EQUATION_RGB, "GL_BLEND_EQUATION_RGB");
#endif
#if defined(GL_BLEND_EQUATION_ALPHA)
defconsti(env, "GL-BLEND-EQUATION-ALPHA", (GLenum) GL_BLEND_EQUATION_ALPHA, "GL_BLEND_EQUATION_ALPHA");
#endif
#if defined(GL_BLEND_SRC_RGB)
defconsti(env, "GL-BLEND-SRC-RGB", (GLenum) GL_BLEND_SRC_RGB, "GL_BLEND_SRC_RGB");
#endif
#if defined(GL_BLEND_SRC_ALPHA)
defconsti(env, "GL-BLEND-SRC-ALPHA", (GLenum) GL_BLEND_SRC_ALPHA, "GL_BLEND_SRC_ALPHA");
#endif
#if defined(GL_BLEND_DST_RGB)
defconsti(env, "GL-BLEND-DST-RGB", (GLenum) GL_BLEND_DST_RGB, "GL_BLEND_DST_RGB");
#endif
#if defined(GL_BLEND_DST_ALPHA)
defconsti(env, "GL-BLEND-DST-ALPHA", (GLenum) GL_BLEND_DST_ALPHA, "GL_BLEND_DST_ALPHA");
#endif
#if defined(GL_COLOR_WRITEMASK)
defconsti(env, "GL-COLOR-WRITEMASK", (GLenum) GL_COLOR_WRITEMASK, "GL_COLOR_WRITEMASK");
#endif
#if defined(GL_BLEND)
defconsti(env, "GL-BLEND", (GLenum) GL_BLEND, "GL_BLEND");
#endif
#if defined(GL_FUNC_ADD)
defconsti(env, "GL-FUNC-ADD", (GLenum) GL_FUNC_ADD, "GL_FUNC_ADD");
#endif
#if defined(GL_FUNC_SUBTRACT)
defconsti(env, "GL-FUNC-SUBTRACT", (GLenum) GL_FUNC_SUBTRACT, "GL_FUNC_SUBTRACT");
#endif
#if defined(GL_FUNC_REVERSE_SUBTRACT)
defconsti(env, "GL-FUNC-REVERSE-SUBTRACT", (GLenum) GL_FUNC_REVERSE_SUBTRACT, "GL_FUNC_REVERSE_SUBTRACT");
#endif
#if defined(GL_MIN)
defconsti(env, "GL-MIN", (GLenum) GL_MIN, "GL_MIN");
#endif
#if defined(GL_MAX)
defconsti(env, "GL-MAX", (GLenum) GL_MAX, "GL_MAX");
#endif
#if defined(GL_ZERO)
defconsti(env, "GL-ZERO", (GLenum) GL_ZERO, "GL_ZERO");
#endif
#if defined(GL_ONE)
defconsti(env, "GL-ONE", (GLenum) GL_ONE, "GL_ONE");
#endif
#if defined(GL_SRC_COLOR)
defconsti(env, "GL-SRC-COLOR", (GLenum) GL_SRC_COLOR, "GL_SRC_COLOR");
#endif
#if defined(GL_ONE_MINUS_SRC_COLOR)
defconsti(env, "GL-ONE-MINUS-SRC-COLOR", (GLenum) GL_ONE_MINUS_SRC_COLOR, "GL_ONE_MINUS_SRC_COLOR");
#endif
#if defined(GL_DST_COLOR)
defconsti(env, "GL-DST-COLOR", (GLenum) GL_DST_COLOR, "GL_DST_COLOR");
#endif
#if defined(GL_ONE_MINUS_DST_COLOR)
defconsti(env, "GL-ONE-MINUS-DST-COLOR", (GLenum) GL_ONE_MINUS_DST_COLOR, "GL_ONE_MINUS_DST_COLOR");
#endif
#if defined(GL_SRC_ALPHA)
defconsti(env, "GL-SRC-ALPHA", (GLenum) GL_SRC_ALPHA, "GL_SRC_ALPHA");
#endif
#if defined(GL_ONE_MINUS_SRC_ALPHA)
defconsti(env, "GL-ONE-MINUS-SRC-ALPHA", (GLenum) GL_ONE_MINUS_SRC_ALPHA, "GL_ONE_MINUS_SRC_ALPHA");
#endif
#if defined(GL_DST_ALPHA)
defconsti(env, "GL-DST-ALPHA", (GLenum) GL_DST_ALPHA, "GL_DST_ALPHA");
#endif
#if defined(GL_ONE_MINUS_DST_ALPHA)
defconsti(env, "GL-ONE-MINUS-DST-ALPHA", (GLenum) GL_ONE_MINUS_DST_ALPHA, "GL_ONE_MINUS_DST_ALPHA");
#endif
#if defined(GL_CONSTANT_COLOR)
defconsti(env, "GL-CONSTANT-COLOR", (GLenum) GL_CONSTANT_COLOR, "GL_CONSTANT_COLOR");
#endif
#if defined(GL_ONE_MINUS_CONSTANT_COLOR)
defconsti(env, "GL-ONE-MINUS-CONSTANT-COLOR", (GLenum) GL_ONE_MINUS_CONSTANT_COLOR, "GL_ONE_MINUS_CONSTANT_COLOR");
#endif
#if defined(GL_CONSTANT_ALPHA)
defconsti(env, "GL-CONSTANT-ALPHA", (GLenum) GL_CONSTANT_ALPHA, "GL_CONSTANT_ALPHA");
#endif
#if defined(GL_ONE_MINUS_CONSTANT_ALPHA)
defconsti(env, "GL-ONE-MINUS-CONSTANT-ALPHA", (GLenum) GL_ONE_MINUS_CONSTANT_ALPHA, "GL_ONE_MINUS_CONSTANT_ALPHA");
#endif
#if defined(GL_SRC_ALPHA_SATURATE)
defconsti(env, "GL-SRC-ALPHA-SATURATE", (GLenum) GL_SRC_ALPHA_SATURATE, "GL_SRC_ALPHA_SATURATE");
#endif
#if defined(GL_TEXTURE_CROP_RECT_OES)
defconsti(env, "GL-TEXTURE-CROP-RECT-OES", (GLenum) GL_TEXTURE_CROP_RECT_OES, "GL_TEXTURE_CROP_RECT_OES");
#endif
#if defined(GL_UNSIGNED_INT)
defconsti(env, "GL-UNSIGNED-INT", (GLenum) GL_UNSIGNED_INT, "GL_UNSIGNED_INT");
#endif
#if defined(GL_FIXED_OES)
defconsti(env, "GL-FIXED-OES", (GLenum) GL_FIXED_OES, "GL_FIXED_OES");
#endif
#if defined(GL_NONE_OES)
defconsti(env, "GL-NONE-OES", (GLenum) GL_NONE_OES, "GL_NONE_OES");
#endif
#if defined(GL_FRAMEBUFFER_OES)
defconsti(env, "GL-FRAMEBUFFER-OES", (GLenum) GL_FRAMEBUFFER_OES, "GL_FRAMEBUFFER_OES");
#endif
#if defined(GL_RENDERBUFFER_OES)
defconsti(env, "GL-RENDERBUFFER-OES", (GLenum) GL_RENDERBUFFER_OES, "GL_RENDERBUFFER_OES");
#endif
#if defined(GL_RGBA4_OES)
defconsti(env, "GL-RGBA4-OES", (GLenum) GL_RGBA4_OES, "GL_RGBA4_OES");
#endif
#if defined(GL_RGB5_A1_OES)
defconsti(env, "GL-RGB5-A1-OES", (GLenum) GL_RGB5_A1_OES, "GL_RGB5_A1_OES");
#endif
#if defined(GL_RGB565_OES)
defconsti(env, "GL-RGB565-OES", (GLenum) GL_RGB565_OES, "GL_RGB565_OES");
#endif
#if defined(GL_DEPTH_COMPONENT16_OES)
defconsti(env, "GL-DEPTH-COMPONENT16-OES", (GLenum) GL_DEPTH_COMPONENT16_OES, "GL_DEPTH_COMPONENT16_OES");
#endif
#if defined(GL_RENDERBUFFER_WIDTH_OES)
defconsti(env, "GL-RENDERBUFFER-WIDTH-OES", (GLenum) GL_RENDERBUFFER_WIDTH_OES, "GL_RENDERBUFFER_WIDTH_OES");
#endif
#if defined(GL_RENDERBUFFER_HEIGHT_OES)
defconsti(env, "GL-RENDERBUFFER-HEIGHT-OES", (GLenum) GL_RENDERBUFFER_HEIGHT_OES, "GL_RENDERBUFFER_HEIGHT_OES");
#endif
#if defined(GL_RENDERBUFFER_INTERNAL_FORMAT_OES)
defconsti(env, "GL-RENDERBUFFER-INTERNAL-FORMAT-OES", (GLenum) GL_RENDERBUFFER_INTERNAL_FORMAT_OES, "GL_RENDERBUFFER_INTERNAL_FORMAT_OES");
#endif
#if defined(GL_RENDERBUFFER_RED_SIZE_OES)
defconsti(env, "GL-RENDERBUFFER-RED-SIZE-OES", (GLenum) GL_RENDERBUFFER_RED_SIZE_OES, "GL_RENDERBUFFER_RED_SIZE_OES");
#endif
#if defined(GL_RENDERBUFFER_GREEN_SIZE_OES)
defconsti(env, "GL-RENDERBUFFER-GREEN-SIZE-OES", (GLenum) GL_RENDERBUFFER_GREEN_SIZE_OES, "GL_RENDERBUFFER_GREEN_SIZE_OES");
#endif
#if defined(GL_RENDERBUFFER_BLUE_SIZE_OES)
defconsti(env, "GL-RENDERBUFFER-BLUE-SIZE-OES", (GLenum) GL_RENDERBUFFER_BLUE_SIZE_OES, "GL_RENDERBUFFER_BLUE_SIZE_OES");
#endif
#if defined(GL_RENDERBUFFER_ALPHA_SIZE_OES)
defconsti(env, "GL-RENDERBUFFER-ALPHA-SIZE-OES", (GLenum) GL_RENDERBUFFER_ALPHA_SIZE_OES, "GL_RENDERBUFFER_ALPHA_SIZE_OES");
#endif
#if defined(GL_RENDERBUFFER_DEPTH_SIZE_OES)
defconsti(env, "GL-RENDERBUFFER-DEPTH-SIZE-OES", (GLenum) GL_RENDERBUFFER_DEPTH_SIZE_OES, "GL_RENDERBUFFER_DEPTH_SIZE_OES");
#endif
#if defined(GL_RENDERBUFFER_STENCIL_SIZE_OES)
defconsti(env, "GL-RENDERBUFFER-STENCIL-SIZE-OES", (GLenum) GL_RENDERBUFFER_STENCIL_SIZE_OES, "GL_RENDERBUFFER_STENCIL_SIZE_OES");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-OBJECT-TYPE-OES", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-OBJECT-NAME-OES", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-LEVEL-OES", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-CUBE-MAP-FACE-OES", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES");
#endif
#if defined(GL_COLOR_ATTACHMENT0_OES)
defconsti(env, "GL-COLOR-ATTACHMENT0-OES", (GLenum) GL_COLOR_ATTACHMENT0_OES, "GL_COLOR_ATTACHMENT0_OES");
#endif
#if defined(GL_DEPTH_ATTACHMENT_OES)
defconsti(env, "GL-DEPTH-ATTACHMENT-OES", (GLenum) GL_DEPTH_ATTACHMENT_OES, "GL_DEPTH_ATTACHMENT_OES");
#endif
#if defined(GL_STENCIL_ATTACHMENT_OES)
defconsti(env, "GL-STENCIL-ATTACHMENT-OES", (GLenum) GL_STENCIL_ATTACHMENT_OES, "GL_STENCIL_ATTACHMENT_OES");
#endif
#if defined(GL_FRAMEBUFFER_COMPLETE_OES)
defconsti(env, "GL-FRAMEBUFFER-COMPLETE-OES", (GLenum) GL_FRAMEBUFFER_COMPLETE_OES, "GL_FRAMEBUFFER_COMPLETE_OES");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-ATTACHMENT-OES", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES, "GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-MISSING-ATTACHMENT-OES", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES, "GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-DIMENSIONS-OES", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES, "GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-FORMATS-OES", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES, "GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES");
#endif
#if defined(GL_FRAMEBUFFER_UNSUPPORTED_OES)
defconsti(env, "GL-FRAMEBUFFER-UNSUPPORTED-OES", (GLenum) GL_FRAMEBUFFER_UNSUPPORTED_OES, "GL_FRAMEBUFFER_UNSUPPORTED_OES");
#endif
#if defined(GL_FRAMEBUFFER_BINDING_OES)
defconsti(env, "GL-FRAMEBUFFER-BINDING-OES", (GLenum) GL_FRAMEBUFFER_BINDING_OES, "GL_FRAMEBUFFER_BINDING_OES");
#endif
#if defined(GL_RENDERBUFFER_BINDING_OES)
defconsti(env, "GL-RENDERBUFFER-BINDING-OES", (GLenum) GL_RENDERBUFFER_BINDING_OES, "GL_RENDERBUFFER_BINDING_OES");
#endif
#if defined(GL_MAX_RENDERBUFFER_SIZE_OES)
defconsti(env, "GL-MAX-RENDERBUFFER-SIZE-OES", (GLenum) GL_MAX_RENDERBUFFER_SIZE_OES, "GL_MAX_RENDERBUFFER_SIZE_OES");
#endif
#if defined(GL_INVALID_FRAMEBUFFER_OPERATION_OES)
defconsti(env, "GL-INVALID-FRAMEBUFFER-OPERATION-OES", (GLenum) GL_INVALID_FRAMEBUFFER_OPERATION_OES, "GL_INVALID_FRAMEBUFFER_OPERATION_OES");
#endif
#if defined(GL_GEOMETRY_SHADER_OES)
defconsti(env, "GL-GEOMETRY-SHADER-OES", (GLenum) GL_GEOMETRY_SHADER_OES, "GL_GEOMETRY_SHADER_OES");
#endif
#if defined(GL_GEOMETRY_SHADER_BIT_OES)
defconsti(env, "GL-GEOMETRY-SHADER-BIT-OES", (GLenum) GL_GEOMETRY_SHADER_BIT_OES, "GL_GEOMETRY_SHADER_BIT_OES");
#endif
#if defined(GL_GEOMETRY_LINKED_VERTICES_OUT_OES)
defconsti(env, "GL-GEOMETRY-LINKED-VERTICES-OUT-OES", (GLenum) GL_GEOMETRY_LINKED_VERTICES_OUT_OES, "GL_GEOMETRY_LINKED_VERTICES_OUT_OES");
#endif
#if defined(GL_GEOMETRY_LINKED_INPUT_TYPE_OES)
defconsti(env, "GL-GEOMETRY-LINKED-INPUT-TYPE-OES", (GLenum) GL_GEOMETRY_LINKED_INPUT_TYPE_OES, "GL_GEOMETRY_LINKED_INPUT_TYPE_OES");
#endif
#if defined(GL_GEOMETRY_LINKED_OUTPUT_TYPE_OES)
defconsti(env, "GL-GEOMETRY-LINKED-OUTPUT-TYPE-OES", (GLenum) GL_GEOMETRY_LINKED_OUTPUT_TYPE_OES, "GL_GEOMETRY_LINKED_OUTPUT_TYPE_OES");
#endif
#if defined(GL_GEOMETRY_SHADER_INVOCATIONS_OES)
defconsti(env, "GL-GEOMETRY-SHADER-INVOCATIONS-OES", (GLenum) GL_GEOMETRY_SHADER_INVOCATIONS_OES, "GL_GEOMETRY_SHADER_INVOCATIONS_OES");
#endif
#if defined(GL_LAYER_PROVOKING_VERTEX_OES)
defconsti(env, "GL-LAYER-PROVOKING-VERTEX-OES", (GLenum) GL_LAYER_PROVOKING_VERTEX_OES, "GL_LAYER_PROVOKING_VERTEX_OES");
#endif
#if defined(GL_LINES_ADJACENCY_OES)
defconsti(env, "GL-LINES-ADJACENCY-OES", (GLenum) GL_LINES_ADJACENCY_OES, "GL_LINES_ADJACENCY_OES");
#endif
#if defined(GL_LINE_STRIP_ADJACENCY_OES)
defconsti(env, "GL-LINE-STRIP-ADJACENCY-OES", (GLenum) GL_LINE_STRIP_ADJACENCY_OES, "GL_LINE_STRIP_ADJACENCY_OES");
#endif
#if defined(GL_TRIANGLES_ADJACENCY_OES)
defconsti(env, "GL-TRIANGLES-ADJACENCY-OES", (GLenum) GL_TRIANGLES_ADJACENCY_OES, "GL_TRIANGLES_ADJACENCY_OES");
#endif
#if defined(GL_TRIANGLE_STRIP_ADJACENCY_OES)
defconsti(env, "GL-TRIANGLE-STRIP-ADJACENCY-OES", (GLenum) GL_TRIANGLE_STRIP_ADJACENCY_OES, "GL_TRIANGLE_STRIP_ADJACENCY_OES");
#endif
#if defined(GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_OES)
defconsti(env, "GL-MAX-GEOMETRY-UNIFORM-COMPONENTS-OES", (GLenum) GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_OES, "GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_OES");
#endif
#if defined(GL_MAX_GEOMETRY_UNIFORM_BLOCKS_OES)
defconsti(env, "GL-MAX-GEOMETRY-UNIFORM-BLOCKS-OES", (GLenum) GL_MAX_GEOMETRY_UNIFORM_BLOCKS_OES, "GL_MAX_GEOMETRY_UNIFORM_BLOCKS_OES");
#endif
#if defined(GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES)
defconsti(env, "GL-MAX-COMBINED-GEOMETRY-UNIFORM-COMPONENTS-OES", (GLenum) GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES, "GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES");
#endif
#if defined(GL_MAX_GEOMETRY_INPUT_COMPONENTS_OES)
defconsti(env, "GL-MAX-GEOMETRY-INPUT-COMPONENTS-OES", (GLenum) GL_MAX_GEOMETRY_INPUT_COMPONENTS_OES, "GL_MAX_GEOMETRY_INPUT_COMPONENTS_OES");
#endif
#if defined(GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_OES)
defconsti(env, "GL-MAX-GEOMETRY-OUTPUT-COMPONENTS-OES", (GLenum) GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_OES, "GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_OES");
#endif
#if defined(GL_MAX_GEOMETRY_OUTPUT_VERTICES_OES)
defconsti(env, "GL-MAX-GEOMETRY-OUTPUT-VERTICES-OES", (GLenum) GL_MAX_GEOMETRY_OUTPUT_VERTICES_OES, "GL_MAX_GEOMETRY_OUTPUT_VERTICES_OES");
#endif
#if defined(GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES)
defconsti(env, "GL-MAX-GEOMETRY-TOTAL-OUTPUT-COMPONENTS-OES", (GLenum) GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES, "GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES");
#endif
#if defined(GL_MAX_GEOMETRY_SHADER_INVOCATIONS_OES)
defconsti(env, "GL-MAX-GEOMETRY-SHADER-INVOCATIONS-OES", (GLenum) GL_MAX_GEOMETRY_SHADER_INVOCATIONS_OES, "GL_MAX_GEOMETRY_SHADER_INVOCATIONS_OES");
#endif
#if defined(GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES)
defconsti(env, "GL-MAX-GEOMETRY-TEXTURE-IMAGE-UNITS-OES", (GLenum) GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES, "GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES");
#endif
#if defined(GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES)
defconsti(env, "GL-MAX-GEOMETRY-ATOMIC-COUNTER-BUFFERS-OES", (GLenum) GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES, "GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES");
#endif
#if defined(GL_MAX_GEOMETRY_ATOMIC_COUNTERS_OES)
defconsti(env, "GL-MAX-GEOMETRY-ATOMIC-COUNTERS-OES", (GLenum) GL_MAX_GEOMETRY_ATOMIC_COUNTERS_OES, "GL_MAX_GEOMETRY_ATOMIC_COUNTERS_OES");
#endif
#if defined(GL_MAX_GEOMETRY_IMAGE_UNIFORMS_OES)
defconsti(env, "GL-MAX-GEOMETRY-IMAGE-UNIFORMS-OES", (GLenum) GL_MAX_GEOMETRY_IMAGE_UNIFORMS_OES, "GL_MAX_GEOMETRY_IMAGE_UNIFORMS_OES");
#endif
#if defined(GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES)
defconsti(env, "GL-MAX-GEOMETRY-SHADER-STORAGE-BLOCKS-OES", (GLenum) GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES, "GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES");
#endif
#if defined(GL_FIRST_VERTEX_CONVENTION_OES)
defconsti(env, "GL-FIRST-VERTEX-CONVENTION-OES", (GLenum) GL_FIRST_VERTEX_CONVENTION_OES, "GL_FIRST_VERTEX_CONVENTION_OES");
#endif
#if defined(GL_LAST_VERTEX_CONVENTION_OES)
defconsti(env, "GL-LAST-VERTEX-CONVENTION-OES", (GLenum) GL_LAST_VERTEX_CONVENTION_OES, "GL_LAST_VERTEX_CONVENTION_OES");
#endif
#if defined(GL_UNDEFINED_VERTEX_OES)
defconsti(env, "GL-UNDEFINED-VERTEX-OES", (GLenum) GL_UNDEFINED_VERTEX_OES, "GL_UNDEFINED_VERTEX_OES");
#endif
#if defined(GL_PRIMITIVES_GENERATED_OES)
defconsti(env, "GL-PRIMITIVES-GENERATED-OES", (GLenum) GL_PRIMITIVES_GENERATED_OES, "GL_PRIMITIVES_GENERATED_OES");
#endif
#if defined(GL_FRAMEBUFFER_DEFAULT_LAYERS_OES)
defconsti(env, "GL-FRAMEBUFFER-DEFAULT-LAYERS-OES", (GLenum) GL_FRAMEBUFFER_DEFAULT_LAYERS_OES, "GL_FRAMEBUFFER_DEFAULT_LAYERS_OES");
#endif
#if defined(GL_MAX_FRAMEBUFFER_LAYERS_OES)
defconsti(env, "GL-MAX-FRAMEBUFFER-LAYERS-OES", (GLenum) GL_MAX_FRAMEBUFFER_LAYERS_OES, "GL_MAX_FRAMEBUFFER_LAYERS_OES");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-LAYER-TARGETS-OES", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES, "GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-LAYERED-OES", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES, "GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES");
#endif
#if defined(GL_REFERENCED_BY_GEOMETRY_SHADER_OES)
defconsti(env, "GL-REFERENCED-BY-GEOMETRY-SHADER-OES", (GLenum) GL_REFERENCED_BY_GEOMETRY_SHADER_OES, "GL_REFERENCED_BY_GEOMETRY_SHADER_OES");
#endif
#if defined(GL_PROGRAM_BINARY_LENGTH_OES)
defconsti(env, "GL-PROGRAM-BINARY-LENGTH-OES", (GLenum) GL_PROGRAM_BINARY_LENGTH_OES, "GL_PROGRAM_BINARY_LENGTH_OES");
#endif
#if defined(GL_NUM_PROGRAM_BINARY_FORMATS_OES)
defconsti(env, "GL-NUM-PROGRAM-BINARY-FORMATS-OES", (GLenum) GL_NUM_PROGRAM_BINARY_FORMATS_OES, "GL_NUM_PROGRAM_BINARY_FORMATS_OES");
#endif
#if defined(GL_PROGRAM_BINARY_FORMATS_OES)
defconsti(env, "GL-PROGRAM-BINARY-FORMATS-OES", (GLenum) GL_PROGRAM_BINARY_FORMATS_OES, "GL_PROGRAM_BINARY_FORMATS_OES");
#endif
#if defined(GL_WRITE_ONLY_OES)
defconsti(env, "GL-WRITE-ONLY-OES", (GLenum) GL_WRITE_ONLY_OES, "GL_WRITE_ONLY_OES");
#endif
#if defined(GL_BUFFER_ACCESS_OES)
defconsti(env, "GL-BUFFER-ACCESS-OES", (GLenum) GL_BUFFER_ACCESS_OES, "GL_BUFFER_ACCESS_OES");
#endif
#if defined(GL_BUFFER_MAPPED_OES)
defconsti(env, "GL-BUFFER-MAPPED-OES", (GLenum) GL_BUFFER_MAPPED_OES, "GL_BUFFER_MAPPED_OES");
#endif
#if defined(GL_BUFFER_MAP_POINTER_OES)
defconsti(env, "GL-BUFFER-MAP-POINTER-OES", (GLenum) GL_BUFFER_MAP_POINTER_OES, "GL_BUFFER_MAP_POINTER_OES");
#endif
#if defined(GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES)
defconsti(env, "GL-MODELVIEW-MATRIX-FLOAT-AS-INT-BITS-OES", (GLenum) GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES, "GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES");
#endif
#if defined(GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES)
defconsti(env, "GL-PROJECTION-MATRIX-FLOAT-AS-INT-BITS-OES", (GLenum) GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES, "GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES");
#endif
#if defined(GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES)
defconsti(env, "GL-TEXTURE-MATRIX-FLOAT-AS-INT-BITS-OES", (GLenum) GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES, "GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES");
#endif
#if defined(GL_MAX_VERTEX_UNITS_OES)
defconsti(env, "GL-MAX-VERTEX-UNITS-OES", (GLenum) GL_MAX_VERTEX_UNITS_OES, "GL_MAX_VERTEX_UNITS_OES");
#endif
#if defined(GL_MAX_PALETTE_MATRICES_OES)
defconsti(env, "GL-MAX-PALETTE-MATRICES-OES", (GLenum) GL_MAX_PALETTE_MATRICES_OES, "GL_MAX_PALETTE_MATRICES_OES");
#endif
#if defined(GL_MATRIX_PALETTE_OES)
defconsti(env, "GL-MATRIX-PALETTE-OES", (GLenum) GL_MATRIX_PALETTE_OES, "GL_MATRIX_PALETTE_OES");
#endif
#if defined(GL_MATRIX_INDEX_ARRAY_OES)
defconsti(env, "GL-MATRIX-INDEX-ARRAY-OES", (GLenum) GL_MATRIX_INDEX_ARRAY_OES, "GL_MATRIX_INDEX_ARRAY_OES");
#endif
#if defined(GL_WEIGHT_ARRAY_OES)
defconsti(env, "GL-WEIGHT-ARRAY-OES", (GLenum) GL_WEIGHT_ARRAY_OES, "GL_WEIGHT_ARRAY_OES");
#endif
#if defined(GL_CURRENT_PALETTE_MATRIX_OES)
defconsti(env, "GL-CURRENT-PALETTE-MATRIX-OES", (GLenum) GL_CURRENT_PALETTE_MATRIX_OES, "GL_CURRENT_PALETTE_MATRIX_OES");
#endif
#if defined(GL_MATRIX_INDEX_ARRAY_SIZE_OES)
defconsti(env, "GL-MATRIX-INDEX-ARRAY-SIZE-OES", (GLenum) GL_MATRIX_INDEX_ARRAY_SIZE_OES, "GL_MATRIX_INDEX_ARRAY_SIZE_OES");
#endif
#if defined(GL_MATRIX_INDEX_ARRAY_TYPE_OES)
defconsti(env, "GL-MATRIX-INDEX-ARRAY-TYPE-OES", (GLenum) GL_MATRIX_INDEX_ARRAY_TYPE_OES, "GL_MATRIX_INDEX_ARRAY_TYPE_OES");
#endif
#if defined(GL_MATRIX_INDEX_ARRAY_STRIDE_OES)
defconsti(env, "GL-MATRIX-INDEX-ARRAY-STRIDE-OES", (GLenum) GL_MATRIX_INDEX_ARRAY_STRIDE_OES, "GL_MATRIX_INDEX_ARRAY_STRIDE_OES");
#endif
#if defined(GL_MATRIX_INDEX_ARRAY_POINTER_OES)
defconsti(env, "GL-MATRIX-INDEX-ARRAY-POINTER-OES", (GLenum) GL_MATRIX_INDEX_ARRAY_POINTER_OES, "GL_MATRIX_INDEX_ARRAY_POINTER_OES");
#endif
#if defined(GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES)
defconsti(env, "GL-MATRIX-INDEX-ARRAY-BUFFER-BINDING-OES", (GLenum) GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES, "GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES");
#endif
#if defined(GL_WEIGHT_ARRAY_SIZE_OES)
defconsti(env, "GL-WEIGHT-ARRAY-SIZE-OES", (GLenum) GL_WEIGHT_ARRAY_SIZE_OES, "GL_WEIGHT_ARRAY_SIZE_OES");
#endif
#if defined(GL_WEIGHT_ARRAY_TYPE_OES)
defconsti(env, "GL-WEIGHT-ARRAY-TYPE-OES", (GLenum) GL_WEIGHT_ARRAY_TYPE_OES, "GL_WEIGHT_ARRAY_TYPE_OES");
#endif
#if defined(GL_WEIGHT_ARRAY_STRIDE_OES)
defconsti(env, "GL-WEIGHT-ARRAY-STRIDE-OES", (GLenum) GL_WEIGHT_ARRAY_STRIDE_OES, "GL_WEIGHT_ARRAY_STRIDE_OES");
#endif
#if defined(GL_WEIGHT_ARRAY_POINTER_OES)
defconsti(env, "GL-WEIGHT-ARRAY-POINTER-OES", (GLenum) GL_WEIGHT_ARRAY_POINTER_OES, "GL_WEIGHT_ARRAY_POINTER_OES");
#endif
#if defined(GL_WEIGHT_ARRAY_BUFFER_BINDING_OES)
defconsti(env, "GL-WEIGHT-ARRAY-BUFFER-BINDING-OES", (GLenum) GL_WEIGHT_ARRAY_BUFFER_BINDING_OES, "GL_WEIGHT_ARRAY_BUFFER_BINDING_OES");
#endif
#if defined(GL_DEPTH_STENCIL_OES)
defconsti(env, "GL-DEPTH-STENCIL-OES", (GLenum) GL_DEPTH_STENCIL_OES, "GL_DEPTH_STENCIL_OES");
#endif
#if defined(GL_UNSIGNED_INT_24_8_OES)
defconsti(env, "GL-UNSIGNED-INT-24-8-OES", (GLenum) GL_UNSIGNED_INT_24_8_OES, "GL_UNSIGNED_INT_24_8_OES");
#endif
#if defined(GL_DEPTH24_STENCIL8_OES)
defconsti(env, "GL-DEPTH24-STENCIL8-OES", (GLenum) GL_DEPTH24_STENCIL8_OES, "GL_DEPTH24_STENCIL8_OES");
#endif
#if defined(GL_POINT_SIZE_ARRAY_OES)
defconsti(env, "GL-POINT-SIZE-ARRAY-OES", (GLenum) GL_POINT_SIZE_ARRAY_OES, "GL_POINT_SIZE_ARRAY_OES");
#endif
#if defined(GL_POINT_SIZE_ARRAY_TYPE_OES)
defconsti(env, "GL-POINT-SIZE-ARRAY-TYPE-OES", (GLenum) GL_POINT_SIZE_ARRAY_TYPE_OES, "GL_POINT_SIZE_ARRAY_TYPE_OES");
#endif
#if defined(GL_POINT_SIZE_ARRAY_STRIDE_OES)
defconsti(env, "GL-POINT-SIZE-ARRAY-STRIDE-OES", (GLenum) GL_POINT_SIZE_ARRAY_STRIDE_OES, "GL_POINT_SIZE_ARRAY_STRIDE_OES");
#endif
#if defined(GL_POINT_SIZE_ARRAY_POINTER_OES)
defconsti(env, "GL-POINT-SIZE-ARRAY-POINTER-OES", (GLenum) GL_POINT_SIZE_ARRAY_POINTER_OES, "GL_POINT_SIZE_ARRAY_POINTER_OES");
#endif
#if defined(GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES)
defconsti(env, "GL-POINT-SIZE-ARRAY-BUFFER-BINDING-OES", (GLenum) GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES, "GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES");
#endif
#if defined(GL_POINT_SPRITE_OES)
defconsti(env, "GL-POINT-SPRITE-OES", (GLenum) GL_POINT_SPRITE_OES, "GL_POINT_SPRITE_OES");
#endif
#if defined(GL_COORD_REPLACE_OES)
defconsti(env, "GL-COORD-REPLACE-OES", (GLenum) GL_COORD_REPLACE_OES, "GL_COORD_REPLACE_OES");
#endif
#if defined(GL_PRIMITIVE_BOUNDING_BOX_OES)
defconsti(env, "GL-PRIMITIVE-BOUNDING-BOX-OES", (GLenum) GL_PRIMITIVE_BOUNDING_BOX_OES, "GL_PRIMITIVE_BOUNDING_BOX_OES");
#endif
#if defined(GL_IMPLEMENTATION_COLOR_READ_TYPE_OES)
defconsti(env, "GL-IMPLEMENTATION-COLOR-READ-TYPE-OES", (GLenum) GL_IMPLEMENTATION_COLOR_READ_TYPE_OES, "GL_IMPLEMENTATION_COLOR_READ_TYPE_OES");
#endif
#if defined(GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES)
defconsti(env, "GL-IMPLEMENTATION-COLOR-READ-FORMAT-OES", (GLenum) GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES, "GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES");
#endif
#if defined(GL_ALPHA8_OES)
defconsti(env, "GL-ALPHA8-OES", (GLenum) GL_ALPHA8_OES, "GL_ALPHA8_OES");
#endif
#if defined(GL_DEPTH_COMPONENT16_OES)
defconsti(env, "GL-DEPTH-COMPONENT16-OES", (GLenum) GL_DEPTH_COMPONENT16_OES, "GL_DEPTH_COMPONENT16_OES");
#endif
#if defined(GL_DEPTH_COMPONENT24_OES)
defconsti(env, "GL-DEPTH-COMPONENT24-OES", (GLenum) GL_DEPTH_COMPONENT24_OES, "GL_DEPTH_COMPONENT24_OES");
#endif
#if defined(GL_DEPTH24_STENCIL8_OES)
defconsti(env, "GL-DEPTH24-STENCIL8-OES", (GLenum) GL_DEPTH24_STENCIL8_OES, "GL_DEPTH24_STENCIL8_OES");
#endif
#if defined(GL_DEPTH_COMPONENT32_OES)
defconsti(env, "GL-DEPTH-COMPONENT32-OES", (GLenum) GL_DEPTH_COMPONENT32_OES, "GL_DEPTH_COMPONENT32_OES");
#endif
#if defined(GL_LUMINANCE4_ALPHA4_OES)
defconsti(env, "GL-LUMINANCE4-ALPHA4-OES", (GLenum) GL_LUMINANCE4_ALPHA4_OES, "GL_LUMINANCE4_ALPHA4_OES");
#endif
#if defined(GL_LUMINANCE8_ALPHA8_OES)
defconsti(env, "GL-LUMINANCE8-ALPHA8-OES", (GLenum) GL_LUMINANCE8_ALPHA8_OES, "GL_LUMINANCE8_ALPHA8_OES");
#endif
#if defined(GL_LUMINANCE8_OES)
defconsti(env, "GL-LUMINANCE8-OES", (GLenum) GL_LUMINANCE8_OES, "GL_LUMINANCE8_OES");
#endif
#if defined(GL_RGBA4_OES)
defconsti(env, "GL-RGBA4-OES", (GLenum) GL_RGBA4_OES, "GL_RGBA4_OES");
#endif
#if defined(GL_RGB5_A1_OES)
defconsti(env, "GL-RGB5-A1-OES", (GLenum) GL_RGB5_A1_OES, "GL_RGB5_A1_OES");
#endif
#if defined(GL_RGB565_OES)
defconsti(env, "GL-RGB565-OES", (GLenum) GL_RGB565_OES, "GL_RGB565_OES");
#endif
#if defined(GL_RGB8_OES)
defconsti(env, "GL-RGB8-OES", (GLenum) GL_RGB8_OES, "GL_RGB8_OES");
#endif
#if defined(GL_RGBA8_OES)
defconsti(env, "GL-RGBA8-OES", (GLenum) GL_RGBA8_OES, "GL_RGBA8_OES");
#endif
#if defined(GL_RGB10_EXT)
defconsti(env, "GL-RGB10-EXT", (GLenum) GL_RGB10_EXT, "GL_RGB10_EXT");
#endif
#if defined(GL_RGB10_A2_EXT)
defconsti(env, "GL-RGB10-A2-EXT", (GLenum) GL_RGB10_A2_EXT, "GL_RGB10_A2_EXT");
#endif
#if defined(GL_RGB8_OES)
defconsti(env, "GL-RGB8-OES", (GLenum) GL_RGB8_OES, "GL_RGB8_OES");
#endif
#if defined(GL_RGBA8_OES)
defconsti(env, "GL-RGBA8-OES", (GLenum) GL_RGBA8_OES, "GL_RGBA8_OES");
#endif
#if defined(GL_SAMPLE_SHADING_OES)
defconsti(env, "GL-SAMPLE-SHADING-OES", (GLenum) GL_SAMPLE_SHADING_OES, "GL_SAMPLE_SHADING_OES");
#endif
#if defined(GL_MIN_SAMPLE_SHADING_VALUE_OES)
defconsti(env, "GL-MIN-SAMPLE-SHADING-VALUE-OES", (GLenum) GL_MIN_SAMPLE_SHADING_VALUE_OES, "GL_MIN_SAMPLE_SHADING_VALUE_OES");
#endif
#if defined(GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES)
defconsti(env, "GL-MIN-FRAGMENT-INTERPOLATION-OFFSET-OES", (GLenum) GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES, "GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES");
#endif
#if defined(GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES)
defconsti(env, "GL-MAX-FRAGMENT-INTERPOLATION-OFFSET-OES", (GLenum) GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES, "GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES");
#endif
#if defined(GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES)
defconsti(env, "GL-FRAGMENT-INTERPOLATION-OFFSET-BITS-OES", (GLenum) GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES, "GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES");
#endif
#if defined(GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES)
defconsti(env, "GL-FRAGMENT-SHADER-DERIVATIVE-HINT-OES", (GLenum) GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES, "GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES");
#endif
#if defined(GL_STENCIL_INDEX1_OES)
defconsti(env, "GL-STENCIL-INDEX1-OES", (GLenum) GL_STENCIL_INDEX1_OES, "GL_STENCIL_INDEX1_OES");
#endif
#if defined(GL_STENCIL_INDEX4_OES)
defconsti(env, "GL-STENCIL-INDEX4-OES", (GLenum) GL_STENCIL_INDEX4_OES, "GL_STENCIL_INDEX4_OES");
#endif
#if defined(GL_STENCIL_INDEX8_OES)
defconsti(env, "GL-STENCIL-INDEX8-OES", (GLenum) GL_STENCIL_INDEX8_OES, "GL_STENCIL_INDEX8_OES");
#endif
#if defined(GL_INCR_WRAP_OES)
defconsti(env, "GL-INCR-WRAP-OES", (GLenum) GL_INCR_WRAP_OES, "GL_INCR_WRAP_OES");
#endif
#if defined(GL_DECR_WRAP_OES)
defconsti(env, "GL-DECR-WRAP-OES", (GLenum) GL_DECR_WRAP_OES, "GL_DECR_WRAP_OES");
#endif
#if defined(GL_FRAMEBUFFER_UNDEFINED_OES)
defconsti(env, "GL-FRAMEBUFFER-UNDEFINED-OES", (GLenum) GL_FRAMEBUFFER_UNDEFINED_OES, "GL_FRAMEBUFFER_UNDEFINED_OES");
#endif
#if defined(GL_PATCHES_OES)
defconsti(env, "GL-PATCHES-OES", (GLenum) GL_PATCHES_OES, "GL_PATCHES_OES");
#endif
#if defined(GL_PATCH_VERTICES_OES)
defconsti(env, "GL-PATCH-VERTICES-OES", (GLenum) GL_PATCH_VERTICES_OES, "GL_PATCH_VERTICES_OES");
#endif
#if defined(GL_TESS_CONTROL_OUTPUT_VERTICES_OES)
defconsti(env, "GL-TESS-CONTROL-OUTPUT-VERTICES-OES", (GLenum) GL_TESS_CONTROL_OUTPUT_VERTICES_OES, "GL_TESS_CONTROL_OUTPUT_VERTICES_OES");
#endif
#if defined(GL_TESS_GEN_MODE_OES)
defconsti(env, "GL-TESS-GEN-MODE-OES", (GLenum) GL_TESS_GEN_MODE_OES, "GL_TESS_GEN_MODE_OES");
#endif
#if defined(GL_TESS_GEN_SPACING_OES)
defconsti(env, "GL-TESS-GEN-SPACING-OES", (GLenum) GL_TESS_GEN_SPACING_OES, "GL_TESS_GEN_SPACING_OES");
#endif
#if defined(GL_TESS_GEN_VERTEX_ORDER_OES)
defconsti(env, "GL-TESS-GEN-VERTEX-ORDER-OES", (GLenum) GL_TESS_GEN_VERTEX_ORDER_OES, "GL_TESS_GEN_VERTEX_ORDER_OES");
#endif
#if defined(GL_TESS_GEN_POINT_MODE_OES)
defconsti(env, "GL-TESS-GEN-POINT-MODE-OES", (GLenum) GL_TESS_GEN_POINT_MODE_OES, "GL_TESS_GEN_POINT_MODE_OES");
#endif
#if defined(GL_TRIANGLES)
defconsti(env, "GL-TRIANGLES", (GLenum) GL_TRIANGLES, "GL_TRIANGLES");
#endif
#if defined(GL_ISOLINES_OES)
defconsti(env, "GL-ISOLINES-OES", (GLenum) GL_ISOLINES_OES, "GL_ISOLINES_OES");
#endif
#if defined(GL_QUADS_OES)
defconsti(env, "GL-QUADS-OES", (GLenum) GL_QUADS_OES, "GL_QUADS_OES");
#endif
#if defined(GL_EQUAL)
defconsti(env, "GL-EQUAL", (GLenum) GL_EQUAL, "GL_EQUAL");
#endif
#if defined(GL_FRACTIONAL_ODD_OES)
defconsti(env, "GL-FRACTIONAL-ODD-OES", (GLenum) GL_FRACTIONAL_ODD_OES, "GL_FRACTIONAL_ODD_OES");
#endif
#if defined(GL_FRACTIONAL_EVEN_OES)
defconsti(env, "GL-FRACTIONAL-EVEN-OES", (GLenum) GL_FRACTIONAL_EVEN_OES, "GL_FRACTIONAL_EVEN_OES");
#endif
#if defined(GL_CCW)
defconsti(env, "GL-CCW", (GLenum) GL_CCW, "GL_CCW");
#endif
#if defined(GL_CW)
defconsti(env, "GL-CW", (GLenum) GL_CW, "GL_CW");
#endif
#if defined(GL_MAX_PATCH_VERTICES_OES)
defconsti(env, "GL-MAX-PATCH-VERTICES-OES", (GLenum) GL_MAX_PATCH_VERTICES_OES, "GL_MAX_PATCH_VERTICES_OES");
#endif
#if defined(GL_MAX_TESS_GEN_LEVEL_OES)
defconsti(env, "GL-MAX-TESS-GEN-LEVEL-OES", (GLenum) GL_MAX_TESS_GEN_LEVEL_OES, "GL_MAX_TESS_GEN_LEVEL_OES");
#endif
#if defined(GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES)
defconsti(env, "GL-MAX-TESS-CONTROL-UNIFORM-COMPONENTS-OES", (GLenum) GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES, "GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES");
#endif
#if defined(GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES)
defconsti(env, "GL-MAX-TESS-EVALUATION-UNIFORM-COMPONENTS-OES", (GLenum) GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES, "GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES");
#endif
#if defined(GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES)
defconsti(env, "GL-MAX-TESS-CONTROL-TEXTURE-IMAGE-UNITS-OES", (GLenum) GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES, "GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES");
#endif
#if defined(GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES)
defconsti(env, "GL-MAX-TESS-EVALUATION-TEXTURE-IMAGE-UNITS-OES", (GLenum) GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES, "GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES");
#endif
#if defined(GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES)
defconsti(env, "GL-MAX-TESS-CONTROL-OUTPUT-COMPONENTS-OES", (GLenum) GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES, "GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES");
#endif
#if defined(GL_MAX_TESS_PATCH_COMPONENTS_OES)
defconsti(env, "GL-MAX-TESS-PATCH-COMPONENTS-OES", (GLenum) GL_MAX_TESS_PATCH_COMPONENTS_OES, "GL_MAX_TESS_PATCH_COMPONENTS_OES");
#endif
#if defined(GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES)
defconsti(env, "GL-MAX-TESS-CONTROL-TOTAL-OUTPUT-COMPONENTS-OES", (GLenum) GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES, "GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES");
#endif
#if defined(GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES)
defconsti(env, "GL-MAX-TESS-EVALUATION-OUTPUT-COMPONENTS-OES", (GLenum) GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES, "GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES");
#endif
#if defined(GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES)
defconsti(env, "GL-MAX-TESS-CONTROL-UNIFORM-BLOCKS-OES", (GLenum) GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES, "GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES");
#endif
#if defined(GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES)
defconsti(env, "GL-MAX-TESS-EVALUATION-UNIFORM-BLOCKS-OES", (GLenum) GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES, "GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES");
#endif
#if defined(GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_OES)
defconsti(env, "GL-MAX-TESS-CONTROL-INPUT-COMPONENTS-OES", (GLenum) GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_OES, "GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_OES");
#endif
#if defined(GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES)
defconsti(env, "GL-MAX-TESS-EVALUATION-INPUT-COMPONENTS-OES", (GLenum) GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES, "GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES");
#endif
#if defined(GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES)
defconsti(env, "GL-MAX-COMBINED-TESS-CONTROL-UNIFORM-COMPONENTS-OES", (GLenum) GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES, "GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES");
#endif
#if defined(GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES)
defconsti(env, "GL-MAX-COMBINED-TESS-EVALUATION-UNIFORM-COMPONENTS-OES", (GLenum) GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES, "GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES");
#endif
#if defined(GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES)
defconsti(env, "GL-MAX-TESS-CONTROL-ATOMIC-COUNTER-BUFFERS-OES", (GLenum) GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES, "GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES");
#endif
#if defined(GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES)
defconsti(env, "GL-MAX-TESS-EVALUATION-ATOMIC-COUNTER-BUFFERS-OES", (GLenum) GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES, "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES");
#endif
#if defined(GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES)
defconsti(env, "GL-MAX-TESS-CONTROL-ATOMIC-COUNTERS-OES", (GLenum) GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES, "GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES");
#endif
#if defined(GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES)
defconsti(env, "GL-MAX-TESS-EVALUATION-ATOMIC-COUNTERS-OES", (GLenum) GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES, "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES");
#endif
#if defined(GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES)
defconsti(env, "GL-MAX-TESS-CONTROL-IMAGE-UNIFORMS-OES", (GLenum) GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES, "GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES");
#endif
#if defined(GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES)
defconsti(env, "GL-MAX-TESS-EVALUATION-IMAGE-UNIFORMS-OES", (GLenum) GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES, "GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES");
#endif
#if defined(GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES)
defconsti(env, "GL-MAX-TESS-CONTROL-SHADER-STORAGE-BLOCKS-OES", (GLenum) GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES, "GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES");
#endif
#if defined(GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES)
defconsti(env, "GL-MAX-TESS-EVALUATION-SHADER-STORAGE-BLOCKS-OES", (GLenum) GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES, "GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES");
#endif
#if defined(GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES)
defconsti(env, "GL-PRIMITIVE-RESTART-FOR-PATCHES-SUPPORTED-OES", (GLenum) GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES, "GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES");
#endif
#if defined(GL_IS_PER_PATCH_OES)
defconsti(env, "GL-IS-PER-PATCH-OES", (GLenum) GL_IS_PER_PATCH_OES, "GL_IS_PER_PATCH_OES");
#endif
#if defined(GL_REFERENCED_BY_TESS_CONTROL_SHADER_OES)
defconsti(env, "GL-REFERENCED-BY-TESS-CONTROL-SHADER-OES", (GLenum) GL_REFERENCED_BY_TESS_CONTROL_SHADER_OES, "GL_REFERENCED_BY_TESS_CONTROL_SHADER_OES");
#endif
#if defined(GL_REFERENCED_BY_TESS_EVALUATION_SHADER_OES)
defconsti(env, "GL-REFERENCED-BY-TESS-EVALUATION-SHADER-OES", (GLenum) GL_REFERENCED_BY_TESS_EVALUATION_SHADER_OES, "GL_REFERENCED_BY_TESS_EVALUATION_SHADER_OES");
#endif
#if defined(GL_TESS_CONTROL_SHADER_OES)
defconsti(env, "GL-TESS-CONTROL-SHADER-OES", (GLenum) GL_TESS_CONTROL_SHADER_OES, "GL_TESS_CONTROL_SHADER_OES");
#endif
#if defined(GL_TESS_EVALUATION_SHADER_OES)
defconsti(env, "GL-TESS-EVALUATION-SHADER-OES", (GLenum) GL_TESS_EVALUATION_SHADER_OES, "GL_TESS_EVALUATION_SHADER_OES");
#endif
#if defined(GL_TESS_CONTROL_SHADER_BIT_OES)
defconsti(env, "GL-TESS-CONTROL-SHADER-BIT-OES", (GLenum) GL_TESS_CONTROL_SHADER_BIT_OES, "GL_TESS_CONTROL_SHADER_BIT_OES");
#endif
#if defined(GL_TESS_EVALUATION_SHADER_BIT_OES)
defconsti(env, "GL-TESS-EVALUATION-SHADER-BIT-OES", (GLenum) GL_TESS_EVALUATION_SHADER_BIT_OES, "GL_TESS_EVALUATION_SHADER_BIT_OES");
#endif
#if defined(GL_TEXTURE_WRAP_R_OES)
defconsti(env, "GL-TEXTURE-WRAP-R-OES", (GLenum) GL_TEXTURE_WRAP_R_OES, "GL_TEXTURE_WRAP_R_OES");
#endif
#if defined(GL_TEXTURE_3D_OES)
defconsti(env, "GL-TEXTURE-3D-OES", (GLenum) GL_TEXTURE_3D_OES, "GL_TEXTURE_3D_OES");
#endif
#if defined(GL_TEXTURE_BINDING_3D_OES)
defconsti(env, "GL-TEXTURE-BINDING-3D-OES", (GLenum) GL_TEXTURE_BINDING_3D_OES, "GL_TEXTURE_BINDING_3D_OES");
#endif
#if defined(GL_MAX_3D_TEXTURE_SIZE_OES)
defconsti(env, "GL-MAX-3D-TEXTURE-SIZE-OES", (GLenum) GL_MAX_3D_TEXTURE_SIZE_OES, "GL_MAX_3D_TEXTURE_SIZE_OES");
#endif
#if defined(GL_SAMPLER_3D_OES)
defconsti(env, "GL-SAMPLER-3D-OES", (GLenum) GL_SAMPLER_3D_OES, "GL_SAMPLER_3D_OES");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-3D-ZOFFSET-OES", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES");
#endif
#if defined(GL_TEXTURE_BORDER_COLOR_OES)
defconsti(env, "GL-TEXTURE-BORDER-COLOR-OES", (GLenum) GL_TEXTURE_BORDER_COLOR_OES, "GL_TEXTURE_BORDER_COLOR_OES");
#endif
#if defined(GL_CLAMP_TO_BORDER_OES)
defconsti(env, "GL-CLAMP-TO-BORDER-OES", (GLenum) GL_CLAMP_TO_BORDER_OES, "GL_CLAMP_TO_BORDER_OES");
#endif
#if defined(GL_TEXTURE_BUFFER_OES)
defconsti(env, "GL-TEXTURE-BUFFER-OES", (GLenum) GL_TEXTURE_BUFFER_OES, "GL_TEXTURE_BUFFER_OES");
#endif
#if defined(GL_TEXTURE_BUFFER_BINDING_OES)
defconsti(env, "GL-TEXTURE-BUFFER-BINDING-OES", (GLenum) GL_TEXTURE_BUFFER_BINDING_OES, "GL_TEXTURE_BUFFER_BINDING_OES");
#endif
#if defined(GL_MAX_TEXTURE_BUFFER_SIZE_OES)
defconsti(env, "GL-MAX-TEXTURE-BUFFER-SIZE-OES", (GLenum) GL_MAX_TEXTURE_BUFFER_SIZE_OES, "GL_MAX_TEXTURE_BUFFER_SIZE_OES");
#endif
#if defined(GL_TEXTURE_BINDING_BUFFER_OES)
defconsti(env, "GL-TEXTURE-BINDING-BUFFER-OES", (GLenum) GL_TEXTURE_BINDING_BUFFER_OES, "GL_TEXTURE_BINDING_BUFFER_OES");
#endif
#if defined(GL_TEXTURE_BUFFER_DATA_STORE_BINDING_OES)
defconsti(env, "GL-TEXTURE-BUFFER-DATA-STORE-BINDING-OES", (GLenum) GL_TEXTURE_BUFFER_DATA_STORE_BINDING_OES, "GL_TEXTURE_BUFFER_DATA_STORE_BINDING_OES");
#endif
#if defined(GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES)
defconsti(env, "GL-TEXTURE-BUFFER-OFFSET-ALIGNMENT-OES", (GLenum) GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES, "GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES");
#endif
#if defined(GL_SAMPLER_BUFFER_OES)
defconsti(env, "GL-SAMPLER-BUFFER-OES", (GLenum) GL_SAMPLER_BUFFER_OES, "GL_SAMPLER_BUFFER_OES");
#endif
#if defined(GL_INT_SAMPLER_BUFFER_OES)
defconsti(env, "GL-INT-SAMPLER-BUFFER-OES", (GLenum) GL_INT_SAMPLER_BUFFER_OES, "GL_INT_SAMPLER_BUFFER_OES");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_BUFFER_OES)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-BUFFER-OES", (GLenum) GL_UNSIGNED_INT_SAMPLER_BUFFER_OES, "GL_UNSIGNED_INT_SAMPLER_BUFFER_OES");
#endif
#if defined(GL_IMAGE_BUFFER_OES)
defconsti(env, "GL-IMAGE-BUFFER-OES", (GLenum) GL_IMAGE_BUFFER_OES, "GL_IMAGE_BUFFER_OES");
#endif
#if defined(GL_INT_IMAGE_BUFFER_OES)
defconsti(env, "GL-INT-IMAGE-BUFFER-OES", (GLenum) GL_INT_IMAGE_BUFFER_OES, "GL_INT_IMAGE_BUFFER_OES");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_BUFFER_OES)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-BUFFER-OES", (GLenum) GL_UNSIGNED_INT_IMAGE_BUFFER_OES, "GL_UNSIGNED_INT_IMAGE_BUFFER_OES");
#endif
#if defined(GL_TEXTURE_BUFFER_OFFSET_OES)
defconsti(env, "GL-TEXTURE-BUFFER-OFFSET-OES", (GLenum) GL_TEXTURE_BUFFER_OFFSET_OES, "GL_TEXTURE_BUFFER_OFFSET_OES");
#endif
#if defined(GL_TEXTURE_BUFFER_SIZE_OES)
defconsti(env, "GL-TEXTURE-BUFFER-SIZE-OES", (GLenum) GL_TEXTURE_BUFFER_SIZE_OES, "GL_TEXTURE_BUFFER_SIZE_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_4x4_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-4x4-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_4x4_KHR, "GL_COMPRESSED_RGBA_ASTC_4x4_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_5x4_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-5x4-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_5x4_KHR, "GL_COMPRESSED_RGBA_ASTC_5x4_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_5x5_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-5x5-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_5x5_KHR, "GL_COMPRESSED_RGBA_ASTC_5x5_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_6x5_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-6x5-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_6x5_KHR, "GL_COMPRESSED_RGBA_ASTC_6x5_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_6x6_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-6x6-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_6x6_KHR, "GL_COMPRESSED_RGBA_ASTC_6x6_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_8x5_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-8x5-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_8x5_KHR, "GL_COMPRESSED_RGBA_ASTC_8x5_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_8x6_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-8x6-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_8x6_KHR, "GL_COMPRESSED_RGBA_ASTC_8x6_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_8x8_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-8x8-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_8x8_KHR, "GL_COMPRESSED_RGBA_ASTC_8x8_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x5_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x5-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x5_KHR, "GL_COMPRESSED_RGBA_ASTC_10x5_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x6_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x6-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x6_KHR, "GL_COMPRESSED_RGBA_ASTC_10x6_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x8_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x8-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x8_KHR, "GL_COMPRESSED_RGBA_ASTC_10x8_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_10x10_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-10x10-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_10x10_KHR, "GL_COMPRESSED_RGBA_ASTC_10x10_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_12x10_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-12x10-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_12x10_KHR, "GL_COMPRESSED_RGBA_ASTC_12x10_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_12x12_KHR)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-12x12-KHR", (GLenum) GL_COMPRESSED_RGBA_ASTC_12x12_KHR, "GL_COMPRESSED_RGBA_ASTC_12x12_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-4x4-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-5x4-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-5x5-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-6x5-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-6x6-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-8x5-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-8x6-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-8x8-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x5-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x6-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x8-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-10x10-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-12x10-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-12x12-KHR", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_3x3x3_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-3x3x3-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_3x3x3_OES, "GL_COMPRESSED_RGBA_ASTC_3x3x3_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_4x3x3_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-4x3x3-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_4x3x3_OES, "GL_COMPRESSED_RGBA_ASTC_4x3x3_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_4x4x3_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-4x4x3-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_4x4x3_OES, "GL_COMPRESSED_RGBA_ASTC_4x4x3_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_4x4x4_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-4x4x4-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_4x4x4_OES, "GL_COMPRESSED_RGBA_ASTC_4x4x4_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_5x4x4_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-5x4x4-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_5x4x4_OES, "GL_COMPRESSED_RGBA_ASTC_5x4x4_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_5x5x4_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-5x5x4-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_5x5x4_OES, "GL_COMPRESSED_RGBA_ASTC_5x5x4_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_5x5x5_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-5x5x5-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_5x5x5_OES, "GL_COMPRESSED_RGBA_ASTC_5x5x5_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_6x5x5_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-6x5x5-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_6x5x5_OES, "GL_COMPRESSED_RGBA_ASTC_6x5x5_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_6x6x5_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-6x6x5-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_6x6x5_OES, "GL_COMPRESSED_RGBA_ASTC_6x6x5_OES");
#endif
#if defined(GL_COMPRESSED_RGBA_ASTC_6x6x6_OES)
defconsti(env, "GL-COMPRESSED-RGBA-ASTC-6x6x6-OES", (GLenum) GL_COMPRESSED_RGBA_ASTC_6x6x6_OES, "GL_COMPRESSED_RGBA_ASTC_6x6x6_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-3x3x3-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-4x3x3-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-4x4x3-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-4x4x4-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-5x4x4-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-5x5x4-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-5x5x5-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-6x5x5-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-6x6x5-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES");
#endif
#if defined(GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES)
defconsti(env, "GL-COMPRESSED-SRGB8-ALPHA8-ASTC-6x6x6-OES", (GLenum) GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES, "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES");
#endif
#if defined(GL_NORMAL_MAP_OES)
defconsti(env, "GL-NORMAL-MAP-OES", (GLenum) GL_NORMAL_MAP_OES, "GL_NORMAL_MAP_OES");
#endif
#if defined(GL_REFLECTION_MAP_OES)
defconsti(env, "GL-REFLECTION-MAP-OES", (GLenum) GL_REFLECTION_MAP_OES, "GL_REFLECTION_MAP_OES");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_OES)
defconsti(env, "GL-TEXTURE-CUBE-MAP-OES", (GLenum) GL_TEXTURE_CUBE_MAP_OES, "GL_TEXTURE_CUBE_MAP_OES");
#endif
#if defined(GL_TEXTURE_BINDING_CUBE_MAP_OES)
defconsti(env, "GL-TEXTURE-BINDING-CUBE-MAP-OES", (GLenum) GL_TEXTURE_BINDING_CUBE_MAP_OES, "GL_TEXTURE_BINDING_CUBE_MAP_OES");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-X-OES", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES, "GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-X-OES", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES, "GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-Y-OES", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES, "GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-Y-OES", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES)
defconsti(env, "GL-TEXTURE-CUBE-MAP-POSITIVE-Z-OES", (GLenum) GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES, "GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES)
defconsti(env, "GL-TEXTURE-CUBE-MAP-NEGATIVE-Z-OES", (GLenum) GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES");
#endif
#if defined(GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES)
defconsti(env, "GL-MAX-CUBE-MAP-TEXTURE-SIZE-OES", (GLenum) GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES, "GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES");
#endif
#if defined(GL_TEXTURE_GEN_MODE_OES)
defconsti(env, "GL-TEXTURE-GEN-MODE-OES", (GLenum) GL_TEXTURE_GEN_MODE_OES, "GL_TEXTURE_GEN_MODE_OES");
#endif
#if defined(GL_TEXTURE_GEN_STR_OES)
defconsti(env, "GL-TEXTURE-GEN-STR-OES", (GLenum) GL_TEXTURE_GEN_STR_OES, "GL_TEXTURE_GEN_STR_OES");
#endif
#if defined(GL_TEXTURE_CUBE_MAP_ARRAY_OES)
defconsti(env, "GL-TEXTURE-CUBE-MAP-ARRAY-OES", (GLenum) GL_TEXTURE_CUBE_MAP_ARRAY_OES, "GL_TEXTURE_CUBE_MAP_ARRAY_OES");
#endif
#if defined(GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_OES)
defconsti(env, "GL-TEXTURE-BINDING-CUBE-MAP-ARRAY-OES", (GLenum) GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_OES, "GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_OES");
#endif
#if defined(GL_SAMPLER_CUBE_MAP_ARRAY_OES)
defconsti(env, "GL-SAMPLER-CUBE-MAP-ARRAY-OES", (GLenum) GL_SAMPLER_CUBE_MAP_ARRAY_OES, "GL_SAMPLER_CUBE_MAP_ARRAY_OES");
#endif
#if defined(GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES)
defconsti(env, "GL-SAMPLER-CUBE-MAP-ARRAY-SHADOW-OES", (GLenum) GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES, "GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES");
#endif
#if defined(GL_INT_SAMPLER_CUBE_MAP_ARRAY_OES)
defconsti(env, "GL-INT-SAMPLER-CUBE-MAP-ARRAY-OES", (GLenum) GL_INT_SAMPLER_CUBE_MAP_ARRAY_OES, "GL_INT_SAMPLER_CUBE_MAP_ARRAY_OES");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-CUBE-MAP-ARRAY-OES", (GLenum) GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES, "GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES");
#endif
#if defined(GL_IMAGE_CUBE_MAP_ARRAY_OES)
defconsti(env, "GL-IMAGE-CUBE-MAP-ARRAY-OES", (GLenum) GL_IMAGE_CUBE_MAP_ARRAY_OES, "GL_IMAGE_CUBE_MAP_ARRAY_OES");
#endif
#if defined(GL_INT_IMAGE_CUBE_MAP_ARRAY_OES)
defconsti(env, "GL-INT-IMAGE-CUBE-MAP-ARRAY-OES", (GLenum) GL_INT_IMAGE_CUBE_MAP_ARRAY_OES, "GL_INT_IMAGE_CUBE_MAP_ARRAY_OES");
#endif
#if defined(GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES)
defconsti(env, "GL-UNSIGNED-INT-IMAGE-CUBE-MAP-ARRAY-OES", (GLenum) GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES, "GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES");
#endif
#if defined(GL_FLOAT)
defconsti(env, "GL-FLOAT", (GLenum) GL_FLOAT, "GL_FLOAT");
#endif
#if defined(GL_HALF_FLOAT_OES)
defconsti(env, "GL-HALF-FLOAT-OES", (GLenum) GL_HALF_FLOAT_OES, "GL_HALF_FLOAT_OES");
#endif
#if defined(GL_MIRRORED_REPEAT_OES)
defconsti(env, "GL-MIRRORED-REPEAT-OES", (GLenum) GL_MIRRORED_REPEAT_OES, "GL_MIRRORED_REPEAT_OES");
#endif
#if defined(GL_STENCIL_INDEX_OES)
defconsti(env, "GL-STENCIL-INDEX-OES", (GLenum) GL_STENCIL_INDEX_OES, "GL_STENCIL_INDEX_OES");
#endif
#if defined(GL_STENCIL_INDEX8_OES)
defconsti(env, "GL-STENCIL-INDEX8-OES", (GLenum) GL_STENCIL_INDEX8_OES, "GL_STENCIL_INDEX8_OES");
#endif
#if defined(GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES)
defconsti(env, "GL-TEXTURE-2D-MULTISAMPLE-ARRAY-OES", (GLenum) GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES, "GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES");
#endif
#if defined(GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES)
defconsti(env, "GL-TEXTURE-BINDING-2D-MULTISAMPLE-ARRAY-OES", (GLenum) GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES, "GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES");
#endif
#if defined(GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES)
defconsti(env, "GL-SAMPLER-2D-MULTISAMPLE-ARRAY-OES", (GLenum) GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES, "GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES");
#endif
#if defined(GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES)
defconsti(env, "GL-INT-SAMPLER-2D-MULTISAMPLE-ARRAY-OES", (GLenum) GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES, "GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES");
#endif
#if defined(GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES)
defconsti(env, "GL-UNSIGNED-INT-SAMPLER-2D-MULTISAMPLE-ARRAY-OES", (GLenum) GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES, "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES");
#endif
#if defined(GL_TEXTURE_VIEW_MIN_LEVEL_OES)
defconsti(env, "GL-TEXTURE-VIEW-MIN-LEVEL-OES", (GLenum) GL_TEXTURE_VIEW_MIN_LEVEL_OES, "GL_TEXTURE_VIEW_MIN_LEVEL_OES");
#endif
#if defined(GL_TEXTURE_VIEW_NUM_LEVELS_OES)
defconsti(env, "GL-TEXTURE-VIEW-NUM-LEVELS-OES", (GLenum) GL_TEXTURE_VIEW_NUM_LEVELS_OES, "GL_TEXTURE_VIEW_NUM_LEVELS_OES");
#endif
#if defined(GL_TEXTURE_VIEW_MIN_LAYER_OES)
defconsti(env, "GL-TEXTURE-VIEW-MIN-LAYER-OES", (GLenum) GL_TEXTURE_VIEW_MIN_LAYER_OES, "GL_TEXTURE_VIEW_MIN_LAYER_OES");
#endif
#if defined(GL_TEXTURE_VIEW_NUM_LAYERS_OES)
defconsti(env, "GL-TEXTURE-VIEW-NUM-LAYERS-OES", (GLenum) GL_TEXTURE_VIEW_NUM_LAYERS_OES, "GL_TEXTURE_VIEW_NUM_LAYERS_OES");
#endif
#if defined(GL_TEXTURE_IMMUTABLE_LEVELS)
defconsti(env, "GL-TEXTURE-IMMUTABLE-LEVELS", (GLenum) GL_TEXTURE_IMMUTABLE_LEVELS, "GL_TEXTURE_IMMUTABLE_LEVELS");
#endif
#if defined(GL_VERTEX_ARRAY_BINDING_OES)
defconsti(env, "GL-VERTEX-ARRAY-BINDING-OES", (GLenum) GL_VERTEX_ARRAY_BINDING_OES, "GL_VERTEX_ARRAY_BINDING_OES");
#endif
#if defined(GL_HALF_FLOAT_OES)
defconsti(env, "GL-HALF-FLOAT-OES", (GLenum) GL_HALF_FLOAT_OES, "GL_HALF_FLOAT_OES");
#endif
#if defined(GL_UNSIGNED_INT_10_10_10_2_OES)
defconsti(env, "GL-UNSIGNED-INT-10-10-10-2-OES", (GLenum) GL_UNSIGNED_INT_10_10_10_2_OES, "GL_UNSIGNED_INT_10_10_10_2_OES");
#endif
#if defined(GL_INT_10_10_10_2_OES)
defconsti(env, "GL-INT-10-10-10-2-OES", (GLenum) GL_INT_10_10_10_2_OES, "GL_INT_10_10_10_2_OES");
#endif
#if defined(GL_SCISSOR_BOX)
defconsti(env, "GL-SCISSOR-BOX", (GLenum) GL_SCISSOR_BOX, "GL_SCISSOR_BOX");
#endif
#if defined(GL_VIEWPORT)
defconsti(env, "GL-VIEWPORT", (GLenum) GL_VIEWPORT, "GL_VIEWPORT");
#endif
#if defined(GL_DEPTH_RANGE)
defconsti(env, "GL-DEPTH-RANGE", (GLenum) GL_DEPTH_RANGE, "GL_DEPTH_RANGE");
#endif
#if defined(GL_SCISSOR_TEST)
defconsti(env, "GL-SCISSOR-TEST", (GLenum) GL_SCISSOR_TEST, "GL_SCISSOR_TEST");
#endif
#if defined(GL_MAX_VIEWPORTS_OES)
defconsti(env, "GL-MAX-VIEWPORTS-OES", (GLenum) GL_MAX_VIEWPORTS_OES, "GL_MAX_VIEWPORTS_OES");
#endif
#if defined(GL_VIEWPORT_SUBPIXEL_BITS_OES)
defconsti(env, "GL-VIEWPORT-SUBPIXEL-BITS-OES", (GLenum) GL_VIEWPORT_SUBPIXEL_BITS_OES, "GL_VIEWPORT_SUBPIXEL_BITS_OES");
#endif
#if defined(GL_VIEWPORT_BOUNDS_RANGE_OES)
defconsti(env, "GL-VIEWPORT-BOUNDS-RANGE-OES", (GLenum) GL_VIEWPORT_BOUNDS_RANGE_OES, "GL_VIEWPORT_BOUNDS_RANGE_OES");
#endif
#if defined(GL_VIEWPORT_INDEX_PROVOKING_VERTEX_OES)
defconsti(env, "GL-VIEWPORT-INDEX-PROVOKING-VERTEX-OES", (GLenum) GL_VIEWPORT_INDEX_PROVOKING_VERTEX_OES, "GL_VIEWPORT_INDEX_PROVOKING_VERTEX_OES");
#endif
#if defined(GL_INTERLACE_OML)
defconsti(env, "GL-INTERLACE-OML", (GLenum) GL_INTERLACE_OML, "GL_INTERLACE_OML");
#endif
#if defined(GL_INTERLACE_READ_OML)
defconsti(env, "GL-INTERLACE-READ-OML", (GLenum) GL_INTERLACE_READ_OML, "GL_INTERLACE_READ_OML");
#endif
#if defined(GL_PACK_RESAMPLE_OML)
defconsti(env, "GL-PACK-RESAMPLE-OML", (GLenum) GL_PACK_RESAMPLE_OML, "GL_PACK_RESAMPLE_OML");
#endif
#if defined(GL_UNPACK_RESAMPLE_OML)
defconsti(env, "GL-UNPACK-RESAMPLE-OML", (GLenum) GL_UNPACK_RESAMPLE_OML, "GL_UNPACK_RESAMPLE_OML");
#endif
#if defined(GL_RESAMPLE_REPLICATE_OML)
defconsti(env, "GL-RESAMPLE-REPLICATE-OML", (GLenum) GL_RESAMPLE_REPLICATE_OML, "GL_RESAMPLE_REPLICATE_OML");
#endif
#if defined(GL_RESAMPLE_ZERO_FILL_OML)
defconsti(env, "GL-RESAMPLE-ZERO-FILL-OML", (GLenum) GL_RESAMPLE_ZERO_FILL_OML, "GL_RESAMPLE_ZERO_FILL_OML");
#endif
#if defined(GL_RESAMPLE_AVERAGE_OML)
defconsti(env, "GL-RESAMPLE-AVERAGE-OML", (GLenum) GL_RESAMPLE_AVERAGE_OML, "GL_RESAMPLE_AVERAGE_OML");
#endif
#if defined(GL_RESAMPLE_DECIMATE_OML)
defconsti(env, "GL-RESAMPLE-DECIMATE-OML", (GLenum) GL_RESAMPLE_DECIMATE_OML, "GL_RESAMPLE_DECIMATE_OML");
#endif
#if defined(GL_FORMAT_SUBSAMPLE_24_24_OML)
defconsti(env, "GL-FORMAT-SUBSAMPLE-24-24-OML", (GLenum) GL_FORMAT_SUBSAMPLE_24_24_OML, "GL_FORMAT_SUBSAMPLE_24_24_OML");
#endif
#if defined(GL_FORMAT_SUBSAMPLE_244_244_OML)
defconsti(env, "GL-FORMAT-SUBSAMPLE-244-244-OML", (GLenum) GL_FORMAT_SUBSAMPLE_244_244_OML, "GL_FORMAT_SUBSAMPLE_244_244_OML");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-NUM-VIEWS-OVR", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR");
#endif
#if defined(GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR)
defconsti(env, "GL-FRAMEBUFFER-ATTACHMENT-TEXTURE-BASE-VIEW-INDEX-OVR", (GLenum) GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR");
#endif
#if defined(GL_MAX_VIEWS_OVR)
defconsti(env, "GL-MAX-VIEWS-OVR", (GLenum) GL_MAX_VIEWS_OVR, "GL_MAX_VIEWS_OVR");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-VIEW-TARGETS-OVR", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR, "GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR");
#endif
#if defined(GL_PREFER_DOUBLEBUFFER_HINT_PGI)
defconsti(env, "GL-PREFER-DOUBLEBUFFER-HINT-PGI", (GLenum) GL_PREFER_DOUBLEBUFFER_HINT_PGI, "GL_PREFER_DOUBLEBUFFER_HINT_PGI");
#endif
#if defined(GL_CONSERVE_MEMORY_HINT_PGI)
defconsti(env, "GL-CONSERVE-MEMORY-HINT-PGI", (GLenum) GL_CONSERVE_MEMORY_HINT_PGI, "GL_CONSERVE_MEMORY_HINT_PGI");
#endif
#if defined(GL_RECLAIM_MEMORY_HINT_PGI)
defconsti(env, "GL-RECLAIM-MEMORY-HINT-PGI", (GLenum) GL_RECLAIM_MEMORY_HINT_PGI, "GL_RECLAIM_MEMORY_HINT_PGI");
#endif
#if defined(GL_NATIVE_GRAPHICS_HANDLE_PGI)
defconsti(env, "GL-NATIVE-GRAPHICS-HANDLE-PGI", (GLenum) GL_NATIVE_GRAPHICS_HANDLE_PGI, "GL_NATIVE_GRAPHICS_HANDLE_PGI");
#endif
#if defined(GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI)
defconsti(env, "GL-NATIVE-GRAPHICS-BEGIN-HINT-PGI", (GLenum) GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI, "GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI");
#endif
#if defined(GL_NATIVE_GRAPHICS_END_HINT_PGI)
defconsti(env, "GL-NATIVE-GRAPHICS-END-HINT-PGI", (GLenum) GL_NATIVE_GRAPHICS_END_HINT_PGI, "GL_NATIVE_GRAPHICS_END_HINT_PGI");
#endif
#if defined(GL_ALWAYS_FAST_HINT_PGI)
defconsti(env, "GL-ALWAYS-FAST-HINT-PGI", (GLenum) GL_ALWAYS_FAST_HINT_PGI, "GL_ALWAYS_FAST_HINT_PGI");
#endif
#if defined(GL_ALWAYS_SOFT_HINT_PGI)
defconsti(env, "GL-ALWAYS-SOFT-HINT-PGI", (GLenum) GL_ALWAYS_SOFT_HINT_PGI, "GL_ALWAYS_SOFT_HINT_PGI");
#endif
#if defined(GL_ALLOW_DRAW_OBJ_HINT_PGI)
defconsti(env, "GL-ALLOW-DRAW-OBJ-HINT-PGI", (GLenum) GL_ALLOW_DRAW_OBJ_HINT_PGI, "GL_ALLOW_DRAW_OBJ_HINT_PGI");
#endif
#if defined(GL_ALLOW_DRAW_WIN_HINT_PGI)
defconsti(env, "GL-ALLOW-DRAW-WIN-HINT-PGI", (GLenum) GL_ALLOW_DRAW_WIN_HINT_PGI, "GL_ALLOW_DRAW_WIN_HINT_PGI");
#endif
#if defined(GL_ALLOW_DRAW_FRG_HINT_PGI)
defconsti(env, "GL-ALLOW-DRAW-FRG-HINT-PGI", (GLenum) GL_ALLOW_DRAW_FRG_HINT_PGI, "GL_ALLOW_DRAW_FRG_HINT_PGI");
#endif
#if defined(GL_ALLOW_DRAW_MEM_HINT_PGI)
defconsti(env, "GL-ALLOW-DRAW-MEM-HINT-PGI", (GLenum) GL_ALLOW_DRAW_MEM_HINT_PGI, "GL_ALLOW_DRAW_MEM_HINT_PGI");
#endif
#if defined(GL_STRICT_DEPTHFUNC_HINT_PGI)
defconsti(env, "GL-STRICT-DEPTHFUNC-HINT-PGI", (GLenum) GL_STRICT_DEPTHFUNC_HINT_PGI, "GL_STRICT_DEPTHFUNC_HINT_PGI");
#endif
#if defined(GL_STRICT_LIGHTING_HINT_PGI)
defconsti(env, "GL-STRICT-LIGHTING-HINT-PGI", (GLenum) GL_STRICT_LIGHTING_HINT_PGI, "GL_STRICT_LIGHTING_HINT_PGI");
#endif
#if defined(GL_STRICT_SCISSOR_HINT_PGI)
defconsti(env, "GL-STRICT-SCISSOR-HINT-PGI", (GLenum) GL_STRICT_SCISSOR_HINT_PGI, "GL_STRICT_SCISSOR_HINT_PGI");
#endif
#if defined(GL_FULL_STIPPLE_HINT_PGI)
defconsti(env, "GL-FULL-STIPPLE-HINT-PGI", (GLenum) GL_FULL_STIPPLE_HINT_PGI, "GL_FULL_STIPPLE_HINT_PGI");
#endif
#if defined(GL_CLIP_NEAR_HINT_PGI)
defconsti(env, "GL-CLIP-NEAR-HINT-PGI", (GLenum) GL_CLIP_NEAR_HINT_PGI, "GL_CLIP_NEAR_HINT_PGI");
#endif
#if defined(GL_CLIP_FAR_HINT_PGI)
defconsti(env, "GL-CLIP-FAR-HINT-PGI", (GLenum) GL_CLIP_FAR_HINT_PGI, "GL_CLIP_FAR_HINT_PGI");
#endif
#if defined(GL_WIDE_LINE_HINT_PGI)
defconsti(env, "GL-WIDE-LINE-HINT-PGI", (GLenum) GL_WIDE_LINE_HINT_PGI, "GL_WIDE_LINE_HINT_PGI");
#endif
#if defined(GL_BACK_NORMALS_HINT_PGI)
defconsti(env, "GL-BACK-NORMALS-HINT-PGI", (GLenum) GL_BACK_NORMALS_HINT_PGI, "GL_BACK_NORMALS_HINT_PGI");
#endif
#if defined(GL_VERTEX_DATA_HINT_PGI)
defconsti(env, "GL-VERTEX-DATA-HINT-PGI", (GLenum) GL_VERTEX_DATA_HINT_PGI, "GL_VERTEX_DATA_HINT_PGI");
#endif
#if defined(GL_VERTEX_CONSISTENT_HINT_PGI)
defconsti(env, "GL-VERTEX-CONSISTENT-HINT-PGI", (GLenum) GL_VERTEX_CONSISTENT_HINT_PGI, "GL_VERTEX_CONSISTENT_HINT_PGI");
#endif
#if defined(GL_MATERIAL_SIDE_HINT_PGI)
defconsti(env, "GL-MATERIAL-SIDE-HINT-PGI", (GLenum) GL_MATERIAL_SIDE_HINT_PGI, "GL_MATERIAL_SIDE_HINT_PGI");
#endif
#if defined(GL_MAX_VERTEX_HINT_PGI)
defconsti(env, "GL-MAX-VERTEX-HINT-PGI", (GLenum) GL_MAX_VERTEX_HINT_PGI, "GL_MAX_VERTEX_HINT_PGI");
#endif
#if defined(GL_COLOR3_BIT_PGI)
defconsti(env, "GL-COLOR3-BIT-PGI", (GLenum) GL_COLOR3_BIT_PGI, "GL_COLOR3_BIT_PGI");
#endif
#if defined(GL_COLOR4_BIT_PGI)
defconsti(env, "GL-COLOR4-BIT-PGI", (GLenum) GL_COLOR4_BIT_PGI, "GL_COLOR4_BIT_PGI");
#endif
#if defined(GL_EDGEFLAG_BIT_PGI)
defconsti(env, "GL-EDGEFLAG-BIT-PGI", (GLenum) GL_EDGEFLAG_BIT_PGI, "GL_EDGEFLAG_BIT_PGI");
#endif
#if defined(GL_INDEX_BIT_PGI)
defconsti(env, "GL-INDEX-BIT-PGI", (GLenum) GL_INDEX_BIT_PGI, "GL_INDEX_BIT_PGI");
#endif
#if defined(GL_MAT_AMBIENT_BIT_PGI)
defconsti(env, "GL-MAT-AMBIENT-BIT-PGI", (GLenum) GL_MAT_AMBIENT_BIT_PGI, "GL_MAT_AMBIENT_BIT_PGI");
#endif
#if defined(GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI)
defconsti(env, "GL-MAT-AMBIENT-AND-DIFFUSE-BIT-PGI", (GLenum) GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI, "GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI");
#endif
#if defined(GL_MAT_DIFFUSE_BIT_PGI)
defconsti(env, "GL-MAT-DIFFUSE-BIT-PGI", (GLenum) GL_MAT_DIFFUSE_BIT_PGI, "GL_MAT_DIFFUSE_BIT_PGI");
#endif
#if defined(GL_MAT_EMISSION_BIT_PGI)
defconsti(env, "GL-MAT-EMISSION-BIT-PGI", (GLenum) GL_MAT_EMISSION_BIT_PGI, "GL_MAT_EMISSION_BIT_PGI");
#endif
#if defined(GL_MAT_COLOR_INDEXES_BIT_PGI)
defconsti(env, "GL-MAT-COLOR-INDEXES-BIT-PGI", (GLenum) GL_MAT_COLOR_INDEXES_BIT_PGI, "GL_MAT_COLOR_INDEXES_BIT_PGI");
#endif
#if defined(GL_MAT_SHININESS_BIT_PGI)
defconsti(env, "GL-MAT-SHININESS-BIT-PGI", (GLenum) GL_MAT_SHININESS_BIT_PGI, "GL_MAT_SHININESS_BIT_PGI");
#endif
#if defined(GL_MAT_SPECULAR_BIT_PGI)
defconsti(env, "GL-MAT-SPECULAR-BIT-PGI", (GLenum) GL_MAT_SPECULAR_BIT_PGI, "GL_MAT_SPECULAR_BIT_PGI");
#endif
#if defined(GL_NORMAL_BIT_PGI)
defconsti(env, "GL-NORMAL-BIT-PGI", (GLenum) GL_NORMAL_BIT_PGI, "GL_NORMAL_BIT_PGI");
#endif
#if defined(GL_TEXCOORD1_BIT_PGI)
defconsti(env, "GL-TEXCOORD1-BIT-PGI", (GLenum) GL_TEXCOORD1_BIT_PGI, "GL_TEXCOORD1_BIT_PGI");
#endif
#if defined(GL_TEXCOORD2_BIT_PGI)
defconsti(env, "GL-TEXCOORD2-BIT-PGI", (GLenum) GL_TEXCOORD2_BIT_PGI, "GL_TEXCOORD2_BIT_PGI");
#endif
#if defined(GL_TEXCOORD3_BIT_PGI)
defconsti(env, "GL-TEXCOORD3-BIT-PGI", (GLenum) GL_TEXCOORD3_BIT_PGI, "GL_TEXCOORD3_BIT_PGI");
#endif
#if defined(GL_TEXCOORD4_BIT_PGI)
defconsti(env, "GL-TEXCOORD4-BIT-PGI", (GLenum) GL_TEXCOORD4_BIT_PGI, "GL_TEXCOORD4_BIT_PGI");
#endif
#if defined(GL_VERTEX23_BIT_PGI)
defconsti(env, "GL-VERTEX23-BIT-PGI", (GLenum) GL_VERTEX23_BIT_PGI, "GL_VERTEX23_BIT_PGI");
#endif
#if defined(GL_VERTEX4_BIT_PGI)
defconsti(env, "GL-VERTEX4-BIT-PGI", (GLenum) GL_VERTEX4_BIT_PGI, "GL_VERTEX4_BIT_PGI");
#endif
#if defined(GL_ALPHA_TEST_QCOM)
defconsti(env, "GL-ALPHA-TEST-QCOM", (GLenum) GL_ALPHA_TEST_QCOM, "GL_ALPHA_TEST_QCOM");
#endif
#if defined(GL_ALPHA_TEST_FUNC_QCOM)
defconsti(env, "GL-ALPHA-TEST-FUNC-QCOM", (GLenum) GL_ALPHA_TEST_FUNC_QCOM, "GL_ALPHA_TEST_FUNC_QCOM");
#endif
#if defined(GL_ALPHA_TEST_REF_QCOM)
defconsti(env, "GL-ALPHA-TEST-REF-QCOM", (GLenum) GL_ALPHA_TEST_REF_QCOM, "GL_ALPHA_TEST_REF_QCOM");
#endif
#if defined(GL_BINNING_CONTROL_HINT_QCOM)
defconsti(env, "GL-BINNING-CONTROL-HINT-QCOM", (GLenum) GL_BINNING_CONTROL_HINT_QCOM, "GL_BINNING_CONTROL_HINT_QCOM");
#endif
#if defined(GL_CPU_OPTIMIZED_QCOM)
defconsti(env, "GL-CPU-OPTIMIZED-QCOM", (GLenum) GL_CPU_OPTIMIZED_QCOM, "GL_CPU_OPTIMIZED_QCOM");
#endif
#if defined(GL_GPU_OPTIMIZED_QCOM)
defconsti(env, "GL-GPU-OPTIMIZED-QCOM", (GLenum) GL_GPU_OPTIMIZED_QCOM, "GL_GPU_OPTIMIZED_QCOM");
#endif
#if defined(GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM)
defconsti(env, "GL-RENDER-DIRECT-TO-FRAMEBUFFER-QCOM", (GLenum) GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM, "GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM");
#endif
#if defined(GL_TEXTURE_WIDTH_QCOM)
defconsti(env, "GL-TEXTURE-WIDTH-QCOM", (GLenum) GL_TEXTURE_WIDTH_QCOM, "GL_TEXTURE_WIDTH_QCOM");
#endif
#if defined(GL_TEXTURE_HEIGHT_QCOM)
defconsti(env, "GL-TEXTURE-HEIGHT-QCOM", (GLenum) GL_TEXTURE_HEIGHT_QCOM, "GL_TEXTURE_HEIGHT_QCOM");
#endif
#if defined(GL_TEXTURE_DEPTH_QCOM)
defconsti(env, "GL-TEXTURE-DEPTH-QCOM", (GLenum) GL_TEXTURE_DEPTH_QCOM, "GL_TEXTURE_DEPTH_QCOM");
#endif
#if defined(GL_TEXTURE_INTERNAL_FORMAT_QCOM)
defconsti(env, "GL-TEXTURE-INTERNAL-FORMAT-QCOM", (GLenum) GL_TEXTURE_INTERNAL_FORMAT_QCOM, "GL_TEXTURE_INTERNAL_FORMAT_QCOM");
#endif
#if defined(GL_TEXTURE_FORMAT_QCOM)
defconsti(env, "GL-TEXTURE-FORMAT-QCOM", (GLenum) GL_TEXTURE_FORMAT_QCOM, "GL_TEXTURE_FORMAT_QCOM");
#endif
#if defined(GL_TEXTURE_TYPE_QCOM)
defconsti(env, "GL-TEXTURE-TYPE-QCOM", (GLenum) GL_TEXTURE_TYPE_QCOM, "GL_TEXTURE_TYPE_QCOM");
#endif
#if defined(GL_TEXTURE_IMAGE_VALID_QCOM)
defconsti(env, "GL-TEXTURE-IMAGE-VALID-QCOM", (GLenum) GL_TEXTURE_IMAGE_VALID_QCOM, "GL_TEXTURE_IMAGE_VALID_QCOM");
#endif
#if defined(GL_TEXTURE_NUM_LEVELS_QCOM)
defconsti(env, "GL-TEXTURE-NUM-LEVELS-QCOM", (GLenum) GL_TEXTURE_NUM_LEVELS_QCOM, "GL_TEXTURE_NUM_LEVELS_QCOM");
#endif
#if defined(GL_TEXTURE_TARGET_QCOM)
defconsti(env, "GL-TEXTURE-TARGET-QCOM", (GLenum) GL_TEXTURE_TARGET_QCOM, "GL_TEXTURE_TARGET_QCOM");
#endif
#if defined(GL_TEXTURE_OBJECT_VALID_QCOM)
defconsti(env, "GL-TEXTURE-OBJECT-VALID-QCOM", (GLenum) GL_TEXTURE_OBJECT_VALID_QCOM, "GL_TEXTURE_OBJECT_VALID_QCOM");
#endif
#if defined(GL_STATE_RESTORE)
defconsti(env, "GL-STATE-RESTORE", (GLenum) GL_STATE_RESTORE, "GL_STATE_RESTORE");
#endif
#if defined(GL_FOVEATION_ENABLE_BIT_QCOM)
defconsti(env, "GL-FOVEATION-ENABLE-BIT-QCOM", (GLenum) GL_FOVEATION_ENABLE_BIT_QCOM, "GL_FOVEATION_ENABLE_BIT_QCOM");
#endif
#if defined(GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM)
defconsti(env, "GL-FOVEATION-SCALED-BIN-METHOD-BIT-QCOM", (GLenum) GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM, "GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM");
#endif
#if defined(GL_MOTION_ESTIMATION_SEARCH_BLOCK_X_QCOM)
defconsti(env, "GL-MOTION-ESTIMATION-SEARCH-BLOCK-X-QCOM", (GLenum) GL_MOTION_ESTIMATION_SEARCH_BLOCK_X_QCOM, "GL_MOTION_ESTIMATION_SEARCH_BLOCK_X_QCOM");
#endif
#if defined(GL_MOTION_ESTIMATION_SEARCH_BLOCK_Y_QCOM)
defconsti(env, "GL-MOTION-ESTIMATION-SEARCH-BLOCK-Y-QCOM", (GLenum) GL_MOTION_ESTIMATION_SEARCH_BLOCK_Y_QCOM, "GL_MOTION_ESTIMATION_SEARCH_BLOCK_Y_QCOM");
#endif
#if defined(GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM)
defconsti(env, "GL-FOVEATION-SCALED-BIN-METHOD-BIT-QCOM", (GLenum) GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM, "GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM");
#endif
#if defined(GL_FOVEATION_ENABLE_BIT_QCOM)
defconsti(env, "GL-FOVEATION-ENABLE-BIT-QCOM", (GLenum) GL_FOVEATION_ENABLE_BIT_QCOM, "GL_FOVEATION_ENABLE_BIT_QCOM");
#endif
#if defined(GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM)
defconsti(env, "GL-FOVEATION-SCALED-BIN-METHOD-BIT-QCOM", (GLenum) GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM, "GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM");
#endif
#if defined(GL_TEXTURE_FOVEATED_FEATURE_BITS_QCOM)
defconsti(env, "GL-TEXTURE-FOVEATED-FEATURE-BITS-QCOM", (GLenum) GL_TEXTURE_FOVEATED_FEATURE_BITS_QCOM, "GL_TEXTURE_FOVEATED_FEATURE_BITS_QCOM");
#endif
#if defined(GL_TEXTURE_FOVEATED_MIN_PIXEL_DENSITY_QCOM)
defconsti(env, "GL-TEXTURE-FOVEATED-MIN-PIXEL-DENSITY-QCOM", (GLenum) GL_TEXTURE_FOVEATED_MIN_PIXEL_DENSITY_QCOM, "GL_TEXTURE_FOVEATED_MIN_PIXEL_DENSITY_QCOM");
#endif
#if defined(GL_TEXTURE_FOVEATED_FEATURE_QUERY_QCOM)
defconsti(env, "GL-TEXTURE-FOVEATED-FEATURE-QUERY-QCOM", (GLenum) GL_TEXTURE_FOVEATED_FEATURE_QUERY_QCOM, "GL_TEXTURE_FOVEATED_FEATURE_QUERY_QCOM");
#endif
#if defined(GL_TEXTURE_FOVEATED_NUM_FOCAL_POINTS_QUERY_QCOM)
defconsti(env, "GL-TEXTURE-FOVEATED-NUM-FOCAL-POINTS-QUERY-QCOM", (GLenum) GL_TEXTURE_FOVEATED_NUM_FOCAL_POINTS_QUERY_QCOM, "GL_TEXTURE_FOVEATED_NUM_FOCAL_POINTS_QUERY_QCOM");
#endif
#if defined(GL_FRAMEBUFFER_INCOMPLETE_FOVEATION_QCOM)
defconsti(env, "GL-FRAMEBUFFER-INCOMPLETE-FOVEATION-QCOM", (GLenum) GL_FRAMEBUFFER_INCOMPLETE_FOVEATION_QCOM, "GL_FRAMEBUFFER_INCOMPLETE_FOVEATION_QCOM");
#endif
#if defined(GL_TEXTURE_FOVEATED_CUTOFF_DENSITY_QCOM)
defconsti(env, "GL-TEXTURE-FOVEATED-CUTOFF-DENSITY-QCOM", (GLenum) GL_TEXTURE_FOVEATED_CUTOFF_DENSITY_QCOM, "GL_TEXTURE_FOVEATED_CUTOFF_DENSITY_QCOM");
#endif
#if defined(GL_FOVEATION_SUBSAMPLED_LAYOUT_METHOD_BIT_QCOM)
defconsti(env, "GL-FOVEATION-SUBSAMPLED-LAYOUT-METHOD-BIT-QCOM", (GLenum) GL_FOVEATION_SUBSAMPLED_LAYOUT_METHOD_BIT_QCOM, "GL_FOVEATION_SUBSAMPLED_LAYOUT_METHOD_BIT_QCOM");
#endif
#if defined(GL_MAX_SHADER_SUBSAMPLED_IMAGE_UNITS_QCOM)
defconsti(env, "GL-MAX-SHADER-SUBSAMPLED-IMAGE-UNITS-QCOM", (GLenum) GL_MAX_SHADER_SUBSAMPLED_IMAGE_UNITS_QCOM, "GL_MAX_SHADER_SUBSAMPLED_IMAGE_UNITS_QCOM");
#endif
#if defined(GL_PERFMON_GLOBAL_MODE_QCOM)
defconsti(env, "GL-PERFMON-GLOBAL-MODE-QCOM", (GLenum) GL_PERFMON_GLOBAL_MODE_QCOM, "GL_PERFMON_GLOBAL_MODE_QCOM");
#endif
#if defined(GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM)
defconsti(env, "GL-FRAMEBUFFER-FETCH-NONCOHERENT-QCOM", (GLenum) GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM, "GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM");
#endif
#if defined(GL_SHADING_RATE_QCOM)
defconsti(env, "GL-SHADING-RATE-QCOM", (GLenum) GL_SHADING_RATE_QCOM, "GL_SHADING_RATE_QCOM");
#endif
#if defined(GL_SHADING_RATE_PRESERVE_ASPECT_RATIO_QCOM)
defconsti(env, "GL-SHADING-RATE-PRESERVE-ASPECT-RATIO-QCOM", (GLenum) GL_SHADING_RATE_PRESERVE_ASPECT_RATIO_QCOM, "GL_SHADING_RATE_PRESERVE_ASPECT_RATIO_QCOM");
#endif
#if defined(GL_SHADING_RATE_1X1_PIXELS_QCOM)
defconsti(env, "GL-SHADING-RATE-1X1-PIXELS-QCOM", (GLenum) GL_SHADING_RATE_1X1_PIXELS_QCOM, "GL_SHADING_RATE_1X1_PIXELS_QCOM");
#endif
#if defined(GL_SHADING_RATE_1X2_PIXELS_QCOM)
defconsti(env, "GL-SHADING-RATE-1X2-PIXELS-QCOM", (GLenum) GL_SHADING_RATE_1X2_PIXELS_QCOM, "GL_SHADING_RATE_1X2_PIXELS_QCOM");
#endif
#if defined(GL_SHADING_RATE_2X1_PIXELS_QCOM)
defconsti(env, "GL-SHADING-RATE-2X1-PIXELS-QCOM", (GLenum) GL_SHADING_RATE_2X1_PIXELS_QCOM, "GL_SHADING_RATE_2X1_PIXELS_QCOM");
#endif
#if defined(GL_SHADING_RATE_2X2_PIXELS_QCOM)
defconsti(env, "GL-SHADING-RATE-2X2-PIXELS-QCOM", (GLenum) GL_SHADING_RATE_2X2_PIXELS_QCOM, "GL_SHADING_RATE_2X2_PIXELS_QCOM");
#endif
#if defined(GL_SHADING_RATE_4X2_PIXELS_QCOM)
defconsti(env, "GL-SHADING-RATE-4X2-PIXELS-QCOM", (GLenum) GL_SHADING_RATE_4X2_PIXELS_QCOM, "GL_SHADING_RATE_4X2_PIXELS_QCOM");
#endif
#if defined(GL_SHADING_RATE_4X4_PIXELS_QCOM)
defconsti(env, "GL-SHADING-RATE-4X4-PIXELS-QCOM", (GLenum) GL_SHADING_RATE_4X4_PIXELS_QCOM, "GL_SHADING_RATE_4X4_PIXELS_QCOM");
#endif
#if defined(GL_COLOR_BUFFER_BIT0_QCOM)
defconsti(env, "GL-COLOR-BUFFER-BIT0-QCOM", (GLenum) GL_COLOR_BUFFER_BIT0_QCOM, "GL_COLOR_BUFFER_BIT0_QCOM");
#endif
#if defined(GL_COLOR_BUFFER_BIT1_QCOM)
defconsti(env, "GL-COLOR-BUFFER-BIT1-QCOM", (GLenum) GL_COLOR_BUFFER_BIT1_QCOM, "GL_COLOR_BUFFER_BIT1_QCOM");
#endif
#if defined(GL_COLOR_BUFFER_BIT2_QCOM)
defconsti(env, "GL-COLOR-BUFFER-BIT2-QCOM", (GLenum) GL_COLOR_BUFFER_BIT2_QCOM, "GL_COLOR_BUFFER_BIT2_QCOM");
#endif
#if defined(GL_COLOR_BUFFER_BIT3_QCOM)
defconsti(env, "GL-COLOR-BUFFER-BIT3-QCOM", (GLenum) GL_COLOR_BUFFER_BIT3_QCOM, "GL_COLOR_BUFFER_BIT3_QCOM");
#endif
#if defined(GL_COLOR_BUFFER_BIT4_QCOM)
defconsti(env, "GL-COLOR-BUFFER-BIT4-QCOM", (GLenum) GL_COLOR_BUFFER_BIT4_QCOM, "GL_COLOR_BUFFER_BIT4_QCOM");
#endif
#if defined(GL_COLOR_BUFFER_BIT5_QCOM)
defconsti(env, "GL-COLOR-BUFFER-BIT5-QCOM", (GLenum) GL_COLOR_BUFFER_BIT5_QCOM, "GL_COLOR_BUFFER_BIT5_QCOM");
#endif
#if defined(GL_COLOR_BUFFER_BIT6_QCOM)
defconsti(env, "GL-COLOR-BUFFER-BIT6-QCOM", (GLenum) GL_COLOR_BUFFER_BIT6_QCOM, "GL_COLOR_BUFFER_BIT6_QCOM");
#endif
#if defined(GL_COLOR_BUFFER_BIT7_QCOM)
defconsti(env, "GL-COLOR-BUFFER-BIT7-QCOM", (GLenum) GL_COLOR_BUFFER_BIT7_QCOM, "GL_COLOR_BUFFER_BIT7_QCOM");
#endif
#if defined(GL_DEPTH_BUFFER_BIT0_QCOM)
defconsti(env, "GL-DEPTH-BUFFER-BIT0-QCOM", (GLenum) GL_DEPTH_BUFFER_BIT0_QCOM, "GL_DEPTH_BUFFER_BIT0_QCOM");
#endif
#if defined(GL_DEPTH_BUFFER_BIT1_QCOM)
defconsti(env, "GL-DEPTH-BUFFER-BIT1-QCOM", (GLenum) GL_DEPTH_BUFFER_BIT1_QCOM, "GL_DEPTH_BUFFER_BIT1_QCOM");
#endif
#if defined(GL_DEPTH_BUFFER_BIT2_QCOM)
defconsti(env, "GL-DEPTH-BUFFER-BIT2-QCOM", (GLenum) GL_DEPTH_BUFFER_BIT2_QCOM, "GL_DEPTH_BUFFER_BIT2_QCOM");
#endif
#if defined(GL_DEPTH_BUFFER_BIT3_QCOM)
defconsti(env, "GL-DEPTH-BUFFER-BIT3-QCOM", (GLenum) GL_DEPTH_BUFFER_BIT3_QCOM, "GL_DEPTH_BUFFER_BIT3_QCOM");
#endif
#if defined(GL_DEPTH_BUFFER_BIT4_QCOM)
defconsti(env, "GL-DEPTH-BUFFER-BIT4-QCOM", (GLenum) GL_DEPTH_BUFFER_BIT4_QCOM, "GL_DEPTH_BUFFER_BIT4_QCOM");
#endif
#if defined(GL_DEPTH_BUFFER_BIT5_QCOM)
defconsti(env, "GL-DEPTH-BUFFER-BIT5-QCOM", (GLenum) GL_DEPTH_BUFFER_BIT5_QCOM, "GL_DEPTH_BUFFER_BIT5_QCOM");
#endif
#if defined(GL_DEPTH_BUFFER_BIT6_QCOM)
defconsti(env, "GL-DEPTH-BUFFER-BIT6-QCOM", (GLenum) GL_DEPTH_BUFFER_BIT6_QCOM, "GL_DEPTH_BUFFER_BIT6_QCOM");
#endif
#if defined(GL_DEPTH_BUFFER_BIT7_QCOM)
defconsti(env, "GL-DEPTH-BUFFER-BIT7-QCOM", (GLenum) GL_DEPTH_BUFFER_BIT7_QCOM, "GL_DEPTH_BUFFER_BIT7_QCOM");
#endif
#if defined(GL_STENCIL_BUFFER_BIT0_QCOM)
defconsti(env, "GL-STENCIL-BUFFER-BIT0-QCOM", (GLenum) GL_STENCIL_BUFFER_BIT0_QCOM, "GL_STENCIL_BUFFER_BIT0_QCOM");
#endif
#if defined(GL_STENCIL_BUFFER_BIT1_QCOM)
defconsti(env, "GL-STENCIL-BUFFER-BIT1-QCOM", (GLenum) GL_STENCIL_BUFFER_BIT1_QCOM, "GL_STENCIL_BUFFER_BIT1_QCOM");
#endif
#if defined(GL_STENCIL_BUFFER_BIT2_QCOM)
defconsti(env, "GL-STENCIL-BUFFER-BIT2-QCOM", (GLenum) GL_STENCIL_BUFFER_BIT2_QCOM, "GL_STENCIL_BUFFER_BIT2_QCOM");
#endif
#if defined(GL_STENCIL_BUFFER_BIT3_QCOM)
defconsti(env, "GL-STENCIL-BUFFER-BIT3-QCOM", (GLenum) GL_STENCIL_BUFFER_BIT3_QCOM, "GL_STENCIL_BUFFER_BIT3_QCOM");
#endif
#if defined(GL_STENCIL_BUFFER_BIT4_QCOM)
defconsti(env, "GL-STENCIL-BUFFER-BIT4-QCOM", (GLenum) GL_STENCIL_BUFFER_BIT4_QCOM, "GL_STENCIL_BUFFER_BIT4_QCOM");
#endif
#if defined(GL_STENCIL_BUFFER_BIT5_QCOM)
defconsti(env, "GL-STENCIL-BUFFER-BIT5-QCOM", (GLenum) GL_STENCIL_BUFFER_BIT5_QCOM, "GL_STENCIL_BUFFER_BIT5_QCOM");
#endif
#if defined(GL_STENCIL_BUFFER_BIT6_QCOM)
defconsti(env, "GL-STENCIL-BUFFER-BIT6-QCOM", (GLenum) GL_STENCIL_BUFFER_BIT6_QCOM, "GL_STENCIL_BUFFER_BIT6_QCOM");
#endif
#if defined(GL_STENCIL_BUFFER_BIT7_QCOM)
defconsti(env, "GL-STENCIL-BUFFER-BIT7-QCOM", (GLenum) GL_STENCIL_BUFFER_BIT7_QCOM, "GL_STENCIL_BUFFER_BIT7_QCOM");
#endif
#if defined(GL_MULTISAMPLE_BUFFER_BIT0_QCOM)
defconsti(env, "GL-MULTISAMPLE-BUFFER-BIT0-QCOM", (GLenum) GL_MULTISAMPLE_BUFFER_BIT0_QCOM, "GL_MULTISAMPLE_BUFFER_BIT0_QCOM");
#endif
#if defined(GL_MULTISAMPLE_BUFFER_BIT1_QCOM)
defconsti(env, "GL-MULTISAMPLE-BUFFER-BIT1-QCOM", (GLenum) GL_MULTISAMPLE_BUFFER_BIT1_QCOM, "GL_MULTISAMPLE_BUFFER_BIT1_QCOM");
#endif
#if defined(GL_MULTISAMPLE_BUFFER_BIT2_QCOM)
defconsti(env, "GL-MULTISAMPLE-BUFFER-BIT2-QCOM", (GLenum) GL_MULTISAMPLE_BUFFER_BIT2_QCOM, "GL_MULTISAMPLE_BUFFER_BIT2_QCOM");
#endif
#if defined(GL_MULTISAMPLE_BUFFER_BIT3_QCOM)
defconsti(env, "GL-MULTISAMPLE-BUFFER-BIT3-QCOM", (GLenum) GL_MULTISAMPLE_BUFFER_BIT3_QCOM, "GL_MULTISAMPLE_BUFFER_BIT3_QCOM");
#endif
#if defined(GL_MULTISAMPLE_BUFFER_BIT4_QCOM)
defconsti(env, "GL-MULTISAMPLE-BUFFER-BIT4-QCOM", (GLenum) GL_MULTISAMPLE_BUFFER_BIT4_QCOM, "GL_MULTISAMPLE_BUFFER_BIT4_QCOM");
#endif
#if defined(GL_MULTISAMPLE_BUFFER_BIT5_QCOM)
defconsti(env, "GL-MULTISAMPLE-BUFFER-BIT5-QCOM", (GLenum) GL_MULTISAMPLE_BUFFER_BIT5_QCOM, "GL_MULTISAMPLE_BUFFER_BIT5_QCOM");
#endif
#if defined(GL_MULTISAMPLE_BUFFER_BIT6_QCOM)
defconsti(env, "GL-MULTISAMPLE-BUFFER-BIT6-QCOM", (GLenum) GL_MULTISAMPLE_BUFFER_BIT6_QCOM, "GL_MULTISAMPLE_BUFFER_BIT6_QCOM");
#endif
#if defined(GL_MULTISAMPLE_BUFFER_BIT7_QCOM)
defconsti(env, "GL-MULTISAMPLE-BUFFER-BIT7-QCOM", (GLenum) GL_MULTISAMPLE_BUFFER_BIT7_QCOM, "GL_MULTISAMPLE_BUFFER_BIT7_QCOM");
#endif
#if defined(GL_WRITEONLY_RENDERING_QCOM)
defconsti(env, "GL-WRITEONLY-RENDERING-QCOM", (GLenum) GL_WRITEONLY_RENDERING_QCOM, "GL_WRITEONLY_RENDERING_QCOM");
#endif
#if defined(GL_SCREEN_COORDINATES_REND)
defconsti(env, "GL-SCREEN-COORDINATES-REND", (GLenum) GL_SCREEN_COORDINATES_REND, "GL_SCREEN_COORDINATES_REND");
#endif
#if defined(GL_INVERTED_SCREEN_W_REND)
defconsti(env, "GL-INVERTED-SCREEN-W-REND", (GLenum) GL_INVERTED_SCREEN_W_REND, "GL_INVERTED_SCREEN_W_REND");
#endif
#if defined(GL_RGB_S3TC)
defconsti(env, "GL-RGB-S3TC", (GLenum) GL_RGB_S3TC, "GL_RGB_S3TC");
#endif
#if defined(GL_RGB4_S3TC)
defconsti(env, "GL-RGB4-S3TC", (GLenum) GL_RGB4_S3TC, "GL_RGB4_S3TC");
#endif
#if defined(GL_RGBA_S3TC)
defconsti(env, "GL-RGBA-S3TC", (GLenum) GL_RGBA_S3TC, "GL_RGBA_S3TC");
#endif
#if defined(GL_RGBA4_S3TC)
defconsti(env, "GL-RGBA4-S3TC", (GLenum) GL_RGBA4_S3TC, "GL_RGBA4_S3TC");
#endif
#if defined(GL_RGBA_DXT5_S3TC)
defconsti(env, "GL-RGBA-DXT5-S3TC", (GLenum) GL_RGBA_DXT5_S3TC, "GL_RGBA_DXT5_S3TC");
#endif
#if defined(GL_RGBA4_DXT5_S3TC)
defconsti(env, "GL-RGBA4-DXT5-S3TC", (GLenum) GL_RGBA4_DXT5_S3TC, "GL_RGBA4_DXT5_S3TC");
#endif
#if defined(GL_DETAIL_TEXTURE_2D_SGIS)
defconsti(env, "GL-DETAIL-TEXTURE-2D-SGIS", (GLenum) GL_DETAIL_TEXTURE_2D_SGIS, "GL_DETAIL_TEXTURE_2D_SGIS");
#endif
#if defined(GL_DETAIL_TEXTURE_2D_BINDING_SGIS)
defconsti(env, "GL-DETAIL-TEXTURE-2D-BINDING-SGIS", (GLenum) GL_DETAIL_TEXTURE_2D_BINDING_SGIS, "GL_DETAIL_TEXTURE_2D_BINDING_SGIS");
#endif
#if defined(GL_LINEAR_DETAIL_SGIS)
defconsti(env, "GL-LINEAR-DETAIL-SGIS", (GLenum) GL_LINEAR_DETAIL_SGIS, "GL_LINEAR_DETAIL_SGIS");
#endif
#if defined(GL_LINEAR_DETAIL_ALPHA_SGIS)
defconsti(env, "GL-LINEAR-DETAIL-ALPHA-SGIS", (GLenum) GL_LINEAR_DETAIL_ALPHA_SGIS, "GL_LINEAR_DETAIL_ALPHA_SGIS");
#endif
#if defined(GL_LINEAR_DETAIL_COLOR_SGIS)
defconsti(env, "GL-LINEAR-DETAIL-COLOR-SGIS", (GLenum) GL_LINEAR_DETAIL_COLOR_SGIS, "GL_LINEAR_DETAIL_COLOR_SGIS");
#endif
#if defined(GL_DETAIL_TEXTURE_LEVEL_SGIS)
defconsti(env, "GL-DETAIL-TEXTURE-LEVEL-SGIS", (GLenum) GL_DETAIL_TEXTURE_LEVEL_SGIS, "GL_DETAIL_TEXTURE_LEVEL_SGIS");
#endif
#if defined(GL_DETAIL_TEXTURE_MODE_SGIS)
defconsti(env, "GL-DETAIL-TEXTURE-MODE-SGIS", (GLenum) GL_DETAIL_TEXTURE_MODE_SGIS, "GL_DETAIL_TEXTURE_MODE_SGIS");
#endif
#if defined(GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS)
defconsti(env, "GL-DETAIL-TEXTURE-FUNC-POINTS-SGIS", (GLenum) GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS, "GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS");
#endif
#if defined(GL_FOG_FUNC_SGIS)
defconsti(env, "GL-FOG-FUNC-SGIS", (GLenum) GL_FOG_FUNC_SGIS, "GL_FOG_FUNC_SGIS");
#endif
#if defined(GL_FOG_FUNC_POINTS_SGIS)
defconsti(env, "GL-FOG-FUNC-POINTS-SGIS", (GLenum) GL_FOG_FUNC_POINTS_SGIS, "GL_FOG_FUNC_POINTS_SGIS");
#endif
#if defined(GL_MAX_FOG_FUNC_POINTS_SGIS)
defconsti(env, "GL-MAX-FOG-FUNC-POINTS-SGIS", (GLenum) GL_MAX_FOG_FUNC_POINTS_SGIS, "GL_MAX_FOG_FUNC_POINTS_SGIS");
#endif
#if defined(GL_GENERATE_MIPMAP_SGIS)
defconsti(env, "GL-GENERATE-MIPMAP-SGIS", (GLenum) GL_GENERATE_MIPMAP_SGIS, "GL_GENERATE_MIPMAP_SGIS");
#endif
#if defined(GL_GENERATE_MIPMAP_HINT_SGIS)
defconsti(env, "GL-GENERATE-MIPMAP-HINT-SGIS", (GLenum) GL_GENERATE_MIPMAP_HINT_SGIS, "GL_GENERATE_MIPMAP_HINT_SGIS");
#endif
#if defined(GL_MULTISAMPLE_SGIS)
defconsti(env, "GL-MULTISAMPLE-SGIS", (GLenum) GL_MULTISAMPLE_SGIS, "GL_MULTISAMPLE_SGIS");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_MASK_SGIS)
defconsti(env, "GL-SAMPLE-ALPHA-TO-MASK-SGIS", (GLenum) GL_SAMPLE_ALPHA_TO_MASK_SGIS, "GL_SAMPLE_ALPHA_TO_MASK_SGIS");
#endif
#if defined(GL_SAMPLE_ALPHA_TO_ONE_SGIS)
defconsti(env, "GL-SAMPLE-ALPHA-TO-ONE-SGIS", (GLenum) GL_SAMPLE_ALPHA_TO_ONE_SGIS, "GL_SAMPLE_ALPHA_TO_ONE_SGIS");
#endif
#if defined(GL_SAMPLE_MASK_SGIS)
defconsti(env, "GL-SAMPLE-MASK-SGIS", (GLenum) GL_SAMPLE_MASK_SGIS, "GL_SAMPLE_MASK_SGIS");
#endif
#if defined(GL_1PASS_SGIS)
defconsti(env, "GL-1PASS-SGIS", (GLenum) GL_1PASS_SGIS, "GL_1PASS_SGIS");
#endif
#if defined(GL_2PASS_0_SGIS)
defconsti(env, "GL-2PASS-0-SGIS", (GLenum) GL_2PASS_0_SGIS, "GL_2PASS_0_SGIS");
#endif
#if defined(GL_2PASS_1_SGIS)
defconsti(env, "GL-2PASS-1-SGIS", (GLenum) GL_2PASS_1_SGIS, "GL_2PASS_1_SGIS");
#endif
#if defined(GL_4PASS_0_SGIS)
defconsti(env, "GL-4PASS-0-SGIS", (GLenum) GL_4PASS_0_SGIS, "GL_4PASS_0_SGIS");
#endif
#if defined(GL_4PASS_1_SGIS)
defconsti(env, "GL-4PASS-1-SGIS", (GLenum) GL_4PASS_1_SGIS, "GL_4PASS_1_SGIS");
#endif
#if defined(GL_4PASS_2_SGIS)
defconsti(env, "GL-4PASS-2-SGIS", (GLenum) GL_4PASS_2_SGIS, "GL_4PASS_2_SGIS");
#endif
#if defined(GL_4PASS_3_SGIS)
defconsti(env, "GL-4PASS-3-SGIS", (GLenum) GL_4PASS_3_SGIS, "GL_4PASS_3_SGIS");
#endif
#if defined(GL_SAMPLE_BUFFERS_SGIS)
defconsti(env, "GL-SAMPLE-BUFFERS-SGIS", (GLenum) GL_SAMPLE_BUFFERS_SGIS, "GL_SAMPLE_BUFFERS_SGIS");
#endif
#if defined(GL_SAMPLES_SGIS)
defconsti(env, "GL-SAMPLES-SGIS", (GLenum) GL_SAMPLES_SGIS, "GL_SAMPLES_SGIS");
#endif
#if defined(GL_SAMPLE_MASK_VALUE_SGIS)
defconsti(env, "GL-SAMPLE-MASK-VALUE-SGIS", (GLenum) GL_SAMPLE_MASK_VALUE_SGIS, "GL_SAMPLE_MASK_VALUE_SGIS");
#endif
#if defined(GL_SAMPLE_MASK_INVERT_SGIS)
defconsti(env, "GL-SAMPLE-MASK-INVERT-SGIS", (GLenum) GL_SAMPLE_MASK_INVERT_SGIS, "GL_SAMPLE_MASK_INVERT_SGIS");
#endif
#if defined(GL_SAMPLE_PATTERN_SGIS)
defconsti(env, "GL-SAMPLE-PATTERN-SGIS", (GLenum) GL_SAMPLE_PATTERN_SGIS, "GL_SAMPLE_PATTERN_SGIS");
#endif
#if defined(GL_PIXEL_TEXTURE_SGIS)
defconsti(env, "GL-PIXEL-TEXTURE-SGIS", (GLenum) GL_PIXEL_TEXTURE_SGIS, "GL_PIXEL_TEXTURE_SGIS");
#endif
#if defined(GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS)
defconsti(env, "GL-PIXEL-FRAGMENT-RGB-SOURCE-SGIS", (GLenum) GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS, "GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS");
#endif
#if defined(GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS)
defconsti(env, "GL-PIXEL-FRAGMENT-ALPHA-SOURCE-SGIS", (GLenum) GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS, "GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS");
#endif
#if defined(GL_PIXEL_GROUP_COLOR_SGIS)
defconsti(env, "GL-PIXEL-GROUP-COLOR-SGIS", (GLenum) GL_PIXEL_GROUP_COLOR_SGIS, "GL_PIXEL_GROUP_COLOR_SGIS");
#endif
#if defined(GL_EYE_DISTANCE_TO_POINT_SGIS)
defconsti(env, "GL-EYE-DISTANCE-TO-POINT-SGIS", (GLenum) GL_EYE_DISTANCE_TO_POINT_SGIS, "GL_EYE_DISTANCE_TO_POINT_SGIS");
#endif
#if defined(GL_OBJECT_DISTANCE_TO_POINT_SGIS)
defconsti(env, "GL-OBJECT-DISTANCE-TO-POINT-SGIS", (GLenum) GL_OBJECT_DISTANCE_TO_POINT_SGIS, "GL_OBJECT_DISTANCE_TO_POINT_SGIS");
#endif
#if defined(GL_EYE_DISTANCE_TO_LINE_SGIS)
defconsti(env, "GL-EYE-DISTANCE-TO-LINE-SGIS", (GLenum) GL_EYE_DISTANCE_TO_LINE_SGIS, "GL_EYE_DISTANCE_TO_LINE_SGIS");
#endif
#if defined(GL_OBJECT_DISTANCE_TO_LINE_SGIS)
defconsti(env, "GL-OBJECT-DISTANCE-TO-LINE-SGIS", (GLenum) GL_OBJECT_DISTANCE_TO_LINE_SGIS, "GL_OBJECT_DISTANCE_TO_LINE_SGIS");
#endif
#if defined(GL_EYE_POINT_SGIS)
defconsti(env, "GL-EYE-POINT-SGIS", (GLenum) GL_EYE_POINT_SGIS, "GL_EYE_POINT_SGIS");
#endif
#if defined(GL_OBJECT_POINT_SGIS)
defconsti(env, "GL-OBJECT-POINT-SGIS", (GLenum) GL_OBJECT_POINT_SGIS, "GL_OBJECT_POINT_SGIS");
#endif
#if defined(GL_EYE_LINE_SGIS)
defconsti(env, "GL-EYE-LINE-SGIS", (GLenum) GL_EYE_LINE_SGIS, "GL_EYE_LINE_SGIS");
#endif
#if defined(GL_OBJECT_LINE_SGIS)
defconsti(env, "GL-OBJECT-LINE-SGIS", (GLenum) GL_OBJECT_LINE_SGIS, "GL_OBJECT_LINE_SGIS");
#endif
#if defined(GL_POINT_SIZE_MIN_SGIS)
defconsti(env, "GL-POINT-SIZE-MIN-SGIS", (GLenum) GL_POINT_SIZE_MIN_SGIS, "GL_POINT_SIZE_MIN_SGIS");
#endif
#if defined(GL_POINT_SIZE_MAX_SGIS)
defconsti(env, "GL-POINT-SIZE-MAX-SGIS", (GLenum) GL_POINT_SIZE_MAX_SGIS, "GL_POINT_SIZE_MAX_SGIS");
#endif
#if defined(GL_POINT_FADE_THRESHOLD_SIZE_SGIS)
defconsti(env, "GL-POINT-FADE-THRESHOLD-SIZE-SGIS", (GLenum) GL_POINT_FADE_THRESHOLD_SIZE_SGIS, "GL_POINT_FADE_THRESHOLD_SIZE_SGIS");
#endif
#if defined(GL_DISTANCE_ATTENUATION_SGIS)
defconsti(env, "GL-DISTANCE-ATTENUATION-SGIS", (GLenum) GL_DISTANCE_ATTENUATION_SGIS, "GL_DISTANCE_ATTENUATION_SGIS");
#endif
#if defined(GL_LINEAR_SHARPEN_SGIS)
defconsti(env, "GL-LINEAR-SHARPEN-SGIS", (GLenum) GL_LINEAR_SHARPEN_SGIS, "GL_LINEAR_SHARPEN_SGIS");
#endif
#if defined(GL_LINEAR_SHARPEN_ALPHA_SGIS)
defconsti(env, "GL-LINEAR-SHARPEN-ALPHA-SGIS", (GLenum) GL_LINEAR_SHARPEN_ALPHA_SGIS, "GL_LINEAR_SHARPEN_ALPHA_SGIS");
#endif
#if defined(GL_LINEAR_SHARPEN_COLOR_SGIS)
defconsti(env, "GL-LINEAR-SHARPEN-COLOR-SGIS", (GLenum) GL_LINEAR_SHARPEN_COLOR_SGIS, "GL_LINEAR_SHARPEN_COLOR_SGIS");
#endif
#if defined(GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS)
defconsti(env, "GL-SHARPEN-TEXTURE-FUNC-POINTS-SGIS", (GLenum) GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS, "GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS");
#endif
#if defined(GL_PACK_SKIP_VOLUMES_SGIS)
defconsti(env, "GL-PACK-SKIP-VOLUMES-SGIS", (GLenum) GL_PACK_SKIP_VOLUMES_SGIS, "GL_PACK_SKIP_VOLUMES_SGIS");
#endif
#if defined(GL_PACK_IMAGE_DEPTH_SGIS)
defconsti(env, "GL-PACK-IMAGE-DEPTH-SGIS", (GLenum) GL_PACK_IMAGE_DEPTH_SGIS, "GL_PACK_IMAGE_DEPTH_SGIS");
#endif
#if defined(GL_UNPACK_SKIP_VOLUMES_SGIS)
defconsti(env, "GL-UNPACK-SKIP-VOLUMES-SGIS", (GLenum) GL_UNPACK_SKIP_VOLUMES_SGIS, "GL_UNPACK_SKIP_VOLUMES_SGIS");
#endif
#if defined(GL_UNPACK_IMAGE_DEPTH_SGIS)
defconsti(env, "GL-UNPACK-IMAGE-DEPTH-SGIS", (GLenum) GL_UNPACK_IMAGE_DEPTH_SGIS, "GL_UNPACK_IMAGE_DEPTH_SGIS");
#endif
#if defined(GL_TEXTURE_4D_SGIS)
defconsti(env, "GL-TEXTURE-4D-SGIS", (GLenum) GL_TEXTURE_4D_SGIS, "GL_TEXTURE_4D_SGIS");
#endif
#if defined(GL_PROXY_TEXTURE_4D_SGIS)
defconsti(env, "GL-PROXY-TEXTURE-4D-SGIS", (GLenum) GL_PROXY_TEXTURE_4D_SGIS, "GL_PROXY_TEXTURE_4D_SGIS");
#endif
#if defined(GL_TEXTURE_4DSIZE_SGIS)
defconsti(env, "GL-TEXTURE-4DSIZE-SGIS", (GLenum) GL_TEXTURE_4DSIZE_SGIS, "GL_TEXTURE_4DSIZE_SGIS");
#endif
#if defined(GL_TEXTURE_WRAP_Q_SGIS)
defconsti(env, "GL-TEXTURE-WRAP-Q-SGIS", (GLenum) GL_TEXTURE_WRAP_Q_SGIS, "GL_TEXTURE_WRAP_Q_SGIS");
#endif
#if defined(GL_MAX_4D_TEXTURE_SIZE_SGIS)
defconsti(env, "GL-MAX-4D-TEXTURE-SIZE-SGIS", (GLenum) GL_MAX_4D_TEXTURE_SIZE_SGIS, "GL_MAX_4D_TEXTURE_SIZE_SGIS");
#endif
#if defined(GL_TEXTURE_4D_BINDING_SGIS)
defconsti(env, "GL-TEXTURE-4D-BINDING-SGIS", (GLenum) GL_TEXTURE_4D_BINDING_SGIS, "GL_TEXTURE_4D_BINDING_SGIS");
#endif
#if defined(GL_CLAMP_TO_BORDER_SGIS)
defconsti(env, "GL-CLAMP-TO-BORDER-SGIS", (GLenum) GL_CLAMP_TO_BORDER_SGIS, "GL_CLAMP_TO_BORDER_SGIS");
#endif
#if defined(GL_TEXTURE_COLOR_WRITEMASK_SGIS)
defconsti(env, "GL-TEXTURE-COLOR-WRITEMASK-SGIS", (GLenum) GL_TEXTURE_COLOR_WRITEMASK_SGIS, "GL_TEXTURE_COLOR_WRITEMASK_SGIS");
#endif
#if defined(GL_CLAMP_TO_EDGE_SGIS)
defconsti(env, "GL-CLAMP-TO-EDGE-SGIS", (GLenum) GL_CLAMP_TO_EDGE_SGIS, "GL_CLAMP_TO_EDGE_SGIS");
#endif
#if defined(GL_FILTER4_SGIS)
defconsti(env, "GL-FILTER4-SGIS", (GLenum) GL_FILTER4_SGIS, "GL_FILTER4_SGIS");
#endif
#if defined(GL_TEXTURE_FILTER4_SIZE_SGIS)
defconsti(env, "GL-TEXTURE-FILTER4-SIZE-SGIS", (GLenum) GL_TEXTURE_FILTER4_SIZE_SGIS, "GL_TEXTURE_FILTER4_SIZE_SGIS");
#endif
#if defined(GL_TEXTURE_MIN_LOD_SGIS)
defconsti(env, "GL-TEXTURE-MIN-LOD-SGIS", (GLenum) GL_TEXTURE_MIN_LOD_SGIS, "GL_TEXTURE_MIN_LOD_SGIS");
#endif
#if defined(GL_TEXTURE_MAX_LOD_SGIS)
defconsti(env, "GL-TEXTURE-MAX-LOD-SGIS", (GLenum) GL_TEXTURE_MAX_LOD_SGIS, "GL_TEXTURE_MAX_LOD_SGIS");
#endif
#if defined(GL_TEXTURE_BASE_LEVEL_SGIS)
defconsti(env, "GL-TEXTURE-BASE-LEVEL-SGIS", (GLenum) GL_TEXTURE_BASE_LEVEL_SGIS, "GL_TEXTURE_BASE_LEVEL_SGIS");
#endif
#if defined(GL_TEXTURE_MAX_LEVEL_SGIS)
defconsti(env, "GL-TEXTURE-MAX-LEVEL-SGIS", (GLenum) GL_TEXTURE_MAX_LEVEL_SGIS, "GL_TEXTURE_MAX_LEVEL_SGIS");
#endif
#if defined(GL_DUAL_ALPHA4_SGIS)
defconsti(env, "GL-DUAL-ALPHA4-SGIS", (GLenum) GL_DUAL_ALPHA4_SGIS, "GL_DUAL_ALPHA4_SGIS");
#endif
#if defined(GL_DUAL_ALPHA8_SGIS)
defconsti(env, "GL-DUAL-ALPHA8-SGIS", (GLenum) GL_DUAL_ALPHA8_SGIS, "GL_DUAL_ALPHA8_SGIS");
#endif
#if defined(GL_DUAL_ALPHA12_SGIS)
defconsti(env, "GL-DUAL-ALPHA12-SGIS", (GLenum) GL_DUAL_ALPHA12_SGIS, "GL_DUAL_ALPHA12_SGIS");
#endif
#if defined(GL_DUAL_ALPHA16_SGIS)
defconsti(env, "GL-DUAL-ALPHA16-SGIS", (GLenum) GL_DUAL_ALPHA16_SGIS, "GL_DUAL_ALPHA16_SGIS");
#endif
#if defined(GL_DUAL_LUMINANCE4_SGIS)
defconsti(env, "GL-DUAL-LUMINANCE4-SGIS", (GLenum) GL_DUAL_LUMINANCE4_SGIS, "GL_DUAL_LUMINANCE4_SGIS");
#endif
#if defined(GL_DUAL_LUMINANCE8_SGIS)
defconsti(env, "GL-DUAL-LUMINANCE8-SGIS", (GLenum) GL_DUAL_LUMINANCE8_SGIS, "GL_DUAL_LUMINANCE8_SGIS");
#endif
#if defined(GL_DUAL_LUMINANCE12_SGIS)
defconsti(env, "GL-DUAL-LUMINANCE12-SGIS", (GLenum) GL_DUAL_LUMINANCE12_SGIS, "GL_DUAL_LUMINANCE12_SGIS");
#endif
#if defined(GL_DUAL_LUMINANCE16_SGIS)
defconsti(env, "GL-DUAL-LUMINANCE16-SGIS", (GLenum) GL_DUAL_LUMINANCE16_SGIS, "GL_DUAL_LUMINANCE16_SGIS");
#endif
#if defined(GL_DUAL_INTENSITY4_SGIS)
defconsti(env, "GL-DUAL-INTENSITY4-SGIS", (GLenum) GL_DUAL_INTENSITY4_SGIS, "GL_DUAL_INTENSITY4_SGIS");
#endif
#if defined(GL_DUAL_INTENSITY8_SGIS)
defconsti(env, "GL-DUAL-INTENSITY8-SGIS", (GLenum) GL_DUAL_INTENSITY8_SGIS, "GL_DUAL_INTENSITY8_SGIS");
#endif
#if defined(GL_DUAL_INTENSITY12_SGIS)
defconsti(env, "GL-DUAL-INTENSITY12-SGIS", (GLenum) GL_DUAL_INTENSITY12_SGIS, "GL_DUAL_INTENSITY12_SGIS");
#endif
#if defined(GL_DUAL_INTENSITY16_SGIS)
defconsti(env, "GL-DUAL-INTENSITY16-SGIS", (GLenum) GL_DUAL_INTENSITY16_SGIS, "GL_DUAL_INTENSITY16_SGIS");
#endif
#if defined(GL_DUAL_LUMINANCE_ALPHA4_SGIS)
defconsti(env, "GL-DUAL-LUMINANCE-ALPHA4-SGIS", (GLenum) GL_DUAL_LUMINANCE_ALPHA4_SGIS, "GL_DUAL_LUMINANCE_ALPHA4_SGIS");
#endif
#if defined(GL_DUAL_LUMINANCE_ALPHA8_SGIS)
defconsti(env, "GL-DUAL-LUMINANCE-ALPHA8-SGIS", (GLenum) GL_DUAL_LUMINANCE_ALPHA8_SGIS, "GL_DUAL_LUMINANCE_ALPHA8_SGIS");
#endif
#if defined(GL_QUAD_ALPHA4_SGIS)
defconsti(env, "GL-QUAD-ALPHA4-SGIS", (GLenum) GL_QUAD_ALPHA4_SGIS, "GL_QUAD_ALPHA4_SGIS");
#endif
#if defined(GL_QUAD_ALPHA8_SGIS)
defconsti(env, "GL-QUAD-ALPHA8-SGIS", (GLenum) GL_QUAD_ALPHA8_SGIS, "GL_QUAD_ALPHA8_SGIS");
#endif
#if defined(GL_QUAD_LUMINANCE4_SGIS)
defconsti(env, "GL-QUAD-LUMINANCE4-SGIS", (GLenum) GL_QUAD_LUMINANCE4_SGIS, "GL_QUAD_LUMINANCE4_SGIS");
#endif
#if defined(GL_QUAD_LUMINANCE8_SGIS)
defconsti(env, "GL-QUAD-LUMINANCE8-SGIS", (GLenum) GL_QUAD_LUMINANCE8_SGIS, "GL_QUAD_LUMINANCE8_SGIS");
#endif
#if defined(GL_QUAD_INTENSITY4_SGIS)
defconsti(env, "GL-QUAD-INTENSITY4-SGIS", (GLenum) GL_QUAD_INTENSITY4_SGIS, "GL_QUAD_INTENSITY4_SGIS");
#endif
#if defined(GL_QUAD_INTENSITY8_SGIS)
defconsti(env, "GL-QUAD-INTENSITY8-SGIS", (GLenum) GL_QUAD_INTENSITY8_SGIS, "GL_QUAD_INTENSITY8_SGIS");
#endif
#if defined(GL_DUAL_TEXTURE_SELECT_SGIS)
defconsti(env, "GL-DUAL-TEXTURE-SELECT-SGIS", (GLenum) GL_DUAL_TEXTURE_SELECT_SGIS, "GL_DUAL_TEXTURE_SELECT_SGIS");
#endif
#if defined(GL_QUAD_TEXTURE_SELECT_SGIS)
defconsti(env, "GL-QUAD-TEXTURE-SELECT-SGIS", (GLenum) GL_QUAD_TEXTURE_SELECT_SGIS, "GL_QUAD_TEXTURE_SELECT_SGIS");
#endif
#if defined(GL_ASYNC_MARKER_SGIX)
defconsti(env, "GL-ASYNC-MARKER-SGIX", (GLenum) GL_ASYNC_MARKER_SGIX, "GL_ASYNC_MARKER_SGIX");
#endif
#if defined(GL_ASYNC_HISTOGRAM_SGIX)
defconsti(env, "GL-ASYNC-HISTOGRAM-SGIX", (GLenum) GL_ASYNC_HISTOGRAM_SGIX, "GL_ASYNC_HISTOGRAM_SGIX");
#endif
#if defined(GL_MAX_ASYNC_HISTOGRAM_SGIX)
defconsti(env, "GL-MAX-ASYNC-HISTOGRAM-SGIX", (GLenum) GL_MAX_ASYNC_HISTOGRAM_SGIX, "GL_MAX_ASYNC_HISTOGRAM_SGIX");
#endif
#if defined(GL_ASYNC_TEX_IMAGE_SGIX)
defconsti(env, "GL-ASYNC-TEX-IMAGE-SGIX", (GLenum) GL_ASYNC_TEX_IMAGE_SGIX, "GL_ASYNC_TEX_IMAGE_SGIX");
#endif
#if defined(GL_ASYNC_DRAW_PIXELS_SGIX)
defconsti(env, "GL-ASYNC-DRAW-PIXELS-SGIX", (GLenum) GL_ASYNC_DRAW_PIXELS_SGIX, "GL_ASYNC_DRAW_PIXELS_SGIX");
#endif
#if defined(GL_ASYNC_READ_PIXELS_SGIX)
defconsti(env, "GL-ASYNC-READ-PIXELS-SGIX", (GLenum) GL_ASYNC_READ_PIXELS_SGIX, "GL_ASYNC_READ_PIXELS_SGIX");
#endif
#if defined(GL_MAX_ASYNC_TEX_IMAGE_SGIX)
defconsti(env, "GL-MAX-ASYNC-TEX-IMAGE-SGIX", (GLenum) GL_MAX_ASYNC_TEX_IMAGE_SGIX, "GL_MAX_ASYNC_TEX_IMAGE_SGIX");
#endif
#if defined(GL_MAX_ASYNC_DRAW_PIXELS_SGIX)
defconsti(env, "GL-MAX-ASYNC-DRAW-PIXELS-SGIX", (GLenum) GL_MAX_ASYNC_DRAW_PIXELS_SGIX, "GL_MAX_ASYNC_DRAW_PIXELS_SGIX");
#endif
#if defined(GL_MAX_ASYNC_READ_PIXELS_SGIX)
defconsti(env, "GL-MAX-ASYNC-READ-PIXELS-SGIX", (GLenum) GL_MAX_ASYNC_READ_PIXELS_SGIX, "GL_MAX_ASYNC_READ_PIXELS_SGIX");
#endif
#if defined(GL_ALPHA_MIN_SGIX)
defconsti(env, "GL-ALPHA-MIN-SGIX", (GLenum) GL_ALPHA_MIN_SGIX, "GL_ALPHA_MIN_SGIX");
#endif
#if defined(GL_ALPHA_MAX_SGIX)
defconsti(env, "GL-ALPHA-MAX-SGIX", (GLenum) GL_ALPHA_MAX_SGIX, "GL_ALPHA_MAX_SGIX");
#endif
#if defined(GL_CALLIGRAPHIC_FRAGMENT_SGIX)
defconsti(env, "GL-CALLIGRAPHIC-FRAGMENT-SGIX", (GLenum) GL_CALLIGRAPHIC_FRAGMENT_SGIX, "GL_CALLIGRAPHIC_FRAGMENT_SGIX");
#endif
#if defined(GL_LINEAR_CLIPMAP_LINEAR_SGIX)
defconsti(env, "GL-LINEAR-CLIPMAP-LINEAR-SGIX", (GLenum) GL_LINEAR_CLIPMAP_LINEAR_SGIX, "GL_LINEAR_CLIPMAP_LINEAR_SGIX");
#endif
#if defined(GL_TEXTURE_CLIPMAP_CENTER_SGIX)
defconsti(env, "GL-TEXTURE-CLIPMAP-CENTER-SGIX", (GLenum) GL_TEXTURE_CLIPMAP_CENTER_SGIX, "GL_TEXTURE_CLIPMAP_CENTER_SGIX");
#endif
#if defined(GL_TEXTURE_CLIPMAP_FRAME_SGIX)
defconsti(env, "GL-TEXTURE-CLIPMAP-FRAME-SGIX", (GLenum) GL_TEXTURE_CLIPMAP_FRAME_SGIX, "GL_TEXTURE_CLIPMAP_FRAME_SGIX");
#endif
#if defined(GL_TEXTURE_CLIPMAP_OFFSET_SGIX)
defconsti(env, "GL-TEXTURE-CLIPMAP-OFFSET-SGIX", (GLenum) GL_TEXTURE_CLIPMAP_OFFSET_SGIX, "GL_TEXTURE_CLIPMAP_OFFSET_SGIX");
#endif
#if defined(GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX)
defconsti(env, "GL-TEXTURE-CLIPMAP-VIRTUAL-DEPTH-SGIX", (GLenum) GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX, "GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX");
#endif
#if defined(GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX)
defconsti(env, "GL-TEXTURE-CLIPMAP-LOD-OFFSET-SGIX", (GLenum) GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX, "GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX");
#endif
#if defined(GL_TEXTURE_CLIPMAP_DEPTH_SGIX)
defconsti(env, "GL-TEXTURE-CLIPMAP-DEPTH-SGIX", (GLenum) GL_TEXTURE_CLIPMAP_DEPTH_SGIX, "GL_TEXTURE_CLIPMAP_DEPTH_SGIX");
#endif
#if defined(GL_MAX_CLIPMAP_DEPTH_SGIX)
defconsti(env, "GL-MAX-CLIPMAP-DEPTH-SGIX", (GLenum) GL_MAX_CLIPMAP_DEPTH_SGIX, "GL_MAX_CLIPMAP_DEPTH_SGIX");
#endif
#if defined(GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX)
defconsti(env, "GL-MAX-CLIPMAP-VIRTUAL-DEPTH-SGIX", (GLenum) GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX, "GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX");
#endif
#if defined(GL_NEAREST_CLIPMAP_NEAREST_SGIX)
defconsti(env, "GL-NEAREST-CLIPMAP-NEAREST-SGIX", (GLenum) GL_NEAREST_CLIPMAP_NEAREST_SGIX, "GL_NEAREST_CLIPMAP_NEAREST_SGIX");
#endif
#if defined(GL_NEAREST_CLIPMAP_LINEAR_SGIX)
defconsti(env, "GL-NEAREST-CLIPMAP-LINEAR-SGIX", (GLenum) GL_NEAREST_CLIPMAP_LINEAR_SGIX, "GL_NEAREST_CLIPMAP_LINEAR_SGIX");
#endif
#if defined(GL_LINEAR_CLIPMAP_NEAREST_SGIX)
defconsti(env, "GL-LINEAR-CLIPMAP-NEAREST-SGIX", (GLenum) GL_LINEAR_CLIPMAP_NEAREST_SGIX, "GL_LINEAR_CLIPMAP_NEAREST_SGIX");
#endif
#if defined(GL_CONVOLUTION_HINT_SGIX)
defconsti(env, "GL-CONVOLUTION-HINT-SGIX", (GLenum) GL_CONVOLUTION_HINT_SGIX, "GL_CONVOLUTION_HINT_SGIX");
#endif
#if defined(GL_DEPTH_COMPONENT16_SGIX)
defconsti(env, "GL-DEPTH-COMPONENT16-SGIX", (GLenum) GL_DEPTH_COMPONENT16_SGIX, "GL_DEPTH_COMPONENT16_SGIX");
#endif
#if defined(GL_DEPTH_COMPONENT24_SGIX)
defconsti(env, "GL-DEPTH-COMPONENT24-SGIX", (GLenum) GL_DEPTH_COMPONENT24_SGIX, "GL_DEPTH_COMPONENT24_SGIX");
#endif
#if defined(GL_DEPTH_COMPONENT32_SGIX)
defconsti(env, "GL-DEPTH-COMPONENT32-SGIX", (GLenum) GL_DEPTH_COMPONENT32_SGIX, "GL_DEPTH_COMPONENT32_SGIX");
#endif
#if defined(GL_FOG_OFFSET_SGIX)
defconsti(env, "GL-FOG-OFFSET-SGIX", (GLenum) GL_FOG_OFFSET_SGIX, "GL_FOG_OFFSET_SGIX");
#endif
#if defined(GL_FOG_OFFSET_VALUE_SGIX)
defconsti(env, "GL-FOG-OFFSET-VALUE-SGIX", (GLenum) GL_FOG_OFFSET_VALUE_SGIX, "GL_FOG_OFFSET_VALUE_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHTING_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHTING-SGIX", (GLenum) GL_FRAGMENT_LIGHTING_SGIX, "GL_FRAGMENT_LIGHTING_SGIX");
#endif
#if defined(GL_FRAGMENT_COLOR_MATERIAL_SGIX)
defconsti(env, "GL-FRAGMENT-COLOR-MATERIAL-SGIX", (GLenum) GL_FRAGMENT_COLOR_MATERIAL_SGIX, "GL_FRAGMENT_COLOR_MATERIAL_SGIX");
#endif
#if defined(GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX)
defconsti(env, "GL-FRAGMENT-COLOR-MATERIAL-FACE-SGIX", (GLenum) GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX, "GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX");
#endif
#if defined(GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX)
defconsti(env, "GL-FRAGMENT-COLOR-MATERIAL-PARAMETER-SGIX", (GLenum) GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX, "GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX");
#endif
#if defined(GL_MAX_FRAGMENT_LIGHTS_SGIX)
defconsti(env, "GL-MAX-FRAGMENT-LIGHTS-SGIX", (GLenum) GL_MAX_FRAGMENT_LIGHTS_SGIX, "GL_MAX_FRAGMENT_LIGHTS_SGIX");
#endif
#if defined(GL_MAX_ACTIVE_LIGHTS_SGIX)
defconsti(env, "GL-MAX-ACTIVE-LIGHTS-SGIX", (GLenum) GL_MAX_ACTIVE_LIGHTS_SGIX, "GL_MAX_ACTIVE_LIGHTS_SGIX");
#endif
#if defined(GL_CURRENT_RASTER_NORMAL_SGIX)
defconsti(env, "GL-CURRENT-RASTER-NORMAL-SGIX", (GLenum) GL_CURRENT_RASTER_NORMAL_SGIX, "GL_CURRENT_RASTER_NORMAL_SGIX");
#endif
#if defined(GL_LIGHT_ENV_MODE_SGIX)
defconsti(env, "GL-LIGHT-ENV-MODE-SGIX", (GLenum) GL_LIGHT_ENV_MODE_SGIX, "GL_LIGHT_ENV_MODE_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT-MODEL-LOCAL-VIEWER-SGIX", (GLenum) GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX, "GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT-MODEL-TWO-SIDE-SGIX", (GLenum) GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX, "GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT-MODEL-AMBIENT-SGIX", (GLenum) GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX, "GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT-MODEL-NORMAL-INTERPOLATION-SGIX", (GLenum) GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX, "GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT0_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT0-SGIX", (GLenum) GL_FRAGMENT_LIGHT0_SGIX, "GL_FRAGMENT_LIGHT0_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT1_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT1-SGIX", (GLenum) GL_FRAGMENT_LIGHT1_SGIX, "GL_FRAGMENT_LIGHT1_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT2_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT2-SGIX", (GLenum) GL_FRAGMENT_LIGHT2_SGIX, "GL_FRAGMENT_LIGHT2_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT3_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT3-SGIX", (GLenum) GL_FRAGMENT_LIGHT3_SGIX, "GL_FRAGMENT_LIGHT3_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT4_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT4-SGIX", (GLenum) GL_FRAGMENT_LIGHT4_SGIX, "GL_FRAGMENT_LIGHT4_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT5_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT5-SGIX", (GLenum) GL_FRAGMENT_LIGHT5_SGIX, "GL_FRAGMENT_LIGHT5_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT6_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT6-SGIX", (GLenum) GL_FRAGMENT_LIGHT6_SGIX, "GL_FRAGMENT_LIGHT6_SGIX");
#endif
#if defined(GL_FRAGMENT_LIGHT7_SGIX)
defconsti(env, "GL-FRAGMENT-LIGHT7-SGIX", (GLenum) GL_FRAGMENT_LIGHT7_SGIX, "GL_FRAGMENT_LIGHT7_SGIX");
#endif
#if defined(GL_FRAMEZOOM_SGIX)
defconsti(env, "GL-FRAMEZOOM-SGIX", (GLenum) GL_FRAMEZOOM_SGIX, "GL_FRAMEZOOM_SGIX");
#endif
#if defined(GL_FRAMEZOOM_FACTOR_SGIX)
defconsti(env, "GL-FRAMEZOOM-FACTOR-SGIX", (GLenum) GL_FRAMEZOOM_FACTOR_SGIX, "GL_FRAMEZOOM_FACTOR_SGIX");
#endif
#if defined(GL_MAX_FRAMEZOOM_FACTOR_SGIX)
defconsti(env, "GL-MAX-FRAMEZOOM-FACTOR-SGIX", (GLenum) GL_MAX_FRAMEZOOM_FACTOR_SGIX, "GL_MAX_FRAMEZOOM_FACTOR_SGIX");
#endif
#if defined(GL_INSTRUMENT_BUFFER_POINTER_SGIX)
defconsti(env, "GL-INSTRUMENT-BUFFER-POINTER-SGIX", (GLenum) GL_INSTRUMENT_BUFFER_POINTER_SGIX, "GL_INSTRUMENT_BUFFER_POINTER_SGIX");
#endif
#if defined(GL_INSTRUMENT_MEASUREMENTS_SGIX)
defconsti(env, "GL-INSTRUMENT-MEASUREMENTS-SGIX", (GLenum) GL_INSTRUMENT_MEASUREMENTS_SGIX, "GL_INSTRUMENT_MEASUREMENTS_SGIX");
#endif
#if defined(GL_INTERLACE_SGIX)
defconsti(env, "GL-INTERLACE-SGIX", (GLenum) GL_INTERLACE_SGIX, "GL_INTERLACE_SGIX");
#endif
#if defined(GL_IR_INSTRUMENT1_SGIX)
defconsti(env, "GL-IR-INSTRUMENT1-SGIX", (GLenum) GL_IR_INSTRUMENT1_SGIX, "GL_IR_INSTRUMENT1_SGIX");
#endif
#if defined(GL_LIST_PRIORITY_SGIX)
defconsti(env, "GL-LIST-PRIORITY-SGIX", (GLenum) GL_LIST_PRIORITY_SGIX, "GL_LIST_PRIORITY_SGIX");
#endif
#if defined(GL_PIXEL_TEX_GEN_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-SGIX", (GLenum) GL_PIXEL_TEX_GEN_SGIX, "GL_PIXEL_TEX_GEN_SGIX");
#endif
#if defined(GL_PIXEL_TEX_GEN_MODE_SGIX)
defconsti(env, "GL-PIXEL-TEX-GEN-MODE-SGIX", (GLenum) GL_PIXEL_TEX_GEN_MODE_SGIX, "GL_PIXEL_TEX_GEN_MODE_SGIX");
#endif
#if defined(GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX)
defconsti(env, "GL-PIXEL-TILE-BEST-ALIGNMENT-SGIX", (GLenum) GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX, "GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX");
#endif
#if defined(GL_PIXEL_TILE_CACHE_INCREMENT_SGIX)
defconsti(env, "GL-PIXEL-TILE-CACHE-INCREMENT-SGIX", (GLenum) GL_PIXEL_TILE_CACHE_INCREMENT_SGIX, "GL_PIXEL_TILE_CACHE_INCREMENT_SGIX");
#endif
#if defined(GL_PIXEL_TILE_WIDTH_SGIX)
defconsti(env, "GL-PIXEL-TILE-WIDTH-SGIX", (GLenum) GL_PIXEL_TILE_WIDTH_SGIX, "GL_PIXEL_TILE_WIDTH_SGIX");
#endif
#if defined(GL_PIXEL_TILE_HEIGHT_SGIX)
defconsti(env, "GL-PIXEL-TILE-HEIGHT-SGIX", (GLenum) GL_PIXEL_TILE_HEIGHT_SGIX, "GL_PIXEL_TILE_HEIGHT_SGIX");
#endif
#if defined(GL_PIXEL_TILE_GRID_WIDTH_SGIX)
defconsti(env, "GL-PIXEL-TILE-GRID-WIDTH-SGIX", (GLenum) GL_PIXEL_TILE_GRID_WIDTH_SGIX, "GL_PIXEL_TILE_GRID_WIDTH_SGIX");
#endif
#if defined(GL_PIXEL_TILE_GRID_HEIGHT_SGIX)
defconsti(env, "GL-PIXEL-TILE-GRID-HEIGHT-SGIX", (GLenum) GL_PIXEL_TILE_GRID_HEIGHT_SGIX, "GL_PIXEL_TILE_GRID_HEIGHT_SGIX");
#endif
#if defined(GL_PIXEL_TILE_GRID_DEPTH_SGIX)
defconsti(env, "GL-PIXEL-TILE-GRID-DEPTH-SGIX", (GLenum) GL_PIXEL_TILE_GRID_DEPTH_SGIX, "GL_PIXEL_TILE_GRID_DEPTH_SGIX");
#endif
#if defined(GL_PIXEL_TILE_CACHE_SIZE_SGIX)
defconsti(env, "GL-PIXEL-TILE-CACHE-SIZE-SGIX", (GLenum) GL_PIXEL_TILE_CACHE_SIZE_SGIX, "GL_PIXEL_TILE_CACHE_SIZE_SGIX");
#endif
#if defined(GL_TEXTURE_DEFORMATION_BIT_SGIX)
defconsti(env, "GL-TEXTURE-DEFORMATION-BIT-SGIX", (GLenum) GL_TEXTURE_DEFORMATION_BIT_SGIX, "GL_TEXTURE_DEFORMATION_BIT_SGIX");
#endif
#if defined(GL_GEOMETRY_DEFORMATION_BIT_SGIX)
defconsti(env, "GL-GEOMETRY-DEFORMATION-BIT-SGIX", (GLenum) GL_GEOMETRY_DEFORMATION_BIT_SGIX, "GL_GEOMETRY_DEFORMATION_BIT_SGIX");
#endif
#if defined(GL_GEOMETRY_DEFORMATION_SGIX)
defconsti(env, "GL-GEOMETRY-DEFORMATION-SGIX", (GLenum) GL_GEOMETRY_DEFORMATION_SGIX, "GL_GEOMETRY_DEFORMATION_SGIX");
#endif
#if defined(GL_TEXTURE_DEFORMATION_SGIX)
defconsti(env, "GL-TEXTURE-DEFORMATION-SGIX", (GLenum) GL_TEXTURE_DEFORMATION_SGIX, "GL_TEXTURE_DEFORMATION_SGIX");
#endif
#if defined(GL_DEFORMATIONS_MASK_SGIX)
defconsti(env, "GL-DEFORMATIONS-MASK-SGIX", (GLenum) GL_DEFORMATIONS_MASK_SGIX, "GL_DEFORMATIONS_MASK_SGIX");
#endif
#if defined(GL_MAX_DEFORMATION_ORDER_SGIX)
defconsti(env, "GL-MAX-DEFORMATION-ORDER-SGIX", (GLenum) GL_MAX_DEFORMATION_ORDER_SGIX, "GL_MAX_DEFORMATION_ORDER_SGIX");
#endif
#if defined(GL_REFERENCE_PLANE_SGIX)
defconsti(env, "GL-REFERENCE-PLANE-SGIX", (GLenum) GL_REFERENCE_PLANE_SGIX, "GL_REFERENCE_PLANE_SGIX");
#endif
#if defined(GL_REFERENCE_PLANE_EQUATION_SGIX)
defconsti(env, "GL-REFERENCE-PLANE-EQUATION-SGIX", (GLenum) GL_REFERENCE_PLANE_EQUATION_SGIX, "GL_REFERENCE_PLANE_EQUATION_SGIX");
#endif
#if defined(GL_PACK_RESAMPLE_SGIX)
defconsti(env, "GL-PACK-RESAMPLE-SGIX", (GLenum) GL_PACK_RESAMPLE_SGIX, "GL_PACK_RESAMPLE_SGIX");
#endif
#if defined(GL_UNPACK_RESAMPLE_SGIX)
defconsti(env, "GL-UNPACK-RESAMPLE-SGIX", (GLenum) GL_UNPACK_RESAMPLE_SGIX, "GL_UNPACK_RESAMPLE_SGIX");
#endif
#if defined(GL_RESAMPLE_REPLICATE_SGIX)
defconsti(env, "GL-RESAMPLE-REPLICATE-SGIX", (GLenum) GL_RESAMPLE_REPLICATE_SGIX, "GL_RESAMPLE_REPLICATE_SGIX");
#endif
#if defined(GL_RESAMPLE_ZERO_FILL_SGIX)
defconsti(env, "GL-RESAMPLE-ZERO-FILL-SGIX", (GLenum) GL_RESAMPLE_ZERO_FILL_SGIX, "GL_RESAMPLE_ZERO_FILL_SGIX");
#endif
#if defined(GL_RESAMPLE_DECIMATE_SGIX)
defconsti(env, "GL-RESAMPLE-DECIMATE-SGIX", (GLenum) GL_RESAMPLE_DECIMATE_SGIX, "GL_RESAMPLE_DECIMATE_SGIX");
#endif
#if defined(GL_SCALEBIAS_HINT_SGIX)
defconsti(env, "GL-SCALEBIAS-HINT-SGIX", (GLenum) GL_SCALEBIAS_HINT_SGIX, "GL_SCALEBIAS_HINT_SGIX");
#endif
#if defined(GL_TEXTURE_COMPARE_SGIX)
defconsti(env, "GL-TEXTURE-COMPARE-SGIX", (GLenum) GL_TEXTURE_COMPARE_SGIX, "GL_TEXTURE_COMPARE_SGIX");
#endif
#if defined(GL_TEXTURE_COMPARE_OPERATOR_SGIX)
defconsti(env, "GL-TEXTURE-COMPARE-OPERATOR-SGIX", (GLenum) GL_TEXTURE_COMPARE_OPERATOR_SGIX, "GL_TEXTURE_COMPARE_OPERATOR_SGIX");
#endif
#if defined(GL_TEXTURE_LEQUAL_R_SGIX)
defconsti(env, "GL-TEXTURE-LEQUAL-R-SGIX", (GLenum) GL_TEXTURE_LEQUAL_R_SGIX, "GL_TEXTURE_LEQUAL_R_SGIX");
#endif
#if defined(GL_TEXTURE_GEQUAL_R_SGIX)
defconsti(env, "GL-TEXTURE-GEQUAL-R-SGIX", (GLenum) GL_TEXTURE_GEQUAL_R_SGIX, "GL_TEXTURE_GEQUAL_R_SGIX");
#endif
#if defined(GL_SHADOW_AMBIENT_SGIX)
defconsti(env, "GL-SHADOW-AMBIENT-SGIX", (GLenum) GL_SHADOW_AMBIENT_SGIX, "GL_SHADOW_AMBIENT_SGIX");
#endif
#if defined(GL_SPRITE_SGIX)
defconsti(env, "GL-SPRITE-SGIX", (GLenum) GL_SPRITE_SGIX, "GL_SPRITE_SGIX");
#endif
#if defined(GL_SPRITE_MODE_SGIX)
defconsti(env, "GL-SPRITE-MODE-SGIX", (GLenum) GL_SPRITE_MODE_SGIX, "GL_SPRITE_MODE_SGIX");
#endif
#if defined(GL_SPRITE_AXIS_SGIX)
defconsti(env, "GL-SPRITE-AXIS-SGIX", (GLenum) GL_SPRITE_AXIS_SGIX, "GL_SPRITE_AXIS_SGIX");
#endif
#if defined(GL_SPRITE_TRANSLATION_SGIX)
defconsti(env, "GL-SPRITE-TRANSLATION-SGIX", (GLenum) GL_SPRITE_TRANSLATION_SGIX, "GL_SPRITE_TRANSLATION_SGIX");
#endif
#if defined(GL_SPRITE_AXIAL_SGIX)
defconsti(env, "GL-SPRITE-AXIAL-SGIX", (GLenum) GL_SPRITE_AXIAL_SGIX, "GL_SPRITE_AXIAL_SGIX");
#endif
#if defined(GL_SPRITE_OBJECT_ALIGNED_SGIX)
defconsti(env, "GL-SPRITE-OBJECT-ALIGNED-SGIX", (GLenum) GL_SPRITE_OBJECT_ALIGNED_SGIX, "GL_SPRITE_OBJECT_ALIGNED_SGIX");
#endif
#if defined(GL_SPRITE_EYE_ALIGNED_SGIX)
defconsti(env, "GL-SPRITE-EYE-ALIGNED-SGIX", (GLenum) GL_SPRITE_EYE_ALIGNED_SGIX, "GL_SPRITE_EYE_ALIGNED_SGIX");
#endif
#if defined(GL_PACK_SUBSAMPLE_RATE_SGIX)
defconsti(env, "GL-PACK-SUBSAMPLE-RATE-SGIX", (GLenum) GL_PACK_SUBSAMPLE_RATE_SGIX, "GL_PACK_SUBSAMPLE_RATE_SGIX");
#endif
#if defined(GL_UNPACK_SUBSAMPLE_RATE_SGIX)
defconsti(env, "GL-UNPACK-SUBSAMPLE-RATE-SGIX", (GLenum) GL_UNPACK_SUBSAMPLE_RATE_SGIX, "GL_UNPACK_SUBSAMPLE_RATE_SGIX");
#endif
#if defined(GL_PIXEL_SUBSAMPLE_4444_SGIX)
defconsti(env, "GL-PIXEL-SUBSAMPLE-4444-SGIX", (GLenum) GL_PIXEL_SUBSAMPLE_4444_SGIX, "GL_PIXEL_SUBSAMPLE_4444_SGIX");
#endif
#if defined(GL_PIXEL_SUBSAMPLE_2424_SGIX)
defconsti(env, "GL-PIXEL-SUBSAMPLE-2424-SGIX", (GLenum) GL_PIXEL_SUBSAMPLE_2424_SGIX, "GL_PIXEL_SUBSAMPLE_2424_SGIX");
#endif
#if defined(GL_PIXEL_SUBSAMPLE_4242_SGIX)
defconsti(env, "GL-PIXEL-SUBSAMPLE-4242-SGIX", (GLenum) GL_PIXEL_SUBSAMPLE_4242_SGIX, "GL_PIXEL_SUBSAMPLE_4242_SGIX");
#endif
#if defined(GL_TEXTURE_ENV_BIAS_SGIX)
defconsti(env, "GL-TEXTURE-ENV-BIAS-SGIX", (GLenum) GL_TEXTURE_ENV_BIAS_SGIX, "GL_TEXTURE_ENV_BIAS_SGIX");
#endif
#if defined(GL_TEXTURE_MAX_CLAMP_S_SGIX)
defconsti(env, "GL-TEXTURE-MAX-CLAMP-S-SGIX", (GLenum) GL_TEXTURE_MAX_CLAMP_S_SGIX, "GL_TEXTURE_MAX_CLAMP_S_SGIX");
#endif
#if defined(GL_TEXTURE_MAX_CLAMP_T_SGIX)
defconsti(env, "GL-TEXTURE-MAX-CLAMP-T-SGIX", (GLenum) GL_TEXTURE_MAX_CLAMP_T_SGIX, "GL_TEXTURE_MAX_CLAMP_T_SGIX");
#endif
#if defined(GL_TEXTURE_MAX_CLAMP_R_SGIX)
defconsti(env, "GL-TEXTURE-MAX-CLAMP-R-SGIX", (GLenum) GL_TEXTURE_MAX_CLAMP_R_SGIX, "GL_TEXTURE_MAX_CLAMP_R_SGIX");
#endif
#if defined(GL_TEXTURE_LOD_BIAS_S_SGIX)
defconsti(env, "GL-TEXTURE-LOD-BIAS-S-SGIX", (GLenum) GL_TEXTURE_LOD_BIAS_S_SGIX, "GL_TEXTURE_LOD_BIAS_S_SGIX");
#endif
#if defined(GL_TEXTURE_LOD_BIAS_T_SGIX)
defconsti(env, "GL-TEXTURE-LOD-BIAS-T-SGIX", (GLenum) GL_TEXTURE_LOD_BIAS_T_SGIX, "GL_TEXTURE_LOD_BIAS_T_SGIX");
#endif
#if defined(GL_TEXTURE_LOD_BIAS_R_SGIX)
defconsti(env, "GL-TEXTURE-LOD-BIAS-R-SGIX", (GLenum) GL_TEXTURE_LOD_BIAS_R_SGIX, "GL_TEXTURE_LOD_BIAS_R_SGIX");
#endif
#if defined(GL_TEXTURE_MULTI_BUFFER_HINT_SGIX)
defconsti(env, "GL-TEXTURE-MULTI-BUFFER-HINT-SGIX", (GLenum) GL_TEXTURE_MULTI_BUFFER_HINT_SGIX, "GL_TEXTURE_MULTI_BUFFER_HINT_SGIX");
#endif
#if defined(GL_POST_TEXTURE_FILTER_BIAS_SGIX)
defconsti(env, "GL-POST-TEXTURE-FILTER-BIAS-SGIX", (GLenum) GL_POST_TEXTURE_FILTER_BIAS_SGIX, "GL_POST_TEXTURE_FILTER_BIAS_SGIX");
#endif
#if defined(GL_POST_TEXTURE_FILTER_SCALE_SGIX)
defconsti(env, "GL-POST-TEXTURE-FILTER-SCALE-SGIX", (GLenum) GL_POST_TEXTURE_FILTER_SCALE_SGIX, "GL_POST_TEXTURE_FILTER_SCALE_SGIX");
#endif
#if defined(GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX)
defconsti(env, "GL-POST-TEXTURE-FILTER-BIAS-RANGE-SGIX", (GLenum) GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX, "GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX");
#endif
#if defined(GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX)
defconsti(env, "GL-POST-TEXTURE-FILTER-SCALE-RANGE-SGIX", (GLenum) GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX, "GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX");
#endif
#if defined(GL_VERTEX_PRECLIP_SGIX)
defconsti(env, "GL-VERTEX-PRECLIP-SGIX", (GLenum) GL_VERTEX_PRECLIP_SGIX, "GL_VERTEX_PRECLIP_SGIX");
#endif
#if defined(GL_VERTEX_PRECLIP_HINT_SGIX)
defconsti(env, "GL-VERTEX-PRECLIP-HINT-SGIX", (GLenum) GL_VERTEX_PRECLIP_HINT_SGIX, "GL_VERTEX_PRECLIP_HINT_SGIX");
#endif
#if defined(GL_YCRCB_422_SGIX)
defconsti(env, "GL-YCRCB-422-SGIX", (GLenum) GL_YCRCB_422_SGIX, "GL_YCRCB_422_SGIX");
#endif
#if defined(GL_YCRCB_444_SGIX)
defconsti(env, "GL-YCRCB-444-SGIX", (GLenum) GL_YCRCB_444_SGIX, "GL_YCRCB_444_SGIX");
#endif
#if defined(GL_YCRCB_SGIX)
defconsti(env, "GL-YCRCB-SGIX", (GLenum) GL_YCRCB_SGIX, "GL_YCRCB_SGIX");
#endif
#if defined(GL_YCRCBA_SGIX)
defconsti(env, "GL-YCRCBA-SGIX", (GLenum) GL_YCRCBA_SGIX, "GL_YCRCBA_SGIX");
#endif
#if defined(GL_COLOR_MATRIX_SGI)
defconsti(env, "GL-COLOR-MATRIX-SGI", (GLenum) GL_COLOR_MATRIX_SGI, "GL_COLOR_MATRIX_SGI");
#endif
#if defined(GL_COLOR_MATRIX_STACK_DEPTH_SGI)
defconsti(env, "GL-COLOR-MATRIX-STACK-DEPTH-SGI", (GLenum) GL_COLOR_MATRIX_STACK_DEPTH_SGI, "GL_COLOR_MATRIX_STACK_DEPTH_SGI");
#endif
#if defined(GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI)
defconsti(env, "GL-MAX-COLOR-MATRIX-STACK-DEPTH-SGI", (GLenum) GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI, "GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_RED_SCALE_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-RED-SCALE-SGI", (GLenum) GL_POST_COLOR_MATRIX_RED_SCALE_SGI, "GL_POST_COLOR_MATRIX_RED_SCALE_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-GREEN-SCALE-SGI", (GLenum) GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI, "GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-BLUE-SCALE-SGI", (GLenum) GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI, "GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-ALPHA-SCALE-SGI", (GLenum) GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI, "GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_RED_BIAS_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-RED-BIAS-SGI", (GLenum) GL_POST_COLOR_MATRIX_RED_BIAS_SGI, "GL_POST_COLOR_MATRIX_RED_BIAS_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-GREEN-BIAS-SGI", (GLenum) GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI, "GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-BLUE-BIAS-SGI", (GLenum) GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI, "GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-ALPHA-BIAS-SGI", (GLenum) GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI, "GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI");
#endif
#if defined(GL_COLOR_TABLE_SGI)
defconsti(env, "GL-COLOR-TABLE-SGI", (GLenum) GL_COLOR_TABLE_SGI, "GL_COLOR_TABLE_SGI");
#endif
#if defined(GL_POST_CONVOLUTION_COLOR_TABLE_SGI)
defconsti(env, "GL-POST-CONVOLUTION-COLOR-TABLE-SGI", (GLenum) GL_POST_CONVOLUTION_COLOR_TABLE_SGI, "GL_POST_CONVOLUTION_COLOR_TABLE_SGI");
#endif
#if defined(GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI)
defconsti(env, "GL-POST-COLOR-MATRIX-COLOR-TABLE-SGI", (GLenum) GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI, "GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI");
#endif
#if defined(GL_PROXY_COLOR_TABLE_SGI)
defconsti(env, "GL-PROXY-COLOR-TABLE-SGI", (GLenum) GL_PROXY_COLOR_TABLE_SGI, "GL_PROXY_COLOR_TABLE_SGI");
#endif
#if defined(GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI)
defconsti(env, "GL-PROXY-POST-CONVOLUTION-COLOR-TABLE-SGI", (GLenum) GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI, "GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI");
#endif
#if defined(GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI)
defconsti(env, "GL-PROXY-POST-COLOR-MATRIX-COLOR-TABLE-SGI", (GLenum) GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI, "GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI");
#endif
#if defined(GL_COLOR_TABLE_SCALE_SGI)
defconsti(env, "GL-COLOR-TABLE-SCALE-SGI", (GLenum) GL_COLOR_TABLE_SCALE_SGI, "GL_COLOR_TABLE_SCALE_SGI");
#endif
#if defined(GL_COLOR_TABLE_BIAS_SGI)
defconsti(env, "GL-COLOR-TABLE-BIAS-SGI", (GLenum) GL_COLOR_TABLE_BIAS_SGI, "GL_COLOR_TABLE_BIAS_SGI");
#endif
#if defined(GL_COLOR_TABLE_FORMAT_SGI)
defconsti(env, "GL-COLOR-TABLE-FORMAT-SGI", (GLenum) GL_COLOR_TABLE_FORMAT_SGI, "GL_COLOR_TABLE_FORMAT_SGI");
#endif
#if defined(GL_COLOR_TABLE_WIDTH_SGI)
defconsti(env, "GL-COLOR-TABLE-WIDTH-SGI", (GLenum) GL_COLOR_TABLE_WIDTH_SGI, "GL_COLOR_TABLE_WIDTH_SGI");
#endif
#if defined(GL_COLOR_TABLE_RED_SIZE_SGI)
defconsti(env, "GL-COLOR-TABLE-RED-SIZE-SGI", (GLenum) GL_COLOR_TABLE_RED_SIZE_SGI, "GL_COLOR_TABLE_RED_SIZE_SGI");
#endif
#if defined(GL_COLOR_TABLE_GREEN_SIZE_SGI)
defconsti(env, "GL-COLOR-TABLE-GREEN-SIZE-SGI", (GLenum) GL_COLOR_TABLE_GREEN_SIZE_SGI, "GL_COLOR_TABLE_GREEN_SIZE_SGI");
#endif
#if defined(GL_COLOR_TABLE_BLUE_SIZE_SGI)
defconsti(env, "GL-COLOR-TABLE-BLUE-SIZE-SGI", (GLenum) GL_COLOR_TABLE_BLUE_SIZE_SGI, "GL_COLOR_TABLE_BLUE_SIZE_SGI");
#endif
#if defined(GL_COLOR_TABLE_ALPHA_SIZE_SGI)
defconsti(env, "GL-COLOR-TABLE-ALPHA-SIZE-SGI", (GLenum) GL_COLOR_TABLE_ALPHA_SIZE_SGI, "GL_COLOR_TABLE_ALPHA_SIZE_SGI");
#endif
#if defined(GL_COLOR_TABLE_LUMINANCE_SIZE_SGI)
defconsti(env, "GL-COLOR-TABLE-LUMINANCE-SIZE-SGI", (GLenum) GL_COLOR_TABLE_LUMINANCE_SIZE_SGI, "GL_COLOR_TABLE_LUMINANCE_SIZE_SGI");
#endif
#if defined(GL_COLOR_TABLE_INTENSITY_SIZE_SGI)
defconsti(env, "GL-COLOR-TABLE-INTENSITY-SIZE-SGI", (GLenum) GL_COLOR_TABLE_INTENSITY_SIZE_SGI, "GL_COLOR_TABLE_INTENSITY_SIZE_SGI");
#endif
#if defined(GL_TEXTURE_COLOR_TABLE_SGI)
defconsti(env, "GL-TEXTURE-COLOR-TABLE-SGI", (GLenum) GL_TEXTURE_COLOR_TABLE_SGI, "GL_TEXTURE_COLOR_TABLE_SGI");
#endif
#if defined(GL_PROXY_TEXTURE_COLOR_TABLE_SGI)
defconsti(env, "GL-PROXY-TEXTURE-COLOR-TABLE-SGI", (GLenum) GL_PROXY_TEXTURE_COLOR_TABLE_SGI, "GL_PROXY_TEXTURE_COLOR_TABLE_SGI");
#endif
#if defined(GL_UNPACK_CONSTANT_DATA_SUNX)
defconsti(env, "GL-UNPACK-CONSTANT-DATA-SUNX", (GLenum) GL_UNPACK_CONSTANT_DATA_SUNX, "GL_UNPACK_CONSTANT_DATA_SUNX");
#endif
#if defined(GL_TEXTURE_CONSTANT_DATA_SUNX)
defconsti(env, "GL-TEXTURE-CONSTANT-DATA-SUNX", (GLenum) GL_TEXTURE_CONSTANT_DATA_SUNX, "GL_TEXTURE_CONSTANT_DATA_SUNX");
#endif
#if defined(GL_WRAP_BORDER_SUN)
defconsti(env, "GL-WRAP-BORDER-SUN", (GLenum) GL_WRAP_BORDER_SUN, "GL_WRAP_BORDER_SUN");
#endif
#if defined(GL_GLOBAL_ALPHA_SUN)
defconsti(env, "GL-GLOBAL-ALPHA-SUN", (GLenum) GL_GLOBAL_ALPHA_SUN, "GL_GLOBAL_ALPHA_SUN");
#endif
#if defined(GL_GLOBAL_ALPHA_FACTOR_SUN)
defconsti(env, "GL-GLOBAL-ALPHA-FACTOR-SUN", (GLenum) GL_GLOBAL_ALPHA_FACTOR_SUN, "GL_GLOBAL_ALPHA_FACTOR_SUN");
#endif
#if defined(GL_QUAD_MESH_SUN)
defconsti(env, "GL-QUAD-MESH-SUN", (GLenum) GL_QUAD_MESH_SUN, "GL_QUAD_MESH_SUN");
#endif
#if defined(GL_TRIANGLE_MESH_SUN)
defconsti(env, "GL-TRIANGLE-MESH-SUN", (GLenum) GL_TRIANGLE_MESH_SUN, "GL_TRIANGLE_MESH_SUN");
#endif
#if defined(GL_SLICE_ACCUM_SUN)
defconsti(env, "GL-SLICE-ACCUM-SUN", (GLenum) GL_SLICE_ACCUM_SUN, "GL_SLICE_ACCUM_SUN");
#endif
#if defined(GL_RESTART_SUN)
defconsti(env, "GL-RESTART-SUN", (GLenum) GL_RESTART_SUN, "GL_RESTART_SUN");
#endif
#if defined(GL_REPLACE_MIDDLE_SUN)
defconsti(env, "GL-REPLACE-MIDDLE-SUN", (GLenum) GL_REPLACE_MIDDLE_SUN, "GL_REPLACE_MIDDLE_SUN");
#endif
#if defined(GL_REPLACE_OLDEST_SUN)
defconsti(env, "GL-REPLACE-OLDEST-SUN", (GLenum) GL_REPLACE_OLDEST_SUN, "GL_REPLACE_OLDEST_SUN");
#endif
#if defined(GL_TRIANGLE_LIST_SUN)
defconsti(env, "GL-TRIANGLE-LIST-SUN", (GLenum) GL_TRIANGLE_LIST_SUN, "GL_TRIANGLE_LIST_SUN");
#endif
#if defined(GL_REPLACEMENT_CODE_SUN)
defconsti(env, "GL-REPLACEMENT-CODE-SUN", (GLenum) GL_REPLACEMENT_CODE_SUN, "GL_REPLACEMENT_CODE_SUN");
#endif
#if defined(GL_REPLACEMENT_CODE_ARRAY_SUN)
defconsti(env, "GL-REPLACEMENT-CODE-ARRAY-SUN", (GLenum) GL_REPLACEMENT_CODE_ARRAY_SUN, "GL_REPLACEMENT_CODE_ARRAY_SUN");
#endif
#if defined(GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN)
defconsti(env, "GL-REPLACEMENT-CODE-ARRAY-TYPE-SUN", (GLenum) GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN, "GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN");
#endif
#if defined(GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN)
defconsti(env, "GL-REPLACEMENT-CODE-ARRAY-STRIDE-SUN", (GLenum) GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN, "GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN");
#endif
#if defined(GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN)
defconsti(env, "GL-REPLACEMENT-CODE-ARRAY-POINTER-SUN", (GLenum) GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN, "GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN");
#endif
#if defined(GL_R1UI_V3F_SUN)
defconsti(env, "GL-R1UI-V3F-SUN", (GLenum) GL_R1UI_V3F_SUN, "GL_R1UI_V3F_SUN");
#endif
#if defined(GL_R1UI_C4UB_V3F_SUN)
defconsti(env, "GL-R1UI-C4UB-V3F-SUN", (GLenum) GL_R1UI_C4UB_V3F_SUN, "GL_R1UI_C4UB_V3F_SUN");
#endif
#if defined(GL_R1UI_C3F_V3F_SUN)
defconsti(env, "GL-R1UI-C3F-V3F-SUN", (GLenum) GL_R1UI_C3F_V3F_SUN, "GL_R1UI_C3F_V3F_SUN");
#endif
#if defined(GL_R1UI_N3F_V3F_SUN)
defconsti(env, "GL-R1UI-N3F-V3F-SUN", (GLenum) GL_R1UI_N3F_V3F_SUN, "GL_R1UI_N3F_V3F_SUN");
#endif
#if defined(GL_R1UI_C4F_N3F_V3F_SUN)
defconsti(env, "GL-R1UI-C4F-N3F-V3F-SUN", (GLenum) GL_R1UI_C4F_N3F_V3F_SUN, "GL_R1UI_C4F_N3F_V3F_SUN");
#endif
#if defined(GL_R1UI_T2F_V3F_SUN)
defconsti(env, "GL-R1UI-T2F-V3F-SUN", (GLenum) GL_R1UI_T2F_V3F_SUN, "GL_R1UI_T2F_V3F_SUN");
#endif
#if defined(GL_R1UI_T2F_N3F_V3F_SUN)
defconsti(env, "GL-R1UI-T2F-N3F-V3F-SUN", (GLenum) GL_R1UI_T2F_N3F_V3F_SUN, "GL_R1UI_T2F_N3F_V3F_SUN");
#endif
#if defined(GL_R1UI_T2F_C4F_N3F_V3F_SUN)
defconsti(env, "GL-R1UI-T2F-C4F-N3F-V3F-SUN", (GLenum) GL_R1UI_T2F_C4F_N3F_V3F_SUN, "GL_R1UI_T2F_C4F_N3F_V3F_SUN");
#endif
#if defined(GL_SHADER_BINARY_VIV)
defconsti(env, "GL-SHADER-BINARY-VIV", (GLenum) GL_SHADER_BINARY_VIV, "GL_SHADER_BINARY_VIV");
#endif
#if defined(GL_PHONG_WIN)
defconsti(env, "GL-PHONG-WIN", (GLenum) GL_PHONG_WIN, "GL_PHONG_WIN");
#endif
#if defined(GL_PHONG_HINT_WIN)
defconsti(env, "GL-PHONG-HINT-WIN", (GLenum) GL_PHONG_HINT_WIN, "GL_PHONG_HINT_WIN");
#endif
#if defined(GL_FOG_SPECULAR_TEXTURE_WIN)
defconsti(env, "GL-FOG-SPECULAR-TEXTURE-WIN", (GLenum) GL_FOG_SPECULAR_TEXTURE_WIN, "GL_FOG_SPECULAR_TEXTURE_WIN");
#endif
